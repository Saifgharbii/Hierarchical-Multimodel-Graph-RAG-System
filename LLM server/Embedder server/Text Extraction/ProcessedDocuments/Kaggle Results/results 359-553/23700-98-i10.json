{
    "document_name": "23700-98-i10.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Report has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\nIn the present document, modal verbs have the following meanings:\nshall\t\tindicates a mandatory requirement to do something\nshall not\tindicates an interdiction (prohibition) to do something\nThe constructions \"shall\" and \"shall not\" are confined to the context of normative provisions, and do not appear in Technical Reports.\nThe constructions \"must\" and \"must not\" are not used as substitutes for \"shall\" and \"shall not\". Their use is avoided insofar as possible, and they are not used in a normative context except in a direct citation from an external, referenced, non-3GPP document, or so as to maintain continuity of style when extending or modifying the provisions of such a referenced document.\nshould\t\tindicates a recommendation to do something\nshould not\tindicates a recommendation not to do something\nmay\t\tindicates permission to do something\nneed not\tindicates permission not to do something\nThe construction \"may not\" is ambiguous and is not used in normative elements. The unambiguous constructions \"might not\" or \"shall not\" are used instead, depending upon the meaning intended.\ncan\t\tindicates that something is possible\ncannot\t\tindicates that something is impossible\nThe constructions \"can\" and \"cannot\" are not substitutes for \"may\" and \"need not\".\nwill\t\tindicates that something is certain or expected to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nwill not\t\tindicates that something is certain or expected not to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nmight\tindicates a likelihood that something will happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nmight not\tindicates a likelihood that something will not happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nIn addition:\nis\t(or any other verb in the indicative mood) indicates a statement of fact\nis not\t(or any other negative verb in the indicative mood) indicates a statement of fact\nThe constructions \"is\" and \"is not\" do not indicate requirements.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "Introduction",
            "description": "Rel-17 TS 23.558 [2] defines the application layer architecture to enable edge applications over 3GPP networks. It includes features such as ECS discovery, service provisioning, EAS discovery, EEC/EAS/EES registration, network and Edge Enabler Layer capability exposure, service continuity support with seamless service continuity and EEC context continuity etc. along with cardinality rules, deployment options, involved relationships and mapping with ETSI MEC [3] and GSMA OP [4] architectures.\nThis TR documents a study on architecture and procedure enhancements to improve the Rel-17 architecture for enabling edge applications, and to support emerging industry requirements.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document is a technical report capturing the study on enhanced architecture for enabling edge applications over 3GPP networks. The study bases the enhancements on the work done in 3GPP TS 23.558 [2] and takes into consideration other related work done within and outside 3GPP i.e. ETSI MEC [3] and GSMA OP [4].\nThe aspects of the study include identifying new key issues, architecture requirements, related architecture enhancements and solutions, cardinality rules, deployment options, and involved entities and relationships to enhance the Rel-17 architecture for enabling edge applications.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TR 23.558: \"Architecture for enabling Edge Applications\".\n[3]\tETSI ISG MEC ETSI GS MEC 003, \"Multi-access Edge Computing (MEC); Framework and Reference Architecture\".\n[4]\tGSMA OPG.02: \"Operator Platform Telco Edge Requirements\", https://www.gsma.com/futurenetworks/resources/gsma-operator-platform-telco-edge-requirements-2022\n[5]\t3GPP TS 23.501: \"System Architecture for the 5G System; Stage 2\".\n[6]\t3GPP TR 23.758: \"Study on application architecture for enabling Edge Applications\".\n[7]\t3GPP TR 23.721: \"Study on Sponsored Data Connectivity Improvements\".\n[8]\t3GPP TS 23.502: \"Procedures for the 5G System; Stage 2\".\n[9]\t3GPP TS 23.203: \"Policies and Charging control architecture; Stage 2\".\n[10]\t3GPP TS 23.682: \"Architecture enhancements to facilitate communications with packet data networks and applications\".\n[11]\t3GPP TS 23.503: \"Policies and Charging control architecture; Stage 2\".\n[12]\t3GPP TS 22.261: \"Service requirements for the 5G system; Stage 1\".\n[13]\tETSI GS MEC 010-2: \"Multi-access Edge Computing (MEC); MEC Management; Part 2: Application lifecycle, rules and requirements management\".\n[14]\tETSI GS MEC 011 v3.0.5: \"Multi-access Edge Computing (MEC); Edge Platform Application Enablement\".\n[15]\tETSI GS MEC 001: \"Multi-access Edge Computing (MEC); Terminology \".\n[16]\t3GPP TS 23.222: \"Common API Framework for 3GPP Northbound APIs; Stage 2\".\n[17]\t3GPP TS 29.522: \"Network Exposure Function Northbound APIs; Stage 3\".\n[18]\t3GPP TS 29.122: \"T8 reference point for Northbound APIs\".\n[19]\t3GPP TS 23.548: \"5G System Enhancements for Edge Computing; Stage 2\".\n[20]\t3GPP TS 28.538: \"Management and orchestration; Edge Computing Management\".\n[21]\t3GPP TR 22.944: \"Report on service requirements for UE functionality split\".\n[22]\tETSI GS MEC 021 V2.2.1 (2022-00), \"Multi-access Edge Computing (MEC); Application Mobility Service API\".\n[23]\t3GPP TS 23.434: \"Service Enabler Architecture Layer for Verticals (SEAL); Functional architecture and information flows\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions of terms, symbols and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tTerms",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms given in 3GPP TR 21.905 [1], 3GPP TS 23.558 [2] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in 3GPP TR 21.905 [1] and 3GPP TS 23.558 [2].\nCloud data network:  A data network having a set of servers deployed in a central place and capable of serving UEs from wider coverage area, as opposed to the edge data network.\nPrimary ECS: An ECS whose address information is configured with the EEC. EEC is authorized to communicate with the Primary ECS directly.\nNOTE:\tThe term ‘Primary ECS’ can be replaced with ‘Configured ECS’ during the normative phase.\nPrimary ECSP: An ECSP for which the UE has authorization to obtain service.\nPartner ECS: A federation partner of the Primary ECS. EEC is not configured with the address information of Partner ECSs.\nPartner ECSP: An ECSP with whom the Primary ECSP has a service level agreement for resource sharing i.e. a federation partner of the Primary ECSP.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tSymbols",
                    "description": "",
                    "summary": "",
                    "text_content": "None.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.3\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in 3GPP TR 21.905 [1], 3GPP TS 23.558 [2] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in 3GPP TR 21.905 [1] and 3GPP TS 23.558 [2].\nADAES\tApplication Data Analytics Enablement Services\nAEF\tAPI Exposing Function\nAMBR\tAggregate Maximum Bit Rate\nAMF\tAPI Management Function\nAPF\tAPI Provider Function\nAPN\tAccess Point Name\nAPNS\tApple Push Notification Service\nBS\tBinding Server\nCAAR\tCentral AC Association Repository\nCAPIF\tCommon API Framework\nCAS\tCloud Application Server\nCBS\tCentral Binding Server\nCCF\tCAPIF Core Function\nCES\tCloud Enabler Server\nEDGEAPP\tEdge Application\nEHE\tEdge Hosting Environment\nENS\tEdge Notification Server\nER\tEdge Repository\nETSI\tEuropean Telecommunications Standards Institute\nFCM\tFirebase Cloud Messaging\nHR\tHome Routed\nKI\tKey Issue\nLBO\tLocal Break Out\nLCM\tLife Cycle Management\nMANO\tMANagement and Orchestration\nMEC\tMulti-access Edge Computing\nMECAPP\tMEC Application\nMEP\tMEC Platform\nMEF\tMEC Federator\nNAT\tNetwork Address Translators\nNFV\tNetwork Function Virtualization\nNSSAI\tNetwork Slice Selection Assistance Information\nNWDAF\tNetwork Data Analytics Function\nOAM\tOperations, Administration and Management\nOMA\tOpen Mobile Alliance\nPCF\tPolicy Control Function\nPFD\tPacket Flow Description\nPSA\tPDU Session Anchor\nRFSP\tRAT/Frequency Selection Priority\nSEAL\tService Enabler Layer Architecture\nSMF\tSession Management Function\nUDM\tUser Data Management\nURSP\tUE Route Selection Policy\nUUID\tUniversally Unique IDentifier\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tKey issues",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "4.1\tKey issue #1: Enhanced notification service to the EEC",
                    "description": "",
                    "summary": "",
                    "text_content": "The EEC can be notified with the updated information for edge computing service by EES and ECS over EDGE-1 and EDGE-4, respectively. The notification services available to the EEC (i.e. service provisioning notification, EAS discovery notification, ACR information notification) are specified in release 17, but the details on the notification mechanism is not addressed. In this regard, additional ways (e.g. push notification mechanism and application triggering specified in 3GPP TS 23.501 [5], etc.) of providing the updates to the EEC in real time need to be studied.\nOpen issues:\n1.\tWhether and how the EEC acquires the notification target address or a notification channel URI to receive the notifications?\n2.\tWhether and how EEC, ECS and EES support push notification mechanism. Whether and what additional functional entity is necessary for this?\n3.\tHow are the EEC subscriptions and/or notification targets treated in mobility scenario (e.g. during ACR scenario)?\n4.\tWhether and how to utilize application triggering method specified in 3GPP TS 23.501 [5] to provide notifications to the EEC?\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.2\tKey issue #2: Enablement of Service APIs exposed by EAS",
                    "description": "",
                    "summary": "",
                    "text_content": "As specified in 3GPP TS 23.558 [2] (Rel-17), the Edge Enabler Layer exposes Service APIs towards the EASs. The exposed Service APIs include the capabilities provided by EES as specified in the clause 8.6 of 3GPP TS 23.558 [2] (Rel-17) and the capabilities provided by the 3GPP core network as specified in the clause 8.7 of 3GPP TS 23.558 [2] (Rel-17).\nHowever, there are several use cases and requirements to exploit Service APIs exposed by EASs (provided by Application service providers) which can be invoked by the other EASs such as Cloud/Edge/Split Rendering in AR/VR use cases; and video content delivery exploiting separate services such as content caching, video encoding/decoding, and video analytics.\nWith the enablement of Service APIs exposed by EASs in the Edge Enabler Layer, there may expect several benefits to the involved business roles in the edge computing services. For example, Application service providers may simplify the Edge Application logic by composing the service components provided by the other EASs at the network edge; and open a new business to provide one or more service components to be executed and invoked by the other EASs at the network edge.\nIn order to enable the use of Service APIs exposed by EASs in the Edge Enabler Layer, there have been relevant studies in 3GPP TR 23.758 [6] (Rel-17), which result in Sol#15 as follows:\n-\tSolution #15: Edge Application Server's service APIs publish and discovery using CAPIF:\n-\tThe Edge Enabler Server can support edge application (owned by 3rd party or by PLMN operator) access to the service APIs offered by other Edge Application Servers within and across the Edge Data Network by providing CAPIF functions in a distributed or centralized manner.\nBased on the Rel-17 study result, this key issue focuses on addressing the following open issues.\nOpen issues:\n1.\tIdentify any gaps in CAPIF to enable EAS Service APIs in the EDGEAPP architecture based on the Sol#15 of 3GPP TR 23.758 [6] (Rel-17).\n-\tIn terms of e.g. service-specific attributes for API publish/discovery, API availability subscription/notification across EES/CCF\n2.\tIf any, whether and how to enhance CAPIF capabilities to address the gap identified as above?\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.3\tKey issue #3: Enhancements to service continuity planning",
                    "description": "",
                    "summary": "",
                    "text_content": "In 3GPP TS 23.558 [2], the service continuity planning was specified as part of the Edge Enabler Layer value-add features for supporting seamless service continuity, when information about planned, projected, or anticipated behaviour is available at EESs or provided by EECs.\nThis key issue studies potential enhancements to the service continuity planning feature, based on additional criteria for detecting a planned ACR, e.g. the network conditions / analytics monitoring, the DN performance monitoring, the expected/predicted UE route etc. This key issue also studies potential enhancements to the service continuity planning feature to allow the EEC to send a timely ACR request. Finally, the key issue studies scenarios when the planned UE behavior changes after the launch of the service and the ACR needs to be modified due to these changes, e.g. due to UE mobility change.\nOpen Issues:\n1.\tHow to rely on the capability of EES/EEC to detect whether the UE moves to the predicted location or not for service continuity planning?\n2.\tWhether and how the EEL can support the determination of the ACR request trigger timing in case of service continuity planning?\n3.\tHow to deal with scenarios when the ACR needs to be modified, e.g. due to UE mobility?\n4.\tWhether and what additional capability exposure is required from the 5GS (e.g. NWDAF, OAM) to enhance the service continuity planning?\n5.\tPotential impact on information exchanged between EAS and EEL.\n6.\tPotential impact on information to communicate within the EEL.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.4\tKey issue #4: EDGE-5",
                    "description": "",
                    "summary": "",
                    "text_content": "According to the latest version of the EDGEAPP specification in 3GPP TS 23.558 [2]:\n\"EDGE-5 reference point enables interactions between AC(s) and the EEC.\"\nThat specification also notes:\n\"NOTE:\tDetailed specification of this reference point is out of scope of this release of this specification.\"\nAccording to the latest version of the FS_EDGEAPP specification in 3GPP TR 23.758 [6]:\n\"The interactions between Application Client(s) and the Edge Enabler Client in the UE are supported by the EDGE-5 reference point. This reference point supports:\n-\tObtaining information about Edge Application Servers that Application Client require to connect;\n-\tNotifications about events related to the connection between Application Clients and their corresponding Edge Application Servers, such as: when an Application Client needs to reconnect to a different Edge Application Server;\n-\tProviding Application Client information (such as its profile) to be used for various tasks such as, identifying the appropriate Edge Application Server instance to connect to; and\n-\tProvide the identity of the desired Edge Application Server to the Edge Enabler Client to enable it to use that identity as a filter when requesting information about Edge Application Servers.\"\nThe necessary functionality of the EDGE-5 interface needs to be studied for Release 18:\n-\tWhat functionality should an EEC provide to an AC (see the interactions copied from 3GPP TR 23.758 [6] and the procedures and information flows specified in 3GPP TS 23.558 [2])?\nThe following aspects may also need to be studied for Release 18 based upon the provided functionality of the EDGE-5 interface:\n1.\tWhether the cardinality as currently captured in 3GPP TS 23.558 [2] is to be modified:\n\"The following cardinality rules apply for EDGE-5:\na)\tOne AC may communicate with only one EEC; and\nb)\tOne EEC may communicate with one or more AC(s) concurrently.\"\n2.\tWhether and how an AC can discover available EEC(s)?\n3.\tWhether mutual authentication and authorization between an AC and an EEC is necessary, and if so, how is that accomplished?\n4.\tWhat APIs should be exposed from an EEC to an AC to support that functionality?\n5.\tWhether a notification mechanism is necessary from an EEC to an AC?\n6.\tWhether and how an AC registers to an EEC?\n7.\tWhether and how an AC de-registers from an EEC?\n8.\tWhether and how an AC detects an abnormal termination of an EEC?\n9.\tWhether and how an EEC detects an abnormal termination of an AC?\n10.\tWhether user's consent is necessary to either AC or EEC operation, and if so, how is it provided?\n11.\tWhether and how can EDGE-5 support constrained devices with limited capabilities (such as a terminal equipment as defined in TR 21.905) over EDGE-5? One use case may include, for example TE (terminal equipment) has a role of edge device such as AI cameras for object detections or IoT sensors and UE has a role of gateway such as IoT gateway, if UE is vehicle or robotic surgery equipment to operate on a patient. In that case, constrained devices may be connected in large numbers to UE.\nNOTE 1:\tThe aspects of defining end-user consent/authorization over APIs and aspects of mutual authentication and authorization between an AC and an EEC are in the scope of SA3.\nNOTE 2:\tThe aspects of the usage of end-user consent/authorization over APIs is in the scope of SA6.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.5\tKey issue #5: Alignment of EDGEAPP and ETSI MEC",
                    "description": "",
                    "summary": "",
                    "text_content": "As described in Annex C of 3GPP TS 23.558 [2] (Rel-17), both EDGEAPP and ETSI MEC can provide support for hosting different edge applications. According to Annex C: \"Both EAS and MEC application are application servers and can provide similar application specific functionalities. EAS utilizes the services of EES as specified in this document whereas MEC application utilizes the services provided by MEC platform as specified in ETSI GS MEC 003.\" As discussed in Annex B.2 of draft GS MEC 003 [3] (v3.0.4), the EES and MEC platform can also be collocated in an implementation.\nWhile the 3GPP TS 23.558 [2] and ETSI GS MEC 003 [3] provide an initial view about the alignment of the two platforms, this KI intends to address the following:\n1.\tStudy and analyse different deployment options of EDGEAPP and ETSI MEC platforms.\n2.\tFunctional architecture and gap analysis between EDGEAPP and ETSI MEC to determine complementary and possibly overlapping APIs and other related functionalities. Annex A captures a comparison of the architectures to facilitate the gap analysis.\n3.\tRecommendation and enhancements based upon the outcome of (1) and (2).\nNOTE 1:\tBackward compatibility is an important aspect of any recommendations & enhancements and will be considered during the study of this KI.\nNOTE 2: This KI is limited to alignment aspects within 3GPP capabilities.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.6\tKey issue #6: Edge services support across ECSPs",
                    "description": "",
                    "summary": "",
                    "text_content": "An edge service or an EAS (e.g. V2X server) can be provided via different EDNs deployed by different ECSPs. Each ECSP may not have the required infrastructure to install the EAS in every EDN due to financial, regulatory and operation constraints. It is assumed that a UE can access the same edge service served by different EASs which are registered to different EESs and deployed by different ECSPs, which have a service level agreement to share edge services. These ECSPs can deploy EESs to serve different PLMNs or different coverages of the same PLMN. A typical scenario is depicted in Figure 4.6-1.\nThe figure depicts various EAS (Electronic Access Control) deployments by different Electronic Component Service Providers (ECSPs), showcasing the diversity and complexity of the security solutions in the market.\nFigure 4.6-1 EAS deployed by different ECSPs\nIn Figure 4.6-1, the EAS2 resident in EDN1 and EDN2 provides the same service. The UE may be configured with the ECS1 configuration information (e.g. if the UE is a subscriber of ECSP_1). It is not clear how to provision the ECS2 configuration information, deployed by ECSP_2 (a partner of ECSP_1), to the UE when the UE is out of the service area of EAS2 in ECSP1 and cannot find a suitable EES within ECSP1 to discover and connect to EAS2.  The same issue exists when EAS2 becomes unavailable due to other reasons, e.g. overload, or in cases where ECSP_1 does not deploy EAS2 at all and relies on partner ECSP_2 to provide the edge service.\nBesides, the UE may have already accessed the EAS2 in the EDN1 and is getting service from that EAS. In that case, it is not clear how to support service continuity due to UE mobility when the UE moves out of the service area of the EAS2 in EDN1 and goes to the service area of the EAS2 in EDN2.\nFurthermore, the target EDN and source EDN are operated by different ECSP which may not have SLA with each other, then the S-EES may not be able to communicate with a T-EES (discovered from ECS) due to lack of SLA. Unfortunately, in Rel17 this failure may only be detect upon EDGE-9 interaction.\nThe following study is needed:\n1.\tIdentify potential enhancements to the existing architecture defined in Rel-17 to enable inter-ECSP interactions.\n2.\tStudy potential impact to support ECS discovery and service provisioning based on UE location.\n3.\tWhether and how EEC registers with an EES deployed by a partner ECSP?\n4.\tStudy potential impact to support service continuity.\n5.\tHow is EEC context continuity maintained across ECSPs with or without ACR?\n6.\tHow the ECS can discover a T-EES having SLA with S-EES based on the federation agreements between ECSPs before EDGE-9 interaction?\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.7\tKey issue #7: Application traffic filter exposure",
                    "description": "",
                    "summary": "",
                    "text_content": "3GPP TS 23.558 [2] has specified EDGE-3 exposure with different APIs. The session with QoS API provides the capability for the EAS to influence the QoS for the application traffic via EES. The ACR management event API supports \"User plane path change\", \"ACR monitoring\" and \"ACR facilitation\" and all events support to detect user plane path change for the application traffic.\nThe current definition of session with QoS API and ACR management event API only supports simple IP flow description. E.g. in 3GPP TS 23.558 [2], table 8.6.6.3.2-1 IP flow description identifies the application traffic by 3 or 5 tuples.\nTable 8.6.6.3.2-1: Session with QoS create request\n\nOnly supporting IP flow description in EDGE-3 exposure APIs is not enough. EPS already supported the application traffic (e.g. encrypted application traffic) detection by more filters than IP flow description for the application (e.g. considering in Rel-14 study 3GPP TR 23.721 [7]) and more traffic filters are supported via PFD management procedure as described in 3GPP TS 23.682 [10] and 3GPP TS 23.203 [9], and such capability is also supported in 5GS in 3GPP TS 23.502 [8] and 3GPP TS 23.503 [11] correspondingly. The EEL should provide the same level of traffic filter for identifying the application traffic.\nOpen issues:\n1.\tHow to support more application traffic filter for session with QoS API.\n2.\tHow to support more application traffic filter for ACR management event API.\n",
                    "tables": [
                        {
                            "description": "Table 8.6.6.3.2-1: Session with QoS create request",
                            "table number": 3,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.8\tKey issue #8: EAS selection synchronization",
                    "description": "",
                    "summary": "",
                    "text_content": "Currently, EAS discovery may result in multiple EASs being discovered for a specific AC. The discovery request may trigger at the EES operations such as dynamic instantiation (3GPP TS 23.558 [2] clause 8.12). However, the EEC may select only one or some of the discovered EASs to enable AC communications or may not begin communications right after a discovery. For a discovered but unselected EAS, operations such as EAS instantiation or state change are unnecessary and inefficient,\nFrom a different perspective, the registration procedure results in EEC context establishment at EES, with associated service session management. The EES process for determining EAS selection for service sessions is not specified, and there is no method to synchronize this information with the EEC. Moreover, following a registration the EEC does not have EAS endpoint information which could be leveraged for initiating service sessions, although the registration results in reservation of resources in the EDN.\nIn another case, many IoT devices are configured for bursty communications at large intervals of time, without service continuity requirements and with many semi-static (e.g. provisioned over-the-top) parameters. For example, a set of EASs may be maintained at the EEC with the expectation of providing signalling optimizations. However, this EEC information cannot be currently leveraged by the system as intended.\nWhile basic edge functionality can be enabled assuming ideal implementations of an algorithm through which the EES determines that a registered EAS is providing services to an AC, inefficiencies in EAS capability use and enabling service session functionality immediately after registration remain. Hence, it is required to study:\n1.\tHow to enable the EES to accurately determine the EAS(s) capabilities needed by EEC for service sessions in order to perform optimal EAS instantiation operations.\n2.\tWhether and how the service session communications between ACs and EASs can be enabled by the EEC as soon as the EDN capabilities are available after registration.\n3.\tWhether and how to enable the EES to leverage pre-existent EAS information at the EEC in order to enable service session communications efficiently for IoT devices.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.9\tKey issue #9: Enhancement of dynamic EAS instantiation triggering",
                    "description": "",
                    "summary": "",
                    "text_content": "In order to ensure efficient utilization of EDN resources for EAS deployment, it should be possible to have the proper number of EAS instances in the EDN to accommodate the load for applications. The dynamic EAS instantiation triggered by the EES is supported in release 17, but further details are not addressed. The EES may invoke EAS dynamic instantiation triggering to the EAS management system, e.g. for considering the service load/capacity of EAS (e.g. number of service session); and for considering the EEC's requesting service characteristics (e.g. location, latency). In this regard, the followings need to be studied further.\nOpen issues:\n1.\tWhat kind of information can be acquired by edge enabling layer and utilized by an EES to decide to trigger dynamic EAS instantiation and which entities can provide such information to an EES\n2.\tWhether and how to support dynamic EAS termination triggering in order to enable dynamic scaling of EAS (i.e. scale in as needed).\nNOTE:\tThe aspects of the interaction between EES and EAS management system is in the scope of SA5.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.10\tKey issue #10: Support for roaming UEs",
                    "description": "",
                    "summary": "",
                    "text_content": "When a UE is roaming in VPLMN, EDN configuration information for edge computing service in VPLMNs may not be available at all ECS deployed in HPLMN (termed H-ECS. The EEC in the UE thus needs to obtain information for V-ECSs (ECS available in VPLMN) to obtain service provisioning information in VPLMN based on the business relationship between HPLMN operator, VPLMN operator, and related ECSP(s).\nIn one scenario, the EEC in the roaming UE needs to discover the availability of edge computing services via ECS(s) available in VPLMN.\nIn Rel-17, ECS discovery based on VPLMN ID addressed in clause 8.3.2 of 3GPP TS 23.558 [2] do not cover some cases, e.g. when there are multiple available ECSs via the VPLMN for the roaming UE. Therefore, it is required to study ECS discovery in VPLMN and subsequent service provisioning for all relevant deployment models.\nAdditionally, it is required to clarify how an EEC hosted in the roaming UE can be authenticated and authorized to access the edge computing services available in the VPLMN. The related requirement is described in GSMA OPG as follows: \"Access of roaming subscribers to edge applications in the visited network shall be subject to authorisation by the subscriber's Home OP and the Visited OP\". Note that EEC authentication/authorization in Rel-17 is not clarified in roaming situation. It is thus required to study the architectural support necessary for SA3-defined procedures for EEC authentication/ authorization in roaming scenarios.\nThe following aspects shall be studied to support roaming UEs:\n1.\tRoaming-related deployment scenarios (if any) to be supported, and which may be differentiated by: (i) the relationship between the ECS provider and the PLMN operators, (ii) whether connectivity to an ECS can be established in both involved PLMNs.\n2.\tHow the EEC in the roaming UE knows the availability of ECS(s) and/or EES(s) and discovers them in the VPLMN?\n3.\tWhether and how edge computing service continuity is supported when transitioning between an HPLMN and VPLMN.\n4.\tHow to support authentication and authorization for an EEC hosted in the roaming UE.\n5.\tWhether and how to support topology hiding on inter-PLMN/ECSP interfaces on the edge enabler layer.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.11\tKey issue #11: ACR between EAS and Cloud Application Server",
                    "description": "",
                    "summary": "",
                    "text_content": "When a UE moves to a new location, different EASs or Cloud Application Server (CAS) can be more suitable for serving the ACs in the UE. Such transitions can result from a non-mobility event also, requiring support to maintain the continuity of the service.\nThis key issue is to support service continuity for ACs in the UE to minimize service interruption while switching the application server between Edge and Cloud. To support service continuity, the application context is transferred between EAS and CAS.\nRel-17 Edge Computing work is limited to the service continuity between the EAS(s) and identified several scenarios for service continuity. Detailed study is required to enable service continuity between EAS and CAS, covering the following open issues:\n1.\tWhether and how to detect that ACR is required between EAS and CAS\n2.\tWhether and how to decide that ACR is required between EAS and CAS\n3.\tWhether and how to perform ACR between EAS and CAS\n4.\tWhether and how to perform post ACR actions\n5.\tWhether EEL is required on the cloud deployment and what are the potential impacts to the CAS architecture\n6.\tWhether and what are the impacts of CAS initiated ACR.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.12\tKey issue #12: EEL service differentiation",
                    "description": "",
                    "summary": "",
                    "text_content": "The service differentiation in Rel-17 is very general and not detailed (e.g. ECS use local policy to determine service provisioning).  Details to enable an ECSP to provide different service quality levels should be specified. Such as a principle based on the role of service consumer. For example, a premium user must get the nearest available edge, or there should be certain applications available only to the premium users and so on.\nOpen issues:\n-\tWhat service differentiation should be enabled by the EEL?\n-\tWhich procedure should be enhanced to support service differentiation?\n-\tWhich functional entity is responsible for defining or managing the service differentiation?\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.13\tKey issue #13: Edge enabler layer support for EAS synchronization",
                    "description": "",
                    "summary": "",
                    "text_content": "It is possible for the ASP to provide EAS (with same service) in different EDNs. For example, a gaming service provider may have deployed game servers in different EDNs to serve its users. It is required for an EAS to synchronize the particular communication session among other EAS(s). In figure 4.13-1, consider:\n1)\ta multi-user gaming session-1 is active between 5 gaming users where 2 users are in EDN1 served by EAS-1X (ASP1), while other 3 users are in EDN2 served by EAS-2X (ASP1);\n2)\tat same time (when gaming session-1 is active), another gaming session-2 is also active between different set of users, where some users are in EDN2 served by EAS-2X (ASP1), while other users are in EDN3 served by EAS-3X (ASP1).\nIt is required for EAS(s) to synchronize among each other for specific communication session (e.g. multi-user game session) in order to serve the users properly. It is required to study how Edge enabler layer can support EAS from EDN1 to find other EAS(s) in other EDN(s) to synchronize with.\nThe figure depicts a 13-1 EAS (Enhanced Automatic Switching) deployment by the same ASP (Automatic Switching Platform) in different Ethernet Distribution Network (EDN) environments. The figure illustrates the network's structure, including the EAS, the same ASP, and the different EDNs.\nFigure 4.13-1 EAS (with same service) deployed by same ASP in different EDNs\nFurther, referring to 3GPP TS 23.558 Annex A.4, the application architecture supports SEAL application server functions and Application Enabler Server functions available at the edge. While SEAL application server functions can be made available as an EAS at the edge, it is also possible that certain SEAL application server functions are available either or both at the edge and at the cloud. When the server functions of an application are available both at the edge and at the cloud, there may be a need for interaction between the two corresponding application servers.\nThis key issue is to support interaction between the two application server functions deployed at the edge or both at the edge and at the cloud.\nOpen issues:\n1)\tWhether and how to enable EAS to find other EAS(s) with multi-user communication session to synchronize?\n2)\tWhether and how to enable EAS to find other interested EAS(s) with specific service to synchronize?\n3)\tWhether and how to enable EAS to discover and interact with another application server function deployed on the cloud for context synchronization?\n4)\tWhether and how edge enabler layer could provide support to EAS synchronization?\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.14\tKey issue #14: Application traffic influence for initially selected EAS",
                    "description": "",
                    "summary": "",
                    "text_content": "The application traffic is between the AC and EAS and 3GPP CN provides the underlying connectivity for the application traffic. The EEC starts with EAS discovery first in order to offer EAS(s) to AC to start communication with the initially selected EAS. Later on, if the EAS relocation criteria is met, the EAS relocation procedure happens, which consists of EAS discovery, application traffic influence, application context transfer and AC communication with the new EAS.\nCurrently, it is not clear in the specification how to influence the application traffic with best optimal user plane routing when initial EAS discovery is completed in the application layer.\nOpen issues:\n-\tWhether and how the EEL can be involved to influence the application traffic routing in AC communication with the initially selected EAS.\n-\tWhether and how EEL configuration information that may influence application traffic routing.\n-\tWhich entities can configure or provide information for application traffic influence routing.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.15\tKey issue #15: Support of constrained devices for Edge",
                    "description": "",
                    "summary": "",
                    "text_content": "Energy efficiency requirements are relevant for battery driven low-power IoT devices. Those devices may require edge computing services in a local DN for low-latency and employ the SA6 specified edge enablers.\nClause 6.15 of 3GPP TS 22.261 [12] has provided requirements for energy efficiency for devices, for instance: the 5G system shall support UEs using small rechargeable and single coin cell batteries; and shall support mechanisms to improve battery life for a UE over what is possible in EPS.\nIn the existing EDGEAPP architecture as described in TS 23.558 [2], many procedures and services are defined for EEC to interaction with EES/ECS. It is needed to study what impact the support for constrained UE may have on EDGEAPP architecture and what procedure can be improved.\nOpen issues:\n-\tWhether there are any impacts on the EDGEAPP architecture for constrained UE.\n-\tWhether and how the existing EDGEAPP architecture and procedures, for constrained UE to network communication (i.e. EDGE-1 and EDGE-4), e.g. can be improved to reduce power consumption.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.16\tKey issue #16: support of NAT deployed within the edge data network",
                    "description": "",
                    "summary": "",
                    "text_content": "In operational deployments of cloud infrastructures including at the edge, Network Address Translation (NAT) are oftentimes deployed.\nSuch an operational constraint will prevent the EES to have an IP address of the UE that is known by the underlying 3GPP network.\nOpen issue:\n-\tHow the EES can access 3GPP network services pertaining to a UE when the edge data network employs Network Address Translators (NATs).\n-\tHow AF specific and temporary UE IDs can be managed at the Edge Enabler Layer?\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.17\tKey issue #17: Discovery of a common EAS",
                    "description": "",
                    "summary": "",
                    "text_content": "An ASP can deploy several EASs providing the same service in different locations within the EDN.\nFor certain use cases involving real-time communication in a multi-user session, both between AC and EAS and between different ACs via the EAS, it may be necessary or beneficial to use services from a single common EAS to meet the strict latency requirements and to avoid the need for inter-EAS synchronization. The use cases may include, for example, a team of robots coordinating together on a manufacturing floor, a team of surgeons using VR headsets and robotic surgery equipment to operate together on a patient, or a group of trucks using V2X for platooning.\nDependent on the use case, the EEL may apply different additional criteria to determine this common EAS. E.g. it could be desirable to determine the EAS so that the latency for all the ACs in the session is approximately the same or that the latency for a specific AC is minimized.\n\nThe figure depicts a network with multiple EAS (Emergency Alert System) devices deployed in different locations within an Emergency Distribution Network (EDN). The devices are shown in various locations, with some being closer to the edge of the network and others more centralized. The figure illustrates the distribution of EAS devices and their potential impact on the network's performance.\nFigure 4.17-1 Several EASs (with same service) deployed in different locations in the same EDN\nOpen issues:\n1)\tWhether and how the ACs/EECs of different users can select or be provisioned the same EAS within an EDN?\nNOTE:\tThis open issue is dealing with the issue how different EECs can perform EAS discovery so that they select the same EAS within an EDN, whereas KI#13 is dealing with the issue how, after different EECs have selected different EASs located in different EDNs, these EASs can synchronize their contexts.\n2)\tWhether and how the ACs/EECs of different users can select or be provisioned a common EAS, even if initially the EECs are communicating with different EDNs?\n3)\tWhether and how the EEL can support service continuity to ensure that when ACs require the use of service from a common EAS and an ACR operation is needed, ACR operations can be coordinated so that upon completion of the ACR operations the ACs again have services provided by a common EAS.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.18\tKey issue #18: EAS bundles",
                    "description": "",
                    "summary": "",
                    "text_content": "Rel-17 EEL procedures are designed such that services like EAS discovery and service continuity support are performed per EAS, where individual EASs are uniquely identified using EAS endpoints (e.g. URI, FQDN, IP address).\nHowever, to provide services to the end user a typical AC communicates with multiple endpoints i.e. multiple EASs. This creates an EAS bundle, which impacts the support provided by the Edge Enabler Layer. Taking an example of an online game where to support large number of users, different game functions are split across multiple servers; like, a game engine for game state and user input management, in-game chat server for communication between players and a capture server for capturing rendered images, encoding, and transporting them to the player's device. If each of these EASs are discovered, controlled, and relocated individually, it may impact the overall quality of service. For e.g. ACR failing for the game engine should cancel the ACR of the capture server to maintain their proximity.\nThis key issue is to study the impacts on the EEL's support functions created by such EAS bundles or dependencies between the EASs.\nThe figure depicts a 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 18-1 1\nFigure 4.18-1 EAS bundle example\nNOTE:\tThis KI does not focus on enabling communication between the EASs, rather, it focuses on coordination at the EEL.\nOpen issue:\n-\tHow can the EEL identify EAS bundles?\n-\tWhat are the impacts on EEL procedures due to EAS bundles e.g. when the bundled EASs are served by the same EES and require ACR due to UE mobility?\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.19\tKey issue #19: ACR scenario combination",
                    "description": "",
                    "summary": "",
                    "text_content": "Multiple ACR scenarios are specified in 3GPP TS 23.558[2] clause 8.8. Applications can utilize one or more ACR scenarios. Different combinations of utilizing ACR scenarios by Applications should be enabled by the Edge Enabler Layer (e.g. only one ACR scenario allowed or several ACR scenarios allowed).\nOpen issues:\n-\tWhether and how the EEL can support the determination of the ACR scenario for one AC?\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.20\tKey issue #20: Supporting composite EASs",
                    "description": "",
                    "summary": "",
                    "text_content": "In order for EAS to provide services (weather, transportation, maps, etc.) in partnership with other EASs, EAS context processing and composite EAS support may be required at edge-compatible layers. When ACR occurs due to UE mobility, a method of rearranging the composite EAS context may be required to provide continuous service of the composite EASs. In addition, there may be a need for a method for finding an EAS that provides services to composite EASs within the EDN in which the UE has moved.\nAlthough EAS can discover and communicate other EAS APIs through CAPIF's functions, but for service continuity, it may be necessary to discover EASs providing composite EASs and relocation the context of EASs that provided composite capabilities.\nThe figure depicts a composite EAS example, illustrating the various components and their interconnections. The figure includes a base station (BTS), a user equipment (UE), and a signal path, with key components such as the base station (BTS), user equipment (UE), and signal path. The diagram highlights the use of beamforming techniques to mitigate interference, and the layered design aligns with SDN principles.\nFigure 4.20-1 Composite EAS example\nNOTE:\tThis KI focuses on coordination at the EEL when the composite EASs provide services to the AC on a UE.\nOpen issues:\n-\tWhether and how the EEL can support to composite EAS context management.\n-\tWhether and how the EEL can support the relocation of the composite EAS context for service continuity.\n-\tWhether and how the EEL can discover EAS that provides the services of the composite EASs.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.21\tKey issue #21: Simultaneously EAS connectivity in ACR",
                    "description": "",
                    "summary": "",
                    "text_content": "In 3GPP TS 23.548 [19], there is a use case where application client needs to connect to both S-EAS and T-EAS during service continuity. Details are specified in clause 6.3.4 and Annex F of 3GPP TS 23.548 [19].\nFor AC triggered application context relocation, clause 8.8.2.2 of 3GPP TS 23.558 [2] describes the scenario for the service continuity initiated by EEC using regular EAS discovery. In step 5, the EEC and AC jointly decides the T-EAS to be used and in step 8 the AC is triggered by the EEC to start ACT.\nThe figure depicts a 21-1 ACR initiated by the EEC and ACs, illustrating the communication between the EEC and ACs. The ACR is a crucial component in the communication process, ensuring that the EEC and ACs can communicate effectively. The figure shows the various components involved in the ACR, such as the EEC, ACs, and the communication lines. The figure also includes the communication symbols and the communication lines, which are essential for the proper functioning of the ACR. Overall, the figure provides a clear and concise representation of the ACR initiated by the EEC and ACs, highlighting the importance of this communication process in the network.\nFigure 4.21-1: ACR initiated by the EEC and ACs\nFigure 4.21-1 illustrates one ACR scenario example in SA6 EDGEAPP. If the AC needs to connect to the T-EAS first to trigger ACT, the AC has two application sessions simultaneously during the service continuity. There could be more ACR scenarios applicable for this type of ACT. There are potential improvements in EEL to facilitate such simultaneous connectivity. For example, whether and how to influence the application traffic to maintain both S-PSA and T-PSA during the service continuity and the feature interaction between simultaneous EAS connectivity and service continuity. NOTE:\tIn Rel-17, EES can optimize the user plane routing before AC starts the application signalling with the T-EAS, but that does not consider the need for simultaneous EAS connectivity.\nOpen issues:\n-\tWhether and how EEL can influence the application traffic routing considering the need to maintain both S-PSA and T-PSA for simultaneous connectivity with both S-EAS and T-EAS, during the service continuity.\n-\tWhat the feature interaction is for simultaneous EAS connectivity and service continuity (including planning).\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.22\tKey issue #22: EAS discovery in Edge Node sharing scenario",
                    "description": "",
                    "summary": "",
                    "text_content": "Based on GSMA OPG.02 [4] Operator Platform Telco Edge Requirements, Edge Node sharing scenario has been identified in GSMA OPG.02 [4] clause 3.3.5.\nThe deployment case is as follows:\n1.\tOP B deploys application in the OP A (partner OP). OP B wants to scale its services for the region covered by OP A by using OP A's edge infrastructure.\n2.\tUser belongs to the OP B.\n3.\tIf OP B finds that the most suitable application that can serve the user is available in OP A (partner OP), then OP B requests the edge computing service from OP A (partner OP).\nNOTE 1:\tThe user is referred to the subscribers who have edge service authorizations.\nBased on the deployment case, it is not clear how to discover and determine the EAS(s) deployed in OP A for OP B users.\nThe figure depicts a 22-1 edge node sharing scenario, illustrating the distribution of edge nodes across different locations. The nodes are connected to a central core, which is responsible for routing and managing the network traffic. The figure also highlights the use of redundancy paths to ensure the network's reliability and failover capabilities.\nFigure 4.22-1 Edge Node sharing scenario\nThe following study is needed:\n1.\tHow can EES discover and determine a EAS which allows (subscribers of OP B) to avail its services?\n2.\tWhether EES and EAS of OP A can use OP B's network functions.\nNOTE 2:\tThe key issue assumes OP A and OP B has the same Edge Computing Architecture (i.e. EDGEAPP).\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.23\tKey issue #23: Reliable Edge service",
                    "description": "",
                    "summary": "",
                    "text_content": "When the Edge services are deployed in a virtualized environments (i.e. built for cloud), it is expected that the overall reliability of the system shall be at least the same as the reliability of non-virtualized system. Therefore, the EDGEAPP service-based architecture as depicted in figure 6.2-1 of 3GPP TS 23.558 [2] should be designed in a way that seamless replacement, addition or removal of services is possible and does not require specific (re-)configuration of both the running and the new component(s).\nThe ECS/EES may experience unexpected events (e.g. hardware/link issue in nature disaster) and expected events (e.g. graceful shutdown for maintenance) in service.\nThe highly reliable edge computing aims to provide fault tolerance, high availability and service resilience for the application services as well as the application supporting layer.\nThis KI focuses on how edge computing (EDGEAPP in SA6) can provide high reliability in EES/ECS and to support highly reliable EAS in SA6 application layer.\nNOTE:\tSA5 is responsible for the management of 3GPP functions including edge entity LCM and the interactions with ETSI NFV MANO. This is, however, not in the scope of this KI.\nOpen issues:\n-\tWhether and what mechanisms the EES/ECS can use for high reliability in EES/ECS services during expected events and unexpected events in the service.\n-\tWhether and what mechanisms the EES/ECS can provide to support highly reliable EAS during expected events and unexpected events in the service.\nNOTE: The reliability mechanism should make the network changes due to events transparent to the User.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.24\tKey issue #24: SEAL capability access for EEL support",
                    "description": "",
                    "summary": "",
                    "text_content": "Annex A.4 of 3GPP TS 23.558 describes deployments of EES with SEAL services and Application Enabler Services as consumers. Based on this description, EES capabilities are available to SEAL servers over the EDGE-3 reference point.\nAnnex A.4.2 of 3GPP TS 23.558 describes deployments of SEAL services at the edge, with EASs as consumers. For this case, the re-exposure of SEAL services is designed based on CAPIF implementation by EES.\nEESs may also be a consumers of SEAL services such as location reporting, group management, event monitoring, etc. which are currently exposed via SEAL-S and SEAL-E reference points. New services under development (e.g. ADAES) may also be adopted as SEAL services and may be both consumers and producers of services at the EES.\nOpen issues:\n-\tHow EEL accesses and utilizes SEAL capabilities deployed within the EDN.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "5\tArchitectural requirements",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tGeneral requirements",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.1.1\tGeneral",
                            "text_content": "NOTE:\tAny additional general architecture requirements shall be added to clause 5.2.1 of 3GPP TS 23.558 [2].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.2\tEnablement of Service APIs exposed by EAS",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.2.1\tGeneral",
                            "text_content": "This clause specifies the requirements for EAS Service API enablement in the EDGEAPP architecture to address the KI#2 in the clause 4.2.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.2\tRequirements",
                            "text_content": "The following are the architectural requirements to support EAS Service APIs in the EDGEAPP Rel-18 architecture.\n1)\tEAS capability exposure\n-\tThe application layer architecture shall support exposure of EAS's capabilities to the other EASs.\n2)\tEAS Service API publication\n-\tThe application layer architecture shall support EAS to publish its exposing Service API information to EES\n-\tThe application layer architecture shall support EAS to update the published EAS Service API information on the EES.\n-\tThe application layer architecture shall provide mechanisms for the EAS to publish and update KPIs of its Service APIs when available.\n3)\tEAS Service API discovery\n-\tThe application layer architecture shall provide mechanisms for an EAS to discover available EAS Service APIs.\n4)\tSubscription service\n-\tThe application layer architecture shall provide subscription and notification mechanisms enabling an EAS to receive changes in dynamic information of EAS Service APIs from an EES.\n-\tThe application layer architecture shall provide subscription and notification mechanisms enabling an EAS to receive changes in availability of EAS Service APIs from an EES.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.3\tECS discovery",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.3.1\tGeneral",
                            "text_content": "This clause specifies the requirements for ECS discovery to address the key issue #6 on edge services support across ECSPs in clause 4.6 and to the key issue #10 on support for roaming UEs in clause 4.10.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.3.2\tRequirements",
                            "text_content": "The following is the architectural requirement to support ECS discovery in the EDGEAPP Rel-18 architecture.\n-\tThe application layer architecture shall provide mechanisms for ECS to discover available ECS(s) which may have suitable EES(s), to support UE mobility between ECSPs.\n-\tThe Edge Enabler Layer architecture shall provide mechanisms for provisioning the EEC with available ECS(s) which may have suitable EES(s), to support UE mobility between ECSPs.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.4\tAlignment of EDGEAPP and ETSI MEC",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.4.1\tGeneral",
                            "text_content": "This clause specifies the architecture requirements for alignment of EDGEAPP and ETSI MEC to address the key issue #4.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.4.2\tRequirements",
                            "text_content": "The following requirements will serve as the guiding principles for the alignment of EDGEAPP and ETSI MEC architectures.\n1.\tThe scope of 3GPP alignment efforts between EDGEAPP and ETSI MEC shall be limited to architecture enhancements that apply only to EDGEAPP.\nNOTE:\t3GPP will liaise with ETSI ISG MEC for architecture recommendation (if any).\n2.\tThe architecture enhancements to support alignment shall ensure backwards compatibility with the existing EDGEAPP architecture.\n3.\tThe architecture enhancements shall not consider to align features exclusive to the each of the EDGEAPP and ETSI MEC architectures, i.e. the architecture enhancements shall only focus on the overlapping aspects between the EDGEAPP and ETSI MEC architectures.  The alignment aspects in the present release of this specification includes the following:\na.\talignment of EAS profile (EDGEAPP) and appInfo (ETSI MEC),\nb.\talignment of EDGE-3/Mp1 reference points\nc.\talignment of EDGE-9/Mp3 reference points\nd.\tusage of CAPIF between the two architectures\nNOTE:\tThe term alignment does not imply that the reference points will be exact equivalents.\n4.\tThe architecture enhancements shall ensure that EDGEAPP architecture can remain as a standalone or a complete system i.e. EDGEAPP can be deployed independent of the ETSI MEC architecture.\n5.\tThe architecture enhancements shall analyse impacts to other working groups e.g. SA2, SA3 and SA5.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.5\tCommon EAS",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.5.1\tGeneral",
                            "text_content": "This clause specifies requirements for common EAS discovery, such that a group of ACs can get service from the same EAS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.5.2\tRequirements",
                            "text_content": "1.\tEdge Enabler Layer shall enable a group of application clients to discover a common EAS i.e. same EASID, EAS endpoint and EDN.\na.\tThe Edge enabler layer shall provide a mechanism to support common EAS selection for a dynamic group.\nb.\tThe Edge enabler layer shall provide a common EAS selection mechanism for a static group.\n2.\tEdge Enabler Layer shall enable a group of application clients to be relocated to a different common EAS.\nNOTE:\tRelocation to a different common EAS can happen due to several reasons such as EAS unavailability, relocation of all UEs to a new EDN due to mobility etc.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "6\tEnhanced Application Architecture",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.1\tOption #1: Roaming architecture",
                    "description": "",
                    "summary": "",
                    "text_content": "This clause describes the architecture for roaming UEs, addressing Key Issue #10.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.1.1\tArchitecture enhancements",
                            "text_content": "This architecture uses ECSs provided in HPLMN and VPLMN, in which the EEC in the UE obtains services from V-ECS and V-EES. In this architecture, the H-ECS is associated with HPLMN, while the V-ECS and the EDN which the UE accesses is associated with VPLMN. A new reference point EDGE-10 is defined between ECSs. Figure 6.1.1.1-1 shows the architecture for this model.\nNOTE:\tH-ECS and V-ECS can be provided by the same ECSP.\n\nThe figure depicts a local breakout roaming architecture, where local devices (e.g., smartphones) can access high-speed internet (H-ECS) through a local network (e.g., 4G or 5G) and then connect to the main network (e.g., 5G or 4G) for further data transmission. This architecture is designed to provide high-speed connectivity and efficient use of network resources.\nFigure 6.1.1.1-1: Local breakout roaming architecture: Local breakout to access H-ECS\nThis architecture uses ECSs provided in HPLMN and VPLMN, in which the EEC in the UE obtains services from V-ECS and V-EES. Figure 6.1.1.2-1 shows the architecture for home routed roaming architecture for this model.\nThe figure depicts a home-routed access to H-ECS, illustrating the various access points and their respective connections to the home network.\nFigure 6.1.1.2-1: Home-routed access to H-ECS\nIn the HR roaming scenario, the roaming architecture is valid if the UE is supported to access the EDN in the VPLMN (i.e. the local access to the EDN of the VPLMN is supported in the HR roaming scenario). The traffic toward the EDN in the VPLMN (i.e. EDGE-1 traffic and application data traffic between AC and EAS) is not home routed to the HPLMN while the traffic between the EEC and H-ECS over is home routed via VPLMN and HPLMN.\nNOTE:\tHow to support local access to the EDN for the VPLMN in HR roaming scenarios is SA2's responsibility.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.2\tIdentities",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.3\tCardinality rules",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.2\tOption #2: Non-roaming architecture",
                    "description": "",
                    "summary": "",
                    "text_content": "This clause describes the architecture for non-roaming UEs.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.2.1\tArchitecture enhancements",
                            "text_content": "Compared with the Rel-17 EDGEAPP architecture for the non-roaming scenario, a new reference point EDGE-10 is defined between ECSs. Figure 6.2.1-1 shows the architecture for this model.\nNOTE:\tECSs communicating via EDGE-10 may be provided by different ECSPs.\nThe figure depicts a non-roaming architecture, illustrating the various components and their interactions in a 2.1-1 non-roaming network. Key components include the base station (BTS), user equipment (UE), and the network elements such as the core switch, optical line terminal (OLT), and distributed nodes. The figure highlights the use of redundancy paths to ensure failover reliability and the layered design, which aligns with SDN principles.\nFigure 6.2.1-1: Non-roaming architecture\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.2\tIdentities",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.3\tCardinality rules",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.3\tOption #3: Edge Notification Server architecture",
                    "description": "",
                    "summary": "",
                    "text_content": "This clause provides an enhanced application architecture based on Rel-17 architecture by incorporating an Edge Notification Server addressing Key Issue #1, \"Enhanced notification service to the EEC\".\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.3.1\tArchitecture enhancements",
                            "text_content": "This clause describes the new Edge Notification Server (ENS) functional element and the new interfaces (i.e EDGE-11, EDGE-12 and EDGE-13) needed to enable interactions in between EEC-ENS, EES-ENS and ECS-ENS respectively.\nFigure 6.3.1-1 illustrates the reference point representation of the architecture for Edge Enabling Application with the inclusion of the Edge Notification Server and the reference points EDGE-11, EDGE-12 and EDGE-13. The Figure also shows an OEM Push sever which is outside of the PLMN.\nNOTE 1: The OEM Push sever and the Push Function in the UE, as shown in Figure 6.3.1-1, are outside the scope of this TR and SA6.\nNOTE 2: The details of communication between the ENS and the OEM Push sever is outside the scope of this TR and SA6.\n\nThe figure depicts an enhanced architecture using an Edge Notification Server, which is a crucial component in the network. The architecture includes an Edge Notification Server (ENS) that provides real-time notifications to the network, ensuring that the network is always up-to-date with the latest information. This helps in improving the overall performance of the network by reducing the latency and improving the responsiveness of the network. The figure also shows the connection between the ENS and the Edge Gateway, which is a part of the network that provides the necessary resources for the ENS to function effectively. Overall, the figure provides a clear and concise representation of the enhanced architecture, highlighting its importance in the network's overall performance.\nFigure 6.3.1-1: Enhanced architecture using an Edge Notification Server\nNOTE 3: ENS is an optional feature of the EDGEAPP architecture.\nENS is the optional central notification server which receives notifications from EES (EDGE-12) and ECS (EDGE-13) and based on the preferred notification delivery method indicated by EEC (over EDGE-11), delivers the notifications to EEC through either a Pull or a Push delivery method.\nFunctionalities of ENS are:\na)\tEnabling EEC to request for a Callback URL to be used in its event subscription creation with EES and ECS;\nb)\tEnabling EEC to request for an optional Channel URL to receive notifications from the ENS directly (e.g. via Long-polling or WebSocket);\nc)\tEnabling EEC to request receiving notifications from the ENS indirectly through a preferred Push server (e.g. FCM, APNS, OMA Push);\nd)\tSetting up a Pull or Push notification channel with EEC based on EEC's preferred notification delivery method (e.g. Long-polling, WebSocket) requested;\ne)\tReceiving Notifications from EES and ECS at the CallBack URL and passing them onto the EEC either over a notification Channel (e.g. Long-polling, WebSocket) which is setup directly with the EEC or indirectly (i.e. an implicit notification channel) via a Push server (e.g. FCM, APNS, OMA Push);\nFor a given EEC, the associated ENS's information (e.g. URI(s), FQDN(s), IP address(es)) and optionally the ENS Provider Identifier are obtained from the ECS as part of the initial provisioning activity (see clause 8.3 in 23.558).\nThis approach ensures regardless of how many EECs a UE has or how many ENSs are deployed in the network (e.g. one ENS per ECSP or a single ENS by MNO), a given EEC would always receive the appropriate ENS endpoint to communicate and open a notification channel with.\nNOTE 1: Depending on the number of EECs (in the UE) and the number of associated ENS(s) in the network (i.e. one ENS per ECSP or a single ENS by MNO), an UE may simultaneously interact with multiple ENSs (one per ECSP) or a single ENS deployed by the MNO.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.4\tOption #4: Constrained devices with limited capabilities",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.4.1\tArchitecture enhancements",
                            "text_content": "This architecture option adds support for certain constrained devices which either don't have enough capabilities to execute its own EEC (e.g. the constrained device may not have a Mobile Termination entity) or do not execute its own EEC to save essential resources such as processing power and battery. Such constrained devices (e.g. terminal equipments as defined in TR 22.944 [21]) will benefit by being able to utilize services of an EEC running on a different UE, using EDGE-5.\nThe figure depicts a network architecture supporting constrained devices, illustrating the various components and their interconnections.\nFigure 6.4.1.2-1: Architecture supporting constrained devices\nNOTE 1:\tThe architecture option should utilize existing functionalities specified by SA2 and avoid creating new requirements for system architecture.\nNOTE 2:\tHow the TE communicates with the UE (e.g. Bluetooth, Wi-Fi, Cellular, ProSe, LPWA, zigBee, wired connection etc.) is out of scope of SA6.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.4.2\tIdentities",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.4.3\tCardinality rules",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.5\tOption #5: Architecture for ACR between EAS and CAS without CES",
                    "description": "",
                    "summary": "",
                    "text_content": "This clause describes the architecture for enabling interactions between EAS and Cloud Application Server (CAS), addressing Key Issue #11.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.5.1\tArchitecture enhancements",
                            "text_content": "Figure 6.5.1-1 shows the architecture enabling interactions between EAS and CAS, without Cloud Enabler Server (CES). Compared to the EDGEAPP (Rel-17) architecture, new entity Cloud Application Server is proposed along with the new reference points EDGE-14 (between EES and CAS), EDGE-15 (between ECS and CAS) and EDGE-16 (between 3GPP Core Network and CAS).\nThe figure depicts a 5.1-1 architecture with a Cloud Application Server (CAS) and without Cloud Application Server (CES). The CAS is a key component of the architecture, responsible for hosting the cloud application. The CES, on the other hand, is a separate component that is not depicted in the figure. The figure also includes a diagram of the network topology, showing the various components and their connections.\nFigure 6.5.1-1: Architecture with Cloud Application Server (CAS) and without CES\nIn this solution, the Cloud Application Server (CAS) interaction with EES is supported via EDGE-14 reference point and CAS is supported by ECS via EDGE-15 reference point. The CAS and EAS interaction is supported as Application Data Traffic, which is out-of-scope of this specification. The CAS interaction with the 3GPP core network happens over EDGE-16 reference point, which is similar to EDGE-7 reference point.\nNOTE:\tWhat functionalities of EDGE-9 and EDGE-6 are to be reused for EDGE-14 and EDGE-15 respectively will be addressed in normative phase.\nSince the EAS may have service area restriction, once the UE is moving out of the current edge coverage, to keep service continuity, the application client needs to connect to either another EAS in new EDN or the CAS.\nThe architecture supports ACR between edge and cloud deployments for the following conditions:\n-\tCondition 1: For the locations where EDN is not available, the ACR support is based on the failed Service provisioning response (i.e. the non-availability of the EDN at a particular location) from the ECS.\n-\tCondition 2: When AC profiles are sent in Service provisioning request and particular EAS is not available then EDN non-availability for that EAS is inferred through Service provisioning response.\n-\tCondition 3: For the locations where EDN is available but the EAS is not available, the ACR support is based on the indication from the EES (in the EAS discovery response) about the non-availability of the EAS at that particular location.\n-\tCondition 4: EAS and EDN are available but EAS is overloaded or not in a position to serve the EEC/UE due to any reason.\n-\tCondition 5: For a UE location, when CAS is serving and a suitable EAS is available at the edge, ACR can be initiated for continuing the service delivery via EAS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.5.2\tIdentities",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.5.3\tCardinality rules",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.6\tOption #6: Architecture for ACR between EAS and CAS with CES",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.6.1\tArchitecture enhancements",
                            "text_content": "The figure depicts an application architecture with Edge and Cloud server deployment, illustrating the interconnection of various components such as Edge servers, Cloud servers, and the application itself. The architecture is designed to facilitate efficient communication and data processing, with Edge servers acting as the primary processing units and Cloud servers providing additional resources and data storage. The figure also highlights the importance of network security and data privacy, with measures such as encryption and access control being implemented to ensure the confidentiality and integrity of data.\nFigure 6.6.1-1: Illustration of application architecture with Edge and Cloud server deployment\nIn this solution, the Cloud Application Server (CAS) is supported by Cloud Enabler Server (CES) via EDGE-3' reference point and CES is supported by ECS via EDGE-6' reference point. The CES communicates with EES or another CES via EDGE-9' reference point. The EEC utilizes EDGE-1' reference point to communicate with the CES. The CES and CAS interact with 3GPP Core Network via EDGE-7' reference point and EDGE-2' reference point, respectively.\nFrom concept wise, the CAS and CES are servers deployed in a cloud data network and EAS and EES are servers deployed in an edge data network. If certain EAS and EES in the edge data network are capable of supporting more UEs than regular edge server and can serve UE from anywhere (N6 routable), their roles become those of CAS and CES, respectively.\nThe EDGE prime reference points have the similar functions as the existing EDGE reference points. For instance, CASs are registered via EDGE-3' in CES to enable CES to offer suitable CAS via EDGE-1' to EEC; and CESs are registered via EDGE-6' in ECS to enable ECS to offer suitable CES via EDGE-4 to EEC.\nThe differences in EDGE prime reference points comparing to existing EDGE reference points are:\n-\tThe CAS does not have service area restriction in CAS profile when registered into CES.\n-\tThe CES does not have service area restriction in CES profile when registered into ECS.\nNOTE:\tThe detailed differences for EDGE prime reference points and the cardinality rules will be addressed in normative phase.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.6.2\tIdentities",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.6.3\tCardinality rules",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.7\tOption #7: Architecture for Common EAS selection with central binding server",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.7.1\tArchitecture enhancements",
                            "text_content": "The figure depicts the EDGEAPP architecture enhanced with a binding server, illustrating the enhanced functionality and improved performance of the network.\nFigure 6.7.1-1: EDGEAPP architecture enhanced with binding server\nThe EDGE-17 reference point is introduced to support EES interaction with binding server. The EES can store, update and remove the binding information via EDGE-17 reference point.\nThe binding server is deployed in a central cloud and it is a single server maintaining binding information.\nNOTE 1:\tWhether binding server can be deployed in EDN can be considered during normative.\nNOTE 2:\tCBS can be co-located with an ECS in a deployment.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.7.2\tIdentities",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.7.3\tCardinality rules",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.8\tOption #8: Architecture for ACR update in service continuity planning",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.8.1\tArchitecture enhancements",
                            "text_content": "Enhancement of the service continuity planning capability is expected to support update of ACR. As can be seen at the Figure 7.6.1-1, this solution proposes the ACR update capabilities as enhancements after the ACR launch to deal with UE behavior changes. This includes a Detection entity, a Decision Update entity and an ACR update execution entity. These entities can be different based on the scenarios identified in TS 23.558, clause 8.8.2.\nThe figure depicts a high-level illustration of proposed service continuity planning enhancements, highlighting key components such as network virtualization, service chaining, and network slicing. It demonstrates how these enhancements can help ensure the continuity of services in the event of network disruptions or failures.\nFigure 6.8.1-1: high level illustration of proposed service continuity planning enhancements\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.8.2\tIdentities",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.8.3\tCardinality rules",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.9\tOption #9: EEL utilization of SEAL services deployed in EDN",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.9.1\tArchitecture enhancements",
                            "text_content": "The figure depicts the utilization of SEAL services in an EEL (Energy Efficient Local) network deployment, highlighting the importance of energy efficiency in network operations.\nFigure 6.9.1-1: EEL utilization of SEAL services deployed in EDN\nThis architecture illustrates the deployment scenario specified in key issue #24. Vertical application layer server(s) and SEAL server(s) are deployed in EDN. The EES consumes SEAL services deployed in EDN over SEAL-S reference point. The EEC consumes the services from SEAL client(s) over SEAL-C reference point.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.9.2\tIdentities",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.9.3\tCardinality rules",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.10\tOption #10: EDGEAPP architecture in edge node sharing",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.10.1\tArchitecture enhancements",
                            "text_content": "The solution addresses how to discover an EAS that is deployed in the partner’s OP (i.e. OP-A) in edge node sharing case and is based on architecture enhancement in EDGEAPP with ECS-ER (Edge Repository).\nFigure 6.10.1-1 shows two operator platforms can communicate with each other via EDGE-9 and EDGE-18, EEC in UE communicates with EES and ECS of OP-B and EAS is registered in EES of OP-A via EDGE-3. EDGE-18 is a new reference point used between ECS-ERs.\nThe figure depicts the EDGEAPP architecture in edge node sharing, which is a key component of the 5G network. It illustrates the use of edge computing to process data at the edge of the network, reducing latency and improving network performance. The architecture includes edge nodes, which are responsible for processing data, and edge computing platforms, which are used to process the data. The figure also shows the use of edge computing platforms, which are used to process the data. The figure is important for understanding the architecture of the 5G network and its role in improving network performance.\nFigure 6.10.1-1: EDGEAPP architecture in edge node sharing\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.10.2\tIdentities",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.10.3\tCardinality rules",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.11\tOption #11: EDGEAPP architecture enhanced with Central AC Association Repository",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.11.1\tArchitecture enhancements",
                            "text_content": "As described in clause 7.27.0, multiple options for the implementation of this solution are provided. Option (ii) relies on the introduction of new functionality termed Central AC Association Repository (CAAR). CAAR functionality can be implemented by ECS or as an independent CAAR server.\nThis clause introduces architectural enhancements based on the assumption that the SP deploys an independent server which hosts the CAAR functionality, and which communicates with multiple ECSs and each of the EESs serving Common EAS groups.\nNOTE 1:\tThe architectural enhancement introduced in this clause is optional. It can be used for the option \"with CAAR\" (ii) (as described in clause 7.27.0). CAAR functionality can be integrated with ECS.\n\nThe figure depicts the EDGEAPP architecture enhanced with Central AC Association Repository, which is a key component in the enhanced architecture. The diagram illustrates the integration of the Central AC Association Repository with the existing EDGEAPP architecture, enhancing the network's performance and reliability.\nFigure 6.11.1-1: EDGEAPP architecture enhanced with Central AC Association Repository\nThe EDGE-19 reference point is introduced to support EES interaction with a Central AC Association Repository (CAAR). The EES can store, update, and remove information about the AC associations it provides services to via EDGE-19 reference point.\nThe EDGE-20 reference point is introduced to support ECS interaction with CAAR. The ECS can query the AC association information via EDGE-20 reference point.\nNOTE 2:\tIt is to be determined in the normative phase whether CAAR and Binding Server from solution #30 can be merged.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.11.2\tIdentities",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.11.3\tCardinality rules",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.12\tOption #12: Architecture for Federation and Roaming",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.12.0\tAssumptions",
                            "text_content": "This solution assumes the following:\n1.\tPLMN subscription for edge computing services between the user and the MNO may not be restricted to only certain edge services or applications.\n2.\tEdge service authorization(s) between the user and the ECSP may not be restricted to only certain edge services or applications.\n3.\tAgreements between ECSPs are to share edge computing infrastructure and applications with other ECSP partners and their subscribers. These agreements are not restricted to only certain edge services or applications.\n4.\tASP may not have sufficient means or information to configure the UE with respect to the federation (e.g. the AC cannot be pre-configured with the ECS information, the AC is not edge-aware, the ASP does not provide AC to the UE, there is no CAS available or the CAS cannot redirect the UE to the partner ECSP).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.12.1\tArchitecture enhancements",
                            "text_content": "A federation can include multiple ECSP(s) where both, MNOs and the ECSPs can deploy multiple ECSs each. ECSs provide EES and EAS deployment information to the requestor. ECSs, EESs and EASs can be enabled or disabled dynamically based on prevailing requirements, available resources etc. so relying on pre-configuration or policy-based federation may result in use of stale pre-configurations and policies. Therefore, it is essential to maintain this information in real-time and enable an ECS to discover it on a need basis.\nThis architecture option requires that the each ECSP in the federation of ECSPs designate one ECS as the center of information for that federation. This designated ECS acts as the edge repository (ECS-ER) of the federation. It stores and maintains up to date information about edge deployments of the federation. ECSs deployed by the ECSPs of the federation register and provide edge deployment information to this designated ECS. The designated ECSs of each ECSPs shares the information about the edge deployment to each other.\nFollowing figure illustrates the enhanced architecture:\nThe figure depicts a 12-node architecture enhanced with an Edge repository, illustrating the integration of edge computing into the network. Key components include the Edge repository, which is responsible for processing and storing data, and the Edge nodes, which are responsible for executing the processing tasks. The architecture is designed to be scalable and efficient, with the Edge repository acting as a central hub for data processing and the Edge nodes acting as distributed processing units. The figure also highlights the importance of network slicing and network slicing policies in managing the resources of the network.\nFigure 6.12.1-1: Architecture enhanced with Edge repository\nNOTE 1:\tThere can be an EDGE-4 interface between the EEC and the Edge Configuration Server (Edge Repository).\nNOTE 2:\tECS-ER does not perform resource management. Resource management is SA5's responsibility.\nThere can be alternate deployments for this edge repository, for e.g.:\n-\teach ECSP can deploy its own edge repository; or\n-\tmultiple ECSPs can use the same ECS-ER as their edge repository; or\n-\teach MNO can deploy an edge repository for all ECSPs associated with the MNO.\nNOTE 3: The interface and the interactions (e.g. ECS discovery, registration etc.) required between the ECS-ERs, and their potential alignment with ETSI MEC will be considered during the normative work.\nNOTE 4:\tAddress information of partner ECSs in a federation can be locally configured in the primary ECS.\nNOTE 5: Possible mapping of the interfaces and roles of new entities with GSMA PRD will be considered in the normative work.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.12.2\tEnhanced functional entities",
                            "text_content": "ECS that acts as edge repository (ECS-ER) provides supporting functions needed for roaming and federation.\nFunctionalities of ECS-ER are:\na)\tReceiving and storing information about edge computing resources from other ECS(s) of the ECSP;\nb)\tReceiving and storing information about edge computing resources from other ECS-ER(s) of the federation;\nc)\tProviding information about Edge computing resources to other ECS-ER(s) of the federation.\nEditor's Note: Comparison and alignment of ECS-ER definition with the MEC Federator (MEF) as defined by ETSI MEC GS 040, which is aimed to host EWBI as defined by GSMA OPG, is FFS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.12.3\tReference point",
                            "text_content": "EDGE-10 reference point enables interactions between the ECS and the ECS acting as edge repository. It supports:\na)\tregistration and de-registration of the ECS to the ECS acting as edge repository; and\nb)\tretrieval or discovery of information about other ECS(s) of the federation.\nNOTE:\tComparison and potential alignment of interactions between ECS and ECS-ER e.g. ECS discovery, registration etc. with corresponding ETSI MEC procedures will be considered in the normative work.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.12.4\tCardinality rules",
                            "text_content": "Following cardinality rules apply to the ECS-ER that acts as edge repository:\na)\tOne ECS-ER per ECSP may be deployed to support the federation;\nFollowing cardinality rules apply for EDGE-10:\na)\tOne or more ECS may communicate with the ECS that acts as edge repository.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "7\tSolutions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "7.0\tMapping of solutions to key issues",
                    "description": "",
                    "summary": "",
                    "text_content": "Table 7.0-1 Mapping of solutions to key issues\n\n",
                    "tables": [
                        {
                            "description": "Table 7.0-1 Mapping of solutions to key issues",
                            "table number": 4,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.1\tSolution #1: Service provisioning via push notification",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.1.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #1 on enhanced notification service to the EEC in clause 4.1.\nIn this solution, push notification mechanism is utilized to enhance the service provisioning procedure. It is assumed that at least one push server is available to ECS and the UE has push function supporting the interaction with the push server.\nPre-conditions:\n1.\tThe UE supports push notification service and the associated push server can be accessed by the ECS.\n2.\tThe address of push server is pre-configured in the Push function.\nThe figure depicts a simplified representation of a push notification service provisioning process in a mobile network. It shows the flow of notifications from the sender to the receiver, with the sender sending a notification to the receiver's mobile device, which then sends a push notification to the receiver's device. The figure illustrates the use of push notifications in mobile networks, which are essential for providing real-time information to users.\nFigure 7.1.2.2-1: Service provisioning via push notification\n1.\tThe EEC registers with the push function within the UE. The EEC acquires a push token and push server information from the push function.\nNOTE:\tThe push server provides the push function in the UE with a push token, which is delivered to the EEC.\n2.\tThe EEC sends a service provisioning subscribe request to the ECS. The service provisioning request includes push token, push server information (e.g. address) in addition to information elements in clause 8.3.3.3.4 of 3GPP TS 23.558 [2] v17.0.0. The push server address is included as Notification Target Address.\n3.\tUpon receiving the request, the ECS performs an authorization check as in clause 8.3.3.2.3.2 of 3GPP TS 23.558 [2] and further verify if push notification can be used. If the request is authorized and push server can be used for notification, the ECS creates and stores subscription resource for service provisioning.\n4.\tIf the processing of the request was successful, the ECS responds with a service provisioning subscription response.\n5.\tIf an event occurs at the ECS that satisfies trigger conditions for updating service provisioning of a subscribed EEC and the corresponding subscription is for push notification, the ECS sends push notification request to the push server that is identified by the push server information provided by the EEC in the step 2. The push notification request sent from the ECS to the push server contains the push token, EEC information (e.g. identification or port ID) and service provisioning notification message.\n6.\tThe push server sends the service provisioning notification message to the EEC via the push function, which in turn and delivers the notification message to the corresponding EEC.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.3\tSolution evaluation",
                            "text_content": "The proposed solution addresses Key Issue #1. The solution is based on Rel-17 service provisioning subscribe procedure and the push notification mechanism supported in a UE. This approach does not require EEC to persistently keep the session with ECS for receiving notification message. Instead, the UE reuses the session kept by the push function and push notification server.\nThis solution does not introduce impact on Rel-17 architecture.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.2\tSolution #2: Traffic filter support for EDGE-3 API addressing application traffic detection",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.2.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.2\tSolution description",
                            "text_content": "The EAS can provide the domain name to the EES as traffic descriptor and EES can further provision the domain name to the 3GPP CN. The following figure 7.2.2-1 depicts the solution sketch for the Session with QoS create operation with bold text showing the enhancement to the existing procedure in 3GPP TS 23.558 [2], clause 8.6.6.2. Such solution allows the EAS to provide fruitful traffic filters to be applied for the intended session with requested QoS.\nThe figure depicts a session with the QoS API, where a user can create an operation to set QoS parameters for a session. The figure includes a user interface with various options for setting QoS parameters, such as bandwidth, delay, and jitter. The user can also specify the priority level for the operation, which determines the priority of the operation in the queue. The figure also includes a visual representation of the operation's status, such as the status bar and progress bar, to show the progress of the operation.\nFigure 7.2.2-1: Session with QoS API: create operation\nIn step 1, the EAS requests establishment of a data session between the AC and the EAS with a specific QoS, the EAS sends the domain name as traffic descriptor which also indicates the applicable protocol and matching criteria (e.g. TLS SNI). In step 2a, the EES invokes the PFD management procedure with the 3GPP CN as described in 3GPP TS 23.682 [10] and 3GPP TS 23.502 [8] with an application id that may be derived from the EASID according to local policy. Further the EES provides the same application id for requesting data session with specific QoS in step 2c or step 4.\nNOTE:\tPFD management is optionally supported in MNO, if EES cannot invoke step 2a, it responds EAS with appropriate error.\nIf the EAS provides only IP flow description as the traffic filter, the EES can provide the application id (which may be derived from the EASID) to the 3GPP CN when requesting data session with specific QoS and rely on further traffic classification mechanism in MNO to apply specific QoS for the application traffic. In that case, the EES skips the PFD management procedure in step 2a.\nSimilar approach can be applied for the ACR management event API for EAS to consume EES service.\nThe EAS can also send other specific filters (e.g. URI) to the EEL allowing a fruitful application traffic detection in the 3GPP CN, such filters will be used by the EES in the PFD management procedure in step 2a.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.3\tSolution evaluation",
                            "text_content": "This solution address KI#7. It enhances the existing Session with QoS API and ACR management event API in 3GPP TS 23.558 [2] with support for traffic filters more than IP flow description.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.3\tSolution #3: Service provisioning triggering via SMS over NAS",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.3.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #1 on enhanced notification service to the EEC.\nIn this solution, application triggering (device triggering) via SMS over NAS method specified in 3GPP TS 23.501 [5] is utilized to provide the updated EDN configuration information to the EEC.\nThe EEC indicates to the ECS that SMS over NAS is supported. Then, the ECS checks if the SMS over NAS can be utilized and perform EEC triggering by using SMS over NAS.\nPre-conditions:\n1.\tThe EEC is able to check if the UE supports the SMS over NAS;\n2.\tThe EEC is able to decode the need to trigger the operation indicated in the SMS; and\n3.\tThe ECS is allowed to use Nnef_Trigger_Delivery service.\n\nThe figure depicts a scenario where EEC (Event-driven Communication) is triggered via SMS over NAS (Network-Attached Storage) to perform service provisioning. The figure shows the communication path, including the network interface card (NIC), network storage area server (NAS), and the SMS gateway. The SMS gateway is responsible for sending the SMS message to the NAS, which then triggers the EEC process. This process is crucial for managing and provisioning services in a network.\nFigure 7.3.2.2-1: EEC triggering via SMS over NAS to perform service provisioning\n1.\tThe EEC determines that the UE supports the SMS over NAS by checking if the UE capability support the SMS delivery over NAS and if the UE is allowed by the core network to use SMS delivery over NAS (e.g. whether the UE is indicated by the core network that SMS over NAS is allowed during Registration procedure or UE Configuration Update procedure as specified in TS 23.502 [8]). If the SMS over NAS is supported and allowed in the UE, the EEC sends an indication of SMS over NAS supported to the ECS. This indication may be included in the service provisioning request message and sent to the ECS.\n2.\tThe ECS acknowledges to the EEC by sending a message including whether the EEC triggering via SMS over NAS is available for service provisioning or not. When the EDN configuration information in the ECS is updated, the ECS triggers EEC to initiate service provisioning request by utilizing the SMS over NAS as described in the below figure 7.3.2.2-2.\nThe figure depicts a scenario where EEC (Event-driven Communication) is triggered via SMS over NAS (Network-Attached Storage) to perform service provisioning. The figure shows the communication path, including the network interface card (NIC), the network storage area server (NAS), and the network storage system (NSS). The SMS message is sent to the NAS, which then sends the provisioning request to the service provider. The provisioning request is then processed by the service provider, and the service is provisioned.\nFigure 7.3.2.2-2: EEC triggering via SMS over NAS to perform service provisioning\n1.\tThe ECS determines to perform EEC triggering via SMS over NAS for service provisioning (e.g. when the EDN configuration information is updated).\n2.\tThe ECS invokes Nnef_Trigger_Delivery service to send a trigger delivery request message to the NEF as described in clause 4.13.2 of 3GPP TS 23.502 [8]. The message includes indication to trigger service provisioning, EEC ID, UE ID, and ECS information (e.g. address).\n3.\tThe NEF delivers the triggering information via MT SMS Delivery procedure as specified in TS 23.502 [8]. The indication to trigger service provisioning, EEC ID, ECS information are included as the triggering payload in the triggering information\n4.\tThe NEF sends Nnef_Trigger_Delivery service response message to the ECS to inform that the ECS-provided information in step 2 is successfully delivered to the SMS-SC as in clause 4.13.2 of 3GPP TS 23.502 [8].\n5.\tThe NEF sends Nnef_Trigger_Delivery Notify message to the ECS to inform that the SMS message is successfully delivered to the UE as in clause 4.13.2 of 3GPP TS 23.502 [8].\n6.\tThe UE receives the SMS message containing the ECS-provided triggering information (indication to trigger service provisioning, EEC ID, ECS information) from the 5GC via Mobile Terminated SMS Delivery as in clause 4.13.3 of 3GPP TS 23.502 [8] and the EEC is triggered to perform service provisioning request toward the ECS identified by the ECS information contained in the SMS message.\n7.\tThe EEC may send a service provisioning request to the ECS identified by the triggering information contained in the SMS.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.3\tSolution evaluation",
                            "text_content": "The solution addresses Key Issue #1: Enhanced notification service to the EEC.\nThe solution utilizes application triggering (device triggering) via SMS over NAS method specified in 3GPP TS 23.501 [5]. This solution does not require EEC to persistently keep the session with ECS for receiving the updated EDN configuration information.\nThis solution has the following impact on the EEC and ECS:\n-\tEEC supports to perform service provisioning when receiving application triggering SMS containing ECS-provided triggering information;\n-\tECS supports application triggering service provided by the core network (e.g. Nnef_Trigger_Delivery service).\nThis solution does not introduce any impact on Rel-17 architecture.\nNOTE:\tThis solution can be extended to enhance EDGE-1 notification service.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.4\tSolution #4: ECS discovery through serving ECS to support edge services across ECSPs",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.4.1\tArchitecture enhancements",
                            "text_content": "For a roaming scenario, Option #1 in the clause 6.1 is the basis for this solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.4.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #6 on edge services support across ECSPs in clause 4.6 and to the key issue #10 on support for roaming UEs.\nThe scenario assumption of this solution is that the ECS1 may determine a potential ECS information (e.g. address, endpoint or service API information) based on pre-configuration or may discover service API information exposed by that ECS via CAPIF discovery procedure as specified in TS 23.222 [16]. In this solution, it is assumed that the ECSP1 and ECSP2 have a service level agreement to share edge services. If the ECS1 cannot discover a suitable EES to serve the UE at the current location (e.g. all the EESs registered on the ECS1 do not cover the given UE location), the ECS1 discovers another ECS2 which may have suitable EES based on UE location and provides it to the requesting EEC or EES.\nNOTE:\tTo configure sufficient information to the ECS, the ECS(s) information related to other ECSPs may be available at the OAM system due to the inter-ECSP relationship establishment, which is then used by the OAM system of an ECSP to configure its ECS. If required, the information of available applications in a partner ECSP and the corresponding service areas are included in the configured information. Inter-ECSP relationship establishment is according to the business relationship between the ECSPs and is out of the scope of SA6. The OAM to configure its ECS for inter-ECSP relationship is under the scope of SA5.\nIn a roaming scenario, after a UE selects a PLMN and performs the registration procedure, the EEC gets ECS information to use edge computing service in the VPLMN as follows:\n-\tThe EEC may have been pre-configured or provisioned with V-ECS information.\n-\tThe EEC may try to send a service provisioning request message including service PLMN ID to the H-ECS and retrieves V-ECS information or, if possible, EDN configuration information for VPLMN. The EEC may perform service provisioning procedure with the V-ECS if the H-ECS provides V-ECS information to the EEC as show in figure 7.4.2.2-1. This solution provides a procedure for this aspect.\n-\tThe EEC may try to derive V-ECS address information from the VPLMN identifier. For example, an EEC can combine the VPLMN identifier and an ECSP code (or ECSP ID) assigned to an edge computing service provider (e.g. \"ECS <ECSP-ID/CODE>.ECS.MNC <MNC> .mcc <MCC> .3gppNetwork.org \").\nIn a roaming scenario, if a V-ECS information is provided by 5GC, the EEC shall use the provided information for the subsequent service provisioning request.\nNOTE:\tIn a roaming scenario, current solution provides a procedure to one method for the EEC gets ECS information to use edge computing service in the VPLMN. The precedence among different methods is not the scope of this solution.\nIn this solution, when the ECS1 receives the request of EES from the EEC or source EES, the ECS1 discovers another ECS2 which may have suitable EES and responds with the ECS2 information. After that, the EEC or source EES sends the request of EES to the ECS2.\nPre-conditions:\n1.\tECSP1 and ECSP2 have a service level agreement to share edge services.\n2.\tThe EEC has a business relationship/subscription to the ECSP1.\n3.\tThe EEC has ECS1 address information and can access to the ECS1 (in roaming scenario, ECS1 and ECS2indicate the H-ECS and the V-ECS, respectively).\nThe figure depicts a solution for enabling edge services support across ECSPs, illustrating the various components and their interconnections.\nFigure 7.4.2.2-1: Solution 4 for edge services support across ECSPs\n1.\tThe ECS1 receives request for obtaining EES information, this procedure may be triggered by following events:\n1a.\tThe EEC sends a service provisioning request to the ECS. It is assumed that the EEC has been pre-configured or has provisioned with the address (e.g. URI) of the ECS1. The request may include the UE location. For roaming scenario, the request may also include serving PLMN ID of the UE hosting the EEC.\n1b.\tThe S-EES (EES1) sends the retrieve EES request to the ECS in order to identify the T-EES which has an EAS available to serve the UE.\n2.\tIf the request does not contain the UE location information, the ECS1 interacts with 3GPP core network to retrieve the UE location. If the ECS1 cannot discover a suitable EES to serve the UE at the received or retrieved UE location based on the received information (e.g. all the EESs registered on the ECS1 do not cover the given UE location), the ECS1 discovers potential ECSs which may have suitable EES based on the information such as the UE location.\nFor roaming scenario, if the request does not contain the serving PLMN ID, the ECS1 may interacts with 3GPP core network to retrieve serving PLMN ID. The H-ECS checks if the edge computing service for the EEC can be supported in the VPLMN identified by serving PLMN ID according to the roaming agreement with VPLMN operator for given ECSPs. The ECS1 discovers the potential ECSs, e.g. ECS2 which have suitable EES based on the serving PLMN ID. Optionally, the ECS1 may send a request to ECS2 to verify whether the ECS2 is available. If yes, ECS2 returns the success response to the ECS1. Otherwise, a failure response/code is returned.\nThe H-ECS can check if the edge computing service for the EEC can be supported in the VPLMN based on the roaming agreement on edge computing services between PLMNs or service agreement between ECSPs. In the roaming scenario, roaming agreement on edge computing service can be addressed by SA2 based on the principles in clause 9.1.\nNOTE 1:\tThe ECS1 can filter the list of the discovered ECSs based on the information elements provided vis the service provisioning request, ECSP policy configured in ECS, or UE-specific service information. Details of ECSP and UE-specific service information is out of scope.\nNOTE 2:\tThis solution does not exclude other ways for ECS 1 to determine ECS 2. Other solution for determining ECS2 by ECS1 can be utilized in this procedure when the multiple ECSs are available for an EEC.\n3. ECS1 sends a response message including the list of ECSs information and failure cause indicating redirection to another ECS (for service provisioning request or retrieve EES request) to the requester of step 1 if the ECS1 cannot discover a EES:\n3a.\tIn response to the request in step 1a, the ECS1 sends the response message to the EEC.\n3b.\tIn response to the request in step 1b, the ECS1 sends the response message to the S-EES.\n4.\tThe EEC or source EES can send the request (e.g. resends a service provisioning request or retrieve EES request) to one of the ECSs received from the ECS1 e.g. the ECS2. Correspondingly, the EEC or source EES receives response from the ECS2.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.4.3\tSolution evaluation",
                            "text_content": "Solution 4 solves the problems of KI#10 and KI#6. After discovering another ECS2 which may have suitable EES, the ECS1 sends respond to the EEC or source EES with the ECS2 information. Then the EEC or source EES can send the request to the ECS2 directly to retrieve suitable EES. It is possible that some enhancements on ECS are needed to support ECS discovery.\nThis solution relies on having sufficient information (e.g. ECSP policy, UE-specific service information, or ECSs information) configured or available in an ECS to determine candidate ECSs in step 2.\nThe Solution #4 will use any agreed solution for determining ECS2 by ECS1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.5\tSolution #5: ECS enhancement to discover EESs via other ECSs to support edge services across ECSPs",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.5.1\tArchitecture enhancements",
                            "text_content": "A new reference point is required between ECSs, which is described as EDGE-10 in the clause 6.1.1.1.\nFor a roaming scenario, Option #1 in the clause 6.1 is the basis for this solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.5.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #6 on edge services support across ECSPs in clause 4.6 and to the key issue #10 on support for roaming UEs in clause 4.10.\nThe scenario assumption of this solution is that the ECS1 may determine the ECS2 information (e.g. address, endpoint or service API information) based on pre-configuration or may discover service API information exposed by that ECS via CAPIF discovery procedure as specified in TS 23.222 [16].\nIn this solution, it is assumed that the ECSP1 and ECSP2 have a service level agreement to share edge services. If the ECS1 cannot discover a suitable EES to serve the UE at the current location (e.g. all the EESs registered on the ECS1 do not cover the given UE location), the ECS1 discovers another ECS2 which may have suitable EES and discovers the EES via the ECS2.\nNOTE:\tTo configure sufficient information to the ECS, the ECS(s) information related to other ECSPs may be available at the OAM system due to the inter-ECSP relationship establishment, which is then used by the OAM system of an ECSP to configure its ECS. If required, the information of available applications in a partner ECSP and the corresponding service areas are included in the configured information. Inter-ECSP relationship establishment is according to the business relationship between the ECSPs and is out of the scope of SA6. The OAM to configure its ECS for inter-ECSP relationship is under the scope of SA5.\nIn this solution, when the ECS1 receives the request of EES from the EEC / source EES, the ECS1 discovers another ECS2 which may have suitable EES and discovers the EES via the ECS2. The ECS1 then provides the EES information to the EEC / source EES in the response.\nPre-conditions:\n1.\tECSP1 and ECSP2 have a service level agreement to share edge services.\n2.\tThe EEC has a business relationship/subscription to the ECSP1.\n3.\tThe EEC has ECS1 address information and can access to the ECS1 (in roaming scenario, ECS1 and ECS2 indicate the H-ECS and the V-ECS respectively).\n\nThe figure depicts a solution for enabling edge services support across ECSPs, illustrating the various components and their interconnections.\nFigure 7.5.2.2-1: Solution 5 for edge services support across ECSPs\n1.\tThe ECS1 receives request for obtaining EES information, this procedure may be triggered by following events:\n1a.\tThe EEC sends a service provisioning request to the ECS. It is assumed that the EEC has been pre-configured or has provisioned with the address (e.g. URI) of the ECS1. The request may include the UE location. For roaming scenario, the request may also include serving PLMN ID of the UE hosting the EEC.\n1b.\tThe S-EES (EES1) sends the Retrieve EES request to the ECS in order to identify the T-EES which has an EAS available to serve the UE.\n2.\tIf the request does not contain the UE location information, the ECS1 interacts with 3GPP core network to retrieve the UE location. If the ECS1 cannot discover a suitable T-EES to serve the UE at the received or retrieved UE location based on the received information (e.g. all the EESs registered on the ECS1 do not cover the given UE location), the ECS1 discovers another ECS2 which may have suitable EES based on the information such as the UE location.\nFor roaming scenario, if the request does not contain the serving PLMN ID, the ECS1 may interacts with 3GPP core network to retrieve serving PLMN ID. The H-ECS checks if the edge computing service for the EEC can be supported in the VPLMN identified by serving PLMN ID according to the roaming agreement with VPLMN operator for given ECSPs. The ECS1 discovers the ECS2 which have suitable EES based on the serving PLMN ID.\nThe H-ECS can check if the edge computing service for the EEC can be supported in the VPLMN based on the roaming agreement on edge computing services between PLMNs or service agreement between ECSPs. In the roaming scenario, roaming agreement on edge computing service can be addressed by SA2 based on the principles in clause 9.1.\n3.\tThe ECS1 further discovers a target EES whose service area can cover the UE location via the ECS2. The ECS1 may interact with the ECS2 directly or indirectly via e.g. a Federation manager.\n4.\tECS sends the response to the requester of step 1:\n4a.\tIn response to the request in step 1a, ECS1 sends the EES information to the EEC.\n4b. In response to the request in step 1b, ECS1 sends the Retrieve EES response to the requesting EES (EES1).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.5.3\tSolution evaluation",
                            "text_content": "This solution addresses KI#6 and KI#10. The EEC or the EES gets the requested EES information from ECS2 via ECS1. It is possible that some enhancements on ECS are needed to support service provisioning and EES retrieval request across the ECSPs.\nThis relies on preconfigured information of ECS2 at ECS1. The solution will use any agreed solution for determining ECS2 by ECS1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.6\tSolution #6: ACR update in service continuity planning",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.6.1\tArchitecture enhancements",
                            "text_content": "Option #8 in the clause 6.8 is the basis for this solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.6.2\tSolution description",
                            "text_content": "The solution addresses the key issue #3 and the open issue on how to deal with scenarios when the ACR needs to be modified, e.g. due to UE mobility.\nThe solution can have two different solution variants based on the type of service continuity planning update. One possible solution is to modify the ACR service after the launch (described in 7.6.2.1) and another possible solution is the pause of the ACR services for a pre-defined time or till the detection entity decides to resume the ACR (described implicitly in 7.6.2.1 as part of EEC-based modification procedure). ACR pause allows the EEC after the detection of an expected/predicted UE location and/or mobility change with low confidence level, to decide on pausing the ACR and to send to S-EES/T-EES the pause decision and the required time for the pause, or under which criteria the ACR will resume (or a further ACR modification request may follow after some time period if EEC identifies that ACR can continue).\nPre-conditions:\n1.\tThe ACR has been launched.\nThe figure depicts a step-by-step procedure for modifying an ACR (Automatic Call Rejection) system using an EEC (Enhanced Early Call Removal) approach. The figure illustrates the process of identifying and removing unwanted calls from the ACR system, which is crucial for improving call quality and reducing call-related costs. The figure includes a flowchart and a list of steps, making it easy to understand the steps involved in the modification process.\nFigure 7.6.2.1.1-1: EEC-based ACR modification procedure\n1.\tThe EEC detects a change of the expected UE behaviour. In particular, it may receive from the AC (over EDGE-5) an indication that the expected/predicted UE location and/or mobility changed. Such message can include the current and new expected/predicted location or current and new expected mobility/speed/direction/velocity, and/or an expected change of the UE route/trajectory.\n2.\tThe EEC identifies that one or more ACR updates are needed based on the change of the UE behaviour and decides the type of the ACR update to be an ACR modification or an ACR pause/resume. ACR pause or resume can be a variant of ACR modification and indicates that the ACR needs to be halted for a given time or till further notice (e.g. an ACR resume as ACR update may be decided after some time period if EEC identifies that ACR can continue).\n3.\tThe EEC sends an ACR modification request to the S-EES or T-EES (for EEC executed ACR via T-EES scenario) to indicate an ACR modification and to provide the updated parameters, such as the expected completion time. The request also includes the necessary parameters (e.g. IDs) to indicate the ACR that is requested to be updated. In case of ACR pause, this message indicates the request for an ACR pause and can provide the duration for the pause (time to wait) or under which criteria the ACR is expected to resume. In case of ACR resume, this message indicates the request for an ACR to be resumed after a pause.\n4.\tS-EES or T-EES determines the ACR to be modified based on the request in step 3. The ACR modification, is executed by the execution entity as described in clause 7.6.2.1.3.\n5.  The S-EES (or T-EES for EEC executed ACR via T-EES scenario) sends an ACR modification response to the EEC to notify on the result.\n6.\tThe EEC may optionally provide a notification to the AC (over EDGE-5) to inform on the ACR modification result.\nNOTE:\tThis procedure has impacts on EDGE-5 interface.\nPre-conditions:\n1.\tThe ACR has been launched.\nThe figure depicts a S-based ACR modification procedure, which is a crucial step in the process of improving the performance of an ACR (Active Controlled Rayleigh Antenna) system. The figure illustrates the step-by-step process, including the selection of the appropriate S-based ACR, the modification of the antenna, and the installation of the modified system. The figure is essential for understanding the technical aspects of the ACR modification process and ensuring the proper functioning of the system.\nFigure 7.6.2.1.2-1: S-EES-based ACR modification procedure\n1.\tThe S-EES detects a change of the expected UE behaviour. In particular, S-EES acting as AF, may receive a UE location report or a monitoring event report from 5GC (assuming that S-EES has subscribed to consume 5GC services like LCS or NEF monitoring events). Such UE location report or monitoring event report may help indicating that the UE is not going to be at the predicted location at the given time and is expected to deviate by the original planning.\n2.\tThe S-EES identifies that one or more ACR updates are needed based on the information on the change of the UE behaviour. The S-EES then decides for each ACR, the type of the ACR update to be an ACR modification and the parameters that need to be updated, such as the expected completion time.\n3.\tS-EES or T-EES determines the ACR(s) to be modified based on the decision in step 2. For each ACR identified to be updated in step 2, the ACR modification is executed by the execution entity as described in clause 7.6.2.1.3.\n4.  The S-EES sends an ACR modification notification to EEC to notify on the result.\n5.\tThe EEC may optionally provide a notification to the AC (over EDGE-5) to inform on the ACR that is modified.\nFigure 7.6.2.1.3-1 illustrates the ACR modification execution procedure as used in the procedures in 7.6.2.1.1 and 7.6.2.1.2.\nPre-condition:\n1.\tAn ACR has been launched between EEC, S-EES, S-EAS, T-EES and S-EAS, where S-EES and T-EES can be the same or different; and one of the following preconditions holds:\n1.1\tThe S-EES or T-EES has received an ACR modification request from EEC, e.g. according to the step 3 of the EEC-based ACR modification procedure in solution 6 in clause 7.6.2.1.1; or\n1.2\tThe S-EES has decided an ACR modification, e.g. according to step 3 of EES-based modification procedure in solution 6 in clause 7.6.2.1.2.\n\nThe figure depicts the ACR (Automatic Configuration and Reconfiguration) modification execution procedure, which is a crucial step in network management. The figure shows the process of modifying the configuration of an ACR, which is a type of network device used for automatic configuration and reconfiguration of network devices. The figure includes various components such as the ACR, the configuration file, and the command line interface, which are essential for the execution of the ACR modification procedure. The figure also includes a step-by-step guide on how to modify the ACR configuration, which is important for ensuring the proper functioning of the network. Overall, the figure provides a clear and concise visual representation of the ACR modification execution procedure, making it easy to understand and follow.\nFigure 7.6.2.1.3-1: ACR modification execution procedure\n1.\tIf the EAS has subscribed to receive ACR notify for modification, the EES shall notify the EAS about the need to update the ACR. The EES shall include the updated parameters in the notification to the EAS.\nDepending on the ACR scenario, the EES can be either of S-EES or T-EES. If it is S-EES, the EAS will be S-EAS. Otherwise if the EES is T-EES, the EAS will be T-EAS.\n2.\tThe EES processes the updated parameters. The EES sends the updated parameters to the remote EES, if the updated parameter can be used by the remote EES to handle the messages from the corresponding EAS, e.g. expected completion time if provided in step 3 of clause 7.6.2.1.1 for the waiting time for the ACR status update.\nWhen EES from step 1 is S-EES the remote EES will be the T-EES. Otherwise if the EES is T-EES, the remote EES will be S-EES.\n3.\tIn response to the message in step 2, the remote EES responds and confirms the reception and acceptance of the updated parameters.\nNOTE:  It is assumed that the updated parameters (e.g. updated completion time) do not require the update of any of the EEC context information.\n4.\tIf in step 1 the S-EAS receives the ACR notify for modification, it may initiate ACT update process with the T-EAS. Otherwise if in step 1, T-EAS receives the ACR notify for modification, it may initiate the ACT update process. S-EAS and T-EAS may perform step 4 in an application specific time and manner any time after the notification in step 1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.6.3\tSolution evaluation",
                            "text_content": "This solution provides the procedures to update the parameters of an ACR in service continuity planning. It addresses the third open issue of the KI#3, to handle scenarios when the ACR needs to be modified, e.g. due to UE mobility. The solution does not require enhancement to the existing architecture in Release 17.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.7\tSolution #7: EES monitors UE mobility for service continuity planning",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.7.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.7.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue#3 on enhancements to service continuity planning in clause 4.3\nIn this solution, the EES is responsible to identify the ACR type in ACR detection part or receive the ACR type from the EAS and the EEC. When application context transmission is complete, the EAS will send ACR status update message to the EES, once EES detects that UE moves to the predicted/expected location, the EES will notify EEC ACR complete message, then the EEC can be aware of  the compeletion of ACR. With this solution the EAS will not need to monitor the UE mobility and determine when to send the ACR status update message to the EES.\nCompared to the procedure specified in 3GPP TS 23.558 clause  8.8.2.5, the following differences are captured below:\n2.\tThe detection entities (EEC, S-EAS, S-EES) detect the ACR may be required and identify the ACID and related ACR type (normal ACR or service continuity planning).\n3.\tIf the EEC or S-EAS detect the ACR event, the EEC or S-EAS should inform S-EES with ACID, ACR type and predicted/expected UE location or EAS service area in the ACR launching procedure.\n10. when S-EAS detects application context transmission is complete, the S-EAS sends ACR status update request message to the S-EES with ACID.\n11. Once S-EES detects the UE has moved to the predicted/expected UE location or EAS service area, then the S-EES sends ACR complete notify message to the EEC.\nCompared to the procedure specified in 3GPP TS 23.558 clause  8.8.2.3, the following differences are captured below:\n4.\tThe EEC performs ACR lauching procedure indicating S-EES with ACR type (normal ACR or service continuity planning) and predicted/expected UE location or EAS service area.7.\tWhen S-EAS detects application context transmission is complete, the S-EAS sends ACR status update request message to the S-EES with ACID.\n9. \tOnce S-EES detects the UE has moved to the predicted/expected UE location or EAS service area, then the S-EES sends ACR complete notify message to the EEC indicating that UE has moved to the predicted location.\nEnhancements to 3GPP TS 23.558 clause 8.8.3.4\tACR launching procedure\nFigure 8.8.3.4-1 illustrates the ACR launching procedure by the EEC or the S-EAS. If this procedure is triggered by the EEC, depending on the ACR action indicated in the ACR request, the procedure is used for either ACR initiation or ACR determination. If this procedure is triggered by the S-EAS, the procedure is used for ACR determination.\nPre-condition:\n1.\tThe EEC has been authorized to communicate with the EES as specified in clause 8.11, if the procedure is triggered by the EEC; and\n2.\tInformation related to the S-EES is available with the S-EAS, if the procedure is triggered by the S-EAS.\nThe figure depicts the ACR (Automatic Call Rejection) launching procedure, which is a crucial step in the call termination process. The diagram illustrates the various components involved, including the ACR server, the call queue, and the call termination server. The figure also shows the flow of calls from the ACR server to the call termination server, highlighting the importance of proper routing and failover mechanisms to ensure uninterrupted service.\nFigure 8.8.3.4-1: ACR launching procedure\n1.\tThe EEC or the S-EAS sends an ACR request message to the EES in order to start ACR. The ACR request message includes ACR type to indicate whether the ACR is for normal ACR or service continuity planning. The ACR request message includes Predicted/Expected UE location or EAS service area to indicate that the EES should detect whether the UE has moves to the Predicted/Expected UE location or EAS service area or not in ACR clean-up phase. The ACR request message includes ACR action to indicate either ACR initiation request or ACR determination request. If the procedure is triggered by the S-EAS, the ACR request message is only for ACR determination.\nAn ACR request for ACR initiation:\n-\tincludes an indication of whether the EEC requests the EES to perform EAS notification; and\n-\tprovides information used by EES to perform AF traffic influence as in 3GPP TS 23 501 [2].\nAn ACR request for ACR determination informs the EES that the need for ACR has been detected at EEC.\n2.\tThe EES checks if the requestor is authorized for this operation. If authorized, the EES processes the request and performs the required operations.\nIf the request in step 1 is for ACR initiation:\n-\tthe EES may use information provided in the request to apply the AF traffic influence with the N6 routing information of the T-EAS in the 3GPP Core Network (if applicable), as described in 3GPP TS 23.501 [2], clause 5.6.7.1; and\n-\tif the EAS notification indication is provided in the step 1 request and the EAS has subscribed to receive such notification, the EES shall notify the EAS about the need to start ACR.\nIf the request in step 1 is for ACR determination, the EES decides to execute ACR as described in clause 8.8.2.5.\n3.\tThe EES responds to the requestor's request with an ACR response message.\nEnhancements to 3GPP TS 23.558 clause 8.8.4.4\tACR request\nTable 8.8.4.4-1 describes information elements for the ACR request sent from the EEC either to the S-EES or T-EES.\nTable 8.8.4.4-1: ACR request\n\nNOTE:\t\"Prediction expiration time\" and \"expected completion time\" in solution #6 are the same IE.\nNOTE:\tThe ACR cancellation can be triggered when UE doesn't move to the location monitored by the EES.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 8.8.4.4-1: ACR request",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.7.3\tSolution evaluation",
                            "text_content": "This clause provides an evaluation of the solution.\nThis solution address KI#3. It enhances the existing service continuity procedure in 3GPP TS 23.558 [2] with support for the EES monitoring UE mobility for service continuity planning. With this solution, the EAS will not need to monitor the UE mobility and determine when to send the ACR status update message to the EES.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.8\tSolution #8: EAS Service API enablement using CAPIF",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.8.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.8.2\tSolution description",
                            "text_content": "This solution addresses the Key issue #2: Enablement of Service APIs exposed by EAS as specified in the clause 4.2 by supporting for an EAS to expose its Service APIs towards the other EASs.\nAs specified in TS 23.558 (Rel-17), the Edge Enabler Layer exposes Service APIs towards the EASs. The exposed Service APIs include the capabilities provided by EES (clause 8.6 of TS 23.558); the capabilities provided by the 3GPP core network (clause 8.7 of TS 23.558); and SEAL service APIs (clause A.4 of TS 23.558).\nIn this solution, the Edge Enabler Layer also supports for an EAS to expose its Service APIs (i.e. EAS Service APIs) towards the other EASs in order to fulfil the architectural requirements specified in the clause 5.2. This solution exploits CAPIF specified in 3GPP TS 23.222 [16] to support publication/discovery, and change subscription of EAS Service APIs as studied in Sol#15 of TR 23.758 (Rel-17) with the following architectural assumptions within the CAPIF architecture:\n-\tAn EAS may act as an API provider by implementing API provider domain functions (i.e. API exposing function, API publishing function, and API management function)\n-\tAn EAS may act as an API invoker\n-\tAn EES may act as a CAPIF provider by implementing CAPIF core function (CCF)\nNote:\n-\tEES provides support for the logging and audit of EAS API invocation as described in 3GPP TS 23.222[16], clause 8.19 and clause 8.22.\n-\tEES control the service API access as specified in clause 8.12 of 3GPP TS 23.222 [16].\nBased on the architectural assumption above, the essential operations regarding EAS Service APIs complying with CAPIF are as follows:\n-\tAn EAS (acting as API provider) may publish its EAS Service APIs to EES (acting as CAPIF provider) and EES may further publish the EAS service APIs to remote EES via CCF interconnection.\n-\tAn EAS (acting as API invoker) may discover EAS Service APIs from EES (acting as CAPIF provider) and EAS Service APIs from remote EES via CCF interconnection\n-\tAn EAS (acting as API invoker) may subscribe to be notified of dynamic information or availability of EAS Service APIs from EES (acting as CAPIF provider)\n-\tAs EAS1(acting as API invoker) discovers EAS2 (acting as API provider) from EES, it can invoke the Service APIs directly from EAS2\nThe Figure 7.8.2.2-1 depicts the essential operational steps for EAS Service API enablement using the CAPIF operations as shown in Annex A of TS 23.222 [16].\nPre-conditions:\n1.\tThe EAS #A-1 and EAS #A-2 have completed the EAS registration with the EES #A.\n\nThe figure depicts the various CAPIF operations performed in the Edge Enabler Layer for enabling the EAS Service API. It illustrates the steps taken to enable the EAS Service API, including the creation of a new API, the configuration of the API, and the deployment of the API. The figure also includes a diagram of the API's structure and the steps involved in enabling the API.\nFigure 7.8.2.2-1: CAPIF operations in Edge Enabler Layer for EAS Service API enablement\n1.\tThe EAS #A-2 (AMF) registers its API provider domain functions to the EES #A (CCF) via CAPIF-5.\n2.\tThe EAS #A-2 (APF) publishes its exposing Service API(s) to the EES #A (CCF) via CAPIF-4.\n3.\tThe EAS #A-1 (API invoker) performs onboarding process with the EES #A (CCF) via CAPIF-1.\n4.\tThe EAS #A-1 (API invoker) discovers from the EES #A (CCF) a Service API required to run via CAPIF-1.\n5.\tThe EAS #A-1 (API invoker) invokes the Service API provided by EAS #A-2 (AEF) via CAPIF-2 as discovered from the EES #A (CCF).\n6. \tThe EAS #A-1 (API invoker) subscribes to notifications of any updates of target Service APIs on the EES #A (CCF) via CAPIF-1.\n7.\tThe EES #A (CCF) and EES #B (CCF) inter-operate with each other via CAPIF-6 for interconnection operations for publication and discovery of Service APIs managed by each EES.\nThe Figure 7.8.2.2-2 depicts the distributed deployment of EESs (CCFs) as shown in clause 7.4 of TS 23.222 [16].\nThe figure depicts a distributed EES (Ephemeral, Cloud-based, and Software-defined) deployment for API invocation across EES, showcasing the use of CCF (Cloud-based Control Function) for efficient and scalable communication.\nFigure 7.8.2.2-2 Distributed EES (CCF) deployment for API invocation across EES\nThe essential operations regarding EES deployment and across EES API invocation complying with CAPIF are as follows\n-\tIn the distributed deployment, EES#A (acting as CCF#A) and EES#B (acting as CCF#B) interact with CCF#C via CAPIF-6 reference point. The CCF#C assumes the role of a centralized repository of the service APIs in the PLMN trust domain.(e.g. Service APIs exposed by EAS #A-2 and EAS #B in the Figure)\n-\tThe EES#A and EES#B publishes the service API(which are published by EAS #A-2 and EAS #B respectively) provided by its connected API exposing function(s) to CCF#C, and obtains the service API information provided by other EES from centralized CCF#C\n-\tEAS#A-1 (acting as API invoker) is able to discover and invoke the service APIs provided by EAS#B connected to CCF#B\nIn TS 23.558, \"Service KPI\" IEs are specified to provide information about service characteristics provided by EASs; or required by ACs. This is used for discovery or provisioning of EASs which meet the Service KPIs required by ACs.\nIn the similar manner, Service KPIs of EASs (as API Providers) need to be specified in CAPIF to be used for discovery or provisioning of EAS Service APIs which meet the Service KPIs required by EASs (as API Invokers).\nThe proposed IEs in CAPIF as specified in 3GPP TS 23.222 [16] related to Service KPIs can be summarized as follows:\n1)\tService KPIs provided by EAS as API Provider\na.\tService API publish request\ni.\tService API information\n-\tService KPI (new IE): information about service characteristics provided by the Service API; can be mapped to EAS Service KPIs in EAS Profile [TS 23.558] of the EAS providing the Service API\n2)\tService KPIs required by EAS as API Invoker\na.\tOnboard API invoker response\ni\tService API information\n-\tService KPI per API (new IE): information about service characteristics provided by the Service API which is allowed to access\nb.\tService API discover request\ni\tQuery information\n-\tService KPI (new IE): information about service characteristics as a criterion for discovering matching Service APIs required by the API invoker\nc.\tService API discover response\ni\tService API information\n-\tService KPI per API (new IE): information about service characteristics provided by the Service API corresponding to the discovery request\n3)\tService KPIs for CAPIF interconnection between EESs\na.\tInterconnection API publish request\ni.\tService API information\n-\tService KPI (new IE): information about service characteristics provided by the Service API which is published across CCFs (i.e. implemented in EESs)\nb.\tInterconnection service API discover request\ni\tQuery information\n-\tService KPI (new IE): information about service characteristics as a criterion for discovering matching Service APIs across CCFs (i.e. implemented in EESs)\nThe relevant information elements of CAPIF are listed as follows. The highlighted with bold text is proposed to add for supporting the Service KPIs.\nTable 7.8.2.3-1: Service API publish request (Table 8.3.2.1-1 of TS 23.222 [16])\n\n\nTable 7.8.2.3-2: Onboard API invoker response (Table 8.1.2.2-1 of TS 23.222 [16])\n\nTable 7.8.2.3-3: Service API discover request (Table 8.7.2.1-1 of TS 23.222 [16])\n\nTable 7.8.2.3-4: Service API discover response (Table 8.7.2.2-1 of TS 23.222 [16])\n\nTable 7.8.2.3-5: Interconnection API publish request (Table 8.25.2.1-1 of TS 23.222 [16])\n\nTable 7.8.2.3-6: Interconnection service API discover request (Table 8.25.2.3-1 of TS 23.222 [16])\n\nThe EAS Service KPIs is defined as below\nTable 7.8.2.3-7: EAS Service KPIs\n\nIn TS 23.222 [16], the Service KPIs can be specified as a part of Query information and Service API information in abstract, so that the Service KPI IE can be implemented as one or more new attributes of ServiceAPIDescription data type in TS 29.222 (but it's up to the CT3's work).\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.8.2.3-1: Service API publish request (Table 8.3.2.1-1 of TS 23.222 [16])",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.8.2.3-2: Onboard API invoker response (Table 8.1.2.2-1 of TS 23.222 [16])",
                                    "table number": 7,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.8.2.3-3: Service API discover request (Table 8.7.2.1-1 of TS 23.222 [16])",
                                    "table number": 8,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.8.2.3-4: Service API discover response (Table 8.7.2.2-1 of TS 23.222 [16])",
                                    "table number": 9,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.8.2.3-5: Interconnection API publish request (Table 8.25.2.1-1 of TS 23.222 [16])",
                                    "table number": 10,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.8.2.3-6: Interconnection service API discover request (Table 8.25.2.3-1 of TS 23.222 [16])",
                                    "table number": 11,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.8.2.3-7: EAS Service KPIs",
                                    "table number": 12,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.8.3\tSolution evaluation",
                            "text_content": "This solution allows for an EAS to expose its Service APIs towards the other EASs. It exploits CAPIF as specified in 3GPP TS 23.222 [16] for publication/discovery, and change subscription of EAS Service APIs.\nThis solution addresses the key issue #2: enablement of service APIs exposed by EAS as specified in the clause 4.2; and fulfils the architectural requirements for enablement of service APIs exposed by EAS as specified in the clause 5.2.\nThis solution relies on the EDGEAPP architecture as specified in TS 23.558 [2] with extended capabilities of EAS and EES for publication/discovery of EAS Service APIs but there is no impact to the APIs and procedures of EDGAPP since the extended capabilities can be realized using CAPIF.\nThis solution relies on the CAPIF as specified in TS 23.222 [16] with some updates on the information elements of the CAPIF APIs for publish/discovery.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.9\tSolution #9: Application traffic influence trigger from EAS",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.9.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.9.2\tSolution description",
                            "text_content": "This solution addresses key issue 14. An EAS can explicitly request EES including necessary information to influence the EAS traffic from UE(s). Then the EES can trigger the AF request to influence traffic routing towards the 3GPP CN for one or more UE(s) accessing the EAS.\nThe figure depicts the influence of AF (Antenna Field) on the traffic for Enhanced Air Traffic Management (EAS). It shows the relationship between the AF and the traffic, highlighting the importance of proper alignment and coordination to ensure efficient and safe air traffic management.\nFigure 7.9.2.2: AF influence the traffic for EAS\n1.\tThe EAS sends an EAS traffic influence request.\n2.\tThe EES performs an authorization check to verify whether the EAS has the authorization to request application traffic influence. The EES includes target DNAI, traffic descriptor information and N6 routing information at target DNAI in the Nnef_TrafficInfluence_Create/Update Request to the NEF, or Npcf_PolicyAuthorization_Create/Update Request to the PCF.\n3.\tUpon successful authorization, the EES sends the traffic influence request to 5GC to influence the traffic for EAS as described in 3GPP TS 23.501, clause 5.6.7.1.\n4.\tThe EES sends the EAS traffic influence response.\nTable 7.9.2.2-1: EAS traffic influence request\nTable 7.9.2.2-2: EAS traffic influence response\n7.9.3\tSolution evaluation\nThis solution addresses key issue 14, it is applicable to the scenario where the EAS triggers the EES to perform traffic influence.  This solution has no impact to the R17 EDGEAPP architecture.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.9.2.2-1: EAS traffic influence request",
                                    "table number": 13,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.9.2.2-2: EAS traffic influence response",
                                    "table number": 14,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "7.10\tSolution #10: low power mode support",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.10.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.10.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #15 on supporting of constrained devices for Edge.\nFor the constrained UEs, there are two aspects should be considered to reduce the power consumption, one is help UE turn into idle mode or DRX mode when there is no traffic transmitting between UE and network, another one is help to reduce the traffic data rate when UE is connected to the network with transmitting packets.\nEEC can get the knowledge about the constrained UE. When the applications are running with high power consumption, or the UE decides that the battery level is low and should start power saving, the EEC should send messages to EES with carrying such indication for low-power consumption requirement and specific application identifier.\nWhen EES gets low-power consumption indication from EEC, the EES should trigger two methods to satisfy the constrained UE requirement.\nMethod1: EES should send the message to corresponding EAS through EDGE-3 that the data rate should be reduced, so that the downlink data will be reduced and UE do not need to process high-bandwidth traffic. How to balance the low-power consumption requirement and the UE experience is based on the EAS implementation.\nMethod2: EES should send the UE's low-power consumption indication to 3GPP core network. The 3GPP system may trigger some specific policies or treatment for such applications and UEs e.g. changing the QoS profile AM policies e.g. update UE-AMBR, UE- slice MBR, RFSP index and/or service area restriction, for those UEs as specified in TS 23.502 clause 4.15.6.9, and changing the SM policies e.g. downgrade the QoS (e.g. reducing Requested Guaranteed Bitrate, Requested Maximum Bitrate) as specified in TS 23.502 clause 4.15.6.6.\nThis method may not satisfy the high-level experience of the application but can support the application running basically.\nPre-condition:\n1.\tThe AC-EAS cannot handle the negotiation at the application layer.\nThe figure depicts a 10 GHz low power mode support, highlighting the various components and their functions. The diagram illustrates the various components such as the low power mode controller, power amplifier, and low power mode receiver. The figure also includes a schematic representation of the power distribution system, which is crucial for ensuring efficient power delivery to the receiver.\nFigure 7.10.2.2-1: low power mode support\n1.\tThe EEC sends low-power consumption indication to EES with UE Identifier, EEC ID, AC ID, low-power consumption indicator, which indicating a constrained UE, and triggers the low power consumption enhancement.\n2a.\tWhen EES gets the low-power consumption indication, the EES may send low power indication to EAS to request corresponding EAS to reduce the downlink packets, which can help constrained UE process the application with constrained power consumption. The request could provide the UE Identifier(s).\n2b. When EES gets the low-power consumption indication, the EES may request 3GPP core network to update the QoS policy to support constrained UE, e.g. EES could act as an AF to set up a session with required QoS procedure as specified in TS 23.502 clause 4.15.6.6.\n3a. The EAS responds to EES to indicate the low-power processing is successful or failure.\n3b. the 3GPP core network responds to EES with successful or failure.\n4. EES response to EEC.\n7.10.3\tSolution evaluation\nThis solution addresses KI#15 by either sending the message to corresponding EAS to reduce data rate, or triggering some specific policies or treatment for such applications and UEs to reduce the Requested Guaranteed Bitrate, Requested Maximum Bitrate.\nEditor's note:\tWhether this solution works for all scenarios and should it be considered in the normative work is FFS.\nEditor's note:\tIt is FFS whether downgrade the QoS can achieve the UE power saving.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.11\tSolution #11: A deployment option for alignment with ETSI MEC using CAPIF",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.11.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.11.2\tSolution description",
                            "text_content": "This solution addresses \"KI#5: Alignment of EDGEAPP and ETSI MEC\" in alignment with ETSI MEC using CAPIF for exposing and invoking Service APIs as well as \"KI#2: Enablement of Service APIs exposed by EAS\" for exposing EAS Service APIs to ETSI MEC entities. It specifies a CAPIF deployment option for:\n1.\tallowing EASs to invoke MEC services, and\n2.\texposing Service APIs provided by EES or EAS (as described in KI#2) to MEC Applications\nThe following architecture is proposed to use CAPIF for alignment with ETSI MEC in terms of exposing EAS|EES Service APIs and invoking MEC Services as a deployment option.\nBased on the proposed deployment option, the alignment of EDGEAPP and ETSI MEC could be done by mapping or complementing their own APIs to CAPIF APIs, especially for invoking/exposing Service APIs and MEC Services.\nNote that Figure 7.11.2.1-1 below is to illustrate what EDGEAPP and ETSI MEC could look like when they exploit CAPIF for invoking and exposing their APIs. There is no such architecture defined in EDGEAPP or ETSI MEC as shown in Figure 7.11.2.1-1.\nThe figure depicts a deployment option for alignment with ETSI MEC using CAPIF, which stands for Centralized Alignment Point for Interoperability. It illustrates the use of a centralized alignment point to ensure interoperability between different network technologies and services. The figure shows the various components involved in the alignment process, such as the central alignment point, the alignment service, and the alignment protocol. The figure also highlights the importance of interoperability in the context of MEC, as it enables the seamless integration of different network technologies and services.\nFigure 7.11.2.1-1: A deployment option for alignment with ETSI MEC using CAPIF\n\nThe proposed deployment option can be realized with the following implementations:\n\n1)\t3GPP EDGEAPP\na.\tEES may implement CAPIF Core Function to manage the Service APIs exposed by EAS and EES;\nb.\tEES may implement CAPIF Core Function to interconnect with CCF of ETSI MEC via CAPIF-6\nc.\tEAS may implement CAPIF API Provider functions in order to expose EAS Service APIs to EDGEAPP EASs or ETSI MEC Applications\nd.\tEAS may implement CAPIF API Invoker function to invoke EAS Service APIs or ETSI MEC Services\ne.\tEAS may invoke EES Service APIs via EDGE-3\nf.\tEES may implement CAPIF API Provider functions in order to expose EES Service APIs (e.g. UE location API, AC information exposure API, etc.) to API invokers (e.g. EASs, ETSI MEC Applications)\n-\ti.e. EES Service APIs (as well as EAS Service APIs) need to be published to CAPIF Core Function\n2)\tETSI MEC (out of the SA6 scope)\na.\tETSI MEC (e.g. MEP) may implement CAPIF Core Function to manage the MEC Services exposed by MEP and MEC App.\nb.\tETSI MEC (e.g. MEP) may implement CAPIF Core Function to interconnect with CCF of EDGEAPP EES via CAPIF-6\nc.\tETSI MEC (e.g. MEP, MEC App.) may implement CAPIF API Provider functions in order to enable EDGEAPP EASs to invoke MEC Services via CAPIF-2\nd.\tETSI MEC (e.g. MEC App.) may implement CAPIF API Invoker function to invoke EDGEAPP EAS|EES Service APIs\n\nNOTE:\tRefer to Annex B.2 of ETSI GS MEC 011 [14] for mapping MEC service management API to CAPIF APIs.\nThe procedures for API publication, API discovery, API invocation, and CCF interconnection are as specified in TS 23.222 [16].\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.11.3\tSolution evaluation",
                            "text_content": "This solution provides a deployment option for alignment with ETSI MEC using CAPIF.\nThis solution addresses KI#5: Alignment of EDGEAPP and ETSI MEC as specified in the clause 5.5; and KI#2: Enablement of Service APIs exposed by EAS as specified in the clause 5.2.\nThis solution relies on the EDGEAPP architecture as specified in TS 23.558 [2] with extended roles of EAS and EES as CAPIF entities and extended roles of ETSI MEC entities like MEP as CAPIF entities to support the alignment of discovery and invocation of EES|EAS Service APIs and MEC Services by ETSI MEC and EDGEAPP entities, respectively.\nThis solution also relies on the CAPIF as specified in TS 23.222 [16].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.12\tSolution #12: Service continuity planning permission",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.12.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.12.2\tSolution description",
                            "text_content": "This solution addresses the key issue #3 on enhancements to service continuity planning and the key issue #12 on EEL service differentiation.\nIn this solution, the EEC provides its capability to perform service continuity planning and the EES can provide information about allowing the service continuity planning.\nPre-conditions:\n1.\tEEC knows whether the planned or predicted UE mobility behaviour is available.\n2.\tThe EES is locally configured with the UE-specific service information (as specified in the NOTE 2 in clause 8.5.2.2 of TS 23.558) and the ECSP policy indicating whether the service continuity planning is allowed or not for each EAS(s).\nNOTE:\tDetails of the ECSP policy and how to configure such ECSP policy into the EES is not the scope of this solution\nThe figure depicts a service continuity planning permission during the EEC Registration procedure, illustrating the steps and requirements for ensuring uninterrupted service during the registration process.\nFigure 7.12.2.2-1: Service continuity planning permission during EEC Registration procedure\n1.\tThe EEC provides EEC Service Continuity Support or indication to request service continuity planning permission when sending EEC Registration request. The request message may contain the capability of EEC to detect and provide information about planned or predicted UE mobility behaviour (e.g. including whether the UE moves to the expected/predicted location or not).\n2.\tIf the EEC Registration request message includes EEC Service Continuity Support or indication to request service continuity planning permission, the EES verifies if the service continuity planning is allowed or not for the EEC based on the ECSP policy or the request from the EAS provider. If the EEC indicates to the EES in step1 that it cannot detect information about predicted UE mobility behaviour, then the EES monitors predicted UE mobility (e.g. including whether the UE moves to the expected/predicted location or not for service continuity planning.).\nIf AC profile(s) is provided in step 1, the EES may verify whether the service continuity planning is allowed or not for each EAS(s) matched with the AC profile(s) based on the ECSP policy or the request from the EAS provider.\n3.\tThe EES sends EEC Registration response including indication on whether service continuity planning is allowed or not.\nIf the EEC receives the indication that service continuity planning is allowed in step 3, and after the available ACR scenarios are determined for the EEC, the EEC detects or acquires the planned or predicted UE mobility behaviour according to the determined ACR scenarios. If the EES verifies and indicates the service continuity planning permission per application to the EEC in step 2-3, the EEC performs the required detection or acquisition of the planned or predicted UE mobility behaviour for the EASs allowed for service continuity planning according to the determined ACR scenarios.\nIf the EEC is indicated that service continuity planning is not allowed, the EEC does not issue the application context relocation request for service continuity planning.\nNOTE:\tIf the EEC is indicated that service continuity planning is not allowed, the EEC does not perform detecting or acquiring the planned or predicted UE mobility behaviour for the purpose of service continuity planning.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.12.3\tSolution evaluation",
                            "text_content": "This solution addresses the key issue #3 on enhancements to service continuity planning and the key issue #12 on EEL service differentiation. The proposed solution enables ECSP(s) to allow the service continuity planning selectively for UEs or for applications. For example, the service continuity will be enabled only if the resources are sufficient and if the UE (e.g. of a premium user) is allowed for the predicted application context relocation. In this regard, the solution #13 proposes potential impact on information to communicate within EEL in order to enable service differentiation of the service continuity planning. Specifically, the solution introduces the following impacts on the EEC and the EES:\n-\tThe EEC supports to provide indication to request service continuity planning permission and its capability to perform service continuity planning; and\n-\tThe EES supports to verify if the service continuity planning is allowed and provide information about the permission of the service continuity planning to the EEC.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.13\tSolution #13: Update ECS configuration information",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.13.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.13.2\tSolution description",
                            "text_content": "This solution addresses key issue #6 on edge services support across ECSPs and key issue #10 on support for roaming UEs in the case where the ECS manages other ECSP's EES information.\nThis solution proposes to include supported PLMN ID(s) and optionally supported ECSP ID(s) in the ECS in the ECS configuration information as described in the following table:\nTable 7.13.2-1: ECS configuration information per ECS\n\nNOTE 1:\tIn Table 7.13.2-1, the Supported ECSP List information can be associated per PLMN based on the relationships in clause 9.1.1. If ECSPs and PLMN operators do not want to explicitly expose their relationship in the ECS configuration information, the Supported ECSP List information may either not be associated with the Supported PLMN ID or not be included.\nNOTE 2:\tExcept in LBO roaming scenario, when the ECS configuration in Table 7.13.2-1 is successfully stored in the UDM, the H-SMF can provide ECS Configuration Information including a VPLMN ID. In this case, UE can use the ECS Configuration Information to get EDN configuration information of the VPLMN only when the UE is registered via a cell of the VPLMN.\nThe above ECS configuration information may be provisioned to the 5GC procedure (see 3GPP TS 23.502 [8]) or configured in an ECS so that it can be used to select proper other ECS in solution #4 of clause 7.4.\nNOTE 3:\tHow to provision the updated ECS configuration information via the 5GC is SA2's responsibility.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.13.2-1: ECS configuration information per ECS",
                                    "table number": 15,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.13.3\tSolution evaluation",
                            "text_content": "This solution addresses key issue #10 on support for roaming UEs.\nThis solution proposes to include additional information in the ECS configuration information in order to provide the 5G core network and the EEC with PLMN ID(s), which can be used to select ECS to be used in scenarios of roaming.\nThis solution has no architectural enhancements.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.14\tSolution #14: V-ECS Discovery via the H-ECS",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.14.1\tArchitecture enhancements",
                            "text_content": "The EDGE-10 reference point, which is shown in clause 6.1.1.1, may be used between the V-ECS and H-ECS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.14.2\tSolution description",
                            "text_content": "This solution addresses aspects of Key Issue #10. Specifically, the solution explains how the EEC in the roaming UE knows the availability of ECS(s) and/or EES(s) and discovers them in the VPLMN.\nThe principle of this solution is that, when roaming, the H-ECS provides information to the UE so that the EEC can communicate with an ECS in the VPLMN (i.e. a V-ECS). The UE can then use a home routed PDU Session to communicate with an H-ECS and an LBO PDU Session to communicate with a V-ECS. In this solution, the home network does not need to provide V-EES information to the EEC. The EEC can discover V-EES information by interacting directly with the V-ECS.\nAs explained in 3GPP TS 23.501 [5]: \"The HPLMN can control via subscription data per DNN and per S-NSSAI whether a PDU Session is to be set-up in HR or in LBO mode.\" This solution explains how the H-ECS can provide information to the UE that can be used to establish an LBO PDU Session that is used to reach a V-ECS.\nAs one option, the H-ECS can provide an FQDN or an IP Address of a V-ECS to the EEC. When the UE accesses the provided FQDN or IP Address, URSP rules may steer the UE to use a DNN/S-NSSAI combination that can be used to reach the V-ECS (e.g. an LBO Session).\nAs a second option, the H-ECS can provide a DNN / S-NSSAI combination to the EEC. In this case, the DNN / S-NSSAI combination may be used to send a PDU Session Establishment Request that will result in an LBO PDU Session. The SMF in the VPLMN may then send ECS Address Configuration Information to the UE as described in 3GPP TS 23.548 [19]. The EEC may then use the ECS FQDN or IP Address from the ECS Address Configuration Information to reach the V-ECS.\nThe procedures present high-level overview of Solution #14.\n\nThe figure depicts a V-ECS (Virtual-Edge Computing) discovery process, where the H-ECS (Hybrid-Edge Computing) is requested by the user. The figure illustrates the steps involved in the discovery process, including the request-response cycle, which is essential for efficient communication and data processing in the V-ECS.\nFigure 7.14.2.2.1-1: V-ECS Discovery via the H-ECS by request-response\n1.\tThe EEC sends a Service Provisioning Request to an ECS in the home network via a home routed PDU session. As described in 3GPP TS 23.558 [2], clause 8.3.3.3.7, the Service Provisioning Request may include the identity of the PLMN that the UE is currently registered to.\n2.\tIf the Service Provisioning Request from the EEC did not include a PLMN ID, then the ECS may invoke the NEF's monitoring event API with the monitoring type set to ROAMING_STATUS and the plmnIndication set to TRUE as described in 3GPP TS 29.522 [17] and 3GPP TS 29.122 [18]. The ECS receives a response from the NEF. The response indicates if the UE is roaming and the identity of the UE's serving PLMN.\n3.\tIf the H-ECS is already provisioned with ECS Discovery Information that can be sent to the UE (e.g. via OAM), then steps 3 and 4 may be skipped. In this step, the H-ECS may send a V-ECS Information Request to a V-ECS of the PLMN that the UE is currently registered in order to obtain the information that should be sent to the UE so that the UE can establish an LBO PDU Session in the VPLMN. The V-ECS Information Request can include the UE's location information.\nThe H-ECS can use the PLMN ID to determine the V-ECS to contact. For example, this can be based on a DNS lookup or the addresses of V-ECSs may have been pre-configured in the H-ECS (e.g. via OAM). If the VPLMN hosts multiple V-ECSs, then which V-ECS is resolved can be based on configuration.\n4.\tThe V-ECS responds to the H-ECS with a V-ECS Information Response. The V-ECS Information Response can include a DNN (O), and S-NSSAI (O) that can be used by the UE to establish an LBO PDU Session in the VPLMN. The V-ECS can use the UE's location to determine what DNN (O), and S-NSSAI (O) should be sent to the UE in order to cause the UE to establish an LBO PDU Session with a suitable DNN/S-NSSAI combination.\nNOTE:\tThe information that is used by the H-ECS to contact the V-ECS can be different than the information that is used by the EEC to contact a V-ECS. As shown in Figure 7.14.2.2-1, the ECS that is contacted by the UE may be different.\nExample 1:\tThe UE only requires a DNN/S-NSSAI combination to establish an LBO PDU Session and get provisioned with a V-ECS FQDN during PDU Session Establishment.\n4.\tThe ECS sends a Service Provisioning Response. The Service Provisioning Response may include a new information element called ECS Discovery Information. The ECS Discovery Information may include ECS Contact Information (O, i.e. an FQDN of an ECS in the VPLMN), ECS Provider ID (O), DNN (O), and S-NSSAI (O).\n6.\tThe UE establishes an LBO PDU Session that will be used to communicate with a V-ECS and/or to obtain ECS Contact Information from the VPLMN.\nThe ECS Discovery Information from step 5 may include only ECS Contact Information. In this case, URSP rules may steer the UE to use a DNN/S-NSSAI combination that can be used to reach the ECS (e.g. an LBO Session).\nThe ECS Discovery Information from step 5 may include a DNN / S-NSSAI combination. In this case, the combination may be used to send a PDU Session Establishment Request that will result in an LBO session. The SMF in the VPLMN may then send ECS Address Configuration Information to the UE as described in 3GPP TS 23.548 [19].\n7.\tThe EEC sends a Service Provisioning Request to an ECS in the visited network. The ECS that is contacted in this step (i.e. V-ECS-2) may be different than the ECS that was contacted in steps 3 and 4 (i.e. V-ECS-1). The ECS address was obtained in step 5 or step 6.\n8.\tThe EEC receives a Service Provisioning Response via the LBO PDU session that was established in step 6. As described in step 5, the ECS service provisioning response may include ECS Contact Information for other ECS(s) in the VPLMN. For example, the ECS that was contacted in step 7 may be a \"primary\" ECS of the VPLMN and the \"primary\" ECS of the VPLMN may provide the UE with ECS Contact Information for other ECS(s) in this step.\nThe figure depicts a V-ECS (Virtual-Edge Computing) discovery process using the H-ECS (Hybrid-Edge Computing) by subscribing-notify. It illustrates the steps involved in identifying and selecting the appropriate H-ECS for a V-ECS deployment. The figure includes a flowchart, a diagram of the H-ECS, and a list of steps for the discovery process.\nFigure 7.14.2.2.2-1: V-ECS Discovery via the H-ECS by subscribe-notify\n1.\tThe EEC sends a Service Provisioning Subscription Request to an ECS in the home network via a home routed PDU session. As described in 3GPP TS 23.558 [2], clause 8.3.3.3.7, the Service Provisioning Subscription Request may include the identity of the PLMN that the UE is currently registered to.\n2.\tThe ECS invokes the NEF's monitoring event API with the monitoring type set to ROAMING_STATUS and the plmnIndication set to TRUE as described in 3GPP TS 29.522 [17] and 3GPP TS 29.122 [18]. The H-ECS receives a response from the NEF.\n3.\tThe ECS sends Service Provisioning Subscribe Response to the EEC.\n4.\tIf the UE is roaming and is detected by the 5GC network, the 5GC sends notification to the H-ECS. The notification indicates if the UE is roaming and the identity of the UE's serving PLMN.\nSteps 5 and 6 are the same as steps 3 and 4 of Figure 7.14.2.2.1-1. If the H-ECS is already provisioned with ECS Discovery Information that can be sent to the UE (e.g. via OAM), then steps 5 and 6 may be skipped.\n7.\tThe ECS sends Service Provisioning Notify to the EEC. The Service Provisioning Notify may include a new information element called ECS Discovery Information. The ECS Discovery Information may include ECS Contact Information (i.e. an FQDN of an ECS in the VPLMN, O), ECS Provider ID (O), DNN (O), and S-NSSAI (O).\nSteps 8-10 is the same as steps 6-8 of Figure 7.14.2.2.1-1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.14.3\tSolution evaluation",
                            "text_content": "Solution #4 and this solution share the principle that the home network can provide the UE with information that is used to contact a V-ECS. In solution #4 the V-ECS information may be an address, endpoint or service API information. In this solution, the V-ECS information can include a DNN (O) and/or S-NSSAI (O). The DNN / S-NSSAI can be used to establish an LBO PDU Session. Once the UE establishes an LBO PDU Session, Rel-17 procedures can be used to discover the V-ECS address. This solution and Solution #5 both include an option where EDGE-10 is used between the H-ECS and V-ECS to obtain the V-ECS information that can be sent to the UE. For example, the V-ECS may provide the H-ECS with a DNN/S-NSSAI combination that can be used by the UE to establish an LBO PDU Session. This solution additionally includes an option where OAM provisioning is used to provide the H-ECS with the V-ECS information.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.15\tSolution #15: Initial EAS selection declaration",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.15.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.15.2\tSolution description",
                            "text_content": "This solution addresses KI#8 and KI#14. In this solution, the EES can know the selected EAS and the EES is enabled to trigger the EAS traffic influence after initial EAS is being determined.\nThe figure depicts an initial EAS selection declaration, showing the process of selecting an EAS (Electronic Attack Avoidance System) for a given communication network. The figure includes various components such as the EAS selection declaration form, the EAS selection process, and the EAS selection decision. The figure is important for understanding the initial steps involved in selecting an EAS for a communication network.\nFigure 7.15.2-1: Initial EAS selection declaration\nIn Figure 7.15.2-1 step 1 and 2, the EEC performs the start-up procedures for initial service provisioning and EAS discovery. EEC may send EAS discovery to multiple EESs. If registration is required by an EES, EEC registers into the EES before EAS discovery.\nIn step 3, the EEC (or AC and EEC) selects the initial EAS from the discovered EAS candidates.\nIn step 4, the EEC sends Selected EAS declaration request with AC ID, EAS ID, EAS endpoint and UE ID to the selected EES (which is determined based on the selected EAS).\nThe EES, in step 5:\n-\tmay apply the EAS traffic influence with the N6 routing information of the EAS in the 3GPP Core Network, based on application KPIs and if the EAS traffic influence was not done before.\nNOTE 1:\tEES can also influence the EAS traffic in advance.\nThe EEC is then responded by the selected EES with success/failure of the request in step 6.\nNOTE 2:\tIt is up to the AC to decide when to connect to the selected EAS (either immediately or wait for a while) once the AC knows the selected EAS.\nNOTE 3:\tThe AC is not depicted in above figure for simplicity and solution to address interaction between AC and EEC is related to KI#4 for step 1 to 3.\nTable 7.15.2-1 describes information elements for the selected EAS announcement request sent from the EEC to the serving EES.\nTable 7.15.2-1: Selected EAS announcement request\n\nCurrently, the EES can be aware of ongoing AC-EAS session if EAS uses EDGE-3 exposure APIs with UE IP address as input. The APIs are Eees_UEIdentifier and Eees_SessionWithQoS.\nNOTE 4:\tSSC creation requires EEC Context existence. It can be determined in the normative phase whether the timing for SSC creation depends on when Eees_UEIdentifier or Eees_SessionWithQoS is invoked. It can also be possible that the SSC is not created at all during the entire AC-EAS communication period.\nAs an alternative to sending the Selected EAS announcement request, registered EECs can provide an EEC registration update providing or updating the Selected EAS Endpoint IE, as introduced by solution #39.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.15.2-1: Selected EAS announcement request",
                                    "table number": 16,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.15.3\tSolution evaluation",
                            "text_content": "This solution addresses KI#14. It allows the EES to be aware of the selected EAS in initial service start so that the EES can control application traffic influence for the initial application traffic. This solution also addresses KI#8 about how the EES is aware of the application session information. It is a viable solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.16\tSolution #16: EAS discovery for different users",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.16.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.16.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #12 on service differentiation for users.\nIn this solution, the User information corresponding to service permission level is introduced to achieve service differentiation.\nThe User information corresponding to service permission level could be a list of UE identifier(s) associated with service permission level. It enables EES support to handle the information of user priority or something like \"allowed-list\", or EAS deployment segmentation in EDN. And it is provided to EES by EAS during the EAS registration or EAS registration update.\nIn this solution, when EES receives the EAS discovery request, in addition to service permission level filter, the EES identifies the EAS based on received User information.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.16.3\tSolution evaluation",
                            "text_content": "This solution addresses KI#12. This requires the EAS to provide its subscription information (e.g. which users are gold-plan users) to the EEL and let EEL handle the service differentiation, which is not reasonable in the real use cases, especially when the ASP and the ECSP are different organizations. In addition, the User information, or a list of UE identifiers, are dynamic information and can be too large to send in the EAS profile and to store in the EES. Therefore, this solution based on the User information from the EAS is not viable.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.17\tSolution #17: Traffic influence for initial EAS discovery",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.17.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.17.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue#14 on application traffic influence for initial EAS discovery clause 4.14.\nIn this solution, the EES will decide whether to perform traffic influence for the AC before the real data transmission between the AC and the EAS considering the AC type, requirement of the AC and so on, since AC may not connect to the EAS immediately after obtain the EAS information, in this case, the execution of traffic influence is unnecessary.\nThe figure depicts the traffic influence for initial EAS discovery in a 17 GHz band, showing the impact of various factors on the signal strength and interference. The figure illustrates the importance of considering the signal strength, the presence of obstacles, and the presence of other signals when designing an EAS system.\nFigure 7.17.2.2-1: Traffic influence for initial EAS discovery\n1.\tThe EEC determines to perform EAS discovery before the real data transmission between the AC and the EAS based on the response time in the AC profile. The EEC sends the EAS discovery request to the EES. The request contains the AC type, AC Service KPIs.\n2.\tUpon receiving the request from the EEC, if the AC has high requirement on response time, then the EES will select one EAS and determine to perform application traffic influence for this AC before the real data transmission between the AC and the EAS, based on the AC type, AC Service KPIs, response time. If the AC does not have high requirement on response time, then the EES will not perform application traffic influence immediately.\n3.\tThe EES sends the AF request to the 5GC optimizing the user plane path between the UE and the EAS, if the EES determines to perform application traffic influence immediately.\n4.\tThe EES sends the EAS discovery response to the EEC. The response contains the discovered EAS list with EAS being traffic influenced. The EEC sends the EAS discovery response to the AC.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.17.3\tSolution evaluation",
                            "text_content": "The solution #17 is applicable to the scenario where the EES selects the EAS and performs the traffic influence immediately for the selected EAS after EEC sent EAS discovery request. It is a viable solution.\nNOTE:\tThe EES may only be able to use the Service KPIs to determine whether to perform traffic influence immediately or not.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.18\tSolution #18: Constraint device in EDGEAPP",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.18.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.18.2\tSolution description",
                            "text_content": "This solution addresses KI#15. In this solution, in order to reduce power consumption in the UE, it specifies the EEC with Reduced Capabilities (RedEEC). The RedEEC skips EEC registration and the EAS discovery procedure is enhanced to delegate the EAS selection to EES. Figure 7.18.2-1 illustrates the details interactions.\nThe figure depicts a service provisioning and EAS discovery process for a constraint device, illustrating the steps involved in enabling and managing the device's security and performance.\nFigure 7.18.2-1: service provisioning and EAS discovery for constraint device\nIn step 1, EEC performs service provisioning. For EAS discovery, the EEC sends the request to a selected EES from the candidate EES(s) and indicates UE type to EES in step 2. In step 3, the EES performs EAS discovery as described in clause 8.5.2.2 of 3GPP TS 23.558 [2] and in addition selects a suitable EAS from discovered candidate EAS(s) if UE type indicates constraint device, then the EES sends EAS discovery response to the EEC including the selected EAS information in the Discovered EAS list. In step 5, if the EAS discovery response contains successful result, the EEC sends to AC the received selected EAS information and the EAS discovery and selection procedure ends; otherwise, the EEC repeats step 2 with next selected candidate EES.\nNOTE:\tThe EEC can interact with each candidate EES if no appropriate EAS can be selected by EES.\nTable 7.18.2-1 and table 7.18.2-1 below show the detailed impact (highlighted with bold text) for EAS discovery request and response.\nTable 7.18.2-1: EAS discovery request\n\nTable 7.18.2-2: EAS discovery response\n\nIn service continuity, to offload UE from monitoring triggers (e.g. location change) to start ACR, EEC can announce its support for EDN side decided ACR scenarios (clause 8.8.2.4 and clause 8.8.2.5 of 3GPP TS 23.558 [2]) so that EEC only need to passively receive ACR information notifications.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.18.2-1: EAS discovery request",
                                    "table number": 17,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.18.2-2: EAS discovery response",
                                    "table number": 18,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.18.3\tSolution evaluation",
                            "text_content": "This solution addresses KI#15 with EAS discovery and selection procedure for constrained device using EDGEAPP. The EEC relies on EES to select an appropriate EAS (the EEC does not need to select an EAS among discovered EAS list from candidate EESs).\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.19\tSolution #19: EES determines the selected ACR scenario",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.19.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.19.2\tSolution description",
                            "text_content": "The following solution corresponds to the Key issue #19: ACR scenario combination.\nIn this solution, the EES is responsible to determine the selected ACR scenario for each AC based on the ACR scenarios supported by AC, EEC, EES and EAS. When the EES determines the selected ACR scenario for one AC, the EES will send the selected ACR scenario for the AC to the EEC and the EAS, then the EEC will notify the AC with the selected ACR scenario. With this solution the EES can determine which ACR approach can be enabled for the AC and EAS considering the detailed information (e.g EAS features, KPIs) of both the AC and the EAS and thus also avoiding the overlapping of ACR initiations by multiple entities which introduce unnecessary signalling to resolve co-existence issues.\nFurthermore, the EES can determine the ACR mode (single-ACR scenario or multi-ACR scenarios) for each AC considering the AC service KPI (e.g. Connection bandwidth, Request rate, Response time). Using single ACR scenario to detect the ACR can save the signalling interaction for ACR detect, ACR decision and ACR excution but may not be able to detect ACR event timely. Using multiple ACR scenarios to detect the ACR can detect ACR event more timely but may increase the signalling interaction for ACR detect, ACR decision and ACR excution.\nThe figure depicts a schematic representation of the EES (Energy Efficiency Scenario) process, which is used to determine the selected ACR (Active Control Region) scenario in a power system. The figure shows the various components involved in the EES process, including the ACR, the ACR controller, and the power system operator. The figure provides a clear and concise visual representation of the EES process, making it easy to understand the steps involved in selecting the appropriate ACR scenario.\nFigure 7.19.2.2-1: EES determines the selected ACR scenario\n1.\tThe EAS sends an ACR scenario selection subscription request to the EES.\n2.\tThe EES sends an ACR scenario selection subscription response to the EAS with the subscription result.\n3.\tThe EEC sends ACR scenario selection request to the EES, the request contains the AC service continuity support and EEC service continuity support indicating which ACR scenarios are supported by the AC and the EEC.\n4.\tThe EES obtains the AC service continuity support and EEC service continuity support from UE and EAS service continuity support, then the EES determines the ACR mode (single-ACR scenario or multi-ACR scenarios) for the AC and may be based on the ACR scenarios supported by AC, EEC, EES and EAS. The EES can select appropriate ACR scenario(s) for the AC from the intersection of the ACR scenarios supported by AC, EEC, EES and EAS.\nNOTE 1: The EES can also determine the ACR mode considering AC service KPI (e.g. Connection bandwidth, Request rate, Response time), which is implementation specific.\nNOTE 2: ACR mode including single-ACR scenario or multi-ACR scenario for one specific AC.\nNOTE 3: The ACR mode, if required or not, will be considered in normative work.\nNOTE 4:\tThe ACR scenario supported by the EAS is available in the EAS service continuity support of the EAS profile.\nEditor's note: It is FFS how the EES can know the supported service continuity scenarios of the T-EES and T-EAS.\n5.\tThe EES sends the ACR scenario selection notification to the EAS, the notification contains one or more selected ACR scenario(s) and related ACID.\n6.\tThe EES sends the ACR scenario selection response to the EEC including the selected ACR scenario and related ACID, then the EEC may notify the AC with the selected ACR scenario.\nNOTE 5:\tUsing multiple ACR scenario can detect ACR timely.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.19.3\tSolution evaluation",
                            "text_content": "It allows the EES to determine the selected ACR scenario. It is a viable solution. A new API (ACR scenario selection procedure) is used in this solution.\nNOTE:\tThe selection of a single ACR scenario and therefore single ACR detection entity may not be suitable for time sensitive applications.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.20\tSolution #20: Propagation of EEL notifications to EEC using Edge Notification Server",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.20.1\tArchitecture enhancements",
                            "text_content": "Architecture enhancement in clause 6.3 is the basis for this solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.20.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #1, \"enhanced notification service to the EEC\" as described in clause 4.1.\nIn this solution, ENS is used as a centralized notification server enhancing EEL's notifications delivery mechanism to EEC. Such an architectural enhancement allows the EEC to inform EEL of its preferred method (e.g. Long-polling, WebSocket, FCM, APNS, OMA Push) of receiving notifications and enables Edge Application architecture to flexibly provide a diverse set of methods for notifications delivery to EEC.\nIn this procedure, based on EEC's request on the preferred method of notification delivery (i.e. Log-polling or WebSocket), a direct notification channel in between the EEC and ENS is established.\nNOTE:\tNotification delivery method using a Push server is described in clause 7.20.2.3.\nPre-conditions:\n1.\tEEC is aware of the ENS's endpoint through provisioning\n2.\tEES and ECS are authorized to interact with the ENS\n3.\tEEC is authorized to interact with the ENS, EES and ECS\n\n\nThe figure depicts a direct Notification Channel, where notifications are delivered directly to the intended recipients. The channel is shown in a 2D representation, with the sender and receiver marked by a dashed line. The figure illustrates the direct path between the sender and receiver, with no intermediate hops, ensuring efficient delivery of notifications.\nFigure 7.20.2.2-1: Notification delivery over a direct Notification Channel\n1.\tThe EEC sends a request to ENS for a direct notification channel (e.g. by indicating either a Long-polling (Pull) or a WebSocket (Push) notification delivery method).\n2.\tUpon receiving the request, the ENS performs an authorization check and further verifies if the requested notification delivery method (e.g. Long-polling or WebSocket ) can be used. If the request is authorized and the requested notification delivery method can be used, the ENS assigns a CallBack URL and an associated Channel URL for the EEC and stores the information for its subsequent use (i.e. any notification received at the assigned Callback URL will be made available over the associated Channel for consumption by the EEC).\n3.\tIf the processing of the request was successful, the ENS responds with the assigned Callback URL and Channel URL\n4.\tEEC, upon receiving the Callback URL and Channel URL, based on the type of direct notification channel (e.g. Long-polling or WebSocket) it wishes to have with ENS, would either starts polling the Channel URL (e.g. HTTP GET Channel URL)f or events or uses the Channel URL and prepares it for the Push delivery (e.g. uses the channel URL and upgrades it to a WebSocket notification channel as per WebSocket protocol and in essence opens the notification channel for the flow of notifications as they arrive at ENS).\n5.\tThe EEC sends a EAS discovery subscription request and/or ACR information subscription request (as described in clauses 8.5.3.4 and 8.8.4.8 of 3GPP TS 23.558 v17.0.0 respectively) to the EES with the Notification Target Address IE set to the CallBack URL received from the ENS in step 3 above.\n6.\tUpon receiving the request, the EES performs an authorization check (as described in clauses 8.5.2.3.2 or 8.8.3.5.2 of TS 23.558 depending on the subscription request in step 5) and if the request is authorized, the EES creates the associated subscription resource.\n7\tEES responds to EEC with the subscriptionId of the created resource.\n8\tThe EEC sends a service provisioning subscribe request (as described in clause 8.3.3.3.4 of 3GPP TS 23.558 v17.0.0) to the ECS with the Notification Target Address IE set to the CallBack URL received from the ENS in step 3 above.\n9\tUpon receiving the request, the ECS performs an authorization check as described in clause 8.3.3.2.3.2 of TS 23.558 and if the request is authorized, the ECS creates the associated subscription resource.\n10.\tECS responds to EEC with the subscriptionId of the created resource.\n11.\tSome events of interest to EEC occurs in ECS that satisfies trigger conditions for updating service provisioning of a subscribed EEC and the corresponding subscription directs the ECS to push the event to the CallBack URL which is terminated at the ENS.\n12.\tECS pushes the notification to the CallBack URL\n13.\tENS, upon receiving an event at the given CallBack URL, identifies the associated Channel URL (which it created and assigned to the EEC in step 2 above) and determines which notification delivery method was requested by the EEC (as per step 1 above). ENS forwards the notification to EEC either by responding to the Long-polling request (if EEC is using the Long-polling method) or pushes the notification to the EEC (if EEC is using a Push method such as the WebSocket delivery method),\n14.\tSome events of interest to EEC occurs in EES that satisfies trigger conditions for updating a subscribed EEC with the EAS discovery information or ACR related information (e.g. ACR complete event) and the corresponding subscription directs the EES to push the event to the CallBack URL which is terminated at the ENS.\n15.\tEES pushes the notification to the CallBack URL\n16.\tENS, upon receiving an event at the given CallBack URL, identifies the associated Channel URL (which it created and assigned to the EEC in step 2 above) and determines which notification delivery method was requested by the EEC (as per step 1 above). ENS forwards the notification to EEC either by responding to the Long-polling request (if EEC is using the Long-polling method) or pushes the notification to the EEC (if EEC is using a Push method such as the WebSocket delivery method).\nIn this procedure, based on EEC's request that the preferred method of notification delivery being via a Push server, there is no need for a direct notification channel between the EEC and ENS. Instead, ENS forwards the notifications through an identified Push server to the EEC. In other words, based on EEC's request, an indirect notification channel between the EEC and ENS with the Push server as an intermediary is established.\nNOTE 1:\tThis procedure reuses the Push function setup steps 1a, 1b and 1c described in solution #1 (see clause 7.1.2.2).\nPre-conditions:\n1.\tEEC is aware of the ENS's endpoint through provisioning\n2.\tEES and ECS are authorized to interact with the ENS\n3.\tEEC is authorized to interact with the ENS, EES and ECS\n4.\tENS is aware of the Push server endpoint and is authorized to interact with it\n\nThe figure depicts a Push Server in action, illustrating the notification delivery process. The server is connected to a network of push servers, which are responsible for delivering notifications to users. The figure shows the server's interface, with various buttons and input fields for user input. The server's status bar displays the current status of the notifications, and the server's output is shown in the form of a list of notifications. The figure provides a clear and concise visual representation of the Push Server's functionality and user interface.\nFigure 7.20.2.3-1: Notification delivery using a Push Server\n1.\tThe EEC registers with the push function within the UE. The EEC acquires a push token and push server information from the push function. This step is depicted as sub-steps 1a, 1b and 1c in Figure 7.20.2.2-1.\nNOTE 2:\tThe push server provides the push function in the UE with a push token, which is delivered to the EEC.\n2.\tThe EEC sends a request to ENS for an indirect notification channel via the identified Push server. The request contains the Push server information as well as the EEC's push token (see step 1)\n3.\tUpon receiving the request, the ENS performs an authorization check and further verifies if the requested notification delivery method (i.e. Push server) can be used. If the request is authorized and the requested notification delivery method can be used, the ENS assigns a CallBack URL for the EEC and stores the information for its subsequent use (i.e. any notification received at the assigned Callback URL will be forwarded to the associated Push server for consumption by the EEC).\n4.\tIf the processing of the request was successful, the ENS responds with the assigned Callback URL.\n5.\tThe EEC sends a EAS discovery subscription request and/or ACR information subscription request (as described in clauses 8.5.3.4 and 8.8.4.8 of 3GPP TS 23.558 v17.0.0 respectively) to the EES with the Notification Target Address IE set to the CallBack URL received from the ENS in step 4 above.\n6.\tUpon receiving the request, the EES performs an authorization check (as described in clauses 8.5.2.3.2 or 8.8.3.5.2 of TS 23.558 depending on the subscription request in step 5) and if the request is authorized, the EES creates the associated subscription resource.\n7.\tEES responds to EEC with the subscriptionId of the created resource.\n8.\tThe EEC sends a service provisioning subscribe request (as described in clause 8.3.3.3.4 of 3GPP TS 23.558 v17.0.0) to the ECS with the Notification Target Address IE set to the CallBack URL received from the ENS in step 4 above.\n9.\tUpon receiving the request, the ECS performs an authorization check as described in clause 8.3.3.2.3.2 of TS 23.558 and if the request is authorized, the ECS creates the associated subscription resource.\n10.\tECS responds to EEC with the subscriptionId of the created resource.\n11.\tSome events of interest to EEC occurs in ECS that satisfies trigger conditions for updating service provisioning of a subscribed EEC and the corresponding subscription directs the ECS to push the event to the CallBack URL which is terminated at the ENS.\n12.\tECS pushes the notification to the CallBack URL\n13.\tENS, upon receiving an event at the given CallBack URL, identifies the associated Push server and the EEC's push token (which it received from EEC in step 2 above) and pushes the notification to the identified Push server using the given EEC's push token notification.\n14.\tPush server forwards the notification to the EEC via the push function.\n15.\tSome events of interest to EEC occurs in EES that satisfies trigger conditions for updating a subscribed EEC with the EAS discovery information or ACR related information (e.g. ACR complete event) and the corresponding subscription directs the EES to push the event to the CallBack URL which is terminated at the ENS.\n16.\tECS pushes the notification to the CallBack URL\n17.\tENS, upon receiving an event at the given CallBack URL, identifies the associated Push server and the EEC's push token (which it received from EEC in step 2 above) and pushes the notification to the identified Push server using the given EEC's push token notification.\n18.\tPush server forwards the notification to the EEC via the push function.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.20.3\tSolution evaluation",
                            "text_content": "The proposed solution addresses Key Issue #1.\nThe Edge Notification Server enables an EDGEAPP architectural mechnism via which many different ways of pushing notifications to the EEC would become possible. Hence, the best notification delivery method  can be offered to the EEC/UE for the use case at hand as per EEC's request based on the given UE's limitations.\nThe Edge Notification Server should be viewed as an umbrella for different notification deliver methods to the EEC, one of which is solution #1 as per clause 7.1. Such an EDGEAPP architectural enhancement provides the needed flexibilty to handel different use cases while considering varrying UE's limitations.\nThe Edge Notification Server is considered an optional feature of the EDGEAPP architecture.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.21\tSolution #21: Prediction expiration time for service continuity planning enhancement",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.21.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.21.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #3 Enhancements to service continuity planning in clause 4.3.\nIn service continuity planning, the ACR is performed for a predicted or expected location of the UE in the future. Since the prediction is for a future location in a future time, a prediction expiration time is introduced to take account for the future time window in which the prediction is expected to happen. Therefore, in this solution, EEC includes its expectation or knowledge of the time that it expects the prediction to happen within the ACR request at latest. This is the time that the EEC requests the T-EAS to wait for the AC to connect at latest. The EESs can consider this time in deciding the time that they will wait for the ACR status update from the corresponding EASs.\nEES can take into account the prediction expiration time in processing the ACR request message, e.g. accepting or rejecting the request. In case that the request is authorized and accepted by the EES, it also includes it in the notification (if any) to the EAS. Similarly, EAS can take into account the prediction expiration time in performing ACT. T-EAS and T-EES will receive the prediction expiration time and may consider it in deciding whether and for how long to wait for the UE to connect to them.\nFigure 7.21.2.2-1 illustrates the EEC triggered ACR scenario for service continuity planning.\nPre-condition:\n1.\tThe EEC has been authorized to communicate with the EES.\n2.\tEEC has detected the need for ACR for an expected/predicted location in the future.\nThe figure depicts a scenario for service continuity planning, showing an EEC (Event-driven Communication) triggered ACR (Automatic Call Rejection) scenario. The scenario is set up with a 21.2.2 network, where an EEC is triggered due to a service disruption. The ACR is then activated to prevent the call from being rerouted to the same network. This scenario is used to demonstrate the importance of service continuity planning in ensuring uninterrupted communication in the event of network disruptions.\nFigure 7.21.2.2-1: EEC triggered ACR scenario for service continuity planning\n1.\tThe EEC sends an ACR request message to the EES with initiation or determination action. Depending on the ACR scenario, the EES can be either of S-EES or T-EES.\nIn case of service continuity planning the ACR request message may include also the prediction expiration time to indicate the time that the EEC expects the prediction takes place at latest. This is the time that the EEC requests the T-EAS to wait for the AC to connect at latest.\n2.\tThe EES checks if the requestor is authorized for this operation. If authorized, the EES processes the request and performs the required operations.\n2a.\tIf authorized and if EES decides to continue the ACR, if the EAS notification indication is provided in the step 1 request and the EAS has subscribed to receive such notification, the EES shall notify the EAS about the need to start ACR. In that case, if the request in step 1 includes a prediction expiration time, the EES includes it in the notification to EAS.\nIf the request in step 1 is to S-EES this EAS is the S-EAS. Otherwise if the request of step 1 is to T-EES, this EAS is the T-EAS.\n3.\tThe EES responds to the requestor's request, i.e. EEC, with an ACR response message.\n4.\t(a) If the action in the request in step 1 is initiation, the EES sends the information and parameters of the ACR to the remote EES. Otherwise if the action is determination the EES first discovers the T-EES and T-EAS, and then sends the information and parameters of the ACR to the T-EES.\n(b) If the remote EAS has subscribed to receive such notification, the remote EES shall notify the EAS about the need to ACR and includes corresponding parameters of the ACR, e.g. prediction expiration time if it is provided in the request in step 1.\n(c) The remote EES sends the response back to the EES to confirm it has received the ACR parameters.\nIf the request in step 1 is to S-EES the remote EES is the T-EES. Otherwise if the request of step 1 is to T-EES, the remote EES is the S-EES.\nIf the \"Prediction expiration time\" is not acceptable for the T-EAS, e.g. due to resource status, the EAS can reject the ACT. In that case the ACT fails.\n5.\tThe ACR is executed depending on the ACR scenario. S-EAS and T-EAS perform application context transfer (ACT) in an application specific time and manner. The EAS may use the prediction expiration time received in step 2a to decide on whether and how to perform the ACT. The T-EAS may also consider it in deciding whether and for how long to wait for the AC of the UE to connect to it.\n6.\tThe EAS sends the failure or success message in the ACR status update based on the results of step 5b. EAS can consider the prediction expiration time received in step 2a, if provided, to send the message in step 6.\nIf the request in step 1 is to S-EES this EAS is the S-EAS. Otherwise if the request of step 1 is to T-EES, this EAS is the T-EAS.\nIf the ACT as per step 5 is performed, and the AC (UE) does not connect to the T-EAS by \"Prediction expiration time\", the EAS can send ACT failure with the appropriate cause to the EES. In that case, the T-EAS can delete the transferred application context.\n7.\tThe EES sends the ACR complete notify to the EEC with failure or success result. The EES also considers the failure or success message received in step 6 in the ACR complete notification.\nNOTE: The \"Prediction expiration time\" is not processed by the EES in this solution. Whether and how the EES can use this IE is out of the scope of this solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.21.3\tSolution evaluation",
                            "text_content": "The Solution addresses KI#3 by including a prediction expiration time withing ACR request from the EEC. This information can be used by T-EAS to adjust its waiting time for the UE to reach the service area.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.22\tSolution #22: Support simultaneous EAS connectivity in ACR",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.22.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.22.2\tSolution description",
                            "text_content": "To solve the issue about traffic influence to maintain both S-PSA and T-PSA to support simultaneous connectivity with both S-EAS and T-EAS during the service continuity, the AC includes the need for simultaneous EAS connectivity in the AC profile and the AC profile is sent to EEC via EDGE-5 reference point so that the EEC can request such need in the ACR request sent to EES. Then the EES, at the time of requesting traffic influence towards 3GPP CN, provides additional requirement for simultaneous PSA connectivity as described in clause 6.3.4 of 3GPP TS 23.548 [19].\nFigure 7.22.2.1-1 describes the detailed interaction between the AC and EEC for AC registration procedure (a possible way to provide AC profile to EEC).\nThe figure depicts the AC registration procedure, which is a crucial step in the network's operation. It illustrates the steps taken to ensure that the network is properly registered with the local area network (LAN) and the internet. The figure shows the various components involved in the registration process, such as the network interface controller (NIC), the network interface module (NIM), and the network management system (NMS). The figure also includes a diagram of the network's physical layout, which helps to visualize the connections between the different components. Overall, the figure provides a clear and concise overview of the AC registration procedure, making it easy for network operators to understand and implement the necessary steps.\nFigure 7.22.2.1-1: AC Registration procedure\n1.\tThe AC sends AC registration request to EEC, the request includes the AC profile (see table 7.22.2.1-1).\n2.\tThe EEC authorizes the AC registration request and stores the AC profile.\n3.\tThe AC is responded with AC registration response (success/failure).\nTable 7.22.2-1: AC Profile\n\nFigure 7.22.2.1-2 describes the detailed interaction between the EEC and EES during service continuity (i.e. ACR).\nThe figure depicts the ACR initiation procedure, which is a crucial step in the network's operation. It illustrates the steps taken to initiate the Automatic Control Relay (ACR) in a 5G network. The figure shows the various components involved, such as the base station (gNB), user equipment (UE), and the network control center (NCC). The ACR is a critical component in ensuring network reliability and efficiency.\nFigure 7.22.2.1-2: ACR initiation procedure\n0.\tThe EEC is informed about AC profiles (e.g. during AC registration procedure as depicted in Figure 7.22.2.1-1).\n1.\tThe EEC triggers ACR request (type: initiation) to EES, the request includes the simultaneous EAS connectivity information in service continuity (see table 7.22.2.1-2) which was previously received as part of the AC profile (see table 7.22.2.1-1).\n2.\tThe EES authorizes the ACR request. Then the EES may use information provided in the request to apply the AF traffic influence with the N6 routing information of the T-EAS and Simultaneous EAS connectivity information in the 3GPP Core Network (if applicable), as described in clause 5.6.7.1 of 3GPP TS 23.501 [5] and clause 6.3.4 of 3GPP TS 23.548 [19].\nEditor's note:\tSince the 3GPP CN only supports simultaneous PSA connectivity in SSC mode 3 or session breakout, it is FFS whether EES should firstly know PDU session capability before invoking AF traffic influence API.\n3.\tThe EEC is responded with ACR response (success/failure).\nTable 7.22.2.1-2: ACR request\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.22.2-1: AC Profile",
                                    "table number": 19,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.22.2.1-2: ACR request",
                                    "table number": 20,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.22.3\tSolution evaluation",
                            "text_content": "This solution addresses KI#4 about \"Whether and how an AC registers to an EEC\". During the AC registration, the AC is able to indicate its desire for keeping Simultaneous EAS Connectivity. This solution addresses KI#21 about traffic influence. The EES interacts with 3GPP CN to satisfy AC need during ACR request processing.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.23\tSolution #23: UE identification with NAT",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.23.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.23.2\tSolution description",
                            "text_content": "This solution corresponds to KI#16 on support of NAT deployed within the edge data network.\nIn this solution, the EEC provides either the CN network assigned IP address (i.e. the private IP address of the UE) or its UE ID (if it already has one) to the EES to obtain the UE identifier (Edge UE ID) from the EES. If the UE ID is not provided, EES uses the private IP address of the UE provided by the EEC to invoke the CN capability to translate UE's IP address to its UE ID (e.g. UE'sExternal UE ID).\nOnce obtained, the EEC passes the Edge UE ID to the AC, which provides it to the EAS for use over EDGE-3 interface. This also allows the UE to protect its privacy by providing an option to obtain from the EES an Edge UE ID to share with the EAS(s) via the AC(s) instead of exposing its UE ID (if it already has one) to the AC(s). With EAS and EES both being aware of the Edge UE ID, issues pertaining to NAT and UE identification with privacy are resolved.\nNOTE 1:\tThe UE ID provided by EEC is in the form of MSISDN.\nNOTE 2:\tSA3 coordination may be needed corresponding to privacy.\nFigure 7.23.2.2 illustrates the procedure for the EEC to obtain the Edge UE ID from the EES and provide to the AC.\nThe figure depicts a schematic representation of the EEC (Energy Efficiency Commission) process, which involves obtaining the UE ID (Unique Equipment Identifier) from the EES (Energy Efficiency Service). The figure illustrates the steps involved in this process, including the use of a power meter to measure the energy consumption of the UE, and the subsequent steps to obtain the UE ID. The figure is crucial for understanding the energy efficiency regulations and compliance requirements in the telecommunications industry.\nFigure 7.23.2.2-1: EEC obtaining UE ID from the EES\n1.\tAC sends an Edge UE ID request to the EEC. The request may include the list of EASIDs for which the AC is requesting the Edge UE ID information.\n2.\tThe EEC upon receiving the request validates if AC is authorized to request this information. If AC is authorised, the EEC sends the Edge UE ID request to the EES. The request includes either the CN assigned private IP address of the UE or its UE ID (if it already has one) and may include the list of EASIDs if provided by the AC.\nNOTE 1:\tEEC can also send this request without receiving a request from AC in step 1.\nNOTE 2:\tPrivate IP address used by AC and private IP address used by EEC can be the same or different (if different PDU sessions are used). The request from EEC can include either of the IP addresses.\n3.\tUpon receiving the request from EEC, the EES authorizes the EEC. If authorized and the UE ID is not included in the request the EES invokes the CN capability APIs. There are three alternate approaches:\na.\tEES invokes Nnef_UEId_Get for translating the UE's Private IP address to its UE ID as defined in 3GPP TS 23.502 [08] clause 4.15.10. If the request from EEC includes a list of EASIDs, the EES may invoke the Nnef_UEId_Get API for each EAS individually to obtain EAS specific UE ID(s); OR\nb.\tAlternatively (to step 3a), EES invokes the CN capability APIs for translating UE’s NATed IP Address and the port number to its UE ID. Optionally, EAS may also provide UE’s NATed IP address and port number to EES to obtain UE ID; OR\nc.\tAlternatively (to step 3.a. or step 3.b.), EES invokes the CN capability APIs for translating UE’s EECID to its UE ID.\nNOTE 3:\tFor step 3.a., coordination with SA2 is required if SA2 supports to check whether EEC could get the IP domain information and expose it to EES to solve the IP address overlapping issue.\nNOTE 4:\tFor step 3.b. and 3.c., the request from EEC in Step 2 may not include UE’s Private IP address.\nNOTE 5:\tFor step 3.b. and 3.c., coordination with SA2 is required to check whether this can be implemented as alignment work in Rel-18.\nThe EES generates temporary Edge UE ID(s) which may be the same as the 3GPP CN provided UE ID or may be assigned by the EES itself. If UE ID is included in the request received from EEC, the EES generates temporary Edge UE ID. The temporary Edge UE ID may be specific for the EASs included in request received from EEC in step 2, in which case upon receiving a request on EDGE-3 interface, the EES matches the EASID in the request with EASIDs to which the Edge UE ID was assigned before processing the request.\n4.\tThe EES sends the Edge UE ID response to the EEC including the Edge UE ID(s).\n5.\tUpon receiving the response from the EES, the EEC provides the Edge UE ID information to the AC by sending the Edge UE ID response.\n6.\tThe AC provides the Edge UE ID information to the EAS.\nNOTE 6:\tDetails on how the AC provides the information to the EAS is out of scope.\n7.\tOnce received from the AC, the EAS uses the Edge UE ID to invoke the APIs provided by the EES over EDGE-3 interface (e.g. T-EAS Discovery, UE location request, ACR request, and EELManangedACR services).\n8.\tOnce received from the EES, the EEC uses the Edge UE ID to invoke API provided by the EES over EDGE-1 interface (e.g. EAS Discovery and ACR request services).\n9.\tThe EES uses the UE ID received from the EEC or obtained from the CN in step 3 to invoke the 3GPP CN capabilities as in TS 23.558, Clause 8.10.3. This step can be performed following triggers that require 3GPP CN capabilities to be invoked (e.g. on receiving a request over EDGE-1 or EDGE-3), in which case, to invoke the 3GPP CN capabilities the EES uses the UE ID associated with the Edge UE ID included in the trigger.\nNOTE 7:\tThis procedure has impacts on EDGE-5 interface.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.23.3\tSolution evaluation",
                            "text_content": "This solution solves open issues of KI#16. The solution provides three approaches to obtain UE ID. In the first approach of this solution EES translates the EEC provided UE's private IP address to its UE ID using the CN provided capability (Nnef_UEId_Get). This UE ID is then shared back to the EEC, which provides it to the AC. AC can then share the UE ID with the EAS for use over EDGE-3 interface.\nIn some network deployments, there may be a private IP address overlap issue where more than one UE is assigned the same private IP address. Support from SA2 is required in such cases.\nIn second approach (as captured in step 3.b. of clause 7.23.2.2), EES uses NATed/public IP of the UE to obtain the UE ID. In a third approach (as captured in step 3.c. of clause 7.23.2.2), EES uses the globally unique EECID to obtain the UE ID. These approaches require enhancement of 3GPP CN.\nNOTE:\tThese two additional approaches require coordination with SA2 to handle this as part of the alignment work in Rel-18. In particular, the third approach would additionally require enhancement of the 3GPP CN to maintain an association between the EECID and UE ID, which also requires coordination with SA2. Furthermore, additional coordination is required with SA3 in determining whether there is any security issue in using an identifier, i.e. the EECID, which is not provided by the 3GPP CN to map to a UE ID.\nIn all approaches, the solution also allows the EES to convert the CN or EEC provided UE ID to Edge UE ID, which is managed by the EES. Edge UE ID ensures privacy of the UE ID and allows the EES to assign EAS specific IDs for controlled access over EDGE-3 interface. EEC can request the Edge UE ID on its own, this allows the EEC to use the received Edge UE ID over EDGE-1 interface.\nCoordination with SA3 is required to check whether there is a security issue if the EEC shares its private IP address or MSISDN with a trusted 3rd party EES.\nIn this solution, whether EESs use the same or different algorithms to generate Edge UE ID and whether the Edge UE ID should be unique should be specified in normative work.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.24\tSolution #24: ACR between EAS and CAS with CES",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.24.1\tArchitecture enhancements",
                            "text_content": "Architecture enhancements in clause 6.6 is the basis for this solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.24.2\tSolution description",
                            "text_content": "\nThe figure depicts a user moving from one Enhanced Digital Network (EDN) to another, illustrating the progression of their communication journey.\nFigure 7.24.2-2: UE moves from one EDN to Cloud DN then to another EDN\nAs depicted in figure 7.24.2-2, since the EAS may have service area restriction, once the UE is moving out of the current edge coverage, to keep service continuity, the application client needs to connect to either another EAS in new EDN or the CAS. For the latter case, when CES is deployed, the EES may interact with the CES via EDGE-9' reference point and application context is transferred between the EAS and CAS. Later, if the UE is moving to an area with edge coverage, the CES interacts with the EES via EDGE-9' reference point and application context is transferred between the CAS and EAS.\nThe ACR scenarios in TS 23.558 can be extended to include ACR between EAS and CAS. The extension would also include extensions to relevant procedures used in the ACR Scenarios (e.g. Service provisioning, T-EAS discovery, ACR request).\nTS 23.558 clause 8.8.2.4 \"S-EAS decided ACR scenario\" can be updated to allow \"CAS decided ACR scenario\". The S-EAS can be the CAS, the S-EES can be the CES when ACR happens between CAS and EAS. The CES will, therefore, need to be part of the EEL that facilitate the discovery of the T-EAS by interacting with the ECS.\nSince in this procedure T-EAS discovery is used by the CAS – in step 3 – to discover the T-EAS the procedure in TS 23.558 clause 8.8.3.2 \"Discover T-EAS\" is also updated as described in clause 7.25.2.2.2.\nTS 23.558 clause 8.8.3.2 \"Discover T-EAS\" can be updated to allow CAS to discover T-EAS. The S-EAS can be the CAS, the S-EES can be the CES when ACR happens between CAS and EAS. Therefore, the CES has to be part of the EEL to facilitate the discovery of the T-EAS by interacting with the ECS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.24.3\tSolution evaluation",
                            "text_content": "This solution addresses KI#11. The introduction of CES deployed in the central DN enables application service continuity using EDGEAPP mechanisms.\nThe solution provides ACR scenario parity support for relocating application session between EAS and CAS, existing 5 ACR scenarios (including service continuity planning) can be supported with introduction of CES.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.25\tSolution #25: ACR between EAS and CAS without CES",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.25.1\tArchitecture enhancements",
                            "text_content": "Architecture enhancements in clause 6.5 is the basis for this solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.25.2\tSolution description",
                            "text_content": "The following solution addresses open issues of key issue #11, ACR between EAS and Cloud Application Server.\nThe scenarios specified in 3GPP TS 23.558 (Rel-17) clause 8.8 have been updated to consider the ACR between EAS and Cloud Application Server.\nThe scenario handles ACR as a result of the UE moving to, or the UE expecting to move to, a new location which is outside the service area of the serving EAS. It further relies on the EEC being triggered as a result of the UE's movement.\nThis scenario is based on Service Provisioning (as specified in TS 23.558) and DNS procedures to discover the CAS that shall serve the AC as a result of the UE's new location, and that shall receive the Application Context from the serving EASs. The scenario below describes the relocation of a single application context to a CAS. However, it should be repeated for each active AC in the UE for which EAS or EDN is not available on that UE location.\nThe figure depicts a 3GPP TS 23.558 figure, specifically Figure 8.8.2.2-1, which illustrates the ACR (Access Control Register) initiated by the EEC (European Economic Area) and AC (Access Control) in the context of 3GPP TS 23.558. The figure shows the ACR structure, including the EEC and AC registers, as well as the AC control registers. The ACR is an essential component of the 3GPP TS 23.558 standard, responsible for managing access control and security in the network.\nFigure 7.25.2.2.1-1: Updated 3GPP TS 23.558 Figure 8.8.2.2-1: ACR initiated by the EEC and AC\nThe pre-conditions:\n1.\tThe AC in the UE already has a connection to a corresponding S-EAS;\n2.\tThe preconditions for the Service provisioning - Request/Response model as specified in TS 23.558 with regards to the EEC are fulfilled; and\n3.\tThe EEC is triggered when it obtains the UE's new location or is triggered by another entity such as an ECS notification.\nPhase I: ACR Detection\n1.\tThe EEC detects the UE location update as a result of a UE mobility event and is provided with the UE's new location as described in TS 23.558. The EEC can also detect an expected or predicted UE location in the future as described in TS 23.558.\nNOTE 1:\tIf the EEC is triggered by an external entity such as by a notification from the ECS, unavailability of new EESs (to be used as T-EESs) is provided by that notification and step 3 below is skipped.\nPhase II: ACR Decision\n2.\tEither the AC or the EEC makes the decision to perform the ACR.\nNOTE 2:\tWhich applications require ACR can be decided based on the application profile, e.g. requirement of service continuity of the application.\nPhase III: ACR Execution\n3.\tThe EEC performs Service Provisioning (as specified in TS 23.558) for all active applications that require ACR. Since the location of the UE has changed, this procedure results in unavailability of T-EESs that are relevant to the supplied applications and the new location of the UE. If the service provisioning is done without supplying the application information but EES information is provisioned, the EEC attempts discovering relevant T-EAS with the EES provisioned in the service provisioning response, if any. Service provisioning or discovery of relevant T-EAS may not result in EES configuration or T-EAS is not discovered respectively.\nIf the change in UE's location does not trigger a need to change the serving EAS, the subsequent steps will not take place. The EEC remains connected to the serving EESs and the ACs remain connected to their corresponding serving EASs.\n4.\tIf the change in the UE's location triggers a need to change the S-EAS but the EEC is not provided with a T-EAS, the EEC informs the AC of the unavailability of a suitable EDN for the new location of the UE.\n5.\tThe AC triggers the UE to perform DNS resolution for the CAS relevant for the AC. The UE may need to establish a new PDU connection to the CAS.\n6a.\tThe AC sends ACR request to the EEC and the EEC responds ACR response to the AC.\n6b.\tThe EEC performs ACR launching procedure (as described in TS 23.558) to the S-EES with the ACR action indicating ACR initiation and the corresponding ACR initiation data (along with the details of the CAS and without the need to notify the EAS). The S-EES may apply the AF traffic influence with the N6 routing information of the CAS in the 3GPP Core Network (if applicable), as described in TS 23.558.\n7.\tThe AC is triggered by the EEC to start ACT. The AC decides to initiate the transfer of application context from the S-EAS to the CAS.\nAfter the ACT is completed, the AC remains connected to the CAS and disconnects from the S-EAS; the EEC is informed of the completion of the ACT.\nThe S-EAS or CAS can further decide to terminate the ACR, and the CAS can discard the application context (e.g. based on monitoring the location of the UE). It is up to the implementation of the S-EAS and CAS whether and how to make such a decision.\nPhase IV: Post-ACR Clean up\n8.\tThe S-EAS sends the ACR status update message to the S-EES as specified in TS 23.558.\n9.\tIf the status in step 8 indicates a successful ACT, the S-EES sends the ACR information notification (ACR complete) message to the EEC to confirm that the ACR has completed as specified in TS 23.558.\nThe CAS can perform the required CN capability exposure subscriptions upon receiving the application context.\nIn this scenario, the EEC is triggered as a result of the UE's movement as described in 8.8.1.1 of TS 23.558. Figure 7.25.2.2.2-1 illustrates the EEC executing ACR via the S-EES.\nPre-condition:\n1.\tThe AC at the UE already has a connection to the S-EAS; and\n2.\tThe EEC is able to communicate with the S-EES.\nThe figure depicts a revised 3GPP TS 23.558 Figure 8.8.2.3-1, which includes an updated ECU executed ACR (Enhanced Circuit Reconfiguration) process. The figure illustrates the ACR process, which is a key component in 3GPP TS 23.558, enabling the efficient execution of Enhanced Circuit Reconfiguration (ECR) in the 3GPP Release 15 network. The figure also includes a visual representation of the ACR process, with the ECU executing the ACR and the ACR-related components highlighted.\nFigure 7.25.2.2.2-1: Updated 3GPP TS 23.558 Figure 8.8.2.3-1: EEC executed ACR\nPhase I: ACR Detection\n1.\tThe EEC detects that ACR may be required as described in clause 8.8.1.1 of TS 23.558. The EEC may detect that ACR may be required for an expected or predicted UE location in the future as described in clause 8.8.1.1 of TS 23.558.\nPhase II: ACR Decision\n2.\tThe EEC decides to proceed required procedures for triggering ACR.\nPhase III:\tACR Execution\n3.\tThe EEC performs Service Provisioning (as specified in TS 23.558) for all active applications that require ACR. Since the location of the UE has changed, this procedure results in unavailability of T-EESs that are relevant to the supplied applications and the new location of the UE, as per the assumption of this scenario. Service provisioning or discovery of relevant T-EAS may not result in EES configuration or T-EAS is not discovered respectively. The AC triggers the UE to perform DNS resolution for the cloud application server relevant for the AC. The UE may need to establish a new PDU connection to the CAS.\nNOTE 1:\tSeveral EEC registrations with different EESs may result from T-EAS discovery process during a single ACR operation.\nNOTE 2:\tThe EEC before determining to execute step 4 tries to discover T-EAS from one or more EESs (received in the service provisioning response). If none of the contacted EES(s) have required T-EAS then proceed with step 4.\n4.\tThe EEC performs ACR launching procedure (as described in clause 8.8.3.4 of TS 23.558) to the S-EES with the ACR action indicating ACR initiation and the corresponding ACR initiation data (along with the details of the CAS and with the need to notify the EAS). The S-EES authorises the request from the EEC. The S-EES decides to execute ACR based on the information received from the EEC and/or EAS profile. The S-EES may apply the AF traffic influence with the N6 routing information of the CAS in the 3GPP Core Network (if applicable) and sends the ACR management notification for the \"ACT start\" event to the S-EAS, as described in clause 8.6.3, to initiate ACT between the S-EAS and the CAS. If the EEC has not subscribed to receive ACR information notifications for ACR complete events from the S-EES, the EEC subscribes for the notifications as described in clause 8.8.3.5.2 of TS 23.558.\n5.\tThe S-EAS transfers the application context to the CAS at implementation specific time. This process is out of scope of the present specification.\nNOTE 3:\tThe S-EAS or CAS can further decide to terminate the ACR, and the CAS can discard the application context based on information received from EEL and/or other methods (e.g. monitoring the location of the UE). It is up to the implementation of the S-EAS and CAS whether and how to make such a decision.\nPhase IV:\tPost-ACR Clean up\n6. The S-EAS sends the ACR status update message to the S-EES as specified in clause 8.8.3.8 of TS 23.558.\n7. If the status in step 7 indicates a successful ACT, the S-EES sends the ACR information notification (ACR complete) message to the EEC to confirm that the ACR has completed as specified in clause 8.8.3.5.3 of TS 23.558.\nNOTE 4:\tThe CAS can perform capability exposure subscription with 3GPP CN directly, upon receiving the application context, which may be helpful for handling future ACR scenarios e.g. ACR from cloud to edge.\nIn this scenario, the S-EAS may detect the need of ACR locally or is notified by the S-EES via ACR management notifications for \"ACR monitoring\" events. The S-EAS make the decision about whether to perform the ACR, and starts the ACR at a proper time.\nPre-conditions:\n1.\tThe S-EAS may depend on the receipt of certain User plane path management events from the S-EES, e.g. \"user plane path change\" events or \"ACR monitoring\" events, to detect the need for an ACR. For the following procedure it is assumed that the S-EAS has subscribed to continuously receive the respective events from the S-EES; and\n2.\tThe EEC has subscribed to receive ACR information notifications for target information notification events and ACR complete events from the S-EES, as described in clause 8.8.3.5.2 of TS 23.558.\nThe figure depicts a revised 3GPP TS 23.558 Figure 8.8.2.4-1, which includes updated ACR (Access Control Rules) for S-EAS (Service-Specific Access Control) in the context of 3GPP TS 23.558. The figure provides a visual representation of the ACR rules, highlighting the differences between the original and revised versions.\nFigure 7.25.2.2.3-1: Updated 3GPP TS 23.558 Figure 8.8.2.4-1: S-EAS decided ACR\nS-EAS decided ACR is outlined with four main phases: detection, decision, execution and clean up.\nPhase I: ACR Detection\n1.\tThe S-EAS either receives ACR management notifications from source Edge Enabler Sever indicating that ACR may be required (\"ACR monitoring\" event), or self detects the need for ACR (e.g. upon receipt of a \"user plane path change\" event). If the ACR management notification indicates \"ACR monitoring\" event, then the notification will also contain the CAS information (see clause 8.6.3.2.3 of TS 23.558). The S-EAS may detect that ACR may be required for an expected or predicted UE location in the future as described in clause 8.8.1.1 of TS 23.558.\nNOTE 1:\tHow the S-EAS self detects the local need for ACR is outside the scope of this specification.\nPhase II: ACR Decision\n2.\tThe S-EAS makes the decision to perform the ACR\nNOTE 2:\tHow the S-EAS determines when to start the ACR is outside the scope of this specification.\nPhase III:\tACR Execution\n3.\tIf the ACR required is self detected, the S-EAS requests the S-EES to discover the targets as described in TS 23.558. When S-EES determines that no relevant EAS is available for the UE's location it finds out the details of the CAS, e.g. via DNS query/discovery, and provides the details of the CAS to the S-EAS. After S-EAS determines to use CAS, the S-EAS may apply the AF traffic influence with the N6 routing information of the CAS in the 3GPP Core Network (if applicable).\nNOTE 3:\tEAS endpoint in discovery could be a FQDN of CAS, identical with the FQDN used in DNS query.\n4.\tThe S-EAS sends selected CAS declaration message to S-EES, to inform S-EES the determined CAS to use as described in clause 8.8.3.7 of TS 23.558.\n5.\tBased on the CAS selection information received from the S-EAS, the S-EES sends the target information notification to the EEC as described in clause 8.8.3.5.3 of TS 23.558.\n6.\tThe S-EAS transfers the application context to the CAS selected in step 3. This process is out of scope of the present specification.\nNOTE 4:\tThe S-EAS or CAS can further decide to terminate the ACR, and the CAS can discard the application context based on information received from EEL and/or other methods (e.g. monitoring the location of the UE). It is up to the implementation of the S-EAS and CAS whether and how to make such a decision.\nPhase IV:\tPost-ACR clean up\n7.\tThe S-EAS sends the ACR status update message to the S-EES as specified in clause 8.8.3.8 of TS 23.558.\n8. If the status in step 8 indicates a successful ACT, the S-EES sends the ACR information notification (ACR complete) message to the EEC to confirm that the ACR has completed as specified in clause 8.8.3.5.3 of TS 23.558.\nNOTE 5:\tThe CAS can perform capability exposure subscription with 3GPP CN directly, upon receiving the application context, which may be helpful for handling future ACR scenarios e.g. ACR from cloud to edge.\nFigure 7.25.2.2.4-1 illustrates the S-EES detecting, deciding and executing ACR from the S-EAS to the CAS. This may include EELManagedACR by S-EES when initiated by S-EAS as per clause 8.8.3.6 of TS 23.558.\nPre-condition:\n1.\tThe AC at the UE already has a connection to the S-EAS;\n2.\tThe EEC is able to communicate with the S-EES;\n3.\tThe EEC has subscribed to receive ACR information notifications for target information notification events and ACR complete events from the S-EES, as described in clause 8.8.3.5.2 of TS 23.558;\n4.\tThe S-EAS optionally subscribed to receive ACR management notifications for \"ACR facilitation\" events to the S-EES, in order to enable detection at S-EAS.\n5.\tIn case of EELManagedACR, the CAS has subscribed to receive ACT status notifications as described in clause 8.8.3.6.2.3 of TS 23.558.\n\nThe figure depicts a revised 3GPP TS 23.558 Figure 8.8.2.5-1, which includes updated S-E ES executed ACR (Synchronous Enhanced Ergonomics) for enhanced user experience. The figure includes a graphical representation of the ACR process, illustrating the steps and conditions for the execution of S-E ES.\nFigure 7.25.2.2.4-1: Updated 3GPP TS 23.558 Figure 8.8.2.5-1: S-EES executed ACR\n1.\tThe S-EAS may initiate EELManagedACR with S-EES as specified in clause 8.8.3.6 of TS 23.558. In this step, the S-EAS and S-EES negotiate an address of the Application Context storage to S-EES. The S-EAS puts the Application Context at this address which can be further accessed by the S-EES when the ACT is required.\nIn this case, the S-EES executes steps 2 (i.e. S-EES detection), 4, 5, 6, 7, 8, 9 and 11. Rest of steps are skipped.\nPhase I: ACR Detection\n2.\tDetection entities (S-EAS, S-EES, EEC) detect that ACR may be required as described in clause 8.8.1.1 of TS 23.558. The detection by the S-EES may be triggered by the User Plane path change notification received from the 3GPP Core Network due to S-EAS request for \"ACR facilitation\" event (see clause 8.6.3 of TS 23.558) or due to step 1.\nThe detection entity may detect that ACR may be required for an expected or predicted UE location in the future as described in clause 8.8.1.1 of TS 23.558.\nPhase II: ACR Decision\n3.\tThe detection entity performs ACR launching procedure (as described in clause 8.8.3.4 of TS 23.558) with the ACR action indicating ACR determination and the corresponding ACR determination data.\n4.\tThe S-EES authorises the message if received. The S-EES decides to execute ACR based on the information received or local detection, and the information of EEC context or EAS profile, and then proceed the below steps.\nPhase III:\tACR Execution\n5.\tThe S-EES determines the targets via the Discover T-EAS procedure in clause 8.8.3.2 of TS 23.558. When S-EES determines that no relevant EAS is available for the UE's location it finds out the details of the CAS, e.g. via DNS query/discovery.\n6.\tThe S-EES sends the target information notification to the EEC as described in clause 8.8.3.5.3 of TS 23.558.\n7.\tThe S-EES may apply the AF traffic influence with the N6 routing information of the CAS in the 3GPP Core Network (if applicable).\n8.\tThe S-EES sends the ACR management notification (e.g. as notification for \"ACR facilitation\" event or \"ACT start\" event as described in clause 8.6.3 or due to step 1) to the S-EAS to initiate ACT between the S-EAS and the CAS.\n9.\tThe Application Context is transferred from S-EAS to the CAS at implementation specific time. In the case of EELManagedACR, the S-EES accesses the Application Context from the address as per step 1 and the S-EES either engage in the ACT from S-EAS to the CAS (obtained as per step 5) in a secure way or S-EES shares the storage location of the Application Context with the CAS. Further the CAS accesses the Application Context. The S-EAS may also perform the ACT directly with CAS, the specification of such process is out of scope of the present document.\nNOTE 1:\tThe Application Context is encrypted and protected by the application layer. The S-EES engages in the packet level transport of the Application Context and has no visibility to the content of the Application Context.\nNOTE 2:\tThe S-EAS or CAS can further decide to terminate the ACR, and the CAS can discard the application context based on information received from EEL and/or other methods (e.g. monitoring the location of the UE). It is up to the implementation of the S-EAS and CAS whether and how to make such a decision.\nPhase IV:\tPost-ACR Clean up\n10.\tThe S-EAS sends the ACT status update message to the S-EES as specified in clause 8.8.3.8 of TS 23.558.\n11.\tIf the status in step 10 indicates a successful ACT, the S-EES sends the ACR information notification (ACR complete) message to the EEC to confirm that the ACR has completed as specified in clause 8.8.3.5.3 of TS 23.558.\nNOTE 3:\tThe Application Client mechanism to support switchover of the application traffic to CAS is out of scope of the specification.\nIn this case, when AC is currently served by a CAS, the EEC detects the need for ACR and makes the decision about whether to perform the ACR and starts the ACR at a proper time.\nThe EEC detects the need for ACR and decides to trigger ACR. If the EEC has a valid S-EES information (i.e. AC connected to an EAS before connecting to the CAS), the procedure is similar to the \"Initiation by EEC using regular EAS Discovery\" and \"EEC executed ACR scenario via S-EES\" as specified in TS 23.558 [2], clause 8.8.2.2 and clause 8.8.2.3; otherwise, the procedure is similar as \"EEC executed ACR scenario via T-EES\" as specified in TS 23.558 [2] clause 8.8.2.6. The procedures are with the difference that the CAS replaces the S-EAS.\nIn this scenario, the CAS detects the need for ACR and makes the decision about whether to perform the ACR and starts the ACR at a proper time.\nWhen ACR happens between EAS and CAS, the S-EAS can be the CAS. During the ACR execution phase, the CAS needs to know the EES before continuing with T-EAS discovery. Once the CAS knows the EES, the T-EAS discovery and the remaining steps are similar to the \"S-EAS decided ACR scenario\" as specified in TS 23.558 clause 8.8.2.4, where the CAS acts like the S-EAS.\nAssumptions:\n1.\tThe ASP of the CAS or the CAS provider has a business relationship with the ECSP.\n2.\tThe ASP of the CAS or the CAS provider can validate the received EES endpoint received from the UE. This process is out of scope of 3GPP.\n3.\tThe EES can perform an authorization check to verify the CAS, similar to the EES can perform an authorization check on the EAS for registration and discovery.\n4.\tIt is assumed that in some cases the UE Identifier may not be shared with the CAS for privacy reasons (e.g. the user may not want to share its MSISDN outside of the EEL).\nThe figure depicts a network discovery process using Service Provisioning (SP) triggering, which is a key component of the Enhanced Early Service Detection (EES) feature in 5G networks. The figure shows the steps involved in triggering EES, including the use of Service Provisioning (SP) and Service Discovery (SD) protocols. The figure also highlights the importance of network slicing and network slicing policies in enabling efficient and reliable network discovery and service provisioning.\nFigure 7.25.2.2.6.1-1: EES discovery via service provision triggering\n1.\tThe CAS detects the need for ACR. The CAS can detect ACR due to the UE location change to select and perform ACR to a suitable EAS in the service area.\nNOTE 1:\tHow the CAS detects need for ACR is outside the scope of this specification.\n2.\tThe CAS makes the decision to perform the ACR.\nNOTE 2:\tHow the CAS determines when to start the ACR is outside the scope of this specification.\n3.\tThe CAS triggers the EEC via the AC to perform service provisioning.\nNOTE 3:\tHow the CAS triggers service provisioning is out of scope.\n4.\tThe EEC performs service provisioning as described in TS 23.558 clause 8.3.3.\n5.\tThe CAS receives EES endpoint information and optionally the UE Identifier from the AC. To preserve the privacy of the UE, the EEC can forward the Edge UE ID obtained from the EES as in Solution#23 as a UE Identifier. If the service provisioning in step 4 fails the CAS will not continue with ACR.\nNOTE 4:\tDetail on how the AC provides this information to the CAS is out of scope.\nNOTE 5:\tWhen the CAS performs the EAS discovery operation, the EES checks whether the requesting CAS is authorized to perform the discovery operation and may decide to reject or accept the request.\nNOTE 6:\tHow the CAS determines when to start the ACR is outside the scope of this specification.\nAssumptions:\n1.\tThe CAS has the business relationship with the ECSP.\n2.\tThe CAS can obtain the UEID information.\n\nThe figure depicts a communication system with a centralised control unit (CBU) initiating a call set (CAS) through an Enhanced Call Set (ECS). The ECS is initiated by the CBU, which initiates the call set and initiates the call set (CAS) through the Enhanced Call Set (ECS). The figure illustrates the communication process, including the initiation of the call set (CAS) and the initiation of the call set (CAS) through the Enhanced Call Set (ECS).\nFigure 7.25.2.2.6.2-1: CAS initiated ACR via ECS\n1.\tThe CAS detects the ACR event.\n2.\tThe CAS determines the ACR is required which the service can be relocated to the edge.\n3.\tThe CAS can perform the Retrieve T-EES procedure to the ECS for the T-EES information as specified in TS 23.558 clause 8.8.3.3.\n4.\tThe CAS can perform the T-EAS discovery procedure to the T-EES for the T-EAS information as specified in TS 23.558 clause 8.8.3.3.\n5.\tThe application context is transferred between CAS and the T-EAS which is up to application layer’s implementation.\n6.\tThe CAS can send the target information via the ACR complete notify to the AC which is up to application layer’s implementation, the target information including the T-EAS information.\nNOTE 1:\tAn update of EEC context relocation procedure is to be specified in order to enable context transfer from the previous EDNs to the target EDN. Or without EEC context transfer, new registration with T-EES may be performed.\nNOTE 2:\tThe EEC registration to the T-EES may be required after the ACR.\nNOTE 3:\tTo preserve privacy, how the Edge UE ID can be obtained and used instead of the UE ID will be addressed during normative.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.25.3\tSolution evaluation",
                            "text_content": "The procedures described in solution #25 has a mixed use of regular DNS query and EDGEAPP EAS discovery. When a T-EAS cannot be discovered using the EDGEAPP mechanism, EDGEAPP entities (e.g. AC) falls back to regular DNS query. It supports ACR scenarios for ACR from EAS to CAS, and it also supports ACR scenarios for ACR from CAS to EAS. For ACR from CAS to EAS, the solution requires the CAS and AC interactions, which is out of scope of this specification. Whether the scenario assumptions are valid requires further evaluation.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.26\tSolution #26: Bundled EASs",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.26.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.26.2\tSolution description",
                            "text_content": "This solution corresponds to KI#18 on EAS bundles.\nNOTE:\tOverlap with any solution for KI#20 must be considered during normative.\nThe solution extends the AC profile, EAS profile and EES profile to introduce the following new IEs and their handling by different EEL functions:\n-\tEAS bundle information: EAS bundle information (e.g. EAS bundle ID, information of associated EASs) establishes an association between the EASs. Edge Enabler Layer handles the Edge Application Servers belonging to the same bundle as required by the bundle requirements. When included in the EAS profile, EAS Bundle information denotes the bundle to which the EAS belongs. When included in the AC profile EAS Bundle information is used to perform different Edge Enabler Layer operations, such as EAS discovery.\n-\tEAS bundle requirements: This IE provides the Edge Enabler Layer the requirements that apply to the bundle of EAS. The requirements may include combined discovery and combined ACR.\nBoth, EAS bundle information and EAS bundle requirements, are provided by the ASP. EAS bundle information can be a list of EASs or a bundle ID, however, detailed format of the EAS bundle ID is out of scope.\nTable 7.26.2.1-1: AC Profile\n\nTable 7.26.2.1-2: EAS Profile\n\nTable 7.26.2.1-3: EES Profile\n\nTable 7.26.2.1-4: EAS discovery filters\n\nTable 7.26.2.1-5: Retrieve EES request\n\nIf AC profile contains an EAS bundle information, the EEC uses it while performing operations on EDGE-1 interface.\nThe EES may receive the EAS bundle information from the EEC, EAS or another EES and the EAS bundle requirements from the EAS.\nUpon receiving the EAS bundle information and EAS bundle requirements as part of the EAS registration request from the EAS, the EES stores the information and associates the EAS with other EASs providing the same EAS bundle information. The EAS bundle requirements are used by the EES while providing services on EDGE-1, EDGE-3 and EDGE-9 interfaces.\nUpon receiving the EAS bundle information as part of the:\n-\tEAS discovery request from the EEC, EAS or another EES, and depending on the EAS bundle requirements the EES provides in the EAS discovery response information of all the EASs which are part of the EAS bundle.\n-\tACR request from the EEC or the EAS, and depending on the EAS bundle requirements the EES takes appropriate ACR related action (e.g. initiate ACR, cancel ACR etc.) for all the EASs which are part of the EAS bundle.\n-\tRetrieve T-EES request from the S-EES, and depending on the EAS bundle information, the ECS provides in the Retrieve T-EES response information of the T-EES(s) within the same EDN for the bundle EAS.\nEditor's note:\tChanges to the EES profile and handling by ECS may not be required depending on the feedback from SA4 on requirements (e.g. similar latency) for EAS bundles.\nEditor's note:\tChanges to the EES profile and handling by ECS may not be required or should be enhanced if SA5 cannot guarantee a deployment with EASs deployed in different EDNs satisfying EAS bundle requirements (i.e. similar latency, if it exists).\nThe ECS may receive the EAS bundle information from the EES during EES registration.\nUpon receiving the EAS bundle information as part of the EES registration, the ECS stores the information and associates the EES with other EESs providing the same EAS bundle information.\nUpon receiving the EAS bundle information as part of the:\n-\tService provisioning request from the EEC or Retrieve EES request from the EES, the ECS in response provides information of all the EESs which provided the same EAS bundle information.\nThe scenario assumption of this solution is that there is a coordinated ACR requirement for KI#18, i.e. the bundled EAS may need to be relocated together.\nEditor's note:\tThis solution will not be used if SA4 don’t have requirement for coordinated ACR in EAS bundle case; and solution needs to be revisited if SA4 clarifies such requirement existence.\nThe EES may receive the EAS bundle information from the EEC. The EEC may receive the one or more EES information from the ECS when the bundle EAS located on multiple EES from same Edge Hosting Environment.\nNOTE 1:\tThe Edge Hosting Environment is an environment providing support required for Edge Application Server's execution, which can be seen as the data center\nNOTE 2:\tThe terminology of bundled EAS will be aligned with the meeting conclusion.\nNOTE 3:\tEDN may have one or more discrete data centers/EHE with the common outbound entry point of transport network, multiple EASs in one data centers/EHE has the same transport network performance.\nEditor's note:\tThis solution will not be used for the case where SA5 can ensure that all EASs of the bundle are registered on the same EES when the EAS bundle is in the same EDN. Coordination with SA5 is required.\nUpon receiving the EAS bundle information as part of the:\n-\tService provisioning request from the EEC, the ECS can determine the EES based on the bundled EAS information e.g. EAS bundle requirements, the ECS may select one or more EES which support all of the bundled EAS within the same EHE based on the EES EHE information obtained in the EES profile. Then the ECS provides associated EES(s) information (one ore more EES information) in the service provisioning response.\n-\tThe EAS discovery request or selected EAS announcement request from the EEC contains bundled EAS distribution information (e.g. associated EES(s) information)\n-\tWhen ACR happens on one of the bundled EAS, the associated EES can trigger the ACR for all the EAS in the bundled EAS by coordinated with other S-EES as per bundled EAS distribution information.\nIn this procedure, the EES#1 is responsible to notify the associated EES#2 with the need of application context relocation. To ensure that the associated target EES(s) are in the same EHE, EES#1 may perform retrieve T-EES procedure and T-EAS discovery procedure considering the bundled EAS information and notify the associated EES2 with the target EHE information.\nPre-conditions:\n1.\tThe S-EES can obtain the associated EES information.\nThe figure depicts a 5.1 -1 ACR (Access Channel Reconfiguration) for bundled EAS (Enhanced Active Antennas) located on multiple EES (Enhanced Eaves) within the same EHE (Enhanced Horizontal Eaves). The ACR is a crucial component in the EAS system, allowing for the reconfiguration of the EAS channels to optimize performance and ensure compatibility with other EES. The figure illustrates the process of reconfiguring the ACR, with the EAS channels being rerouted to the appropriate EES, ensuring that the EAS system operates efficiently and reliably.\nFigure 7.26.2.5.1-1: ACR for bundled EAS located on multiple EES within same EHE\n1.\tThe S-EAS#1 or the S-EES#1 detect the ACR event and determine to perform the application context relocation.\n2.\tIf the S-EES#1 obtain the associated EES(s) information which containing multiple EESs, the S-EES#1 send the ACR requirement for bundled EAS request to the associated EES (e.g. EES#2) obtained in the EAS discovery request or selected EAS announcement request from the EEC, indicating that there is a need for ACR and the S-EES#1 will determine target EHE for the bundled EAS.\n3.\tThe S-EES#2 may notify the EAS#2 that there is a need for ACR.\n4.\tThe S-EES#2 sends the ACR requirement for bundled EAS response.\n5.\tThe S-EES#1 send Retrieve T-EES request message to the ECS, the request message contains the all bundled EAS information. Upon receiving the request, the ECS can determine the T-EES and target EHE for the bundled EAS based on the bundled EAS information to ensure that the all the T-EES and T-EAS are within the same EHE. Then the ECS return the T-EES information and the target EHE for the bundled EAS to the S-EES#1.\n6.\tS-EES#1 send the Target EHE announcement request message to the S-EES#2 including the target EHE information.\n7.\tS-EES#2 will return the target EHE announcement response to the S-EES #1.\n8.\tThe S-EES#2 will send the Retrieve T-EES request message to the ECS, the request message contains the target EHE information. Upon receiving the request, the ECS can determine the T-EES for S-EES#2 based on the target EHE information.\n9.\tThe S-EES#1 will perform the T-EAS discovery for the S-EAS#1; the S-EES#2 will perform the T-EAS discovery for the S-EAS#2.\n10.\tThe application context transmission is performed between S-EAS and T-EAS.\n\nThe figure depicts a complex network configuration, specifically an ACR (Access Control List) for bundled EAS (Electronic Access Control) located on multiple EES (Electronic Equipment Subsystems) within the same EHE (Electronic Hardware Enclosure). The ACR is crucial for managing access to electronic equipment within a secure environment.\nFigure 7.26.2.5.2-1: ACR for bundled EAS located on multiple EES within same EHE\n1.\tThe S-EAS#1 or the S-EES#1 detect the ACR event and determine to perform the application context relocation.\n2.\tThe S-EAS#1 send the ACR requirement for bundled EAS request indicating that there is a need for ACR to the S-EES#1, and the S-EES#1 will determine the target EHE for the bundled EAS. If the S-EES#1 obtain the associated EES(s) information which containing multiple EESs (e.g. EES#2) obtained in the EAS discovery request or selected EAS announcement request from the EEC,  the S-EES#1 will notify the associated S-EES#2 with the ACR requirement for bundled EAS.\n3.\tThe S-EES#2 may notify the EAS#2 that there is a need for ACR.\n4.\tThe S-EES#2 sends the corresponding response message of ACR requirement for bundled EAS request. Furthermore, the S-EES#1 will send the corresponding response message of ACR requirement for bundled EAS request to the S-EAS#1.\n5.\tS-EAS#1 send the EAS discovery request message to the S-EES#1. S-EAS#2 send the EAS discovery request message to the S-EES#2\n6.\tThe S-EES#1 send Retrieve T-EES request message to the ECS, the request message contains the all bundled EAS information. Upon receiving the request, the ECS can determine the T-EES and target EHE for the bundled EAS based on the all bundled EAS to ensure that the all the T-EES and T-EAS are within the same EHE. Then the ECS return the T-EES information and the target EHE for the bundled EAS to the S-EES#1.\n7.\tS-EES#1 send the Target EHE announcement request message to the S-EES#2 including the target EHE information.\n8.\tS-EES#2 will return the target EHE announcement response to the S-EES #1.\n9.\tThe S-EES#2 will send the Retrieve T-EES request message to the ECS, the request message contains the target EHE information. Upon receiving the request, the ECS can determine the T-EES for S-EES#2 based on the target EHE information.\n10.\tThe S-EES#1 will perform the T-EAS discovery for the S-EAS#1; the S-EES#2 will perform the T-EAS discovery for the S-EAS#2.\n11.\tThe S-EES#1 will send the EAS discovery response message to the S-EAS#1; the S-EES#2 will send the EAS discovery response message to the S-EAS#2;\n12.\tThe application context transmission is performed between S-EAS and T-EAS.\n\nEnhancements to 3GPP TS 23.558 clause 8.3.3.3.3\n\nEnhancements to 3GPP TS 23.558 clause 8.2.6\n\nEnhancements to 3GPP TS 23.558 clause 8.5.3.2\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.26.2.1-1: AC Profile",
                                    "table number": 21,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.26.2.1-2: EAS Profile",
                                    "table number": 22,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.26.2.1-3: EES Profile",
                                    "table number": 23,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.26.2.1-4: EAS discovery filters",
                                    "table number": 24,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.26.2.1-5: Retrieve EES request",
                                    "table number": 25,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Enhancements to 3GPP TS 23.558 clause 8.3.3.3.3",
                                    "table number": 26,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Enhancements to 3GPP TS 23.558 clause 8.2.6",
                                    "table number": 27,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Enhancements to 3GPP TS 23.558 clause 8.5.3.2",
                                    "table number": 28,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.26.3\tSolution evaluation",
                            "text_content": "This solution addresses the open issues of KI#18.\nTo identify the EAS bundles, the solution introduces EAS bundle information in the EAS profiles, allowing an EAS to be part of one or more EAS bundles. This information is then used by the ECS and the EES at the time of service provisioning and EAS discovery. To support the queries from the EEC, the EAS bundle information is also added in the AC profiles.\nThe solution also allows EASs to indicate requirements related to the bundle, such as requesting coordinated EAS discovery or coordinated ACR (considering all scenarios).\nThe solution also identifies the impacts on several EEL information flows and procedures to handle the EAS bundle information and related requirements.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.27\tSolution #27: Enabling AC Association Aware services by selecting common EASs",
                    "description": "",
                    "summary": "",
                    "text_content": "7.27.0\tGeneral\nThis clause proposes solutions for KI#17 based on two distinct assumptions for achieving a common EES (which is necessary before determining a common EAS). The options corresponding to the two assumptions are termed \"assumed common EES\" and \"with CAAR\". CAAR functionality and deployment options are described as part of this solution.\nThese two alternatives can be summarized as follows:\n(i)\tDetermine common EAS based on the assumption that common EES has been achieved/ pre-provisioned (option termed \"assumed common EES\").\nNOTE 1: The requirements and underlying assumptions for this option are to be detailed in the normative phase.\n(ii)\tDetermine common EAS based on the assumption that ACs to be associated are mobile and may span multiple EDNs. This option uses a new functionality for maintaining information on AC Association serviced per EES (i.e. option \"with CAAR\" functionality), in order to optimize common EES discovery.\nThe following descriptions apply to both alternatives for determining Common EES, unless sub-clause titles or clarifying NOTEs specify otherwise.\nThis solution also relies upon the following assumption:\n-\tThe ACID definition from TS 23.558 [2] v17.5.0 clause 7.2.5 applies, allowing ACs with the same or different ACIDs (which belong to different applications) to discover and use a common EAS.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.27.1\tArchitecture enhancements",
                            "text_content": "This solution uses the architecture option specified in clause 6.11.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.27.2\tSolution description",
                            "text_content": "This solution addresses key issue #17 on discovery of a common EAS in clause 4.17.\nThe solution describes enhancements to several edge procedures that enable ACs/EECs of different UEs to share AC association information with the EEL. This AC association is formed such that the services for the associated ACs are optimized by selecting a common EAS.\nNOTE:\tIn the following descriptions within this solution, the term \"Associated ACs\" is used to denote a set of ACs on different UEs for which the association described above has been configured via an AC association Profile. How the AC association Profile is determined is out of scope of the current specification.\nThe AC association Profile (AAP) is proposed as a new IE in TS 23.558:\nTable 7.27.2.2.1.1-1: AC association Profile\n\nNOTE:\tThe list of IEs in Table 7.27.2.2.1.1-1 and whether AC association information should be provided in a new AC association Profile IE, or via existing IEs, is to be determined in the normative phase.\nAC Association Profiles (AAPs) are assumed to be provisioned using procedures out of scope of the current document.\n-\tAC associations of type pre-grouped are those for which the application of grouping criteria is done out-of-band (i.e. via an external group ID). Each of the association members is provided with an AAP which includes AC Association type (i.e. pre-grouped), UE group ID (same for all the ACs and equal to the external group ID) and List of Common EAS aggregate Service KPIs. This allows pre-grouped associations to be used for a variety of usecases. The AC grouping is then performed at EEL based only on this, limited AAP information.\n-\tAC associations of type dynamic grouping are those for which the AAP provides characteristics/ criteria of the individual ACs (or corresponding UEs) within the association, with the AC grouping being performed at EEL based on the entire AAP information.\nThe \"List of associated AC characteristics\" and the \"UE filter criteria\" IEs are used as characteristics for filtering the ACs in the dynamic association.\nTherefore, for AC associations of type dynamic grouping, the possibilities for EEL-based grouping are:\n1.\tBased on a matching associated ACs characteristics\n2.\tBased on UE service area\n3.\tCombinations of the above\nFor all AC association types, if the \"List of Common EAS aggregate Service KPIs\" IEs is present in the AAP, it is used to determine the EAS(s) suitable to act as common EAS for the association, in addition to the EAS discovery filters. If the IE is not present in the AAP, common EAS determination relies upon other parameters provided, e.g. EAS discovery filters.\nAC Association ID is a unique identifier of an association within the EEL deployment or the system. The ID is necessary for uniquely identifying AC associations in the absence of the full AAP information.\nThe enhancements captured (marked with bold text) in tables within this clause are proposed to Information Element tables in 3GPP TS 23.558 [2]. Enhancements to requests, responses and notifications are described in the following clauses via procedural descriptions.\nTable 7.27.2.3-1: EAS discovery filters\n\nNOTE 1:\tThe enhancement to EEC Context shown in table 7.27.2.3-2 is necessary for the option \"with CAAR\" (ii) as described in clause 7.27.0. It is to be determined in the normative phase whether this functionality is necessary for the \"assumed common EES\" (i) as described in clause 7.27.0.\n\nTable 7.27.2.3-2: EEC Context\n\nNOTE 2:\tThe enhancement to EDN configuration information shown in table 7.27.2.3-3 is necessary for the option \"with CAAR\" (ii) as described in clause 7.27.0. only.\nThe IE enhancement is used to provide EECs in the service provisioning phase with information about which EESs already act as common EESs serving AC associations, and which are candidates. This enables the EEC to determine which EES to choose if common EAS association services are needed. Note that the service provisioning response can also be limited by ECS policies to include only the EDNs/EESs which provide such services. The information about served AC Associations per EES is provided by EESs to ECS using CAAR functionality.\nTable 7.27.2.3-3: EDN configuration information\n\nIf the \"assumed common EES\" option is used, procedures for determining common EES are not necessary.\nDuring the service provisioning procedure defined in 3GPP TS 23.558 [2], the presence of an AC association Profile in the request triggers the use of the enhancements detailed in this clause.\nThe service provisioning response is used to provide information about which EESs already act as Common EESs, i.e. providing services to AC associations, as well as candidates. In this option, the EES information is provided to EECs via the EDN Configuration Information in the service provisioning response, and it can be obtained by ECS using CAAR queries.\nEnhancements to 3GPP TS 23.558 clause 8.3.3 Service Provisioning:\nSteps:\n1.\tThe service provisioning request (3GPP TS 23.558 [2] Table 8.3.3.3.2-1) from EEC to ECS is enhanced to include an AC association Profile.\n2.\tUpon receiving the request, the ECS uses the AC association Profile information (e.g. association IDs) to query the (EES ID, AC association ID list) tuples stored by CAAR to determine whether an EES is already serving the AC association(s). The ECS uses the AC association ID(s) to query the CARR using the procedure in 7.27.2.8.\n3.\tIf the processing of the request with AC association Profile information was successful, the ECS responds to the EEC with a service provisioning response. The ECS uses the EES(s) obtained from the step 2 CAAR query to update the enhanced EDN configuration information (Table 7.27.2.3-4) with EES(s) already serving the AC association and sends it in the provisioning response.\nDuring the EAS discovery procedure defined in 3GPP TS 23.558 [2], if the EEC sends an EAS discovery request to an EES including AC association Profile it triggers the use of the enhancements detailed in this clause. Based on the AC association Profile, the EES determines an EAS discovery result that includes a common EAS for the AC association.\nEnhancements to 3GPP TS 23.558 [2] clause 8.5.2.2 EAS Discovery (request-response model)\nAdditional pre-condition:\n1.\tAn AC association Profile has been provided to the EEC.\nSteps:\n1.\tThe EEC sends an EAS discovery request to the EES. The EAS discovery request includes an AC association Profiles. Included in the AC association Profile is information regarding an association between AC(s) on this UE and other ACs indicating that the use of a common EAS is required.\n2.\tUpon receiving the request, the EES determines whether a common EAS is available to provide services to the associated ACs that meet the criteria specified in the AC association Profile (i.e. List of Common EAS aggregate Service KPIs).\n3.\tIf the processing of the request was successful, the EES responds to the EEC with an EAS discovery response which includes information about the discovered common EAS able to provide services to the associated ACs.\nDuring the detection, decision-making and execution phases of the ACR procedures defined in 3GPP TS 23.558 [2], an AC association Profile can be used to identify ACs requiring a common EAS. This information can be used in the ACR procedures to coordinate the transitioning of an AC to a common EAS or transitioning a group of already associated ACs from a common S-EAS to a common T-EAS.\nNOTE 1:\tCoordination of the ACRs for AC association members is to be addressed in the normative phase.\nEnhancements to 3GPP TS 23.558[2] clause 8.8.3.2 Discover T-EAS procedure\nSteps:\n1.\tThe S-EES checks if a registered or cached T-EAS satisfies the AC association Profile (e.g. Common EAS aggregate Service KPIs) stored in the EEC context and can serve as a common EAS for the associated ACs.\n2.\tThe EAS discovery filter (Table 7.27.2.3-1) within the EAS discovery request issued from the S-EES to the T-EES includes AC association Profile information (e.g. Common EAS aggregate Service KPIs).\n3.\tThe T-EES discovers the T-EAS(s) utilizing the Common EAS aggregate Service KPIs of the AC association profile, such that a common EAS able to serve the associated ACs is provided in the response.\n\nEnhancements to 3GPP TS 23.558 clause 8.8.3.3 Retrieve T-EES procedure:\nNOTE 2:\tIn the \"assumed common EES\" (i) option, T-EES equals S-EES, so no enhancements are required for 3GPP TS 23.558 clause 8.8.3.3.\nSteps:\n1.\tThe T-EES retrieve request (3GPP TS 23.558 [2] Table 8.8.4.6-1) from the S-EES to the ECS is enhanced to optionally include AC association Profile.\n2.\tThe ECS interacts with the 3GPP core network to retrieve the UE locations.\nThe ECS determines a common T-EES for the AC association.\nNOTE 3: The ECS uses AC association Profile, UE location, as well as CAAR query as detailed in clause 7.27.2.8 to make this determination.\nIn addition, if an \"associated UE group ID\" is provided in the AC association Profile, the ECS can interact with the 3GPP core network to determine the number of UEs present in candidate EES(s) service area(s). Alternatively, the ECS uses \"Associated UEs service area\" in the AC association Profile to determine whether the candidate EES service area meets the needs of the AC association. The ECS uses the associated UE group ID and UE locations to determine whether T-EESs are candidates for serving the AC association.\n\nEnhancements to 3GPP TS 23.558 clause 8.8.3.4 ACR launching procedure\nSteps:\n1.\tThe ACR request message (3GPP TS 23.558 [2] Table 8.8.4.4-1) sent to the EES by EEC is enhanced to optionally include an AC association ID.\n2.\tIf the request in step 1 is for ACR initiation and if the EAS notification indication in ACR initiation data is provided in the step 1 request and the EAS has subscribed to receive such notification, the EES includes the association ID of the AC association in the notification.\nThe notified EAS uses the AC association ID during the ACR status update procedure and stores it with the Application context maintained. The content of the application content maintained by EAS is out of scope of the current document.\n\nEnhancements to 3GPP TS 23.558 [2] clause 8.8.3.8 ACR status update procedure\nSteps:\n1.\tThe EAS sends the ACR status update request message (3GPP TS 23.558 [2] Table 8.8.4.19-1) to the S-EES that is enhanced to include an association ID of the AC association for which the ACR has been performed.\nNOTE 4:\tS-EAS obtains the association ID via pre-provisioning, from an ACR management event notification or directly from the AC and stores it in the Application Context. T-EAS obtains the association ID via pre-provisioning or via ACT.\n2.\tIf ACR is successful, the receiving EES uses the association ID information to update the information about the AC associations served.\nIn the option \"with CAAR\" (ii) the EES update is to the information available at CAAR. The S-EES removes its corresponding (association ID, EES ID) tuple from CAAR. The T-EES adds its corresponding (association ID, EES ID) tuple to CAAR.\nNOTE 5:\tIn the \"assumed common EES\" (i) option, no enhancement to step 2 is required.\nEnhancements to 3GPP TS 23.558[2] clause 8.9.1.1\tEEC Context handling at EEC registration\nIf the EEC registration request does not include a previously assigned EEC Context ID value, the receiver EES creates an EEC Context. The receiver EES assigns an EEC context ID and sets the source EES Endpoint to its own Endpoint. The EEC ID, UE Identifier and List of AC association profiles are set based on the corresponding registration request parameters.\n\nEnhancements to 3GPP TS 23.558[2] clause 8.9.1.5\tOther EEC Context handling\nWhen the EES determines that a registered EAS is providing services to an AC which is part of an AC association Profile, the EES updates the corresponding Service Session context with the Association ID. Conversely, when the EES determines that a Service Session is no longer used within an AC association, the EES removes the Association ID from the corresponding Service Session context.\nIn the option \"with CAAR\" (ii) the EES also updates the information about served AC Associations available at CAAR accordingly. During ACR, the S-EES removes its corresponding (association ID, EES ID) tuple from CAAR. The T-EES adds its corresponding (association ID, EES ID) tuple to CAAR.\nThe new procedures described in clauses 7.27.2.8.1.2 and 7.27.2.8.1.3 are necessary for option (ii)\nThe CAAR function is that of maintaining information on AC Association serviced per EES and can also be integrated in ECS functionality.\nThe EES procedure for updating AC Association information available at CAAR uses an update request in which the following information is provided to the CAAR: EES ID, list of association IDs of the associations being served, registrar ECS information including list of EDNs. This information is updated by EES when any of this information changes or is about to change (e.g. in advance of EES de-registration).\nThe ECS procedure for querying the AC Association information at CAAR uses the association IDs received (e.g. in a service provisioning request) and its own ECS information. The response provides a list of its registered EESs which serve the AC Association Profiles IDs being queried for.\nNOTE:\tWhether and how CAAR queries are used to direct EECs to a different ECS for the purpose of receiving services consistent with the AC Association is to be addressed in the context of enabling inter-ECSP deployments.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.27.2.2.1.1-1: AC association Profile",
                                    "table number": 29,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.27.2.3-1: EAS discovery filters",
                                    "table number": 30,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.27.2.3-2: EEC Context",
                                    "table number": 31,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.27.2.3-3: EDN configuration information",
                                    "table number": 32,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.27.3\tSolution evaluation",
                            "text_content": "This solution addresses Key Issue #17, discovery of a common EAS, while providing the following functionality addressing the first two open issues of KI #17:\n1.\tIntroduces specific, clarifying, and consistent terminology for use in the common EAS scenario, e.g. \"AC association\", \"pre-grouped\" (AC Association), \"dynamic grouping\" (AC Association), etc.\n2.\tHarmonizes support for usecases in which determining a common EES is not necessary (i.e. \"assumed common EES\" option) with support for usecases in which determining a common EES is necessary (i.e. option \"with CAAR\") as described in clause 7.27.0.\n3.\tProvides support for various types of AC associations, i.e. \"pre-grouped\" and \"dynamic grouping\", as described in clause 7.27.2.2.1.2. as well as details on determining grouping (in clause 7.27.2.2.1.2)\n4.\tDescribes (in clause 7.27.2.8) new procedures for interaction with CAAR\n5.\tSpecifies the impact of introducing this functionality on the following existing procedures: Service provisioning, EAS discovery and EEC context handling.\nThe usage of common AC types and common AC schedule as the criteria for determining group of UEs should be validated further.\nThe usage of UEs service area as the standalone criteria for determining group of UEs without any associated AC information should be validated further.\nSolution #27 provides the following functionality addressing the last open issue of KI #17:\n1.\tDescription of ACR-related procedures. Specifically, impacts on all the following ACR-related procedures are detailed: Discover T-EAS, Retrieve T-EES, ACR launching, ACR status update.\n2.\tCoordination of ACR operations is partly addressed in clause 7.27.2.6 by indicating the information which can be used to address this issue. The clause includes a NOTE clarifying that based on this information, the procedures for coordination of the ACRs for AC association members are to be addressed in the normative phase.\nThis solution can impact Rel-17 architecture though through the introduction of CAAR as a new entity.\nTo solve any potential issues resulting from the un-synchronized CAAR query and update leading to a race condition, an ACR procedure may be used to steer UEs to one common EAS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.28\tSolution #28: Common EAS discovery using EAS selection information",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.28.1\tArchitecture enhancements",
                            "text_content": "None\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.28.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #17 on Discovery of a common EAS.\nThis solution is based on the following principles:\n1.\tEach EAS instance can be identified uniquely across EDNs.\n2.\tEAS Selection Information can be stored in the AC profile as the EAS selection information.\n3.\tFor service provisioning, the EEC can include EAS selection information in the AC profile to discover the EES / EDN where a common EAS is available\n4.\tFor EAS discovery, the EEC can include the EAS selection information in the AC profile to discover a common EAS.\nThis solution assumes that an EAS can only register to a single EES within an EDN, as per Rel-17 version of TS 23.558 [2] clause 6.6.3.3 on reference point cardinality for EDGE-3. Therefore, it is assumed that all UEs discovering the common EAS must do so via the EES where the common EAS is registered. Additionally, requirements such as EEC registration must be followed by the UEs discovering a common EAS.\nThis solution is compliant with ACID definition as per Rel-17 version of TS 23.558 [2] clause 7.2.5 and allows ACs with the same or different ACID (which belong to applications) to discover and use a common EAS.\nFigure 7.28.2.2-1 presents an overview of the procedures for discovery of a common EAS; the scenario represented involves a first UE (e.g. UE-1/AC-1/EEC-1) discovering and using an EAS and a second UE (e.g. UE-2/AC-2/EEC-2) discovering the same EAS used by the first UE-1.\nThe figure depicts a schematic representation of the EAS (Electronic Attack Survivor) discovery process, highlighting the use of EAS selection information to identify and prioritize potential threats. The figure includes various components such as EAS selectors, EAS selectors, and EAS selectors, which are essential for the EAS discovery process. The figure also includes a legend to help users understand the different types of EAS selectors and their functions. Overall, the figure provides a clear and concise visual representation of the EAS discovery process, making it easier for users to understand and use the EAS selection information effectively.\nFigure 7.28.2.2-1: Common EAS discovery using EAS selection information\nPre-conditions:\n-\tThe EAS has registered to the EES\n1.\tThe AC-1 registers to EEC-1, and according to Rel-17 procedures defined in TS 23.558, the EEC-1 performs service provisioning with the ECS and performs EAS discovery with the EES. Additionally, the EEC can perform EAS selection declaration if required.\n2.\tThe EEC-1 selects one of the discovered EAS to be used as the common EAS. The EEC-1 uses the EAS Selection Information to form the EAS selection information which can be used to uniquely identify the common EAS within and across EDNs. The EEC-1 can provide the EAS selection information to AC-1.\n3.\tNot shown on figure 7.28.2.2-1, AC-2 residing on UE-2 can be provided with EAS selection information. How AC-2 obtains the EAS selection information is out of SA6 scope, for example it may be obtained via direct interaction between AC-1 and AC-2 or interaction between AC-2 and the service provider of the EAS.\nThe AC-2 includes the EAS selection information in its AC profile and then registers with EEC-2, or alternatively updates its existing AC registration with EAS selection information.\nNOTE:\tIf an EAS was discovered prior to receiving EAS selection information, the AC can update its AC profile to trigger step 4 and step 5 to discover the common EAS.\n4.\tThe EEC-2 can perform a service provisioning procedure and includes the AC profile that contains the EAS selection information. The ECS considers the EAS selection information (e.g. the EESID) when selecting the EES and chooses the EES with a matching EESID. The service provisioning response includes the EDN configuration information that contains the EES where the common EAS is registered. Step 4 is optional if the EESID included in the EAS selection information is already known by EEC-2, in such case the EEC-2 can proceed to step 5. Not shown on the figure, the EEC may need to register to the EES if required by service provisioning.\n5.\tThe EEC-2 selects the EES according to the EAS selection information. If the EAS profile of the common EAS is not known at the EEC-2, the EEC-2 can perform the EAS discovery with the selected EES, and includes the AC profile in the EAS discovery request. The EEC-2 performs the EAS selection declaration with the EES; the EES considers if the EEC-2 can use the common EAS. The EAS selection declaration response received at the EEC-2 indicates success/failure; if successful, the AC-2 can access the same common EAS as AC-1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.28.3\tSolution evaluation",
                            "text_content": "The KI #17 has the following open issues:\n1)\tWhether and how the ACs/EECs of different users can select or be provisioned the same EAS within an EDN?\nNOTE:\tThis open issue is dealing with the issue how different EECs can perform EAS discovery so that they select the same EAS within an EDN, whereas KI#13 is dealing with the issue how, after different EECs have selected different EASs located in different EDNs, these EASs can synchronize their contexts.\n2)\tWhether and how the ACs/EECs of different users can select or be provisioned a common EAS, even if initially the EECs are communicating with different EDNs?\n3)\tWhether and how the EEL can support service continuity to ensure that when ACs require the use of service from a common EAS and an ACR operation is needed, ACR operations can be coordinated so that upon completion of the ACR operations the ACs again have services provided by a common EAS.\nOverall evaluation of Solution #28:\na)\tEnables an AC/EEC to select the same EAS as another EEC within an EDN by extending EAS discovery procedure with EAS selection information.\nb)\tEnables ACs/EECs of different users to select or be provisioned a common EAS, even if initially the EECs are communicating with different EDNs, by firstly extending service provisioning procedure with EAS selection information, and secondly performing the EAS discovery procedure within that common EDN.\nc)\tMaintains compatibility with ACR operations by extending pre-existing service provisioning and EAS discovery procedures which are used by ACR procedures.\nEditor's note:\tIt is FFS whether this solution requires detailed procedure updates to show the common EAS selection information.\nEditor's note:\tThis solution requires detailed procedure updates as per bullets a), b) and c) and it is FFS to show the enhancements to existing procedures.\nEditor's note:\tIn the race condition situation (multiple UEs selects different EASs during step 2), how to coordinate common EAS selection is FFS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.29\tSolution #29: Discovery of a common EAS",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.29.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.29.2\tSolution description",
                            "text_content": "The following solution addresses open issues 1 and 2 of key issue #17, discovery of a common EAS.\nEditor's note:\tThe solution for open issue 3, support of service continuity, is FFS.\nNOTE:\tThe communication between AC and AS and between ACs is out of scope of SA6. In the following, some of this communication is only described to enable a better understanding of how the procedures under SA6 responsibility may be embedded in the overall procedure. The description is not intended to exclude scenarios using a different application level communication.\nIt is assumed that when users want to participate in a real-time multi-user session, their ACs will register with an application server (AS) in the cloud. The AS configures the ACs to form an AC group to which the AS assigns a globally unique Group ID (e.g. a UUID as described in RFC 4122).\nDuring the registration with the AS, users will provide their UE location information to the AS. Dependent on the use case, the location information can be given, e.g. in the format of GPS coordinates, a Cell Identity or a Tracking Area Identity. Furthermore, dependent on the application, during the registration the users may be asked to consent to exchanging the location of their UEs with each other. If users consent, then the UE location information is exchanged between the ACs via application level signalling via the AS in the cloud.\nBased on the UE location information received from the ACs, the AS determines the Expected group geographical service area. Dependent on the use case this can be a single coordinate, e.g. the center of mass of the UE/AC locations or the location of a UE/AC taking a specific role in the group (e.g. in a V2X scenario the first truck in platoon), or it can be a geographical area including the current UE/AC locations (without disclosing individual UE/AC locations). The AS provides Group ID, Expected group geographical service area and, if applicable, the locations of the other ACs to each of the ACs.\nDependent on the application, the distribution of the Group ID and the other parameters by the AS can be triggered by different events, e.g. upon explicit request of a user or when a certain minimum number of users have registered.\nUpon receipt of the Group ID, together with the other parameters, each AC requests its EEC to perform EAS discovery.\nDuring service provisioning, the Requested EES geographical service area is received by the ECS and used by it to determine a common EES, by comparing it with the EES geographical service area received from each EES during EES registration.\nEAS discovery based on individual UE locations\nLater, during EAS discovery, the EEC-1 of user 1 provides the common EES with its own location and with the locations of the other UEs/EECs. Based on the location information of all EECs involved in the session and possibly other information included in the EAS discovery request, e.g. Group ID, the EES determines a common EAS and indicates it to the EEC-1.\nWhen EEC-2 of user 2 provides the EES with the same set of location information for all the EECs, then the EES will determine the same EAS again.\nEAS discovery based on other information\nIf users do not consent to share their individual UE location information with other users, then only the Expected group geographical service area is distributed by the AS to the ACs via application level signalling. Additionally, the AS may send a \"group size for EAS discovery\" parameter to each AC.\nLater, during EAS discovery, each EEC provides the common EES with its own location and optionally, in the Group profile IE, the Expected Group geographical service area or the \"group size for EAS discovery\" parameter or both.\nThe EES may initiate determination of a common EAS for the EECs based on different criteria, dependent the received parameters and the application, e.g.:\n-\timmediately upon receipt of the first EAS discovery request, based on the Expected Group geographical service area, if available;\n-\twhen the number of EAS discovery request is greater or equal to the \"group size for EAS discovery\" parameter; or\n-\ta certain time after receipt of the first EAS discovery request,\ntaking into account the UE location information received from the EECs by this point in time and possibly other information included in the EAS discovery request, e.g. Group ID.\nHandling of \"late-coming\" ACs\nIf a late-coming AC wants to join the multi-user group session after the initial EAS discovery was initiated, it may register with the AS. After registration it will receive from another AC in application layer signalling, e.g. via the AS, the EDN configuration information necessary to connect to the common EES. The details of this signalling are out-of-scope of SA6. The AC can then register with the EES and perform EAS discovery, providing its Group ID. The EES determines the EAS based on the Group ID.\nThe following procedure demonstrates the signalling for 2 UEs only, but the same principles can be applied to a larger number of UEs.\nPre-conditions:\n1.\tACs have registered with an AS in the cloud to participate in a real-time multi-user session. During the registration, the AS provided the ACs with the Group ID and the Expected group geographical service area (which may be a single coordinate or an area including the UE locations, see clause 7.29.2.1). Dependent on user consent, the AS also forwards the location information of the other UE(s) to each of the ACs. If user consent is not available, the AS may send a \"group size for EAS discovery\" parameter to the ACs.\n\n\n\nThe figure depicts a common EAS (Electronic Attack System) discovery process, showing the steps taken to identify and locate the EAS in a network. The figure includes various components such as the EAS, the network, and the communication equipment. The EAS is represented as a small, circular symbol, while the network is represented as a larger, rectangular symbol. The communication equipment is represented as a series of lines connecting the EAS to the network. The figure provides a visual representation of the EAS discovery process, which is an essential step in network security.\nFigure 7.29.2.2-1: Discovery of a common EAS\n1.-2.\tEach AC requests its EEC to perform EAS discovery. The request includes the AC profile, the Group profile IE, including optionally, the Expected group geographical service area, or the location information of the other UEs involved in the multi-user session in the request.\n3.-4.\tEEC1 and EEC2 initiate service provisioning, including the AC profile, the Group profile IE including the Expected group geographical service area.\n5.-6.\tBased on the AC profile, Group profile including the Expected group geographical service area and the other information provided by the EEC, the ECS determines a suitable common EES and includes it in the service provisioning response. If more than one suitable EES is available, the ECS can use additional information as input parameter to determine a unique EES.\nNOTE 1:\tFor example, the ECSs can use the Group ID and an algorithm shared between the ECSs to derive the common EES from the list of available EESs.\nIf the ECS wants to provision the EECs with additional EESs, e.g. for service continuity, then the common EES is included as first EES in the first entry of the list of EDN configuration information.\n7.-8.\tEEC1 and EEC2 initiate EAS discovery towards the common EES, including the AC profile, the Group profile IE which optionally includes the Expected group geographical service area or the location information of all UEs involved in the multi-user session.\n9.-10.\tThe EES initiates determination of a common EAS for the EECs based on different criteria, dependent the received parameters and the application, e.g.:\ni)\timmediately upon receipt of the first EAS discovery request, based on the Expected Group geographical service area or the location information of all UEs involved in the multi-user session, if received;\nii)\twhen the number of EAS discovery request is greater or equal to the \"group size for EAS discovery\" parameter; or\niii)\ta pre-defined time after receipt of the first EAS discovery request,\ntaking into account the Expected Group geographical service area or the UE location information received by this point in time and possibly other information included in the EAS discovery request, e.g. Group ID.\nNOTE 2:\tThe EES can also utilize the capabilities of the 3GPP core network to determine a UE location.\nThe EES includes the determined common EAS, e.g. EAS-1(A), in the EAS discovery response.\nThe following enhancement (highlighted with bold text) to the Service provisioning request in 3GPP TS 23.558 [2] is proposed:\nTable 7.29.2.3-1 (TS 23.558: Table 8.3.3.3.2-1): Service provisioning request\n\nThe following enhancement (highlighted with bold text) to the EAS discovery filters in 3GPP TS 23.558 [2] is proposed:\nTable 7.29.2.4-1 (TS 23.558: Table 8.5.3.2-2): EAS discovery filters\n\nThe following new common EAS AC Group profile information element is proposed to 3GPP TS 23.558 [2]:\nTable 7.29.2.5-1: AC Group profile IE\n\nThe following enhancement (highlighted with bold text) to the EDN configuration information in 3GPP TS 23.558 [2] is proposed:\nTable 7.29.2.6-1 (TS 23.558: Table 8.3.3.3.3-2): EDN configuration information\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.29.2.3-1 (TS 23.558: Table 8.3.3.3.2-1): Service provisioning request",
                                    "table number": 33,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.29.2.4-1 (TS 23.558: Table 8.5.3.2-2): EAS discovery filters",
                                    "table number": 34,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.29.2.5-1: AC Group profile IE",
                                    "table number": 35,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.29.2.6-1 (TS 23.558: Table 8.3.3.3.3-2): EDN configuration information",
                                    "table number": 36,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.29.3\tSolution evaluation",
                            "text_content": "The proposed solution addresses Key Issue #17, discovery of a common EAS. It introduces a new AC Group profile IE, with group specific attributes that provide information that can enable the Edge Enabler Layer to select an appropriate common EES (as part of service provisioning) and then common EAS (as part of EAS discovery) based on the application layer requirements.\nThe dynamic information contained in the AC Group profile IE would be made available at runtime through an AC’s interaction with the AS to which it is registered. The information provided by the AS may include either an expected group geographical service area or location information of other UEs involved in the multi-user session. It is assumed that if this geographical information (i.e. expected group geographical service area or location information of other UEs) is provided by the AC(s)/EEC(s) to the EEL during service provisioning and EAS discovery, and more than one EAS is available to provide the same service in different locations, the geographical information can assist the ECS with determining the common EES and the EES with determining the common EAS most suitable to meet the latency requirements of the multi-user session.\nLocation information of other UEs involved in the multi-user session will not be provided to each AC by the AS unless the users involved in the multi-user session have consented to sharing of their individual UE location information. The application layer mechanism for a user to share consent with the AS is outside the scope of SA6.\nThis solution does not introduce impact on Rel-17 architecture.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.30\tSolution #30: Common EAS selection",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.30.1\tArchitecture enhancements",
                            "text_content": "Architecture enhancements in clause 6.7 is the basis for this solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.30.2\tSolution description",
                            "text_content": "This solution addresses KI#17.\nThe UEs can be grouped together to consume EAS services on the same EAS endpoint.\nThe group information (e.g. group id) can be used as part of the binding information to support anchor those UEs to the same EAS. The binding information are maintained on a Binding Server (BS). When an EES is aware of the selected EAS (e.g. via EEC sent EAS selection declaration), the BS is contacted by the EES and the BS can decide whether to proceed the currently selected EAS or instruct to use another EAS (which already has other established session(s) for the group).\nThe EDN id is used to identify EDN and is also part of the binding information. Figure 7.30.2-1 show the detailed procedure with a Central Binding Server (CBS) for common EAS pre-selection in EES.\nIn the following figures, ACs with same AC ID on different UEs is shown as example, it is also possible that ACs with different AC IDs supplied by the same AC provider (e.g. AC developed for iphone and AC developed for Android phone) need to communicate with each other via EAS. It is assumed that the CBS can be accessed by all EESs deployed in different EDNs.\nPre-conditions:\n1.\tThe EEC is aware of the group info from AC via EDGE-5 reference point.\nThe figure depicts a schematic of an EAS (Emergency Alert System) for UEs (User Equipment) in a 3GPP (3rd Generation Partnership Project) network. It highlights the common EAS pre-selection in the EES (Emergency Equipment Selection) process, which is crucial for ensuring the effective communication of emergency alerts. The figure also illustrates the selection of common EASs for UEs, which is a critical step in the EES process.\nFigure 7.30.2-1: select a common EAS for UEs, common EAS pre-selection in EES\nIn EDN1:\n1.\tDuring EAS discovery, EEC 1 sends EAS discovery request to EES 1 including EAS ID, UE ID (of UE1), AC ID (of AC1) and group info (e.g. group id x).\n2.\tThe EES 1 pre-selects an EAS and sends group binding request message to CBS with the received information from EEC 1 and in addition the EDN id (of EDN 1).\n3.\tThere is no existing binding information found so that the CBS creates a new binding information for the UE group.\n4.\tThe CBS responds group binding request with a result indicating OK to proceed with the requested EAS.\n5-7.\tWith the received EAS information, the EES 1 responds the EAS discovery request with the selected EAS to the EEC 1 and consequently AC1 connects to the selected EAS after being informed by EEC 1.\nIn the same EDN (i.e. EDN1):\n8.\tDuring EAS discovery, EEC 2 sends EAS discovery request to EES 2 with the selected EAS information including EAS ID, UE ID (of UE2), AC ID (of AC1) and group info (e.g. group id x).\n9.\tThe EES 2 pre-selects an EAS and sends group binding request message to CBS with the received information from EEC 2 and in addition the EDN id (of EDN 1).\n10.\tThe CBS finds existing binding information for the UE group based on group info.\n11.\tThe CBS responds with a result indicating recommendation to use common EAS (including the associated EES info) which is EES 1 selected EAS.\n12-14.\tWith the received EAS information, the EES 2 responds the EAS selection to the EEC 2 and consequently AC1 connects to the common EAS. EEC 2 may contact EES 1 for subsequent procedures (e.g. EEC registration, ACR subscription).\nNOTE:\tIt is assumed that within an EDN (with proper dimensioning for the service area), the EAS service experience is almost the same for all ACs distributed in the EDN. For instance, the EAS can measure the RTT for connected AC with consideration of the user plane routing optimization in CN and DN so that the EAS can estimate its service area during deployment stage to ensure relative fairness for all ACs distributed in the EDN (e.g. > 95% ACs having RTT < 200ms).\nThe binding update may be done for a common EAS when:\n1)\tEAS service continuity (e.g. a new common EAS is selected by the current EAS due to load re-balancing reason in the same EDN) happens. In this case, the EES receives the T-EAS discovery from EEC or S-EAS or triggers T-EAS discovery by itself, then the EES pre-selects T-EAS and update the binding information in the CBS.\n2)\tAC in a group terminates the application session. In this case, the EES is informed by EAS/EEC about the session termination and updates the binding information in the CBS for the terminated AC. The group binding for the common EAS still remains the same.\nThe binding information in the CBS is created upon the 1st AC’s need to discover an EAS, therefore, when the last AC in a group terminates the application session, the binding information for the group is removed in the CBS.\nFor group-based session termination (e.g. EAS decides to terminate session for all ACs in a group), the common EAS may trigger its EES to remove the binding information for the group in the CBS.\nFor common EAS pre-selection in the UE, the procedure is similar as Figure 7.30.2-1 with the difference that the (T-EAS pre-selection is done by the EEC.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.30.3\tSolution evaluation",
                            "text_content": "This is a viable solution addressing the KI#17. This solution proposes a new entity CBS to maintain the selected common EAS which is determined by the 1st UE's activity in a group in an EDN and has impact to the (T-)EAS discovery procedure. Both initial EAS discovery and subsequent T-EAS discovery in ACR are covered by this solution.\nThis solution relies on group information (e.g. group id) conveyed from the AC to the EEC. As a pre-condition, the group is formed before EEC triggers EAS discovery. A pre-configured group can take advantage of this solution to enable common EAS selection. For dynamic group, it can also use this solution to select a common EAS in an EDN.\nFor fairness of all involved ACs in a group to communicate with common EAS, this solution has assumption that the service area is properly dimensioned during EAS deployment so the EAS can ensure good and fair service experience for the ACs within its service area.\nNOTE:\tThis solution does not address how to enable data synchronization among common EASs, which is within the scope of KI#13.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.31\tSolution #31: Discover common EAS",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.31.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.31.2\tSolution description",
                            "text_content": "The following solution addresses open issues of key issue #17 (Discovery of a common EAS) and key issue #13 (Edge enabler layer support for EAS synchronization).\nAs specified in TS 23.558 (Rel-17), the EEC of one user may select EAS which is different from the EAS selected by another user although both users are part of the same communication session. If different EASs are selected for the users of the same communication session, then different EASs need to synchronize with each other in order to maintain the communication session.\nFor certain use cases involving real-time communication in a multi-user session, both between AC and EAS and between different ACs via the EAS, it may be necessary or beneficial to use services from a single common EAS to meet the strict latency requirements and to avoid the need for inter-EAS synchronization.\nDependent on the use case, the EEL may apply different additional criteria to determine this common EAS. E.g. it could be desirable to determine the EAS so that the latency for all the ACs in the session is approximately the same or that the latency for a specific AC is minimized.\nThe following procedure demonstrates the Discovery of a common EAS.\nThe procedure supports selection of a common EAS:\n-\tfor the same ACID on UEs of different Users (aware or unaware of each other), within the same EDN\n-\tfor group of ACIDs on UEs of same User within the same EDN\n-\tper group within the same EDN and for the same ACID(s)\n-\tfor new UEs requesting to join after a common EAS is already selected.\nPre-conditions:\n1.\tAC Profile is enhanced with Grouping required information that tells whether the AC requires a multi-user session or multi-AC session etc.\n2.\tEAS registers to EES according to clause 8.4.3 EAS Registration in TS 23.558.\n3.\tEEC-1 is registered to EES-1 and EEC-2 is registered to EES-n.\n4.\tEEC-1 may receive list of EESes from ECS relevant to the group-ID.\nThe figure depicts a common EAS discovery process, where EECs (Emergency Equipment Cabinets) are connected to different EES (Emergency Equipment Stations). This diagram illustrates the steps involved in identifying and connecting EECs to EES, ensuring the efficient and effective communication of emergency equipment.\nFigure 7.31.2.2-1: Common EAS discovery - EEC(s) connected to different EES(s)\n1.\tEEC-1 received a trigger to initiate EAS discovery.\n2.\tEEC-1 performs the EAS discovery, as described in TS 23.558 V17.3.0, where an enhanced AC profile including Grouping required information is included in the request towards EES-1. Grouping required can be for a multi-user session or multi-AC session or a combination of both. Group ID IE (which indicates the ID for grouping of Users of same AC or grouping of ACs.) is present only when the expectation is to enable multiple groups while the UEs are connected to EDN for the same EASID.\n3.\tEES-1 considers Grouping required information as one of the discovery filters to decide the list of EASes to return in the response to EEC-1's EAS discovery request. The EES-1 checks if there is already a selected EAS corresponding to the received Grouping required information from EEC-1. If it exists then the EES-1 returns the selected EAS. Otherwise, the EES-1 determines the list of EAS as specified in TS 23.558 (Rel-17).\n4.\tWhen multiple EASs are discovered for a specific AC, the EEC-1 may select one or more EASs to enable AC communication with one of the selected EASs i.e. the EEC-1 (or AC and EEC-1) selects the initial EAS from the discovered EAS candidates, considering the Grouping required information.\n5.\tEEC-1 sends a Selected EAS announcement request with AC ID, EASID, EAS endpoint, and UE ID to the selected EES-1 (which is determined based on the selected EAS). The request shall include Group ID IE if this information is present in Step-2. EES-1 can decide whether to proceed with the currently selected EAS or instruct to use another EAS (which already has other established session(s) for the group). The mapping of selected common EAS with grouping required information and Group ID (if present) is stored at EES-1. If EEC knows the list of EESes, then the request message may contains the all the EESs information for the group ID received from the ECS.\n6.\tEEC-1 is then responded to by the selected EES-1 with the success/failure of the request. If EES-1 decides to use another EAS in Step-5, then the response includes information about the new EAS back to EEC-1.\n7.\tIf EES-1 has not received the list of other EESes information from EEC-1, EES-1 determines which other EESes to be informed about the selected EAS e.g. serving the same AC within the EDN as per the procedure in clause 8.8.3.3 of TS 23.558 for the EES-1 to retrieve the EES-n information from the ECS.\n7.1 Selected EES-1 contacts ECS along with EASID information of the Selected EAS to determine which other EES(s) serve the same EASID. Otherwise, EES-1 uses the list of other EESes as received in Step-5 above.\n7.2 ECS provides endpoint information of other EES(s) as described in table 8.3.3.3.3-2, corresponding to the requested EASID information.\n8.\tSelected EES-1 then declares common EAS selection to all the determined EESes (EES-n) along with the Grouping required information and Group ID (if present).\n9.\tEES-n stores the received common EAS information along with the Grouping required information and Group ID (if present) and sends back an acknowledgement to EES-1.\n10.\tUpon receiving a trigger, similar to step-2, EEC-2 performs the EAS discovery, as described in TS 23.558 V17.3.0, where an enhanced AC profile including Grouping required information and optionally Group ID is included in the request towards EES-n.\nNOTE:\tRace conditions e.g. EAS discovery before announcement in Step 8, can occur in this solution.\n11.\tEES-n checks if there is already a selected EAS corresponding to the received Grouping required information from EEC-2.\n12.\tIf a common EAS is available, EES-n then informs the selected EAS to the EEC-2. When Group ID is present in Step-10, EES-n checks if common EAS is selected corresponding to the Group ID and inform the selected common EAS to the EEC-2.  Otherwise, Step 3 to Step 9 are performed to select and announce a common EAS.\nThe EDN configuration information received from ECS may then be used by EEC-1 and EEC-2 for establishing a connection to the common EAS.\nThe following procedure demonstrates the Discovery of a common EAS when EEC(s) are connected to same EES.\nThe procedure supports selection of a common EAS:\n-\tfor the same ACID on UEs of different Users (aware or unaware of each other), within the same EDN\n-\tfor group of ACIDs on UEs of same User within the same EDN\n-\tper group within the same EDN and for the same ACID(s)\n-\tfor new UEs requesting to join after a common EAS is already selected.\nPre-conditions:\n1.\tAC Profile is enhanced with Grouping required information that tells whether the AC requires a multi-user session or multi-AC session etc.\n2.\tEAS registers to EES according to clause 8.4.3 EAS Registration in TS 23.558.\n3.\tEEC-1 and EEC-3 are registered to EES-1.\nThe figure depicts a common EAS discovery scenario, where EECs (Emergency Equipment Cabinets) are connected to the same EES (Emergency Equipment System). This configuration allows for efficient communication and coordination during an emergency, ensuring that all EECs are aware of the EES's status and can respond accordingly.\nFigure 7.31.2.3-1: Common EAS discovery - EEC(s) connected to same EES\nSteps 1 to 6.\tSame as steps 1 to 6 of clause 7.31.2.2.\n7.\tUpon receiving a trigger, EEC-3 performs the EAS discovery, same as in step 2 of clause 7.31.2.2.\n8.\tEES-1 checks the stored information if a common EAS is available corresponding to the received enhanced AC profile.\n9.\tIf stored information exists then the EES-1 returns the common selected EAS. Otherwise, the EES-n determines the list of EAS as specified in TS 23.558 (Rel-17).\nThe EDN configuration information received from ECS may then be used by EEC-1 and EEC-3 for establishing a connection to the common EAS.\n\nThe following solution corresponds to the key issue #13 Edge enabler layer support for EAS synchronization. If users are connected to multiple EESs with non-overalpping service area, then how to enable EAS to find other EAS(s) with multi-user communication session to synchronize. The procedure demonstrates the edge enabler layer support for the announcement of a selected EAS between EES(s) for enabling EAS synchronization.\nPre-conditions:\n1.\tAC Profile is enhanced with Grouping required information that tells whether the AC requires a multi-user session or multi-AC session etc.\n2.\tEAS registers to EES according to clause 8.4.3 EAS Registration in TS 23.558.\n3.\tEEC-1 is registered to EES-1 and EEC-2 is registered to EES-n.\nThe figure depicts the edge enabler layer support for common EAS announcement, which is a crucial component in the communication infrastructure. It illustrates the various layers and components involved in the EAS system, including the edge enabler layer, which is responsible for managing the signaling and data transmission between the edge and core networks. The figure also highlights the importance of this layer in ensuring the smooth functioning of the EAS system, as it enables the efficient exchange of information between the edge and core networks.\nFigure 7.31.2.4-1: Edge enabler layer support for common EAS announcement\n1.\tEEC and EES performs the common EAS discovery procedure as described in steps 1 to 6 of clause 7.31.2.3.\n2.\tEES determines which other EESes to be informed about the selected common EAS e.g. serving the same EASID within the EDN as per the procedure in clause 8.8.3.3 of TS 23.558 for the EES to retrieve the other EES information from the ECS.\n2.1 EES contacts ECS along with EASID information of the selected common EAS to determine which other EES(s) serve the same EASID.\n2.2 ECS provides endpoint information of other EES(s) as described in table 8.3.3.3.3-2, corresponding to the requested EASID information.\n3.\tEES then declares selected common EAS to all the determined EES(s) along with the Grouping required information and Group ID (if present).\n4.\tReceiving EES stores the received selected common EAS information along with the Grouping required information and Group ID (if present) and sends back an acknowledgement to the sending EES.\nThe EES(s) receiving the selected common EAS information which is different from the one it has selected a common EAS, EASs are notified about the other common EASs via EDGE-3 notifications. EASs may initiate EAS-EAS sync as decided and supported by the application and the details of the same are out of scope of this specification.\nNOTE:\tWhether all EASs (of the same EASID) needs to be notified about the other common EASs will be considered during normative.\nThe following enhancements (highlighted with bold text) are proposed to Table 8.2.2-1 of TS 23.558 [2].\nTable 8.2.2.1: AC Profile (enhanced)\n\nService provisioning procedure in clause 8.3.3.2.2 based on request/response model is enhanced with the following:\nStep 1 is enhanced with -The request message may contains the group information for common EAS selection (e.g. group ID, expected service area) can be provided by the EES within the service provisioning request.\nStep 2 is enhanced with -For the common EAS case, the ECS can determines the alternative EESs for the certain group based on the group information for common EAS selection (e.g. group ID, expected service area) in step 1\nNOTE: The same EES list will be provided to all the UE in the same group.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 8.2.2.1: AC Profile (enhanced)",
                                    "table number": 37,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.31.3\tSolution evaluation",
                            "text_content": "The proposed solution addresses Key Issue #17 and Key Issue #13.\nFor Key Issue #17: Proposes EAS discovery method enhanced with information required for discovering a common EAS when the same ACID on UEs of different Users (aware or unaware of each other) are within the same EDN, group of ACIDs on UEs of same User are within the same EDN, per group within the same EDN for the same ACID(s), new UEs joining late.\nProposal covers two main cases – when EEC(s) are registered to same EES and when EEC(s) are registered to different EES(s).\nWhen EEC(s) are registered to different EES(s) and each EES can select their own common EAS as in Figure 7.31.2.3-1, sync may be performed between EAS-EAS as per application requirement.\nWhen EEC(s) are registered to different EES(s) and a common EAS is selected across multiple EES as in Figure 7.31.2.2-1, race condition can occur, which is not resolved.\nFor Key Issue #13: In order for EAS to know which other EAS to perform synchronization with, EES(s) share their common EAS selection information to other EES(s) as in Figure 7.31.2.4-1, without the involvement of centralized server. The mechanism for EEL to announce common EAS information within EDN and across EDN requires further technical evaluation and discussion during normative.\nThis solution does not introduce impact on Rel-17 architecture.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.32\tSolution #32: Dynamic EAS instantiation triggering and notification",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.32.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.32.2\tSolution description",
                            "text_content": "This solution addresses the Key issue #9: Enhancement of dynamic EAS instantiation triggering for efficient utilization of EDN resources for EAS deployment.\nAs specified in TS 23.558 (Rel-17), EES may trigger the EAS instantiation dynamically if there is no instantiated EAS that matches the requesting service characteristics during EAS discovery.\nBy collecting one or more of these triggering input events, EES may determine if there is a need for EAS instantiation based on the pre-configured information about instantiable EASs with further considering the requesting service characteristics (e.g. location, latency) by EEC or service load/capacity (e.g. number of service sessions) of EAS. If such a need for EAS instantiation determined, EES may sends a report for a need of the EAS instantiation to the ECSP management system (which is specified in TS 28.538 [20]) to consider instantiating the target EAS that is determined to instantiate by invoking an MnS API of the ECSP management system.\nWhen the target EAS has been instantiated, the EES may obtain the EAS profile based on the updated configuration information by the ECSP management system. Then EES may further notify the instantiation result of the target EAS with the EAS profile to the corresponding EECs in order to inform the EECs of the availability of the EAS instance.\nIn this solution, the EAS discovery subscribe-notify procedures are re-used as specified in the clause of 8.5.2.3 of TS 23.558 [2]. EEC may request EES for subscribing to EAS discovery. When the EES gets informed of the EAS instantiation, the EES notifies the EECs whose EAS discovery filters match with the EAS instance.\nNOTE 1:\tHow and when a triggering is determined by EES is upon implementation and out the scope of this solution.\nNOTE 2:\tThe pre-configured information about instantiable EASs may be provided by the ECSP management system but such a mechanism is out of the SA6 scope.\nNOTE 3:\tWith the EAS instantiation request, EES just provides its indication for demanding instantiation of the target EAS to the ECSP management system. Any decision or further actions to the requests are up to the ECSP management system.\nNOTE 4:\tThe MnS APIs for EAS instantiation request/notification should be provided by the ECSP management system and should be consulted with SA5.\nThe solution can be summarized as follows:\nDynamic EAS instantiation triggering and notification\na.\tTriggering inputs events:\ni.\tNo available EAS instances matched during EAS discovery\nb.\tTriggering determination:\ni.\tUp to EES implementation\nii.\tBased on the triggering input events and pre-configured information about instantiable EASs\niii.\tFurther considerations:\n-\tEEC's requesting service characteristics (e.g. location, latency) as specified in EAS discovery filters\n-\tEAS's service load/capacity (e.g. number of service sessions) maintained by EES\nc.\tTriggering actions\ni.\tInvoking an MnS API of the ECSP management system for reporting a need of instantiation of a target EAS\nd.\tPost-triggering actions\ni.\tReceiving a notification for instantiation result from the ECSP management system by configuration update\nii.\tNotifying the EAS instantiation to the corresponding EECs which have initiated the triggering input events for EAS availability change.\nThe Figure 7.32.2.2-1 depicts the essential operational steps for dynamic EAS instantiation triggering and notification procedures.\nPre-conditions:\n1.\tEES is pre-configured with the information about instantiable EASs which may be provided by the ECSP management system.\n\nThe figure depicts a dynamic EAS instantiation triggering and notification procedures, illustrating the steps involved in triggering an EAS alert and providing notification to relevant parties. The figure includes a flowchart with various stages, such as triggering, triggering conditions, and notification procedures, as well as visual elements like checkboxes and icons to represent different actions. The figure is a visual representation of the complex process, making it easier to understand and follow.\nFigure 7.32.2.2-1: Dynamic EAS instantiation triggering and notification procedures\n1a-1b.\tEECs proceed EAS discovery subscription request with EES, which are triggering input events for dynamic EAS instantiations.\n2a-2b.\tEES sends an EAS discovery subscription response to the EEC.\n3.\tBased on the triggering input events, the EES determines if there is a need for EAS instantiation considering the requesting service characteristics provided by EAS discovery filters; or service load/capacity (e.g. number of service sessions) of EAS maintained by the EES.\n4.\tIf such a need for EAS instantiation determined, EES sends a report for a need of the EAS instantiation to the ECSP management system for considerations to instantiate the target EAS by invoking an MnS API of the ECSP management system.\n5.\tThe MnS of the ECSP management system responds to the EES with indicating that the requesting EAS instantiation will be considered.\n6.\tThe ECSP management system determines if the requested EAS instantiation is acceptable by analyzing the deployment requirements and available resources; and proceeds the corresponding actions. (out the scope of this specification)\n7. \tIf the target EAS is instantiated successfully, the EES gets informed by an EAS registration procedure of the instantiated EAS with the EAS information (e.g. EAS profile).\n8a-8b.\tThe EES notifies the EAS instantiation result with EAS discovery notification including the EAS profile to the relevant EECs which have already initiated the triggered input events for the target EAS instance.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.32.3\tSolution evaluation",
                            "text_content": "This solution allows for an EES to dynamically trigger the EAS instantiation using 1) indication of a need for EAS instantiation to the ECSP management system; and 2) the EAS discovery notification for informing EEC of the result of the EAS instantiation with the EAS profile.\nThis solution addresses the key issue #9: enhancement of dynamic EAS instantiation triggering as specified in the clause 4.9.\nThis solution relies on the EDGEAPP architecture as specified in TS 23.558 [2] with extended capabilities of EES to determine if there is a need for EAS instantiation considering the requesting service characteristics by EEC or service load/capacity of EAS.\nThis solution also relies on an MnS API for indication of a need for EAS instantiation, which shall be provided by the ECSP management system by consulting with SA5.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.33\tSolution #33: Support for EEC Discovery of EAS(es) before instantiation",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.33.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.33.2\tSolution description",
                            "text_content": "The following solution corresponds to key issue #9 on enhancements of dynamic EAS instantiation triggering. This solution helps ensure that the proper number of EAS instances are instantiated in the EDN and the solution addresses what information may be utilized by an EES to decide to trigger dynamic EAS instantiation.\nIn this solution, the EES is configured by the Management Service (MnS) with information on EAS(s) that can be dynamically instantiated in an EDN; this list provides the information elements needed for requesting EAS instantiation.\nThis solution updates the discovery procedure so that EEC can discover EAS(es) executable in an EDN, wether they are instantiated or not. The solution then introduces a new EAS selection procedure so that the EEC can indicate to the EES that it wants to access the services of an EAS that is not yet instantiated. The benefit of this procedure is that EAS instantiation happens after an EEC has selected an EAS, and only at the EES associated with the selected EAS.The solution dissociates EAS discovery, which can be performed with multiple EESes, or can have been performed in a distant past (e.g. relies on caching), from the EAS selection performed at the EEC by providing information elements to the EES about the selection and imminent use of an EAS.\nThis procedure presents a high-level overview of Solution #33.\nFigure 7 provides a high-level overview of solution #33, illustrating the process of creating a secure and efficient communication network. The figure includes various components such as the network architecture, network components, and network security measures. The network architecture is depicted with different layers, including the core switches, optical line terminals (OLTs), and distributed nodes. The figure also highlights the use of redundancy paths to ensure failover reliability. The overall solution is designed to provide a secure and efficient communication network, with a focus on network security measures.\nFigure 7.33.2.2-1: High-level overview of solution #33\n1.\tOn initial deployment, the Management Service (MnS) is requested to perform EES deployment and can additionally be requested to perform initial EAS deployment. Details on requesting EES and EAS instantiation is specified in 3GPP TS 28.538 [20].\nTo support the dynamic EAS instantiation functionality, the EES needs a list of EAS that it is allowed to dynamically instantiate and corresponding EAS information elements needed for requesting EAS instantiation.\nNOTE 1:\tHow the dynamic EAS instantiation information is made available to the EES is implementation specific in Rel-17 and in the scope of SA5 for Rel-18.\n2.\tEES registers to the ECS following the procedures described in 3GPP TS 23.558 [2] clause 8.4.4. The EES profile may include EAS that the EES is allowed to instantiate.\n3.\tEEC performs the service provisioning following the procedures described in 3GPP TS 23.558 [2] clause 8.3.3.\n4.\tWhen the AC requests application server access, the EEC can perform EAS discovery with one or more EES, or alternatively the EEC can use cached EAS information following the procedures described in 3GPP TS 23.558 [2] clause 8.5. In this solution, the EES may suspend the EAS instantiation and the EAS discovery response may include information about EAS(s) that are not currently instantiated (e.g. EAS discovery response may be updated with Instantiable EAS List (O) information element or EAS Endpoint may be optional in EAS Profile to infer uninstantiated EAS).\nNOTE 2: Due to new behaviour in EES and EAS discovery response message change, stage 3 should consider backward compatibility with R17 EES behaviour for EEC without such enhanced capability as step 6.\n5.\tThe EEC performs EAS selection and can select an EAS that is not currently instantiated.\n6.\tIf the EEC selects an EAS that is not currently instantiated, then the EEC informs the EES of the selected EAS by sending an EAS selection request to the EES. Otherwise, the procedure continues to step 10.\nEAS selection request is a new message that contains the following information elements: Requestor identifier (M), UE identifier (O), Security credentials (M), Selected EAS ID (M).\n7.\tThe EAS selection request triggers the EES to verify if the instantiation of the selected EAS is required; since the selected EAS is not instantiated, the EES requests the MnS to perform EAS instantiation for the selected EAS. Upon reception of the EAS instantiation request, MnS verifies EAS instantiation requirements and performs EAS instantiation as specified in 3GPP TS 28.538 [20].\nUpon instantiation of the EAS by the MnS, the EES is informed by MnS of the result of EAS instantiation.\nNOTE 3:\tThe instantiated EAS can be discovered by other EECs and used by other ACs.\n8.\tStep 7 happens only if EAS instantiation triggered in step 6 was successful. At start-up, newly instantiated EAS registers to the EES following procedures described in 3GPP TS 23.558 [2] clause 8.4.3.\n9.\tUsing the EAS instantiation result received from the MnS in step 6 and the registration information provided at EAS registration in step 7; the EES sends the EAS selection response to the EEC to provide EAS connectivity information.\nEAS selection response is a new message that contains the following information elements: Response Status (M), EAS Profile (O), Failure cause (O).\nIf the EAS instantiation result received from the MnS in step 8 indicates failure, the EES shall reject the EAS selection request and respond with an appropriate failure cause.\n10.\tThe AC accesses the selected EAS.\nIf the EAS selection request failed, the EEC may retry the EAS selection request taking into account the received failure cause.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.33.3\tSolution evaluation",
                            "text_content": "Overall evaluation of Solution #33:\na)\tEnables the EES to inform the ECS at EES registration about available EASID(s), regardless of instantiated and instantiable EAS(es).\nb)\tEnables an EEC to discover uninstantiated EAS(s) by updating the EAS discovery response to allow the EES to additionally include EAS(s) that are not instantiated but can be instantiated by the EES. This allows to keep instantiated EAS to a minimum.\nc)\tEnables the EEC to inform the EES of the EAS selected by the EEC by sending an EAS selection request. This provides insights to the EES about imminent EAS usage and helps the EES in performing efficient EAS management.\nd)\tEnables the EES to evaluate if EAS instantiation is needed upon receving the EAS selection request. This allows the EES to evaluate if an EAS has become available, and otherwise trigger EAS instantiation only if needed.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.34\tSolution #34: EDGE-5 APIs",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.34.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.34.2\tSolution description",
                            "text_content": "This solution corresponds to key issue #4 on EDGE-5 reference point between ACs and the EEC.\nThe solution provides an API for the AC to request for EEC's services for edge enablement corresponding to EEC's capabilities. Using this API, AC may request the EEC for EEL services. The solution defines APIs for one-time request/response operations for EAS discovery and ACR operations. Additionally, The AC can request an AC subscription. The EEC creates the subscription and when required, performs necessary operations such as EAS discovery, ACR etc. delivering notifications to the AC as required.\nNOTE:\tEEC can initiate any EDGE-1 or EDGE-4 operation without receiving a request or without receiving AC related information from the AC.\nThe solution provides the following procedures:\n-\tAC registration request;\n-\tEAS discovery request;\n-\tACR request;\n-\tAC subscription; and\n-\tAC notification.\nNOTE:\tDetails on how the AC and EEC communicate with each other is out of scope.\nPre-conditions:\n1.\tThe AC can communicate with the EEC.\nNOTE 1:\tDetails on how the AC and EEC communicate with each other is out of scope.\nThe figure depicts the AC registration request procedure, which is a crucial step in the network's operation. It illustrates the steps taken by the network to register an AC (Access Control) device, ensuring that only authorized devices can access the network. The figure includes a flowchart, which outlines the sequence of events, and a list of steps, providing a clear and concise overview of the process.\nFigure 7.34.2.2.2-1: AC registration request procedure\n1.\tThe AC sends an AC registration request to the EEC. The request includes the AC profile, AC's security credentials and optionally the EAS characteristics and EAS discovery filters. The request may also include a list of EEC's services that AC requires the EEC to handle. The request additionally includes ECS configuration information if the AC is edge-aware and configured with the ECS configuration information.\nNOTE 2:\tThe ASP providing the AC and the ECSP providing the ECS can have edge computing service provider service agreement as in clause 9. The ECS configuration information configured in the AC is based on the service agreement.\n2.\tThe EEC checks AC's security credentials and validates the request.\n3.\tIf the request is successfully validated, the EEC registers the information provided in the request and responds back to the AC with AC registration response. The AC registration response includes the list of capabilities supported by the EEC e.g. which service continuity scenarios are supported by the EEC. If the request in step 1 included a list of EEC's services AC requires from the EEC, the response also includes a list of EEC's services that AC is authorized for.\nNOTE 3:\tThe mechanisms used for authentication and authorization between AC and EEC is out of scope of this specification. EEC can use local policies, user preferences, ASP services agreement(s) (see clause 9) to authorize the request from the AC.\nNOTE 4:\tAdditional procedures between AC and EEC to update the registration or deregister are necessary.\nNOTE 5:\tWhen the ECS configuration information is provided from an AC, the EEC can use the ECS configuration for initial service provisioning for the AC that provided the ECS configuration information if there is no ECS configuration information is provided from the 5GC.\nPre-conditions:\n1.\tThe AC can communicate with the EEC.\nThe figure depicts the EAS discovery request procedure, which is a crucial step in the security and reliability of a communication network. It illustrates the steps taken by the network to identify and authenticate the sender of an EAS (Electronic Attack Surface) request. The figure shows the network's response to the request, which includes the identification of the sender, the verification of the sender's identity, and the transmission of the EAS request to the appropriate authorities. This procedure is essential for ensuring the security and integrity of the communication network.\nFigure 7.34.2.2.3-1: EAS discovery request procedure\n1.\tThe AC sends an EAS discovery request to the EEC. The request includes AC's security credentials and may include AC profile and EAS discovery filters.\n2.\tThe EEC checks AC's security credentials and validates the request.\n3.\tIf the request is successfully validated, the EEC determines if the required EAS is available or not. The EEC may use information cached or preconfigured at the EEC or may use the EAS discovery procedures to query the EES. If step 1 includes the AC profile or EAS discovery filters, then the EEC may utilize the provided AC profile and filters, to form the EAS discovery request towards EES. If step 1 does not include AC profile and EAS discovery filters, and AC registration was performed, the EEC may utilize the AC profile provided by the AC during AC registration. The EEC also needs to take user privacy requirements, e.g. regarding the disclosure of location information towards the network into account. If required, e.g. when EAS discovery procedures returns a list of EASs, the EEC performs EAS selection based on the information received in step 1 and the AC profile. The EEC can perform EAS discovery with different EESs before selecting an EAS.\nNOTE 1:\tSA3 recommendations, if any, on how the user or the AC can consent, e.g. to the disclosure of location information and the use of the AC ID in the signalling towards the network must be considered during normative.\nNOTE 2:\tIf required, the EEC can perform service provisioning procedure, or EEC registration procedure or both, before performing the EAS discovery procedures. EEC may already have captured EESs and EASs availability for present location; so that the AC's request (step #1) can be replied to quickly and efficiently.\nNOTE 3:\tThe EEC can include AC profiles of more than one AC in the EAS discovery request sent to the EES.\n4.\tThe EEC responds back to the AC with the EAS discovery response. The response includes the EAS profile(s) of the available EAS(s).\nPre-conditions:\n1.\tThe AC can communicate with the EEC.\nThe figure depicts a step-by-step process for an ACR (Access Control Request) request procedure in a network. It illustrates the various steps involved in initiating an ACR request, including the identification of the network, the creation of a request, and the submission of the request to the network. The figure provides a clear and concise visual representation of the process, making it easy to understand and follow.\nFigure 7.34.2.2.4-1: ACR request procedure\n1.\tThe AC sends an ACR request to the EEC. The request includes AC's security credentials, type of requested operation (i.e. ACR detection, ACR initiation) and AC profile. If the request is to initiate the ACR, the request may also include the target EAS information.\n2.\tThe EEC checks AC's security credentials and validates the request.\n3.\tIf the request is successfully validated, the EEC process the request from the AC. If the type of requested operation in the request received in step 1 is:\n-\tACR detection, then the EEC determines if ACR is required or not. If it is required, the EEC uses one of the EEC initiated ACR scenarios or launches ACR with action \"determination\", leading to S-EES executed ACR;\n-\tACR initiation, then the EEC uses one of the EEC initiated ACR scenarios and initiate ACR. If the request in step 1 also includes target information, the EEC uses it to select the ACR targets;\nPre-conditions:\n1.\tThe AC can communicate with the EEC.\nThe figure depicts a step-by-step process for an AC (Access Control) subscription request, including the initial steps, the submission of the request, and the subsequent steps for the network administrator to review and approve the request.\nFigure 7.34.2.2.5-1: AC subscription request procedure\n1.\tThe AC sends an AC subscription request to the EEC. The request includes AC's security credentials, a list of EEC's services that AC requires the EEC to handle, and related parameters such as AC profile. If the subscription request includes:\n-\tEAS discovery or EAS dynamic information subscription, then the request may include EAS discovery filters\n-\tACR management, then the request may include type of ACR operations:\n-\tACR monitoring, where the EEC monitors the need for ACR and notifies the AC as and when required e.g. on receiving ACR related notifications on EDGE-1 interface.\n-\tEEC managed ACR, where the EEC monitors the need for ACR. If need for ACR is detected, then the EEC decides and initiates ACR using one of the EEC initiated ACR scenarios. The EEC notifies the AC about the imminent ACR and may include the target information.\n2.\tThe EEC checks AC's security credentials and validates the request.\n3.\tIf the request is successfully validated, the EEC creates the subscription and sends an AC subscription response message to the AC. The response includes the list of services that the EEC will handle and related details.\n4.\tThe EEC executes the services e.g. EAS discovery, ACR management, and notifies the AC with information as necessary. The EEC may use locally cached information or configurations while providing services to the AC.\nNOTE:\tAdditional procedures between AC and EEC to update the subscription or to unsubscribe are necessary.\nPre-conditions:\n1.\tThe AC has subscribed to the EEC.\nThe figure depicts the EAS (Emergency Alert System) discovery notification procedure, which is a crucial component of emergency communication systems. The figure shows the steps involved in the notification process, including the identification of the EAS, the transmission of the notification message, and the response from the receiving device. The figure is important for ensuring that emergency alerts are delivered to the appropriate recipients in a timely and effective manner.\nFigure 7.34.2.2.6-1: EAS discovery notification procedure\n1.\tAn event occurs at the EEC that satisfies trigger conditions for notifying a AC e.g. EEC detects a need for Application Context Relocation.\n2.\tThe EEC sends an AC notification to the AC with relevant information related to the event triggered in step 1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.34.3\tSolution evaluation",
                            "text_content": "This solution relates to KI#4 on EDGE-5 interface. The solution provides multiple procedures to allow uniform interaction of ACs with the EECs. The solution specifies procedures for AC registration, EAS discovery requests/response, ACR related request/response and AC's subscription to EEC.\nThe solution has no impacts on Rel-17 cardinalities defined for EDGE-5. Aspects related to mutual authentication, authorization and user consent require inputs from SA3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.35\tSolution #35: EEC selected ACR scenarios",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.35.1\tArchitecture enhancements",
                            "text_content": "None\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.35.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #19 on ACR scenario combination.\nIn this solution, the EEC is responsible to determine the ACR scenario(s) that should be used for an AC and EAS pair. The EEC performs ACR selection at EAS selection time.\nThe following ACR selection outcomes are possible:\n-\tThe EEC can select no ACR scenario which indicates that service continuity is not supported or needed.\n-\tThe EEC can select one ACR scenario which indicates that service continuity is supported and needed, but that ACR coordination is not needed.\n-\tThe EEC can select two or more ACR scenarios which indicates that service continuity is supported and needed, and that ACR coordination is needed.\nACR coordination ensures that only one of the selected ACR scenarios proceeds through the ACR execution phase. Coordination of concurrent ACR execution is out of scope of this solution.\nFigure 7.35.2.2-1 presents an overview of the procedures for ACR selection at the EEC.\n\nPre-condition:\n-\tEEC has performed service provisioning procedure with the ECS.\n\nFigure 7 illustrates the electromechanical coupling (EC) scenarios in the 35.2.2-1 EEC s, highlighting the importance of selecting the correct electromechanical coupling (EC) for optimal performance.\nFigure 7.35.2.2-1 EEC selected ACR scenarios\n1.\tThe EEC performs EAS discovery using procedures defined in 3GPP TS 23.558 [2] clause 8.5 to obtain a list of discovered EAS(s).\nThe discovered EAS list contains EAS(s) that are compatible with the AC and EEC ACR capabilities provided in the EAS discovery request or subscription.\n2.\tThe EEC (or AC and EEC) selects one EAS from the discovered EAS list.\nAdditionally, the EEC selects the ACR scenario(s) that should be used for the given AC and selected EAS. ACR selection can result in zero or more ACR scenarios being selected. For selecting the ACR, the EEC minimally considers the ACR capabilities of the AC from AC Profile, of the EEC (known locally), of the EES from service provisioning response received from the ECS (pre-requisite), and of the EAS from EAS Profile and obtained at EAS discovery.\nNOTE:\tACR selection criteria minimally can include ACR capabilities of the AC/EEC/EES/EAS; other criterias are possible and left out of scope of the current solution.\nEditor's note:\tWhether AC service KPI also will be considered by the EEC to decide on the ACR scenario(s) is FFS.\n3.\tThe EES uses the list of selected ACR scenarios to determine if it should perform ACR detection and/or ACR decision.\n4.\tThe EES sends an ACR selection notification to the selected EAS providing the selected ACR scenario list. Not shown on the figure, the EAS previously subscribed to receive ACR notifications. The EAS uses the selected ACR scenarios list to determine if it should perform ACR detection and/or ACR decision.\n5.\tThe EES sends the selected EAS declaration response to the EEC indicating success or failure of the EAS announcement request.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.35.3\tSolution evaluation",
                            "text_content": "Solution #35 enables the following aspects for ACR scenario(s) selection for one AC:\na)\tACR scenario(s) selection is performed at the EEC and happens after EAS selection has been performed at the EEC (or AC and EEC). This ensures that the service session (e.g. AC/EAS pair) are known by the EEC before it selects ACR scenario list.\nb)\tthe EEC minimally considers each of the AC/EEC/EES/EAS ACR capabilities in order to form an ACR scenario list; the list can include zero ACR scenarios (e.g. ACR not needed) or more. This provides the benefit of covering all possible ACR combinations; expressed differently, it is possibe to not use ACR and it is possible to involve multiple participants to perform ACR detection.\nc)\tthe EEC propagates the ACR scenario list to the selected EES by sending a selected EAS announcement request; and the EES propagates the ACR scenario list to the selected EAS by sending an ACR selection notification. This allows every ACR participant to learn which ACR scenarios have been selected, and allows every participant to initiate ACR detection according the selected ACR scenario list. Additionally, only the EES and selected EAS are informed of the ACR selection list.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.36\tSolution #36: Alignment of EDGEAPP and ETSI MEC",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.36.1\tArchitecture enhancements",
                            "text_content": "Architecture requirements in clause 5.4 will serve as the guiding principles for the alignment of EDGEAPP and ETSI MEC architectures.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.36.2\tSolution description",
                            "text_content": "This solution is to address KI# 5: Alignment of EDGEAPP and ETSI MEC.\nIn particular, the solution addresses the third open issue, which is providing solutions based on the observations, study, and comparison of ETSI MEC and EDGEAPP specifications.\nAccording to Annex C of 3GPP TS 23.558 [2] MEC application and MEC platform in ETSI MEC correspond respectively to EAS and EES in 3GPP specification. Similarly, Mp1 interface corresponds to EDGE-3. According to observation A.3-1 in Annex A, registration of an instance of an application is supported by both ETSI MEC and 3GPP. Additionally, observation A.3-2 further clarifies that some of the IEs of the EAS profile may overlap with the ones defined in AppInfo, while some other IEs are specific to each of the EAS profile or AppInfo.\nIn order to support registration of an application on EES it is required that the registration request includes at least the mandatory IEs that are required for EAS registration, i.e. EAS ID and EAS endpoint. On the other hand, according to ETSI GS MEC 011 [14] the application registration request must include AppName and App Provider.\nAppInfo which is defined in ETSI GS MEC 011 [14] includes AppName and App Provider as mandatory IEs and endpoint as an optional IE. AppName can be considered equivalent to EAS ID. Similarly, App Provider corresponds to EAS Provider Identifier. Endpoint in ETSI GS MEC 011 [14] can be directly mapped to EAS endpoint. See Table 7.36.2.2-1 for a comparison between the EAS profile and appInfo.\nTable 7.36.2.2-1: Comparison between EAS Profile and appInfo\n\nNOTE 1:\tThe appInfo currently appears in the draft version of ETSI GS MEC 011 V3.0.6 (2022-03) [14]. In the current draft version, two additional IEs, isEAS and easProfile, are included in the appInfo to hold the place for providing EAS profile. These two IEs are not applicable to this solution, which analyses correspondence between IEs in EAS profile and appInfo.\nThis solution proposes to enable the application to perform registration on EES according to the mapping between appInfo and EAS profile.\nNOTE 2:\tThe solution does not impact the procedures.\nEDGE-9 interface in EDGEAPP architecture is used to support mobility of user from one EES to another EES. On the other hand, ETSI MEC has not specified APIs over Mp3. Mp3 reference point between MEC platforms is used for control communication between MEC platforms [3] with a separate application mobility service [22] being provided in support of mobility of users between MEC hosts within a MEC system. The present study does not identify overlap or equivalent functionality between the APIs on EDGE-9 and Mp3 interfaces; therefore, currently no alignment is required.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.36.2.2-1: Comparison between EAS Profile and appInfo",
                                    "table number": 38,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.36.3\tSolution evaluation",
                            "text_content": "This solution is based on the principles set in clause 5.4 and addresses alignment by mapping between overlapping APIs in EDGEAPP and ETSI MEC. In that regard, for EDGE-3 and Mp1 the solution enables the application to perform registration on EES according to the mapping between appInfo [14] and EAS profile.\nThe present study does not identify overlap or equivalent functionality between the APIs on EDGE-9 and Mp3 interfaces; therefore, currently no alignment is required.\nThe solution does not require changes in architecture and procedures.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.37\tSolution #37: ACR request trigger timing",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.37.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.37.2\tSolution description",
                            "text_content": "This solution corresponds to the key issue #3 on enhancements to service continuity planning.\nTo support the determination of the ACR request trigger timing in case of service continuity planning, this solution proposes to introduce \"General context holding time\" as shown in table 7.37.2-2. This IE is an indication of the maximum time the EAS holds the application context for a UE to move to its service area after receiving an ACR notification from the EES following an ACR request from the EEC. \"General context holding time\" can be provided to the EES during the EAS registration request or EAS registration update (when there is a change).\nSince the EASID of the EAS identifies the type of the application context (e.g. SA6Video, SA6Game etc) as described in TS 23.558 clause 7.2.4, \"General context holding time\" determined can depend on the EASID (type of the application context).\nThis IE can then be provided to the EEC during the discovery so that the EEC can use the time to decide when to make an ACR request. The EEC may provide \"prediction expiration time\" as in Solution#21 in the ACR request as per its predictions by making sure it does not exceed the \"General context holding time\".\n\"General context holding time\" can be determined or updated due to factors such as resource usage and policy setting such as the policy of the ECSP providing the EHE where the EAS is hosted. In such a case, the T-EAS sends the EAS registration update request and the EES updates the \"General context holding time\" in the EAS profile.\n\nTable 7.37.2-2: EAS Profile\n\nThe EEC can use the \"General context holding time\" to make a timely ACR request by performing an ACR launching procedure when it predicts to move to the service area of the discovered EAS within the time indicated in the IE. To reflect this, the procedures in service continuity scenarios in clause 8.8.2.2, clause 8.8.2.3, and clause 8.8.2.6 of 3GPP TS 23.558 [2] – Initiation by EEC using regular EAS Discovery, EEC executed ACR via S-EES, and EEC executed ACR via T-EES – are enhanced as follows:\n4.\tThe EEC performs EAS discovery (as specified in clause 8.5) for the desired T-EASs by querying the T-EESs that were established in step 3 (or provided in the notification from the ECS – if it was the trigger). If EEC registration configuration for the EESs established in step 2 indicates that EEC registration is required, the EEC performs EEC registration with the EESs (as specified in clause 8.4.2.2.2) before sending the EAS discovery request. Step 5 is skipped if EAS discovery procedure results in only one discovered T-EAS.\nWhen in step 1 the ACR for service continuity planning is triggered, and the \"General context holding time\" is included in the replied EAS discovery response, the EEC can make ACR request before it reaches respective T-EAS service area within the time period indicated by the IE.\n5.\tThe AC and EEC select the T-EAS to be used for the application traffic.\nNOTE 1:\tSeveral EEC registrations with different EESs may result from T-EAS discovery process during a single ACR operation.\n6.\tThe EEC performs ACR launching procedure (as described in clause 8.8.3.4) to the S-EES with the ACR action indicating ACR initiation and the corresponding ACR initiation data (without the need to notify the EAS). The S-EES may apply the AF traffic influence with the N6 routing information of the T-EAS in the 3GPP Core Network (if applicable), as described in clause 8.8.3.4. If the EEC has not subscribed to receive ACR information notifications for ACR complete events from the S-EES, the EEC subscribes for the notifications as described in clause 8.8.3.5.2.\nPhase I: ACR Detection\n1.\tThe EEC detects that ACR may be required as described in clause 8.8.1. The EEC may detect that ACR may be required for an expected or predicted UE location in the future as described in clause 8.8.1.\nPhase II: ACR Decision\n2.\tThe EEC decides to proceed required procedures for triggering ACR.\nPhase III:\tACR Execution\n3.\tThe EEC determines the T-EES by using the provisioned information or performing service provisioning procedure per clause 8.3 of the present document. When in step 1 the ACR for service continuity planning is triggered, then the Connectivity information and UE Location in the Service Provisioning (as specified in clause 8.3) procedure contains the expected Connectivity information and expected UE Location. If the UE is within the service area of the T-EES, upon selecting T-EES the UE may need to establish a new PDU connection to the target EDN. If EEC registration configuration for the T-EES indicates that EEC registration is required, the EEC performs EEC registration with the selected T-EES as specified in clause 8.4.2.2.2. The EEC can then discover and select T-EAS by performing EAS Discovery with the T-EES per clause 8.5.2 of the present document.\nWhen in step 1 the ACR for service continuity planning is triggered, and the \"General context holding time\" is included in the replied EAS discovery response, the EEC can make ACR request before it reaches respective T-EAS service area within the time period indicated by the IE.\nNOTE 1:\tSeveral EEC registrations with different EESs may result from T-EAS discovery process during a single ACR operation.\n4.\tThe EEC performs ACR launching procedure (as described in clause 8.8.3.4) to the S-EES with the ACR action indicating ACR initiation and the corresponding ACR initiation data (with the need to notify the EAS). The S-EES authorises the request from the EEC. The S-EES decides to execute ACR based on the information received from the EEC, EEC context and/or EAS profile. The S-EES may apply the AF traffic influence with the N6 routing information of the T-EAS in the 3GPP Core Network (if applicable) and sends the ACR Notify message to the S-EAS to initiate ACT between the S-EAS and the T-EAS. If the EEC has not subscribed to receive ACR information notifications for ACR complete events from the S-EES, the EEC subscribes for the notifications as described in clause 8.8.3.5.2.\nPhase I: ACR Detection\n1.\tThe EEC detects that ACR may be required as described in clause 8.8.1. The EEC may detect that ACR may be required for an expected or predicted UE location in the future as described in clause 8.8.1.\nPhase II: ACR Decision\n2.\tThe EEC decides to proceed with required procedures for ACR.\nNOTE 1:\tIf supported, the AC can be involved in the decision. It is out of scope of the present document how the AC is involved.\nPhase III:\tACR Execution\n3.\tThe EEC determines the T-EES by using the provisioned information or performing service provisioning procedure per clause 8.3. When in step 1 the ACR for service continuity planning is triggered, then the Connectivity information and UE Location used in the service provisioning procedure contain the expected Connectivity information and expected UE Location. If the UE is within the service area of the T-EES, upon selecting the T-EES the UE may need to establish a new PDU connection to the target EDN. If EEC registration configuration for the T-EES indicates that EEC registration is required, the EEC performs registration with the selected T-EES as specified in clause 8.4.2.2.2. The EEC performs EAS Discovery with the T-EES per clause 8.5.2.\nWhen in step 1 the ACR for service continuity planning is triggered, and the \"General context holding time\" is included in the replied EAS discovery response, the EEC can make ACR request before it reaches respective T-EAS service area within the time period indicated by the IE.\nNOTE 2:\tSeveral EEC registrations with different EESs may result from T-EAS discovery process during a single ACR operation.\n4.\tThe EEC performs ACR launching procedure (as described in clause 8.8.3.4) to the T-EES with the ACR action indicating ACR initiation and the corresponding ACR initiation data (with the need to notify the EAS). If the received ACR initiation request contains an EEC context ID and the S-EES Endpoint, the T-EES performs an EEC Context Pull relocation (clause 8.9.2.2). The T-EES may apply the AF traffic influence with the N6 routing information of the T-EAS in the 3GPP Core Network (if applicable). Then the T-EES sends the ACR Notify message to the T-EAS. The EEC also subscribes to receive ACR information notifications for ACR complete events from the T-EES, as described in clause 8.8.3.5.2.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.37.2-2: EAS Profile",
                                    "table number": 39,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.37.3\tSolution evaluation",
                            "text_content": "This solution addresses open issue #2, open issue #5, and open issue #6 of KI#3.\nThis solution introduces a \"General Context Holding Time\" IE in the EAS profile which can be determined based on the EASID of the EAS which identifies the type of application context, ECSP policy setting, and other factors such as resource usage. The \"General Context Holding Time\" is the time the EAS holds the application context before the UE reaches the T-EAS service area following an ACR request.\nThe solution allows this \"General Context Holding Time\" to be sent from the EES to the EEC in the EAS discovery response. Therefore, the EEC can make an ACR request before it reaches the respective T-EAS service area when it is predicted or planned to move to the T-EAS service area within the time indicated by the IE. With this, the issue of the determination of the ACR request trigger timing in case of service continuity planning is addressed.\nThe potential impact on the information to communicate within the EEL is only by introducing a \"General Context Holding Time\" IE in the EAS profile. Accordingly, clause 8.8.2.2, clause 8.8.2.3, and clause 8.8.2.6 need to be updated to use the \"General Context Holding Time\" for ACR triggering.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.38\tSolution #38: ACR coordination",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.38.1\tArchitecture enhancements",
                            "text_content": "None\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.38.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #19 on ACR scenario combination.\nMultiple ACR scenarios can be selected and the detection entity can start detecting the need for ACR. In this solution, the decision-making entity (e.g. EEC, EES, EAS) of any selected scenario triggers the ACR. However, once the ACR procedure is triggered, the EES notifies the decision-making entities of other scenario(s) about the start of the ACR. Once the ACR procedure is completed, the EES notifies the decision-making entities of other scenario(s) about the completion of the ACR (success or failure). The decision-making entities of other scenario(s) may avoid triggering another ACR till one ACR procedure is in progress and notification about the completion of the ACR is received.\nThe solution proposes to enhance ACT status subscription procedure as specified in clause 8.8.3.6.2.3 of 3GPP TS 23.558 [2] and ACR information subscription as specified in clause 8.8.3.5.2 of 3GPP TS 23.558 [2] to subscribe for ACR execution start event.\nFurther, the solution proposes to enhance all scenarios specified in clause 8.8.2 of 3GPP TS 23.558 [2] to send notification of start of ACR execution phase as follows:\nPre-condition:\n1)\tMore than one ACR scenarios are selected as specified in solution#19 or solution#35.\nThe figure depicts a 38 GHz ACR coordination system, illustrating the coordination of multiple antennas and radio frequency (RF) chains to ensure efficient communication. The system includes various components such as the base station (BTS), radio frequency (RF) chains, and antennas, all working in unison to provide reliable communication.\nFigure 7.38.2.2-1: ACR coordination\n1)\tThe ACR is triggered by one of the decision making entity (i.e. EAS or EES or EEC) and T-EAS is discovered.\n2a)\tIf EEC or EES has initiated ACR, then the EES sends ACR management event notification (ACT Start) to the S-EAS indicating the start of the ACR execution. The notification message includes ACR identity (ACID, EEC ID (or UE ID), S-EAS endpoint and T-EAS endpoint).\n2b)\tIf S-EAS or EES has initiated ACR, then the EES sends ACR information notification to EEC indicating the start of the ACR execution. The notification message includes ACR identity (ACID, EEC ID (or UE ID), S-EAS endpoint and T-EAS endpoint).\nNOTE:\tACT initiation can be considered as a start of the execution phase.\n3)\tThe ACR procedure is performed as specified in the scenario (in clause 8.8.2 of 3GPP TS 23.558 [2])\nIf concurrent ACR requests happens the EES rejects the additional ACR requests.\nEnhancements to clause 8.8.3.5.3 ACR information notification procedure\nStep 2 of the procedure will be modified as follows (in bold)\n2.\tThe EES sends an ACR information notification to the EEC with the ACR information determined in step 1. The ACR information notification may include ACID to indicate the application context relocation of the AC is complete. If the S-EES has received the successful EEC Context Push response from T-EES, along with registration ID and the registration expiration time in the EEC Context Push relocation procedure, then the ACR information notification towards EEC also includes the registration ID and registration expiration time under EEC context relocation status (for successful status). Upon receiving the target information notification to indicate about start of the ACR execution, the EEC prevents triggering a second ACR execution for the same identity (ACID, EEC ID (or UE ID), S-EAS endpoint and T-EAS endpoint) until the current ACR execution is completed.\n\nEnhancements to clause 8.6.3.2.3 Notify (for ACR management event notification)\nStep 1-d will be modified as follows (bold):\nd.\tIf \"ACT start/stop\" event is subscribed, during the ACR launch if the EEC indicates the need to notify the EAS in the ACR request as described in clause 8.8.3.4, the EES shall send notification to the EAS to inform it about the need to start or stop the ACT to or from another EAS. The notification message includes ACR identity (ACID, EEC ID (or UE ID), S-EAS endpoint and T-EAS endpoint).\n2.\tThe EES sends ACR management event notification to the EAS. The EES includes the ACR management event notification information of the UE(s) and optionally the timestamp. If the event triggering the notification is DNAI change, the timestamp can be included to indicate the age of the user plane path management event notification information. The EES may only provide part of information included in the user plane path management event notification from 3GPP network (e.g. target DNAI). If the EAS had provided \"Indication of EAS acknowledgement\", the EES waits for acknowledgement from the EAS before it sends AF acknowledgement to the 3GPP core network.\nIf the event is \"ACT start/stop\", the notification shall include the endpoint address of the other EAS and the UE ID. Upon receiving the notification about the start of the ACR execution with \"ACT start\" event, The S-EAS prevents triggering a second ACR execution for the same identity (ACID, EEC ID (or UE ID), S-EAS endpoint and T-EAS endpoint) until the current ACR execution is completed.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.38.3\tSolution evaluation",
                            "text_content": "The solution addresses Key issue #19. The solution proposes to coordinate among decision making entities to make sure single ACR remains in execution phase while allowing multiple entities to detect ACR for different scenarios. The solution proposes modify existing ACR scenarios to utilize existing event notifications to S-EAS or EEC at start of the execution phase. The solution also proposes to modify ACR information notification and ACR management event notification procedures. The solution is a viable solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.39\tSolution #39: EAS selection synchronization at registration",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.39.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.39.2\tSolution description",
                            "text_content": "The following solution addresses Key Issue #8.\nIn this solution, the EES leverages pre-existent EAS information at the EEC to enable EAS selection and the synchronization/ alignement of the information about selected EAS(s) between the EEC and EES. This information is provided in the EEC registration request and includes the AC Profiles and an optional list of pre-configured EAS endpoints (e.g. for constrained IoT devices).\nThe solution also enables EES to use this information to make a determination of the EASs available for service session communications as soon as the EDN capabilities are available after registration. The EES may then determine whether dynamic EAS instantiation triggering should be performd. The EEC is then provided with  EAS information in the registration response. With this solution, ACs can establish communications with the EASs immediately after an initial registration.\nThe following text captures the solution by describing the neccesary 3GPP TS 23.558 changes (relative to v17.1.0 in bold font)  as shown below:\n* * * Enhancement based on TS 23.558 v. 17.4.0   * * * *\n8.2.2\t\tAC Profile\nAn AC Profile includes information about AC used to determine services and service characteristics required.\nTable 8.2.2-1: AC Profile\n\nEditor's note: It is FFS whether more information other than Selected EAS endpoint is required and whether a new information table can used to represent it instead of AC profile.\n* * * Enhancement based on TS 23.558 v. 17.4.0   * * * *\n8.4.2.2.2\tEEC registration\nFigure 8.4.2.2.2-1 illustrates EEC registration procedure.\nPre-conditions:\n1.\tThe EEC is authorized to access the EES for the purpose of performing registration and has received relevant security credentials as specified in clause 8.11; and\n2.\tThe EEC has received service provisioning information from the ECS, including information for accessing the EES.\nThe figure depicts the EEC registration procedure, which is a crucial step in the network's operation. It illustrates the steps taken by the network to ensure that all devices are correctly registered and functioning. The figure shows the various components involved in the registration process, such as the EEC (Energy-Efficient Communication) server, the EEC client, and the network's management system. The figure also highlights the importance of proper network management and the need for regular updates to ensure the network's reliability and efficiency.\nFigure 8.4.2.2.2-1: EEC registration procedure\n1.\tThe EEC sends EEC registration request to the EES. The request from the client includes the security credentials received after successful authorization for edge computing services and may include a proposed expiration time. The request also optionally includes information indicating to the EES how the EEC expects to use the services of the EES.\nIf the EEC is moving to this EES from the purview of another EES, called S-EES, the request from the EEC may include the identity and endpoint of the S-EES and an EEC context ID that was provided by the S-EES to maintain continuity of the EEC context and to authorize EEC context relocation. If the EEC registration is being performed as part of ACR, the EEC shall not include the S-EES endpoint and the EEC context ID.\n2.\tUpon receiving the request from the EEC, the EES validates the registration request and verifies the security credentials. The EES further determines whether the requirements that were indicated in the AC Profile(s) can be fulfilled e.g. without failing to meet the requirements of the already registered EECs, and reserves corresponding resources (e.g. for EASs).\nIf the EEC provides in the registration request the EAS selection request indicator and based on EES local policies, the EES selects EASs providing the capabilities required by the AC Profile(s), reserves the corresponding resources and provides the information to the EEC in the registration response. If an AC Profile includes the \"Selected EAS Endpoint\" IE, the AC Profile is ignored in the EAS selection process.\nIf the EEC provides in the registration request a UE type, the EES may use this information to apply UE-type-specific local policies.\nNOTE 1: This functionality is to be aligned with how a \"constrained device\" is identified by the EES. The alignment is to be determined in the normative phase considering other solutions.\nNOTE 2: Without any indication from UE (either EAS selection request indication or UE type), the EES handling is as per R17 procedure.\n3.\tUpon successful validation of the request, if the received EEC registration request contains an EEC context ID and a S-EES Endpoint, the EES performs a EEC Context Pull relocation (clause 8.9.2.2) from the S-EES. The source and target EES perform EEC Context handling as detailed in clause 8.9.1.\nNOTE 3:\tOnly a single EEC Context ID may be provided in the EEC registration request.\nNOTE 4:\tIn this version of specification, each registration procedure relocates a single EEC context.\nNOTE 5:\tStep 3 is executed when EEC determines to change its connection from S-EES to T-EES and ACR is not required.\nIf the EEC registration request fails after the EEC Context Pull relocation, e.g. the EES cannot reserve the necessary resources while meeting the capability requirements of the existing registered EECs, the EES shall determine the EEC Context information stale and send a failure response with a corresponding cause.\n4.\tThe EES sends a successful EEC registration response, which includes the registration ID and may include a newly assigned EEC context ID. If step 3 was executed, the EEC registration response also includes EEC context retrieval result. The EEC stores the new EEC context ID and uses it if and when it registers with another EES. The EES may also provide an expiration time to indicate to the EEC when the registration will automatically expire. To maintain the registration, the EEC shall send a registration update request prior to the expiration. If a registration update request is not received prior to the expiration time, the EES shall treat the EEC as implicitly de-registered.\nIf the EEC context relocation status indicates that the EEC context relocation was not successful, then the EEC performs the required EDGE-1 subscriptions at the T-EES.\n8.4.2.2.3\tEEC registration update\nFigure 8.4.2.2.3-1 illustrates EEC registration update procedure.\nPre-conditions:\n1.\tEEC has already registered with the EES.\nThe figure depicts the EEC registration update procedure, which is a crucial step in the network's operation. It illustrates the steps taken by the network to update the EEC (Energy Efficiency Certificate) status of a device. The figure shows the network's control center, the device, and the EEC registration server, with the device's EEC status displayed on the screen. The update process involves sending a request to the EEC registration server, which then processes the request and updates the device's EEC status accordingly. This ensures that the device is operating efficiently and is compliant with the network's energy consumption regulations.\nFigure 8.4.2.2.3-1: EEC registration update procedure\n1.\tThe EEC sends EEC registration update request to the EES. The request from the client includes the security credentials received after successful authorization for edge computing services and may include a proposed expiration time and AC profile(s) parameters, including new or updated selected EAS information.\n2.\tUpon receiving the request from the EEC, the EES validates the registration update request and verifies the security credentials.\n3.\tUpon successful validation of the request, the EES sends a successful registration update response, which may include updated expiration time to indicate to the EEC when the updated registration will automatically expire. To maintain the registration, the EEC shall send a registration update request prior to the expiration time. If a registration update request is not received prior to the expiration time, the EES shall treat the EEC as implicitly de-registered.\n* * * Enhancement based on TS 23.558 v. 17.4.0   * * * *\n8.4.2.3.2\tEEC registration request\nTable 8.4.2.3.2-1 describes information elements in the EEC registration request from the EEC to the EES.\nTable 8.4.2.3.2-1: EEC registration request\n\n8.4.2.3.3\tEEC registration response\nTable 8.4.2.3.3-1 describes information elements in the EEC registration response from the EES to the EEC.\nTable 8.4.2.3.3-1: EEC registration response\n\n* * *  End of  TS 23.558 enhancements   * * * *\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 8.2.2-1: AC Profile",
                                    "table number": 40,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 8.4.2.3.2-1: EEC registration request",
                                    "table number": 41,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 8.4.2.3.3-1: EEC registration response",
                                    "table number": 42,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.39.3\tSolution evaluation",
                            "text_content": "This solution addresses all KI#8 issues by enabling EECs to obtain EES selection assistance or to leverage pre-existent EAS information at the EEC and top indicate its EAS selection via EEC regitrsation update. In turn, service session communications can be enabled as soon as the EDN capabilities are available after registration and the EES is better enabled to perform optimal EAS instantiation after registration, if needed.\nIn addition, the solution addresses KI#15 by minimizing EDGE-1 interactions for EECs for which EAS selection assistance is provided by EEL.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.40\tSolution #40: EAS instantiation status provisioned by ECS",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.40.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.40.2\tSolution description",
                            "text_content": "The following solution corresponds to key issue #9 on enhancements of dynamic EAS instantiation triggering. This solution helps ensure that the proper number of EAS instances are instantiated in the EDN and the solution addresses what information may be utilized by an EES to decide to trigger dynamic EAS instantiation.\nIn this solution, the EES is configured by the Management Service (MnS) with information on EAS(s) that can be dynamically instantiated in an EDN; this list provides the information elements needed for requesting EAS instantiation.\nThis solution updates the EES profile provided to the ECS in the EES registration request and provided to the EEC in the service provisioning response. The EES profile provides the EASID(s) available at the EES and for each EASID an EAS instantiation status indicating whether the EES has the EAS(es) instantiated or instantiable, but not yet instantiated. This information can be used by the EEC when choosing the EES(es) for performing EAS discovery.\nThe solution then relies on existing Rel-17 EAS discovery request sent to the selected EES to trigger EAS instantiation if needed. The benefit of this solution is that the EEC can learn the EAS instantiation status at service provisioning time which may influence the EES selection. Rel-17 EAS instantiation methodology is unchanged.\nThis procedure presents a high-level overview of Solution #40.\nFigure 7 provides a high-level overview of solution #40, detailing the components and processes involved in the solution. The figure illustrates the various stages of the solution, from the initial planning and design phase to the implementation and testing stages. The solution is designed to address the challenges faced in the field of telecommunication, such as network congestion and latency issues. The figure includes key components like the network architecture, the use of optical fibers, and the implementation of optical line terminals (OLTs). The figure also highlights the importance of redundancy and failover mechanisms to ensure the reliability of the solution. Overall, Figure 7 provides a comprehensive overview of solution #40, highlighting its components, processes, and the challenges it aims to address in the telecommunication field.\nFigure 7.40.2.2-1: High-level overview of solution #40\n1.\tOn initial deployment, the Management Service (MnS) is requested to perform EES deployment and can additionally be requested to perform initial EAS deployment. Details on requesting EES and EAS instantiation is specified in 3GPP TS 28.538 [20].\nTo support the dynamic EAS instantiation functionality, the EES needs a list of EAS that it is allowed to dynamically instantiate, and corresponding EAS information elements needed for requesting EAS instantiation.\nNOTE 1:\tHow the dynamic EAS instantiation information is made available to the EES is implementation specific in Rel-17 and in the scope of SA5 for Rel-18.\n2.\tThe EES registers to the ECS following the procedures described in 3GPP TS 23.558 [2] clause 8.4.4. The EES profile included in the EES registration request may include the EAS instantiation status of each EASIDs, indicating whether each EASID available at the EES is instantiated or instantiable, but not yet instantiated.\n3.\tThe EEC performs the service provisioning following the procedures described in 3GPP TS 23.558 [2] clause 8.3.3.\n4.\tWhen the AC requests application server access, if the EES profile(s) include EAS instantiation status, the EEC can select one or more EES(s) for EAS discovery considering the EAS instantiation status. The EAS discovery procedure is unchanged from 3GPP TS 23.558 [2] clause 8.5. To mitigate the waste of EDN resources, the EEC can select one EES for EAS discovery considering the EAS instantiation status.\nNOTE 2:\tThe EEC can select one EES from the EES list, if the EAS instantiation status corresponding to the EASID requested by AC/EEC is instantiable (but not yet instantiated)\nNOTE 3:\tThe EEC may prefer to select EES(s) for EAS discovery with EAS already instantiated over other EES(s) with uninstantiated EAS, based on EAS instantiation status per EAS ID.\n5.\tThe EAS discovery request triggers the EES to verify if the instantiation of the EAS indicated in the request is required per 3GPP TS 23.558 [2] clause 8.12.1.\n6.  If the EES determines that EAS instantiation is needed, the EES may request the MnS to perform EAS instantiation for the selected EAS. Upon reception of the EAS instantiation request, MnS verifies EAS instantiation requirements and performs EAS instantiation as specified in 3GPP TS 28.538 [20].\nUpon instantiation of the EAS by the MnS, the EES is informed by MnS of the result of EAS instantiation.\nNOTE 3:\tThe instantiated EAS can be discovered by other EECs and used by other ACs.\n7.  Step 7 happens only if EAS instantiation triggered in step 6 was successful. At start-up, the newly instantiated EAS registers to the EES following procedures described in 3GPP TS 23.558 [2] clause 8.4.3.\n8.\tUsing the EAS instantiation result received from the MnS in step 6 and the registration information provided at EAS registration in step 7; the EES sends the EAS discovery response to the EEC to provide EAS connectivity information.\nIf the EAS instantiation result received from the MnS in step 6 indicates failure, the EES shall reject the EAS discovery request and respond with an appropriate failure cause.\n9.\tIf the EAS discovery succeeded, the EEC performs EAS selection and informs the AC of the selected EAS; otherwise, the EEC may retry the EAS discovery taking into account the received failure cause.\n10.\tThe AC accesses the selected EAS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.40.3\tSolution evaluation",
                            "text_content": "Solution evaluation of Solution #40:\na)\tEnables the EES to inform the ECS at EES registration about available EASID(s), including the instantiated and instantiable EAS(es). During service provisioning, this allows the EEC to retrieve the EAS instantiation status at EES(es).\nb)\tEnables an EEC to use the EAS instantiation status when selecting EES(es) prior to performing EAS discovery, this allows to keep instantiated EAS to a minimum.\nc)\tEnables the EES to evaluate if EAS instantiation is needed upon receiving the EAS discovery request. This allows the EES to evaluate if an EAS has become available, and otherwise trigger EAS instantiation only if needed.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.41\tSolution #41: Interaction with ADAES for edge load analytics",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.41.1\tArchitecture enhancements",
                            "text_content": "None\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.41.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #24 on SEAL capability access for EEL support.\nFS_ADAES (TR 23.700-36) is discussing edge load analytics service to provide insight on the operation and performance of an EDN and in particular statistics or prediction on parameters related to the EAS / EES load for one or more EAS/EES.\nSuch analytics can improve edge support services by allowing the pro-active edge service operation changes to deal with possible edge overload scenarios. For example, this can trigger EAS migration to a different EDN / central DN, or pro-active EAS reselection for a target UE or group of UEs.\nSome EEL services may benefit from using ADAES analytics related to the EDN or EAS service load. In TS 23.558, one of the conditions for service continuity is the EAS/EDN overload situations. In this direction, edge load analytics (predictions, stats) may help pro-actively trigger actions to prevent loss of service due to expected overload.\nPre-condition:\n1)\tSEAL ADAES services are available at the edge data network and accessible to the EES.\nFigure 7 illustrates the interaction between the 41.2.2-1 edge load analytics system and the ADAES (Adaptive Data Analytics for Edge Services) for edge load analytics. The system is designed to provide real-time insights into the performance of edge services, enabling efficient resource allocation and optimization. ADAES is a novel approach that uses machine learning algorithms to analyze the data collected from edge devices, enabling the system to adapt to changing network conditions and optimize resource allocation.\nFigure 7.41.2.2-1 interaction with ADAES for edge load analytics\n1)\tThe EES subscribes to ADAES (as described in TR 23.700-36 steps 1, 2 in procedure in clause 6.4.1).\n2)  The ADAES derives analytics for the edge load using also offline stats from A-ADRF and edge platform load data (as indicated in TR 23.700-36 6.4.1 step 9) and sends the derived analytics output to the requestor EES (as indicated in TR 23.700-36 6.4.1 step 10).\n3) The EES can optionally provide the edge load analytics related to the EAS load.\n4) The EES or EAS generates a trigger event indicating a predicted or expected EES/EAS overload and a possible action which can be the ACR detection. Such step can be either performed at EAS or EES depending on the service continuity scenario (as captured in clauses 8.8.2.4 and 8.8.2.5 of TS 23.558). It shall be noted that the entity (EAS or EES) that indicates EAS or EES expected overload based on the received load analytics shall be responsible for triggering the action (e.g. ACRs).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.41.3\tSolution evaluation",
                            "text_content": "This solution provides the procedures to utilize ADAES for enhancing EEL operations based on edge load analytics. It addresses the key issue #24 and the solution feasibility is dependent on the conclusion of the edge load analytics capability in FS_ADAES (TR 23.700-36) and its specification in SEAL.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.42\tSolution #42: EAS selection and instantiation in EES",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.42.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.42.2\tSolution description",
                            "text_content": "This solution is based on solution #18, with UE type (e.g. constraint device), the EES triggers EAS selection and instantiation for the AC.\nThis solution also uses the same principle of instantiable EAS configuration in the EES (provisioned by MnS) as in solution #33.\nBelow procedure presents a high-level overview of this solution.\nFigure 7 provides a high-level overview of solution #42, illustrating the components and processes involved in the solution. The figure includes a diagram of the overall system architecture, a flowchart of the solution's steps, and a list of key components and their functions. The solution is designed to improve the efficiency and effectiveness of a particular task or process, and it is intended to be implemented in a specific context or environment.\nFigure 7.42.2-1: High-level overview of solution #42\n1-3.\tSame as solution #33, procedure part step 1 to 3.\n4.\tSame as solution #18, step 2 in procedure part.\n5.\tEES selects an appropriate EAS from the instantiable list. If there is already instantiated EAS in EES satisfying AC requirement, EES proceeds with step 8.\n6-7.\tSame as solution #33, procedure part step 7 to 8.\n8.\tSame as solution #18, step 3 in procedure part. In case of EAS instantiation failure or no matched instantiable EAS can be found, the EEC repeats step 4 with another EES.\n9.\tAC connects to the selected EAS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.42.3\tSolution evaluation",
                            "text_content": "During the EAS discovery, the EES selects and requests MnS to instantiate an EAS based on the following info:\n-\tInstantiable EAS information provisioned by MnS;\n-\tUE type (e.g. constraint device) sent from the EEC.; and\n-\tAC requirement.\nThis solution improves the dynamic EAS instantiation and addresses open issues in KI #9.\nNOTE:\tThis solution utitlizes the UE type as described in solution #18 and the EAS instantiation is done during EAS discovery.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.43\tSolution #43: EAS discovery for Edge node sharing",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.43.1\tArchitecture enhancements",
                            "text_content": "This solution uses the architecture option specified in clause 6.10.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.43.2\tSolution description",
                            "text_content": "As specified in clause 3.5.4.3.3 of GSMA OPG.02 [4], Edge node sharing is a scenario wherein an OP, when serving the UNI requests originating from (its own) UCs (i.e. EEC in EDGEAPP term), decides to provide the application from the Edge nodes of a partner OP.\nScenario is that the EEC in UE does not have access directly to enabler/configuration server in the OP-A (e.g. the EEC is not authorized to access ECS and EES in OP-A, or there is no connectivity between the EEC and OP-A), the OP-B has SLA with OP-A and servers in OP-B can serve the EEC directly (e.g. the EEC has connectivity with OP-B and is authorized to access ECS and EES in OP-B). For the AC in UE, it can access EAS(s) deployed in OP-A.\nAssumption is that OP-B’s EESs are deployed everywhere in a region (possibly utilizing/leasing the IaaS offered by partners) and the EAS can be shared to both OP A and OP B.\nEditor's note:\tThe scenario assumption in this solution needs to be verified with GSMA before considering this solution in conclusion.\nFor the case where there are several partner EDNs coverage for the current UE location and the contracted OP for the EEC cannot provide a desired EAS in its EDN, this solution offers an option so that the EEC contracted OP can use its partner’s OP to discover the desired EAS in the partner’s EDN for the UE.\nIt is assumed that EAS deployed in OP-A is shared with OP-B (i.e. ECS-ER of OP-A can share EAS information and associated EES information with ECS-ER of OP-B) in this clause.\nSince the application instance is deployed in the partner’s data network, when the leading OP (OP-B) receives a request from the UC, the leading OP (OP-B) needs to contact the partner OP (OP-A) to discover the application instance. In EDGEAPP architecture, the EES, ECS and ECS-ER are entities within the OP. This clause provides ways for the leading OP to discover adequate EES(s) of the partner OP for subsequent communication with the partner OP’s EES.\nThe figure depicts a network diagram with various components, including ECS, ECS-ER, and a publish/unpublish application information mechanism. The diagram illustrates the communication between ECS and ECS-ER, with ECS-ER being responsible for publishing and unpublishing application information. The figure also shows the ECS-ER's role in managing the application information, ensuring that it is published and unpublished in a timely manner.\nFigure 7.43.2.2-1: publish and unpublish application information between ECS via ECS-ER\nIn step 1, the EES of OP-A is registered in ECS of OP-A over EDGE-6 reference point. Based on the information sharing policy in the ECS of OP-A, the ECS of OP-A sends Application info publish request with a list of EAS IDs and optionally EES information of OP-A in step 2. The EES information of OP-A includes EES endpoint and may include EES provider ID, EES service area and/or EES Service continuity support. Then ECS of OP-B stores the received information and responds with Application info publish response in step 3. Step 2 and 3 are sent via corresponding ECS-ERs (ECS-ER (OP-A) and ECS-ER (OP-B)).\nThe ECS of OP-A may receive EES registration update from the EES of OP-A in step 4, then the ECS of OP-A updates the previously published information (EAS ID list and/or EES info of OP-A) towards the ECS of OP-B in step 5. The ECS of OP-B updates the previously stored information and responds with Application info publish update response in step 6. Step 5 and 6 are sent via corresponding ECS-ERs (ECS-ER (OP-A) and ECS-ER (OP-B)).\nThe ECS of OP-A may receive EES de-registration from the EES of OP-A in step 7, then the ECS of OP-A requests to remove all previously published information towards the ECS of OP-B in step 8. The ECS of OP-B removes all previously stored information and responds with Application info unpublish response in step 9. Step 8 and 9 are sent via corresponding ECS-ERs (ECS-ER (OP-A) and ECS-ER (OP-B)).\nNOTE 1:\tThe application information published/shared to OP-B can also be done in a notification message under subscribe-notify communication model.\nThe figure depicts a network architecture with a focus on the Fetch application information from partner functionality. It illustrates the communication between the network and the application, with the application requesting information from the network. The figure includes various components such as the network interface, the application interface, and the network interface controller (NIC). The figure also shows the network's response to the application's request, with the network interface controller (NIC) sending the application information to the application interface. The figure is important for understanding the communication flow and the network's response to the application's request.\nFigure 7.43.2.2-2: Fetch application information from partner\nThe ECS (OP-B) may fetch application information from its partner OP (e.g. OP-A) via corresponding ECS-ERs (ECS-ER (OP-A) and ECS-ER (OP-B)) as shown in figure 7.43.2.2-2, periodically. In such a fetch operation, the fetched information includes a list of EAS IDs and EES information of OP-A.\nNOTE 2:\tIf the ECS (OP-B) does not receive EES information of OP-A from the published/notified application information, the ECS (OP-B) can also fetch it from the ECS (OP-A) via the fetch operation.\nNOTE 3:\tProcedures in this clause is applicable when leading OP’s OAM provisioned application sharing info (EAS IDs and EES info) of OP partners is not available in ECS.\nNOTE 4:\tECS (OP-B) can also subscribe to application info changes from ECS (OP-A).\nNOTE 5:\tFor message name \"application info publish\" and \"Fetch application info\", whether alternate name should be used can be decided in normative work.\nIt is assumed that EAS deployed in OP-A is shared with OP-B (i.e. EES of OP-A can share EAS information with EES of OP-B) in this clause.\nThis procedure is applicable for EAS discovery without published application information between ECSs as described in clause 7.43.2.2.\nThe figure depicts a schematic of an EAS (Edge Application Security) discovery process for edge node sharing without the need for published application information. It illustrates the steps involved in identifying and securing edge nodes, including the use of EAS technology. The figure shows the various components and their connections, highlighting the importance of EAS in ensuring the security of edge nodes in a network.\nFigure 7.43.2.3-1: EAS discovery for edge node sharing, without published application info\nIn step 0, the EAS may be registered in EES of OP-A over EDGE-3 reference point.\nNOTE 0:\tThe EES (OP-A) also registers into the ECS (OP-A) via EDGE-6 reference point, which is not shown for simplicity.\nIn step 1, the service provisioning request happens over EDGE-4 reference point.\nIn step 2, the ECS (OP-B) cannot find any desired EAS ID in the EES profile being registered so it determines to use edge service from its partner OP-A.\nIn step 3, based on SLA between OPs, the T-EES discovery procedure happens as described in step 3 of solution#5 via EDGE-10 reference point.\nNOTE 1:\tThe ECS (OP-B) can have SLA with other multiple OPs and need to repeat step 3 with more than one partner OP in order to discover T-EES.\nIn step 4, the service provisioning response includes the EES (OP-A) endpoint and the ECS (OP-B) determined EES (OP-B) endpoint. The endpoint of EES (OP-B) is determined based on SLA with OP-A so that any EES (OP-B) can be authorized by the EES (OP-A). The endpoint of EES (OP-A) is sent by EES in a way that is transparent to EEC.\nIn step 5, the EEC sends EAS discovery request to EES (OP-B) over EDGE-1 reference point and include the endpoint of EES (OP-A) in the request. The endpoint of EES (OP-A) is transferred between the ECS (OP-B) and the EES (OP-B) transparently to the EEC.\nNOTE 2:\tHow the EES (OP-A) endpoint is transferred in a transparent way to EEC between the ECS (OP-B) and the EES (OP-B) is in the scope of SA3.\nIn step 6, the EES (OP-B) validates the edge service SLA and sends EAS discovery request over EDGE-9 reference point to the EES (OP-A).\nIn step 7, the EES (OP-A) validates the edge service SLA and returns EAS discovery response including the discovered candidate EAS(s) to the EES (OP-B).\nIn step 8, the EEC receives the EAS discovery response sent by the EES (OP-B). The EEC may select an EAS for the AC.\nIt is assumed that EAS deployed in OP-A is shared with OP-B (i.e. EES of OP-A can share EAS information with EES of OP-B) in this clause.\nThis procedure is applicable for EAS discovery with published application information between ECSs as described in clause 7.43.2.2.\nThe figure depicts a schematic of an EAS (Edge Application Service) discovery process for edge node sharing, with published application information. The figure includes a network diagram, a flow chart, and a list of published application details.\nFigure 7.43.2.4-1: EAS discovery for edge node sharing, with published application info\nIn step 0, the EAS may be registered in EES of OP-A over EDGE-3 reference point.\nNOTE 1:\tThe EES (OP-A) also registers into the ECS (OP-A) via EDGE-6 reference point, which is not shown for simplicity.\nIn step 1, the service provisioning request happens over EDGE-4 reference point.\nIn step 2, the ECS (OP-B) cannot find any desired EAS ID in the EES profile being registered so it determines to use edge node sharing service from its partner OP-A based on its partner’s published application information.\nNOTE 2:\tStep 1 to 3 are optional since EEC may cache the result from the initial service provisioning as described in Rel-17.\nIn step 3, the service provisioning response includes the ECS (OP-B) determined EES (OP-B) endpoint. The endpoint of EES (OP-B) is determined based on SLA with OP-A so that any EES (OP-B) can be authorized by the EES (OP-A).\nIn step 4, the EEC sends EAS discovery request to EES (OP-B) over EDGE-1 reference point.\nIn step 5, since step 4 EAS discovery request doesn’t include any additional information about the determination of using edge node sharing in step 2, the EES (OP-B) executes the Rel-17 handling for EAS discovery but cannot find any EAS profile being registered so it determines to use edge node sharing service based on edge service SLA.\nIn step 6, the EES (OP-B) sends Retrieve EES request over EDGE-6 reference point to the ECS (OP-B). The request may include an edge node sharing flag indicating edge node sharing is requested so that the ECS (OP-B) can skip checking T-EES(s) registered in the ECS (OP-B).\nFor the received EAS ID, since the ECS (OP-B) has EES information that was published by partner OP, the ECS (OP-B) discovers T-EES (i.e. EES(s) from partner) in step 7 and returns discovered EES(s) of OP-A in the Retrieve EES response to the ECS (OP-B) in step 8.\nNOTE 3:\tThe published information shared by the OP partner can be provisioned by OAM of the leading OP.\nIn step 9 and 10, the EAS discovery procedure happens over EDGE-9 reference point, which is triggered by the EES (OP-B) and the EES (OP-B) receives the discovered candidate EAS(s).\nNOTE 4:\tThe OP-B can have SLA with other multiple OPs so that step 9 can be executed with more than one partner OP in order to discover candidate EAS(s).\nFinally, the EEC receives the EAS discovery response sent by the EES (OP-B) in step 11. The EEC may select an EAS for the AC.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.43.3\tSolution evaluation",
                            "text_content": "This solution addresses KI#22 for the EAS discovery in edge node sharing case.\nIf the application information is not shared between the ECS of two OPs having partnership, during service provisioning, the partner (i.e. OP-A) EES is provided then EEC triggers EAS discovery towards the EES of the contracted OP (i.e. OP-B) in order to obtain EAS information. Any partner information is transparent to the EEC so that the EEC is not aware of the presence of Partner OP (i.e. OP-A).\nIf the application information is shared between the ECS of two OPs having partnership, during service provisioning, the EEC obtains an EES (OP-B) from its OP (i.e. OP-B) and triggers EAS discovery toward the EES (OP-B), then the EES (OP-B) further obtains EESs of a partner OP (OP-A) from its registered ECS (OP-B), continues EAS discovery towards partner OP and returns the discovered EASs to the EEC.\nThis solution also addresses KI#6 for Edge services support across ECSPs, specifically the open issue about how the ECS can discover a T-EES having SLA with S-EES based on the federation agreements between ECSPs before EDGE-9 interaction.\nEditor's note:\tFurther updates to solution and solution evaluation may be needed which is FFS, e.g. whether ECS-ER is needed to convey the shared application info and if needed whether ECS-ER communication between OPs can be mapped to E/WBI in GSMA OPG.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.44\tSolution #44: EAS discovery for Edge node sharing",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.44.1\tArchitecture enhancements",
                            "text_content": "This solution uses the architecture option specified in clause 6.12.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.44.2\tSolution description",
                            "text_content": "This procedure works for a solution assumption, where EES of OP-B is available in the region however the required application is not available/registered with OP-B. In such case, the EES (OP-B) interacts with EES (OP-A) where the application is deployed and shared. The EES (OP-B) provides EASID and EAS Geographical Service) of the discovered EAS to EEC. The EAS can be shared to both OP A and OP B.\nEditor's note:\tThe scenario assumption in this solution needs to be verified with GSMA before considering this solution in conclusion.\nSince the application instance is deployed in the partner’s data network, when the leading OP (OP-B) receives a request from the UC, the leading OP (OP-B) needs to contact the partner OP (OP-A) to discover the application. In EDGEAPP architecture, the EES and ECS are entities within the OP. This clause provides ways for the leading OP to discover EAS of the partner OP for subsequent communication.\n\nThe figure depicts a network diagram with various components, including ECS (Enterprise Communications System), ECS-1, ECS-2, and ECS-3, which are responsible for publishing and unpublishing application information between them. The diagram illustrates the communication paths and the flow of data between the different ECS nodes.\nFigure 7.44.2.2-1: publish and unpublish application information between ECS\n0)\tOnce EAS(s) are instantiated in OP-B, the EAS(s) are registered with EES (of OP-B). Upon EAS registration, the EES determines whether the registered EAS is to be shared with other OP(s) or not.\n1)\tBased on service level agreement between ECSP-A and ECSP-B if EAS is shared to ECSP-A and also based on EAS registration status, the EES (of OP-B) sends registered EAS information publish or unpublish request to an Edge repository (designated ECS of OP-B). The request includes the registered and allowed EAS for sharing between ECSP-1 and ECSP-2, EASID and EAS Geographical Service.\n2)\tThe Edge repository checks whether EES is authorized to publish or unpublish registered EAS list or not based on service level agreement.\n3)\tIf authorized, the Edge repository stores the EAS information and sends registered EAS information publish or unpublish response.\nEditor's note:\tIt is FFS whether registered EAS publish should to be done by EES or ECS to ECS-ER.\nEditor's note:\tComparison/alignment of ECS-ER’s definition with the MEC Federator (MEF) and the interface required between the ECS-ERs with ETSI MEC (e.g. ETSI MEC GS 040) and GSMA OPG’s PRD is FFS.\nThe figure depicts a network diagram with various components, including ECS (Enterprise Communications Service), which is responsible for publishing and unpublishing application information between different systems. The diagram illustrates the flow of data, with ECS at the center, and other components such as ECS-B (Business Communications Service), ECS-C (Consumer Communications Service), and ECS-D (Data Communications Service) connected to it. The figure also shows the communication paths between different systems, with the ECS-B and ECS-C components connecting to the ECS-D, which is responsible for data communication.\nFigure 7.44.2.2-2: publish and unpublish application information between ECS\n1)\tBased on service level agreement between ECSP-1 and ECSP-2, the Edge repository of OP-A (i.e. designated ECS of OP-A) sends subscription request to receive registered EAS information (including service area) to Edge repository of OP-B (i.e. designated ECS of OP-B). The request includes required parameters like ECSP identifier, ECS identifier and security parameters.\n2)\tUpon receiving the request from Edge repository (of OP-A), the Edge repository (of OP-B) checks whether Edge repository (of OP-A) is authorized to receive registered EAS list or not based on service level agreement.\n3)\tThe Edge repository (of OP-B) sends subscription response – which indicates result of the subscription (success or failure) and subscription identity (if the result is success).\n4)\tThe list of registered and allowed EAS is changed on the Edge repository (of OP-B) – that is either new EAS is registered or EAS registration is updated or EAS is deregistered or new EAS is published or already published EAS is unpublished.\n5)\tThe Edge repository (of OP-B) sends notification to the Edge repository (of OP-A). The notification includes the registered and allowed EAS for edge node sharing service between ECSP-1 and ECSP-2, EASID and EAS Geographical Service. Upon receiving the notification, the Edge repository (of OP-A) stores the information to be used in other procedures (for EAS discovery or get registered EAS information request).\nThe figure depicts a registration process for Emergency Alert System (EAS) information, showing the steps involved in obtaining and verifying the information. The figure includes a registration form, a checklist, and a confirmation page, all of which are essential for ensuring the accuracy and reliability of the EAS information.\nFigure 7.44.2.2-3: Getting registered EAS information\nThe ECS (OP-A) may fetch application information from its partner OP (e.g. OP-B) as shown in figure 7.44.2.2-3, periodically. In such a fetch operation, the response from ECS-ER (of OP-B) includes a list of EAS IDs (which are registered within OP-A and shared to OP-B) and EES information of OP-B.\nNOTE 2:\tIf the ECS (OP-B) does not receive EES information of OP-A from the published/notified application information, the ECS (OP-B) can also fetch it from the ECS (OP-A) via the fetch operation.\nNOTE 3:\tProcedures in this clause is applicable when leading OP’s OAM provisioned application sharing info (EAS IDs and EES info) of OP partners is not available in ECS.\n\nFigure 7.44.2.3-1 illustrates the procedure for EAS discovery for Edge Node Sharing scenario, where the EES-B requests list of all registered EASs from partner OP’s EES-A or perform EAS discovery based on the discovery filters provided by the EEC.\nPre-conditions:\n1.\tECSP-1 and ECSP-2 have a service level agreement to share edge services.\n\nThe figure depicts a schematic representation of an EAS (Edge Access System) discovery process for edge node sharing in a 4G/5G network. It illustrates the steps involved in identifying and identifying the edge nodes, which are the devices that provide access to the network. The figure shows the various components of the EAS, including the edge nodes, the access points (APs), and the network elements (NE). The figure also includes a legend to help understand the different symbols and their meanings. Overall, the figure provides a clear and concise visual representation of the EAS discovery process, making it easier to understand and implement in a real-world network.\nFigure 7.44.2.3-1: EAS discovery for edge node sharing\n1)\tThe EAS may be registered in EES of OP-A over EDGE-3 reference point. The EAS may be dynamically instantiated during EAS discovery processing on the EES (OP-A) and then registered in the EES (OP-A).\nNOTE 1:\tThe EES (OP-A) also registers into the ECS (OP-A) via EDGE-6 reference point, which is not shown for simplicity.\n2)\tif required, EEC performs service provisioning from ECS-B as specified in 3GPP TS 23.558 [2].\nEditor's note: If service provisioning procedure is performed, how ECS finds EES, as there may not be desired EAS registered at EES, is FFS.\n3)\tif required, EEC performs registration to EES-B as specified in 3GPP TS 23.558 [2].\n4)\tThe EEC sends EAS discovery request. The EES-A determines that the required EAS(s) is(are) not registered with the EES, and decides to provide service from partner OP’s EAS.\n5)\tthe EES-B sends EAS discovery request over EDGE-9 reference point to the EES-A.\nNOTE 2:\tIf required, the EES-B may perform Retrieve T-EES procedure as specified in clause 8.8.3.3 of 3GPP TS 23.558 [2] to retrieve information about EES-A.\n6)\tthe EES-A validates the edge service SLA and returns EAS discovery response including the discovered candidate EAS(s) to the EES-B.\n7)\tUpon receiving registered EAS information from EES-A (either via notification or request to get all registered EAS information or EAS discovery procedure), the EES sends the EAS discovery response to EEC including matching EAS details.\nNOTE 3:\tIt is up to implementation to decide which option to use to get list of registered EAS(s) from partner OP.\n\nBased on service provider policy, the EES-B either requests list of all registered EASs from partner OP’s EES-A as specified in this clause, or perform EAS discovery based on the discovery filters provided by the EEC as specified in clause 7.44.2.3.\nNOTE 1:\tThe EES-B may contact Edge Repository (of OP B) to identify EES (of OP A) to trigger request to get all registered EASs or EAS discovery.\nThe figure depicts a list of registered EASs from a partner OP, with each EAS represented by a unique identifier and a description of its features. The figure is a visual representation of the data, allowing users to easily access and understand the information.\nFigure 7.44.2.4-1: Get list of all registered EASs from partner OP\nFollowing steps shows procedure to request list of all registered EASs from EES-A.\n1)\tIf the EES-B does not have full application knowledge at the time of EAS discovery request from the EEC, the EES triggers request to EES-A to provide list of all registered and allowed EAS information. The request includes required parameters like ECSP identifier, EESID and security parameters.\n2)\tUpon receiving the request from EES-1, the EES-2 checks whether EES-1 is authorized to receive registered EAS list or not based on service level agreement.\n3)\tIf authorized, the EES-A sends registered EAS information response. The response includes the registered and allowed EAS for edge node sharing service between OP-A and OP-B, EASID and EAS Geographical Service. Otherwise, the EES-A sends the failure response. Upon receiving the success response, the EES-B stores the information to be used during EAS discovery procedure.\nNOTE 2:\tThe request to get list of all registered EASs from EES-A to EES-B can be triggered anytime based on implementation.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.44.3\tSolution evaluation",
                            "text_content": "This solution addresses KI#22 for the EAS discovery in edge node sharing case. This solution requires architecture enhancement to have a dedicated ECS (i.e. ECS-ER) in order to exchange the required information among partner OPs. This solution enables EAS discovery for edge node sharing scenario, where the EES-B either requests list of all registered EASs from partner OP’s EES-A or perform EAS discovery based on the discovery filters provided by the EEC. Based on received registered EAS information from EES-A, the EES-B uses the information while providing the EAS discovery response to the EEC. This solution is a viable solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.45\tSolution #45: EAS discovery in Edge Node sharing scenario",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.45.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.45.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue#22 on EAS discovery in Edge Node sharing scenario in clause 4.22. The scenario assumption is that the EES service (OP A) can be shared to the Operator B. The Operator B can rent the edge resource from the Operator A for the EAS deployment and also rent the EES service from the Partner A.\n\nEditor's note:\tThe scenario assumption in this solution needs to be verified with GSMA before considering this solution in conclusion.\nIn this solution, the EES is responsible to determine the EAS base on the desired ECSP information of the UE and the ECSP information of the EAS. With this solution, the EES can discovery and determine the considering the ECSP information of both the UE and the EAS, and thus UE can get edge computing service from the EAS deployed by ECSP serving its UE.\nPre-conditions:\n1.\tOP A and OP B have a service level agreement to share edge EES services.\n2.\tEAS deployed by the OP B in OP A.\n3.\tThe EAS register to the EES (OP A) with EAS ECSP ID (e.g. OP B).\n4.\tEES (OP A) which is deplyed by OP A but shared to OP B can register to ECS (OP B)\nEditor's note:\tIt is FFS whether the EES (OP A) which is deployed by OP A but shared to OP B can register to ECS (OP B) is required or not.\nEnhancement on the 3GPP TS 23.558 clause 8.3.3 Service Provisioning and 8.5\tEAS discovery\nThe figure depicts a service provisioning and EAS discovery procedure in a 5G network. It illustrates the steps involved in configuring and activating EAS, as well as the process of service provisioning. The figure includes various components such as the base station (gNB), user equipment (UE), and scatterers, which are essential for the successful operation of 5G networks.\nFigure 7.45.2.2-1: service provisioning and EAS discovery procedure\n1.\tThe EEC send the service provisioning request message to the ECS (OP B), the request message may contain the required EASID information\n2.\tUnpon receiving the request message, the ECS (OP B) determine the EES (OP A), when the required EAS is avaliable in the OP A\n3.\tThe EEC sends the EAS discovery request to the EES  (OP A) in the OP A which is shared to the Operator B， the request message contains the UE home ECSP (e.g OP B’s information ) information.\n4.\tThen the EES (OP A) in the OP A determines the EAS considering the ECSP information of both the UE and the EAS, e.g. UE home ECSP, ECSP of the EAS.\nIn this solution, the T-EES is responsible to determine the T-EAS base on the desired ECSP information of the UE and the ECSP information of the EAS. With this solution, the T-EES can discover and determine the T-EAS considering the ECSP information of both the UE and the EAS, and thus UE can get edge computing service from the T-EAS deployed by ECSP serving its UE.\nNOTE: The EEC’s home ECSP ID (identifying OP) information is used to indicate which ECSP (e.g. OP)’s service is subscribed by the EEC.\nPre-conditions:\n1.\tOP A and OP B have a service level agreement to share edge EES services.\n2.\tEAS deployed by the OP B in OP A.\n3.\tThe T-EAS register to the T-EES (OP A) with EAS ECSP ID (e.g. OP B).\n4.\tS-EES (OP A) and T-EES (OP A) which is deplyed by OP A but shared to OP B can register to ECS (OP B)\n5.\tThe ECS (OP B) will only return the OP A’s T-EES for edge node sharing case..\nEnhancement on the 3GPP TS 23.558 clause 8.8.3.3 retrieve T-EES and 8.5 \tEAS discovery\nThe figure depicts a T-EES (Telecommunication Equipment and System) and EAS (Electronic Attack and Surveillance) discovery procedure. It illustrates the steps involved in identifying and locating telecommunication equipment and systems, as well as electronic attack and surveillance systems. The figure includes a diagram of the communication network, with various components such as base stations, mobile devices, and other network elements. The T-EES and EAS discovery procedure is crucial for ensuring the security and reliability of telecommunication networks.\nFigure 7.45.2.X-1: Retrieve T-EES and EAS discovery procedure\n1.\tThe S-EAS send the EAS discovery request message to the S-EES (OP A), the request message may contain the EEC’s home ECSP ID (e.g. identifying OP B’s information).\n2.\tThe S-EES (OP A) perform the Retrieve T-EES procedure to the ECS (OP B)\n3.\tUpon receiving the T-EES(OP A) information, the S-EES (OP A) sends the EAS discovery request message to the T-EES (OP A) which is shared to the Operator B, the request messagse contains the EEC’s home ECSP ID (e.g. identifying OP B’s information)\nEditor's note:\tIt is FFS whether other OP’s EES will be returned to the S-EES of OP A\n4.\tThen the T-EES (OP A) in the OP A determines the T-EAS considering the ECSP information of both the EEC and the EAS, e.g. EEC’s home ECSP ID (e.g. identifying OP B’s information), ECSP of the EAS. Then the T-EES (OP A) send the EAS discovery response message to the S-EES(OP A), the response message contains the T-EAS (OP B) information.\n5.\tThe S-EES (OP A) in the OP A send the EAS discovery response message to the S-EAS(OP B), the response message contains the T-EAS (OP B) information.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.45.3\tSolution evaluation",
                            "text_content": "This solution addresses KI#22 for the EAS discovery in edge noed sharing case. This solution is applicatble to the case where the EES (OP A) can be shared to the OP B, and the EAS deployed by OP-B in the OP A can only provide the service to the OP B’s UE. The EES can determine the EAS or T-EAS based on the EEC’s ECSP ID (e.g. identifying OP B’s information) information and EAS's ECSP  (e.g. OP) information. And this solution is a viable solution.\nNOTE:\tThe EEC’s ECSP ID (e.g. identifying OP’s information) information is used to indicate which ECSP (e.g. OP)’s service is subscribed by the EEC.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.46\tSolution #46: EEC selected ACR scenario for EAS bundles",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.46.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.46.2\tSolution description",
                            "text_content": "This solution corresponds to the key issue #18 on EAS bundles, and is proposed to make decisions on ACR scenarios for EAS bundles based on solution #35 of EEC selected ACR scenarios, to avoid the misaligned relocation between  bundled EAS(s), by considering the AC/EEC/EES(s)/EAS(s) ability of handling bundled EAS ACR.\nThe scenario assumption of this solution is that there is a coordinated ACR requirement for KI#18, i.e. the bundled EAS may need to be relocated together.\nEditor's note:\tThis solution will not be used if SA4 don’t have requirement for coordinated ACR in EAS bundle case; and solution needs to be revisited if SA4 clarifies such requirement existence.\nEditor's note:\tThis solution may not be required depending on the feedback from SA5, e.g. if the bundled EASs register to the same EES.\nCompared with solution #35, this solution:\n-\tfocus on the EAS bundles scenario where bundled EAS(s) for one AC associated with one EES or multiple EES(s)\n-\tadditionally considering the AC/EEC/EES(s)/EAS(s) ability of handling bundled EAS ACR to determined ACR scenario for EAS bundles.\nNOTE:\tThis solution is based on existence of bundled EAS ACR in solution #26, the AC/EEC/EAS/EES capability to support EAS bundle ACR will use any agreed name for bundled ACR scenario in solution #26.\nIn this solution, the bundled EAS list is introduced in AC profile, to represent that the multiple EAS(s) are to serve the same AC. The associated EES list is introduced to describe the EES(s) where the bundled EAS(s) is registered in. The EEC can be responsible to make decisions on ACR scenarios selection for EAS bundles. In the following procedure, the bundled EAS list consists of EAS#1 and EAS#2, and the associated EES list includes EES#1 and EES#2, where EAS#1 and EAS#2 are registered in EES#1 and EES#2, respectively.\n\nFigure 7.46.2.2-1: EEC selected ACR scenarios for EAS bundles\n1-2. The EAS sends an EAS registration request to the EES, the request includes the EAS ability of handling bundled EAS ACR (e.g. bundled EAS list) in EAS profile (as extension in EAS service continuity support).\n3-4. The EES sends an EES registration request to the ECS, the request includes the EES ability of handling bundled EAS ACR (e.g. bundled EAS list, and/or notify other bundled EAS(s) to perform ACR) in EES profile (as extension in EES service continuity support).\n5. EEC performs service provisioning with ECS, and ECS returns the EES list with the EES ability of handling bundled EAS ACR and the EES service continuity support to EEC.\n6-7. The EEC performs EAS discovery using procedures defined in 3GPP TS 23.558 [2] clause 8.5 to obtain a list of discovered EAS(s), with the EAS ability of handling bundled EAS ACR.\n8. The EEC (or AC) selects bundled EAS(s) from the discovered EAS list. The EEC selects the ACR scenario(s) for EAS bundles that should be used for the given AC and selected EAS(s) by considering the ACR scenarios support by AC, EEC, EES(s) and EAS(s), and the AC/EEC/EES(s)/EAS(s) abilities of handling bundled EAS ACR. ACR selection can result in zero or more ACR scenarios being selected. For selecting the ACR, the EEC minimally considers the ACR capabilities of the AC from AC Profile, of the EEC (known locally), of the EES(s) from service provisioning response received from the ECS (pre-requisite), and of the EAS(s) from EAS Profile and obtained at EAS discovery.\nNOTE: The enhancement of ACR scenario, if required, will be considered in normative work.\n9. The EEC sends the selected ACR scenario(s) to EES in selected EAS announcement request, the EES uses the list of selected ACR scenarios to determine if it should perform ACR detection and/or ACR decision.\n10. The EES sends an ACR selection notification to its registered EAS(s) which are part of the bundled EAS(s), providing the selected ACR scenario list. Not shown on the figure, the EAS previously subscribed to receive ACR notifications. The EAS uses the selected ACR scenarios list to determine if it should perform ACR detection and/or ACR decision.\n11. The EES sends the selected EAS declaration response to the EEC indicating success or failure of the EAS announcement request.\n12-14: The EEC sends the selected ACR scenario(s) with related ACID and EASID to other associated EES(s) and the other bundled EAS(s).\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.46.3\tSolution evaluation",
                            "text_content": "This solution addresses KI#18. To satisfy the coordinated ACR requirements (i.e. the bundled EAS may need to be relocated together), the EEC can act as decision entity to select ACR scenario(s) for EAS bundles, based on the AC/EEC/EES(s)/EAS(s) abilities of handling bundled EAS ACR.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.47\tSolution #47: EES determines the selected ACR scenario for EAS bundles",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.47.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.47.2\tSolution description",
                            "text_content": "This solution corresponds to the key issue #18 on EAS bundles where multiple EES(s) are involved, and is proposed to make decisions on ACR scenarios for EAS bundles based on solution #19 of EES determined ACR scenarios, to avoid the misaligned relocation between bundled EAS(s), by considering the AC/EEC/EES(s)/EAS(s) ability of handling bundled EAS ACR.\nThe scenario assumption of this solution is that there is a coordinated ACR requirement for KI#18, i.e. the bundled EAS may need to be relocated together.\nEditor's note: This solution will not be used if SA4 don’t have requirement for coordinated ACR in EAS bundle case; and solution needs to be revisited if SA4 clarifies such requirement existence.\nEditor's note:\tThis solution may not be required depending on the feedback from SA5, e.g. if the bundled EASs register to the same EES.\nCompared with solution #19, this solution:\n-\tfocus on the EAS bundles scenario where bundled EAS(s) for one AC associated with multiple EES(s)\n-\tadditionally considering the AC/EEC/EES(s)/EAS(s) ability of handling bundled EAS ACR to determined ACR scenario for EAS bundles.\nNOTE:\tThis solution is based on existence of bundled EAS ACR in solution #26, the AC/EEC/EAS/EES capability to support EAS bundle ACR will use any agreed name for bundled ACR scenario in solution #26.\nIn this solution, the bundled EAS list is introduced in AC profile, to represent that the multiple EAS(s) serve the same AC. The associated EES list is introduced to describe the EES(s) where the EAS(s) in the bundled EAS(s) are registered in. An EES can be responsible to make decisions on ACR scenarios selection for EAS bundles. In the following procedure, the bundled EAS list consists of EAS#1 and EAS#2, and the associated EES list includes EES#1 and EES#2, where EAS#1 and EAS#2 registered in EES#1 and EES#2, respectively.\n\nFigure 7.47.2.2-1 EES determines the selected ACR scenario for EAS bundles\n0. The EEC performs service provisioning procedure and EAS discovery procedure, obtains the discovered bundled EAS list, the associated EES list, the EAS ability of handling bundled EAS ACR (e.g. bundled EAS list) in EAS profile (as extension in EAS service continuity support), and the EES ability of handling bundled EAS ACR (e.g. bundled EAS list, and/or notify other bundled EAS(s) to perform ACR) in EES profile (as extension in EES service continuity support).\n1-2. The EAS sends an ACR scenario selection subscription request to the EES, the EES sends an ACR scenario selection subscription response to the EAS with the subscription result.\n3. The EEC sends ACR scenario selection request to one of EES, the request contains the AC service continuity support and EEC service continuity support indicating which ACR scenarios are supported by the AC and the EEC. The request also contains the bundled EAS list, the associated EES list, the AC/EEC/EES(s)/EAS(s) ability of handling bundled EAS ACR (e.g. bundled EAS list, and/or notify other bundled EAS(s) to perform ACR).\n4. Based on the AC service continuity support, EEC service continuity support, the bundled EAS list, the AC/EEC/EES(s)/EAS(s) abilities of handling bundled EAS ACR and EAS service continuity support, the EES determines the suitable ACR scenario(s) for the bundled EAS(s) scenario. The EES can select the appropriate ACR scenario(s) for the bundled EAS(s) scenario from the intersection of the ACR scenarios supported by AC, EEC, EES(s) and EAS(s).\nNOTE:\tThe enhancement of ACR scenario, if required, will be considered in normative work.\n5. The EES sends the ACR scenario selection response to the EEC, including the selected ACR scenario with related ACID and EASID, then EEC may notify the AC with the selected ACR scenario.\n6. The EES sends the ACR scenario selection notification to its registered EAS(s) which are part of the bundled EAS(s), including the selected ACR scenario with related ACID and EASID.\n7. The EES sends the selected ACR scenario selection announcement request to other associated EES(s), including the selected ACR scenario with related ACID and EASID.\n8. The other associated EES(s) send the selected ACR scenario announcement response to the EES.\n9. The other associated EES(s) sends the ACR scenario selection notification to its registered EAS(s) which are part of the bundled EAS(s), including the selected ACR scenario with related ACID and EASID.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.47.3\tSolution evaluation",
                            "text_content": "This solution addresses KI#18. To satisfy the coordinated ACR requirements (i.e. the bundled EAS may need to be relocated together), the EES can act as decision entity to determine ACR scenario(s) for EAS bundles, based on the AC/EEC/EES(s)/EAS(s) abilities of handling bundled EAS ACR.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.48\tSolution #48: Edge server set and edge service set",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.48.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.48.2\tSolution description",
                            "text_content": "This solution is related to KI#23 on Reliable Edge service.\nNOTE:\tThe reference to 3GPP TS 23.501 [5] is used in the study to avoid repeating the text in set-based service resilience. In normative work all the procedures and concepts need to be specified based on EDGEAPP terms and EES/ECS-based information transfer procedures.\nBy adopting the NF set and NF service set approach, as specified in clause 5.21.3 of 3GPP TS 23.501 [5], an edge server set and edge service set can be introduced to enable an EES/ECS to provide reliable services to the edge service consumers (e.g. EAS, EEC).\nEquivalent Edge servers may be grouped into Edge server sets, e.g. several EES instances are grouped into an EES set. Edge servers within an Edge server set are interchangeable because they share the same context data, and may be deployed in different locations, e.g. different data centres. An Edge server (e.g. EES) is composed of one or multiple Edge Services. Within an Edge server, an Edge service may have multiple instances. These multiple Edge Service instances can be grouped into Edge Service Set if they are interchangeable with each other because they share the same context data.\nNOTE 1:\tHow equivalent EESs are determined (e.g. based on KPIs, service area) to group into an EES set (e.g. by O&M or other means) will be considered in normative work.\nUE is not required to host multiple instances of the same EEC but the EEC is able to perform re-connection due to ECS/EES service failure.\nLikewise, for service binding, it can be used by edge service producer and consumer to indicate a particular context (e.g. EEC context, EDGE-3 subscription context) that is bound to an edge service instance, edge server instance, edge service set or edge server set. The basic principle for binding is to exchange binding information between consumer and producer so that they know how to connect to alternative in case of service failure depending on level of binding (e.g. edge server set level, edge service set level).\nFor subscribe-notify type of interaction, the binding is needed between the edge service consumer and edge service producer. As an example, the EDGE-3 API operation Eees_UELocation_Subscribe is used to depict the impact:\nThe figure depicts a user interface for accessing the location of a UE (User Equipment) in a 4G network. The interface allows users to subscribe to the location of a specific UE, enabling them to track the location of their devices in real-time.\nFigure 7.48.2.2-1: UE location API: Subscribe operation\nTo create a binding for UE location notification, in step 1, the UE location subscribe request may include a Binding Indication 1 referring to EAS service instance, EAS service set, EAS instance or EAS set and additionally includes a service name of the EAS as specified in Table 6.3.1.0-1 of TS 23.501 [5]. The EAS service set ID, EAS service instance ID and service name relate to the service of EAS that will handle the notification. The EES selects the target for the related notifications using the notification endpoint received in the subscription request. If the notification endpoint included in the subscription is not reachable, the Binding Indication received is used to discover an alternative notification endpoint, as specified in Table 6.3.1.0-1 of TS 23.501 [5].\nNOTE 2:\tSCP related description in TS 23.501 [5] is out of the scope of current study and therefore not applicable for EDGEAPP. The routing binding indication described in TS 23.501 [5] is not applicable for EDGEAPP, consequently.\nIf the Binding Indication for Notifications needs to be updated, the EAS may initiate a location subscription update request (step 8) to the NF service producer with an updated Binding Indication 1 or may include the updated Binding Indication 1 in the acknowledgment of a Notification.\nBinding for the subscription resource at the EES can also be created. In step 4, the UE location subscribe response message may contain a Binding Indication 2 referring to EES service instance, EES instance or EES Set. The EAS selects the target for the related request to the EES, such as the request to update the subscription shown in step 8 of Figure 7.48.2.2-1, using the received Binding Indication 2 as specified in Table 6.3.1.0-1 of TS 23.501 [5].\nIf the Binding Indication for Subscription needs to be updated, the EES may provide an updated binding indication 2 in a notification request (step 6) to the EAS or in the response (step 10) to a subsequent location subscription update request from the EAS.\nFor request-response type of interaction, as another example to provide reliable service, the EES registration procedure is enhanced with binding indication sent by the ECS. The EES uses the binding indication in the EES registration response to select the target for subsequent interaction (e.g. EES registration update request). The ECS may update the binding in EES registration update response.\nNOTE 3:\tFor stateless request-response (e.g. Eees_UELocation_Get operation), there is no need to include binding information in response message.\nNOTE 4:\tMore EEL specific procedure adaptation with Edge service set and Edge server set can be done in normative work by following above principle.\nIn case when ECSP has decided to gracefully shutdown the EES due to maintenance (or any other reason), the EES, as a service producer, may inform its consumers (e.g. EEC, EAS) about the EES instance unavailability via binding update as specified in clause 6.5.3.3 of 3GPP TS 29.500 [2]. The consumer (e.g. EEC, EAS), re-connects to another EES instance within the same EES set for subsequent communication.\nAn EES can be taken graciously out of service as follows:\na)\tthe EES instance pushes all related context to the selected alternate EES instance as specified in clause 7.48.2.4; and\nb)\tthe EES instance notifies all its consumers like EECs and EASs (which are subscribed for binding update  information).\nThe consumer may also detect the EES unavailability by itself (e.g. request is not responded) that the EES instance is not available anymore, another available EES instance within the same EES set is connected by the consumer.\nNOTE 1:\tWhether re-selection of the EES is required and the procedure for re-selection of edge service instance can be addressed in the normative work.\nFor EES sent notification, it is assumed that the consumer(s) are subscribed to receive the binding update notification.\nNOTE 2:\tWhether consumers need to have a dedicated subscription per EES instance level or existing service subscription in EES can be re-used is to be decided in normative work. Any further consumer action upon receiving the binding update information or upon detecting the EES unavailability by itself can be specified during normative work.\nNOTE 3:\tIn this solution, the EES service end point in a set is different. Multiple EESs using the same virtual IP address is out of the scope.\nNetwork Function/NF Service Context Transfer procedure as specified in clause 5.21.4 of 3GPP TS 23.501 [5], can be adopted for EES. The EEC Context Transfer Procedures allow transfer of EEC and EAS Contexts from a EES instance (as a S-EES) to another EES instance (as a T-EES) within the same EES set, e.g. before the Source EES can gracefully close its service.\na)\tThe EES instance can push all registered EEC and EAS contexts to another EES instance within the same EES Set. In order to push all registered EEC and EAS contexts to the T-EES, the S-EES sends EEC Context Push request as specified in clause 8.9.2.3 of 3GPP TS 23.558 [2]. The request further includes additional information elements as specified in Table 7.48.2.2-1.\nTable 7.48.2.2-1: Additional IEs for EEC Context Push request\n\nNOTE:\tIf list of EAS profiles information element is present, then the T-EES considers it as an indication for the content synchronization between EESs within same EES Set.\nb)\tUpon receiving context push request, the T-EES validates and authorizes the S-EES. If the S-EES is authorized and both S-EES and T-EES are part of same EES Set, then the T-EES stores the information for synchronization – e.g. list of EEC contexts and list of EAS profiles.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.48.2.2-1: Additional IEs for EEC Context Push request",
                                    "table number": 43,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.48.3\tSolution evaluation",
                            "text_content": "The solution addresses KI#23 related to Reliable Edge service. The solution proposes to adopt a mechanism like Network Reliability support with Sets as specified in 3GPP TS 23.501 [5] for EDGEAPP. The binding mechanism is described for subscription request and service response in EEL. The solution also provides EEL procedures to support reliability in EEL – like EES planned removal, context transfer between EES instances of same EES Set.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.49\tSolution #49: ACR for EAS composition",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.49.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.49.2\tSolution description",
                            "text_content": "This solution addresses the case of a single AC-EAS session where the EAS consumes other edge services, therefore acting as (or forming) a composite EAS. In this use case the AC is not aware of the EAS being part of a composite service, therefore ACRs can be initiated by the EEC or servers (EES, EAS) in DN as described in all Rel-17 ACR scenarios.\nNOTE:\tThe single EAS to which the AC is connected is termed \"connecting EAS\", while the other EASs within the composite service are termed \"component EASs\". The \"connecting EAS\" and \"component EASs\" form an EAS composition.\nAfter the initial AC-EAS connection, the connecting EAS may utilize the EDGEAPP discovery mechanisms to find the other services (component EASs) necessary to provide the composite service, and communicates with them. During ACR of the single AC-EAS session, once the connecting EAS is aware of ACR happening, it is the connecting EAS’s responsibility to find target EASs (e.g. using EDGEAPP discovery mechanism) for the component EASs, and to trigger ACT, if needed. The component EASs may be served by the same EES as the connecting EAS, or by different EESs.\nNOTE:\tIn order to trigger ACT for the other component EASs, after discovery the connecting EAS can send the endpoints of the targets to the sources, or can send the endpoints of sources to the targets. This is out of the scope of the current study.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.49.3\tSolution evaluation",
                            "text_content": "This solution addresses KI#20 and there is no impact identified in EEL for EAS composition.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.50\tSolution #50: Enhanced ECS for federation of services",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.50.1\tArchitecture enhancements",
                            "text_content": "This solution uses the architecture option #12 and relates to the assumptions specified in clause 6.12.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.50.2\tSolution description",
                            "text_content": "ECS registers with the ECS-ER and provides the information such as EDN configuration information, applications available via the ECS etc. Figure 7.50.2.1-1 illustrates the procedure.\nPre-conditions:\n1.\tThe ECS has the address (e.g. URI) of the ECS-ER.\nThe figure depicts a 5G network with various elements such as base stations (gNB), user equipment (UE), and scatterers. It illustrates the signal propagation in a 5G network, highlighting the multi-path signal path and beamforming techniques to mitigate interference. The figure also shows the fiber-optic backbone architecture, with core switches, optical line terminals (OLTs), and distributed nodes. Redundancy paths are shown in dashed lines, ensuring failover reliability. The layered design aligns with SDN principles.\nFigure 7.50.2.1-1: ECS registration with ECS-ER\n1.\tThe ECS sends the ECS registration request to the ECS-ER. The request from the ECS includes the ECS configuration information (ECS address and the ECS provider information) along with its security credentials.  EDN configuration information etc. The request also includes a list of EES/EASs available via the ECS in order to publish the information to other ECS-ER(s). The request may include a proposed expiration time for the registration, and may include list of partner ECSPs that are allowed to receive its information.\n2.\tUpon receiving the request from the ECS, the ECS-ER verifies the security credentials of the ECS and stores the ECS registration information obtained in step 1.\n3.\tThe ECS-ER sends an ECS registration response indicating success or failure of the registration operation. The ECS-ER may provide an expiration time to indicate to the ECS when the registration will automatically expire. To maintain the registration, the ECS sends a registration update request prior to the expiration time. If a registration update request is not received prior to the expiration time, the ECS-ER treats the ECS as implicitly de-registered.\nNOTE 1:\tECS registration update and ECS deregistration procedures are required.\nNOTE 2:\tName of the message flows will be determined during normative.\nWhen required to find a partner ECS, the ECS queries the ECS-ER by providing information such as the location of the UE, application required by the UE etc. In response the ECS-ER provides ECS configuration information of partner ECS(s) providing the required application at the location indicated by the primary ECS. Figure 7.50.2.2-1 illustrates the procedure.\nPre-conditions:\n1.\tThe ECS is part of a federation and has the address information of the ECS-ER.\n2.\tThe ECS has received a service provisioning request from an EEC or a T-EES discovery request from an EES, where EDN information for the requested application is not available at the ECS.\nThe figure depicts a network setup with ECS (ECS-ER) querying ECS-ER, illustrating the communication between ECS and ECS-ER. The figure shows the network topology, including the ECS, ECS-ER, and ECS-ER, with the ECS-ER querying the ECS. The figure also includes the ECS-ER's response, which is a 50.2.2-1.\nFigure 7.50.2.2-1: ECS querying ECS-ER\n1.\tThe ECS sends a ECS discovery request to the ECS-ER. The request contains information of the ECS, Service Provisioning filters received from the EEC or the EES and UE’s current location. If the UE hosting the EEC is roaming in a V-PLMN (determined using the serving PLMN information in the received service provisioning request, or by interacting with the H-PLMN), then the ECS discovery request includes the information of the serving PLMN i.e. the V-PLMN.\n2.\tThe ECS-ER authorizes the received request. If authorized, the ECS-ER processes the request and gathers the information of partner ECS(s) that can satisfy the query parameters received in step 1.\n3.\tThe ECS-ER sends a ECS discovery response to the ECS. The response includes ECS configuration information of the Partner ECS(s) available in the H-PLMN and/or the V-PLMN, depending on the serving PLMN of the UE as indicated in step 1. The Primary ECS caches the received information for further use.\nNOTE 1:\tIn addition to the request/response model, a subscribe/notify model will also be provided by the ECS-ER, where ECS-ER will notify subscribed ECSs based on local policies, subscription filters and ECSP partnership information provided by the registered ECSs.\nNOTE 2:\tTo process the service provisioning requests from the EEC or retrieve T-EES request from the S-EES, the ECS can use preconfigured information or information configured via OAM, or a discovery mechanism as specified in clause 7.50.2.2.\nIf the Primary ECS is unable to fulfil Service Provisioning request of an EEC it retrieves information of the partner ECS(s) that provide the required application at UE’s location and provide the list of retrieved partner ECS configuration information to the EEC in the Service provisioning response. Figure 7.50.2.3-1 illustrates the procedure.\nThe figure depicts a 5G network with various elements such as base stations (BTS), user equipment (UE), and scatterers. It illustrates the signal propagation in a 5G network, highlighting the multi-path signal propagation and beamforming techniques to mitigate interference. The figure also shows the fiber-optic backbone architecture, with core switches, optical line terminals (OLTs), and distributed nodes. Redundancy paths are shown in dashed lines to ensure failover reliability. The layered design aligns with SDN principles.\nFigure 7.50.2.3-1: ECS discovery for Federation and/or Roaming\n1.\tThe EEC sends a service provisioning request to the Primary ECS. This request is same as the service provisioning request specified in 3GPP TS 23.558 [2]. Additionally, in case the UE hosting the EEC is roaming to a V-PLMN, the service provisioning request may include the V-PLMN ID.\n2.\tUpon receiving the request, the Primary ECS performs authorization and policy enforcement as specified in 3GPP TS 23.558 [2].\n3.\tThe Primary ECS identifies required EDN configuration information based on the received request in step 1 and checks in step 2. The Primary ECS determines that EDN configuration information for at least one of the required applications (i.e. EAS) is not available.\n4.\tBased on the determination in step 3, the Primary ECS retrieves ECS configuration information of partner ECS(s) that provide the required application(s) at the UE’s location. The Primary ECS can use for e.g. preconfigured information, information configured via OAM, or a discovery mechanism (see clause 7.50.2.2) as available.\nNOTE:\tThe Primary ECS can use for preconfigured information, information configured via OAM, or a discovery mechanism as available in any order.\n5.\tOn retrieving the ECS configuration information of partner ECS(s), the Primary ECS applies any local policy or EEC profile-based filtering for service differentiation.\n6.\tThe Primary ECS sends service provisioning response to the EEC. The response is same as specified in 3GPP TS 23.558 [2]. Additionally, it includes a list of Partner ECS(s) which provide the applications required by the EEC. The information includes ECS provider information, list of EAS(s) available via the EES’s registered with Partner ECS etc. The response either includes the ECS address information, if the EEC is authorized to communicate directly with the Partner ECS, or it includes an indication that the Partner ECS must be reached via the Primary ECS. For the Partner ECS(s) that may be communicated directly, the response also includes authorization information required by the EEC to communicate with the Partner ECS.\nThe response may also include EDN configuration information for the EAS(s) available via the Primary ECS, if any.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.51\tSolution #51: EEC sharing UE Mobility requirement",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.51.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.51.2\tSolution description",
                            "text_content": "The solution addresses KI#12.\nThe solution proposes the EEC to share indication for mobility support requirement (e.g. whether the UE is fixed or not) in EEC registration request message. The solution proposes to enhance EEC registration procedure specified in clause 8.4.2.2.2 and EEC registration update procedure as specified in clause 8.4.2.2.3 as follows:\na)\tThe EEC registration request or EEC registration update request from the EEC may include indication for mobility support requirement (e.g. whether UE is fixed or not) to the EES.\nb)\tUpon receiving the request from EEC, the EES stores the information as part of EEC context for future usage.\nNOTE:\tWhen the information received in the EEC registration request indicates the mobility support requirement, the EES may decide not to subscribe to NEF or NWDAF for UE location information or its analytics, but rather perform one time location or less frequent fetch of the UE and store it.\nTable 7.51.2.1.1-1 describes the additional information elements in the EEC registration request and EEC registration update request from the EEC to the EES.\nTable 7.51.2.1.1-1: additional IE for EEC registration request and EEC registration update request\n\nNOTE:\tHow EEC gets information about UE being fixed is out of scope of specification.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.51.2.1.1-1: additional IE for EEC registration request and EEC registration update request",
                                    "table number": 44,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.51.3\tSolution evaluation",
                            "text_content": "The solution addresses KI#12. The solution proposes to enhance the EEL specifically EEC registration and EEC registration update procedures to provide indication whether the UE requires mobility support or not to the EES.\nThe EES may use this information to decide whether or not to subscribe to NEF or NWDAF for UE location information or its analytics, but rather perform one time location or less frequent fetch of the UE location and store it. Such a decision is up to EES implementation.\nThe solution is viable solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.52\tSolution #52: EES policy differentiation",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.52.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.52.2\tSolution description",
                            "text_content": "The KI#12 is about EEL service differentiation. EEL includes EEC, EES and ECS (and possibly new entities in Rel-18 study) to support the applications over the top.\nIn TS 23.558, Annex B.1, it says:\nThe edge computing service provider and the PLMN operator can be part of the same organization.\nIn this solution, the scenario assumption is that:\n-\tthe ECSP providing the EES and PLMN operator are the same organization.\n-\tthe ECSP/EES provider (e.g. ECSP#1, EES provider#1) will only deploy its EES in the edge and not deploy its own ECS for its EES, and the ECSP/EES provider (e.g. ECSP#1, EES provider#1) will rely on another ECSP/ECS provider (e.g. ECSP#2, ECS provider#2) to register its EES based on service agreement.\nNOTE 1:\tWhether this solution also applies for ECSP providing both its EES and its ECS (with EES registered in the ECS) can be determined in the normative work.\nEditor's note: Whether ASP only has service agreement with ESCP/ECS provider, or both ESCP/ECS provider and ECSP/ECS provider is FFS.\nEditor's note: Whether EEC only has service agreement with EES/ECS provider, or both ESCP/ECS provider and ECSP/ECS provider is FFS.\nFor instance, the EES, after receiving EAS discovery request, obtains the PLMN subscription data for the user. Then the EES acts differently when provisioning EAS candidates to the service consumer (e.g. EEC) based on PLMN subscription data for the user. For instance, policy can be the max. number of applications for edge computing, e.g. EES can only support max. 5 applications for a user without payment (for trial purpose in edge computing service). Another example is temporal and spatial conditions for providing edge service like EAS discovery under different Edge service levels. More detailed PLMN subscription data for a user is implementation specific in EES and out of the scope of the study.\nNOTE 2:\tEEC is an application in the UE, which can be used by different users. For instance, Alice pays 10 dollars per month to ECSP company X as EES provider to enjoy VIP service for facilitating edge computing. While Bob is a free user to ECSP company X who just wants to try company X provided EES service. Company X’s EES can provide differentiated service to different users based on PLMN subscription data. In addition, in a deployment it is possible that the company X’s EES is one of many EESs managed by company Y’s ECS (which also manages other company’s EES).\nEditor's note:\tWhether the edge service related information in PLMN subscription is stored in each EES or a central place by the EES provider is FFS.\nSince this is a user contract subscription with EES providers and ECS may host multiple EESs provided by different ECSPs, the EEC needs to contact the EES(s) which is provided by EES service provider(s) holding valid PLMN subscription data for the user. This requires the EEC to provide its desired EES service provider(s) in the service provisioning procedure as depicted in figure 7.52.2-2. With such information, the ECS is able to provision the EEC with EES(s) based on EES registered provider information, i.e. if available, the ECS identifies the EES(s) based on the UE-specific service information (e.g. EES provider ID) at the ECS and the UE location.\nThe figure depicts a service provisioning request/response process in a 5G network. It illustrates the steps involved in requesting and responding to a service, including the requestor's identity, the service being requested, and the response from the service provider. The figure shows the flow of information between the requestor and the service provider, highlighting the importance of network security and data privacy in this context.\nFigure 7.52.2-2: Service provisioning – Request/Response\nTable 7.52.2-1 shows the additional impact for the information flow of the service provisioning request.\nTable 7.52.2-1: Service provisioning request\n\nNOTE 3:\tThe EES provider identifier is also applicable for the subscribe-notify model of service provisioning procedure (i.e. included in the service provisioning subscription request). This can be considered in the normative work.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.52.2-1: Service provisioning request",
                                    "table number": 45,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.52.3\tSolution evaluation",
                            "text_content": "This solution addresses KI#12 which enables EEL service differentiation. The EES is able to distinguish different users and applies different policies for the user based on subscription information. In order to address the correct EES having the corresponding PLMN subscription data for the user, the ECS is able to identify the EES(s) during service provisioning procedure based on EEC supplied EES provider identifier and registered EES provider identifier.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.53\tSolution #53: Support for EAS synchronization",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.53.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.53.2\tSolution description",
                            "text_content": "Figure 7.53.2.1-1 illustrates a scenario of EAS Discovery to request support for content synchronization. To indicate support for content synchronization, the EAS may include an indication in EAS registration request. The EES requests the EES to discover other EASs who are involved in same group. The EES discovers EASs with same EASID and checks whether required group is available or not.\nPre-conditions:\n1)\tEAS-1 and EAS-2 are from different service providers and are registered with EES.\n2)\tEAS-1 and EAS-2 support content synchronization.\nThe figure depicts the EAS (Electronic Attack Simulation) process, which involves the discovery of content synchronization requests. The figure shows the steps involved in the EAS process, including the identification of the content to be synchronized, the request for synchronization, and the subsequent response from the content provider. The figure provides a visual representation of the EAS process, making it easier to understand and follow.\nFigure 7.53.2.1-1: EAS Discovery to request for content synchronization\n1)\tThe EAS-2 performs EAS registration with EES as specified in 3GPP TS 23.558. In the registration request, the EAS includes indication to support content synchronization;\n2)\tThe EAS-1 sends EAS discovery request to discover EAS as specified in clause 8.8.3.2 of 3GPP TS 23.558 to EES indicating the request is to initiate content sharing with discovered EAS(s). The request may include group identity.\n3)\tUpon receiving the request, the EES authorizes the EAS, and if the EAS is authorized to discover the EAS information, the EES identifies the EAS(s) based on the provided EAS discovery filters and EAS(s) supporting content synchronization. To apply discovery filters, the EES matches the ACID(s), schedule of the EAS, EAS Geographical Service Area, EAS Topological Service Area, etc.\nNOTE 1:\tHow group id and interaction between EES and EAS to discover EAS will be considered in normative work.\n4)\tThe EES sends the EAS discovery response to EAS-1 including list of EAS(s) which supports content synchronization.\n5)\tEAS-1 and EAS-2 synchronizes the content which is out of scope of this specification.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.53.3\tSolution evaluation",
                            "text_content": "The solution address the KI#13 and specifically to open issue 2. The solution enhances the EAS registration and Target EAS discovery procedure. The solution enables the EAS to discover another EAS(s) with support for content synchronization.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.54\tSolution #54: EEL assist the application layer to determine the common EAS",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.54.1\tArchitecture enhancements",
                            "text_content": "This solution is based on architecture option in clause 6.5.1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.54.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue#17: Discovery of a common EAS.\nThe scenario assumption is the Edge enabler layer can provide a mechanism to support common EAS selection for the centralized group management server, and the group information is created by a centralized group management server (e.g. login server for gaming), meanwhile the association between the user and group is also managed by the centralized group management server. The EEL should provide the supporting service to assist the centralized group management server for the EAS selection. This solution is used for the dynamic group to discover a common EAS.\nThe figure depicts a scenario for EEL (Enhanced EEL) assisting the application layer, illustrating how it can enhance the performance of the application layer by providing additional capacity and improving the overall network performance.\nFigure 7.54.2.1-1: Scenario for EEL assisting the application layer\nIn this solution, the centralized group management server (e.g. login server for gaming) is responsible to determine the group, and the group information is also maintained by the centralized group management server. The EEL only provide the Edge deployment information to the centralized group manamgement server. Furthermore, this solution is intend to provide the assist for the centrailize group management server (e.g. login server for gaming) and this solution will not impact the R17 EDGEAPP architecutre. Besides, the centralized group management server can be the CAS which has the capability to allocate and manage the group.\nPre-conditions:\n1.\tCAS allocated the group and manage the association between the user and group based on the service request from AC.\n2.\tCAS can be pre-configured with the ECS address information based on the business relationship between ECSP and ASP.\nThe figure depicts a simplified representation of an EEL (Enhanced Ethernet Layer) assisting the application layer in a network. The EEL is a layer that provides additional functionality to the Ethernet layer, such as packet forwarding, network address translation, and network control. This figure illustrates the EEL's role in enabling the application layer to perform its tasks more efficiently and effectively.\nFigure 7.54.2.2-1: EEL assisting the application layer\n1.\tThe CAS send the sevice provisioning request message to the ECS. The request message contains the group location information based on the UE location of the certain group. The ECS can return the EES information based on the group location information.\n2.\tThen the CAS send the EAS discovery request message to the EES. The request message contains AC information and the group location information based on the UE location of the certain group. The EES can return the EAS information based on the AC information and the group location information.\n3.\tUpon receiving the EAS information, the CAS send the common EAS information to the AC which in the certain group.\nNOTE 1:\tWhen UE group location changed due to UE join/leave, the CAS can determine whether the common EAS need to be changed.\nNOTE 2:\tCAS can perform the service provisioning and EAS discovery procedure.\nNOTE 3:\tAny impacts due to new entity CAS triggering service provisioning and EAS discovery shall be considered during the normative phase.\nNOTE 4:\tThe interaction between AC and EAS is out of 3GPP scope.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.54.3\tSolution evaluation",
                            "text_content": "This clause provides an evaluation of the solution.\nThis solution address KI#17. This solution is used for the dynamic group case, the EEL provide the service provisioning service and EAS discovery service to the application layer (e.g. centralized group management server). The EEL implementation will not be impacted in this solution. This is a viable solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.55\tSolution #55: Non-roaming UE location invocation",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.55.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.55.2\tSolution description",
                            "text_content": "This solution addresses key issue 22\nThe edge resource of OP A need to know OP B’s information to invoke UE location information. The OP A’s EES or EAS should receive OP B’s information by EAS discovery request or pre configure by agreement OP A with OP B.\nOperator A’s entities can invoke operator B's NEF using the PLMN information provided from the EAS discovery request message. The EES A can obtain the PLMNID of the service provider B from the EAS discovery request of the EES B. The EES A may request the terminal location from the NEF B by utilizing the obtained PLMNID of the business operator B.\nEditor’s note:\tIt is FFS whether the solution is used to solve the solution#43, 44, 45.\nEditor’s note:\tIt is FFS whether the EES#a need to obtain this information from OP B’s NEF in solution #43 and 44.\nTable 7.26.2.1-2: EAS discovery request\n\nPre-conditions:\n1.\tOP A may have a PLMN address of OP B as a network agreement with OP B;\n2.\tWhen the EEC requests service provisioning to the ECS, it may include PLMN information serving the UE;\nNOTE 1:\tAt least one of the above operations shall be performed.\nThe figure depicts a UE location invocation to the OPB's NEF, illustrating the communication between the UE and the network control center (NCC). The figure shows the UE's location, the NCC's location, and the path to the NEF. The figure is used to understand the communication path and the location of the UE in relation to the network control center.\nFigure 7.55.2-1: UE location invocation to the OPB’s NEF\nIn Figure 7.55.2-2, The EES A or EAS A may obtain an NEF B address through an edge node sharing agreement between OP A and OP B. The EES A may also receive an EAS A discovery request message from the EES B, including OP B information.This enhances the UE location API, one of the EES exposure function to EAS in TS 23.558 8.6.2.\n1\t EES A can receive UE location API call messages from EAS A or capture services that require UE location (e.g. UE location tracking, UP route management event notification, traffic impact, etc.) EES A may generate UE location request messages using PLMN ID,, and UEID.\n2.\tThe EES A may check or subscription UE location information to the NEF B.\nIf EAS A can use NEF B's API, it may directly send a UE location information request message or a UE location subscription request message.\nNOTE:\tThe EES utilizes the capabilities of the 3GPP core network as specified in clause TS 23.558 8.10.3.\nThe NEF B can perform a procedure to authenticate the requested edge entity and UE by checking the UEID and PLMN ID in the message sent by EES A.\nThe NEF B may send UE location information in the notification.\nIf EES A receives a UE location invoke message from EAS A, EES A may provide UE location information to EAS A. or;\nWhen the NEF B receives a request for UE location information from the EAS A, the NEF B may send the UE location information in the notification message and provide the UE location to the EAS A.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.26.2.1-2: EAS discovery request",
                                    "table number": 46,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.55.3\tSolution evaluation",
                            "text_content": "This solution introduces how OP B's EAS and EES acquire UE location information using OP A's network functions of when using edge resources of service providers that are not subscribed by UE in ENS scenarios.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "8\tDeployment scenarios",
            "description": "NOTE:\tDeployment models based on conclusions of Key issues will be considered in the normative work.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "9\tInvolved entities and relationships",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "9.1\tFederation and Roaming",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "9.1.1\tGeneral",
                            "text_content": "This clause describes the relationship of edge computing service providers, PLMN operators, application service providers and end users, taking federation and roaming into account.\nThe figure depicts the relationships involved in edge computing service, specifically focusing on the concept of federation and roaming. It illustrates the various entities involved, such as edge computing service providers, edge computing service users, and the network infrastructure. The figure also highlights the importance of security measures, such as encryption and authentication, to ensure the privacy and integrity of data.\nFigure 9.1.1: Relationships involved in edge computing service – federation and roaming\nThe end user is the consumer of the applications provided by the application service provider (ASP). End user:\n-\tcan have ASP service agreement with a single or multiple application service providers.\n-\thas a PLMN subscription arrangement with a PLMN operator (HPLMN). The UE used by the end user can register on the HPLMN network and network of its roaming partners.\n-\tcan have authorization to access edge services of a single or multiple ECSPs.\nThe ASP consumes the edge services (e.g. infrastructure, platform) provided by the ECSP. ASP:\n-\tcan have edge computing service provider service agreement with a single or multiple ECSPs.\nThe PLMN operator provides connectivity between the end user and the edge services provided by the ECSP. PLMN operator:\n-\tcan have the PLMN operator service agreement with a single or multiple ECSPs.\n-\tcan have service agreement for roaming including agreements for Edge Computing services, and/or federation with a single or multiple PLMN operators.\nThe ECSP provides the edge services. ECSP:\n-\tcan have PLMN operator service agreement with a single or multiple PLMN operators which provide edge computing support.\n-\tcan have federation partnership to share edge services with a single or multiple ECSPs.\nThe ECSP and the PLMN operator can be part of the same organization.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "10\tOverall evaluation",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "10.0\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "This clause provides a summary of architecture enhancements and solution evaluations and related solution assumptions. The evaluations and solutions are applicable only for the corresponding scenario assumptions..\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "10.1\tArchitecture enhancements",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "10.1.1\tSupport for Terminal Equipment (TE)",
                            "text_content": "The architecture enhancement captured as option#4 introduces support for TEs in the EdgeApp architecture. The interface between the TEs and the UEs running the EEC is out of scope of SA6.\nWith this enhancements ACs running on a TE will be able to communicate with the EEC running on a UE to avail services of the EEC over EDGE-5 interface. No specific enhancement over EDGE-5 is identified during the study to support this functionality.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.1.2\tRoaming architecture",
                            "text_content": "The architecture enhancement captured as option#1 introduces two ways to support roaming UEs hosting the EEC in the EdgeApp architecture as follows:\n-\tLocal breakout roaming architecture: Local breakout to access H-ECS\nThis architecture uses H-ECS and V-ECS associated with HPLMN and VPLMN, respectively. In the LBO roaming scenario, the EEC is able to communicate with the H-ECS to obtain the information for V-ECS via Local Breakout Session. Likewise, the EEC accesses V-ECS and V-EES via Local Breakout Session.\nA new reference point EDGE-10 is defined between H-ECS and V-ECS to support for the EEC in the roaming UE to access V-ECS.\n-\tHome-routed roaming architecture: Home routed EDGE-4 access to H-ECS\nIn the HR roaming scenario, the roaming architecture assumes that the local access to the EDN of the VPLMN is supported for the UE hosting the EEC via HR roaming session. The traffic toward the EDN of the VPLMN (i.e. EDGE-1 traffic and application data traffic) is not routed via the HPLMN while the traffic between the EEC and H-ECS is routed via VPLMN toward HPLMN. Such a local access to the EDN of the VPLMN in the scenario where HR roaming session is used requires enhancements in 5G core networks, which in the scope of SA2.\nA new reference point EDGE-10 is defined between H-ECS and V-ECS to support for the EEC in the roaming UE to access V-ECS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.1.3\tArchitecture for Federation and Roaming",
                            "text_content": "The architecture enhancement captured as option#12 enhances the ECS with a new functionality of an Edge Repository. The enhanced ECS accepts registration of other ECSs of the ECSP. The ECS registration also enables ECS to publish their registered EASs information and the enhanced ECS maintains information of which application is available via which ECS for the ECSP.\nWith this enhancement, an ECS can query the ECS-ER to find partner ECS(s) that provide the required application. This improves the accuracy and reduces the time taken to generate the service provisioning response sent to the EEC or the EES; therefore improving the chances of service continuity during ACR procedures.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "10.2\tKey issue evaluations",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "10.2.0\tGeneral",
                            "text_content": "All the key issues and solutions specified in this technical report are listed in Table 10.2.0-1.\nThe table provides a mapping of the key issues to the related solutions. It also lists the dependencies on other working groups.\nTable 10.2.0-1 Key issue and solutions\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 10.2.0-1 Key issue and solutions",
                                    "table number": 47,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "10.2.1\tKey issue #1: Enhanced notification service to the EEC",
                            "text_content": "The open issues studied in the key issue #1 are as follows:\n1.\tWhether and how the EEC acquires the notification target address or a notification channel URI to receive the notifications?\n2.\tWhether and how EEC, ECS and EES support push notification mechanism. Whether and what additional functional entity is necessary for this?\n3.\tHow are the EEC subscriptions and/or notification targets treated in mobility scenario (e.g. during ACR scenario)?\n4.\tWhether and how to utilize application triggering method specified in 3GPP TS 23.501 [5] to provide notifications to the EEC?\nTo address the open issues aforementioned, there are three solutions proposed as follows:\n-\tSolution #1: Service provisioning via push notification\n-\tIt utilizes the push notification mechanism to enhance the service provisioning procedure, assuming that at least one push server is available to ECS and the UE has push function supporting the interaction with the push server.\n-\tSolution #3: Service provisioning triggering via SMS over NAS\n-\tIt utilizes application triggering (device triggering) via SMS over NAS method specified in 3GPP TS 23.501 [5] to inform the EEC of the need to perform service provisioning.\n-\tSolution #20: Propagation of EEL notifications to EEC using Edge Notification Server\n-\tIt proposes a centralized notification server, called Edge Notification Server, to enhance EEL's notifications delivery mechanism to EEC. The proposed Edge Notification Server interacts with EEC, EES and ECS respectively via the newly proposed interfaces as described in the clause 6.3.\nThe Solution #1 provides detailed operations of EEC and ECS to enable the service provisioning via the push notification mechanism.\nThe Solution #3 provides a detailed interaction between EEC and ECS to check if the SMS over NAS is supported and accompanied EDGE-8 operation of ECS for triggering EEC to perform service provisioning request.\nThe Solution #20 provides architecture enhancements using an Edge Notification Server, which is an optional functional entity. It also proposes a detailed role of the Edge Notification Server and procedures between ENS and other functional entities (EEC, EES and ECS). The Edge Notification Server functionality will be specified as generic notification service in SEAL TS 23.434 [23] by generalizing to vertical applications. Edge Notification Server functionality leverages generic notification service from SEAL TS 23.434 [23].\nThe above enhanced notification services utilizing push notification, application triggering via SMS over NAS and leveraging generic notification service from SEAL in lieu of Edge Notification Server will be addressed in the normative phase.\nPush notification service in Solution #20 will be leveraged (including generic notification service from SEAL TS 23.434) by Solution #1, during service provisioning.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.2\tKey issue #2: Enablement of Service APIs exposed by EAS",
                            "text_content": "The open issues studied in the key issue #2 are as follows:\n1.\tIdentify any gaps in CAPIF to enable EAS Service APIs in the EDGEAPP architecture in terms of e.g. service-specific attributes for API publish/discovery, API availability subscription/notification across EES/CCF\n2.\tIf any, whether and how to enhance CAPIF capabilities to address the gap identified as above\nIn order to address the open issues aforementioned, there are two solutions proposed as follows:\n-\tSolution #8: EAS Service API enablement using CAPIF\n-\tIt exploits CAPIF as specified in 3GPP TS 23.222 [16] to support publication/discovery, and change subscription of EAS Service APIs for API invoking by the other EASs\n-\tSolution #11: A deployment option for alignment with ETSI MEC using CAPIF\n-\tIt exploits CAPIF as specified in 3GPP TS 23.222 [16] as a deployment option for exposing EAS Service APIs to ETSI MEC entities (i.e. MEP and MEC applications)\nThe Solution #8 provides 1) a detailed role of EAS and EES as CAPIF entities in order to support publication/discovery, and change subscription of EAS Service APIs; and 2) a new IE, Service KPIs, for CAPIF APIs.\nThe Solution #11 provides a detailed role of EAS and EES as CAPIF entities in order to support discovery and invocation of EAS Service APIs for ETSI MEC entities.\nEES supporting EAS's and other entity's (e.g. ETSI MEP or MEC App.) access to service APIs exposed by other EAS, in the context of CAPIF, will be addressed in the normative phase. The newly identified IE for CAPIF APIs has an impact to 3GPP TS 23.222 [16] to be addressed in the normative phase.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.3\tKey issue #3: Enhancements to service continuity planning",
                            "text_content": "The open issues studied in the Key Issue#3 are as follows:\nOpen Issues:\n1.\tHow to rely on the capability of EES/EEC to detect whether the UE moves to the predicted location or not for service continuity planning?\n2.\tWhether and how the EEL can support the determination of the ACR request trigger timing in case of service continuity planning?\n3.\tHow to deal with scenarios when the ACR needs to be modified, e.g. due to UE mobility?\n4.\tWhether and what additional capability exposure is required from the 5GS (e.g. NWDAF, OAM) to enhance the service continuity planning?\n5.\tPotential impact on information exchanged between EAS and EEL.\n6.\tPotential impact on information to communicate within the EEL.\nThis clause provides an overall evaluation of the key issue #3: Enhancements to service continuity planning. The solution #6, solution #7, solution#12, solution#21, solution#37 cover different aspects for the open issue in the KI#3.\nSolution#6 addresses the open issue #3 by introducing a new procedure to modify ACR parameters. Specifying the signaling required for the procedure are to be addressed in the normative phase (without impacting AC).\nThe solution #7 is used for solving the open issue#6. And solution #7 is applicable to the scenario where the EAS may not have the capability of monitoring the UE mobility for service continuity planning. Solution #7 will not impact the EDGEAPP architecture defined in the Rel-17.\nThe Solution #12 enables to allow the service continuity planning selectively for a given UE or an application. This principle of Solution # 12 is that the permission of service continuity planning can be determined by the EES for the purpose of service differentiation, then the EEC performs the required detection or acquisition of the planned or predicted UE mobility behaviour for the EASs allowed for service continuity planning according to the determined ACR modes. The principle of solution #12 is to be addressed in the normative work. Further investigation in normative work is required for sol#12 to evaluate backward compatibility issue inthis solution.\nSolution #21 addresses KI#3 by including a prediction expiration time within ACR request from the EEC. This information can be used by T-EAS to adjust its waiting time for the UE to reach the service area. It is proposed to update the ACR request in normative phase to include prediction expiration time.\nSolution #37 covers open issue #2, open issue #5, and open issue #6 of KI#3. It introduces \"General context holding timing\" IE in the EAS profile. This information can be used by the EEC to trigger ACR request before reaching T-EAS service area when predicted or planned to move to the service area within the time provided in the IE. It is proposed to update TS 23.558 according to what is proposed in solution #37 in the normative phase.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.4\tKey issue #4: EDGE-5",
                            "text_content": "KI#4 required study of multiple open issues related to the interface between the Application Client and the Edge Enabler Client.\nSolution #34 provides a set of procedures that fulfil the open issues. No need to modify the cardinalities of EDGE-5 interface were identified during the study. The solution provides methods for an AC to register to an EEC, perform EAS discovery, perform ACR related requests in different modes and subscribe for EEC capabilities. Architecture enhancement option#4 depicts how constrained devices such as TEs can utilize EDGE-5 to communicate with an EEC running on a UE.\nNo need was identified during the study to provide methods for discovery of EECs by the AC or for detection of abnormal termination of EEC or ACs.\nAspects related to mutual authentication, authorization and user consent are SA3's responsibility. Any recommendation from SA3 shall be considered during normative phase.\nNOTE:\tCoordination with CT groups is required for this KI.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.5\tKey issue #5: Alignment of EDGEAPP and ETSI MEC",
                            "text_content": "The open issues of this KI are as follows:\n1.\tStudy and analyse different deployment options of EDGEAPP and ETSI MEC platforms.\n2.\tFunctional architecture and gap analysis between EDGEAPP and ETSI MEC to determine complementary and possibly overlapping APIs and other related functionalities. Annex A captures a comparison of the architectures to facilitate the gap analysis.\n3.\tRecommendation and enhancements based upon the outcome of (1) and (2).\nThe principle and requirements for the alignment of EDGEAPP and ETSI MEC have been captured in clause 5.4, where the following alignment aspects have been listed:\na.\talignment of EAS profile (EDGEAPP) and appInfo (ETSI MEC),\nb.\talignment of EDGE-3/Mp1 reference points\nc.\talignment of EDGE-9/Mp3 reference points\nd.\tusage of CAPIF between the two architectures\nAdditionally, two solutions have been proposed to address the above open issues:\n-\tSolution #11: This solution relies on the EDGEAPP architecture as specified in TS 23.558 [2] and CAPIF as specified in TS 23.222 [16].\n--\tThe solution extends the roles of EAS, EES and ETSI MEC entities like MEP as CAPIF entities to support the alignment of discovery and invocation of EES/EAS Service APIs and MEC Services by ETSI MEC and EDGEAPP entities, respectively.\n--\tThe solution addresses alignment aspect d in clause 5.4.\n-\tSolution #36: This solution is based on the principles set in clause 5.4 and provides a mapping between overlapping APIs in EDGEAPP and ETSI MEC.\n--\tThe solution addresses the alignment aspects a, b and c in clause 5.4.\n--\tThe solution enables the application to perform registration on EES according to the mapping between appInfo [14] and EAS profile. This aspect of the solution addresses the alignment aspects a and b in clause 5.4.\n--\tThe solution in the present study does not identify overlap or equivalent functionality between the APIs on EDGE-9 and Mp3 interfaces; therefore, currently no alignment is required. This aspect of the solution addresses the alignment aspect c in clause 5.4.\nThe solutions do not require changes in architecture and procedures.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.6\tKey issue #6: Edge services support across ECSPs",
                            "text_content": "The open issues of this KI are as follows:\n1.\tIdentify potential enhancements to the existing architecture defined in Rel-17 to enable inter-ECSP interactions.\n2.\tStudy potential impact to support ECS discovery and service provisioning based on UE location.\n3.\tWhether and how EEC registers with an EES deployed by a partner ECSP?\n4.\tStudy potential impact to support service continuity.\n5.\tHow is EEC context continuity maintained across ECSPs with or without ACR?\n6.\tHow the ECS can discover a T-EES having SLA with S-EES based on the federation agreements between ECSPs before EDGE-9 interaction?\nTo address the open issues the following solutions has been proposed:\n-\tSolution #4: ECS discovery through serving ECS to support edge services across ECSPs\n-\tAfter discovering another ECS2 which may have suitable EES, the ECS1 sends respond to the EEC or source EES with the ECS2 information. Then the EEC or source EES can send the request to the ECS2 directly to retrieve suitable EES.\n-\tSolution #4 relies on having sufficient information (e.g. ECSP policy, UE-specific service information, or ECSs information) configured or available in an ECS to determine candidate.\n-\tSolution #5: ECS enhancement to discover EESs via other ECSs to support edge services across ECSPs\n-\tThe EEC or the EES gets the requested EES information from ECS2 via ECS1. If the ECS1 cannot discover a suitable EES to serve the UE at the current location (e.g. all the EESs registered on the ECS1 do not cover the given UE location), the ECS1 contacts another ECS2 which may have suitable EES and discovers the EES via ECS2.\n-\tSolution #5 relies on preconfigured information of ECS2 at ECS1.\nNOTE: In Solutions #4 and #5, to configure sufficient information to the ECS, the ECS(s) information related to other ECSPs may be available at the OAM system due to the inter-ECSP relationship establishment, which is then used by the OAM system of an ECSP to configure its ECS. If required, the information of available applications in a partner ECSP and the corresponding service areas are included in the configured information. Inter-ECSP relationship establishment is according to the business relationship between the ECSPs and is out of the scope of SA6. The OAM to configure its ECS for inter-ECSP relationship is under the scope of SA5.\n-\tSolution #13: Update ECS configuration information\n-\tThis solution proposes to include additional optional IEs in the ECS configuration information. The information can be used in solutions 4 and 5 to find and select ECS2. ECS information shared in Solution 13 is limited to the ECSs whose information is available through H-PLMN.\n-\tSolution #50: Enhanced ECS for federation of services\n-\tWhen configured information is not available with the ECS, with the enhancement proposed in this solution ECS can query an ECS-ER to obtain information of partner ECS that provide service provisioning for a particular application. This allows to reduce the time required to provide service provisioning response while ensuring that the required application is available.\nSolution #5 is applicable to scenarios where the UE has home routing agreement with its service provider for service provisioning.\nSolution #13 provides additional optional IEs to be used within solution #4 and #5 to find and select ECS2.\nSolution #50 can be used along with solution #4, solution #5 and solution #13.\nAll the above solutions will use any agreed solution for determining ECS2 by ECS1.\nDetailed signalling to provide ECS2 address to the requesting EEC or EES based on solution #4 is to be addressed in normative phase. Signalling between ECS1 and ECS2 to discover and retrieve provisioning to the requesting EEC or T-EES for the requesting EES will be addressed in normative phase according to solution #5. A new interface EDGE-10 between ECS1 and ECS2 is used in Solution #5. Also, in normative phase, if required, the additional optional IEs are added to ECS configuration information provided by ECS to 5GC according to Solution #13.\n10.2.7\tKey issue #7: Application traffic filter exposure\nThe open issues studied in the key issue #7 are as follows:\n1.\tHow to support more application traffic filter for session with QoS API.\n2.\tHow to support more application traffic filter for ACR management event API.\nTo address the open issues aforementioned, solution 2 is proposed as follows:\n-\tSolution #2: Traffic filter support for EDGE-3 API addressing application traffic detection\n-\tAllows the EAS to provide the domain name as traffic descriptor (indicates the applicable protocol and matching criteria) to the EES, which further invokes the PFD management procedure with the 3GPP CN as described in 3GPP TS 23.682 [10] and 3GPP TS 23.502 [8].\nThe Solution #2 provides detailed operation between EAS and EES for specific filters, and the EES invoking the PFD management procedure with the 3GPP CN.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.8\tKey issue #8: EAS selection synchronization",
                            "text_content": "Solution #39 addresses KI#8 about how to enable the EES to leverage pre-existent EAS information at the EEC in order to enable service session communications efficiently for IoT devices. The solution proposes EAS selection request indicator to be sent in EEC registration request (for constrained device) to request the EES for EAS selection support. If the indication is present, the EES includes discovered EAS list along with EAS profile in the response.\nSolution #15 allows the EES to be informed of the EAS selected by EEC when the initial EAS services start, so that the EAS selection information is synchronized between the EEC and EES. This solution provides the option for registered EECs to use the existing EEC registration update to provide this information. It also provides the option, for any EEC, to use a new proposed API to provide this information to the EES.\nSolutions #39 and #15 are complementary and are both viable.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.9\tKey issue #9: Enhancement of dynamic EAS instantiation triggering",
                            "text_content": "The open issues studied in the key issue #9 are as follows:\n1.\tWhat kind of information can be acquired by edge enabling layer and utilized by an EES to decide to trigger dynamic EAS instantiation and which entities can provide such information to an EES\n2.\tWhether and how to support dynamic EAS termination triggering in order to enable dynamic scaling of EAS (i.e. scale in as needed).\nTo address the first open issue, the following solutions have been proposed:\n-\tSolution #32: Dynamic EAS instantiation triggering and notification\n-\tproposes that the EES determines if EAS instantiation triggering is needed when EAS discovery subscription request is received from the EEC and no available EAS instances are matched.\n-\tproposes that the triggering determination is based on the EAS availability, according to the EAS discovery filter and EAS service load/capacity\n-\tSolution #33: Support for EEC Discovery of EAS(es) before instantiation\n-\tthe pre-condition is that EAS instantion status (e.g. instantiated or instantiable, but not yet instantiated) is not included in EES profile.\n-\tproposes that the EEC obtains the EAS instantiation status in EAS profile through EAS discovery procedure.\n-\thas the different EES behavior with R17 when receiving the EAS discovery request message, i.e. the EAS instantiation is suspended.\n-\tproposes that the EES determines if EAS instantiation triggering is needed when it receives an EAS selection message from the EEC indicating the intention of the EEC to use an EAS.\n-\tproposes that the triggering determination is based on the EEC intention of using an EAS and on the EAS availability.\n-\tSolution #40: EAS instantiation status provisioned by ECS\n-\tthe pre-condition is that EAS instantiation status  (e.g. instantiated or instantiable, but not yet instantiated) is included in EES profile.\n-\tproposes that the EEC obtains the EAS instantiation status in EES profile through service provisioning procedure.\n-\tproposes that the EEC performs EES selection according to the EAS instantiation status.\n-\tproposes that the EES determines if EAS instantiation triggering is needed when it receives an EAS discovery message from EEC, this is consistent with R17, and no new message is introduced.\n-\tproposes that the triggering determination is based on the EAS availability.\n-\tSolution #42: EAS selection and instantiation in EES\n-\tthe pre-condition is that EAS instantiation status  (e.g. instantiated or instantiable, but not yet instantiated) is not included in EES profile.\n-\tproposes that the EEC indicates EES (e.g. via UE type) to request EES to select and instantiate (if needed) EAS.\n-\tproposes that the triggering determination is based on the the EAS availability.\nSolutions high level overview:\n-\tSolution #32 clarifies aspects of EAS instantiation present in Rel-17 TS 23.558 and does not introduce new functionality.\n-\tSolution #33, solution #40 and solution #42 introduce changes for making uninstantiated EAS identified before selecting one to minimize EAS resources usage in the EDN for use cases with different pre-conditions (e.g. whether the EAS instantiation status is included in the EES profile).\n\nAn aspect cited in Key Issue #9 is how to \"ensure efficient utilization of EDN resources for EAS deployment, it should be possible to have the proper number of EAS instances in the EDN to accommodate the load for applications\"\nSolution #32 on EDN resource utilization\n-\thas the limitations of Rel-17: every possible EAS type (e.g. EASID) needs to be instantiated in every EDNs where they are offered to be discoverable, and every EES instance offering an EAS type must have at least one EAS instance registered to be discoverable.\nSolution #33, solution #40 and solution #42 on EDN resource utilization\n-\timproves Rel-17: all possible EAS types (e.g. EASIDs) do not need to be instantiated to be discoverable.\nAnother aspect is the difference in EEC obtaining EAS instance.\n-\tIn solution #33, EAS discovery procedure is enhanced to identify the EAS before instantiation, and introduce a new EAS selection message to obtain the instantiated EAS instance after successful instantiation.\n-\tIn solution #40 and solution #42, instantiated EAS instance is discovered in EAS discovery response after successful instantiation.\nThe second open issue is not addressed by the above solutions. Thus, the second open issue will not be pursed in this release. It is not resolved how to address the issue that dynamic termination triggering may be triggerd unexpectedly for an operator and has a significant impact on operational management. Scaling is also an operational aspect and is included in the scope of SA5. Main purpose of using scaling is to ensure a stable operation of a system or service.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.10\tKey issue #10: Support for Roaming UEs",
                            "text_content": "This clause provides an overall evaluation for Key Issue #10, \"Support for roaming UEs\".\nSolution #4, Solution #5, Solution #13, and Solution #14 and Solution #50 all address aspects of Key Issue #10.\nOne aspect of Key Issue #10 is how the EEC in the roaming UE knows the availability of ECS(s) and discovers them in the VPLMN.\n-\tSolution #4 and Solution #14 share the principle that the home network can provide the EEC in the UE with information that is used to contact a V-ECS. In both solutions, this information is provided in the Service Provisioning Response.\n-\tIn solution #4, the V-ECS information can be an address, endpoint or service API information.\n-\tIn Solution #14, the V-ECS information can include an FQDN or an IP Address of a V-ECS.\n-\tIn Solution #14, the V-ECS information can include a DNN (O) and/or S-NSSAI (O). The DNN / S-NSSAI can be used to establish an LBO PDU Session. Once the UE establishes an LBO PDU Session, Rel-17 procedures can be used to discover the V-ECS address.\n-\tIn Solution #13, it is proposed that PLMN ID(s) can be sent with ECS Address Configuration Information. As in Rel-17, ECS Address Configuration Information is sent to the UE by the SMF during PDU Session Establishment and/or PDU Session Modification.\n-\tIn Solution #5, V-ECS address information is not sent to the UE.\nAnother aspect of Key Issue #10 is how the EEC in the roaming UE knows the availability of EES(s) and discovers them in the VPLMN.\n-\tSolution #4, Solution #14, and Solution #13 share the principle that the EEC in the UE is provided with information to contact ECS(s) in the VPLMN. The EEC can then contact an ECS in the VPLMN to discover EES(s) in the VPLMN.\n-\tIn Solution #5, the H-ECS uses the EDGE-10 interface to obtain information from the V-ECS about what EES(s) are available in the VPLMN. The H-ECS then sends the information about the EES(s) in the VPLMN to the EEC in the Service Provisioning Response.\nAnother aspect, which is addressed by all Key Issue #10 solutions, is what information the HPLMN uses to determine what information about edge computing services in the VPLMN to send to the UE.\n-\tIn Solution #13, ECS Address Configuration Information(s) can be stored in the UE's subscription and PLMN ID(s) can be stored with each ECS Address Configuration Information. The SMF sends all ECS Address Configuration Information(s) and PLMN ID(s) from the UE's subscription to the UE. The UE can determine what ECS Address Configuration Information(s) to use based on what PLMN it is registered to.\n-\tSolution #4, Solution #5, and Solution #14 share the principle that the ECS uses the PLMN ID of the PLMN where the UE is currently registered to determine what information about edge computing services in the VPLMN to send to the UE.\n-\tThe Rel-17 Service Provisioning Request can already include the UE Location. The UE Location can be expressed as a Tracking Area Identity. The Tracking Area Identity includes a PLMN ID.\n-\tSolution #4 and Solution #5 share the principle that, if location is not included in the Service Provisioning Request, the ECS interacts with the Core Network to obtain the UE's location. Allowing the ECS to obtain the UE's location in this manner can be done with minimal impact to normative specifications. For example, the ECS can obtain the UE's location by invoking existing NEF API(s).\n-\tIn Solution #4, Solution #5 and Solution #14, if a VPLMN ID is not included in the Service Provisioning Request, the ECS obtains the PLMN ID by interacting with the Core Network. Solution #14 explains that the ECS can do this by invoking the NEF's monitoring event API with the monitoring type set to ROAMING_STATUS and the plmnIndication set to TRUE as described in 3GPP TS 29.522 [17] and 3GPP TS 29.122 [18]. Allowing the ECS to obtain the UE's PLMN ID in this manner can be done with minimal impact to normative specifications. For example, the ECS can obtain the UE's location by invoking the existing NEF monitoring event API.\n-\tSolution #4 relies on having sufficient information (e.g. ECSP policy, or UE-specific service information, or ECSs information) configured or available in an ECS to determine candidate ECSs.\n-\tSolution #5 relies on preconfigured information of ECS2 at ECS1.\nNOTE 1:\tIn Solutions #4 and #5, to configure sufficient information to the ECS, the ECS(s) information related to other ECSPs may be available at the OAM system due to the inter-ECSP relationship establishment, which is then used by the OAM system of an ECSP to configure its ECS. If required, the information of available applications in a partner ECSP and the corresponding service areas are included in the configured information. Inter-ECSP relationship establishment is according to the business relationship between the ECSPs and is out of the scope of SA6. The OAM to configure its ECS for inter-ECSP relationship is under the scope of SA5.\nNOTE 2:\tIt cannot be assumed that all ECS(s) will have access to NEF API(s).\nAnother aspect, which is addressed by all Key Issue #10 solutions, is how the HPLMN obtains the information about edge computing services in the VPLMN to send to the UE. Solution #4, Solution #5, Solution #13, and Solution #14 all require that the home network (i.e. the H-ECS or H-SMF) determine what V-ECS(s) that are used by the EEC. In Solution #4, Solution #13, and Solution #14 the information about the V-ECS(s) is sent to the EEC. In Solution #5, the V-ECS(s) are contacted by the H-ECS to obtain EES information to the send to the EEC. In Solution #4, Solution #5, Solution #13, and Solution #14, the home network (i.e. the H-ECS or H-SMF) must determine what V-ECS(s) that are used by the UE.\n-\tIn Solution #13, ECS Address Configuration Information(s) is stored in the UE's subscription as is done in Rel-17. The information for each V-ECS that the UE can use would need to be stored in the UE's subscription. ECS information shared in Solution 13 is limited to the ECSs whose information is available through H-PLMN.\n-\tIn Solution #4, the ECS of the HPLMN uses the location information and/or VPLMN ID to discover what V-ECS information (e.g. address, endpoint or service API information) to send to the UE. The discovery can be based on pre-configuration or the H-ECS can discover service API information exposed by that ECS via CAPIF discovery procedure as specified in TS 23.222 [16]\n-\tIn Solution #5, the ECS of the HPLMN uses the location information and/or VPLMN ID to discover V-ECS information (e.g. address, endpoint or service API information). The discovery can be based on pre-configuration or the H-ECS can discover service API information exposed by that ECS via CAPIF discovery procedure as specified in TS 23.222 [16]. The H-ECS then queries the V-ECS to obtain EES information to send to the UE. It is assumed that the ECS uses existing Rel-17 mechanisms from TS 23.558 [2] to determine what EES information to send to the EEC. For example, the ECS can identify the EES(s) based on the provided AC profile(s), the UE location, UE-specific service information, or an ECSP policy.\n-\tIn Solution #14, the ECS of the HPLMN uses the VPLMN ID to discover V-ECS information (e.g. address, endpoint or service API information). The H-ECS then uses the EDGE-10 interface to query the V-ECS to obtain information to send to the UE. The query can include the UE's location and the information that is sent to the UE can be a DNN / S-NSSAI combination that can be used by the UE to establish an LBO PDU Session in the VPLMN. The V-ECS can use the UE's location to determine what DNN / S-NSSAI combination that is sent to the UE in order to cause the UE to establish an LBO PDU Session. The H-ECS can use the PLMN ID to determine the V-ECS to contact. For example, this can be based on a DNS lookup or the addresses of V-ECSs can have been pre-configured in the H-ECS (e.g. via OAM). If the VPLMN hosts multiple V-ECSs, then which V-ECS is resolved can be based on configuration.\n-\tIn solution #14, H-ECS uses UE location, in its request towards V-ECS.\n-\tSolution #5 and Solution #14 both involve interaction between the V-ECS and H-ECS and both solutions largely rely on pre-configuration for how the H-ECS determines what V-ECS to contact. Since there can be multiple ECSs (e.g. from different ECSPs) deployed in the V-PLMN, it can be crucial to contact appropriate ECS based on EEC's requirements provided in the service provisioning request or EES's requirements provided in the retrieve T-EES request, e.g. in case of service continuity situation. Also, EDGE-10 enhancements based on solutions to other key issues (e.g. Key Issue #6) might be considered in order to allow the H-ECS to perform a more dynamic discovery, or determination, of the V-ECS to contact.\nInformation of the V-ECS associated with the V-PLMN is assumed to be available at the H-ECS e.g. through pre-configurations.\nNOTE 3:\tOne V-ECS can be shared across multiple PLMNs for roaming related service provisioning.\nAn important point of Key issue #10 is that the UE needs to obtain information for V-ECSs (ECS available in VPLMN) to obtain service provisioning information in VPLMN.\n-\tIn solution #13, the new information that is sent to the UE is the PLMN ID(s) with ECS Address Configuration Information.\n-\tIn solution #4, the new information that is sent to the EEC in the UE is V-ECS address, endpoint or service API information.\n-\tIn solution #5, the new information that is sent to the EEC in the UE is VPLMN EES Information in the Service Provisioning Response from the H-ECS.\n-\tIn solution #14, the new information that is sent to the EEC in the UE is a V-ECS address or a DNN / S-NSSAI combination that can be used by the EEC to establish an LBO Session in the VPLMN.\nSolution #50 provides enhancements so that an ECS can query an ECS-ER to obtain information of partner ECS that provide service provisioning for a particular application. This allows to reduce the time required to provide service provisioning response while ensuring that the required application is available with the V-ECS when configured information is not available with the ECS. Solution #50 can be used along with Solution 4, Solution 5, Solution 13 and Solution 14.\nWhen the EEC contacts an H-ECS, there are cases where the H-ECS can detect that the UE is roaming and can obtain service provisioning from a V-ECS. In Rel-18, the Service Provisioning Response will be updated to allow the H-ECS to provide a V-ECS information to the EEC on EDGE-4. As described in Solutions #4 and #14, the V-ECS information sent to the EEC can include address (FQDN or an IP Address), endpoint or service API information of a V-ECS.\nThere are deployment scenarios where the EEC needs to access the ECS via an LBO session. There are cases where the UE is not pre-configured with an DNN / S-NSSAI combination that can be used to establish an LBO PDU session that can be used to reach the V-ECS. Thus, as described in Solution #14, the Service Provisioning Response will be updated to allow the H-ECS to provide a DNN / S-NSSAI combination to the EEC. The DNN / S-NSSAI combination can be used by the EEC to establish an LBO PDU Session in the VPLMN. Per existing Rel-17 behaviour and as defined in TS 23.548 [19], if the EEC does not have contact information for a V-ECS, the EEC can obtain V-ECS Address Configuration information from the V-SMF during PDU Session Establishment.\nIn Rel-17, it is already possible for an H-SMF to provide ECS Address Configuration information to the UE during PDU Session Establishment or in a PDU Session Modification Command. As explained in TS 23.548 [19] \"The UDM in the HPLMN can provide the SMF (in HPLMN in HR case, in VPLMN in LBO case) with ECS address configuration information that depends on the serving PLMN of the UE.\" The Rel-17 approach requires that the UDM detect when the UE's serving PLMN changes and only sends the UE ECS Address Configuration information that is associated with the PLMN that is currently serving the UE. In Rel-18, the principles of Solution #13 will be followed so that the UE ECS Address Configuration information that is sent to the UE during PDU Session Establishment and PDU Session Modification can include PLMN ID(s).\nAs described in Solution #5, there are cases where the H-ECS is able to provision the EEC with information about EES(s) that are in the VPLMN. The H-ECS can use the EDGE-10 to obtain information from the V-ECS about what EES(s) are available in the VPLMN. The principles of Solution #5 will be followed to enhance the Service provisioning procedure to allow the H-ECS to provide the EEC with information about EES(s) in the VPLMN.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.11\tKey issue #11: ACR between EAS and Cloud Application Server",
                            "text_content": "There are two solutions in the TR, CES-less solution is described in solution #25, and solution with CES is described in solution #24.\nWith CES, ACR feature parity can be supported in the ACR between CAS and EAS utilizing all EDGEAPP developed features (e.g. AS discovery, AS registration). Comparing to CES-less solution, it needs a new function entity in the central DN to support CAS, and CES is part of the EEL. The CES has the same functions as the EES without having service area restriction. The CAS registers in CES in order to be discoverable by the EEC using EDGEAPP EAS discovery mechanism, the CES registers in ECS in order to be discoverable by the EEC using EDGEAPP service provisioning procedure. CAS registration to CES is an additional functionality that need to be supported for all CAS(s).\nFor CES-less solution as described in solution #25, it has a mixed use of regular DNS query and EDGEAPP EAS discovery. When a T-EAS cannot be discovered using the EDGEAPP mechanism, EDGEAPP entities (e.g. AC) falls back to regular DNS query. It supports ACR scenarios as described in solution #25 for ACR from EAS to CAS, it also supports ACR scenarios for ACR from CAS to EAS.\nBoth solutions can be considered in the normative work, the CES can be considered as an optional entity in the EDGEAPP architecture. They share the same EDGEAPP EAS discovery/service provisioning procedure when trying to discover appropriate EAS. If there is CES available and registered in the ECS in the network, the EDGEAPP mechanism returns CES in service provisioning response to the EEC/S-EES or the S-EAS obtains CAS from CES via S-EES based on the request from EEC/S-EES or the S-EAS to initiate ACR to Cloud and EDGEAPP mechanism follows; otherwise, regular DNS is used to find CAS due to EDGEAPP mechanism failure (no EES configuration or T-EAS is not discoverable).\nWhat functionalities of EDGE-9 and EDGE-6 are to be reused for EDGE-14 and EDGE-15 respectively in clause 6.5 and the detailed differences for EDGE prime reference points and the cardinality rules in clause 6.6, will be addressed in the normative phase.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.12\tKey issue #12: EEL service differentiation",
                            "text_content": "Solution #12 (Service continuity planning permission) address KI #12.\nSolution #12 allows ECSPs to selectively enable service continuity planning based on policy authorization for EEC’s service continuity capability. The EEC provides its capability to perform service continuity planning and request permission for service continuity planning. The EES verifies the use and provides the response whether service continuity planning is allowed for the EEC or not.\nThe solution#51 addresses KI#12. The solution proposes to enhance the EEL specifically EEC registration and EEC registration update procedures to provide indication whether the UE requires mobility support or not to the EES.\nSolution #52 provides an option to provide service differentiation for EES users to address KI #12. It also provides a way to address the corresponding EES having valid PLMN subscription data for the EES users which improves the service provisioning procedure.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.13\tKey issue #13: Edge enabler layer support for EAS synchronization",
                            "text_content": "This clause provides an overall evaluation for the key issue #13 Edge enabler layer support for EAS synchronization.\nThe open issues include:\n1)\tWhether and how to enable EAS to find other EAS(s) with multi-user communication session to synchronize?\n2)\tWhether and how to enable EAS to find other interested EAS(s) with specific service to synchronize?\n3)\tWhether and how to enable EAS to discover and interact with another application server function deployed on the cloud for context synchronization?\n4)\tWhether and how edge enabler layer could provide support to EAS synchronization?\nOpen issues 1) and 2) requires discovering of another EAS for specific service to synchronize. Clause 7.31.2.4 of solution #31 (Discover common EAS) addresses these two open issues by determining other EESes for announcing selected EAS information for specific service.\nFurther, regarding open issue 4) about edge enabler layer providing support to EAS synchronization, clause 7.31.2.4 of solution #31 specifies selected EAS notification to relevant EASs via EDGE-3. However, the details of actual EAS to EAS synchronization itself is out of scope of this solution.\nSolution #53 (Support for EAS synchronization) addresses KI#13. The solution enhances the EAS registration and Target EAS discovery procedure. The solution enables the EAS to discover another EAS(s) with support for content synchronization.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.14\tKey issue #14: Application traffic influence for initially selected EAS",
                            "text_content": "This clause provides an overall evaluation of the key issue #14 Application traffic influence for initially selected EAS. The solution #9, solution #15 and solution #17 are complementary to each other.\nThe solution #9 is applicable to the scenario where the EAS triggers the EES to perform traffic influence without necessitating requests to be made on a per UE basis.\nThe solution #15 is applicable to the scenario where the EEC (or AC and EEC) selects the EAS after EAS discovery and then provides a selected EAS declaration request to the EES, which may be used by the EES to make traffic influence decisions if those haven't already been performed.\nThe solution #17 is applicable to the scenario where the EES selects the EAS and performs traffic influence immediately for the selected EAS after EEC sent EAS discovery request based on attributes in the EEC provided AC profile, providing the selected EAS to the EEC in the EAS discovery response.\nAll 3 solutions result in network resources being reserved to varying degrees before actual use, where this may be lower in the UE specific solutions of solution 15 and 17.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.15\tKey issue #15: Support of constrained devices for Edge",
                            "text_content": "The open issues of key issue #15 are as follows:\n-\tWhether there are any impacts on the EDGEAPP architecture for constrained UE.\n-\tWhether and how the existing EDGEAPP architecture and procedures, for constrained UE to network communication (i.e. EDGE-1 and EDGE-4), e.g. can be improved to reduce power consumption.\nTo address the first open issue, architecture enhancement evaluation in clause 10.1.1 will be considered in the normative work.\nTo address the second open issue, solution #18 provides EAS discovery procedure enhancement and the minimum supported procedures for ACR to reduce power consumption in UE with EEC with reduced capabilities.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.16\tKey issue #16: support of NAT deployed within the edge data network",
                            "text_content": "The open issues of key issue #16 are as follows:\n-\tHow the EES can access 3GPP network services pertaining to a UE when the edge data network employs Network Address Translators (NATs).\n-\tHow AF specific and temporary UE IDs can be managed at the Edge Enabler Layer?\nSolution #23 solves these open issues by reusing SA2 defined CN capability (Nnef_UEId_Get) to translate UE’s private IP address to it UE ID. The solution also allows the EES to convert the CN or EEC provided UE ID to Edge UE ID, which is managed by the EES. The Edge UE ID can be specific to the EAS and can be temporary as required. Support from SA2 is required to address potential IP address overlap issues in some network deployments. Support from SA3 is required for any security related issues. As an alternative, if SA2 supports translation of the globally unique EECID to UE ID, then the EEC would not be required to provide either its private IP address or MSISDN and the potential IP address overlap issue is avoided.\nAs a further alternative, if SA2 supports translation of UE’s public IP address to its UE ID, EES can use the public IP address for translation. In this case, EAS can also provide UE’s public IP address to the EES over EDGE-3 UE ID API defined in Rel-17 TS 23.558 [2].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.17\tKey issue #17: Discovery of a common EAS",
                            "text_content": "The open issues of key issue #17 are as follows:\n1)\tWhether and how the ACs/EECs of different users can select or be provisioned the same EAS within an EDN?\nNOTE:\tThis open issue is dealing with the issue how different EECs can perform EAS discovery so that they select the same EAS within an EDN, whereas KI#13 is dealing with the issue how, after different EECs have selected different EASs located in different EDNs, these EASs can synchronize their contexts.\n2)\tWhether and how the ACs/EECs of different users can select or be provisioned a common EAS, even if initially the EECs are communicating with different EDNs?\n3)\tWhether and how the EEL can support service continuity to ensure that when ACs require the use of service from a common EAS and an ACR operation is needed, ACR operations can be coordinated so that upon completion of the ACR operations the ACs again have services provided by a common EAS.\nSolution#31 complements solution#27, when there is a centralized repository deployed in an ECSP provider (common to solution #27 and solution#30).\nSolution#31 complements solution#29 when there is no centralized repository deployed by an ECSP provider.\nSolution#28 is mostly application layer implementation, with minimum enhancements to the mechanisms in Rel-17.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.18\tKey issue #18: EAS bundles",
                            "text_content": "The open issues of key issue #18 are as follows:\n-\tHow can the EEL identify EAS bundles?\n-\tWhat are the impacts on EEL procedures due to EAS bundles e.g. when the bundled EASs are served by the same EES and require ACR due to UE mobility?\nSolution #26 solves these open issues by enhancing the AC, EAS and EES profiles. Enhancements include adding EAS bundle information and EAS bundle requirements in the identified profiles. The solution also enhances EAS discovery filters and Retrieve EES request. Further, handling of these IEs at the EEC, EES and ECS is also described.\nSolution #46 and solution #47 address the KI#18. To satisfy the coordinated ACR requirements (i.e. the bundled EAS may need to be relocated together), the EEC or the EES can act as decision entity to dertermine ACR scenario selection for EAS bundles, based on the AC/EEC/EES(s)/EAS(s) abilities of handling bundled EAS ACR.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.19\tKey issue #19: ACR scenario combination",
                            "text_content": "This clause provides an overall evaluation of Key issue #19, \"ACR scenario combination\".\nSolution #19, Solution #35 and Solution #38 address aspects of Key issue #19.\nAn open issue that is cited in Key Issue #19 is whether \"Different combinations of utilizing ACR scenarios by Applications should be enabled by the Edge Enabler Layer (e.g. only one ACR scenario allowed or several ACR scenarios allowed).\". All solutions agree that ACR scenario(s) combination should be allowed.\n-\tSolution #19 has the following notes which suggest that a single ACR scenario or multi-ACR scenarios are allowed.\n-\t\"NOTE 1:\tUsing multiple ACR scenario can detect ACR timely\"\n-\t\"NOTE 2:\tThe selection of a single ACR scenario and therefore single ACR detection entity may not be suitable for time sensitive applications\"\n-\tSolution #35 proposes to establish an ACR scenarios list which can include zero ACR scenario or a single ACR scenario or multi-ACR scenarios.\n-\tSolution #38 proposes to coordinate multiple ACR decision making-entities suggesting that multi-ACR scenarios are allowed.\nWhich EEL entity selects the ACR scenario(s) combination? Solution #19 and Solution #35 take a different approach.\n-\tSolution #19 proposes the EES to select a single ACR scenario or multi-ACR scenarios when requested by the EEC. Solution#19 is applicable to the scenario where the EES determines the ACR scenario for the AC based on the EAS, EES, EEC, AC service continuity support.\n-\tA new ACR scenario selection request is needed to provide AC and EEC service continuity information to the EES, and the EES already knows EES/EAS service continuity information\n-\tSolution #35 proposes the EEC to select zero ACR scenario or a single ACR scenario or multi-ACR scenarios when the EAS is selected at the EEC. Solution#35 is applicable to the scenario where the EEC determines the ACR scenario based on the EAS, EES, EEC, AC service continuity support.\n-\tPer Rel-17, the EEC already has the service continuity information from the EES/EAS/AC/EEC, and no new message is needed to make the ACR selection.\n-\tWhether Solution #19 and Solution #35 are also applicable for subsequent ACR and necessary improvement require further study in normative work.\n-\tSolution #38 relies on Solution #19 or Solution #35 for ACR scenario(s) selection.\nHow is the ACR scenario(s) list communicated to the ACR decision-making entities? Solution #19 and Solution #35 partially differ in how the ACR scenario(s) list is communicated to ACR decision-making entities (e.g. EEC/EES/EAS).\n-\tSolution #19 proposes that the EES informs the EEC of the selected ACR scenario(s) via a new ACR scenario selection notification, which contains the selected ACR scenario(s) list.\n-\tSolution #35 proposes that the EEC informs the EES of the selected ACR scenario(s) list via a new selected EAS announcement request.\n-\tBoth Solutions #19 and Solution #35 propose that the EAS subscribes to ACR scenario selection, and that the EES informs the EAS via a new ACR selection notification.\n-\tSolution #38 relies on Solution #19 or Solution #35 for communicating the ACR scenario selection to the ACR decision-making entities.\nHow do EEL ACR decision-making entities (e.g. EEC/EES/EAS) use the selected ACR scenario(s) list?\n-\tSolution #19 and Solution #35 indicate that each ACR decision-making entity (e.g. EEC/EES/EAS) uses the ACR scenario list to decide if ACR detection needs to be initiated.\n-\tSolution #38 relies on Solution #19 or Solution #35 for initiating ACR detection at the decision-making entities.\nHow is ACR execution coordinated after ACR detection happens?\n-\tSolution #19 and Solution #35 do not specify how ACR execution is coordinated\n-\tSolution #38 proposes to extend existing ACR management event notification (EES/EAS) and the ACR information notification (EES/EEC) to explicitly indicate that an ACR has started executing to prevent other ACR decision-making entities from initiating ACR execution. Solution #38 is not dependent on Solution #19 and Solution #35; Solution. #38 is only required when multi-ACR scenarios are selected.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.20\tKey issue #20: Supporting composite EASs",
                            "text_content": "The open issues of key issue #20 are as follows:\n-\tWhether and how the EEL can support to composite EAS context management.\n-\tWhether and how the EEL can support the relocation of the composite EAS context for service continuity.\n-\tWhether and how the EEL can discover EAS that provides the services of the composite EASs.\nSolution #49 addresses the 3rd open issue. The EEL provides discovery service to AC connected EAS so that other component EASs can be discovered and selected by the AC connected EAS based on need.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.21\tKey issue #21: Simultaneously EAS connectivity in ACR",
                            "text_content": "Solution #22 enhances AC profile and EDGE-1 ACR procedure to enable EES to influence the traffic for simultaneous EAS connectivity during service continuity. The detailed impact to 3GPP TS 23.558 [2] and remaining EN in clause 7.22.2.1 for SA2 coordination will be addressed in the normative phase.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.22\tKey issue #22: EAS discovery in Edge Node sharing scenario",
                            "text_content": "This clause provides an overall evaluation of Key issue #22, \"EAS discovery in Edge Node sharing scenario\".\n1)\tSolution #43 and #44 works for a scenario where EESs from OP B are deployed and available everywhere in a region, the required EAS is not available with OP B, the EAS can be shared to all operators in the federation and OP B identifies that the most suitable EAS is in Partner OP.\na)\tSolution #43 proposes to use ECS-ER entity (as defined in clause 6.x), where Application info is published from ECS-ER (OP-A) to ECS-ER (OP-B). And when required ECS (OP-B) fetches application information from ECS-ER (OP-B). In case, if application information is not published, EEC sends service provisioning request to ECS (OP-B) which discovers T-EES and shares the T-EES information to EEC in a transparent way. EEC in turn includes T-EES information in EAS discovery request towards EES which contact T-EES to fetch application information.\nb)\tSolution #44 proposes to use ECS-ER entity (as defined in clause 6.x), where EES publishes the registered EAS information to ECS-ER. ECS-ER of different operators in federation can subscribe to each other to get registered EAS information. Alternatively, ECS-ER (OP-A) can get the registered EAS information directly from ECS-ER (OP-B). When EEC sends EAS discovery request, the EES (OP-B) can get EES (OP-A) information from ECS-ER and performs ES discovery towards EES (OP-A). Upon receiving the EAS discovery response from EES (OP-A), the EES (OP-B) shares the EAS details to EEC.\n2)\tSolution #45 works for a scenario that EES service (OP A) can be shared to the Operator B. The OP B can access the edge resource from the Partner OP for the EAS deployment and also access the EES service from the Partner OP.\na)\tSolution #45 proposes to enhance service provisioning and EAS discovery procedures. The ECS (OP-B) determines that the requried EAS is available with EES (OP-A), and includes EES (OP-A) in the rservice provisioning response. EEC (OP-B) sends the EAS discovery request to EES (OP-A) which provides EAS details to EEC.\nSolutions are to be considered during the normative work based on GSMA feedback.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.23\tKey issue #23: Reliable Edge service",
                            "text_content": "The open issues of key issue #23 are as follows:\n-\tWhether and what mechanisms the EES/ECS can use for high reliability in EES/ECS services during expected events and unexpected events in the service.\n-\tWhether and what mechanisms the EES/ECS can provide to support highly reliable EAS during expected events and unexpected events in the service.\nSolution #48 addresses all open issues by providing support for reliable edge service with service set.\nThe principle used in solution #48 can also be applicable to other application enabling services (e.g. SEAL) and detailed solution can be discussed in respective work item.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.24\tKey issue #24: SEAL capability access for EEL support",
                            "text_content": "The open issue in Key Issue #24 is:\n-\tHow EEL accesses and utilizes SEAL capabilities deployed within the EDN.\nSolution #41 solves this issue by utilizing SEAL ADAES for enhancing EEL operations based on edge load analytics. The ADAES capability in TR 23.700-36 was concluded and provides a mechanism which allows EES and EAS to receive EES/EAS edge load measurements to enhance operations like service continuity. This solution is feasible, and the only dependency is the expected specification of the ADAES feature related to edge analytics (expected in TS 23.436).\nNOTE:\tWhether EEC can also use SEAL ADAE layer to receive overload condition of EAS/EES can be considered in normative work.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "11\tConclusions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "11.1\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "This technical report fulfils the objectives of the study on application architecture for enabling Edge Applications. The report includes the following:\n1.\tDefinition of terms and abbreviations used in the study (clause 3);\n2.\tKey issues identified by the study (clause 4) and corresponding architectural requirements (clause 5);\n3.\tEnhancements to edge application architecture specified in 3GPP TS 23.558, corresponding to the key issues and architectural requirements (clause 6);\n4.\tIndividual solutions addressing the key issues (clause 7);\n5.\tSet of deployment options (clause 8) and updated business relationships considering Federation and Roaming support (clause 9); and\n7.\tOverall evaluations of all the solutions (clause 10).\nSome of the individual solutions have dependency on other working groups within 3GPP. This dependency is summarized in overall evaluations (clause 10).\nNOTE:\tFor the objectives with dependency on other SA WGs, the solution(s) for the normative work can be progressed with close coordination with the dependent WGs. If the dependencies are not resolved within the release timeframe, the solutions will be removed or down-scoped to avoid the dependencies.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "11.2\tConclusions for normative work",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "11.2.1\tGeneral conclusions",
                            "text_content": "The study concludes with following general considerations for the normative work:\n1.\tDefinition of terms and abbreviations captured in clause 3 will be reused;\n2.\tArchitectural requirements identified in clause 5 will be used for updated baseline architectural requirements; and\n3.\tDeployment scenarios and involved business relationships will be considered as captured in clause 8 and clause 9 respectively. Additional deployment models and their implications on the solutions will be considered.\n4.\tThe solutions are applicable only for the corresponding scenario assumptions.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.2.2\tArchitecture enhancement conclusions",
                            "text_content": "The study concludes with following architectural enhancements considerations for the normative work:\n1.\tArchitecture enhancements from clause 6 corresponding to the concluded solutions will be used for updating baseline edge application architecture specified in 3GPP TS 23.558:\na.\tarchitecture corresponding to solution #20 as specified in clause 6.3 and additionally leveraging generic notification service from SEAL.\nb.\tarchitecture enhancement as specified in clause 6.4\nc.\tarchitecture enhancement to support service provisioning in LBO and HR roaming scenarios as specified in clause 6.1\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.2.3\tSolution conclusions",
                            "text_content": "The study concludes with following solution considerations for the normative work:\n1.\tFollowing individual solutions, corresponding to the key issues, will be considered as candidate solutions:\ni.\tfor Key issue #1 (Enhanced notification service to the EEC):\na.\tSolution #1: Service provisioning via push notification\n-\tSEAL Notification Service will be specified in TS 23.434 [23] to support the Solution #1\n-\tThe usage of SEAL Notification Service in TS 23.558 [2] will be captured to Solution #1\nb.\tSolution #3: Service provisioning triggering via SMS over NAS\n-\tThe usage of SMS over NAS to trigger service provisioning procedure will be specified in TS 23.558 [2] as per Solution #3.\nc.\tSolution #20: Propagation of EEL notifications to EEC using Edge Notification Server\n-\tSEAL Notification Service will be specified in TS 23.434 [23] to support the Solution #20\n-\tThe usage of SEAL Notification Service in TS 23.558 [2] will be captured to Solution #20\nii.\tfor Key issue #2 (Enablement of Service APIs exposed by EAS):\na.\tSolution #8: EAS Service API enablement using CAPIF\niii.\tfor Key issue #3 (Enhancements to service continuity planning):\na.\tSolution #6: ACR update in service continuity planning\nb.\tSolution #7: EES monitors UE mobility for service continuity planning\nc.\tSolution #12: Service continuity planning permission\nd.\tSolution #21: Prediction expiration time for service continuity planning enhancement\ne.\tSolution#37: ACR request trigger timing\niv.\tfor Key issue #4 (EDGE-5):\na.\tSolution #34 (EDGE-5 APIs)\nv.\tfor Key issue #5 (Alignment of EDGEAPP and ETSI MEC):\na.\tSolution #11: This solution relies on the EDGEAPP architecture as specified in TS 23.558 [2] and CAPIF as specified in TS 23.222 [16]. The solution does not require changes in architecture and procedures.\nb.\tSolution #36: This solution is based on the principles set in clause 5.4 and provides a mapping between overlapping APIs in EDGEAPP and ETSI MEC. The solution does not require changes in architecture and procedures.\nc.\tThe different aspects of alignment of EDGEAPP and ETSI MEC covered by the Solution #11 and #36, may be captured as informative annex(es) in TS 23.558.\nvi.\tfor Key issue #6 (Edge services support across ECSPs):\na.\tSolution #4 ECS discovery through serving ECS to support edge services across ECSPs: Detailed signalling to provide ECS2 address to the requesting EEC or EES based on solution #4 is to be specified in normative phase.\nb.\tSolution #5: ECS enhancement to discover EESs via other ECSs to support edge services across ECSPs: Signalling between ECS1 and ECS2 to discover and retrieve provisioning to the requesting EEC or T-EES for the requesting EES will be specified in normative phase according to solution #5. A new interface EDGE-10 between ECS1 and ECS2 is used in Solution #5.\nc.\tSolution #13: Update ECS configuration information: if required, the additional optional IEs are added to ECS configuration information provided by ECS to 5GC according to Solution #13.\nd.\tSolution #50: Enhanced ECS for federation of services: enhancements will be specified in the normative phase so that an ECS can query an ECS-ER to obtain information of partner ECS that provide service provisioning for a particular application.\nvii.\tfor Key issue #7 (Application traffic filter exposure):\na.\tSolution #2: Traffic filter support for EDGE-3 API addressing application traffic detection\nviii.\tfor Key issue #8 (EAS selection synchronization):\na.\tSolution #39 (EAS selection synchronization at registration)\nb.\tSolution #15 (Initial EAS selection)\nix.\tfor Key issue #9 (Enhancement of dynamic EAS instantiation triggering):\na.\tSolution #32 (Dynamic EAS instantiation triggering and notification)\nb.\tSolution #33 (Support for EEC Discovery of EAS(es) before instantiation)\nc.\tSolution #40 (EAS instantiation status provisioned by ECS)\nd.\tSolution #42 (EAS selection and instantiation in EES)\nx.\tfor Key issue #10 (Support for roaming UEs):\na.\tSolution #4 ECS discovery through serving ECS to support edge services across ECSPs: Detailed signalling to provide V-ECS address to the requesting EEC or EES based on solution #4 is to be specified in normative phase.\nb.\tSolution #5: ECS enhancement to discover EESs via other ECSs to support edge services across ECSPs: Signalling between H-ECS and V-ECS to discover and retrieve provisioning to the requesting EEC or T-EES for the requesting EES will be specified in normative phase according to solution #5. A new interface EDGE-10 between H-ECS and V-ECS is used in Solution #5.\nc.\tSolution #13: Update ECS configuration information: if required, the additional optional IEs are added to ECS configuration information provided by ECS to 5GC according to Solution #13.\nd.\tSolution #14: V-ECS Discovery via the H-ECS: the Service Provisioning Response will be updated to allow the H-ECS to provide a DNN / S-NSSAI combination to the EEC. The DNN / S-NSSAI combination can be used by the EEC to establish an LBO PDU Session in the VPLMN.\ne.\tSolution #50: Enhanced ECS for federation of services: enhancements will be specified in the normative phase so that an ECS can query an ECS-ER to obtain information of partner ECS that provide service provisioning for a particular application.\nxi.\tfor Key issue #11 (ACR between EAS and Cloud Application Server):\na.\tSolution #24 (ACR between EAS and CAS with CES)\nb.\tSolution #25 (ACR between EAS and CAS without CES)\nxii.\tfor Key issue #12 (EEL service differentiation):\na.\tSolution #12 (Service continuity planning permission)\nb.\tSolution #51 (EEC sharing UE Mobility requirement)\nc.\tSolution #52 (EES policy differentiation)\nxiii.\tfor Key issue #13 (Edge enabler layer support for EAS synchronization):\na.\tSolution #31 (Discover common EAS) clause 7.31.2.4\nb.\tSolution #53 (Support for EAS synchronization)\nxiv.\tfor Key issue #14 (Application traffic influence for initially selected EAS):\na.\tSolution #9 (Application traffic influence trigger from EAS)\nb.\tSolution #15 (Initial EAS selection declaration)\nc.\tSolution #17 (Traffic influence for initial EAS discovery)\nxv.\tfor Key issue #15 (Support of constrained devices for Edge):\na.\tSolution #18: Constraint device in EDGEAPP\nxvi.\tfor Key issue #16 (Support of NAT deployed within the edge data network):\na.\tSolution #23 (UE identification with NAT)\nxvii.\tfor Key issue #17 (Discovery of a common EAS):\na.\tSolution #27 (Enabling AC Association Aware services by selecting common EASs)\nb.\tSolution #28 (Common EAS discovery using EAS selection information)\nc.\tSolution #29 (Discovery of a common EAS)\nd.\tSolution #30 (Common EAS selection)\ne.\tSolution #31 (Discover common EAS)\nNOTE 1:\tSelecting one of the solutions or merging into one or more solutions shall be considered during the normative phase.\nxviii.\tfor Key issue #18 (EAS bundles):\na.\tSolution #26 (Bundled EASs)\nb.\tSolution #46 (EEC selected ACR scenario for EAS bundles)\nc.\tSolution #47 (EES determines the selected ACR scenario for EAS bundles)\nxix.\tfor Key issue #19 (ACR scenario combination), see also clause 10.2.19:\na.\tThe principle of Solution #19, #35, #38 that the EEL will offer support for utilizing a combination of ACR scenario(s) will be followed.\nb.\tThe principle of Solution #35 that the EAS selection entity performs selection of the ACR scenario combination will be followed; the EEC will select zero ACR scenario or a single ACR scenario or multi-ACR scenarios in the ACR scenario list according to the EEL participants service continuity capabilities and AC requirements.\nc.\tThe principle of Solution #35 that the ACR scenario list is communicated to the EES via the selected EAS announcement request will be followed, the EAS announcement request will be enhanced with the ACR scenario list.\nd.\tThe principle of Solution #19 and #35 that the ACR scenario list is communicated to the EAS via the ACR selection notification and that the EAS will subscribe to such notification will be followed; the ACR selection notification will provide the selected ACR scenario list.\ne.\tThe principle of Solution #19 and #35 that each ACR decision-making entity (e.g. EEC/EES/EAS) will use the ACR scenario list to decide if ACR detection needs to be performed will be followed; a gating condition that the ACR scenario is present in the ACR selected scenario list will be added to the ACR detection phase of every ACR scenario.\nf.\tThe principle of Solution #38 that ACR execution will be coordinated after ACR detection happens will be followed; the ACR management event notification and the ACR information notification will be enhanced with information about start of ACR execution.\nxx.\tfor Key issue #20 (Supporting composite EASs):\na.\tSolution #49 (Supporting EAS composition) There is no impact identified in Rel-18 EDGEAPP for solution #49 but the use case can be captured in informative annex of TS 23.558 [2] to provide usage guideline for EAS developers.\nxxi.\tfor Key issue #21 (Simultaneously EAS connectivity in ACR):\na.\tSolution #22: Support simultaneous EAS connectivity in ACR\nxxii.\tfor Key issue #22 (EAS discovery in Edge Node sharing scenario):\na.\tSolution #43 (EAS discovery for Edge node sharing)\nb.\tSolution #44 (EAS discovery for Edge node sharing)\nc.\tSolution #45 (EAS discovery in Edge Node sharing scenario)\nNOTE 2:\tOne or more solutions or merged solution from above solution will be considered during the normative work based on GSMA feedback.\na.\tSolution #55 (Non-roaming UE location invocation)\nxxiii.\tfor Key issue #23 (Reliable Edge service):\na.\tSolution #48 (Edge server set and edge service set)\nxxiv.\tfor Key issue #24 (SEAL capability access for EEL support):\na.\tSolution #41 (Interaction with ADAES for edge load analytics)\n\n2.\tIndividual solutions, not listed under bullet 1 may be adopted in technical specification with appropriate enhancements.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "A.1\tGeneral",
            "description": "This Annex compares EDGEAPP architecture R17 as defined in 3GPP TS 23.558 [2] and ETSI MEC architecture [3] and provides a gap analysis, addressing the objective in Key issue #5 in clause 4.5.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.2\tService consumer and service provider",
            "description": "The functionalities enabled via the Mp1 reference point between MEC applications and MEC platform is mainly described in ETSI GS MEC011 [14]. The related functionality includes MEC service registration/deregistration, MEC service discovery and event notifications. Other functionality includes MEC service availability, traffic rules, DNS and time of day.\nFrom ETSI MEC's perspective, there are two types of MEC Applications, i.e. MEC Application that consumes MEC Services and MEC Application that provides MEC service(s). For the MEC Application that provides MEC service(s), the MEC Application sends a service registration request to the MEC platform to register the MEC service during the MEC Application start-up procedure. As for the MEC Application that consumes MEC Services, the MEC Application can send a service query request to the MEC platform to discover a MEC service. It should be noted that the API of registration and discovery is defined for MEC service.\nIn R17 of SA6, the EES can take the role of the CAPIF core function, and the vertical application enabler server acting the AEF and publish the vertical application enabler server APIs to the EES. Further, the vertical application enabler server APIs is discovered by the EASs acting as the API invoker during the service API discover procedure as specified in 3GPP TS 23.222 [16].\nIn clause 4.2, the Key issue #2 plans to study Enablement of Service APIs exposed by EAS. The R17 of EDGEAPP only defines the functionality of EAS acting as an invoker, which is similar to MEC Application that consumes MEC Services defined in ETSI MEC:\n[Observation A.2-1] The R17 of EDGEAPP only defines the functionality of EAS acting as an invoker, which is similar to MEC Application that consumes MEC Services defined in ETSI MEC. According to the Key issue #2 in clause 4.2, The EAS acting as a service provider is expected to be defined in R18 and expose service APIs.\n[Observation A.2-2] According to the Key issue #2 in clause 4.2, the EAS can act as a service provider and EES can act as CAPIF core function so different services will be discoverable at different EESs. How the information of a service registered at one MEC platform is made available to other platforms in the same MEC system is not explicitly specified within ETSI MEC, while in EDGEAPP, as EES supports CAPIF core function, the EAS service published on EES1 can be discovered by EAS registered on EES2 through CAPIF-6 or CAPIF-6e.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.3\tEAS/MEC application profile provisioning",
            "description": "ETSI MEC and EDGEAPP defined different style of EAS/MEC application profile provisioning. The information flows for lifecycle management of MEC applications is described in ETSI GS MEC010-2 [13]. The informational flows for the optional MEC Application registration are described in ETSI GS MEC 011 [14]. The MEC application can start producing or consuming MEC Services after the MEC Application is instantiated and running. The application information (AppInfo), which can be regarded as the MEC application profile, represents the information provided by the MEC application instance as part of the \"application registration request\" message. The attributes of the AppInfo are available from the clause 7.1.2.6 of ETSI GS MEC011 [14]:\nSome fields in AppInfo are intentionally not duplicating the EAS profile (if present) with conflicting parameters but should be consistent with them. This is highlighted in NOTE 1 and NOTE 2, for example. It can be seen that unlike AppD [13], which is mainly used in the management plane for instantiating an application, and is static in nature, AppInfo carries the runtime information about the MEC application instance.\nIn EDGEAPP, the EAS profile is provided in the EAS registration request. According to clause 8.2.4 of 3GPP TS 23.558 [2] the information element of the EAS profile is listed as below:\nTable A.3-2: EAS Profile\n\nComparison of AppInfo in 7.1.2.6 of ETSI GS MEC 011 [14] and EAS Profile in Table A.3.2 shows that:\n[Observation A.3-1] Both ETSI MEC and EDGEAPP provides similar types of EAS/MEC application profile provisioning. Both the EAS Profile and MEC Application Instance (AppInfo) is provided during the application registration request.\n[Observation A.3-2] Some IEs of the EAS profile may overlap with the ones defined in AppInfo (e.g. EAS ID vs. appName, EAS Provider Identifier vs. appProvider, EAS Endpoint vs. endpoint). Both AppInfo and EAS Profile has many optional IEs, whether and how to address their differences in SA6 is FFS.\n",
            "summary": "",
            "tables": [
                {
                    "description": "Table A.3-2: EAS Profile",
                    "table number": 48,
                    "summary": "",
                    "name": ""
                }
            ],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.4\tEAS registration and EAS discovery",
            "description": "In R17 of EDGEAPP, the EAS Registration procedure is defined to allow an EAS to provide its information to an EES in order to enable its discovery as defined in clause 8.4.3 of 3GPP TS 23.558 [2]. The EAS discovery procedure is used to provide EAS information to the EEC. After the EEC is provisioned with the EAS information, it can establish a connection to the EAS. Besides, in the service continuity scenario, the source EAS may send an EAS discovery request to the EES to discover a target EAS (providing same functionality as the source EAS) to serve the UE as defined in clause 8.8.3.2 of 3GPP TS 23.558 [2].\nHowever, in current ETSI MEC specification, no APIs for MEC Application registration is defined because it is assumed that all MEC Application are on-boarded and managed by MEC Orchestrator, which was specified in ETSI GS MEC 010-2 [13]. API for MEC Application discovery is not defined since the existing MEC service is either defined from the MEC Application's perspective or it is consumed by the MEC Application rather than the UE.\nTherefore, the comparison EAS registration and EAS discovery of EDGEAPP [2] and ETSI MEC specification [13] shows that:\n[Observation A.4-1] The EAS registration and EAS discovery mechanism is defined in R17 of SA6 and ETSI MEC introduced MEC application registration (ETSI GS MEC 011 v3.0.6). It is FFS whether and how to address such differences in SA6, e.g. in support of ETSI MEC.\n[Observation A.4-2] ETSI MEC platform(MEP) supports service registration. In the registration parameter \"ServiceInfo\"，there is a mandatory field \"consumedLocalOnly\" used to indicate that the service can only be consumed by the MEC applications located in the same locality, which means ETSI MEC services (produced by Authorized MEC APPs) registered and exposed on MEP can be invoked by MEC consumer APPs deployed on the same or another MEC host.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "B.1\tGeneral",
            "description": "This clause provides the analysis to address the first open issue of KI#5, which intends to study and analyse different deployment options of EDGEAPP and ETSI MEC platforms. In that regard, this clause describes the following foreseen types of deployment and evolution scenarios for deployment of EDGEAPP and ETSI MEC.\nAnnex C of TS 23.558 provides a relationship between EDGEAPP and ETSI MEC architectures as in figure below.\nThe figure depicts the relationship between EDGEAPP and ETSI MEC architecture, illustrating the interconnection of different components and the flow of data between them.\nFigure B.1-1: Relationship in EDGEAPP and ETSI MEC architecture\nEditor's note: Whether and how to enhance EDGE-9 or Mp3 is FFS.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "B.2\tDeployment options",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "B.2.1\tDeployment Option-1: Collocated Platforms",
                    "description": "",
                    "summary": "",
                    "text_content": "Based on Figure B.1-1, the two platforms (EES and MEC Platform) are co-located, and made by a single (unique) equipment, which is compliant with both standards. However, the actual deployment details of two platforms is implementation specific (Figure B.2.1-1).\nThe figure depicts two different AFs (Access Facet and Middleware Facet) on a single Physical/NFV Infrastructure, highlighting the integration of EES (Edge Software Environment) and MEC (Multi-access Edge Computing) platforms.\nFigure B.2.1-1: EES and MEC Platform as two different AFs on a single Physical/NFV Infrastructure\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "B.2.2\tDeployment Option-2: Converged architecture",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "B.2.2.1\tGeneral",
                            "text_content": "From the practical and business perspective, it is possible that an operator has deployed ETSI MEC architecture in its MEC sites to provide edge service since the stage 1 work of ETSI MEC has been already finished for a period of time. At the same time, the operator still cannot deploy EDGEAPP architecture since the stage 3 work of EDGEAPP is still not completed at the time being.\nOn the other hand, it is assumed that an enhanced architecture, including a converged architecture as depicted in Figure B.2.2-1, will be introduced after completion of release 18. The converged architecture is expected to satisfy the following requirement:\n-\tThe MEP+EES is able to satisfy all the functionalities of MEP defined in ETSI and EES defined in SA6.\n-\tA uniform API is defined for the EAS and MEC app, i.e. EDGE-3 and Mp1 are unified into one interface and the EAS and MEC app will consume the same service from the MEP+EES.\n-\tEDGE-9 and Mp3 are unified into one interface.\nNOTE: Management of MEP+EES is under the scope of SA5.\n\nFigure B.2.2.1-1 Converged architecture for EDGEAPP and ETSI MEC alignment\n\nThe two platforms (EES and MEC Platform) are co-located which can be implemented as a single AF (e.g. realized as one VNF) compliant with both standards (Figure B.2.2-2).\nThe figure depicts a single AF (Access Facade) and MEC (Multi-access Edge Computing) platform on a single NFV (Network Function Virtualization) infrastructure, illustrating the integration of EES (Edge Server) and MEC in a single NFV infrastructure. This single AF and MEC platform supports a wide range of services, including video, voice, and data, and is designed to provide high-performance, low-latency services to end users. The figure highlights the importance of NFV in enabling efficient and scalable network infrastructure, as well as the role of EES and MEC in providing seamless and reliable services.\nFigure B.2.2.1-2: EES and MEC Platform as a single AF on a single NFV Infrastructure (NFVI)\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "B.2.2.2\tEvolution Options",
                            "text_content": "In this clause the converged architecture is the architecture described in clause B.2.2 and satisfies the requirements listed in that clause.\nAfter the completion of Release 18, an operator may determine to upgrade/evolve the ETSI MEC architecture to the converged architecture if the operator deployed ETSI MEC architecture in its MEC sites to provide edge service in the early stage. The MEP needs to be upgraded to the MEP+EES for supporting the functionality of EES defined in 3GPP SA6. The deployment and evolution scenario is depicted in Figure B.2.2.2.2-1.\n\nFigure B.2.2.2.2-1 Evolution Option #1- An early stage deployed MEP is enhanced to support the functionality of EES in a later stage.\nIn Figure B.2.2.2.2-1, the EDN_1 and EDN_2 are deployed by the same operator.\nAfter the completion of Release 18, an operator may opt to upgrade/evolve the EDGEAPP architecture to the converged architecture if the operator deployed EDGEAPP architecture in its EDNs to provide edge service in the early stage. The deployment and evolution scenario is depicted in Figure B.2.2.2.3-1.\n\nFigure B.2.2.2.3-1  Evolution Option #2- Enhancement of a deployed EES to support the functionality of MEP\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "B.2.3\tDeployment Option-3: non-Collocated Platforms",
                    "description": "",
                    "summary": "",
                    "text_content": "The two platforms are non-collocated, and reside in two different data networks, where EES is in the Mobile Network Operator (MNO) domain while the ETSI MEC platform is in another MNO domain (Figure B.2.3-1).\nThe figure depicts two different AFs (Access Facet and Middleware Facet) in two different EES (Edge-to-Edge Service) and MEC (Multi-Access Edge Computing) platforms, highlighting the importance of these components in the network architecture.\nFigure B.2.3-1: EES and MEC Platform as two different AFs in two different EDNs\n\n\n",
                    "tables": [
                        {
                            "description": "",
                            "table number": 49,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        }
    ]
}