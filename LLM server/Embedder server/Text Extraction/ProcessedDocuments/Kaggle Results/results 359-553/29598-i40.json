{
    "document_name": "29598-i40.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Specification has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\nIn the present document, modal verbs have the following meanings:\nshall\tindicates a mandatory requirement to do something\nshall not\tindicates an interdiction (prohibition) to do something\nThe constructions \"shall\" and \"shall not\" are confined to the context of normative provisions, and do not appear in Technical Reports.\nThe constructions \"must\" and \"must not\" are not used as substitutes for \"shall\" and \"shall not\". Their use is avoided insofar as possible, and they are not used in a normative context except in a direct citation from an external, referenced, non-3GPP document, or so as to maintain continuity of style when extending or modifying the provisions of such a referenced document.\nshould\tindicates a recommendation to do something\nshould not\tindicates a recommendation not to do something\nmay\tindicates permission to do something\nneed not\tindicates permission not to do something\nThe construction \"may not\" is ambiguous and is not used in normative elements. The unambiguous constructions \"might not\" or \"shall not\" are used instead, depending upon the meaning intended.\ncan\tindicates that something is possible\ncannot\tindicates that something is impossible\nThe constructions \"can\" and \"cannot\" are not substitutes for \"may\" and \"need not\".\nwill\tindicates that something is certain or expected to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nwill not\tindicates that something is certain or expected not to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nmight\tindicates a likelihood that something will happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nmight not\tindicates a likelihood that something will not happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nIn addition:\nis\t(or any other verb in the indicative mood) indicates a statement of fact\nis not\t(or any other negative verb in the indicative mood) indicates a statement of fact\nThe constructions \"is\" and \"is not\" do not indicate requirements.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document specifies the stage 3 protocol and data model for the Nudsf Service Based Interface. It provides stage 3 protocol definitions and message flows, and specifies the API for each service offered by the UDSF.\nThe 5G System stage 2 architecture and procedures are specified in 3GPP TS 23.501 [2] and 3GPP TS 23.502 [3].\nThe Technical Realization of the Service Based Architecture and the Principles and Guidelines for Services Definition are specified in 3GPP TS 29.500 [4] and 3GPP TS 29.501 [5].\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 23.501: \"System Architecture for the 5G System; Stage 2\".\n[3]\t3GPP TS 23.502: \"Procedures for the 5G System; Stage 2\".\n[4]\t3GPP TS 29.500: \"5G System; Technical Realization of Service Based Architecture; Stage 3\".\n[5]\t3GPP TS 29.501: \"5G System; Principles and Guidelines for Services Definition; Stage 3\".\n[6]\tOpenAPI: \"OpenAPI Specification Version 3.0.0\", .\n[7]\t3GPP TR 21.900: \"Technical Specification Group working methods\".\n[8]\t3GPP TS 33.501: \"Security architecture and procedures for 5G system\".\n[9]\tIETF RFC 6749: \"The OAuth 2.0 Authorization Framework\".\n[10]\t3GPP TS 29.510: \"5G System; Network Function Repository Services; Stage 3\".\n[11]\tIETF RFC 9113: \" HTTP/2\".\n[12]\tIETF RFC 8259: \"The JavaScript Object Notation (JSON) Data Interchange Format\".\n[13]\tIETF RFC 9457: \"Problem Details for HTTP APIs\".\n[14]\tIETF RFC 6902: \"JavaScript Object Notation (JSON) Patch\".\n[15]\tIETF RFC 9110: \"HTTP Semantics\".\n[16]\tVoid.\n[17]\tIETF RFC 9111: \" HTTP Caching\".\n[18]\tISO/IEC 14977: \"Information technology – Syntactic metalanguage - Extended BNF\".\n[19]\t3GPP TS 29.571: \"5G System; Common Data Types for Service Based Interfaces; Stage 3\".\n[20]\tIETF RFC 2045: \"Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies\".\n[21]\tIETF RFC 2046: \"Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types\".\n[22]\tIETF RFC 3986: \"Uniform Resource Identifier (URI): Generic Syntax\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions of terms, symbols and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tTerms",
                    "description": "",
                    "summary": "",
                    "text_content": "void\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tSymbols",
                    "description": "",
                    "summary": "",
                    "text_content": "void\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.3\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in 3GPP TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in 3GPP  TR 21.905 [1].\n5GC\t5G Core Network\nBNF\tBackus–Naur Form\nEBNF\tExtended BNF\nCP\tControl Plane\nMIME\tMultipurpose Internet Mail Extensions\nNF\tNetwork Function\nUDSF\tUnstructured Data Storage Function\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tOverview",
            "description": "The UDSF, as depicted in Figure 4.1-1 below, is described in clause 4.2.5 of 3GPP TS 23.501 [2]. Any of the 5GS NFs can make use of the UDSF to store and retrieve unstructured data, i.e., data that is not defined in 3GPP specifications, and can make use of the UDSF to run timers and get notified on timer expiry. The UDSF is deployed in the same network where the CP NF is located and the same UDSF may be shared by all the NFs in the PLMN to store/retrieve their respective data or an NF may have its own UDSF depending on operator configuration.\nNOTE 1:\tStructured data in this specification refers to data for which the structure is defined in 3GPP specifications. Unstructured data refers to data for which the structure is not defined in 3GPP specifications.\nThe figure depicts a reference model for a 5G network, specifically focusing on the use of ultra-dense sub-6 GHz (UDSF) spectrum. It illustrates the various components and their interactions, such as base stations (gNB), user equipment (UE), and scatterers, to ensure efficient signal propagation. The figure also highlights the use of beamforming techniques to mitigate interference, emphasizing the importance of network design and architecture in achieving high-speed, reliable communication.\nFigure 4.1-1: Reference model – UDSF\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "5\tServices offered by the UDSF",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tIntroduction",
                    "description": "",
                    "summary": "",
                    "text_content": "The UDSF offers the following services via the Nudsf service based interface:\n-\tNudsf_DataRepository Service\nNOTE:\tThis service corresponds to the Nudsf_UnstructuredDataManagement service in 3GPP TS 23.501 [2] and 3GPP TS 23.502 [3].\n-\tNudsf_Timer Service\nTable 5.1-1 summarizes the corresponding APIs defined for this specification.\nTable 5.1-1: API Descriptions\n\n",
                    "tables": [
                        {
                            "description": "Table 5.1-1: API Descriptions",
                            "table number": 3,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.2\tNudsf_DataRepository Service",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.2.1\tService Description",
                            "text_content": "The UDSF is acting as an NF Service Producer. It provides UDSF data repository service to the NF service consumer. Any NF may use the UDSF to store unstructured data.\nNOTE 1:\tStructured data in this specification refers to data for which the structure is defined in 3GPP specifications. Unstructured data refers to data for which the structure is not defined in 3GPP specifications.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.2\tService Operations",
                            "text_content": "For the Nudsf_DataRepository service, the following service operations are defined:\n-\tQuery\n-\tCreate\n-\tUpdate\n-\tDelete\n-\tNotify\n-\tSubscribe\n-\tUnsubscribe\nThe following procedures using the Query service operation are supported:\n-\tRecord Retrieval\n-\tMeta Retrieval\n-\tBlocks Retrieval\n-\tBlock Retrieval\n-\tSearch\n-\tSubscriptions Retrieval\n-\tIndividual Subscription Retrieval\n-\tMeta Schema Retrieval\nFigure 5.2.2.2.2-1 shows a scenario where the NF service consumer sends a request to the UDSF to retrieve a record that matches the provided recordId and optionally includes the query parameter supported-features.\nThe figure depicts a request for a record, with a requestor, a requester, and a response. The requestor is shown as a person, and the requester is represented as a person with a microphone. The response is shown as a person with a microphone, indicating that the requester has received the request.\nFigure 5.2.2.2.2-1: Requesting a Record\n1.\tThe NF service consumer (any NF) sends a GET request to the resource indicated by recordId.\n2a.\tOn success, the UDSF responds with \"200 OK\" with the message body containing the record.\n2b.\tIf the record for the given recordId does not exist in the UDSF, the HTTP status code \"404 Not Found\" shall be returned optionally including additional error information in the response body (in the ProblemDetails element).\n2c.\tIf one or more conditions in the given request header fields evaluated to false, the HTTP status code \"412 Precondition Failed\" shall be returned optionally including additional error information in the response body (in the ExtendedProblemDetails element). The UDSF may include the stored record in the ProblemDetailsExtension.\n2d.\tIf the request header fields did not include any preconditions (i.e. \"if-*\"), the HTTP status code \"500 Internal Server Error\" may be returned optionally including additional error information in the response body (in the ExtendedProblemDetails element). The UDSF may include the stored record in the ProblemDetailsExtension.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the GET response body.\nFigure 5.2.2.2.3-1 shows a scenario where the NF service consumer sends a request to the UDSF to retrieve meta data associated with the provided recordId and optionally includes the query parameter supported-features.\nThe figure depicts a request for a meta record in a communication system, illustrating the process of requesting metadata from a record. The figure shows a request message, a response message, and a meta record, with the request message being the most important part, as it contains the requestor's request and the response message containing the meta record. The figure also shows the requestor's request and the response message, with the requestor's request being the most important part, as it contains the requestor's request and the response message containing the meta record.\nFigure 5.2.2.2.3-1: Requesting Meta for a Record\n1.\tThe NF service consumer (any NF) sends a GET request to the meta resource associated with the record indicated by recordId.\n2a.\tOn success, the UDSF responds with \"200 OK\" with the message body containing the RecordMeta.\n2b.\tIf the record for the given recordId and thus the RecordMeta does not exist in the UDSF, the HTTP status code \"404 Not Found\" shall be returned optionally including additional error information in the response body (in the ProblemDetails element).\n2c.\tIf one or more conditions in the given request header fields evaluated to false, the HTTP status code \"412 Precondition Failed\" shall be returned optionally including additional error information in the response body (in the ExtendedProblemDetails element). The UDSF may include the stored record in the ProblemDetailsExtension.\n2d.\tIf the request header fields did not include any preconditions (i.e. \"if-*\"), the HTTP status code \"500 Internal Server Error\" may be returned optionally including additional error information in the response body (in the ExtendedProblemDetails element). The UDSF may include the stored record in the ProblemDetailsExtension.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the GET response body.\nFigure 5.2.2.2.4-1 shows a scenario where the NF service consumer sends a request to the UDSF to retrieve (all) the blocks associated with the provided recordId and optionally includes the query parameter supported-features.\nThe figure depicts a request block in a blockchain network, illustrating the process of requesting blocks. The request block is a crucial component in the consensus mechanism of the blockchain, and its creation and validation are managed by the miners. The figure shows the request block's structure, including the header, body, and footer, and the process of validating the request.\nFigure 5.2.2.2.4-1: Requesting Blocks\n1.\tThe NF service consumer (any NF) sends a GET request to the resource indicated by recordId.\n2a.\tOn success, the UDSF responds with \"200 OK\" with the message body containing the Blocks associated with the record.\n2b.\tIf a Block for the given recordId does not exist in the UDSF, the HTTP status code \"204 No Content\" shall be returned.\n2c.\tIf the request header fields did not include any preconditions (i.e. \"if-*\"), the HTTP status code \"500 Internal Server Error\" may be returned optionally including additional error information in the response body (in the ExtendedProblemDetails element). The UDSF may include the stored record in the ProblemDetailsExtension.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the GET response body.\nFigure 5.2.2.2.5-1 shows a scenario where the NF service consumer sends a request to the UDSF to retrieve a single block associated with the provided recordId and blockId and optionally includes the query parameter supported-features.\nThe figure depicts a request for a block in a blockchain network, illustrating the process of requesting a block and the associated transaction. The figure shows the various components of a blockchain network, including the blockchain itself, the block header, the transaction data, and the transaction hash. The request for a block is a critical step in the blockchain process, as it is the first step in the creation of a new block. The figure provides a visual representation of the process, making it easier to understand and follow.\nFigure 5.2.2.2.5-1: Requesting a Block\n1.\tThe NF service consumer (any NF) sends a GET request to the resource indicated by recordId and blockId.\n2a.\tOn success, the UDSF responds with \"200 OK\" with the message body containing the Block associated with the blockId.\n2b.\tIf the Block for the given recordId and blockId does not exist in the UDSF, the HTTP status code \"404 Not Found\" shall be returned optionally including additional error information in the response body (in the ProblemDetails element).\n2c.\tIf one or more conditions in the given request header fields evaluated to false, the \"412 Precondition Failed\" shall be returned optionally including additional error information in the response body (in the ExtendedProblemDetails element). The UDSF may include the stored record in the ProblemDetailsExtension.\n2d.\tIf the request header fields did not include any preconditions (i.e. \"if-*\"), the HTTP status code \"500 Internal Server Error\" may be returned optionally including additional error information in the response body (in the ExtendedProblemDetails element). The UDSF may include the stored record in the ProblemDetailsExtension.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the GET response body.\nFigure 5.2.2.2.6-1 shows a scenario where the NF service consumer sends a request to the UDSF to search a record that matches the provided search criteria.\nThe request contains the query parameters filter and optionally supported-features, limit-range, and count-indicator.\n-\tIf the CombinedSearchRetrieve feature is supported may contain the query parameters retrieve-records and max-payload-size.\n-\tIf the BulkOperations feature is supported, the query parameter filter may contain a list of record IDs identifying the records to be retrieved.\n-\tIf the AdvancedCounting feature is supported, the query parameter tag-count-filter may be present instead of filter.\nThe figure depicts a search interface for records in a database, with various search options and filters displayed on the screen. The interface is designed to be user-friendly, with clear labels and icons for each search field, and a search bar at the bottom for users to input their queries. The search results are displayed in a grid format, with each row representing a different record and each column representing a different field of the record. The figure also includes a magnifying glass icon, which users can use to zoom in on specific parts of the screen for a closer look. Overall, the figure provides a comprehensive and intuitive search experience for users to find and analyze records in the database.\nFigure 5.2.2.2.6-1: Searching for Records\n1.\tThe NF service consumer (any NF) sends a GET request to the Records resource with the filter query parameter indicating the search criteria.\n2a.\tOn success, the UDSF responds with \"200 OK\" with the message body containing the RecordSearchResult.\n2b.\tIf the UDSF is not able to return any record for the given search criteria, the HTTP status code \"204 No Content\" shall be returned.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the GET response body.\nFigure 5.2.2.2.7-1 shows a scenario where the NF service consumer sends a request to the UDSF to retrieve all subscriptions associated with the provided storageId and optionally includes the query parameter supported-features and limit-range.\nThe figure depicts a request for subscriptions in a telecommunications network, illustrating the process of requesting and receiving service.\nFigure 5.2.2.2.7-1: Requesting Subscriptions\n1.\tThe NF service consumer (any NF) sends a GET request to the resource indicated by the storageId.\n2.\tOn success, the UDSF responds with \"200 OK\" with the message body containing the NotificationSubscriptions associated with the storageId (if any).\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the GET response body.\nFigure 5.2.2.2.8-1 shows a scenario where the NF service consumer sends a request to the UDSF to retrieve a subscription associated with the provided storageId and subscriptionId.\nThe figure depicts a user interface for requesting an individual subscription in a telecommunications network. The interface includes a form for entering the subscriber's name, address, and payment information. The figure also shows the network's architecture, with a central server handling the subscription requests and distributing them to the network's edge servers.\nFigure 5.2.2.2.8-1: Requesting an Individual Subscription\n1.\tThe NF service consumer (any NF) sends a GET request to the resource indicated by the storageId and the subscriptionId.\n2a.\tOn success, the UDSF responds with \"200 OK\" with the message body containing the NotificationSubscription.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the GET response body.\nFigure 5.2.2.2.9-1 shows a scenario where the NF service consumer sends a request to the UDSF to retrieve a meta schema that matches the provided schemaId and optionally includes the query parameter supported-features.\n\nThe figure depicts a request for a meta schema, which is a set of rules and constraints that define the structure and behavior of a system. The request is made by a user, indicating their need for a schema that will help them understand and manage the system's behavior. The schema is requested to be a meta schema, which means it will be a higher-level schema that can be used to define the system's behavior. The request is made in the context of a system that is designed to manage requests and responses, and it is important to ensure that the schema is well-defined and can be used to guide the system's behavior.\nFigure 5.2.2.2.9-1: Requesting a Meta Schema\n1.\tThe NF service consumer (any NF) sends a GET request to the resource indicated by schemaId.\n2a.\tOn success, the UDSF responds with \"200 OK\" with the message body containing the meta schema.\n2b.\tIf the meta schema for the given schemaId does not exist in the UDSF, the HTTP status code \"404 Not Found\" shall be returned optionally including additional error information in the response body (in the ProblemDetails element).\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the GET response body.\nThe following procedures using the Create service operation are supported:\n-\tRecord Create\n-\tBlock Create\n-\tMeta Schema Create\nFigure 5.2.2.3.2-1 shows a scenario where the NF service consumer sends a request to the UDSF to create a record with the provided recordId.\nThe request contains the recordId and optionally the query parameters supported-features and get-previous.\n\nThe figure depicts a 5G network with various components such as base stations (gNB), user equipment (UE), and scatterers. The diagram illustrates the signal propagation in a 5G network, highlighting the multi-path signal path and beamforming techniques to mitigate interference. The fiber-optic backbone architecture is shown, with core switches, optical line terminals (OLTs), and distributed nodes. Redundancy paths are depicted in dashed lines, ensuring failover reliability. The layered design aligns with SDN principles.\nFigure 5.2.2.3.2-1: Create a Record\n1.\tThe NF service consumer (any NF) sends a PUT request to create the resource indicated by recordId. The request body contains the meta, zero or more blocks. The record meta information is mandatory and shall be the first part and the remaining parts of the request body (if any) shall be child blocks. If the record meta information is received with record expiry details, UDSF shall create an implicit subscription locally and notify the NF service consumer on record expiry.\n2a.\tOn success, \"201 Created\" shall be returned, the content of the PUT response should contain the representation of the created resource, and the \"Location\" header shall be present and shall contain the URI of the created resource.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the PUT response body.\nFigure 5.2.2.3.3-1 shows a scenario where the NF service consumer sends a request to the UDSF to create a block with the provided blockId.\nThe request contains the blockid and optionally the query parameters supported-features and get-previous.\nThe figure depicts a block with various components, including a 5G signal path, a base station (gNB), user equipment (UE), and scatterers. The diagram illustrates the multi-path signal propagation in a 5G network, highlighting beamforming techniques to mitigate interference.\nFigure 5.2.2.3.3-1: Create a Block\n1.\tThe NF service consumer (any NF) sends a PUT request to create the resource indicated by blockId.\n2a.\tOn success, \"201 Created\" shall be returned, the content of the PUT response should contain the representation of the created resource, and the \"Location\" header shall be present and shall contain the URI of the created resource.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the PUT response body.\nFigure 5.2.2.3.4-1 shows a scenario where the NF service consumer sends a request to the UDSF to create a meta schema with the provided schemaId.\nThe request contains the schemaId and optionally the query parameters supported-features and get-previous.\nThe figure depicts a meta schema for creating a 5G network, illustrating the various components and their interactions. The diagram includes a base station (gNB), user equipment (UE), and scatterers, highlighting the importance of beamforming techniques to mitigate interference. The layered design of the network aligns with SDN principles, emphasizing the importance of network virtualization and automation.\nFigure 5.2.2.3.4-1: Create a Meta Schema\n1.\tThe NF service consumer (any NF) sends a PUT request to create the resource indicated by schemaId. The request body contains the meta schema.\n2a.\tOn success, \"201 Created\" shall be returned, the contentof the PUT response should contain the representation of the created resource, and the \"Location\" header shall be present and shall contain the URI of the created resource.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the PUT response body.\nThe following procedures using the Update service operation are supported:\n-\tRecord Update\n-\tBlock Update\n-\tMeta Update\n-\tSubscription Notification Update\n-\tMeta Schema Update\nFigure 5.2.2.4.2-1 shows a scenario where the NF service consumer sends a request to the UDSF to update a record with the provided recordId.\nThe request contains the recordId and optionally the query parameters supported-features and get-previous.\nThe update shall include meta, zero or more blocks. The record meta information shall be the first part and is mandatory and the remaining parts of the body (if any) shall be interpreted as child blocks. Existing record, meta and blocks shall be discarded and the new record, meta and blocks (if any) shall be created.\nNOTE:\tThe order of the returned blocks in the response is not guaranteed and can be different from the order used to create them.\nThe figure depicts a user interface for updating a record in a database system. The interface includes a list of records to be updated, a search bar for filtering records, and a button to submit the update. The figure also shows the layout of the database table, with columns for the record's name, description, and status. The update button is highlighted, indicating that it is the action to be performed.\nFigure 5.2.2.4.2-1: Update a record\n1.\tThe NF service consumer shall send a PUT request to the resource representing the record that is to be updated, and may include meta, zero or more blocks. The record meta information is mandatory and shall be the first part and the remaining parts of the request body (if any) shall be child blocks. An existing record, i.e., meta and blocks shall be discarded and the new record, meta and blocks (if any) shall be created.\n2a.\tOn success, the UDSF shall respond with \"204 No Content\" if no record is returned, i.e. the get-previous query parameter was not included in the request.\n2b.\tOn success, the UDSF shall respond with \"200 OK\" if a record is returned, i.e. the get-previous query parameter was included in the request, or due to operator's policy, the ttl value in the request exceeded the maximum value allowed.\n2c.\tOn failure, the UDSF shall respond with \"412 Precondition Failed\" if one or more conditions given in the request header fields evaluated to false. The RecordBody shall include the stored Record if the get-previous query parameter was included in the request.\n2d.\tOn failure, the UDSF may respond with \"409 Conflict\" if the request fields did not include any preconditions (i.e. \"if-*\"), optionally including additional error information in the response body (in the ExtendedProblemDetails element). The UDSF may include the stored record in the ProblemDetailsExtension.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the PUT response body.\nFigure 5.2.2.4.3-1 shows a scenario where the NF service consumer sends a request to the UDSF to update a block with the provided blockId.\nThe request contains the recordId, blockId and the optional query parameters supported-features, get-previous and the data that is to be updated.\nThe figure depicts a block in a blockchain system, with various components such as the block header, transaction data, and hash value. The block header includes the block number, timestamp, and the hash of the previous block. The transaction data includes the hash of the transaction, the sender's public key, and the recipient's public key. The hash value is a unique identifier for the block, ensuring its integrity and preventing double-spending. The figure illustrates the process of updating a block, including the addition of new transaction data and the modification of the hash value.\nFigure 5.2.2.4.3-1: Update a block\n1.\tThe NF service consumer shall send a PUT request to the resource representing the block that is to be updated.\n2a.\tOn success, the UDSF shall respond with \"204 No Content\" if no record is returned, i.e. the get-previous query parameter was not included in the request.\n2b.\tOn success, the UDSF shall respond with \"200 OK\" if a record is returned, i.e. the get-previous query parameter was included in the request.\n2c.\tOn failure, the UDSF shall respond with \"412 Precondition Failed\" if one or more conditions given in the request header fields evaluated to false. The BlockBody shall be included with the stored Block if the get-previous query parameter was included in the request.\n2d.\tOn failure, the UDSF may respond with \"409 Conflict\" if the request fields did not include any preconditions (i.e. \"if-*\"), optionally including additional error information in the response body (in the ExtendedProblemDetails element).  The UDSF may include the stored record in the ProblemDetailsExtension.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the PUT response body.\nFigure 5.2.2.4.4-1 shows a scenario where the NF service consumer sends a request to the UDSF to update the meta data associated with the provided recordId and optionally the query parameter supported-features and the data that is to be updated.\nThe figure depicts a network update meta, which is a crucial component in the update process of a network. It includes the necessary information for updating the network configuration, such as the network ID, update type, and the list of updates to be performed. The figure also shows the network ID, update type, and the list of updates to be performed.\nFigure 5.2.2.4.4-1: Update meta\n1.\tThe NF service consumer shall send a PATCH request to the resource representing the meta of the record.\n2a.\tOn success, if all the modification instructions in the PATCH request have been implemented, the UDSF shall respond with \"204 No Content\".\n2b.\tOn partial success, i.e. if one or more modification instructions have been discarded, \"200 OK\" with the execution report, shall be returned.\n2c.\tOn failure, the UDSF shall respond with \"404 Not Found\" if the record indicated by the recordId and thus the meta does not exist and may shall include the ProblemDetails.\n2d.\tOn failure, the UDSF shall respond with \"412 Precondition Failed\" if one or more conditions given in the request header fields evaluated to false, and optionally including additional error information in the response body (in \"ExtendedProblemDetails\" element). The UDSF may include the meta of the stored record in the ProblemDetailsExtension.\n2e.\tOn failure, the UDSF may respond with \"409 Conflict\" if the request fields did not include any preconditions (i.e. \"if-*\") and optionally including additional error information in the response body (in \"ExtendedProblemDetails\" element). The UDSF may include the meta of the stored record in the ProblemDetailsExtension.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the PUT response body.\nFigure 5.2.2.4.5-1 shows a scenario where the NF service consumer sends a request to the UDSF to update the Individual Subscription Notification identified with the storageId and subscriptionId and optionally the query parameter supported-features and the data that is to be updated.\nThe figure depicts an update notification for a subscription, with the following details:\n\n- Subscription ID: 1234567890\n- Subscription Type: 1234567890\n- Subscription Status: 1234567890\n- Subscription Expiration Date: 1234567890\n- Subscription Plan: 1234567890\n- Subscription Plan Details: 1234567890\n- Subscription Plan Price: 1234567890\n- Subscription Plan Price Details: 1234567890\n- Subscription Plan Price Type: 1234567890\n- Subscription Plan Price Details: 1234567890\n- Subscription Plan Price Type: 1234567890\n- Subscription Plan Price Details: 1234567890\n- Subscription Plan Price Type: 1234567890\n- Subscription Plan Price Details: 12345678\nFigure 5.2.2.4.5-1: Update Subscription Notification\n1.\tThe NF service consumer shall send a PATCH request to the resource representing the subscriptionId.\n2a.\tOn success, if all the modification instructions in the PATCH request have been implemented, the UDSF shall respond with \"204 No Content\".\n2b.\tOn partial success, i.e. if one or more modification instructions have been discarded, \"200 OK\" with the execution report, shall be returned.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the PATCH response body.\nFigure 5.2.2.4.6-1 shows a scenario where the NF service consumer sends a request to the UDSF to update a subscription to notifications of data change using PUT. The request contains the subscriptionId and the NotificationSubscription and optionally the query parameter supported-features.\nThe figure depicts a NF service consumer updating its subscription to notifications, illustrating the process of subscribing to notifications in a NF service.\nFigure 5.2.2.4.6-1: NF service consumer updates subscription to notifications\n1.\tThe NF service consumer sends a PUT request to the resource indicated by the storageId and the subscriptionId. The parameter clientId shall be included. If the resource indicated in URI exists and was created by the Client identified by the clientId, the UDSF shall apply the update of the subscription.\n2a.\tOn success, the UDSF shall respond with \"200 OK\" and include the updated NotificationSubscription. The expiry attribute of the received NotificationSubscription may indicate a value or a value different from the request, if due to an operator policy, an expiry time is enforced or if the value in the request exceeded a maximum allowed expiry time.\n2b.\tOn failure, if one or more monitoredResourceUris from the request don't exist in the UDSF, 409 Conflict shall be returned together with the non-existing monitoredResourceUris.\n2c.\tOn failure, if the service operation cannot be authorized due to e.g. the resource indicated in URI exists but the clientId in the PUT request does not match the clientId of the existing resource, the UDSF shall respond with \"403 Forbidden\" and optionally including additional error information in the response body (in \"ProblemDetails\" element).\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the PUT response body.\nFigure 5.2.2.4.7-1 shows a scenario where the NF service consumer sends a request to the UDSF to update a meta schema with the provided schemaId.\nThe request contains the schemaId, the complete new meta schema and optionally the query parameters supported-features and get-previous.\nThe figure depicts a meta schema update process, illustrating the steps involved in updating a meta schema. The schema is represented as a tree structure, with nodes representing different types of data and edges representing relationships between them. The figure shows the process of updating the schema, including the creation of new nodes, the addition of new edges, and the modification of existing ones. The figure is a visual representation of the complex process of schema management in a meta-data system.\nFigure 5.2.2.4.7-1: Update a meta schema\n1.\tThe NF service consumer shall send a PUT request to the resource representing the record that is to be updated, the request body shall include the complete new meta schema.\n2a.\tOn success, the UDSF shall respond with \"204 No Content\" if no meta schema is returned, i.e. the get-previous query parameter was not included in the request.\n2b.\tOn success, the UDSF shall respond with \"200 OK\" if a meta schema is returned, i.e. the get-previous query parameter was included in the request.\n2c.\tOn failure, the UDSF shall respond with \"404 Not Found\" if realm or storage does not exist.\n2d\tOn failure, the UDSF shall respond with \"501 Not Implemented\" if meta schema update is not implemented by the UDSF.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the PUT response body.\nThe following procedures using the Delete service operation are supported:\n-\tRecord Delete\n-\tBlock Delete\n-\tMeta Schema Delete\n-\tBulk Records Delete\nFigure 5.2.2.5.2-1 shows a scenario where the NF service consumer sends a request to the UDSF to Delete a record with the provided recordId.\nThe request contains the record id and optionally the query parameters supported-features and get-previous.\n\nThe figure depicts a user interface for deleting a record in a database system. The interface includes a list of records to be deleted, a delete button, and a confirmation message. The figure illustrates the user's interaction with the system, showing the steps to delete a record and the confirmation message.\nFigure 5.2.2.5.2-1: Delete a record\n1.\tThe NF service consumer shall send a DELETE request to the resource representing the record. The UDSF shall delete any resource associated with the resource (meta and block(s)).\n2a.\tOn success, the UDSF shall respond with \"204 No Content\" if no record is returned, i.e. the get-previous query parameter was not included in the request.\n2b.\tOn success, the UDSF shall respond with \"200 OK\" if a record is returned, i.e. the get-previous query parameter was included in the request.\n2c.\tOn failure, the UDSF shall respond with \"404 Not Found\" if the record does not exist and may include the ProblemDetails.\n2d.\tOn failure, the UDSF shall respond with \"412 Precondition Failed\" if one or more conditions given in the request header fields evaluated to false and the get-previous query parameter was included in the request. The RecordBody shall be included if the get-previous query parameter was included in the request.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the DELETE response body.\nFigure 5.2.2.5.3-1 shows a scenario where the NF service consumer sends a request to the UDSF to Delete a block with the provided blockId.\nThe request contains the recordId, blockId and optionally the query parameters supported-features and get-previous.\nThe figure depicts a block in a database, with a delete button labeled \"Delete\" at the top right corner. The block is highlighted, indicating that it is currently selected and can be deleted.\nFigure 5.2.2.5.3-1: Delete a block\n1.\tThe NF service consumer shall send a DELETE request to the resource representing the block.\n2a.\tOn success, the UDSF shall respond with \"204 No Content\" if no block is returned, i.e. the get-previous query parameter was not included in the request.\n2b.\tOn success, the UDSF shall respond with \"200 OK\" if a block is returned, i.e. the get-previous query parameter was included in the request.\n2c.\tOn failure, the UDSF shall respond with \"404 Not Found\" if the block does not exist and may include the ProblemDetails.\n2d.\tOn failure, the UDSF shall respond with \"412 Precondition Failed\" if one or more conditions given in the request header fields evaluated to false. The BlockBody shall be included if the get-previous query parameter was included in the request.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the DELETE response body.\nFigure 5.2.2.5.4-1 shows a scenario where the NF service consumer sends a request to the UDSF to Delete a meta schema with the provided schemaId.\nThe request contains the schemaId and optionally the query parameters supported-features and get-previous.\n\nThe figure depicts a 5G network with a focus on signal propagation, illustrating the multi-path signal path and beamforming techniques to mitigate interference. The diagram highlights the role of base stations (gNB), user equipment (UE), and scatterers in the network. The figure also illustrates the fiber-optic backbone architecture, with core switches, optical line terminals (OLTs), and distributed nodes, aligning with SDN principles.\nFigure 5.2.2.5.4-1: Delete a meta schema\n1.\tThe NF service consumer shall send a DELETE request to the resource representing the meta schema.\n2a.\tOn success, the UDSF shall respond with \"204 No Content\" if no meta schema is returned, i.e. the get-previous query parameter was not included in the request.\n2b.\tOn success, the UDSF shall respond with \"200 OK\" if a meta schema is returned, i.e. the get-previous query parameter was included in the request.\n2c.\tOn failure, the UDSF shall respond with \"404 Not Found\" if the meta schema does not exist or \"403 Forbidden\" if the meta schema is still referenced by existing records, and may include the ProblemDetails.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the DELETE response body.\nFigure 5.2.2.5.5-1 shows a scenario where the NF service consumer sends a request to the UDSF to Delete records identified by a filter.\nThe request contains the query parameter filter and optionally the query parameter supported-features.\nThe figure depicts a simplified representation of a filter in a database system, specifically a delete record operation. The figure shows a table with columns for the filter name, the filter value, and the record ID. The delete record operation is represented by the deletion of the record from the table, which is indicated by the deletion of the record from the table. The figure is useful for understanding the structure and operation of a database system, particularly in the context of delete operations.\nFigure 5.2.2.5.5-1: Delete records matching a filter\n1.\tThe NF service consumer shall send a DELETE request to the resource representing the records. The request shall contain a filter query parameter identifying the records to be deleted. The UDSF shall delete any resource associated with the matching records (meta and block(s)). To delete all records and any associated resources the filter query parameter shall consist of SearchComparison with a value of \"GTE\" for the ComparisonOperator, defined in table 6.1.6.3.3-1.\n2a.\tOn success, the UDSF shall respond with \"200 OK\" with the message body containing the RecordIdList identifying the deleted records.\n2b.\tThe UDSF shall respond with \"204 No Content\" if no records matching the filter could be found.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the DELETE response body.\nThe following procedures using the Notify service operation are supported:\n-\tRecord Expiry Notify\n-\tNotification due to Data Change\n-\tSubscription Expiry Notification\nFigure5.2.2.6.2-1 shows a scenario where the UDSF notifies the NF service consumer of the expired record.\nThe Notify is sent by the UDSF to the NF Service Consumer when the record expires as indicated by the time to live (ttl) attribute of RecordMeta.\n\nThe figure depicts a record expiry notify system, which is a crucial component in ensuring data integrity and compliance in the telecommunications industry. The system is designed to notify users when a record is about to expire, allowing them to take necessary actions to prevent data loss. The figure shows the system's components, such as the record, expiry date, and the system's alerting mechanism, which is represented by the red circle. The system's design is based on SDN principles, which emphasizes the use of open, flexible, and automated network infrastructure.\nFigure 5.2.2.6.2-1: Record Expiry Notify\n1.\tThe UDSF shall send a POST request to the callback URI. The request shall contain the record details.\n2a.\tOn success, \"204 No content\" shall be returned by the NF Service Consumer to UDSF.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the POST response body.\nFigure 5.2.2.6.3-1 shows a scenario where the UDSF notifies the NF service consumer of a change to data associated with a block or a record triggered by one or more a Subscription to Notification.\n\nThe figure depicts a notification due to data change, indicating that there has been a change in the data being transmitted. This could be due to a malfunction in the system or a temporary issue that needs to be addressed.\nFigure 5.2.2.6.3-1: Notification due to Data Change\n1.\tThe UDSF shall send a POST request to the callback URI. The request shall contain the RecordNotification details.\n2.\tOn success, \"204 No content\" shall be returned by the NF Service Consumer to UDSF.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the POST response body.\nFigure 5.2.2.6.4-1 shows a scenario where the UDSF notifies the NF service consumer of an expired subscription to data change.\n\nThe figure depicts a subscription expiry notification, showing the expiration date of a subscription. The notification is displayed on a digital screen, indicating that the subscription will expire soon.\nFigure 5.2.2.6.4-1: Subscription Expiry Notification\n1.\tThe UDSF shall send a POST request to the expiryCallbackReference URI. The request shall contain the NotificationInfo.\n2.\tOn success, \"204 No content\" shall be returned by the NF Service Consumer to UDSF.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the POST response body.\nThe following procedures using the Subscribe service operation are supported:\n-\tSubscription to notification of data change\nFigure 5.2.2.7.2-1 shows a scenario where the NF service consumer sends a request to the UDSF to subscribe to notifications of data change. The request contains the subscriptionId, the NotificationSubscription and optionally the query parameter supported-features.\nThe figure depicts a NF service consumer subscribing to notifications, illustrating the user interface and functionality of the service.\nFigure 5.2.2.7.2-1: NF service consumer subscribes to notifications\n1.\tThe NF service consumer sends a PUT request to the resource indicated by the storageId and the subscriptionId. The parameter clientId shall be included. If the resource indicated in URI doesn't exist, the UDSF shall trigger the creation of the subscription.\n2a.\tOn success, the UDSF responds with \"201 Created\"with the message body containing the NotificationSubscription. The expiry attribute of the received NotificationSubscription may indicate a value or a value different from the request, if due to an operator policy, an expiry time is enforced or if the value in the request exceeded a maximum allowed expiry time.\n2b.\tOn failure, if one or more monitoredResourceUris from the request don't exist in the UDSF, 409 Conflict shall be returned together with the non-existing monitoredResourceUris.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the PUT response body.\nThe following procedures using the Unsubscribe service operation are supported:\n-\tUnsubscription to notification of data change\nFigure 5.2.2.8.2-1 shows a scenario where the NF service consumer sends a request to the UDSF to Unsubscribe to notifications of data change. The request contains the subscriptionId, and query parameter client-id, optionally query parameters supported-features and get-previous.\nThe figure depicts a NF service consumer unsubscribing from notifications, illustrating the process of unsubscribing from a service. The NF service consumer is shown as a user, and the notification is depicted as a message. The figure shows the consumer's interaction with the service, highlighting the process of unsubscribing.\nFigure 5.2.2.8.2-1: NF service consumer unsubscribes to notifications\n1.\tThe NF service consumer sends a DELETE request to the resource representing the subscription to notification of data change which is indicated by the subscriptionId.\n2a.\tOn success, the UDSF shall respond with \"204 No Content\" if an empty response body is returned, i.e. the get-previous query parameter was not included in the request.\n2b.\tOn success, the UDSF shall respond with \"200 OK\" with NotificationSubscription containing the NotificationSubscription value before the delete if get-previous was indicated in the request.\n2c.\tIf the service operation cannot be authorized due to e.g. the client-id query parameter does not match the clientId of the existing resource, the UDSF shall respond with \"403 Forbidden\" with including additional error information in the response body (in \"ProblemDetails\" element).\n2d.\tIf there is no valid subscription to notification of data change which is indicated by the request, the UDSF shall respond with \"404 Not Found\" with including additional error information in the response body (in \"ProblemDetails\" element).\n2e.\tIf one or more conditions given in the request header fields evaluated to false, the UDSF shall respond with \"412 Precondition Failed\". NotificationSubscription shall be included in the response if get-previous was indicated in the request.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the PUT response body.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.3\tNudsf_Timer Service",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.3.1\tService Description",
                            "text_content": "The UDSF is acting as an NF Service Producer. It provides UDSF timer service to the NF service consumer. Any NF may use the UDSF to run timers, search for timers, and get notifications on expiry.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.3.2\tService Operations",
                            "text_content": "For the Nudsf_Timer service, the following service operations are defined:\n-\tStart\n-\tUpdate\n-\tStop\n-\tSearch\n-\tNotify\nThe following procedures using the Start service operation are supported:\n-\tTimer Start\nFigure 5.3.2.2.2-1 shows a scenario where the NF service consumer sends a request to the UDSF to start a (new or existing) timer identified by the provided timerId.\nThe figure depicts a 3D representation of a timer, with its components and connections clearly labeled. The timer is a crucial component in a system, responsible for controlling the timing of various operations. The figure shows the timer's components, including the timer itself, the timer's input, and the timer's output. The connections between the components are also labeled, providing a clear understanding of how the timer works. The figure is a useful tool for understanding the internal workings of a timer and its components, as well as for troubleshooting and maintenance.\nFigure 5.3.2.2.2-1: Starting a Timer\n1.\tThe NF service consumer (any NF) sends a PUT request to the resource indicated by timerId.\n2.\tOn success, the UDSF responds with \"204 No Content\" or \"201 Created\".\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the PUT response body.\nThe following procedures using the Update service operation are supported:\n-\tTimer Update\nFigure 5.3.2.3.2-1 shows a scenario where the NF service consumer sends a request to the UDSF to update an existing timer identified by the provided timerId.\nFigure 5 illustrates the process of modifying a timer in a 3.2.2.3 system. The figure shows a timer with a red LED, indicating that it is currently active. The user can adjust the timer's time value by moving the slider, which is connected to a potentiometer. The potentiometer allows the user to control the timer's timing, enabling precise adjustments to the system's operation.\nFigure 5.3.2.3.2-1: Modifying a Timer\n1.\tThe NF service consumer (any NF) sends a PATCH request to the resource indicated by timerId.\n2a.\tOn success, if all the modification instructions in the PATCH request have been implemented, the UDSF shall respond with \"204 No Content\".\n2b.\tOn partial success, i.e. if one or more modification instructions have been discarded, \"200 OK\" with the execution report, shall be returned.\n2c.\tOn failure, the UDSF shall respond with \"404 Not Found\" if the timer indicated by the timerId does not exist and may include the ProblemDetails.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the PATCH response body.\nThe following procedures using the Stop service operation are supported:\n-\tSingle Timer Stop\n-\tMultiple Timer Stop\nFigure 5.3.2.4.2-1 shows a scenario where the NF service consumer sends a request to the UDSF to stop an existing timer identified by the provided timerId.\nFigure 5 illustrates a simple circuit diagram for a single timer, demonstrating the process of stopping it. The circuit consists of a resistor, a capacitor, and a switch, which are connected in a specific order to control the timer's state. The capacitor is used to store the timer's state, while the switch is used to control the flow of current through the circuit. The circuit is designed to be simple and easy to understand, making it suitable for beginners to learn about timer circuits.\nFigure 5.3.2.4.2-1: Stopping a single Timer\n1.\tThe NF service consumer (any NF) sends a DELETE request to the resource indicated by timerId.\n2a.\tOn success, the UDSF shall respond with \"204 No Content\".\n2b.\tOn failure, the UDSF shall respond with \"404 Not Found\" if the timer does not exist and may include the ProblemDetails.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the DELETE response body.\nFigure 5.3.2.4.3-1 shows a scenario where the NF service consumer sends a request to the UDSF to stop all timers matching a provided filter.\nFigure 5 illustrates a complex system with multiple timers, each with its own set of conditions and actions. The system is designed to stop multiple timers simultaneously, ensuring that the system remains stable and efficient.\nFigure 5.3.2.4.3-1: Stopping multiple Timers\n1.\tThe NF service consumer (any NF) sends a DELETE request to the timers resource containing a filter Query Parameter.\n2a.\tOn success, the UDSF shall respond with \"200 OK\" with a message body containing the list of stopped timers.\n2b.\tThe UDSF shall respond with \"204 No Content\" if no timers matching the filter could be found.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the DELETE response body.\nThe following procedures using the Search service operation are supported:\n-\tExpired Timer Search\n-\tTagged Timer Search\nFigure 5.3.2.5.2-1 shows a scenario where the NF service consumer sends a request to the UDSF to search for expired timers matching a provided expired-filter.\nThe figure depicts a search algorithm for expired timers in a 5G network. The algorithm uses a graph-based approach to identify expired timers, with nodes representing timers and edges representing the relationship between timers. The algorithm uses a heuristic search to find the best path to reach the target node, which is the timer with the highest priority. The figure shows the search process, including the initial search, the path selection, and the final node.\nFigure 5.3.2.5.2-1: Searching for expired Timers\n1.\tThe NF service consumer (any NF) sends a GET request to the timers resource containing an expired-filter Query Parameter.\n2a.\tOn success, the UDSF shall respond with \"200 OK\" with a message body containing the list of expired timers matching the expired-filter.\n2b.\tThe UDSF shall respond with \"204 No Content\" if no timers matching the filter could be found.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the GET response body.\nFigure 5.3.2.5.3-1 shows a scenario where the NF service consumer sends a request to the UDSF to search for tagged timers matching a provided filter.\nThe figure depicts a search algorithm for tagged Timers in a 3D grid environment. The algorithm utilizes a 3D grid search strategy to find the optimal solution, with a focus on the 3D search space and the 2D grid search strategy. The algorithm is designed to efficiently search for the optimal solution, with a focus on the 3D search space and the 2D grid search strategy. The algorithm is designed to efficiently search for the optimal solution, with a focus on the 3D search space and the 2D grid search strategy.\nFigure 5.3.2.5.3-1: Searching for tagged Timers\n1.\tThe NF service consumer (any NF) sends a GET request to the timers resource containing a filter Query Parameter.\n2a.\tOn success, the UDSF shall respond with \"200 OK\" with a message body containing the list of tagged timers matching the filter.\n2b.\tThe UDSF shall respond with \"204 No Content\" if no timers matching the filter could be found.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the GET response body.\nThe following procedures using the Notify service operation are supported:\n-\tTimer Expiry Notify\nFigure5.3.2.6.2-1 shows a scenario where the UDSF notifies the NF service consumer of the expired timer.\nThe Notify is sent by the UDSF to the NF Service Consumer when the timer expires as indicated by the expires attribute of the Timer.\n\nThe figure depicts a timer expiring notification system, which is a crucial component in ensuring the proper functioning of a system. The system includes a timer, a notification mechanism, and a system to handle the expiring timer. This system ensures that the timer is not activated until it is expired, preventing potential system failures.\nFigure 5.3.2.6.2-1: Timer Expiry Notify\n1. The UDSF shall send a POST request to the callback URI. The request shall contain the timer that has expired.\n2. On success, \"204 No content\" shall be returned by the NF Service Consumer to UDSF.\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the POST response body.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "6\tAPI Definitions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.1\tNudsf_DataRepository Service API",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.1.1\tIntroduction",
                            "text_content": "The Nudsf_DataRepository service shall use the Nudsf_DataRepository API.\nThe API URI of the Nudsf_DataRepository API shall be:\n{apiRoot}/<apiName>/<apiVersion>/\nThe request URI used in HTTP requests from the NF service consumer towards the NF service producer shall have the Resource URI structure defined in clause 4.4.1 of 3GPP TS 29.501 [5], i.e.:\n{apiRoot}/<apiName>/<apiVersion>/<apiSpecificResourceUriPart>\nwith the following components:\n-\tThe {apiRoot} shall be set as described in 3GPP TS 29.501 [5].\n-\tThe <apiName> shall be \"nudsf-dr\".\n-\tThe <apiVersion> shall be \"v1\".\n-\tThe <apiSpecificResourceUriPart> shall be set as described in clause 6.1.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.2\tUsage of HTTP",
                            "text_content": "HTTP/2, IETF RFC 9113 [11], shall be used as specified in clause 5 of 3GPP TS 29.500 [4].\nHTTP/2 shall be transported as specified in clause 5.3 of 3GPP TS 29.500 [4].\nThe OpenAPI [6] specification of HTTP messages and content bodies for the Nudsf_DataRepository API is contained in Annex A.\nSee clause 5.2.2 of 3GPP TS 29.500 [4] for the usage of HTTP standard headers.\nThe following content types shall be supported:\n-\tJSON, IETF RFC 8259 [12], shall be used as content type of the HTTP bodies specified in the present specification as specified in clause 5.4 of 3GPP TS 29.500 [4]. The use of the JSON format shall be signalled by the content type \"application/json\".\n-\t\"Problem Details\" JSON object shall be used to indicate additional details of the error in a HTTP response body and shall be signalled by the content type \"application/problem+json\", as defined in IETF RFC 9457 [13].\n-\tJSON Patch (IETF RFC 6902 [14]). The use of the JSON Patch format in a HTTP request body shall be signalled by the content type \"application/json-patch+json\".\nMultipart messages shall also be supported possibly indicating other content-types as described in clause 6.1.2.4.\nAs described in IETF RFC 9111 [17] clause 5.2, a \"Cache-Control\" header should be included in HTTP responses carrying a representation of cacheable resources. If it is included, it shall contain a \"max-age\" value, indicating the amount of time in seconds after which the received response is considered stale.\nThe \"max-age\" value shall be configurable by operator policy.\nAs described in IETF RFC 9110 [15] clause 8.8.3, an \"ETag\" (entity-tag) header should be included in HTTP responses carrying a representation of cacheable or modifiable resources  to allow an NF Service Consumer performing a conditional GET request with an \"If-None-Match\" header or a conditional PUT/PATCH/DELETE request with an \"If-Match\" header. If it is included, it shall contain a server-generated strong validator, that allows further matching of this value (included in subsequent client requests) with a given resource representation stored in the server or in a cache.\nAs described in IETF RFC 9110 [15] clause 13.1.2, an NF Service Consumer may issue conditional GET or PUT requests towards UDSF by including an \"If-None-Match\" header in HTTP requests containing one or several entity tags received in previous responses for the same resource.\nIf the If-None-Match header is included with the PUT method, it shall be used with a value of \"*\" to prevent the inadvertent modification of an existing representation of the target resource when the client believes that the resource does not have a current representation.\nAs described in IETF RFC 7232 [15] clause 13.1.1, an NF Service Consumer may issue conditional PUT/PATCH/DELETE request towards UDSF by including an \"If-Match\" header in HTTP requests containing an entity tag received in previous responses for the same resource.\nAs described in IETF RFC 9110 [15] clause 8.8.2, a \"Last-Modified\" header should be included in HTTP responses carrying a representation of cacheable resources to allow an NF Service Consumer performing a conditional request with \"If-Modified-Since\" header.\nAs described in IETF RFC 9110 [15] clause 13.1, an NF Service Consumer may issue conditional GET request towards UDSF, by including an \"If-Modified-Since\" header in HTTP requests.\nBoth \"ETag\" and \"Last-Modified\" headers should be sent in the same HTTP response as stated in IETF RFC 9110 [15] clause 15.3.1.\nNOTE: \"ETag\" is a stronger validator than the \"Last-Modified\" and is preferred.\nIf the UDSF included an \"ETag\" header with the resource then a conditional GET request for this resource shall be performed with the \"If-None-Match\" header, and a PUT/PATCH/DELETE request for this resource shall be performed with the \"If-Match\" header.\nAs described in IETF RFC 9110 [15] clause 8.7, the UDSF shall include the Content-Location header set to the URI of the expired Record when sending a Notification to an NF Consumer.\nThe mandatory HTTP custom header fields specified in clause 5.2.3.2 of 3GPP TS 29.500 [4] shall be applicable.\nHTTP multipart messages shall be supported to transfer the opaque Record and Block Information in the following service operations (and HTTP messages):\n-\tRecord (PUT/GET/DELETE)\n-\tBlockCollection (GET)\n-\tRecordNotification (POST)\nNOTE:\tIn the clauses below, this specification deviates in the definition of the Content-Id header from IETF RFC 2045 [20] in that there is no need for the Content-Id to be \"world unique\", as in this specification the Content-Id is only required to be unique within the context of a Record, BlockCollection or RecordNotification.\nThe Record is encoded as an HTTP multipart message with the multipart/mixed content-type as described in IETF RFC 2046 [21].\nThe boundary parameter is used to delimit each part (Start of parts to RecordMeta, RecordMeta to Block, Block to Block and Block to End of parts) and shall be set to a value as in accordance with IETF  RFC 2046 [21].\nThe RecordMeta part shall be the first part, and shall always be present. It shall include a Content-Id header that may be set to an unquoted value of \"meta\" or any other suitable value, for example as described in IETF RFC 2045 [20], the Content-Type (see IETF RFC 2045 [20]) header set to \"application/json\" and include JSON content for the RecordMeta.\nZero or more Block parts may follow the RecordMeta Part. For each Block part in the HTTP multipart/mixed message, the Block part shall include a Content-Id header identifying the Block with the value of the blockId, a Content-Type (see IETF RFC 2045 [20]) header indicating the MIME type of the Block (any value), e.g. application/octet-stream, application/json or another applicable MIME type and the Content-Transfer-Encoding (see IETF RFC 2045 [20]) header with an appropriate value.\nThe BlockCollection is encoded as an HTTP multipart message with the multipart/parallel content-type as described in IETF RFC 2046 [21].\nThe boundary parameter is used to delimit each part (Start of parts to Block, Block to Block and Block to End of parts) and shall be set to a value as in accordance with IETF  RFC 2046 [21].\nFor the BlockCollection, zero or more Block parts may be included. For each Block part in the HTTP multipart/parallel message, the Block part shall include a Content-Id header identifying the Block with the value of the blockId, a Content-Type header indicating the MIME type of the Block (any value) e.g. application/octet-stream, application/json or another applicable MIME type and the Content-Transfer-Encoding (see IETF RFC 2045 [20]) header with an appropriate value.\nThe RecordNotification is encoded as an HTTP multipart message with the multipart/mixed content-type as described in IETF RFC 2046 [21].\nThe boundary parameter is used to delimit each part (Start of parts to RecordNotification, RecordNotification to RecordMeta, RecordMeta to Block, Block to Block and Block to End of parts) and shall be set to a value in accordance with IETF  RFC 2046 [21].\nThe RecordNotification shall be the first part, and shall always be present. It shall include a Content-Id header set to an unquoted value of \"meta\" or any other suitable value, for example as described in IETF RFC 2045 [20], the Content-Type (see IETF RFC 2045 [20]) header set to \"application/json\" and include JSON content for the NotificationDescription.\nThe RecordMeta part shall be the second part, and shall always be present. It shall include a Content-Id header set to an unquoted value of \"meta\" or any other suitable value, for example as described in IETF RFC 2045 [20], the Content-Type (see IETF RFC 2045 [20]) header set to \"application/json\" and include JSON content for the RecordMeta.\nZero or more Block parts may follow the RecordMeta Part. For each Block part in the HTTP multipart/mixed message, the Block part shall include a Content-Id header identifying the Block with the value of the blockId, a Content-Type (see IETF RFC 2045 [20]) header indicating the MIME type of the Block (any value), e.g. application/octet-stream, application/json or another applicable MIME type and the Content-Transfer-Encoding (see IETF RFC 2045 [20]) header with an appropriate value.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.3\tResources",
                            "text_content": "The figure depicts the structure of the nudsf-dr API, which is a RESTful API used for accessing the nudsf-dr dataset. The structure includes a URI for each resource, such as a dataset, a model, or a dataset-model pair, and a list of parameters that can be used to query the API. The figure provides a clear and concise representation of the API's structure, making it easy to understand and navigate.\nFigure 6.1.3.1-1: Resource URI structure of the nudsf-dr API\nTable 6.1.3.1-1 provides an overview of the resources and applicable HTTP methods.\nTable 6.1.3.1-1: Resources and methods overview\n\nThis resource represents the collection of records within a storage. It can be used to search for specific records matching specific filter criteria.\nResource URI: {apiRoot}/nudsf-dr/<apiVersion>/{realmId}/{storageId}/records\nThis resource shall support the resource URI variables defined in table 6.1.3.2.2-1.\nTable 6.1.3.2.2-1: Resource URI variables for this resource\n\n6.1.3.2.3.1\tGET\nThis method shall support the URI query parameters specified in table 6.1.3.2.3.1-1.\nTable 6.1.3.2.3.1-1: URI query parameters supported by the GET method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.2.3.1-2 and the response data structures and response codes specified in table 6.1.3.2.3.1-3.\nTable 6.1.3.2.3.1-2: Data structures supported by the GET Request Body on this resource\n\nTable 6.1.3.2.3.1-3: Data structures supported by the GET Response Body on this resource\n\n6.1.3.2.3.2\tDELETE\nThis method shall support the URI query parameters specified in table 6.1.3.2.3.2-1.\nTable 6.1.3.2.3.2-1: URI query parameters supported by the DELETE method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.2.3.2-2 and the response data structures and response codes specified in table 6.1.3.2.3.2-3.\nTable 6.1.3.2.3.2-2: Data structures supported by the DELETE Request Body on this resource\n\nTable 6.1.3.2.3.2-3: Data structures supported by the DELETE Response Body on this resource\n\nThis resource represents a record within a storage.\nResource URI: {apiRoot}/nudsf-dr/<apiVersion>/{realmId}/{storageId}/records/{recordId}\nThis resource shall support the resource URI variables defined in table 6.1.3.3.2-1.\nTable 6.1.3.3.2-1: Resource URI variables for this resource\n\n6.1.3.3.3.1\tGET\nThis method shall support the URI query parameters specified in table 6.1.3.3.3.1-1.\nTable 6.1.3.3.3.1-1: URI query parameters supported by the GET method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.3.3.1-2 and the response data structures and response codes specified in table 6.1.3.3.3.1-3.\nTable 6.1.3.3.3.1-2: Data structures supported by the GET Request Body on this resource\n\nTable 6.1.3.3.3.1-3: Data structures supported by the GET Response Body on this resource\n\n6.1.3.3.3.2\tPUT\nThis method shall support the URI query parameters specified in table 6.1.3.3.3.2-1.\nTable 6.1.3.3.3.2-1: URI query parameters supported by the PUT method on this resource\n\nWhen creating or replacing the record, meta and zero or more blocks shall be included. The record meta information shall be the first part and is mandatory. The remaining parts of the body (if any) shall be the blocks to be updated or created. See clause 6.1.2.4 for details on the encoding.\nIf the operation updates an existing record, then the existing record and its blocks shall be discarded and replaced by the meta and blocks supplied with the request. This also applies to the case when no new blocks are included, i.e. the old blocks (if any) shall be deleted from the record.\nThis method shall support the request data structures specified in table 6.1.3.3.3.2-2 and the response data structures and response codes specified in table 6.1.3.3.3.2-3.\nTable 6.1.3.3.3.2-2: Data structures supported by the PUT Request Body on this resource\n\nTable 6.1.3.3.3.2-3: Data structures supported by the PUT Response Body on this resource\n\n6.1.3.3.3.3\tDELETE\nThis method shall support the URI query parameters specified in table 6.1.3.3.3.3-1.\nTable 6.1.3.3.3.3-1: URI query parameters supported by the DELETE method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.3.3.3-2 and the response data structures and response codes specified in table 6.1.3.3.3.3-3.\nTable 6.1.3.3.3.3-2: Data structures supported by the DELETE Request Body on this resource\n\nTable 6.1.3.3.3.3-3: Data structures supported by the DELETE Response Body on this resource\n\nThis resource represents the meta associated with a record.\nResource URI: {apiRoot}/nudsf-dr/<apiVersion>/{realmId}/{storageId}/records/{recordId}/meta\nThis resource shall support the resource URI variables defined in table 6.1.3.4.2-1.\nTable 6.1.3.4.2-1: Resource URI variables for this resource\n\n6.1.3.4.3.1\tGET\nThis method shall support the URI query parameters specified in table 6.1.3.4.3.1-1.\nTable 6.1.3.4.3.1-1: URI query parameters supported by the GET method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.4.3.1-2 and the response data structures and response codes specified in table 6.1.3.4.3.1-3.\nTable 6.1.3.4.3.1-2: Data structures supported by the GET Request Body on this resource\n\nTable 6.1.3.4.3.1-3: Data structures supported by the GET Response Body on this resource\n\n6.1.3.4.3.2\tPATCH\nThis method shall support the URI query parameters specified in table 6.1.3.4.3.2-1.\nTable 6.1.3.4.3.2-1: URI query parameters supported by the PATCH method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.4.3.2-2 and the response data structures and response codes specified in table 6.1.3.4.3.2-3.\nTable 6.1.3.4.3.2-2: Data structures supported by the PATCH Request Body on this resource\n\nTable 6.1.3.4.3.2-3: Data structures supported by the PATCH Response Body on this resource\n\nThis resource represents the collection of blocks of associated with a record.\nResource URI: {apiRoot}/nudsf-dr/<apiVersion>/{realmId}/{storageId}/records/{recordId}/blocks\nThis resource shall support the resource URI variables defined in table 6.1.3.5.2-1.\nTable 6.1.3.5.2-1: Resource URI variables for this resource\n\n6.1.3.5.3.1\tGET\nThis method shall support the URI query parameters specified in table 6.1.3.5.3.1-1.\nTable 6.1.3.5.3.1-1: URI query parameters supported by the GET method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.5.3.1-2 and the response data structures and response codes specified in table 6.1.3.5.3.1-3.\nTable 6.1.3.5.3.1-2: Data structures supported by the GET Request Body on this resource\n\nTable 6.1.3.5.3.1-3: Data structures supported by the GET Response Body on this resource\n\nThis resource represents a record within a storage.\nResource URI: {apiRoot}/nudsf-dr/<apiVersion>/{realmId}/{storageId}/records/{recordId}/blocks/{blockId}\nThis resource shall support the resource URI variables defined in table 6.1.3.6.2-1.\nTable 6.1.3.6.2-1: Resource URI variables for this resource\n\n6.1.3.6.3.1\tGET\nThis method shall support the URI query parameters specified in table 6.1.3.6.3.1-1.\nTable 6.1.3.6.3.1-1: URI query parameters supported by the GET method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.6.3.1-2 and the response data structures and response codes specified in table 6.1.3.6.3.1-3.\nTable 6.1.3.6.3.1-2: Data structures supported by the GET Request Body on this resource\n\nTable 6.1.3.6.3.1-3: Data structures supported by the GET Response Body on this resource\n\n6.1.3.6.3.2\tPUT\nThis method shall support the URI query parameters specified in table 6.1.3.6.3.2-1.\nTable 6.1.3.6.3.2-1: URI query parameters supported by the PUT method on this resource\n\nIf the operation updates an existing block, then the existing block shall be discarded and replaced by the block supplied with the request.\nThis method shall support the request data structures specified in table 6.1.3.6.3.2-2 and the response data structures and response codes specified in table 6.1.3.6.3.2-3.\nTable 6.1.3.6.3.2-2: Data structures supported by the PUT Request Body on this resource\n\nTable 6.1.3.6.3.2-3: Data structures supported by the PUT Response Body on this resource\n\n6.1.3.6.3.3\tDELETE\nThis method shall support the URI query parameters specified in table 6.1.3.6.3.3-1.\nTable 6.1.3.6.3.3-1: URI query parameters supported by the DELETE method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.6.3.3-2 and the response data structures and response codes specified in table 6.1.3.6.3.3-3.\nTable 6.1.3.6.3.3-2: Data structures supported by the DELETE Request Body on this resource\n\nTable 6.1.3.6.3.3-3: Data structures supported by the DELETE Response Body on this resource\n\nThis resource is used to represent notification subscriptions.\nResource URI: {apiRoot}/nudsf-dr/<apiVersion>/{realmId}/{storageId}/subs-to-notify\nThis resource shall support the resource URI variables defined in table 6.1.3.7.2-1.\nTable 6.1.3.7.2-1: Resource URI variables for this resource\n\n6.1.3.7.3.2\tGET\nThis method shall support the URI query parameters specified in table 6.1.3.7.3.2-1.\nTable 6.1.3.7.3.2-1: URI query parameters supported by the GET method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.7.3.2-2 and the response data structures and response codes specified in table 6.1.3.7.3.2-3.\nTable 6.1.3.7.3.2-2: Data structures supported by the GET Request Body on this resource\n\nTable 6.1.3.7.3.2-3: Data structures supported by the GET Response Body on this resource\n\nThis resource is used to represent an individual subscriber data subscriptions to notifications.\nResource URI: {apiRoot}/nudsf-dr/<apiVersion>/{realmId}/{storageId}/subs-to-notify/{subscriptionId}\nThis resource shall support the resource URI variables defined in table 6.1.3.8.2-1.\nTable 6.1.3.8.2-1: Resource URI variables for this resource\n\n6.1.3.8.3.1\tDELETE\nThis method shall support the URI query parameters specified in table 6.1.3.8.3.1-1.\nTable 6.1.3.8.3.1-1: URI query parameters supported by the DELETE method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.8.3.1-2 and the response data structures and response codes specified in table 6.1.3.8.3.1-3.\nTable 6.1.3.8.3.1-2: Data structures supported by the DELETE Request Body on this resource\n\nTable 6.1.3.8.1-3: Data structures supported by the DELETE Response Body on this resource\n\n6.1.3.8.3.2\tPATCH\nThis method shall support the URI query parameters specified in table 6.1.3.8.3.2-1.\nTable 6.1.3.8.3.2-1: URI query parameters supported by the PATCH method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.8.3.2-2 and the response data structures and response codes specified in table 6.1.3.8.3.2-3.\nTable 6.1.3.8.3.2-2: Data structures supported by the PATCH Request Body on this resource\n\nTable 6.1.3.8.3.2-3: Data structures supported by the PATCH Response Body on this resource\n\n6.1.3.8.3.3\tGET\nThis method shall support the URI query parameters specified in table 6.1.3.8.3.3-1.\nTable 6.1.3.8.3.3-1: URI query parameters supported by the GET method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.8.3.3-2 and the response data structures and response codes specified in table 6.1.3.8.3.3-3.\nTable 6.1.3.8.3.3-2: Data structures supported by the GET Request Body on this resource\n\nTable 6.1.3.8.3.3-3: Data structures supported by the GET Response Body on this resource\n\n6.1.3.8.3.4\tPUT\nThis method shall support the URI query parameters specified in table 6.1.3.8.3.4-1.\nTable 6.1.3.8.3.4-1: URI query parameters supported by the PUT method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.8.3.4-2 and the response data structures and response codes specified in table 6.1.3.8.3.4-3.\nTable 6.1.3.8.3.4-2: Data structures supported by the PUT Request Body on this resource\n\nTable 6.1.3.8.3.4-3: Data structures supported by the PUT Response Body on this resource\n\nThis resource represents a meta schema within a storage.\nResource URI: {apiRoot}/nudsf-dr/v1/{realmId}/{storageId}/meta-schemas/{schemaId}\nThis resource shall support the resource URI variables defined in table 6.1.3.9.2-1.\nTable 6.1.3.9.2-1: Resource URI variables for this resource\n\n6.1.3.9.3.1\tGET\nThis method shall support the URI query parameters specified in table 6.1.3.9.3.1-1.\nTable 6.1.3.9.3.1-1: URI query parameters supported by the GET method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.9.3.1-2 and the response data structures and response codes specified in table 6.1.3.9.3.1-3.\nTable 6.1.3.9.3.1-2: Data structures supported by the GET Request Body on this resource\n\nTable 6.1.3.9.3.1-3: Data structures supported by the GET Response Body on this resource\n\n6.1.3.9.3.2\tPUT\nThis method shall support the URI query parameters specified in table 6.1.3.9.3.2-1.\nTable 6.1.3.9.3.2-1: URI query parameters supported by the PUT method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.9.3.2-2 and the response data structures and response codes specified in table 6.1.3.9.3.2-3.\nTable 6.1.3.9.3.2-2: Data structures supported by the PUT Request Body on this resource\n\nTable 6.1.3.9.3.2-3: Data structures supported by the PUT Response Body on this resource\n\nTable 6.1.3.9.3.2-4: Headers supported by the 201 Response Code on this resource\n\n6.1.3.9.3.3\tDELETE\nThis method shall support the URI query parameters specified in table 6.1.3.9.3.3-1.\nTable 6.1.3.9.3.3-1: URI query parameters supported by the DELETE method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.9.3.3-2 and the response data structures and response codes specified in table 6.1.3.9.3.3-3.\nTable 6.1.3.9.3.3-2: Data structures supported by the DELETE Request Body on this resource\n\nTable 6.1.3.9.3.3-3: Data structures supported by the DELETE Response Body on this resource\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.3.1-1: Resources and methods overview",
                                    "table number": 4,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.2-1: Resource URI variables for this resource",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.3.1-1: URI query parameters supported by the GET method on this resource",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.3.1-2: Data structures supported by the GET Request Body on this resource",
                                    "table number": 7,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.3.1-3: Data structures supported by the GET Response Body on this resource",
                                    "table number": 8,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.3.2-1: URI query parameters supported by the DELETE method on this resource",
                                    "table number": 9,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.3.2-2: Data structures supported by the DELETE Request Body on this resource",
                                    "table number": 10,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.3.2-3: Data structures supported by the DELETE Response Body on this resource",
                                    "table number": 11,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.2-1: Resource URI variables for this resource",
                                    "table number": 12,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.3.1-1: URI query parameters supported by the GET method on this resource",
                                    "table number": 13,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.3.1-2: Data structures supported by the GET Request Body on this resource",
                                    "table number": 14,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.3.1-3: Data structures supported by the GET Response Body on this resource",
                                    "table number": 15,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.3.2-1: URI query parameters supported by the PUT method on this resource",
                                    "table number": 16,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.3.2-2: Data structures supported by the PUT Request Body on this resource",
                                    "table number": 17,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.3.2-3: Data structures supported by the PUT Response Body on this resource",
                                    "table number": 18,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.3.3-1: URI query parameters supported by the DELETE method on this resource",
                                    "table number": 19,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.3.3-2: Data structures supported by the DELETE Request Body on this resource",
                                    "table number": 20,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.3.3-3: Data structures supported by the DELETE Response Body on this resource",
                                    "table number": 21,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.4.2-1: Resource URI variables for this resource",
                                    "table number": 22,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.4.3.1-1: URI query parameters supported by the GET method on this resource",
                                    "table number": 23,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.4.3.1-2: Data structures supported by the GET Request Body on this resource",
                                    "table number": 24,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.4.3.1-3: Data structures supported by the GET Response Body on this resource",
                                    "table number": 25,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.4.3.2-1: URI query parameters supported by the PATCH method on this resource",
                                    "table number": 26,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.4.3.2-2: Data structures supported by the PATCH Request Body on this resource",
                                    "table number": 27,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.4.3.2-3: Data structures supported by the PATCH Response Body on this resource",
                                    "table number": 28,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.5.2-1: Resource URI variables for this resource",
                                    "table number": 29,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.5.3.1-1: URI query parameters supported by the GET method on this resource",
                                    "table number": 30,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.5.3.1-2: Data structures supported by the GET Request Body on this resource",
                                    "table number": 31,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.5.3.1-3: Data structures supported by the GET Response Body on this resource",
                                    "table number": 32,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.6.2-1: Resource URI variables for this resource",
                                    "table number": 33,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.6.3.1-1: URI query parameters supported by the GET method on this resource",
                                    "table number": 34,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.6.3.1-2: Data structures supported by the GET Request Body on this resource",
                                    "table number": 35,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.6.3.1-3: Data structures supported by the GET Response Body on this resource",
                                    "table number": 36,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.6.3.2-1: URI query parameters supported by the PUT method on this resource",
                                    "table number": 37,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.6.3.2-2: Data structures supported by the PUT Request Body on this resource",
                                    "table number": 38,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.6.3.2-3: Data structures supported by the PUT Response Body on this resource",
                                    "table number": 39,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.6.3.3-1: URI query parameters supported by the DELETE method on this resource",
                                    "table number": 40,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.6.3.3-2: Data structures supported by the DELETE Request Body on this resource",
                                    "table number": 41,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.6.3.3-3: Data structures supported by the DELETE Response Body on this resource",
                                    "table number": 42,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.7.2-1: Resource URI variables for this resource",
                                    "table number": 43,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.7.3.2-1: URI query parameters supported by the GET method on this resource",
                                    "table number": 44,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.7.3.2-2: Data structures supported by the GET Request Body on this resource",
                                    "table number": 45,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.7.3.2-3: Data structures supported by the GET Response Body on this resource",
                                    "table number": 46,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.8.2-1: Resource URI variables for this resource",
                                    "table number": 47,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.8.3.1-1: URI query parameters supported by the DELETE method on this resource",
                                    "table number": 48,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.8.3.1-2: Data structures supported by the DELETE Request Body on this resource",
                                    "table number": 49,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.8.1-3: Data structures supported by the DELETE Response Body on this resource",
                                    "table number": 50,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.8.3.2-1: URI query parameters supported by the PATCH method on this resource",
                                    "table number": 51,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.8.3.2-2: Data structures supported by the PATCH Request Body on this resource",
                                    "table number": 52,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.8.3.2-3: Data structures supported by the PATCH Response Body on this resource",
                                    "table number": 53,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.8.3.3-1: URI query parameters supported by the GET method on this resource",
                                    "table number": 54,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.8.3.3-2: Data structures supported by the GET Request Body on this resource",
                                    "table number": 55,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.8.3.3-3: Data structures supported by the GET Response Body on this resource",
                                    "table number": 56,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.8.3.4-1: URI query parameters supported by the PUT method on this resource",
                                    "table number": 57,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.8.3.4-2: Data structures supported by the PUT Request Body on this resource",
                                    "table number": 58,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.8.3.4-3: Data structures supported by the PUT Response Body on this resource",
                                    "table number": 59,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.9.2-1: Resource URI variables for this resource",
                                    "table number": 60,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.9.3.1-1: URI query parameters supported by the GET method on this resource",
                                    "table number": 61,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.9.3.1-2: Data structures supported by the GET Request Body on this resource",
                                    "table number": 62,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.9.3.1-3: Data structures supported by the GET Response Body on this resource",
                                    "table number": 63,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.9.3.2-1: URI query parameters supported by the PUT method on this resource",
                                    "table number": 64,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.9.3.2-2: Data structures supported by the PUT Request Body on this resource",
                                    "table number": 65,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.9.3.2-3: Data structures supported by the PUT Response Body on this resource",
                                    "table number": 66,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.9.3.2-4: Headers supported by the 201 Response Code on this resource",
                                    "table number": 67,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.9.3.3-1: URI query parameters supported by the DELETE method on this resource",
                                    "table number": 68,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.9.3.3-2: Data structures supported by the DELETE Request Body on this resource",
                                    "table number": 69,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.9.3.3-3: Data structures supported by the DELETE Response Body on this resource",
                                    "table number": 70,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.4\tCustom Operations without associated resources",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.5\tNotifications",
                            "text_content": "Notifications shall comply to clause 6.2 of 3GPP TS 29.500 [4] and clause 4.6.2.3 of 3GPP TS 29.501 [5].\nThe Timer Expiry Notification is used by the NF service producer to report to an NF Consumer that the Record has expired as indicated by the ttl attribute (if set) of RecordMeta and if a callbackReference was set in the RecordMeta.\nThe Callback URI \"{callbackReference}\" shall be used with the callback URI variables defined in table 6.1.5.2.2-1.\nTable 6.1.5.2.2-1: Target URI variables for this resource\n\n6.1.5.2.3.1\tPOST\nThis method shall support the request data structures specified in table 6.1.5.2.3.1-1 and the response data structures and response codes specified in table 6.1.5.2.3.1-1.\nTable 6.1.5.2.3.1-2: Data structures supported by the POST Request Body on this resource\n\nTable 6.1.5.2.3.1-3: Data structures supported by the POST Response Body on this resource\n\nThe Notification due to Data Change is used by the UDSF to report to an NF Consumer that a Record that is part of a NotificationSubscription has been updated or deleted.\nThe Callback URI \"{callbackReference}\" shall be used with the callback URI variables defined in table 6.1.5.3.2-1.\nTable 6.1.5.3.2-1: Callback URI variables for this resource\n\n6.1.5.3.3.1\tPOST\nThis method shall support the request data structures specified in table 6.1.5.3.3.1-1 and the response data structures and response codes specified in table 6.1.5.3.3.1-1.\nTable 6.1.5.3.3.1-2: Data structures supported by the POST Request Body on this resource\n\nTable 6.1.5.3.3.1-3: Data structures supported by the POST Response Body on this resource\n\nThe Subscription Expiry Notification is used by the UDSF to report to an NF Consumer that a Subscription to Notification due to Data Change has expired or is about to expire.\nThe Callback URI \"{expiryCallbackReference}\" shall be used with the callback URI variables defined in table 6.1.5.4.2-1.\nTable 6.1.5.4.2-1: Callback URI variables for this resource\n\n6.1.5.4.3.1\tPOST\nThis method shall support the request data structures specified in table 6.1.5.4.3.1-1 and the response data structures and response codes specified in table 6.1.5.4.3.1-1.\nTable 6.1.5.4.3.1-2: Data structures supported by the POST Request Body on this resource\n\nTable 6.1.5.4.3.1-3: Data structures supported by the POST Response Body on this resource\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.5.2.2-1: Target URI variables for this resource",
                                    "table number": 71,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.5.2.3.1-2: Data structures supported by the POST Request Body on this resource",
                                    "table number": 72,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.5.2.3.1-3: Data structures supported by the POST Response Body on this resource",
                                    "table number": 73,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.5.3.2-1: Callback URI variables for this resource",
                                    "table number": 74,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.5.3.3.1-2: Data structures supported by the POST Request Body on this resource",
                                    "table number": 75,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.5.3.3.1-3: Data structures supported by the POST Response Body on this resource",
                                    "table number": 76,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.5.4.2-1: Callback URI variables for this resource",
                                    "table number": 77,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.5.4.3.1-2: Data structures supported by the POST Request Body on this resource",
                                    "table number": 78,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.5.4.3.1-3: Data structures supported by the POST Response Body on this resource",
                                    "table number": 79,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.6\tData Model",
                            "text_content": "This clause specifies the application data model supported by the API.\nTable 6.1.6.1-1 specifies the data types defined for the Nudsf service based interface protocol. For simple data types defined for the Nudsf_DataRepository service API see table 6.1.6.3.2-1.\nTable 6.1.6.1-1: Nudsf specific Data Types\n\nTable 6.1.6.1-2 specifies data types re-used by the Nudsf service based interface protocol from other specifications, including a reference to their respective specifications and when needed, a short description of their use within the Nudsf service based interface.\nTable 6.1.6.1-2: Nudsf re-used Data Types\n\nThis clause defines the structures to be used in resource representations.\nTable 6.1.6.2.2-1: Definition of type RecordSearchResult\n\nTable 6.1.6.2.3-1: Definition of type RecordMeta\n\nTable 6.1.6.2.4-1: Definition of type RecordBody\n\nTable 6.1.6.2.5-1: Definition of type Record\n\nTable 6.1.6.2.6-1: Definition of type BlockBody\n\nTable 6.1.6.2.7-1: Definition of type Block\n\nTable 6.1.6.2.8-1: Definition of type SearchCondition\n\nTable 6.1.6.2.9-1: Definition of type SearchComparison\n\nTable 6.1.6.2.10-1: Definition of type NotificationSubscription\n\nTable 6.1.6.2.11-1: Definition of type RecordNotification\n\nTable 6.1.6.2.12-1: Definition of type NotificationDescription\n\nTable 6.1.6.2.13-1: Definition of type SubscriptionFilter\n\nTable 6.1.6.2.14-1: Definition of type ClientId\n\nTable 6.1.6.2.15-1: Definition of type MetaSchema\n\nTable 6.1.6.2.16-1: Definition of type TagType\n\nTable 6.1.6.2.17-1: Definition of type RecordIdList\n\nTable 6.1.6.2.18-1: Definition of type NotificationInfo\n\nTable 6.1.6.2.19-1: Definition of type CountExpression\n\nTable 6.1.6.2.20-1: Definition of type TagCount\n\nTable 6.1.6.2.21-1: Definition of type ValueCount\n\nThis clause defines simple data types and enumerations that can be referenced from data structures defined in the previous clauses.\nThe simple data types defined in table 6.1.6.3.2-1 shall be supported.\nTable 6.1.6.3.2-1: Simple data types\n\nThe enumeration ComparisonOperator represents the comparison of an array of strings to a string value. The comparison shall be based on lexicographical order. It shall comply with the provisions defined in table 6.1.6.3.3-1.\nTable 6.1.6.3.3-1: Enumeration ComparisonOperator\n\nNOTE:\tIt's recommended to use GT/GTE/LT/LTE on single value tags. If not, the logical operator \"NOT\" applied over the comparison operator \"GT\" evaluates to \"true\" if there are no members in the array that are greater than the value.\n\nTable 6.1.6.3.4-1: Enumeration ConditionOperator\n\nTable 6.1.6.3.5-1: Enumeration RecordOperation\n\nTable 6.1.6.3.6-1: Enumeration KeyType\n\nTable 6.1.6.3.7-1: Enumeration RetrieveRecords\n\nTable 6.1.6.3.8-1: Enumeration TagCountType\n\nTable 6.1.6.4.1-1: Definition of type SearchExpression as a list of mutually exclusive alternatives\n\nThis data type is the \"ProblemDetails\" data type defined in 3GPP TS 29.571 [19] but extended with \"ProblemDetailExtension\" data type.\nTable 6.1.6.4.2-1 Definition of type ExtendedProblemDetails as a list of to be combined data types\n\nTable 6.1.6.4.3-1: Definition of type ProblemDetailExtension as a list of mutually exclusive alternatives\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.6.1-1: Nudsf specific Data Types",
                                    "table number": 80,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.1-2: Nudsf re-used Data Types",
                                    "table number": 81,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.2-1: Definition of type RecordSearchResult",
                                    "table number": 82,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.3-1: Definition of type RecordMeta",
                                    "table number": 83,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.4-1: Definition of type RecordBody",
                                    "table number": 84,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.5-1: Definition of type Record",
                                    "table number": 85,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.6-1: Definition of type BlockBody",
                                    "table number": 86,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.7-1: Definition of type Block",
                                    "table number": 87,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.8-1: Definition of type SearchCondition",
                                    "table number": 88,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.9-1: Definition of type SearchComparison",
                                    "table number": 89,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.10-1: Definition of type NotificationSubscription",
                                    "table number": 90,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.11-1: Definition of type RecordNotification",
                                    "table number": 91,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.12-1: Definition of type NotificationDescription",
                                    "table number": 92,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.13-1: Definition of type SubscriptionFilter",
                                    "table number": 93,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.14-1: Definition of type ClientId",
                                    "table number": 94,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.15-1: Definition of type MetaSchema",
                                    "table number": 95,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.16-1: Definition of type TagType",
                                    "table number": 96,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.17-1: Definition of type RecordIdList",
                                    "table number": 97,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.18-1: Definition of type NotificationInfo",
                                    "table number": 98,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.19-1: Definition of type CountExpression",
                                    "table number": 99,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.20-1: Definition of type TagCount",
                                    "table number": 100,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.21-1: Definition of type ValueCount",
                                    "table number": 101,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.2-1: Simple data types",
                                    "table number": 102,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.3-1: Enumeration ComparisonOperator",
                                    "table number": 103,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.4-1: Enumeration ConditionOperator",
                                    "table number": 104,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.5-1: Enumeration RecordOperation",
                                    "table number": 105,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.6-1: Enumeration KeyType",
                                    "table number": 106,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.7-1: Enumeration RetrieveRecords",
                                    "table number": 107,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.8-1: Enumeration TagCountType",
                                    "table number": 108,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.4.1-1: Definition of type SearchExpression as a list of mutually exclusive alternatives",
                                    "table number": 109,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.4.2-1 Definition of type ExtendedProblemDetails as a list of to be combined data types",
                                    "table number": 110,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.4.3-1: Definition of type ProblemDetailExtension as a list of mutually exclusive alternatives",
                                    "table number": 111,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.7\tError Handling",
                            "text_content": "For the Nudsf_DataRepository API, HTTP error responses shall be supported as specified in clause 4.8 of 3GPP TS 29.501 [5]. Protocol errors and application errors specified in table 5.2.7.2-1 of 3GPP TS 29.500 [4] shall be supported for an HTTP method if the corresponding HTTP status codes are specified as mandatory for that HTTP method in table 5.2.7.1-1 of 3GPP TS 29.500 [4].\nIn addition, the requirements in the following clauses are applicable for the Nudsf_DataRepository API.\nProtocol errors handling shall be supported as specified in clause 5.2.7 of 3GPP TS 29.500 [4].\nThe application errors defined for the Nudsf_DataRepository service are listed in Table 6.1.7.3-1.\nTable 6.1.7.3-1: Application errors\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.7.3-1: Application errors",
                                    "table number": 112,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.8\tFeature negotiation",
                            "text_content": "The optional features in table 6.1.8-1 are defined for the Nudsf_DataRepository API. They shall be negotiated using the extensibility mechanism defined in clause 6.6 of 3GPP TS 29.500 [4].\nTable 6.1.8-1: Supported Features\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.8-1: Supported Features",
                                    "table number": 113,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.9\tSecurity",
                            "text_content": "As indicated in 3GPP TS 33.501 [8] and 3GPP TS 29.500 [4], the access to the Nudsf_DataRepository API may be authorized by means of the OAuth2 protocol (see IETF RFC 6749 [9]), based on local configuration, using the \"Client Credentials\" authorization grant, where the NRF (see 3GPP TS 29.510 [10]) plays the role of the authorization server.\nIf OAuth2 is used, an NF Service Consumer, prior to consuming services offered by the <API Name> API, shall obtain a \"token\" from the authorization server, by invoking the Access Token Request service, as described in 3GPP TS 29.510 [10], clause 5.4.2.2.\nNOTE:\tWhen multiple NRFs are deployed in a network, the NRF used as authorization server is the same NRF that the NF Service Consumer used for discovering the Nudsf_DataRepository service.\nThe Nudsf_DataRepository API defines the following scopes for OAuth2 authorization.\nTable 6.1.9-1: Oauth2 scopes defined in Nudsf_DR API\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.9-1: Oauth2 scopes defined in Nudsf_DR API",
                                    "table number": 114,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "6.2\tNudsf_Timer Service API",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.2.1\tIntroduction",
                            "text_content": "The Nudsf_Timer service shall use the Nudsf_Timer API.\nThe API URI of the Nudsf_Timer API shall be:\n{apiRoot}/<apiName>/<apiVersion>/\nThe request URI used in HTTP requests from the NF service consumer towards the NF service producer shall have the Resource URI structure defined in clause 4.4.1 of 3GPP TS 29.501 [5], i.e.:\n{apiRoot}/<apiName>/<apiVersion>/<apiSpecificResourceUriPart>\nwith the following components:\n-\tThe {apiRoot} shall be set as described in 3GPP TS 29.501 [5].\n-\tThe <apiName> shall be \"nudsf-timer\".\n-\tThe <apiVersion> shall be \"v1\".\n-\tThe <apiSpecificResourceUriPart> shall be set as described in clause 6.2.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.2\tUsage of HTTP",
                            "text_content": "HTTP/2, IETF RFC 9113 [11], shall be used as specified in clause 5 of 3GPP TS 29.500 [4].\nHTTP/2 shall be transported as specified in clause 5.3 of 3GPP TS 29.500 [4].\nThe OpenAPI [6] specification of HTTP messages and content bodies for the Nudsf_Timer API is contained in Annex A.\nSee clause 5.2.2 of 3GPP TS 29.500 [4] for the usage of HTTP standard headers.\nThe following content types shall be supported:\n-\tJSON, IETF RFC 8259 [12], shall be used as content type of the HTTP bodies specified in the present specification as specified in clause 5.4 of 3GPP TS 29.500 [4]. The use of the JSON format shall be signalled by the content type \"application/json\".\n-\t\"Problem Details\" JSON object shall be used to indicate additional details of the error in a HTTP response body and shall be signalled by the content type \"application/problem+json\", as defined in IETF RFC 9457 [13].\n-\tJSON Patch (IETF RFC 6902 [14]). The use of the JSON Patch format in a HTTP request body shall be signalled by the content type \"application/json-patch+json\".\nThe mandatory HTTP custom header fields specified in clause 5.2.3.2 of 3GPP TS 29.500 [4] shall be applicable.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.3\tResources",
                            "text_content": "The figure depicts a resource URI structure of the nudsf-timer API, illustrating the various components and their relationships. The structure includes a URI for the timer, a URI for the timer's resource, and a URI for the timer's resource's resource. This structure is crucial for managing and accessing the timer's resources in a RESTful manner.\nFigure 6.2.3.1-1: Resource URI structure of the nudsf-timer API\nTable 6.2.3.1-1 provides an overview of the resources and applicable HTTP methods.\nTable 6.2.3.1-1: Resources and methods overview\n\nThis resource represents the collection of timers within a storage. It can be used to search for specific timers matching specific filter criteria, and to delete specific timers matching specific filter criteria.\nResource URI: {apiRoot}/nudsf-timer/<apiVersion>/{realmId}/{storageId}/timers\nThis resource shall support the resource URI variables defined in table 6.2.3.2.2-1.\nTable 6.2.3.2.2-1: Resource URI variables for this resource\n\n6.2.3.2.3.1\tGET\nThis method shall support the URI query parameters specified in table 6.2.3.2.3.1-1.\nTable 6.2.3.2.3.1-1: URI query parameters supported by the GET method on this resource\n\nThis method shall support the request data structures specified in table 6.2.3.2.3.1-2 and the response data structures and response codes specified in table 6.2.3.2.3.1-3.\nTable 6.2.3.2.3.1-2: Data structures supported by the GET Request Body on this resource\n\nTable 6.2.3.2.3.1-3: Data structures supported by the GET Response Body on this resource\n\n6.2.3.2.3.2\tDELETE\nThis method shall support the URI query parameters specified in table 6.2.3.2.3.2-1.\nTable 6.2.3.2.3.2-1: URI query parameters supported by the DELETE method on this resource\n\nThis method shall support the request data structures specified in table 6.2.3.2.3.2-2 and the response data structures and response codes specified in table 6.2.3.2.3.2-3.\nTable 6.2.3.2.3.2-2: Data structures supported by the DELETE Request Body on this resource\n\nTable 6.2.3.2.3.2-3: Data structures supported by the DELETE Response Body on this resource\n\nThis resource represents an individual timer within a storage.\nResource URI: {apiRoot}/nudsf-timer/<apiVersion>/{realmId}/{storageId}/timers/{timerId}\nThis resource shall support the resource URI variables defined in table 6.2.3.3.2-1.\nTable 6.2.3.3.2-1: Resource URI variables for this resource\n\n6.2.3.3.3.1\tPUT\nThis method shall support the URI query parameters specified in table 6.2.3.3.3.1-1.\nTable 6.2.3.3.3.1-1: URI query parameters supported by the PUT method on this resource\n\nThis method shall support the request data structures specified in table 6.2.3.3.3.1-2 and the response data structures and response codes specified in table 6.2.3.3.3.1-3.\nTable 6.2.3.3.3.1-2: Data structures supported by the PUT Request Body on this resource\n\nTable 6.2.3.3.3.1-3: Data structures supported by the PUT Response Body on this resource\n\n6.2.3.3.3.2\tPATCH\nThis method shall support the URI query parameters specified in table 6.2.3.3.3.2-1.\nTable 6.2.3.3.3.2-1: URI query parameters supported by the PATCH method on this resource\n\nThis method shall support the request data structures specified in table 6.2.3.3.3.2-2 and the response data structures and response codes specified in table 6.2.3.3.3.2-3.\nTable 6.2.3.3.3.2-2: Data structures supported by the PATCH Request Body on this resource\n\nTable 6.2.3.3.3.2-3: Data structures supported by the PATCH Response Body on this resource\n\n6.2.3.3.3.3\tDELETE\nThis method shall support the URI query parameters specified in table 6.2.3.3.3.3-1.\nTable 6.2.3.3.3.3-1: URI query parameters supported by the DELETE method on this resource\n\nThis method shall support the request data structures specified in table 6.2.3.3.3.3-2 and the response data structures and response codes specified in table 6.2.3.3.3.3-3.\nTable 6.2.3.3.3.3-2: Data structures supported by the DELETE Request Body on this resource\n\nTable 6.2.3.3.3.3-3: Data structures supported by the DELETE Response Body on this resource\n\n6.2.3.3.3.4\tGET\nThis method shall support the URI query parameters specified in table 6.2.3.3.3.4-1.\nTable 6.2.3.3.3.4-1: URI query parameters supported by the GET method on this resource\n\nThis method shall support the request data structures specified in table 6.2.3.3.3.4-2 and the response data structures and response codes specified in table 6.2.3.3.3.4-3.\nTable 6.2.3.3.3.4-2: Data structures supported by the GET Request Body on this resource\n\nTable 6.2.3.3.3.4-3: Data structures supported by the GET Response Body on this resource\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.3.1-1: Resources and methods overview",
                                    "table number": 115,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.2.2-1: Resource URI variables for this resource",
                                    "table number": 116,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.2.3.1-1: URI query parameters supported by the GET method on this resource",
                                    "table number": 117,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.2.3.1-2: Data structures supported by the GET Request Body on this resource",
                                    "table number": 118,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.2.3.1-3: Data structures supported by the GET Response Body on this resource",
                                    "table number": 119,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.2.3.2-1: URI query parameters supported by the DELETE method on this resource",
                                    "table number": 120,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.2.3.2-2: Data structures supported by the DELETE Request Body on this resource",
                                    "table number": 121,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.2.3.2-3: Data structures supported by the DELETE Response Body on this resource",
                                    "table number": 122,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.2-1: Resource URI variables for this resource",
                                    "table number": 123,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.1-1: URI query parameters supported by the PUT method on this resource",
                                    "table number": 124,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.1-2: Data structures supported by the PUT Request Body on this resource",
                                    "table number": 125,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.1-3: Data structures supported by the PUT Response Body on this resource",
                                    "table number": 126,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.2-1: URI query parameters supported by the PATCH method on this resource",
                                    "table number": 127,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.2-2: Data structures supported by the PATCH Request Body on this resource",
                                    "table number": 128,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.2-3: Data structures supported by the PATCH Response Body on this resource",
                                    "table number": 129,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.3-1: URI query parameters supported by the DELETE method on this resource",
                                    "table number": 130,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.3-2: Data structures supported by the DELETE Request Body on this resource",
                                    "table number": 131,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.3-3: Data structures supported by the DELETE Response Body on this resource",
                                    "table number": 132,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.4-1: URI query parameters supported by the GET method on this resource",
                                    "table number": 133,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.4-2: Data structures supported by the GET Request Body on this resource",
                                    "table number": 134,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.4-3: Data structures supported by the GET Response Body on this resource",
                                    "table number": 135,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.4\tCustom Operations without associated resources",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.5\tNotifications",
                            "text_content": "Notifications shall comply to clause 6.2 of 3GPP TS 29.500 [4] and clause 4.6.2.3 of 3GPP TS 29.501 [5].\nThe Timer Expiry Notification is used by the NF service producer to report to an NF Consumer that the Timer has expired as indicated by the expires attribute of Timer and if a callbackReference was set in the Timer.\nThe Callback URI \"{callbackReference}\" shall be used with the callback URI variables defined in table 6.2.5.2.2-1.\nTable 6.2.5.2.2-1: Target URI variables for this resource\n\n6.2.5.2.3.1\tPOST\nThis method shall support the request data structures specified in table 6.2.5.2.3.1-1 and the response data structures and response codes specified in table 6.2.5.2.3.1-1.\nTable 6.2.5.2.3.1-2: Data structures supported by the POST Request Body on this resource\n\nTable 6.2.5.2.3.1-3: Data structures supported by the POST Response Body on this resource\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.5.2.2-1: Target URI variables for this resource",
                                    "table number": 136,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.5.2.3.1-2: Data structures supported by the POST Request Body on this resource",
                                    "table number": 137,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.5.2.3.1-3: Data structures supported by the POST Response Body on this resource",
                                    "table number": 138,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.6\tData Model",
                            "text_content": "This clause specifies the application data model supported by the API.\nTable 6.2.6.1-1 specifies the data types defined for the Nudsf_Timer service API. For simple data types defined for the Nudsf_Timer service API see table 6.2.6.3.2-1.\nTable 6.2.6.1-1: Nudsf_Timer specific Data Types\n\nTable 6.2.6.1-2 specifies data types re-used by the Nudsf_Timer service API from other specifications, including a reference to their respective specifications and when needed, a short description of their use within the Nudsf_Timer service API.\nTable 6.2.6.1-2: Nudsf_Timer re-used Data Types\n\nThis clause defines the structures to be used in resource representations.\nTable 6.2.6.2.2-1: Definition of type Timer\n\nTable 6.2.6.2.3-1: Definition of type TimerIdList\n\nThis clause defines simple data types and enumerations that can be referenced from data structures defined in the previous clauses.\nThe simple data types defined in table 6.2.6.3.2-1 shall be supported.\nTable 6.2.6.3.2-1: Simple data types\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.6.1-1: Nudsf_Timer specific Data Types",
                                    "table number": 139,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.1-2: Nudsf_Timer re-used Data Types",
                                    "table number": 140,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.2.2-1: Definition of type Timer",
                                    "table number": 141,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.2.3-1: Definition of type TimerIdList",
                                    "table number": 142,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.3.2-1: Simple data types",
                                    "table number": 143,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.7\tError Handling",
                            "text_content": "For the Nudsf_Timer API, HTTP error responses shall be supported as specified in clause 4.8 of 3GPP TS 29.501 [5]. Protocol errors and application errors specified in table 5.2.7.2-1 of 3GPP TS 29.500 [4] shall be supported for an HTTP method if the corresponding HTTP status codes are specified as mandatory for that HTTP method in table 5.2.7.1-1 of 3GPP TS 29.500 [4].\nIn addition, the requirements in the following clauses are applicable for the Nudsf_Timer API.\nProtocol errors handling shall be supported as specified in clause 5.2.7 of 3GPP TS 29.500 [4].\nThe application errors defined for the Nudsf_Timer service are listed in Table 6.2.7.3-1.\nTable 6.2.7.3-1: Application errors\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.7.3-1: Application errors",
                                    "table number": 144,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.8\tFeature negotiation",
                            "text_content": "The optional features in table 6.1.8-1 are defined for the Nudsf_Timer API. They shall be negotiated using the extensibility mechanism defined in clause 6.6 of 3GPP TS 29.500 [4].\nTable 6.2.8-1: Supported Features\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.8-1: Supported Features",
                                    "table number": 145,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.9\tSecurity",
                            "text_content": "As indicated in 3GPP TS 33.501 [8] and 3GPP TS 29.500 [4], the access to the Nudsf_Timer API may be authorized by means of the OAuth2 protocol (see IETF RFC 6749 [9]), based on local configuration, using the \"Client Credentials\" authorization grant, where the NRF (see 3GPP TS 29.510 [10]) plays the role of the authorization server.\nIf OAuth2 is used, an NF Service Consumer, prior to consuming services offered by the Nudsf_Timer API, shall obtain a \"token\" from the authorization server, by invoking the Access Token Request service, as described in 3GPP TS 29.510 [10], clause 5.4.2.2.\nNOTE:\tWhen multiple NRFs are deployed in a network, the NRF used as authorization server is the same NRF that the NF Service Consumer used for discovering the Nudsf_Timer service.\nThe Nudsf_Timer API defines the following scopes for OAuth2 authorization.\nTable 6.2.9-1: Oauth2 scopes defined in Nudsf_Timer API\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.9-1: Oauth2 scopes defined in Nudsf_Timer API",
                                    "table number": 146,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "title": "A.1\tGeneral",
            "description": "This Annex specifies the formal definition of the API(s) defined in the present specification. It consists of OpenAPI 3.0.0 specifications in YAML format.\nThis Annex takes precedence when being discrepant to other parts of the specification with respect to the encoding of information elements and methods within the API(s).\nNOTE:\tThe semantics and procedures, as well as conditions, e.g. for the applicability and allowed combinations of attributes or values, not expressed in the OpenAPI definitions but defined in other parts of the specification also apply.\nInformative copies of the OpenAPI specification files contained in this 3GPP Technical Specification are available on a Git-based repository that uses the GitLab software version control system (see 3GPP TS 29.501 [5] clause 5.3.1 and 3GPP TR 21.900 [7] clause 5B).\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.2\tNudsf_DataRepository API",
            "description": "openapi: 3.0.0\ninfo:\ntitle: Nudsf_DataRepository\nversion: 1.2.0-alpha.5\ndescription: |\nNudsf Data Repository Service.\n© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).\nAll rights reserved.\n\nexternalDocs:\ndescription: 3GPP TS 29.598 UDSF Services, V18.4.0.\nurl: 'https://www.3gpp.org/ftp/Specs/archive/29_series/29.598/'\n\nservers:\n- url: '{apiRoot}/nudsf-dr/v1'\nvariables:\napiRoot:\ndefault: https://example.com\ndescription: apiRoot as defined in clause 4.4 of 3GPP TS 29.501\n\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n\npaths:\n\n/{realmId}/{storageId}/records:\nsummary: Access to all Records of a Storage\ndescription: >-\nroot of all Records of a Storage\nget:\nsummary:     Records search with get\ndescription: Retrieve one or multiple Records based on filter\noperationId: SearchRecord\ntags:\n- Record CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:record:read\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: limit-range\nin: query\ndescription: The most number of record references to fetch\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uinteger'\n- name: filter\nin: query\ndescription: Query filter using conditions on tags\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/SearchExpression'\n- name: count-indicator\nin: query\ndescription: Indicates whether the number of records that matched the criteria shall be returned.\nschema:\ntype: boolean\ndefault: false\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\n- name: retrieve-records\nin: query\ndescription: Indicates whether the UDSF is requested to include matching records within the response.\nschema:\n$ref: '#/components/schemas/RetrieveRecords'\n- name: max-payload-size\nin: query\ndescription: Indicates the number of kilo octets the consumer is prepared to receive\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uinteger'\n- name: tag-count-filter\nin: query\ndescription: Indicates the parameters for advanced counting feature\nschema:\n$ref: '#/components/schemas/CountExpression'\nresponses:\n'200':\ndescription: Successful case. Response contains result of the search.\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/RecordSearchResult'\n'204':\ndescription: >-\nThe search condition does not match any Record.\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'406':\n$ref: 'TS29571_CommonData.yaml#/components/responses/406'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\ndelete:\nsummary:     Bulk Deletion of Records\ndescription: Delete multiple Records based on filter\noperationId: BulkDeleteRecords\ntags:\n- Record CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:record:modify\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: filter\nin: query\nrequired: true\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/SearchExpression'\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nresponses:\n'200':\ndescription: Successful case. Response contains RecordIdList.\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/RecordIdList'\n'204':\ndescription: Successful case.\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'406':\n$ref: 'TS29571_CommonData.yaml#/components/responses/406'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\n/{realmId}/{storageId}/records/{recordId}:\nsummary: Access to a specific Record, identified by its RecordId\ndescription: >-\nAccess to a specific Record\nget:\nsummary: Record access\ndescription: retrieve one specific Record\noperationId: GetRecord\ntags:\n- Record CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:record:read\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: recordId\nin: path\ndescription: Identifier of the Record\nrequired: true\nschema:\ntype: string\nexample: 'UserRecordValue000000001'\n- name: If-None-Match\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.2\nschema:\ntype: string\n- name: If-Modified-Since\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.3\nschema:\ntype: string\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nresponses:\n'200' : #result ok\n$ref: '#/components/responses/RecordBody'\n'304':\n$ref: '#/components/responses/304'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'406':\n$ref: 'TS29571_CommonData.yaml#/components/responses/406'\n'412':\n$ref: '#/components/responses/412'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: '#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\nput:\nsummary: Create/Modify Record\ndescription: Create or Modify a Record with a user provided RecordId\noperationId: CreateOrModifyRecord\ntags:\n- Record CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:record:create\nparameters:\n- name: realmId\nin: path\ndescription: Identifier(name) of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: recordId\nin: path\ndescription: Identifier of the Record\nrequired: true\nschema:\ntype: string\nexample: UserRecordValue000000001\n- name: If-None-Match\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.2\nschema:\ntype: string\n- name: If-Match\nin: header\ndescription: Record validator for conditional requests, as described in RFC 9110, 13.1.2\nschema:\ntype: string\n- name: get-previous\nin: query\ndescription: Retrieve the Record before update\nrequired: false\nschema:\ntype: boolean\ndefault: false\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nrequestBody:\n$ref: '#/components/requestBodies/RecordBody'\ncallbacks:\nrecordExpired:\n'{$request.body#/callbackReference}':\npost:\nparameters:\n- name: Content-Location\nin: header\ndescription: The expired record URI\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uri'\nrequestBody:\n$ref: '#/components/requestBodies/RecordBody'\nresponses:\n'204':\ndescription: Callback executed successfully\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\nresponses:\n'200' : # Update with return\n$ref: '#/components/responses/RecordBody'\n'201':\ndescription: >-\nCreate case. The resource has been successfully created, location header indicates\nthe URI of the created Record.\n$ref: '#/components/responses/RecordBody'\nheaders:\nLocation:\n$ref: '#/components/headers/Location'\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n'204': # Update without return\ndescription: >-\nUpdate case. The resource has been successfully updated and no\nadditional content is included in the response message.\nheaders:\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n'304':\n$ref: '#/components/responses/304'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'408':\n$ref: 'TS29571_CommonData.yaml#/components/responses/408'\n'409':\n$ref: '#/components/responses/409'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'412': # Return Record value if get-previous=true\n$ref: '#/components/responses/RecordBody'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\ndelete:\nsummary: Delete a Record with an user provided RecordId\noperationId: DeleteRecord\ntags:\n- Record CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:record:modify\nparameters:\n- name: realmId\nin: path\ndescription: Identifier(name) of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: recordId\nin: path\ndescription: Identifier of the Record\nrequired: true\nschema:\ntype: string\nexample: UserRecordValue000000001\n- name: If-Match\nin: header\ndescription: Record validator for conditional requests, as described in RFC 9110, 13.1.1\nschema:\ntype: string\n- name: get-previous\nin: query\ndescription: Retrieve the Record before delete\nrequired: false\nschema:\ntype: boolean\ndefault: false\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nresponses:\n'200':\n$ref: '#/components/responses/RecordBodyDelete'\n'204':\ndescription: Successful case.\nheaders:\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n'304':\n$ref: '#/components/responses/304'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'408':\n$ref: 'TS29571_CommonData.yaml#/components/responses/408'\n'412': # Return return value if get-previous=true\n$ref: '#/components/responses/RecordBody'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\n/{realmId}/{storageId}/records/{recordId}/meta:\nsummary: Access to the meta of a specific Record, identified by its RecordId\ndescription: >-\nAccess to the meta of a specific Record\nget:\nsummary: Record's meta access\ndescription: retrieve meta of a specific Record\noperationId: GetMeta\ntags:\n- Record CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:record-meta:read\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: recordId\nin: path\ndescription: Identifier of the Record\nrequired: true\nschema:\ntype: string\nexample: 'UserRecordValue000000001'\n- name: If-None-Match\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.2\nschema:\ntype: string\n- name: If-Modified-Since\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.3\nschema:\ntype: string\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nresponses:\n'200':\ndescription: Expected response to a valid request\nheaders:\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/RecordMeta'\n'304':\n$ref: '#/components/responses/304'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'406':\n$ref: 'TS29571_CommonData.yaml#/components/responses/406'\n'412':\n$ref: '#/components/responses/412'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: '#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\npatch: # patch meta data\nsummary: Record's meta update\ndescription: update meta of a specific Record\noperationId: UpdateMeta\ntags:\n- Record CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:record-meta:modify\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: recordId\nin: path\ndescription: Identifier of the Record\nrequired: true\nschema:\ntype: string\nexample: 'UserRecordValue000000001'\n- name: If-Match\nin: header\ndescription: Record validator for conditional requests, as described in RFC 9110, 13.1.1\nschema:\ntype: string\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nrequestBody:\ndescription: Meta data to patch\ncontent:\napplication/json-patch+json:\nexample: '[{ \"op\": \"replace\", \"path\": \"/tags/ueId\", \"value\": \"450005\" }, { \"op\": \"remove\", \"path\": \"/tags/recordId\" }]'\nschema:\ntype: array\nitems:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PatchItem'\nminItems: 1\nrequired: true\nresponses:\n'200':\ndescription: >-\nOne or more modification instructions have been discarded, the execution report is returned in response PatchResult.\ncontent:\napplication/json:\nexample:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PatchResult'\nheaders:\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n'204':\ndescription: >-\nSuccessful case. The meta has been successfully updated and no return is expected.\nheaders:\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n'304':\n$ref: '#/components/responses/304'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'408':\n$ref: 'TS29571_CommonData.yaml#/components/responses/408'\n'409':\n$ref: '#/components/responses/409'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'412':\n$ref: '#/components/responses/412'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\n/{realmId}/{storageId}/records/{recordId}/blocks:\nsummary: Access to the Blocks of a specific Record, identified by its RecordId\ndescription: >-\nAccess to the Blocks of a specific Record\nget:\nsummary: Record's Blocks access\ndescription: retrieve all Blocks of a specific Record\noperationId: GetBlockList\ntags:\n- Block CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:block:read\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: recordId\nin: path\ndescription: Identifier of the Record\nrequired: true\nschema:\ntype: string\nexample: 'UserRecordValue000000001'\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nresponses:\n'200':\ndescription: Expected response to a successful request\nheaders:\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\ncontent:\nmultipart/parallel:\nschema:\ntype: object\nproperties:\nblocks:\ntype: array\ndescription: >-\nan array of Block parts, can be empty\nitems:\n$ref: '#/components/schemas/Block'\nencoding:\nblocks:\ncontentType: '*/*' # Block content type can be of any type.\nheaders:\nContent-Id: # Block identifier is defined by the Content-Id header.\nschema:\ntype: string\nrequired: true\nContent-Transfer-Encoding:\nschema:\ntype: string\nrequired: true\n'204':\ndescription: Successful response, the record contains no blocks\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'406':\n$ref: 'TS29571_CommonData.yaml#/components/responses/406'\n'412':\n$ref: '#/components/responses/412'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: '#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\n/{realmId}/{storageId}/records/{recordId}/blocks/{blockId}:\nsummary: Access to a Block of a specific Record, identified by its BlockId\ndescription: >-\nAccess to a specific Block of a specific Record\nget:\nsummary: Retrieve a specific Block\ndescription: retrieve a specific Block\noperationId: GetBlock\ntags:\n- Block CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:block:read\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: recordId\nin: path\ndescription: Identifier of the Record\nrequired: true\nschema:\ntype: string\nexample: 'UserRecordValue000000001'\n- name: blockId\nin: path\ndescription: Id of the Block\nrequired: true\nschema:\ntype: string\nexample: 'userDefjson01'\n- name: If-None-Match\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.2\nschema:\ntype: string\n- name: If-Modified-Since\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.3\nschema:\ntype: string\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nresponses:\n'200':\n$ref: '#/components/responses/BlockBody'\n'304':\n$ref: '#/components/responses/304'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'406':\n$ref: 'TS29571_CommonData.yaml#/components/responses/406'\n'412':\n$ref: '#/components/responses/412'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: '#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\nput:\nsummary: Create or Update a specific Block in a Record.\ndescription: Create or update a specific Block, related to a Record\noperationId: CreateOrModifyBlock\ntags:\n- Block CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:block:create\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: recordId\nin: path\ndescription: Identifier of the Record\nrequired: true\nschema:\ntype: string\nexample: 'UserRecordValue000000001'\n- name: blockId\nin: path\ndescription: Id of the Block\nrequired: true\nschema:\ntype: string\nexample: 'userDefjson01'\n- name: get-previous\nin: query\ndescription: Retrieve the Block before update\nrequired: false\nschema:\ntype: boolean\ndefault: false\n- name: If-None-Match\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.2\nschema:\ntype: string\n- name: If-Match\nin: header\ndescription: Record validator for conditional requests, as described in RFC 9110, 13.1.1\nschema:\ntype: string\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nrequestBody:\ndescription: information on the Block to create\nrequired: true\ncontent:\n'*/*':\nschema:\n$ref: '#/components/schemas/Block'\nresponses:\n'200':\n$ref: '#/components/responses/BlockBody'\n'201':\ndescription: >-\nCreation case. The Block has been successfully created. Location header indicates the URI of the created Block.\nheaders:\nLocation:\n$ref: '#/components/headers/Location'\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n'204':\ndescription: >-\nSuccessful case. The resource has been successfully updated.\nheaders:\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'408':\n$ref: 'TS29571_CommonData.yaml#/components/responses/408'\n'409':\n$ref: '#/components/responses/409'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'412': # Return previous Block value if get-previous=true\n$ref: '#/components/responses/BlockBody'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\ndelete:\nsummary: Delete a specific Block. Then update the Record\ndescription: delete a specific Block, related to a Record\noperationId: DeleteBlock\ntags:\n- Block CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:block:modify\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: recordId\nin: path\ndescription: Identifier of the Record\nrequired: true\nschema:\ntype: string\nexample: 'UserRecordValue000000001'\n- name: blockId\nin: path\ndescription: Id of the Block\nrequired: true\nschema:\ntype: string\nexample: 'userDefjson01'\n- name: get-previous\nin: query\ndescription: Retrieve the Block before delete\nrequired: false\nschema:\ntype: boolean\ndefault: false\n- name: If-Match\nin: header\ndescription: Record validator for conditional requests, as described in RFC 9110, 13.1.1\nschema:\ntype: string\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nresponses:\n'200':\n$ref: '#/components/responses/BlockBodyDelete'\n'204':\ndescription: >-\nSuccessful case. The Block has been successfully deleted.\nheaders:\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'408':\n$ref: 'TS29571_CommonData.yaml#/components/responses/408'\n'412': # Return previous Block value if get-previous=true\n$ref: '#/components/responses/BlockBody'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\n/{realmId}/{storageId}/subs-to-notify:\nsummary: The notification subscription collection resource\ndescription: >-\nAccess to the subscription resource\nget:\nsummary: Notification subscription retrieval\ndescription: retrieve all notification subscriptions of the storage\noperationId: GetNotificationSubscriptions\ntags:\n- NotificationSubscriptions CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:subscription:read\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: limit-range\nin: query\ndescription: The maximum number of NotificationSubscriptions to fetch\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uinteger'\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nresponses:\n'200':\ndescription: Expected response to a valid request\ncontent:\napplication/json:\nschema:\ntype: array\nitems:\n$ref: '#/components/schemas/NotificationSubscription'\n'304':\n$ref: '#/components/responses/304'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'406':\n$ref: 'TS29571_CommonData.yaml#/components/responses/406'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\n/{realmId}/{storageId}/subs-to-notify/{subscriptionId}:\nsummary: The notification subscription resource\ndescription: >-\nAccess to the subscription resource\nget:\nsummary: Notification subscription retrieval\ndescription: retrieve a single notification subscription of the storage\noperationId: GetNotificationSubscription\ntags:\n- NotificationSubscription CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:subscription:read\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: subscriptionId\nin: path\ndescription: Identifier of the NotificationSubscription\nrequired: true\nschema:\ntype: string\nexample: Subscription01\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\n- name: If-None-Match\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.2\nschema:\ntype: string\n- name: If-Modified-Since\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.3\nschema:\ntype: string\nresponses:\n'200':\ndescription: Expected response to a valid request\nheaders:\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/NotificationSubscription'\n'304':\n$ref: '#/components/responses/304'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'406':\n$ref: 'TS29571_CommonData.yaml#/components/responses/406'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\ndelete:\nsummary: Delete a Notification Subscription of the storage\ndescription: delete a single subscriptions of the storage\noperationId: DeleteNotificationSubscription\ntags:\n- NotificationSubscription CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:subscription:modify\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: subscriptionId\nin: path\ndescription: Identifier of the NotificationSubscription\nrequired: true\nschema:\ntype: string\nexample: Subscription01\n- name: client-id\nin: query\ndescription: Identifies the NF or NFSet\nrequired: true\nschema:\n$ref: '#/components/schemas/ClientId'\n- name: get-previous\nin: query\ndescription: Retrieve the NotificationSubscription before delete\nrequired: false\nschema:\ntype: boolean\ndefault: false\n- name: If-Match\nin: header\ndescription: Record validator for conditional requests, as described in RFC 9110, 13.1.1\nschema:\ntype: string\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nresponses:\n'200':\ndescription: Deleted NotificationSubscription if requested with get-previous\ncontent:\napplication/json:\nschema:\ntype: array\nitems:\n$ref: '#/components/schemas/NotificationSubscription'\n'204':\ndescription: >-\nSuccessful case. The SubscriptionNotification has been successfully deleted.\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'408':\n$ref: 'TS29571_CommonData.yaml#/components/responses/408'\n'412':\ndescription: Return previous NotificationSubscription value if get-previous=true\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/NotificationSubscription'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\npatch: # patch NotificationSubscription data\nsummary: NotificationSubscription update\ndescription: update a specific NotificationSubscription\noperationId: UpdateNotificationSubscription\ntags:\n- NotificationSubscription CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:subscription:modify\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: subscriptionId\nin: path\ndescription: Identifier of the NotificationSubscription\nrequired: true\nschema:\ntype: string\nexample: Subscription01\n- name: If-Match\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.1\nschema:\ntype: string\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nrequestBody:\ndescription: data to patch\ncontent:\napplication/json-patch+json:\nexample: 'TBD'\nschema:\ntype: array\nitems:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PatchItem'\nminItems: 1\nrequired: true\nresponses:\n'200':\ndescription: >-\nOne or more modification instructions have been discarded, the execution report is returned in response PatchResult.\ncontent:\napplication/json:\nexample:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PatchResult'\nheaders:\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n'204':\ndescription: >-\nSuccessful case. The meta has been successfully updated and no return is expected.\nheaders:\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n'304':\n$ref: '#/components/responses/304'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'408':\n$ref: 'TS29571_CommonData.yaml#/components/responses/408'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\nput:\nsummary: NotificationSubscription Create/Update\noperationId: CreateAndUpdateNotificationSubscription\ntags:\n- NotificationSubscription CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:subscription:create\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: subscriptionId\nin: path\ndescription: Identifier of the NotificationSubscription\nrequired: true\nschema:\ntype: string\nexample: Subscription01\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\n- name: If-None-Match\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.2\nschema:\ntype: string\n- name: If-Match\nin: header\ndescription: Record validator for conditional requests, as described in RFC 9110, 13.1.1\nschema:\ntype: string\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/NotificationSubscription'\nrequired: true\nresponses:\n'200' : # Update\ndescription: Expected response to a valid update request\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/NotificationSubscription'\n'201':\ndescription: Expected response to a valid create request\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/NotificationSubscription'\nheaders:\nLocation:\ndescription: 'Contains the URI of the newly created resource according to the structure: {apiRoot}/nudsf-dr/<apiVersion>/{realmId}/{storageId}/subs-to-notify/{subscriptionId}'\nrequired: true\nschema:\ntype: string\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n'304':\n$ref: '#/components/responses/304'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'408':\n$ref: 'TS29571_CommonData.yaml#/components/responses/408'\n'409':\ndescription: Conflict\ncontent:\napplication/json:\nschema:\ntype: array\nitems:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uri'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'412':\n$ref: 'TS29571_CommonData.yaml#/components/responses/412'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\ndescription: Unexpected error\ncontent:\napplication/problem+json:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'\ncallbacks:\nonDataChange:\n'{request.body#/callbackReference}':\npost:\nrequestBody:\n$ref: '#/components/requestBodies/RecordNotificationBody'\nresponses:\n'204':\ndescription: Callback executed successfully\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\nsubscriptionExpiryNotification:\n'{request.body#/expiryCallbackReference}':\npost:\nrequestBody:\nrequired: true\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/NotificationInfo'\nresponses:\n'204':\ndescription: Successful Notification response\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\n/{realmId}/{storageId}/meta-schemas/{schemaId}:\nsummary: Access to a specific Meta Schema, identified by its SchemaId\ndescription: >-\nAccess to a specific Meta Schema\nget:\nsummary: Meta Schema access\ndescription: retrieve one specific Meta Schema\noperationId: GetMetaSchema\ntags:\n- MetaSchema CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:meta-schema:read\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: schemaId\nin: path\ndescription: Identifier of the Meta Schema\nrequired: true\nschema:\n$ref: '#/components/schemas/SchemaId'\n- name: If-None-Match\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.2\nschema:\ntype: string\n- name: If-Modified-Since\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.3\nschema:\ntype: string\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nresponses:\n'200' : #result ok\n$ref: '#/components/responses/RecordBody'\n'304':\n$ref: '#/components/responses/304'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'406':\n$ref: 'TS29571_CommonData.yaml#/components/responses/406'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\nput:\nsummary: Create/Modify Meta Schema\ndescription: Create or Modify a Meta Schema with a user provided SchemaId\noperationId: CreateOrModifyMetaSchema\ntags:\n- MetaSchema CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:meta-schema:create\nparameters:\n- name: realmId\nin: path\ndescription: Identifier(name) of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: schemaId\nin: path\ndescription: Identifier of the Meta Schema\nrequired: true\nschema:\n$ref: '#/components/schemas/SchemaId'\n- name: If-None-Match\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.2\nschema:\ntype: string\n- name: If-Match\nin: header\ndescription: Validator for conditional requests, as described in RFC 9110, 13.1.1\nschema:\ntype: string\n- name: get-previous\nin: query\ndescription: Retrieve the Meta Schema before update\nrequired: false\nschema:\ntype: boolean\ndefault: false\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/MetaSchema'\nrequired: true\nresponses:\n'200':\ndescription: Update with return\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/MetaSchema'\n'201':\ndescription: >-\nCreate case. The resource has been successfully created, location header indicates\nthe URI of the created Record.\n$ref: '#/components/responses/RecordBody'\nheaders:\nLocation:\n$ref: '#/components/headers/Location'\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n'204': # Update without return\ndescription: >-\nUpdate case. The resource has been successfully updated and no\nadditional content is included in the response message.\nheaders:\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n'304':\n$ref: '#/components/responses/304'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'408':\n$ref: 'TS29571_CommonData.yaml#/components/responses/408'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'412':\ndescription: Return Meta Schema value if get-previous=true\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/MetaSchema'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'501':\n$ref: 'TS29571_CommonData.yaml#/components/responses/501'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\ndelete:\nsummary: Delete a Meta Schema with an user provided SchemaId\noperationId: DeleteMetaSchema\ntags:\n- MetaSchema CRUD\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-dr\n- oAuth2ClientCredentials:\n- nudsf-dr\n- nudsf-dr:meta-schema:modify\nparameters:\n- name: realmId\nin: path\ndescription: Identifier(name) of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: schemaId\nin: path\ndescription: Identifier of the Meta Schema\nrequired: true\nschema:\n$ref: '#/components/schemas/SchemaId'\n- name: If-Match\nin: header\ndescription: Record validator for conditional requests, as described in RFC 9110, 13.1.1\nschema:\ntype: string\n- name: get-previous\nin: query\ndescription: Retrieve the Meta Schema before delete\nrequired: false\nschema:\ntype: boolean\ndefault: false\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nresponses:\n'200':\ndescription: OK\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/MetaSchema'\n'204':\ndescription: Successful case.\nheaders:\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n'304':\n$ref: '#/components/responses/304'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'408':\n$ref: 'TS29571_CommonData.yaml#/components/responses/408'\n'412':\ndescription: Return value if get-previous=true\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/MetaSchema'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\ncomponents:\nsecuritySchemes:\noAuth2ClientCredentials:\ntype: oauth2\nflows:\nclientCredentials:\ntokenUrl: '{nrfApiRoot}/oauth2/token'\nscopes:\nnudsf-dr: Access to the nudsf-dr API\nnudsf-dr:record:read: Access to read records\nnudsf-dr:record:modify: Access to update records\nnudsf-dr:record:create: Access to create records\nnudsf-dr:record-meta:read: Access to read a record's meta\nnudsf-dr:record-meta:modify: Access to update a record's meta\nnudsf-dr:block:read: Access to read blocks\nnudsf-dr:block:modify: Access to update blocks\nnudsf-dr:block:create: Access to create blocks\nnudsf-dr:subscription:read: Access to read subscriptions\nnudsf-dr:subscription:modify: Access to update subscriptions\nnudsf-dr:subscription:create: Access to create subscriptions\nnudsf-dr:meta-schema:read: Access to read meta schema\nnudsf-dr:meta-schema:modify: Access to update meta schema\nnudsf-dr:meta-schema:create: Access to create meta schema\n\nschemas:\nRecordSearchResult:\ndescription: Count and collection of Record references matching the providing filter.\ntype: object\nproperties:\ncount:      # The total number of elements found.\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uinteger'\nreferences: # The Record references found. If count-indicator is true, no references are sent back.\ntype: array\nitems:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uri'\nminItems: 1\nsupportedFeatures:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nmatchingRecords:\ndescription: A map (list of key-value pairs where recordId serves as key) of Records\ntype: object\nadditionalProperties:\n$ref: '#/components/schemas/Record'\nminProperties: 1\ntagCountResult:\ndescription: A map of TagCount (list of key-value pairs with unique indentifier as key)\ntype: object\nitems:\n$ref: '#/components/schemas/TagCount'\nexample: {\"advancedTagCount1\" : {\"tag1\" : 1}, \"advancedTagCount2\" : {\"tag2\" : 2}}\nrequired:\n- count\nRecordMeta:\ndescription: Meta data of a Record\ntype: object\nproperties:\nttl:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/DateTime'\ncallbackReference:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uri'\ntags:\ntype: object # dictionary type\ndescription: >-\nA dictionary of {\"tagName\": [ \"tagValue\", ...] }. A tag name can be used to retrieve a Record. The tagValue are unique.\nadditionalProperties:\ntype: array\nitems:\ntype: string\nuniqueItems: true\nminItems: 1\nminProperties: 1\nexample:  '{\"ueId\" : [ \"455345\", \"455346\" ], \"recordId\" : [ \"1000106\" ] }'\nexample: >-\n{ \"tags\" : {\"ueId\" : [ \"455345\", \"455346\" ], \"recordId\" : [ \"1000106\" ] }}\nschemaId:\n$ref: '#/components/schemas/SchemaId'\n\nRecord:\ndescription: Definition of a Record\ntype: object\nproperties:\nmeta:\n# json representation of the Meta Data\n$ref: '#/components/schemas/RecordMeta'\nblocks:\n# List of multipart data\ntype: array\ndescription: list of opaque Block's in this Record\nitems:\n$ref: '#/components/schemas/Block'\nminItems: 1\nrequired:\n- meta\nexample: >-\n{\"meta\": { \"tags\" : {\"tag1\" : [\"value1\"], \"tag2\" :[\"value2\"] } }, \"blocks\": [{\"Content-Id\": \"userDefBinaryBlob\", \"Content-Type\": \"text/plain\", \"content\": \"QmxvY2sgY29udGVudA==\"}, {\"Content-Id\": \"userDefJsonBlob\", \"Content-Type\": \"application/json\", \"content\": \"{\"key\": \"ftsimpletype-999550000000002\", \"value\": \"A3E71A78377179B5B91A;imsi-999550000000123\"}]}\n\nRecordIdList:\ndescription: List of Record IDs\ntype: object\nproperties:\nrecordIdList:\ntype: array\nitems:\ntype: string\nminItems: 1\nrequired:\n- recordIdList\n\nBlock:\ndescription: A Block can be of any type\nexample: >-\n\"QmxvY2sgY29udGVudA==\"\nNotificationSubscription:\ndescription: Definition of a notification subscription\ntype: object\nproperties:\nclientId:\n$ref: '#/components/schemas/ClientId'\ncallbackReference:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uri'\nexpiryCallbackReference:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uri'\nexpiry:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/DateTime'\nexpiryNotification:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uinteger'\nsubFilter:\n$ref: '#/components/schemas/SubscriptionFilter'\nsupportedFeatures:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nrequired:\n- clientId\n- callbackReference\n\nRecordNotification:\ndescription: Definition of a notification on a record\ntype: object\nproperties:\ndescriptor:\n# json representation of the notification description\n$ref: '#/components/schemas/NotificationDescription'\nmeta:\n# json representation of the Meta Data\n$ref: '#/components/schemas/RecordMeta'\nblocks:\n# List of multipart data\ntype: array\ndescription: list of opaque Block's in this Record\nitems:\n$ref: '#/components/schemas/Block'\nrequired:\n- descriptor\n- meta\nexample: >-\n{\"descriptor\": { \"recordRef\" : \"...\", \"operationType\" : \"DELETED\"}, \"meta\": { \"tags\" : {\"tag1\" : [\"value1\"], \"tag2\" :[\"value2\"] } }, \"blocks\": [{\"Content-Id\": \"userDefBinaryBlob\", \"Content-Type\": \"text/plain\", \"content\": \"QmxvY2sgY29udGVudA==\"}, {\"Content-Id\": \"userDefJsonBlob\", \"Content-Type\": \"application/json\", \"content\": \"{\"key\": \"ftsimpletype-999550000000002\", \"value\": \"A3E71A78377179B5B91A;imsi-999550000000123\"}]}\n\nNotificationDescription:\ndescription: Description of a record notification\ntype: object\nproperties:\nrecordRef:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uri'\noperationType:\n$ref: '#/components/schemas/RecordOperation'\nsubscriptionId:\n# unique identifier of the NotificationSubscription\ntype: string\nrequired:\n- recordRef\n- operationType\nexample: >-\n{ \"record\" : \"...\", \"operationType\" : \"DELETED\"}\n\nSubscriptionFilter:\ndescription: A subscription filter\ntype: object\nproperties:\nmonitoredResourceUris:\ntype: array\ndescription: list of resources applicable to the subscription\nitems:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uri'\nminItems: 1\noperations:\ntype: array\ndescription: list of resources applicable to the subscription\nitems:\n$ref: '#/components/schemas/RecordOperation'\nmaxItems: 3\n\nClientId:\ndescription: Defines the identity of the NF Consumer\ntype: object\nproperties:\nnfId:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/NfInstanceId'\nnfSetId:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/NfSetId'\n\nRecordOperation:\ndescription: Indicate operation made on a record\nanyOf:\n- type: string\nenum:\n- CREATED\n- UPDATED\n- DELETED\n- type: string\n\nConditionOperator:\ndescription: TBD\nanyOf:\n- type: string\nenum:\n- AND\n- OR\n- NOT\n- type: string\n\nComparisonOperator:\ndescription: TBD\nanyOf:\n- type: string\nenum:\n# Equals\n- EQ\n# Not Equal\n- NEQ\n# Greater Than\n- GT\n# Greater Than or Equal\n- GTE\n# Less Than\n- LT\n# Less Than or Equal\n- LTE\n- type: string\n\nCountExpression:\ndescription: A map containing parameters for advanced counting feature with unique key for each request\ntype: object\nproperties:\ntag:\ntype: string\ncountType:\n$ref: '#/components/schemas/TagCountType'\nfilter:\n$ref: '#/components/schemas/SearchExpression'\nrequired:\n- countType\nexample:\n{\"advancedTagCount1\":{\"tag\" : \"tag1\", countType : UNIQUE_COUNT , \"filter\" : NULL}, \"advancedTagCount2\":{\"tag\" : \"tag2\", countType : AGGREGATE_COUNT, \"filter\" : NULL}}\n\nTagCountType:\ndescription: Indicate mode of tag count operations\nanyOf:\n- type: string\nenum:\n- UNIQUE_COUNT\n- AGGREGATE_COUNT\n- TOTAL_COUNT\n- type: string\n\nTagCount:\ndescription: The TagCount result of a_Advanced Count request\ntype: object\nproperties:\ntag:\ntype: string\ncount:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uinteger'\nvalueCount:\ntype: array\nitems:\n$ref: '#/components/schemas/ValueCount'\n\nValueCount:\ndescription: The AggregateCount map\ntype: object\nproperties:\nvalue:\ntype: string\ncount:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uinteger'\n\nSearchExpression:\ndescription: A logical expression element\ntype: object\noneOf:\n- $ref: '#/components/schemas/SearchCondition'\n- $ref: '#/components/schemas/SearchComparison'\n- $ref: '#/components/schemas/RecordIdList'\nexample:\n{ \"cond\": \"OR\", \"units\": [ { \"op\": \"EQ\", \"tag\" : \"ueId\", \"value\" : \"455345\" }, { \"op\": \"EQ\", \"tag\" : \"supi\", \"value\" : \"imsi-999559807001001\" } ] }\n\nSearchCondition:\ndescription: A logical condition\ntype: object\nproperties:\ncond:\n$ref: '#/components/schemas/ConditionOperator'\nunits:\ntype: array\nitems:\n$ref: '#/components/schemas/SearchExpression'\nminItems: 1\nschemaId:\n$ref: '#/components/schemas/SchemaId'\nrequired:\n- cond\n- units\nexample:\n{ \"cond\": \"OR\", \"units\": [ { \"op\": \"EQ\", \"tag\" : \"ueId\", \"value\" : \"455345\" }, { \"op\": \"EQ\", \"tag\" : \"supi\", \"value\" : \"imsi-999559807001001\" } ] }\n\nSearchComparison:\ndescription: A comparison to apply on tag/values pairs.\ntype: object\nproperties:\nop:\n$ref: '#/components/schemas/ComparisonOperator'\ntag:\ntype: string\nvalue:\ntype: string\nrequired:\n- op\n- tag\n- value\nexample:\n{ \"op\": \"EQ\", \"tag\" : \"supi\", \"value\" : \"imsi-999559807001001\" }\n\nMetaSchema:\ndescription: Defines the Meta Schema\ntype: object\nrequired:\n- schemaId\n- metaTags\nproperties:\nschemaId:\n$ref: '#/components/schemas/SchemaId'\nmetaTags:\ntype: array\nitems:\n$ref: '#/components/schemas/TagType'\n\nTagType:\ndescription: Defines the Tag Type\ntype: object\nrequired:\n- tagName\n- keyType\nproperties:\ntagName:\ntype: string\nkeyType:\n$ref: '#/components/schemas/KeyType'\nsort:\ntype: boolean\ndefault: false\npresence:\ntype: boolean\n\nSchemaId:\ndescription: Represents the Identifier of a Meta schema.\ntype: string\n\nKeyType:\ndescription: Represents the type of a key.\nanyOf:\n- type: string\nenum:\n- UNIQUE_KEY\n- SEARCH_KEY\n- COUNT_KEY\n- SEARCH_AND_COUNT_KEY\n- OTHER_TAG\n- type: string\n\nRetrieveRecords:\ndescription: Indicates the data to be retrieved.\nanyOf:\n- type: string\nenum:\n- ONLY_META\n- META_AND_BLOCKS\n- type: string\n\nNotificationInfo:\ntype: object\nrequired:\n- expiredSubscriptions\nproperties:\nexpiredSubscriptions:\ntype: array\nitems:\n$ref: '#/components/schemas/NotificationSubscription'\nminItems: 1\n\nExtendedProblemDetails:\ndescription: Extending problemDetails\nallOf:\n- $ref: 'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'\n- $ref: '#/components/schemas/ProblemDetailsExtension'\n\nProblemDetailsExtension:\nanyOf:\n- $ref: '#/components/schemas/Record'\n- $ref: '#/components/schemas/RecordMeta'\n\nheaders:\nCache-Control:\ndescription: Cache-Control containing max-age, as described in RFC 9111, 5.2\nschema:\ntype: string\nETag:\ndescription: Entity Tag, containing a strong validator, as described in RFC 9110, 8.8.3\nschema:\ntype: string\nLast-Modified:\ndescription: Timestamp for last modification of the resource, as described in RFC 9110, 8.8.2\nschema:\ntype: string\nLocation:\ndescription: Contains the URI of the newly created resource\nrequired: true\nschema:\ntype: string\nRetry-After:\ndescription: 'Indicates the time the NF Consumer has to wait before making a new request. It can be a non-negative integer (decimal number) indicating the number of seconds the NF Consumer has to wait before making a new request or an HTTP-date after which the AF can retry a new request.'\nschema:\nanyOf:\n- type: integer\n- type: string\n\nrequestBodies:\nRecordBody:\ndescription: The record multipart request body. The meta part shall be the first part and is mandatory but can be empty and zero or more block parts may follow the meta part.\nrequired: true\ncontent:\nmultipart/mixed:\nschema:\n$ref: '#/components/schemas/Record'\nencoding:\nmeta: # The meta part shall be the first part and is mandatory but can be empty\ncontentType: application/json\nheaders:\nContent-Id:\nschema:\ntype: string\nrequired: true\nblocks: # 0 or more block parts may follow the meta part\ncontentType: '*/*' # Block part can be of any type\nheaders:\nContent-Id: # Block identifier is defined by the Content-Id header.\nschema:\ntype: string\nrequired: true\nContent-Transfer-Encoding:\nschema:\ntype: string\nrequired: true\n\nRecordNotificationBody:\ndescription: The record notification multipart request body. The descriptor part shall be the first one, followed by record meta part and by zero or more block parts.\nrequired: true\ncontent:\nmultipart/mixed:\nschema:\n$ref: '#/components/schemas/RecordNotification'\nencoding:\ndescriptor: # The descriptor part shall be the first part and is mandatory\ncontentType: application/json\nheaders:\nContent-Id:\nschema:\ntype: string\nrequired: true\nmeta: # The meta part shall be the second part and is mandatory but can be empty\ncontentType: application/json\nheaders:\nContent-Id:\nschema:\ntype: string\nrequired: true\nblocks: # 0 or more block parts may follow the meta part\ncontentType: '*/*' # Block part can be of any type\nheaders:\nContent-Id: # Block identifier is defined by the Content-Id header.\nschema:\ntype: string\nrequired: true\nContent-Transfer-Encoding:\nschema:\ntype: string\nrequired: true\n\nresponses:\n'304': # Etag response if the value might differ from that sent\ndescription: Not Modified\ncontent:\napplication/problem+json:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'\nheaders:\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nRetry-After:\n$ref: '#/components/headers/Retry-After'\n\n'RecordBody': #  Record value with associated headers\ndescription: >-\n- 200 Update. The resource has been successfully updated and previous value must be sent in the response message if requested.\n- 200 Get. The resource exists, its value must be sent in the response message\n- 412 Precondition Failed, the previous value must be sent in response message if requested.\ncontent:\nmultipart/mixed:\nschema:\n$ref: '#/components/schemas/Record'\nencoding:\nmeta: # The meta part shall be the first part and is mandatory but can be empty.\ncontentType: application/json\nheaders:\nContent-Id: # The meta part is identified by the 'meta' Content-Id header.\nschema:\ntype: string\nrequired: true\nblocks: # Zero or more block parts may follow the meta part\ncontentType: '*/*' # Block parts can be of any type.\nheaders:\nContent-Id: # Block identifier is defined by the Content-Id header.\nschema:\ntype: string\nrequired: true\nContent-Transfer-Encoding:\nschema:\ntype: string\nrequired: true\nheaders:\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n\n'RecordBodyDelete': #  Record value with associated headers\ndescription: >-\n- 200 Delete. The resource has been successfully delete and previous value must be sent in the response message if requested.\ncontent:\nmultipart/mixed:\nschema:\n$ref: '#/components/schemas/Record'\nencoding:\nmeta: # The meta part shall be the first par and is mandatory but can be empty.\ncontentType: application/json\nheaders:\nContent-Id: # The meta part is identified by the Content-Id header.\nschema:\ntype: string\nrequired: true\nblocks: # Zero or more block parts may follow the meta part.\ncontentType: '*/*' # Block parts can be of any type.\nheaders:\nContent-Id: # Block identifier is defined by the Content-Id header.\nschema:\ntype: string\nrequired: true\nContent-Transfer-Encoding:\nschema:\ntype: string\nrequired: true\nheaders:\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n\n'BlockBody': #  Block value with associated headers\ndescription: >-\n- 200 Update: The resource has been successfully updated and previous value must be sent in the response message if requested.\n- 200 Get: The resource exists, its value must be sent in the response message\n- 412 Precondition Failed: the previous value must be sent in response message if requested.\ncontent:\n'*/*':\nschema:\n$ref: '#/components/schemas/Block'\nheaders:\nCache-Control:\n$ref: '#/components/headers/Cache-Control'\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n\n'BlockBodyDelete': #  Block value with associated headers\ndescription: >-\n- 200 Delete: The resource has been successfully delete and previous value must be sent in the response message if requested.\ncontent:\n'*/*':\nschema:\n$ref: '#/components/schemas/Block'\nheaders:\nETag:\n$ref: '#/components/headers/ETag'\nLast-Modified:\n$ref: '#/components/headers/Last-Modified'\n\n'409':\ndescription: Conflict\ncontent:\napplication/problem+json:\nschema:\n$ref: '#/components/schemas/ExtendedProblemDetails'\n'412':\ndescription: Precondition Failed\ncontent:\napplication/problem+json:\nschema:\n$ref: '#/components/schemas/ExtendedProblemDetails'\n'500':\ndescription: Internal Server Error\ncontent:\napplication/problem+json:\nschema:\n$ref: '#/components/schemas/ExtendedProblemDetails'\n\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.3\tNudsf_Timer API",
            "description": "openapi: 3.0.0\ninfo:\ntitle: Nudsf_Timer\nversion: 1.1.0-alpha.3\ndescription: |\nNudsf Timer Service.\n© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).\nAll rights reserved.\n\nexternalDocs:\ndescription: 3GPP TS 29.598 UDSF Services, V18.4.0.\nurl: 'https://www.3gpp.org/ftp/Specs/archive/29_series/29.598/'\n\nservers:\n- url: '{apiRoot}/nudsf-timer/v1'\nvariables:\napiRoot:\ndefault: https://example.com\ndescription: apiRoot as defined in clause 4.4 of 3GPP TS 29.501\n\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-timer\n\npaths:\n\n/{realmId}/{storageId}/timers:\nsummary: Access to all Timers of a Storage\ndescription: >-\nroot of all Timers of a Storage\nget:\nsummary: Timers search with get\ndescription: Retrieve one or multiple TimerIDs based on filter\noperationId: SearchTimer\ntags:\n- Timer Search\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-timer\n- oAuth2ClientCredentials:\n- nudsf-timer\n- nudsf-timer:timer:read\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: filter\nin: query\ndescription: Query filter using conditions on tags\ncontent:\napplication/json:\nschema:\n$ref: 'TS29598_Nudsf_DataRepository.yaml#/components/schemas/SearchExpression'\n- name: expired-filter\nin: query\ndescription: Used to query for expired timers.\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/NullValue'\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nresponses:\n'200':\ndescription: Successful case. Response contains result of the search.\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/TimerIdList'\n'204':\ndescription: >-\nThe search condition does not match any Timer.\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'406':\n$ref: 'TS29571_CommonData.yaml#/components/responses/406'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\ndelete:\nsummary: Delete one or multiple timers based on filter\noperationId: DeleteTimers\ntags:\n- Timers Delete\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-timer\n- oAuth2ClientCredentials:\n- nudsf-timer\n- nudsf-timer:timer:modify\nparameters:\n- name: realmId\nin: path\ndescription: Identifier(name) of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\n- name: filter\nin: query\ndescription: A filter that determines the set of timers to be deleted\ncontent:\napplication/json:\nschema:\n$ref: 'TS29598_Nudsf_DataRepository.yaml#/components/schemas/SearchExpression'\n- name: expired-filter\nin: query\ndescription: Presence indicates that only expired timers are to be deleted.\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/NullValue'\nresponses:\n'200':\ndescription: Successful case. Response contains result of the search.\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/TimerIdList'\n'204':\ndescription: Successful case.\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\n/{realmId}/{storageId}/timers/{timerId}:\nsummary: Access to a specific Timer, identified by its TimerId\ndescription: >-\nAccess to a specific Timer\nput:\nsummary: Create/Replace Timer\ndescription: Create or Modify a Timer with a user provided TimerId\noperationId: CreateOrModifyTimer\ntags:\n- Timer Start\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-timer\n- oAuth2ClientCredentials:\n- nudsf-timer\n- nudsf-timer:timer:create\nparameters:\n- name: realmId\nin: path\ndescription: Identifier(name) of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: timerId\nin: path\ndescription: Identifier of the Timer\nrequired: true\nschema:\n$ref: '#/components/schemas/TimerId'\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/Timer'\nrequired: true\nresponses:\n'201':\ndescription: Timer successfully created\n'204':\ndescription: Timer successfully replaced\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\ncallbacks:\ntimerExpiry:\n'{request.body#/callbackReference}':\npost:\nrequestBody:\nrequired: true\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/Timer'\nresponses:\n'204':\ndescription: Callback executed successfully\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\npatch:\nsummary: Timer modification\ndescription: update a specific Timer\noperationId: UpdateTimer\ntags:\n- Timer Update\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-timer\n- oAuth2ClientCredentials:\n- nudsf-timer\n- nudsf-timer:timer:modify\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: timerId\nin: path\ndescription: Identifier of the Timer\nrequired: true\nschema:\n$ref: '#/components/schemas/TimerId'\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nrequestBody:\ndescription: Timer data to patch\ncontent:\napplication/json-patch+json:\nschema:\ntype: array\nitems:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PatchItem'\nminItems: 1\nrequired: true\nresponses:\n'200':\ndescription: >-\nOne or more modification instructions have been discarded, the execution report is returned in response PatchResult.\ncontent:\napplication/json:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PatchResult'\n'204':\ndescription: >-\nSuccessful case. The timer has been successfully updated and no return is expected.\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\ndelete:\nsummary: Delete a Timer with an user provided TimerId\noperationId: DeleteTimer\ntags:\n- Timer Stop\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-timer\n- oAuth2ClientCredentials:\n- nudsf-timer\n- nudsf-timer:timer:modify\nparameters:\n- name: realmId\nin: path\ndescription: Identifier(name) of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: timerId\nin: path\ndescription: Identifier of the Timer\nrequired: true\nschema:\n$ref: '#/components/schemas/TimerId'\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nresponses:\n'204':\ndescription: Successful case.\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\nget:\nsummary: Timer access\ndescription: retrieve one specific Timer\noperationId: GetTimer\ntags:\n- Timer Get\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nudsf-timer\n- oAuth2ClientCredentials:\n- nudsf-timer\n- nudsf-timer:timer:read\nparameters:\n- name: realmId\nin: path\ndescription: Identifier of the Realm\nrequired: true\nschema:\ntype: string\nexample: Realm01\n- name: storageId\nin: path\ndescription: Identifier of the Storage\nrequired: true\nschema:\ntype: string\nexample: Storage01\n- name: timerId\nin: path\ndescription: Identifier of the Timer\nrequired: true\nschema:\n$ref: '#/components/schemas/TimerId'\n- name: supported-features\nin: query\ndescription: Features required to be supported by the target NF\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nresponses:\n'200' : #result ok\ndescription: Successful case.\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/Timer'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'406':\n$ref: 'TS29571_CommonData.yaml#/components/responses/406'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\n\ncomponents:\nsecuritySchemes:\noAuth2ClientCredentials:\ntype: oauth2\nflows:\nclientCredentials:\ntokenUrl: '{nrfApiRoot}/oauth2/token'\nscopes:\nnudsf-timer: Access to the nudsf-timer API\nnudsf-timer:timer:read: Access to read timers\nnudsf-timer:timer:modify: Access to update timers\nnudsf-timer:timer:create: Access to create timers\n\nschemas:\n\n# COMPLEX TYPES:\n\nTimer:\ndescription: Represents a timer.\ntype: object\nrequired:\n- expires\nproperties:\ntimerId:\n$ref: '#/components/schemas/TimerId'\nexpires:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/DateTime'\nmetaTags:\ndescription: A map (list of key-value pairs where a tagName of type string serves as key) of tagValue lists\ntype: object\nadditionalProperties:\ntype: array\nitems:\ntype: string\nminItems: 1\nminProperties: 1\ncallbackReference:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uri'\ndeleteAfter:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uinteger'\nperiodicRepetition:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/DurationSec'\nrepetitionCount:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uinteger'\n\nTimerIdList:\ndescription: Represents a list of timer IDs.\ntype: object\nrequired:\n- timerIds\nproperties:\ntimerIds:\ntype: array\nitems:\n$ref: '#/components/schemas/TimerId'\nminItems: 1\n\n\n# SIMPLE TYPES:\n\nTimerId:\ndescription: Represents the identifier of a timer.\ntype: string\n\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "B.1\t\tExample Search",
            "description": "The conditional expression is defined by the following Extended Backus-Naur Form (EBNF) [18].\nThe figure B-1 illustrates a search expression, which is a mathematical expression used to find a specific value in a database. The search expression is represented by a set of operators and operands, and the result is a numerical value that can be used to filter or search through the database. The figure provides a visual representation of the search expression, allowing users to understand the structure and operation of the search engine.\nFigure B-1: Search Expression\nSearch_Expression ::= Search_Comparison | Search_Condition\n\nThe figure depicts a search comparison between two search algorithms, with the first algorithm (A) being a hybrid approach that combines traditional search with a heuristic approach, while the second algorithm (B) is a pure heuristic approach. The figure illustrates the performance of the two algorithms on a dataset, with the results showing that the hybrid approach outperforms the pure heuristic approach in terms of accuracy and efficiency.\nFigure B-2: Search Comparison\nSearch_Comparison ::= Tag ( 'EQ' | 'NEQ' | 'GT' | 'GTE' | 'LT' | 'LTE' ) Value\nThe figure B-3 illustrates the search condition for a 5G network, showing the search space and the search algorithm used to find the optimal solution. The search space is represented by the search condition, which includes the number of antennas, the number of users, and the number of antennas per user. The search algorithm is a hybrid algorithm that combines the advantages of both greedy and heuristic search methods. The figure also includes the search space, the search algorithm, and the search space, which helps to understand the search process and the search space.\nFigure B-3: Search Condition\nSearch_Condition ::= Search_Expression ( ( 'AND' | 'OR' )  )+\nThe figure B-4 illustrates a search condition not search condition, which is a crucial component in the search algorithm used in the field of computer science and artificial intelligence. The figure shows a search condition not search condition, with a search condition not search condition in the center and a search condition search condition in the right side. This figure is used to represent the search conditions in a search algorithm, which are the conditions that the algorithm must satisfy in order to find the target item. The figure is important for understanding the search algorithm and its behavior, as it helps to visualize the search conditions and their relationship to the target item.\nFigure B-4: Search ConditionNot\nSearch_ConditionNot ::= 'NOT' Search_Expression\nExample:\nFind all records where the tag \"ueId\" is equal to \"455345\" OR the tag \"supi\" is equal to \"imsi-999559807001001\":\n{\n\"cond\": \"OR\",\n\"units\": [\n{\n\"op\": \"EQ\",\n\"tag\" : \"ueId\",\n\"value\" : \"455345\"\n},\n{\n\"op\": \"EQ\",\n\"tag\" : \"supi\",\n\"value\" : \"imsi-999559807001001\"\n}\n]\n}\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "B.2\tExample AdvancedCounting",
            "description": "Session records:\nRecordId1/RecordMeta : { \"supi\": [\"imsi-456123000000006\"], \"dnn\":[\"nrphone\"], \"qosFlows\":[\"qf1\", \"qf2\"], \"upfNodes\":[\"upfnode1\"], \"upConnState\":\"ACTIVATED\",\"ratType\":[\"NR\"]... }\nRecordId2/RecordMeta : { \"supi\": [\"imsi-456123000000006 ], \"dnn\":[\"ims\"],\"qosFlows\":[ \"qf1\", \"qf3\" ], \"upfNodes\":[\"upfNode1\", \"upfNode2\"], \"upConnState\":\"ACTIVATED\",\"ratType\":[\"WLAN\"]...}\nRecordId3/RecordMeta : { \"supi\": [\"imsi-456123000001001 ], \"dnn\":[\"nrphone\"],\"qosFlows\":[\"qf1\", \"qf2\"], \"upfNodes\":[\"upfNode3\"], \"upConnState\":\"DEACTIVATED\",\"ratType\":[\"NR\"]... }\nRecordId4/RecordMeta : { \"supi\": [\"imsi-456123001032010 ], \"dnn\":[\"nrphone\"],\"qosFlows\":[\"qf1\", \"qf4\"], \"upfNodes\":[\"upfNode4\"], \"upConnState\":\"ACTIVATED\",\"ratType\":[\"NR\"]...}\n\nExample 1: Get Unique count of records with tag= \"supi\" and upConnState = \"ACTIVATED\".\nSearch expression:\n{\n\"advancedTagCount1\":\n{\n\"tag\" : \"supi\",\n\"countType\" : \"UNIQUE_COUNT\",\n\"filter\" : { \"op\": \"EQ\", \"tag\" : \" upConnState \", \"value\" : \" ACTIVATED \" }\n}\n}\n\nOutput:\nThe search found two unique supi in \"ACTIVATED\" state matching the tag-count-filter.\n\n{\"advancedTagCount1\" : {\"supi\" : 2}\n\n\nExample 2: Get Aggregate count of the tag=qosFlow and DNN=\"nrPhone\".\n\nSearch expression:\n\n{\n\"advancedTagCount1\":\n{\n\"tag\" : \"qosFlows\",\n\"countType\" : \"AGGREGATE_COUNT\",\n\"filter\" : { \"op\": \"EQ\", \"tag\" : \"dnn\", \"value\" : \"nrphone\" }\n}\n}\n\n\nOutput:\n\n{\"advancedTagCount1\" : {[ \"qf1\": 2, \"qf2\":1, \"qf4\":1 ]}\n\n\nExample 3: Get Aggregate count for tag=qosFlow across all records\nSearch Expression:\n{\n\"advancedTagCount1\":\n{\n\"tag\" : \"qosFlows\",\n\"countType\" : \"AGGREGATE_COUNT\",\n\"filter\" : null\n}\n}\n\nOutput:\n{ \"advancedTagCount1\": {[ \"qf1\":  4, \"qf2\":2, \"qf3\":1, “qf4\":1 ] }}\n\nExample 4: Get UNIQUE_COUNT of records for tag=supi\n\nSearch Expression:\n{\n\"advancedTagCount1\":\n{\n\"tag\" : \"supi\",\n\"countType\" : \"UNIQUE_COUNT\",\n\"filter\" : null\n}\n}\n\nOutput:\n{\"advancedTagCount1\": {\"supi\" : 3}}\n\nExample 5: Request 2 tag counts in one request\n-\tAggregate count of ratType\n-\tAggregate count of qosFlows\nSearch Expression:\n{\n\"advancedTagCount1\":\n{\n\"tag\" : \"ratType\",\n\"countType\" : \"AGGREGATE_COUNT\",\n\"filter\" : null\n},\n\"advancedTagCount2\":\n{\n\"tag\" : \"qosFlows\",\n\"countType\" : \"AGGREGATE_COUNT\",\n\"filter\" : null\n}\n}\n\nOutput:\n{ \"advancedTagCount1\": {\"NR\": 3, \"WLAN\":1}, \"advancedTagCount2\": {[ \"qf1\":  4, \"qf2\":2, \"qf3\":1, \"qf4\":1 ] }}\n\nExample 6: Total count of number of records with tag=\"supi\"\n\nSearch Expression:\n{\n\"advancedTagCount1\":\n{\n\"tag\" : \"supi\",\n\"countType\" : \"TOTAL_COUNT\",\n\"filter\" : null\n}\n}\n\nOutput:\n{\"advancedTagCount1\": {\"supi\" : 4}}\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "C.1\tGeneral",
            "description": "This clause provides examples of the HTTP multipart messages. The examples do not aim to be a complete representation of the HTTP message, e.g. additional information or headers can be included.\nThis Annex is informative and the normative descriptions in this specification prevail over the description in this Annex if there is any difference.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "C.2\tExample HTTP multipart Record",
            "description": "Content-Type: multipart/mixed; boundary=partboundary\n\n--partboundary\nContent-Id: meta\nContent-Type: application/json; charset=UTF-8\n\n{\"tags\":  { \"ueId\" : [\"455345\"], \"supi\" : [\"imsi-999559807001001\"] } }\n--partboundary\n\nContent-Id: block1\nContent-Type: application/json; charset=UTF-8\nContent-Transfer-Encoding: binary\n\n{ \"firstName\": \"John\", \"lastName\": \"Doe\"}\n--partboundary\n\nContent-Id: block2\nContent-Type: image/png\nContent-Transfer-Encoding: binary\n\n<binary representation of png>\n\n--partboundary--'\n\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "C.3\tExample HTTP multipart BlockCollection",
            "description": "Content-Type: multipart/parallel; boundary=partboundary\n\n--partboundary\nContent-Id: block1\nContent-Type: application/json; charset=UTF-8\nContent-Transfer-Encoding: binary\n\n{ \"firstName\": \"John\", \"lastName\": \"Doe\"}\n--partboundary\n\nContent-Id: block2\nContent-Type: image/png\nContent-Transfer-Encoding: base64\n\niVBORw0KGgoAAAANSUhEUgAAADIAAAAeCAYAAABuUU38AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAhdEVYdENyZWF0aW9uIFRpbWUAMjAyMDowMjoyMiAxMTowMToxNeLKX7MAAAUTSURBVFhH7Zh5qFVVFIdv2XsN2qRZZoWUPWnSbHrEwwYapMQKbKCRNJ+GmpEN9EdBhCIVRHMREYKWIWqWYTQpKZZmEZTaHPIipcGyySzN9Pvuuys2h3PvPcW70B/vBx/33DPss/faa6+19ulRKqbdIO7dUfn9X2mXym+e9oOx0FqhJ2yE9+BZeB3+hkZpfzgZjoXe8Bu8C8thGxTSQfAlaP1qzIFm6EpprKvgDdgCvmczfAu/VP47mMOhkKZCdPgPeAgeh58q54I7INQCl8PNMAHOhl5QRN53G3wPtrsG7oZTYS/QtTXa8TALvoIBUFcXg26zHSZ6oqKTwPMxkBUwGF6F9HzwKzwIh0ItXQve/z6cAbVcXt0KK6HQGh8EWjnVCEg7/DP8mfyvxu9wL+wLQ+AyuB3uhydgBnjf86Cl6w3EGVoLo8r//oWa4DpwwWU7WRQH7dpbl/z/Gj6Fz8DZ87xesBiOg1rSCE91HtYfeR+4AG6BtOG/QKukshMfwhL4HFykPq+FD4EX4RnQfTbApeBsRuSz/Q9ANz0GDoCzYBXkaQF8A67HqroQjFpZtzFijIYfk3OiVc+EeoZRr4CulKcX4CVwgc8F3SdvHbhW7ZvvrKpdYROkHRUfvBMeSM6JFjbnFNVsMPLkaTgYdp3JPeATuAhSmdOciaehruF0pfWwFdJOZzFB6jbKRn1uHjwHdjiLIdQw7j150vodcH35X6k0GeaDa1TX89kf4C4oWpWUZ6YfXAFvQl54nQQh/TrvnkBL+/L7wKogTyZEr30Hrqd3QE94ufJ/HDhb/1kOygSVdszFnCY8F6eWznNLMck5a1PAHJAnA0h/cDA3gm71FnSptJb5IDpmhMqTITYdQPAk6CK6n9Gplk4EQ7MRy2RZV1q6qE6B3TsPy3KK8553sHlaBHuDs3g0uI6sq0y6DjBkFWDUdGaOANdWIe0D+q3rYCacA2k0MBvfAFG0Ba6HMZDVCRDXrVI91t3CCA7eBe1AroGHwTVg9DP/eM2c48y5Pk6DQrIgzHbQSGEJoRWz2Xw1RPHoArYui4HbScOi16aB1zw2J6RyDRSxtG3Zl0KyAItO1sKK0wJSNxgJkSwd+Ntgxeyses6SY09wFty7WFimsrxY2HlYUwPBoFKo0jUkPgbWOGnHxdlw2q+E7N7jdIi6KcUk1sKoe7OJOJITzR7zm7qrdZsbpCJ6BB7tPKyutHEXnbWNa8b18BG4G9R9qsns64KNUmEpzKLTJtIeZMvz+R3ElK05sFR6jZc5UGV21m2yM5Wng8EodxS4YzR66gFutv5ROpAuk9Znh9TO7wBesAU6YCGJRgMpt7F6gTNdRBpLo1oh94UvQJdrrJiJVlJzCwNphiYSQh+KI0Npw9SQGcF0TYeVSuNpvI2B7IClMBsfabwVu9WtbuUqNifngaEtFqP54Saw9DavnAtuZ61ELegMf8PgEjCxGdvdtxjvDZVmdhOsagNrLjdg5gJzju1eDR/DdLC0sdr1u5glUPTHfnjdPT6pqFxIukfyA13sFO+BVTZgNeqHAHdjIW+0c35jsiQxETloPxG5c/S6+4+h4PV2sGGCVfmFbrJCVrzeo0GsBuyIstx3gO7Ll4ER1GfT/rgbdLAOzpLHax67wXLvb7s+48eQsjWsiXxhKl/sww7AjvsiLRR1j416j4qvgd7vueisims+K1HqxD7f99q2WGln+xPviOeVA1D2jXqs1LwTlVGQ4+/C82oAAAAASUVORK5CYII=\n--partboundary--'\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "C.4\tExample HTTP multipart RecordNotification",
            "description": "Content-Type: multipart/mixed; boundary=partboundary\n\n--partboundary\nContent-Id: recordnotification\nContent-Type: application/json; charset=UTF-8\n\n{\"recordRef\" : \"...\", \"operationType\" : \"DELETED\" }\n\n--partboundary\n\nContent-Id: meta\nContent-Type: application/json; charset=UTF-8\n\n{\"tags\":  { \"ueId\" : [\"455345\"], \"supi\" : [\"imsi-999559807001001\"] } }\n\n--partboundary\n\nContent-Id: block1\nContent-Type: application/json; charset=UTF-8\nContent-Transfer-Encoding: binary\n\n{\"firstName\": \"John\", \"lastName\": \"Doe\"}\n\n--partboundary\n\nContent-Id: block2\nContent-Type: image/png\nContent-Transfer-Encoding: binary\n\n<binary representation of png>\n\n--partboundary--'\n\n\n\n",
            "summary": "",
            "tables": [
                {
                    "description": "",
                    "table number": 147,
                    "summary": "",
                    "name": ""
                }
            ],
            "figures_meta_data": [],
            "subsections": []
        }
    ]
}