{
    "document_name": "29578-i10.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Specification has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\nIn the present document, modal verbs have the following meanings:\nshall\tindicates a mandatory requirement to do something\nshall not\tindicates an interdiction (prohibition) to do something\nThe constructions \"shall\" and \"shall not\" are confined to the context of normative provisions, and do not appear in Technical Reports.\nThe constructions \"must\" and \"must not\" are not used as substitutes for \"shall\" and \"shall not\". Their use is avoided insofar as possible, and they are not used in a normative context except in a direct citation from an external, referenced, non-3GPP document, or so as to maintain continuity of style when extending or modifying the provisions of such a referenced document.\nshould\tindicates a recommendation to do something\nshould not\tindicates a recommendation not to do something\nmay\tindicates permission to do something\nneed not\tindicates permission not to do something\nThe construction \"may not\" is ambiguous and is not used in normative elements. The unambiguous constructions \"might not\" or \"shall not\" are used instead, depending upon the meaning intended.\ncan\tindicates that something is possible\ncannot\tindicates that something is impossible\nThe constructions \"can\" and \"cannot\" are not substitutes for \"may\" and \"need not\".\nwill\tindicates that something is certain or expected to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nwill not\tindicates that something is certain or expected not to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nmight\tindicates a likelihood that something will happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nmight not\tindicates a likelihood that something will not happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nIn addition:\nis\t(or any other verb in the indicative mood) indicates a statement of fact\nis not\t(or any other negative verb in the indicative mood) indicates a statement of fact\nThe constructions \"is\" and \"is not\" do not indicate requirements.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document specifies the stage 3 protocol and data model for the Nmnpf Service Based Interface. It provides stage 3 protocol definitions and message flows, and specifies the API for each service offered by the MNPF.\nThe 5G System stage 2 architecture and procedures are specified in 3GPP TS 23.501 [2] and 3GPP TS 23.502 [3].\nThe Technical Realization of the Service Based Architecture and the Principles and Guidelines for Services Definition are specified in 3GPP TS 29.500 [4] and 3GPP TS 29.501 [5].\nStage 2 requirements for the Nmnpf services are specified in 3GPP TS 23.540 [14].\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 23.501: \"System Architecture for the 5G System; Stage 2\".\n[3]\t3GPP TS 23.502: \"Procedures for the 5G System; Stage 2\".\n[4]\t3GPP TS 29.500: \"5G System; Technical Realization of Service Based Architecture; Stage 3\".\n[5]\t3GPP TS 29.501: \"5G System; Principles and Guidelines for Services Definition; Stage 3\".\n[6]\tOpenAPI: \"OpenAPI Specification Version 3.0.0\", .\n[7]\t3GPP TR 21.900: \"Technical Specification Group working methods\".\n[8]\t3GPP TS 33.501: \"Security architecture and procedures for 5G system\".\n[9]\tIETF RFC 6749: \"The OAuth 2.0 Authorization Framework\".\n[10]\t3GPP TS 29.510: \"5G System; Network Function Repository Services; Stage 3\".\n[11]\tIETF RFC 9113: \"HTTP/2\".\n[12]\tIETF RFC 8259: \"The JavaScript Object Notation (JSON) Data Interchange Format\".\n[13]\tIETF RFC 9457: \"Problem Details for HTTP APIs\".\n[14]\t3GPP TS 23.540: \" Technical realization of Service Based Short Message Service; Stage 2\".\n[15]\t3GPP TS 29.571: \"5G System; Common Data Types for Service Based Interfaces Stage 3\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions, symbols and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tDefinitions",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms and definitions given in 3GPP TR 21.905 [1] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in 3GPP TR 21.905 [1].\nNmnpf:\tService-based interface exhibited by the MNPF server\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tSymbols",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the following symbols apply:\n<symbol>\t<Explanation>\n\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.3\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in 3GPP TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in 3GPP TR 21.905 [1].\nMNPF\tMobile Number Portability Function\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tOverview",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "4.1\tIntroduction",
                    "description": "",
                    "summary": "",
                    "text_content": "Within the 5GC, the MNPF offers services to the SMS-GMSC, NRF and SCP via the Nmnpf service based interface (see 3GPP TS 23.501 [2], 3GPP TS 23.502 [3], and 3GPP TS 23.540 [14]).\nFigure 4.1-1 provides the reference model (in service based interface representation and in reference point representation), with focus on the MNPF.\nThe figure depicts a reference model for MNP F, which is a key component in the optical backbone architecture. It illustrates the fiber-optic backbone with core switches, optical line terminals (OLTs), and distributed nodes. The layered design aligns with SDN principles, ensuring failover reliability.\nFigure 4.1-1: Reference model – MNPF\nThe functionalities supported by the MNPF are listed in clause 6.7 of 3GPP TS 23.540 [14].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "5\tServices offered by the MNPF",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tIntroduction",
                    "description": "",
                    "summary": "",
                    "text_content": "The MNPF offers the following services via the Nmnpf interface:\n-\tNmnpf_NPStatus Service\nTable 5.1-1 summarizes the corresponding APIs defined for this specification.\nTable 5.1-1: API Descriptions\n\n",
                    "tables": [
                        {
                            "description": "Table 5.1-1: API Descriptions",
                            "table number": 3,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.2\tNmnpf_NPStatus Service",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.2.1\tService Description",
                            "text_content": "See 3GPP TS 23.540 [14] clause 6.7.1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.2\tService Operations",
                            "text_content": "For the Nmnpf_NPStatus service the following service operations are defined:\n-\tGet\nThe Nmnpf_NPStatus Service is used by Consumer NFs (SMS-GMSC, NRF, SCP) to retrieve the UE's subscription network by means of the Get service operation.\nThis clause provides a general description of the Get service operation.\nFigure 5.2.2.2.2-1 shows a scenario where the NF service consumer (e.g. SMS-GMSC, NRF, SCP) sends a request to the MNPF to receive the UE's Subscription Network (see also clause 5.1.7.2, clause 5.1.7.3 and clause 5.1.7.4 of 3GPP TS 23.540 [14]. The request contains the UE's identity (/{gpsi}).\nThe figure depicts a request for a UE's network performance indicator (NP) status, specifically the number of active network paths (NPs). The figure illustrates the network topology, including the base station (gNB), user equipment (UE), and scatterers, with a focus on the network paths. The request is made by the UE, and the NP status is requested to determine the network performance.\nFigure 5.2.2.2.2-1: Requesting a UE's NP statusI\n1.\tThe NF service consumer (e.g. SMS-GMSC, NRF, SCP) sends a GET request to the resource representing the UE's number portability status.\n2a.\tOn success, the MNPF responds with \"200 OK\" with the message body containing the UE's Number Portability Status Information.\n2b.\tIf there is no valid information for the UE, HTTP status code \"404 Not Found\" shall be returned including additional error information in the response body (in the \"ProblemDetails\" element).\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the GET response body.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "6\tAPI Definitions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.1\tNmnpf_NPStatus Service API",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.1.1\tIntroduction",
                            "text_content": "The Nmnpf_NPStatus service shall use the Nmnpf_NPStatus API.\nThe API URI of the Nmnpf_NPStatus API shall be:\n{apiRoot}/<apiName>/<apiVersion>\nThe request URIs used in HTTP requests from the NF service consumer towards the NF service producer shall have the Resource URI structure defined in clause 4.4.1 of 3GPP TS 29.501 [5], i.e.:\n{apiRoot}/<apiName>/<apiVersion>/<apiSpecificResourceUriPart>\nwith the following components:\n-\tThe {apiRoot} shall be set as described in 3GPP TS 29.501 [5].\n-\tThe <apiName> shall be \"nmnpf-npstatus\".\n-\tThe <apiVersion> shall be \"v1\".\n-\tThe <apiSpecificResourceUriPart> shall be set as described in clause 6.1.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.2\tUsage of HTTP",
                            "text_content": "HTTP/2, IETF RFC 9113 [11], shall be used as specified in clause 5 of 3GPP TS 29.500 [4].\nHTTP/2 shall be transported as specified in clause 5.3 of 3GPP TS 29.500 [4].\nThe OpenAPI [6] specification of HTTP messages and content bodies for the Nmnpf_NPStatus API is contained in Annex A.\nSee clause 5.2.2 of 3GPP TS 29.500 [4] for the usage of HTTP standard headers.\nJSON, IETF RFC 8259 [12], shall be used as content type of the HTTP bodies specified in the present specification as specified in clause 5.4 of 3GPP TS 29.500 [4]. The use of the JSON format shall be signalled by the content type \"application/json\".\n\"Problem Details\" JSON object shall be used to indicate additional details of the error in a HTTP response body and shall be signalled by the content type \"application/problem+json\", as defined in IETF RFC 9457 [13].\nThe mandatory HTTP custom header fields specified in clause 5.2.3.2 of 3GPP TS 29.500 [4] shall be supported, and the optional HTTP custom header fields specified in clause 5.2.3.3 of 3GPP TS 29.500 [4] may be supported.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.3\tResources",
                            "text_content": "This clause describes the structure for the Resource URIs and the resources and methods used for the service.\nFigure 6.1.3.1-1 depicts the resource URIs structure for the Nmnpf_NPStatus API.\nThe figure depicts a resource URI structure of the Nmnp f _NPStatus API, which is used to access the status of a network node. The structure includes the node identifier, status code, and optional parameters. The figure provides a clear and concise representation of the API's structure, making it easy to understand and use.\nFigure 6.1.3.1-1: Resource URI structure of the Nmnpf_NPStatus API\nTable 6.1.3.1-1 provides an overview of the resources and applicable HTTP methods.\nTable 6.1.3.1-1: Resources and methods overview\n\nThis resource represents the Number Portability status for a GPSI.\nResource URI: {apiRoot}/nmnpf-npstatus/<apiVersion>/{gpsi}\nThis resource shall support the resource URI variables defined in table 6.1.3.2.2-1.\nTable 6.1.3.2.2-1: Resource URI variables for this resource\n\n6.1.3.2.3.1\tGET\nThis method shall support the URI query parameters specified in table 6.1.3.2.3.1-1.\nTable 6.1.3.2.3.1-1: URI query parameters supported by the GET method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.2.3.1-2 and the response data structures and response codes specified in table 6.1.3.2.3.1-3.\nTable 6.1.3.2.3.1-2: Data structures supported by the GET Request Body on this resource\n\nTable 6.1.3.2.3.1-3: Data structures supported by the GET Response Body on this resource\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.3.1-1: Resources and methods overview",
                                    "table number": 4,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.2-1: Resource URI variables for this resource",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.3.1-1: URI query parameters supported by the GET method on this resource",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.3.1-2: Data structures supported by the GET Request Body on this resource",
                                    "table number": 7,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.3.1-3: Data structures supported by the GET Response Body on this resource",
                                    "table number": 8,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.4\tCustom Operations without associated resources",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.5\tNotifications",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.6\tData Model",
                            "text_content": "This clause specifies the application data model supported by the API.\nTable 6.1.6.1-1 specifies the data types defined for the Nmnpf_NPStatus service based interface protocol.\nTable 6.1.6.1-1: Nmnpf_NPStatus specific Data Types\n\nTable 6.1.6.1-2 specifies data types re-used by the Nmnpf_NPStatus service based interface protocol from other specifications, including a reference to their respective specifications and when needed, a short description of their use within the Nmnpf_NPStatus service based interface.\nTable 6.1.6.1-2: Nmnpf_NPStatus re-used Data Types\n\nThis clause defines the structures to be used in resource representations.\nTable 6.1.6.2.2-1: Definition of type NpStatusInfo\n\nThis clause defines simple data types and enumerations that can be referenced from data structures defined in the previous clauses.\nThe simple data types defined in table 6.1.6.3.2-1 shall be supported.\nTable 6.1.6.3.2-1: Simple data types\n\nNone.\nNone.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.6.1-1: Nmnpf_NPStatus specific Data Types",
                                    "table number": 9,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.1-2: Nmnpf_NPStatus re-used Data Types",
                                    "table number": 10,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.2-1: Definition of type NpStatusInfo",
                                    "table number": 11,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.2-1: Simple data types",
                                    "table number": 12,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.7\tError Handling",
                            "text_content": "For the Nmnpf_NPStatus API, HTTP error responses shall be supported as specified in clause 4.8 of 3GPP TS 29.501 [5]. Protocol errors and application errors specified in table 5.2.7.2-1 of 3GPP TS 29.500 [4] shall be supported for an HTTP method if the corresponding HTTP status codes are specified as mandatory for that HTTP method in table 5.2.7.1-1 of 3GPP TS 29.500 [4].\nIn addition, the requirements in the following clauses are applicable for the Nmnpf_NPStatus API.\nProtocol errors handling shall be supported as specified in clause 5.2.7 of 3GPP TS 29.500 [4].\nThe application errors defined for the Nmnpf_NPStatus  service are listed in Table 6.1.7.3-1.\nTable 6.1.7.3-1: Application errors\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.7.3-1: Application errors",
                                    "table number": 13,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.8\tFeature negotiation",
                            "text_content": "The optional features in table 6.1.8-1 are defined for the Nmnpf_NPStatus API. They shall be negotiated using the extensibility mechanism defined in clause 6.6 of 3GPP TS 29.500 [4].\nTable 6.1.8-1: Supported Features\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.8-1: Supported Features",
                                    "table number": 14,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.9\tSecurity",
                            "text_content": "As indicated in 3GPP TS 33.501 [8] and 3GPP TS 29.500 [4], the access to the Nmnpf_NPStatus API may be authorized by means of the OAuth2 protocol (see IETF RFC 6749 [9]), based on local configuration, using the \"Client Credentials\" authorization grant, where the NRF (see 3GPP TS 29.510 [10]) plays the role of the authorization server.\nIf OAuth2 is used, an NF Service Consumer, prior to consuming services offered by the Nmnpf_NPStatus API, shall obtain a \"token\" from the authorization server, by invoking the Access Token Request service, as described in 3GPP TS 29.510 [10], clause 5.4.2.2.\nNOTE:\tWhen multiple NRFs are deployed in a network, the NRF used as authorization server is the same NRF that the NF Service Consumer used for discovering the Nmnpf_NPStatus service.\nThe Nmnpf_NPStatus API defines a single scope \"nmnpf-npstatus\" for the entire service, and it does not define any additional scopes at resource or operation level.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "A.1\tGeneral",
            "description": "This Annex specifies the formal definition of the API(s) defined in the present specification. It consists of OpenAPI specifications in YAML format.\nThis Annex takes precedence when being discrepant to other parts of the specification with respect to the encoding of information elements and methods within the API(s).\nNOTE 1:\tThe semantics and procedures, as well as conditions, e.g. for the applicability and allowed combinations of attributes or values, not expressed in the OpenAPI definitions but defined in other parts of the specification also apply.\nInformative copies of the OpenAPI specification files contained in this 3GPP Technical Specification are available on a Git-based repository that uses the GitLab software version control system (see clause 5.3.1 of 3GPP TS 29.501 [5] and clause 5B of 3GPP TR 21.900 [7]).\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.2\tNmnpf_NPStatus API",
            "description": "openapi: 3.0.0\ninfo:\ntitle: 'Nmnpf_NPStatus'\nversion: '1.1.0-alpha.1'\ndescription: |\nNmnpf Number Portability Status Service.\n© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).\nAll rights reserved.\nexternalDocs:\ndescription: 3GPP TS 29.578 V18.0.0; Mobile Number Portability Services.\nurl: https://www.3gpp.org/ftp/Specs/archive/29_series/29.578/\nservers:\n- url: '{apiRoot}/nmnpf-npstatus/v1'\nvariables:\napiRoot:\ndefault: https://example.com\ndescription: apiRoot as defined in clause 4.4 of 3GPP TS 29.501\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nmnpf-npstatus\n\npaths:\n/{gpsi}:\nget:\nsummary: Retrieves the Number Portability status of the UE\noperationId: GetNumberPortabilityStatus\ntags:\n- Number Portability Status (Document)\nparameters:\n- name: gpsi\nin: path\ndescription: GPSI of the UE\nrequired: true\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Gpsi'\nresponses:\n'200':\ndescription: Expected response to a valid request\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/NpStatusInfo'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\ndescription: GPSI Not Found\ncontent:\napplication/problem+json:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'\n'406':\n$ref: 'TS29571_CommonData.yaml#/components/responses/406'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\ndescription: Unexpected error\n\n\ncomponents:\nsecuritySchemes:\noAuth2ClientCredentials:\ntype: oauth2\nflows:\nclientCredentials:\ntokenUrl: '{nrfApiRoot}/oauth2/token'\nscopes:\nnmnpf-npstatus: Access to the nmnpf-npstatus API\nschemas:\n\n# COMPLEX TYPES:\n\nNpStatusInfo:\ndescription: Contains the Subscription Network\ntype: object\nrequired:\n- subscriptionNetwork\nproperties:\nsubscriptionNetwork:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PlmnId'\n\n# SIMPLE TYPES:\n\n\n\n# ENUMS:\n\n\n\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "B.1\tGeneral",
            "description": "This Annex lists withdrawn API versions of the APIs defined in the present specification. 3GPP TS 29.501 [5] clause 4.3.1.6 describes the withdrawal of API versions.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "B.2\tNmnpf_NPstatus API",
            "description": "The API versions listed in table B.2-1 are withdrawn for the Nmnpf_NPStatus API.\nTable B.2-1: Withdrawn API versions of the Nmnpf_NPStatus service\n\n\n\n\n",
            "summary": "",
            "tables": [
                {
                    "description": "Table B.2-1: Withdrawn API versions of the Nmnpf_NPStatus service",
                    "table number": 15,
                    "summary": "",
                    "name": ""
                },
                {
                    "description": "",
                    "table number": 16,
                    "summary": "",
                    "name": ""
                }
            ],
            "figures_meta_data": [],
            "subsections": []
        }
    ]
}