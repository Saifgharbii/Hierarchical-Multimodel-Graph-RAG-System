{
    "document_name": "26804-i10.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Report has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\nIn the present document, modal verbs have the following meanings:\nshall\t\tindicates a mandatory requirement to do something\nshall not\tindicates an interdiction (prohibition) to do something\nThe constructions \"shall\" and \"shall not\" are confined to the context of normative provisions, and do not appear in Technical Reports.\nThe constructions \"must\" and \"must not\" are not used as substitutes for \"shall\" and \"shall not\". Their use is avoided insofar as possible, and they are not used in a normative context except in a direct citation from an external, referenced, non-3GPP document, or so as to maintain continuity of style when extending or modifying the provisions of such a referenced document.\nshould\t\tindicates a recommendation to do something\nshould not\tindicates a recommendation not to do something\nmay\t\tindicates permission to do something\nneed not\tindicates permission not to do something\nThe construction \"may not\" is ambiguous and is not used in normative elements. The unambiguous constructions \"might not\" or \"shall not\" are used instead, depending upon the meaning intended.\ncan\t\tindicates that something is possible\ncannot\t\tindicates that something is impossible\nThe constructions \"can\" and \"cannot\" are not substitutes for \"may\" and \"need not\".\nwill\t\tindicates that something is certain or expected to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nwill not\t\tindicates that something is certain or expected not to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nmight\tindicates a likelihood that something will happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nmight not\tindicates a likelihood that something will not happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nIn addition:\nis\t(or any other verb in the indicative mood) indicates a statement of fact\nis not\t(or any other negative verb in the indicative mood) indicates a statement of fact\nThe constructions \"is\" and \"is not\" do not indicate requirements.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "This Technical Report identifies and evaluates a set of potential improvements and extensions, referred to as key topics. The key topics are\n-\tContent Preparation\n-\tTraffic Identification\n-\tAdditional / New transport protocols\n-\tUplink media streaming\n-\tBackground traffic\n-\tContent Aware Streaming\n-\tNetwork Event usage\n-\tPer-application-authorization\n-\tSupport for encrypted and high-value content\n-\tScalable distribution of unicast Live Services\n-\tNetwork Slicing Extensions for 5G Media Streaming\n-\t3GPP Service Handler and URLs\nFor each of the above key topics, the following objectives are identified:\n1.\tDocument the above key topics in more detail, in particular how they relate to the 5GMS Architecture and protocols.\n2.\tStudy collaboration scenarios between the 5G System and Application Provider for each of the key topics.\n3.\tBased on the 5GMS Architecture, develop one or more deployment architectures that address the key topics and the collaboration models.\n4.\tMap the key topics to basic functions and develop high-level call flows.\n5.\tIdentify the issues that need to be solved.\n6.\tProvide candidate solutions (including call flows) for each of the identified issues.\n7.\tCoordinate work with other 3GPP groups e.g. SA2, SA3, SA5, and others as needed.\n8.\tCoordinate work with external organizations such as DASH-IF, CTA WAVE, ISO/IEC JTC29 WG3 (MPEG Systems), or IETF, as needed.\n9.\tIdentify gaps and recommend potential normative work for stage-2 call flows and possibly stage-3.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\tAkamai Blog, \"A QUICk Introduction to HTTP/3\", April 2020,\n[3]\tFielding, R., Nottingham, M., and J. Reschke, \"HTTP/1.1\", Work in Progress, Internet-Draft, draft-ietf-httpbis-messaging-13, 14 December 2020, http://www.ietf.org/internet-drafts/draft-ietf-httpbis-messaging-13.txt\n[4]\tBelshe, M., Peon, R., and M. Thomson, Ed., \"Hypertext Transfer Protocol Version 2 (HTTP/2)\", RFC 7540, May 2015, https://www.rfc-editor.org/info/rfc7540\n[5]\tdraft-ietf-quic-http-34, \"Hypertext Transfer Protocol Version 3 (HTTP/3)\", February 2021\n[6]\tD. Bhat, A. Rizk, and M. Zink, \"Not so QUIC: A Performance Study of DASH over QUIC,\" NOSSDAV'17: Proceedings of the 27th Workshop on Network and Operating Systems Support for Digital Audio and VideoJune 2017 Pages 13–18 https://doi.org/10.1145/3083165.3083175\n[7]\tAWS: \"Achieving Great Video Quality Without Breaking the Bank\", Streaming Media June 2019,\n[8]\tNetflix, \"Optimized shot-based encodes: Now Streaming!\", Netflix Blog, May 2018, https://netflixtechblog.com/optimized-shot-based-encodes-now-streaming-4b9464204830\n[9]\tDASH-IF/DVB: \"Report on Low-Latency Live Service with DASH\", July 2017, available here:\n[10]\tDASH-IF: \"IOP Guidelines v5, Low-latency Modes for DASH\", available here:\n[11]\tISO/IEC 23009-1: \"Information technology — Dynamic adaptive streaming over HTTP (DASH) — Part 1: Media presentation description and segment formats\".\n[12]\tIETF RFC 8673: \"HTTP Random Access and Live Content\".\n[13]\t3GPP TR 26.939: \"Guidelines on the Framework for Live Uplink Streaming (FLUS)\".\n[14]\t3GPP TS 26.238: \"Uplink Streaming\".\n[15]\t3GPP TS 26.501: \"5G Media Streaming (5GMS); General description and architecture\".\n[16]\t3GPP TS 26.512: \"5G Media Streaming (5GMS); Protocols\".\n[17]\t\tISO/IEC 13818-1:2019: \"Information technology — Generic coding of moving pictures and associated audio information — Part 1: Systems\".\n[18]\tSCTE 35 2020: \"Digital Program Insertion Cueing Message\",\n[19]\tISO/IEC 23000-19:2020: \"Information technology — Multimedia application format (MPEG-A) —Part 19: Common media application format (CMAF) for segmented media\".\n[20]\tISO/IEC 23009-1:2019/DAMD1: \"Information technology — Dynamic adaptive streaming over HTTP (DASH) — Part 1: Media presentation description and segment formats — Amendment 1: CMAF support, events processing model and other extensions\".\n[21]\tVSF TR-06-01:2020, \"RIST Simple Profile\", https://vsf.tv/download/technical_recommendations/VSF_TR-06-1_2020_06_25.pdf\n[22]\tVSF TR-06-02: \"RIST Main Profile\",\n[23]\t3GPP TS 23.501: \"System architecture for the 5G System (5GS)\".\n[24]\t3GPP TS 23.502: \"Procedures for the 5G System (5GS)\".\n[25]\t3GPP TS 29.517: \"5G System; Application Function Event Exposure Service; Stage 3\".\n[26]\t3GPP TS 29.244: \"Interface between the Control Plane and the User Plane nodes; Stage 3\".\n[27]\tIETF RFC 6733: \"Diameter Base Protocol\".\n[28]\t3GPP TS 29.514: \"5G System; Policy and Charging Control over Rx reference point; Stage 3\".\n[29]\t\tIETF RFC 7657: \"Differentiated Services (Diffserv) and Real-Time Communication\", November 1995.\n[30]\tIETF RFC 3168: \"The Addition of Explicit Congestion Notification (ECN) to IP\", September 2001.\n[31]\tC. Krasic, M. Bishop, and A. Frindell, Ed., draft-ietf-quic-qpack-21, \"QPACK: Header Compression for HTTP/3\", Work in Progress, Internet-Draft, 2 February 2021.\n[32]\tIETF RFC 9000: \"QUIC: A UDP-Based Multiplexed and Secure Transport\", May 2021.\n[33]\tIETF RFC 9001: \"Using TLS to Secure QUIC\", May 2021.\n[34]\tIETF, RFC 9002: \"QUIC Loss Detection and Congestion Control\", May 2021.\n[35]\tIETF RFC 5681: \"TCP Congestion Control\".\n[36]\tM. Kuehlewind and B. Trammell, draft-ietf-quic-manageability-11, \"Manageability of the QUIC Transport Protocol\", Work in Progress, Internet-Draft, 30 June 2021.\n[37]\tN. Cardwell et. al. \"BBR Updates: Internal Deployment, Code, Draft Plans\", 9 March 2021, https://datatracker.ietf.org/meeting/110/materials/slides-110-iccrg-bbr-updates-00.pdf\n[38] \tETSI TS 103 799: \"Publicly Available Specification (PAS); DASH-IF Content Protection Information Exchange Format\".\n[39]\tISO/IEC JTC1/SC29/WG11/N19062 23090-8 FDIS: \"MPEG-I: Network-based Media Processing — Network-Based Media Processing Specification\".\n[40]\t3GPP TS 26.247: \"Transparent end-to-end Packet-switched Streaming Service (PSS); Progressive Download and Dynamic Adaptive Streaming over HTTP (3GP-DASH)\".[41]\t3GPP TS 23.503: \"Policy and charging control framework for the 5G System (5GS); Stage 2\".\n[42]\t3GPP TS 29.514: \"5G System; Policy Authorization Service; Stage 3\".\n[43]\t3GPP TS 29.522: \"5G System; Network Exposure Function Northbound APIs; Stage 3\".\n[44]\t3GPP TS 29.122: \"T8 reference point for Northbound APIs\".\n[45]\t3GPP TS 29.512: \"5G System; Session Management Policy Control Service; Stage 3\".\n[46]\t3GPP TS 26.803: \"5G Media Streaming (5GMS); Architecture extensions\".\n[47]\t3GPP TS 23.558: \"Architecture for enabling Edge Applications (EA)\".\n[48]\t3GPP TS 23.288: \"Architecture enhancements for 5G System (5GS) to support network data analytics services\".\n[49]\tTdoc S4-210723: \"Generic architecture for data collection and reporting\", submission from BBC, Dolby Laboratories Inc., LM Ericsson and Qualcomm Incorporated to SA4#114-e, May 19-28, 2021.\n[50]\tTdoc S2-2103267: \"Extension of Naf_EventExposure for observed service experience data collection from UEs\", CR from InterDigital to SA2#144e, Apr 12-16, 2021.\n[51]\t3GPP TS 26.114: \"IP Multimedia Subsystem (IMS); Multimedia telephony; Media handling and interaction\".\n[52]\tTdoc S2-2104496: \"Extension of Naf_EventExposure for observed service experience data collection from UEs\", CR from Qualcomm Incorporated to SA2#145e, May 17-28, 2021.\n[53]\t3GPP TS 26.118: \"Virtual Reality (VR) profiles for streaming applications\".\n[54]\t3GPP TS 26.346: \"Multimedia Broadcast/Multicast Service (MBMS); Protocols and codecs\".\n[55]\t3GPP TS 29.554: \"Background Data Transfer Policy Control Service; Stage 3\".\n[56]\t3GPP TS 28.530: \"Management and orchestration; Concepts, use cases and requirements\".\n[57]\t3GPP TS 28.531: \"Management and orchestration; Provisioning\".\n[58]\t3GPP TS 28.532: \"Management and orchestration; Generic management services\".\n[59]\t3GPP TS 28.533: \"Management and orchestration; Architecture framework\".\n[60]\t3GPP TS 28.540: \"Management and orchestration; 5G Network Resource Model (NRM); Stage 1\".\n[61]\t3GPP TS 28.541: \"Management and orchestration; 5G Network Resource Model (NRM); Stage 2 and stage 3\".\n[62]\t3GPP TS 28.542: \"Management and orchestration of networks and network slicing; 5G Core Network (5GC) Network Resource Model (NRM); Stage 1\".\n[63]\t3GPP TS 28.543: \"Management and orchestration of networks and network slicing; 5G Core Network (5GC) Network Resource Model (NRM); Stage 2 and stage 3\".\n[64]\t3GPP TS 28.545: \"Management and orchestration; Fault Supervision (FS)\".\n[65]\t3GPP TS 28.546: \"Management and orchestration of networks and network slicing; Fault Supervision (FS); Stage 2 and stage 3\".\n[66]\t3GPP TS 28.552: \"Management and orchestration; 5G performance measurements\".\n[67]\t3GPP TS 28.554: \"Management and orchestration; 5G end to end Key Performance Indicators (KPI)\".\n[68]\t3GPP TS 23.434: \" Service Enabler Architecture Layer for Verticals (SEAL); Functional architecture and information flows \".\n[69]\t3GPP TS 23.700-99: \" Study in Network slice capability exposure for application layer enablement (NSCALE)\".\n[70]\t3GPP TS 29.520: \" 5G System; Network Data Analytics Services; Stage 3\".\n[71]\t3GPP TR 23.700-40: \"Study on enhancement of network slicing; Phase 2\".\n[72]\t3GPP TS 26.531: “Data Collection and Reporting; General Description and Architecture”.\n[73]\t3GPP TR 26.802: \"Multicast Architecture Enhancement for 5G Media Streaming\".\n[74] \tIETF RFC 822: \"STANDARD FOR THE FORMAT OF ARPA INTERNET TEXT MESSAGES\", August 13, 1982.\n[75]\tIETF RFC 1521: \"MIME (Multipurpose Internet Mail Extensions)\", September 1993.\n[76]\tIETF RFC 2474: \"Definition of the Differentiated Services Field (DS Field) in the IPv4 and IPv6 Headers\".\n[77]\tIETF RFC 2475: \"An Architecture for Differentiated Services\".\n[78]\tIETF RFC 3246: \"An Expedited Forwarding PHB (Per-Hop Behavior)\".\n[79]\tIETF RFC 2597: \"Assured Forwarding PHB Group\".\n[80]\tS. Hurst, draft-hurst-quic-rtp-tunnelling: \"QRT: QUIC RTP Tunnelling\", Internet-Draft, Work in Progress.\n[81]\tJ. Ott and M. Engelbart, draft-engelbart-rtp-over-quic: \"RTP over QUIC\", Internet-Draft, Work in Progress.\n[82]\tSRT Alliance, “Secure Reliable Transport (SRT) Protocol”, https://github.com/Haivision/srt\n[83]\tM.P. Sharabayko and M.A. Sharabayko, draft-sharabayko-srt-over-quic-00 ,“Tunnelling SRT over QUIC”, Internet-Draft, Work in Progress, 28 July 2021.\n[84]\tRobin Marx, Luca Niccolini, Marten Seemann, draft-ietf-quic-qlog-main-schema-01, \"Main logging schema for qlog\", Internet-Draft, Work in Progress, 25 October 2021.\n[85]\tRobin Marx, Luca Niccolini, Marten Seemann, draft-ietf-quic-qlog-h3-events-00, \"HTTP/3 and QPACK event definitions for qlog\", Internet-Draft, Work in Progress, 10 June 2021.\n[86]\tRobin Marx, Luca Niccolini, Marten Seemann, draft-ietf-quic-qlog-quic-events-00, \"QUIC event definitions for qlog\", Internet-Draft, Work in Progress, 10 June 2021.\n[87]\tRoger Pantos and William May, Jr., \"HTTP Live Streaming\", RFC 8216, August 2017.\n[88]\t3GPP TR 26.925: \"Typical traffic characteristics of media services on 3GPP networks\".\n[89]\t3GPP TR 26.917: \"Multimedia Broadcast Multicast Services (MBMS) and Packet-switchedStreaming Service (PSS) enhancements to support television services\".\n[90]\t\t\"DASH-IF WebRTC-based Streaming\", https://dashif.org/news/webrtc/\n[91]\tIETF RFC 6749: \"The OAuth 2.0 Authorization Framework\".\n[92]\tIETF RFC 6750: \"The OAuth 2.0 Authorization Framework: Bearer Token Usage\".\n[93]\t3GPP TS 33.501: \"Security architecture and procedures for 5G System\".\n[94]\t3GPP TS 26.531: \"Data Collection and Reporting; General Description and Architecture\".\n[95]\t3GPP TS 26.532: \"Data Collection and Reporting; Protocols and Formats\".\n[96]\t3GPP TS 26.511: \"5G Media Streaming (5GMS); Profiles, codecs and formats\".\n[97]\tETSI TS 103 770: \"Digital Video Broadcasting (DVB); Service Discovery and Programme Metadata for DVB-I\".\n[98]\tAndroid Developer Documentation: \"Handling Android App Links\",\n[99]\t3GPP TS 26.347: \"Multimedia Broadcast/Multicast Service (MBMS); Application Programming Interface and URL\".\n[100]\tETSI TS 103 769: \"Digital Video Broadcasting (DVB); Adaptive media streaming over IP multicast\".\n[101]\t3GPP TS 23.247: \"Architectural enhancements for 5G multicast-broadcast services\".\n[102]\t3GPP TS 29.558: \"Enabling Edge Applications; Application Programming Interface (API) specification; Stage 3\".\n[103]\tIETF RFC 2045: \"Multipurpose Internet Mail Extensions Part One: Format of Internet Message Bodies\".\n[104]\tIETF RFC 3986: \"Uniform Resource Identifier (URI): Generic Syntax\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions of terms, symbols and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tTerms",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms given in 3GPP TR 21.905 [1] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in 3GPP TR 21.905 [1].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tSymbols",
                    "description": "",
                    "summary": "",
                    "text_content": "Void.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.3\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in 3GPP TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in 3GPP TR 21.905 [1].\nCDN\tContent Delivery Network\nDS\tDifferentiated Service\nEAS\tEdge Application Server\nEES\tEdge Enabler Server\nFAR\tForward Action Rule\nMAR\tMulti-Access Rule\nNRF\tNetwork Repository Function\nPDR\tPacket Detection Rule\nPFCP\tPacket Forwarding Control Protocol\nQER\tQoS Enforcement Rule\nQLOG\tQUIC Logging\nPHB\tPer-Hop Behaviour\nPFD\tPacket Flow Description\nSDF\tService Data Flow\nURL\tUniform Resource Locator\nURR\tUsage Reporting Rule\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\t5G Media Streaming",
            "description": "The 5G Media Streaming architecture is defined in TS 26.501 [15].\nProtocols and APIs are specified in TS 26.512 [16].\nProfiles, codecs and formats are provided in TS 26.511 [96].\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "5\tKey Topics",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tIntroduction",
                    "description": "",
                    "summary": "",
                    "text_content": "This clause introduces several key topics related to 5G Media Streaming.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.2\tContent Preparation",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.2.1\tOverview",
                            "text_content": "[TS 26.501 [15] includes the high-level concept of content preparation and/or modification within the 5G Media Streaming System. However, Content Preparation has not yet been defined in detail in TS 26.512 [16]. The extent of content preparation support (including. use- cases, functionalities and features, and resulting formats) needed in the existing 5G Media Streaming Architecture, and how these functions can be realized in with current 5GMS architecture are subject of this study.]\nContent preparation may be applied in the following scenarios:\n1.\tIn uplink streaming: on an uplinked stream, providing the resulting content to Application Provider.\n2.\tIn downlink streaming: on an input stream from an Application Provider, providing the resulting content for distribution.\n3.\tBetween uplink and downlink streaming: on an uplink stream, providing the resulting content for distribution.\nTwo aspects are of relevance for the discussion on Content Preparation:\n-\tUplink ingest content formats and protocols\n-\tContent preparation instructions\nOn uplink ingest formats, a survey of existing formats is needed to understand the available options. Examples include\n1)\tMPEG-2 Transport Stream [17] with SCTE metadata [18].\n2)\tCMAF content [19] with timed metadata tracks.\n3)\tCMAF content [19] with a manifest such as the MPD [20].\n4)\tReliable Internet Stream Transport (RIST) is an open source, open specification transport protocol designed for reliable transmission of video over lossy networks (including the internet) with low latency and high quality. It is currently under development under the Video Services Forum's \"RIST Activity Group.\" To date, two open specifications have been produced:\na.\t [21], first released in 2018, defines the basic ARQ (Automatic Repeat Query) technology used to recover lost packets. It has been updated in 2020 to include an optional \"RTT Echo\" message that streamlines the process of configuring packet buffers.\nb.\t [22], released in 2020, defines additional functions required for commercial applications, including stream encryption, sender/receiver authentication, in-band data tunneling, and bandwidth optimization.\n5)\tSecure Reliable Transport (SRT) is an open-source video transport protocol maintained by the SRT Alliance [82].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.2\tGap Analysis of 26.512",
                            "text_content": "TS 26.512 [16] defines a very limited set of features for content preparation:\n1.\tThe location for content preparation template provisioning.\n2.\tCRUD Operation for content preparation template.\nThe current specification neither defines the uplink ingest formats nor the content preparation instructions.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.3\tUse-cases",
                            "text_content": "\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "",
                                    "table number": 3,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.2.4\tCollaboration Scenarios",
                            "text_content": "In this collaboration, the 5GMSd Application Provider requests content preparation for its stream before distribution. Figure 5.2.4.1-1 shows such a scenario.\n\nFigure 5.2.4.1-1: Content preparation before downlink streaming\nIn this case:\n1.\tThe Application Provider defines the required content preparation and requests the 5GMSd AF to create the process using the Content Preparation Template (CPT) through M1d.\n2.\tThe 5GMSd AF configures the 5GMSd AS according to the media transformation(s) specified in the Content Preparation Template (M3d) and responds to the Application Provider (M1d).\n3.\tThe media is streamed from Application Provider to 5GMSd AS (M2d).\n4.\tThe content is transformed by 5GMSd AS according to the Content Preparation Template and provided for distributions (M4d).\n5.\tThe Application Provider may update, retrieve, or destroy the Content Preparation Template using M1d.\nEditor’s Note: How does DistributionConfiguration relate to CPT? Does the CPT define the initial/generic formats (such as HLS and DASH) and DistributionConfiguration defines a subset of it for distribution?\nIn this collaboration, the 5GMSu Application Provider or 5GMSu Aware Application requests content preparation for the uplink ingest stream and delivery to 5GMSu Application Provider. Figure 5.2.4.2-1 shows such a scenario.\n\nFigure 5.2.4.2-1: Content preparation after uplink ingest streaming\nIn this case:\n1.\tThe Application Provider defines the required content preparation and requests the 5GMSu AF to create the process using the Content Preparation Template (CPT) through M1u.\n2.\tThe 5GMSu AF configures the 5GMSu AS according to the media transformation(s) specified in the Content Preparation Template (M3u) and responds to the Application Provider (M1u).\n3.\tThe media is streamed from 5GMSu Client to 5GMSu AS (M4u).\n4.\tThe content is transformed by 5GMSu AS according to the Content Preparation Template and egested to the Application Provider (M2u).\n5.\tThe Application Provider/Application may update, retrieve, or destroy the Content Preparation Template using M1u/M5u.\nIn this collaboration, the 5GMSu Application Provider requests content preparation for the uplink ingest stream from one UE and before downlink streaming to other UEs. Figure 5.2.4.3-1 shows such a scenario.\n\nFigure 5.2.4.3-1: Content preparation after uplink ingest streaming\nIn this case:\n1.\tThe Application Provider defines the required content preparation and requests the 5GMSd AF to create the process using the Content Preparation Template (CPT) through M1d.\n2.\tThe 5GMSd AF configures the 5GMSd AS according to the media transformation(s) specified in the Content Preparation Template (M3d) and responds to the Application Provider (M1d).\n3.\tThe 5GMSu AF configures the 5GMSu AS according to the media transformation(s) specified in the Content Preparation Template (M3u) and responds to the Application Provider (M1u).\n4.\tThe content is transferred to 5GMSd AS and transformed according to the Content Preparation Template (I2). I2 is an implementation specific interface and is considered out of scope of this document.\n5.\tThe content is streamed to the 5GSd Client from 5GMSd AS (M4d).\n6.\tThe Application Provider/Application may update, retrieve, or destroy the Content Preparation Template (M1d).\nNOTE 1: \tIn the above steps, the I1 interface is not used for the simplicity. In section 5.6, two alternative call flows are presented that use I1 interface. I1 is an implementation specific interface and is considered out of scope of this document.\nNOTE 2: \tIn the deployment of this collaboration scenario, 5GMSu AS and 5GMSd AS may be co-located and therefore the I2 interface is not exposed. Similarly, 5GMSu AF and 5GMSd AF may be co-located.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.5\tDeployment Architectures",
                            "text_content": "Editor’s Note: Based on the 5GMS Architecture, develop one or more deployment architectures that address the key topics and the collaboration models.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.6\tMapping to 5G Media Streaming and High-Level Call Flows",
                            "text_content": "The call flow is shown in Figure 5.2.6.1-1.\n\nFigure 5.2.6.1-1: High-level call flow for content preparation before downlink streaming\nSteps:\n1.\tThe 5GMSd Application Provider creates a Provisioning Session with the 5GMSd AF (M1d).\n2.\tThe 5GMSd Application Provider provisions the 5GMSd AF with one or more Content Preparation Templates defining instructions for content preparation, as well as the required output format(s) (M1d).\n3.\tThe 5GMSd AF, based on the received Content Preparation Templates, requests the 5GMSd AS to verify availability of resources for content preparation (M3d, procedures not specified):\na.\tSyntax checking of Content Preparation Template(s).\nb.\tSemantic validation of Content Preparation Template(s).\nc.\tBasic assessment of 5GMSd AS resource availability implied by the Content Preparation Template(s).\n4.\tThe 5GMSd AF acknowledges to the 5GMSd Application Provider the successful creation of Content Preparation Templates (M1d).\n5.\tThe 5GMSd Application Provider provisions the 5GMSD AF with a Content Hosting Configuration that references one or more Content Preparation Templates created in step 2 above (M1d).\n6.\tThe 5GMSd AF, based on the received Content Hosting Configuration, requests the 5GMSd AS to confirm the availability of distribution resources (M3d, procedures not specified).\n7.\tThe 5GMSd AF acknowledges to the 5GMSd Application Provider the successful creation of the Content Hosting Configuration (M1d).\n8.\tThe 5GMSd Application Provider feeds the content to the 5GMSd AS (M2d).\n9.\tThe 5GMSd Application Provider optionally provides the service access information to the 5GMSd-Aware Application (M8d, out of scope)\nIf needed, steps 10–14 may optionally be executed:\n10.\tThe 5GMSd-Aware Application requests the 5GMSd Application Provider to use the service (M8d).\n11.\tThe 5GMSd Application Provider provides the 5GMSd AF with updated Content Preparation Template(s) (M1d).\n12.\tThe 5GMSd AF, based on the modified Content Preparation Template(s), requests an updated confirmation of downlink streaming resource availability (M3d).\n13.\tThe 5GMSd AF acknowledges to the 5GMSd Application Provider that the Content Preparation Template(s) have been successfully updated (M1d).\n14.\tThe 5GMSd Application Provider acknowledges to the 5GMSd AF the use of the service (M8d).\nThe rest of the call flow concerns the 5GMS downlink streaming process:\n15. The 5GMS-Aware Application request the 5GMSd Client to start an uplink streaming session (M6d/M7d).\n16.\tIf Service Access Information was not provided in step 9, the 5GMSd Client requests this information from the 5GSMd AF (M5d).\n17.\t The 5GMSd Client requests start of the downlink streaming session from the 5GSMd AF (M5d).\n18.\tThe 5GMSd AF requests instantiation of the content preparation process (M3d).\n19.\tThe 5GMSd AS instantiates the media preparation process if it (or any of its parts) are not already running.\n20.\tThe 5GMSd AF acknowledges the instantiation of the content preparation process (M3d).\nSteps 18–20 are not needed if another user has already requested the content and therefore the content preparation process is already running on the 5GMS AS, or if this process was instantiated in earlier steps of the workflow (e.g. in step 3 or step 12).\nOne use-case for steps 18–20 is when a user requests a content format that is not included in the previously instantiated content preparation process. In this case, 5GMSd AS may add new processes to the content preparation processing to provide the requested content format.\n21. The downlink media streaming starts (M4d).\nFinally:\n22.\tThe 5GMSd AS releases its resources after observing a period of interactivity.\nNOTE:\tStep 22 is implementation-dependent.\nThe call flow is shown in Figure 5.2.6.2-1.\n\nFigure 5.2.6.2-1: Call flow for content preparation after uplink streaming\nSteps:\n1.\tThe 5GMSu Application Provider creates a Provisioning Session with the 5GMSu AF (M1u).\n2.\tThe 5GMSu Application Provider creates one or more Content Preparation Templates defining instructions for content preparation, as well as the required output format(s) (M1u).\n3.\tThe 5GMSu AF, based on the received Content Preparation Templates requests the 5GMSu AS to verify availability of content preparation and contribution resources, e.g. to allocate 5GMSu content ingest and contribution egest resources. (M3u, procedures not specified):\na.\tSyntax checking of Content Preparation Template.\nb.\tSemantic validation of Content Preparation Template.\nc.\tBasic assessment of 5GMSu AS resource availability implied by the Content Preparation Template.\n4.\tThe 5GMSu AF acknowledges to the 5GMSu Application Provider the successful creation of Content Preparation Templates, as well as successful provisioning of content preparation (M1u).\n5.\tThe 5GMSu Application Provider optionally provides the service access information to the 5GMSu-Aware Application (M8u, out of scope)\nIf needed, steps 6–10 may optionally be executed.\n6.\tThe 5GMSu-Aware Application requests the 5GMSu Application Provider to support impending reception of uplink streaming content (M8u)\n7.\tThe 5GMSu Application Provider provides the 5GMSu AF with updated Content Preparation Template(s) (M1u).\n8.\tThe 5GMSu AF, based on the modified Content Preparation Templates, requests an updated confirmation of uplink streaming resource availability (M3u).\n9.\tThe 5GMSu AF acknowledges to the 5GMSu Application Provider that the Content Preparation Templates have been successfully updated (M1u).\n10.\tThe 5GMSu Application Provider acknowledges to the 5GMSu AF the use of the service (M8u).\nThe rest of the call flow concerns the 5GMS uplink streaming process:\n11.\tThe 5GMSu-Aware Application request the 5GMSu Client to start an uplink streaming session (M6/7u).\n12.\tIf Service Access Information was not provided in Step 5, the 5GMSu Client requests this information from the 5GSMu AF (M5u).\n13.\tThe 5GMSu Client requests start of the uplink streaming session from the 5GSMu AF (M5u).\nNOTE 1:\tAlthough the above step is defined by the stage 2 design in TS 26.501 [15], it is not realised in Release 16 by stage 3 procedures defined in TS 26.512 [16].\n14.\tThe 5GMSd AF requests instantiation of the content preparation process (M3u).\n15.\tThe 5GMSd AS instantiate the media preparation process if it has not started before (M3u).\n16.\tThe 5GMSd AF acknowledges the instantiation of the content preparation process (M3u).\nSteps 14–16 may not be needed if the content preparation process has been instantiated during earlier steps in the call flow (such as between 3 and 8).\n17.\tUplink media streaming from the 5GMSu Client to the 5GMSu AS commences (M4u).\n18.\tMedia streaming egest from the 5GMSu AS to the 5GMSu Application Provider (M2u) commences.\nFinally:\n19.\tThe 5GMSu AS releases its resources after observing a period of interactivity. Note that this is implementation dependent.\nNOTE 2:\tThe 5GMSu Application Provider also sets up the M2u configuration during the provisioning section. The details of such set-up are not shown in the above call flow.\nEditor’s Note: The M2u configuration process is the subject of the uplink streaming topic of this study.\nFigure 5.2.6.3-1 shows the call flow for this scenario.\n\nFigure 5.2.6.3-1: High-level call flow for content preparation\nbetween uplink streaming and downlink streaming\nSteps:\n1.\tIdentical to steps 1–7 in 5.2.6.1-1.\n2.\tThe 5GMS Application Provider creates a Provisioning Session with the 5GMSu AF (M1u).\n3.\tThe 5GMSu AF requests the 5GMSu AS to confirm the uplink resources availability. (M3u, procedures not specified).\n4.\tThe 5GMSu AF acknowledges to the 5GMSu Application Provider of the successful provisioning (M1u).\n5.\tThe 5GMS Application optionally provides the service access information to the 5GMSu-Aware Application (M8u, out of scope).\n6. The 5GMS-Aware Application request the 5GMSu Client to start an uplink streaming session (M6/7u).\n7.\tIf Service Access Information was not provided in step 5, the 5GMSu Client requests this information from the 5GSMu AF (M5u).\n8.\t The 5GMSu Client requests start of the uplink streaming session from the 5GSMu AF (M5u).\n9. The uplink media streaming starts (M4u).\n10.\tThe 5GMSu AS streams the content to the 5GMSd AS (I2, not specified).\n11.\tThe 5GMS Application Provider optionally provides the service access information to the 5GMSd-Aware Application (M8d, out of scope).\n12.\tIdentical to steps 10–14 in 5.2.6.1-1.\n13.\tIdentical to steps 15–21 in 5.2.6.1-1.\n14.\tThe 5GMSu AS releases its resources after observing a period of interactivity.\nNOTE 1:\tStep 14 is implementation-dependent.\n15.\tThe 5GMSd AS releases its resources after observing a period of interactivity.\nNOTE 2:\tStep 15 is implementation-dependent.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.7\tPotential open issues",
                            "text_content": "Open issue 1: Content Preparation Template information\nTS 26.512 [16] only mentions that the format of the Content Preparation Template is identified by its MIME type. At least one format needs to be defined for the instruction in Content Preparation Template for common services such as multi-rate streaming.\nOpen issue 2: Support of other protocols\nThe current specification only supports HTTP pull and DASH-IF ingest. Other protocols may need to be added.\nOpen issue 3: Address translation for complex pull requests\nFigure 5.2.7.2-1 shows an example in which the content preparation takes segments n and n+1 from the upstream 5GMSd Application Provider and combines them into one segment with double duration for delivery to the 5GMSd Client. The goal could be to achieve higher compression efficiency for distribution.\n\nFigure 5.2.7.2-1: An example of a media distribution by pull\nSteps:\n1.\tThe 5GMSd Client requests a media segment http://cdn.com/segment123.mp4 through M4d.\n2.\tThe requested URL is mapped in the Content Hosting distribution configuration  (“cdn.com” => “originprovider.com/video/” and transformation of request URL using the rule {n} => {n, n+1}). Two separate requests are made via M2d to the 5GMSd Application Provider for the following media segments:\n-\thttp://originprovider.com/video/segment246.mp4\n-\thttp://originprovider.com/video/segment247.mp4\n3.\tThe 5GMSd Application Provider provides the two requested media segments to the Content Preparation subfunction, which in turn merges the two segments into one, delivers the output segment to the Cache.\n4.\tThe Cache subfunction delivers the merged media segment to the UE via an M4d response.\nNOTE:\tIt is assumed that the initialization segment is available for initialization of the decoder in the content preparation module.\nTable 7.6.3.1 1 in TS 26.512 [16] defines the content hosting configuration resource. Each Content Hosting Configuration may include one or more Distribution Configurations, each one with an optional Content Preparation Template. However, the Content Hosting Configuration is currently allowed to include only one Ingest Configuration.\nThe Ingest Configuration defines the input format for content preparation. Currently, two ingest protocols are specified in clause 8.2 of [16]: HTTP pull-based ingest and DASH-IF push-based. In the case of HTTP pull, if a request is received in M4d that can’t be satisfied, an HTTP pull request is made through M2. The PathRewriteRules currently defined in clause 7.6.3 of [16] do not address step 2 of the above example (i.e. transforming one request into two different requests).\nIn addition of the above issues of collaboration scenario 1, the following issues may be considered.\nIn this case, the content is delivered to the 5GMSu Application Provider through M2u.\nOpen issue 4: Egest protocols\nTS 26.512 [16] Table 8.1-1 defines the ingest protocols at M2d. But the egest protocols for M2u are not defined. One possibility is use already defined ingest protocols also as possible egest protocols. However, it must be investigated whether the current definitions of these protocols are adequate for egest.\nEditor’s Note: We recommend addressing this issue in uplink streaming topic of this study.\nOpen issue 5: Egest Configuration\nTS 26.512 [16] Content Hosting Configuration resource defines an Ingest Configuration. It is not clear whether the same resource can be used for Egest configuration and whether the parameters are adequate.\nEditor’s Note: We recommend addressing this issue in uplink streaming topic of this study.\nSince both uplink and downlink is used, the following issues should be considered.\nOpen issue 6: Signalling the connection between the uplink and downlink\nAssuming the previous issues are addressed, then the Content Hosting Configuration resource for uplink and downlink would be separately used in M1u and M1d. The uplink Content Hosting Configuration’s egest configuration should be aligned with the downlink Content Hosting Configuration’s ingest configuration as is shown in the following figure.\nThe following issues must be addressed:\n1.\tIs the protocol left to the network operator and only direct connection between two Application Servers signalled?\n2.\tIs any (optional) standard protocol needed for the connection? If so, which protocols?\n3.\tAre the current Ingest Configuration’s (and its counterpart for Egest) parameters adequate for setting up the connection between uplink and downlink?\n4.\tDo the connection configuration and 5GMS Application Server’s addresses need to be hidden from the 5GMS Application Provider?\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.8\tCandidate Solutions",
                            "text_content": "The Content Preparation Template must define the following parameters:\n1.\tThe address/location of the input CMAF segments.\n2.\tOutput CMAF switching set configuration:\na.\tOutput manifest parameters: The characteristics that are typically described in a manifest such as an MPEG-DASH MPD [11]. While these parameters are per track, they can be described once if one or more of them are common across tracks. Examples:\ni.\tPackaging parameters: Container profile, codec/profile/level, bit rate, container profiles, maximum SAP period, start with SAP.\nii.\tVideo parameters: Width, height, sample aspect ratio, frame rate.\niii.\tAudio parameters: sampling rate, audio channel configuration.\nb.\tInternal encoding parameters: The parameters used for encoding each track that are not presented in the output manifest, such as bit rate control, motion search area, and algorithm, CBR/VBR/Capped VBR encoding, use of specific quality metrics.\ni.\tCommon encoding parameters (usually common in a codec/profile/level).\nii.\tVendor-defined (implementation-specific) parameters.\nIn this case, the characteristics of the input CMAF track can be described by a DASH MPD manifest in order to correctly initialise the media transcoder in the Content Preparation subfunction of the 5GMS AS. The manifest may include information such as codec/profile/level, as well as general characteristics of the media, such as maximum segment duration, video width, height and frame rate, the existence of any SEI messages and other metadata, the existence of any events schemes, as well as the location of each segment in the input CMAF track. In the case of uplink media streaming, where HTTP pull is used to egest the transcoded segments via M2u, the manifest can even optionally define the locations of CMAF segments on the 5GMSu AS.\nA new document format can be used for describing the input CMAF segments. The advantage of such a solution is when the same format is used for describing the output CMAF formats.\nIn this approach, a standard manifest format is used for describing the output manifest parameters, but it is extended to also carry the internal encoding parameters (both common and vendor-defined).\nAn example is to use MPEG-DASH MPD format and add descriptors to the adaptation set and/or representations for the internal encoding parameters. Two classes of descriptors can be added:\n1.\tThe common encoding descriptor per codec, carrying common parameters.\n2.\tVendor-specific descriptors, carrying vendor-defined parameters.\nSince the MPD essential and supplemental descriptor syntax allows different scheme URIs to be defined, both of the above features can be expressed using the same descriptor data type.\nIn this approach, a standard manifest format is used to describe the output manifest parameters and a separate document is used to describe the internal encoding parameters.\nAn example is the following elements:\n1.\tMPEG-DASH MPD format for output manifest parameters.\n2.\tA JSON document containing an array of objects that each include a DASH Representation identifier referencing a Representation in the MPD. Each object also includes encoding parameters for the Representation. The common encoding parameters may be extended with vendor-specific parameters inside a child object tagged with a URI that uniquely identifies the vendor.\nFor example, the MPD in Listing 5.2.8.2.4-1 below has two representations: R1 and R2. (For simplicity the adaptation set is not shown.) The internal encoding parameters document in Listing 5.2.8.4.-2 has a JSON array containing two elements. Each element refers to one DASH Representation in the MPD by its id attribute value. Each array element includes the encoding parameters for the corresponding Representation. The second element includes a vendor-specific encoding parameter that is signaled using the vendor URN. The other items in that object are defined by the vendor.\nListing 5.2.8.2.4-1: MPEG-DASH MPD\n\nListing 5.2.8.2.4-2: Supplementary encoding parameters document in JSON format\n\nIn this approach, a new document format is defined to describe both the manifest output parameters and the internal encoding parameters.\nAn example of such a solution would be a JSON document containing an array of objects  that each include the following information:\n1.\tOutput manifest parameters.\n2.\tCommon internal encoding parameters.\n3.\tVendor-specific internal encoding parameters tagged with the vendor’s identifier (such as a URI).\nAnother alternative would be to use the DASH Industry Forum’s Content Protection Information Exchange Format (CPIX) [38] and possibly extend it to carry additional parameters that are needed.\nSince both input, outputs and encoding information need to be provided in the Content Preparation Template, the following solutions are possible for the overall template by combining the candidate solutions described in clause 5.2.8.2 above:\n1.\tSingle MPD:\na.\tOne adaptation set with one input representation describing the input according to 5.2.8.2.1\nb.\tOne adaptation set with multiple input representation describing the output tracks according to 5.2.8.2.3\n2.\tA document consisting of two MPDs, with possibly a supplementary document:\na.\tOne MPD describing the input according to 5.2.8.2.1 and\nb.\tOne of the following:\ni.\tOne MPD describing the outputs and encoding format according to 5.2.8.2.3, or\nii.\tOne MPD describing the outputs and one document describing the encoding parameters according to 5.2.8.2.4.\n3.\tSingle JSON document:\na.\tOne item describing the input representation according to 5.2.8.2.2, and\nb.\tAn array of objects according to 5.2.8.2.5, each of which describes:\ni.\tOne output.\nii.\tThe encoding parameter for that output.\nThe NBMP Workflow Description Document (WDD) [39] can describe the entire workflow. In this use case, the WDD describes the input format, as well as the array of tasks/function instances, each of which defines the CMAF output track as well as the encoding parameters for that track, as is shown in the following figure:\n\nFigure 5.2.8-1: Using NBMP WDD to describe CMAF content preparation\nThe NBMP WDD in this case describes the input CMAF as the input of workflow, and the function, configurations, and output of each task. Since many features of the NBMP specification are not used in this specific workflow, the WDD features can be profiled to a suitable subset of descriptors defined by NBMP in [39].\nThe NBMP specification allows so-called function templates to be defined. One way to simplify the support for NBMP by 5GMSd AS would therefore be to define a function template for each Content Preparation Use Case. For example, the 5GMS CMAF Content Preparation function template could define (among other things):\n1.\tInput CMAF media profile using explicit description: MPEG-DASH MPD or HLS m3u8 playlist.\n2.\tThe push/pull protocols for ingesting CMAF content at M2d.\n3.\tThe required CMAF output formats.\n4.\tThe transcoder’s common and vendor-specific configuration parameters\n5.\tMultiple codec output.\n6.\tReporting, monitoring and notification parameters for each transcoding function.\nAnother advantage of the NBMP WDD format is that it can be used to describe other Content Preparation use cases and therefore one single format may be able to address several applications.\nIn this approach:\n1.\tA function reference template is created for the CMAF content preparation\n2.\tA profile of NBMP spec is defined to simplify the NBMP Workflow requirements.\nOpen issue 3 of 5.2.7.1 provide a gap in address translation. There are three possibilities for addressing this gap:\n1.\tKeep PathRewriteRules as is, and therefore exclude content preparation cases with more than one input and/or with more complex translation to be used with push protocol(s) only.\n2.\tExtend the current request URL transformation capabilities of the 5GMSd Content Hosting feature.\n3.\tKeep PathRewriteRules as is and include an additional (and more sophisticated) address translation function as a part of the Content Preparation subfunction of the 5GMSd AS.\nFigure 5.2.8.5-1 shows the architecture for the third option above.\n\nFigure 5.2.8.5-1: A candidate solution for the example of media distribution by pull\nSteps:\n1. The 5GMSd Client requests a media segment  through M4d.\n2. The requested URL is mapped according to the PathRewriteRules in the Content Hosting distribution configuration and provided to the address translator of the Content Preparation module.\n3. The address translator module transforms the received request into two separate requests via M2d to the 5GMSd Application Provider for the following media segments:\n-\n-\n4.\tThe 5GMSd Application Provider provides the two requested media segments to the Content Preparation subfunction, which in turn merges the two segments into one, delivers the output segment to the Cache.\n5.\tThe Cache subfunction delivers the merged media segment to the UE via an M4d response.\nNOTE:\tIt is assumed that the initialization segment is available for initialization of the decoder in the content preparation module.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Listing 5.2.8.2.4-1: MPEG-DASH MPD",
                                    "table number": 4,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Listing 5.2.8.2.4-2: Supplementary encoding parameters document in JSON format",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.2.9\tConclusion and recommendations",
                            "text_content": "This study explored three deployment scenarios for content preparation:\n1)\tcontent preparation before downlink distribution,\n2)\tcontent preparation after uplink streaming, and\n3)\tcontent preparation between uplink streaming and downlink distribution.\nThe call flows for all deployment scenarios are defined along with the gap analysis of TS 26.512 in addressing those scenarios.\nAs this study shows, the use of the content preparation template is not explained adequately in TS 26.501. Furthermore, TS 26.512 needs several extensions to make the use content preparation template interoperable in 5GMSA.\nThe following extensions are recommended:\n-\tInclusion of content preparation deployment scenarios and associated call flows\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.3\tTraffic Identification",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.3.1\tDescription",
                            "text_content": "For different features like usage of QoS or different charging rules within the 5G Media Streaming Architecture, it is necessary for the 5G System to identify the traffic flows. The increased usage of transport encryption (e.g. HTTPS) increases the difficulty of detecting the packets for certain application flows. Existing detection methods, such as using “significant parts of the URL to be matched” (contained in a Packet Flow Description, see below), are impractical for HTTPS traffic, since the URL is carried in the encrypted payload.\nMultimedia streaming applications might not be able to uniquely identify the 5-tuple of the streaming session, since the 5-tuples are often changing. This is due to factors such as load balancing, CDN distribution, multiple concurrent requests for different types of resources, etc. This study will address how to properly configure the 5G System to enable efficient detection of application flows (service data flows) e.g. for event reporting, and QoS profile usage, etc.\nNote that the TS 23.50x specifications use different terminology from the TS 29.xxx specifications. Furthermore, TS 23.503 [41] uses slightly different terms than TS 23.501 [23] and TS 23.502 [24]. The two common terms are defined in TS 23.503:\n-\tPacket flow: A specific user data flow from and/or to the UE.\n-\tService data flow: An aggregate set of packet flows carried through the UPF that matches a service data flow template.\nThe terms traffic detection [23] and application detection [23] refer to the process of finding matching service data flows among all packet flows. This logic is defined in TS 23.503 as an application detection filter.\nThe procedures in TS 23.502 use the term flow description, which is only a subset of an IP Packet Filter Set (as defined in TS 23.501).\nFigure 5.3.1-1 depicts the chain of functions (taken from TS 29.244 [26], Figure 5.2.1-1) within an UPF.\nThe figure depicts the packet processing flow in the Up function of the 5G network, specifically in the context of TS 29.244 [26]. The flow is shown in Figure 5.3.1-1, illustrating the steps involved in the Up function, which is responsible for transmitting the data from the source to the destination. The figure includes key components such as the source, the Up function, the Up function controller, and the destination. The flow is depicted in a step-by-step manner, with each step highlighted in red, emphasizing the importance of each step in the process. The figure also includes a legend to help understand the different components and their functions. Overall, the figure provides a clear and concise representation of the packet processing flow in the 5G network.\nFigure 5.3.1-1: Packet processing flow in the UP function (Figure 5.2.1-1 from TS 29.244 [26])\nThe steps are as follows:\n1.\tThe UPF always first looks up the Packet Forwarding Control Protocol (PFCP) session context to which a packet belongs. The PFCP session context is an individual PDU session or a standalone PFCP session not tied to any PDU session.\n2.\tThen there are so-called Packet Detection Rules (PDR), which implement traffic detection of the service data flows with respect to different conditions.\nNOTE:\tA PDR is direction specific. Thus, an Uplink (UL) PDR and a Downlink (DL) PDR are needed to detect a bidirectional Service Data Flow.\n3.\tBased on the PDR result, the next rules are executed, namely Multi-Access Rule (MAR), Forward Action Rule (FAR), QoS Enforcement Rule (QER), and Usage Reporting Rule (URR).\nNOTE:\tOnly the Forward Action Rule (FAR) is mandatory. The QoS Enforcement Rule (QER) is only present for QoS Flows. The Usage Reporting Rule (URR) is only available when traffic volume measurements (e.g. for charging) are needed.\nThe Packet Detection Rule (PDR) is based on Service Data Flow Templates, which contain one or more Service Data Flow (SDF) Filters or an Application Identifier. An Application Identifier refers to one or more Packet Flow Descriptions (PFDs).\nA Service Data Flow (SDF) Filter contains for IP PDU Sessions a single IP Packet filter, i.e. any combination of\n-\tSource/destination IP address or IPv6 prefix.\n-\tSource / destination port number.\n-\tProtocol ID of the protocol above IP/Next header type.\n-\tType of Service (ToS) (IPv4) or Traffic class (IPv6) and Mask.\n-\tFlow Label (IPv6).\n-\tSecurity parameter index.\n-\tPacket Filter direction.\nA PFD includes a PFD ID; and one or more of the following:\n-\t3-tuple(s) comprising protocol, server-side IP address and port number.\n-\tthe significant parts of the URL to be matched, e.g. host name.\n-\ta domain name matching criterion and information about applicable protocol(s).\nThe application detection filter can be configured in the SMF and the SMF then provides it in the Service Data Flow Template to the UPF. Alternatively, the Service Data Flow Template for traffic handling in the UPF is received from the dynamic PCC Rule.\nBesides, the Management of Packet Flow Descriptions enables the UPF to perform accurate application detection when PFD(s) are provided by an Application Service Provider (ASP) and then to apply enforcement actions as instructed in a PCC Rule.\nThe operator is able to configure pre-defined PCC Rules in the SMF or dynamic PCC Rules in the PCF. A PCC rule includes either a list of Service Data Flow filters or an application identifier for Service Data Flow detection.  The PCC rule further includes charging control information, i.e. charging key and optionally a Sponsor identifier or an ASP identifier or both.\nThe application identifier references one or more PFDs, which are managed using the PFD Management API. Depending on the service level agreements between the operator and the Application Server Provider, it may be possible for the ASP to provide to the SMF individual PFDs or the full set of PFDs for each application identifier maintained by the ASP via the PFD Management service in the NEF (PFDF). The PFDs become part of the application detection filters in the SMF/UPF and are thereafter used as part of the logic to detect traffic generated by an application. The ASP may remove or modify some or all of the PFDs which have been provided previously for one or more application identifiers. The SMF may report the application stop to the PCF for an application instance identifier as defined in clause 5.8.2.8.4 of TS 23.501 [5] if the removed/modified PFD in SMF/UPF would result in an inability to detect traffic for that application instance.\nThe ASP manages (i.e. provisions, updates, deletes) the PFDs through the NEF (PFDF). The PFD(s) are transferred to the SMF through the NEF (PFDF). The PFDF is a logical functionality in the NEF which receives PFD(s) from the ASP through the NEF, stores the PFD(s) in the UDR and provides the PFD(s) to the SMF(s) either on the request from ASP PFD management through NEF (PFDF) (push mode) or on the request from SMF (pull mode). Finally, the PFDF functionality is a service provided by the NEF.\nThe ASP may provide/update/remove PFDs with an allowed delay to the NEF (PFDF). Upon reception of the request from the ASP, the NEF (PFDF) checks if the ASP is authorized to provide/update/remove those PFD(s) and request the allowed delay. The NEF (PFDF) may be configured with a minimum allowed delay based on SLA to authorize the allowed delay provided by the ASP. When both the requesting ASP and the requested allowed delay are successfully authorized, the NEF (PFDF) translates each external Application Identifier to the corresponding Application Identifier known in the core network. The NEF (PFDF) stores the PDF(s) into the UDR.\nThe Application Identifier is simply an index to a set of application detection rules configured in the UPF. It is an identifier that can be mapped to a specific application traffic detection rule.\nThe procedure is depicted Figure 5.3.1-2 below:\nThe figure depicts a 5G network with various components such as base stations (gNB), user equipment (UE), and scatterers. The diagram illustrates the signal propagation in a 5G network, highlighting the multi-path signal path and beamforming techniques to mitigate interference. The fiber-optic backbone architecture is shown, with core switches, optical line terminals (OLTs), and distributed nodes. Redundancy paths are depicted in dashed lines, ensuring failover reliability. The layered design aligns with SDN principles.\nFigure 5.3.1-2:\nThe PFD (Packet Flow Description) is a set of information enabling the detection of application traffic.\nEach PFD may be identified by a PFD ID. A PFD ID is unique in the scope of a particular Application Identifier. Conditions for when a PFD ID is included in the PFD are described in TS 29.551 [6]. There may be different PFD types associated with an Application Identifier.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.3.2\tCollaboration Scenarios",
                            "text_content": "The 5GMSd Application Provider negotiates with the MNO an SLA to provide differentiated treatment, including network QoS and charging for its 5GMSd-Aware Application. Depending on the QoS needs and the connectivity realization between the MNO network and the Data Network hosting the 5GMS function, additional transport-level arrangements need to be considered. The SLA and transport-level arrangements are outside the scope of 3GPP. The Application Provider provides the necessary information to the MNO to detect the traffic, to ensure its correct and exclusive identification. The MNO detects the traffic correctly and applies the agreed traffic treatment.\nDue to privacy concerns, the content hosting is provided by the Application Provider in an external Data Network. However, the 5GMSd Application Provider leverages the network features either via a 5GMSd AF in the external Data Network (Figure 5.9.2-1) or via a 5GMSd AF in the trusted Data Network (Figure 5.9.2-2).\nFigure 5.9.2-1 illustrates Collaboration 1 (Collaboration 3 of TS 26.501), a collaboration protocol used in the telecommunications industry. This figure provides a visual representation of the protocol's structure and components, including the sender, receiver, and the communication channel. The figure demonstrates the use of the TS 26.501 standard, which is a set of rules and guidelines for collaboration in telecommunications networks. The collaboration protocol is crucial for ensuring efficient and reliable communication in the telecommunications industry.\nFigure 5.9.2-1: Collaboration 1 (Collaboration 3 of TS 26.501)\nFigure 5.9.2-2 illustrates Collaboration 2 (Collaboration 4 of TS 26.501), a collaboration protocol used in the telecommunications industry. This figure depicts a network topology with nodes labeled as A, B, C, D, E, and F. Nodes A, B, and C are labeled as the source nodes, while nodes D, E, and F are labeled as the destination nodes. Nodes A, B, and C are connected to nodes D, E, and F, forming a network. Nodes A, B, and C are connected to nodes D, E, and F, forming a network. Nodes A, B, and C are connected to nodes D, E, and F, forming a network. Nodes A, B, and C are connected to nodes D, E, and F, forming a network. Nodes A, B, and C are connected to nodes D, E, and F, forming a network. Nodes A, B, and C are connected to nodes D, E, and F, forming a network. Nodes A, B, and C are connected to nodes D, E, and F, forming a network. Nodes A, B, and C are connected to nodes D,\nFigure 5.9.2-2: Collaboration 2 (Collaboration 4 of TS 26.501)\nIn order to use flow-based network features (such as different QoS classes or different charging policies), the 5G System needs to detect the relevant traffic.\nDifferentiated Services (DS) [76, 77] is a scalable scheme for managing application traffic by classifying the traffic into a set of coarse-grained traffic classes. A Differentiated Service (DS) domain is a continuous set of DS-capable routers, which are operated with a common set of configurations. Each IP packet in a DS domain is marked and conditioned according to its traffic class. A 6-bit DS Code Point (DSCP) of the 8-bit differentiated services field (DS field) is used for marking. The DS field replaces the ToS field in the IPv4 packet headers and the Traffic Class field in the IPv6 header.\nEnd host systems may mark IP packets with a specific DSCP value prior to transmission. DS-enabled routers treat the packet according to the DSCP value when performing routing operations on it. Border gateway routers typically mark packets with a DSCP value based on some traffic policy, overriding any value set by hosts.\nNOTE:\tUsage of Differentiated Services across administrative borders is technically possible. The preservation of the DSCP field by networks between the MNO network and the external Data Networks hosting the 5GMS functions is assumed to be governed by an SLA and by transport-level arrangements that are outside 3GPP scope. When the DSCP field is used only for traffic identification, preservation of the DSCP field could be achieved by using a tunnelling solution.\nThe RFCs defining Differentiated Services recommend a set of Per-Hop Behaviors (PHB), namely:\n-\tDefault Forwarding (DF) PHB, defined in section 4.1 of RFC 2474 [76], is used for traffic without special treatment.\n-\tClass Selector PHB, defined in section 4.2.2.2 of RFC 2474 [76] is used for maintaining backwards compatibility with the IP precedence field of ToS.\n-\tExpedited Forwarding (EF) PHB, defined by RFC 3246 [78], is dedicated to low loss or low latency traffic.\n-\tAssured Forwarding (AF) PHB, defined by RFC 2597 [79], offers different levels of forwarding assurances.\nThe DS domain operator can also implement additional custom PHBs.\nIn the context of ToS-based traffic identification and separation, it is reasonable to assume the Data Network north of the UPF (N6) is DS-enabled. The 5G System is embedded in a larger DS domain, using same ToS values across multiple devices in order to provide Quality of Service Support like a DSCP-enabled link. However, it is not required to deploy DS capable routers for using in order to use the ToS field in the IP packet filter set for traffic identification.\nAccording to clause 4.1 of TS 26.501 [15], the 5GMS functions may be deployed within the trusted Data Network or an external Data network. As noted above, DS Code Points are often reset at network domain borders, but not always. There may be deployments e.g., with localized Edge Computing or with direct peering realizations, where the DSCP values can be used up to the 5GMSd AF and/or 5GMS AS in an external Data Network. In this case, the logical DS domain is extended to include those externally-deployed 5GMS functions.\nFigure 5.3.2.2-1 illustrates a deployment with a DS domain between the 5G System and the 5GMS functions deployed in the external DN. (The model is also valid for deployments in which the 5GMS functions both reside in the trusted DN.)\nThe figure depicts a 5G MS deployment within a DS domain, illustrating the various components and their interconnections. Key elements include the 5G core network, the 5G mobile network, and the 5G core network. The figure highlights the importance of network slicing and the use of virtualized networks to optimize resource utilization and improve network performance.\nFigure 5.3.2.2-1: 5GMS deployment within a DS domain\nFigure 5.3.2.2-2 illustrates a deployment with a DS domain between the 5G System and an externally deployed 5GMSd AS. The 5GMSd AF is deployed in the trusted DN.\nThe figure depicts a 5G MS deployment within a DS domain, illustrating the various components and their interconnections. Key elements include the 5G core network, the 5G mobile network, and the 5G core network. The figure highlights the importance of network slicing and the use of virtualized networks to optimize resource utilization and improve network performance.\nFigure 5.3.2.2-1: 5GMS deployment within a DS domain\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.3.3\tDeployment Architectures",
                            "text_content": "The following figure depicts a potential architecture design for the realization of traffic detection. The architecture shows the involved network functions in the traffic detection.\nFigure 5.3.3-1 illustrates the key components of the telecommunication architecture, including the base station (gNB), user equipment (UE), and scatterers. The diagram highlights beamforming techniques to mitigate interference, and the layered design aligns with SDN principles.\nFigure 5.3.3-1: Relevant architecture components\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.3.4\tMapping to 5G Media Streaming and High-Level Call Flows",
                            "text_content": "The Service Data Flow Templates support multiple different combinations to define parameters for traffic detection. This clause describes the common parameter combinations to detect specifically media streaming application traffic.\nThe Service Data Flow Template can take the form of either Service Data Flow filters (i.e. IP Packet Filter Sets) or an Application Id referencing Packet Flow Descriptions (PFDs).\nAn IP Packet Filter Set can contain different combinations of parameter values. Unspecified parameter values in the IP Packet Filter Sets are used to match any value of the corresponding information in the header of an IP packet. Common IP Packet Filter Set combinations are:\n-\t5-Tuple: The source and destination IP addresses, source and destination port numbers (potentially expressed as a small range of values) and the Protocol ID. This method of traffic detection is further described in clause 5.3.4.2 below.\n-\tToS: The source IP address and the Type of Service (ToS). This method of traffic detection is further described in clause 5.3.4.3 below.\nNOTE:\tThe Type of Service field is used here to map an application data flow to a specific PCC rule.\nA Packet Flow Description (PFD) can contain different parameters. Common parameters are:\n-\tDomain Name: The Internet domain name of an application server. This method of traffic detection is not described further in the present document.\nThe application detection filters in the UPF can be configured based on a pre-configured PCC rule (i.e. in the SMF and provided to the UPF) or a dynamic PCC rule (i.e. provided by the PCF) By interacting with the PCF (possibly via the NEF) the 5GMS AF is able to provision, update and remove a dynamic PCC rule which contains Service Data Flow description parameters for traffic handling and traffic detection in the UPF.\nWhen using 5-tuples for traffic detection, the following fields of the IP Packet Filter Set are used:\n-\tSource/destination IP address or IPv6 prefix.\n-\tSource/destination port number.\n-\tProtocol identifier of the protocol above IP/Next header type.\n-\tPacket Filter direction (uplink or downlink).\nNOTE:\tThese fields are encoded in the Flow Description field, defined in clause 5.3.8 of TS 29.514 [28].\nAs shown in figure 5.3.4.2-1 (below), the 5GMSd AF in the external DN can send a request using Nnef_AFsessionWithQos API to provision, update or remove a request to reserve resources for a specific application/flow with specific flow descriptions. After the AF request authorization, the NEF interacts with the PCF, providing the flow description together with the QoS reference, the optional other parameters like Alternative Service Requirements, period of time or traffic volume, etc.\nThe figure depicts a flow description for traffic flow identification, illustrating the various types of traffic flows and their respective flow rates.\nFigure 5.3.4.2-1:Flow description usage for traffic flow identification\nIf the request is authorised, the PCF determines the required QoS parameters based on the information provided by NEF/AF. After the Nnef_AFsessionWithQoS_Create Procedure, a transaction identifier is allocated by the NEF to identify this AF Session. Then the 5GMSd AF can subsequently invoke the Nnef_AFsessionWithQoS_Update API with this transaction identifier to update the flow description.\nAlternatively, the 5GMSd AF in the trusted DN can directly send a request using Npcf_PolicyAuthorization API to provision, update and remove a request to reserve resources for a specific application/flow with specific flow descriptions.\nThen the PCF initiates the PDU Session modification procedure to provide the updated PCC rule to the SMF and the SMF updates the PDRs in the UPF for the application/traffic identification and policy handling.\nHowever, when a new TCP connection is opened and the old one is closed, the 5-tuple in the Flow Description needs to be changed. (This may be from the consequence of factors such as load balancing, multiple concurrent requests for different types of resources, use of a shared TCP connection pool, etc.) In such cases, the 5GMSd AF can invoke the NEF/PCF-related APIs with new flow description to update the PDRs installed in UPF to follow the changed transport layer 5-tuples for application/flow identification.\nThe following is a simplified call flow when using the ToS Traffic Class for Traffic Identification, meaning, only the Type of Service field is used within a SDF Filter. The Type of Service (ToS) is an 8-bit field within the IP header (both IPv4 and IPv6) that can be used to convey a 6-bit DS Code Point (DSCP) value as described in clause 5.3.2.2, and for ECN marking [30]. Here, and in the candidate solution presented in clause 5.3.6, only the leading 6 bits are considered for traffic identification.\nIt is assumed here that the QoS flow should be used (e.g. for Premium QoS) as described in TS 26.512, Annex A.\nThe figure depicts a simplified representation of a traffic detection rule within an application, illustrating the usage of the ToS (Traffic-Specific Rate) feature. The ToS is a key feature in 5G networks, allowing for the efficient allocation of resources to different traffic types. The figure shows how the ToS is used to prioritize different traffic types, such as voice and video, over other types of traffic. This helps to ensure that the network is able to handle the high volume of data that is expected in 5G networks.\nFigure 5.3.4.3-1: ToS usage within an application traffic detection rule (simplified)\nFigure 5.3.4.3-1 depicts a call flow for ToS-based traffic detection. It is assumed here that the 5GMSd AF provides the ToS value for traffic identification in the Policy Activation response message (step 5). Another solution might be that the Media Session Handler allocates a ToS value and then provides the value to the 5GMSd AF.\nThe call flow works as the following steps:\n1:\tThe Media Session Handler activates a Dynamic Policy and provides the Policy Template Id with the activation request (among other parameters).\nThe 5GMSd AF triggers the activation of a Dynamic PCC rule:\n2:\tThe 5GMSd AF uses the Policy Authorization Service API and triggers a PCC rule activation. The 5GMSd AF provides the UE IP address, an IP Packet Filter Set with the ToS value and the UE IP address of the requesting UE and QoS parameters.\n3:\tAs result, the PCF uses the Npcf_SMPolicyControl APIs to provide a new PCC rule to the SMF.\n4: \tThe SMF uses the PDU Session Modification procedure to add/modify a QoS Rule in the UE SDAP entity.\n5:\tThe SMF uses the N4 interface to provide a new Packet Detection Rule (PDR) together with other rules for the UE to the UPF. Once the new rule is installed in the UPF, the UPF starts taking actions on the detected traffic.\n6:\tIf the Dynamic Policy can be activated, the 5GMSd AF provides a value for the ToS field in return.\nNOTE 1: The ToS Value is not immediately provided to the Media Session Handler to prevent race conditions.\n7:\tThe Media Player prepares a new TCP connection and sets the ToS value nominated by the 5GMSd AF on the TCP socket using the setsockopt() API or equivalent. As a result, all TCP packets for the flow will be marked by the UE with the ToS value.\n8:\tThe TCP Connection is established, and the traffic is marked with the ToS field. The UPF detects the traffic (by inspecting the IP header) and handles it according to the policy in the PCC Rule.\nNOTE 2:\tThe PCC Rule is scoped by the PDU Session, so the treatment of the ToS field value by the UPF is limited to the requesting UE. The UPF first looks up the relevant PDRs for a PDU session based on the incoming GTP Tunnel Id.\nThe UPF also needs to detect the downlink traffic matching the uplink traffic. There are different solutions to achieve this:\nA:\tThe 5GMSd AS uses the same ToS field for downlink traffic as used for uplink traffic.\nNOTE 3:\tThis solution may not work for cases where traffic crosses operational domain boundaries, since the ToS header field is often reset by border IP routers.\nB:\tThe UPF captures the 5-tuple carrying a specific ToS field from the TCP SYN Packet that establishes the connection in the uplink direction. As result, the UPF automatically creates a new PDR in the opposite direction derived by inverting the address fields found in the SYN packet.\nNOTE 4:\tThe connection handshake of other transport protocols may be more difficult to detect.\nC:\tOften, the UEs in a PLMN are shielded from public Internet traffic by means of firewalls that employ Network Address Translation (NAT). In order to set the ToS field within the Trusted DN to an appropriate value, the N6-NAT may set the downlink ToS to the same value as the uplink ToS.\nNOTE 5:\tThis is similar to solution A above.\nThe following are simplified call flows for the realization of the traffic identification leveraging Packet Flow Descriptions (PFDs).\nIn the first call flow (Figure 5.3.4.4-1) the provisioning step is described, in which one or more PFDs for the traffic identification of a single application are provisioned. The provisioned PFDs for the application are identified by the Application Identifier.\nThe figure depicts a simplified PFD provisioning process using the PFD Management API, illustrating the steps involved in configuring and managing PFDs in a network. The figure includes a flowchart, a list of steps, and a legend to clearly depict the process.\nFigure 5.3.4.4-1: PFD Provisioning using the PFD Management API (simplified)\nIn the second call flow (Figure 5.3.4.4-2) the on-demand usage of a set of PFDs for an application is described.\nThe figure depicts a simplified PFD usage within an application detection filter, illustrating the various components and their connections. The PFD is a crucial component in network traffic analysis, enabling the detection of application-specific traffic patterns. The simplified representation in Figure 5.3.4 .4 -2 highlights the various connections between the PFD components, such as the input, output, and processing stages. This figure provides a clear understanding of the PFD's functionality and its role in network traffic analysis.\nFigure 5.3.4.4-2: PFD usage within an application detection filter (simplified)\nHere, the 5GMSd AF resides within the Trusted Data Network and interacts directly with the PCF. When activating an QoS flow, the 5GMSd AF provides to the PCF the Application Identifer for detecting the 5G Media Streaming traffic together with the UE IP address and other policy information.\nWhen the 5GMSd AF resides in an external Data Network, the 5GMSd AF instead uses the equivalent NEF API (such as the Nnef_AFsessionWithQoS or Nnef_ChargeableParty service APIs) and provides the (external) Application Identifier, referencing one or more PFDs, to the NEF.\nThe 5GMSd AF can update the PFDs during an ongoing media streaming session. When updating, the 5GMS AF uses the NEF PFD management APIs. The system then automatically updates the Packet Detection Rules in the UPF used for traffic detection.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.3.5\tPotential open issues",
                            "text_content": "The exact behaviour and information that needs to be provided to and by the 5GMSd AF as well as the Media Session Handler need to be specified.\nThe following open issues have been identified:\n1.\tThe Nnef_AFsessionWithQOS and Nnef_ChargeableParty stage 3 APIs, as defined in TS 29.522 [43], only supports a Packet Flow Description (through the FlowInfo Type) or an Application Identifier for referencing one or more PFDs. Other information elements of the Service Data Flow Filter (like a ToS value) are not supported. Note, the FlowInfo type from TS 29.122 [44] is different from the FlowInformation type in TS 29.512 [45].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.3.6\tCandidate Solutions",
                            "text_content": "This section gives an overview of the different candidate solutions for application traffic flow identification within a PDU Session beyond providing (non-wildcarded) 5-tuples. Solutions fall into one of the following two categories:\n-\tCharging separation-only: Only the application detection filters in the UPF are provisioned with either IP Packet Filter Set (PFS) or PFD parameters,\n-\tQoS separation: The application detection filters in the UE and in the UPF are provisioned with either IP Packet Filter Set or PFD parameters in order to mark packets with the appropriate QFI inside the 5G System.\nNOTE 1:\tBoth types of solution may also be used for traffic policing.\nNOTE 2:\tIn context of the following candidate solutions to the Traffic Identification key issue, only the leading 6 bits of the Type of Service (ToS) field are considered. In case of Differentiated Services [D], these bits convey the DS field, as described in clause 5.3.2.2.\nThis candidate solution focuses on a scenario where only downlink traffic needs to be mapped to a specific QoS Flow and handled differently by the 5G System. Related uplink traffic is handled using default QoS.\nTo describe the traffic identification of a unidirectional flow with ToS at the Npcf_PolicyAithorization API, a flow description element containing only the direction information should be provided in addition to the ToS property.\nNOTE: Such a solution is counterproductive for TCP- and QUIC-based transports, i.e. protocols depending on acknowledgements. Such solutions can make sense for RTP/UDP based flows, such as in Media Production.\nThis candidate solution focuses on a scenario where only uplink traffic needs to be mapped to a specific QoS Flow and handled differently by the 5G System. Related downlink traffic is handled using default QoS.\nTo describe the traffic identification of a unidirectional flow with ToS at the Npcf_PolicyAithorization API, a flow description element containing only the direction information should be provided in addition to the ToS property.\nNOTE: Such a solution is counterproductive for TCP- and QUIC-based transports, i.e. protocols depending on acknowledgements. Such solutions can make sense for RTP/UDP based flows, such as in Media Production.\nThis candidate solution focuses on a scenario where both downlink and uplink traffic for a particular application flow within a PDU Session shared by several different application flows (from the same or different UE applications) needs to be mapped to a specific QoS Flow and handled differently by the 5G System. The UPF is provisioned with a QoS Rule before the 5GMS-related application flow establishment. The UE QoS rule indicates the usage of reflective QoS. In this candidate solution, the 5GMS AF initiates the QoS Flow establishment by using specific ToS values in the downlink traffic.\nThe figure depicts a 5G network with various components such as base stations (gNB), user equipment (UE), and scatterers. The diagram illustrates the signal propagation in a 5G network, highlighting the multi-path signal path and beamforming techniques to mitigate interference. The fiber-optic backbone architecture is shown, with core switches, optical line terminals (OLTs), and distributed nodes. Redundancy paths are depicted in dashed lines, ensuring failover reliability. The layered design aligns with SDN principles.\nFigure 5.3.6.4-1:\nAssumptions:\n-\tA PCC rule for the UE is activate in the 5G System. The PCC rule contains a Service Data Flow Filter with a ToS value and the UE IP address.\n-\tReflective QoS is enabled for the PDU Session in question (used here in step 3).\nSteps:\nProvisioning: The 5GMS System is provisioned for Dynamic Policy usage as defined in clause 5.7.2 of TS 26.501 [15]. As a result, various functions of the 5G System are provisioned for QoS usage as follows:\n1.\tThe 5GMS Client has received Service Access Information (through M6 or M5), providing the information needed to use the Dynamic Policy Invocation API. Here, the sdfMethod indicates the usage of ToS. The 5GMS Client has activated a Dynamic Policy as described in clause 5.7 of TS 26.501 [15].\n2.\tThe 5GMS AF has provisioned the information for a Dynamic PCC rule with the PCF (possibly through NEF).\n3.\tThe PCF has authorized the request and created a PCC rule. The PCF has sent the PCC rule to the SMF, which has forwarded the QoS rule to the UE (indicating “reflective QoS” here) and to the UPF.\nDuring media plane usage:\n4.\tThe 5GMS Client initiates connection establishment by sending a TCP SYN packet. The packet is forwarded by the UE SDAP entity (Layer 2) and the UPF to the 5GMS AS.\n5.\tThe 5GMS AS looks up the ToS policy, including the ToS value for this UE/network. Details are out of scope for 3GPP.\nNOTE:\tThe 5GMS AS may also wait until the first HTTP request message is received to determine the purpose of the request. A 5GMS Client may use the TCP connection for subsequent HTTP transactions (persistent TCP connection).\n6.\tThe 5GMS AS sends a TCP SYN–ACK to the UE to continue the TCP connection establishment handshake. The 5GMS AS sets the ToS field value. The packet reaches the UPF on its path to the UE.\n7.\tThe UPF detects a PDR match for the UE. Here, the PDR for the UE IP address contains the ToS value. (The PDR was provided to the UPF in an earlier step as described in clause 5.3.4.3.)\n8.\tThe UPF encapsulates the downlink IP packet inside an N3 packet. The UPF sets the QFI value in the N3 packet header.\n9.\tThe UPF sends the N3 packet to the RAN and the RAN marks the QFI value in the SDAP layer, sending the packet to the UE.\n10.\tThe UE SDAP entity (Layer 2) detects a new QFI.\n11.\tReflective QoS is activated for the PDU Session and the UE creates a “UE-derived QoS Rule” as defined in TS 23.501 [23], clause 5.7.5.2.\n12.\tThe UE SDAP entity (Layer 2) forwards the TCP SYN/ACK to the 5GMS Client.\n13.\tThe 5GMS Client send the TCP ACK to complete the TCP connection handshake. (This packet does not need to be marked with a specific ToS value by the 5GMS Client.\n14.\tThe UE SDAP entity (Layer 2) detects a PDR match for the UE. Here, the PDR is the 5-tuple as stored in the UE-derived QoS rule.\n15.\tThe UE SDAP entity (Layer 2) encapsulates the IP packet containing the TCP ACK into the according radio protocols, including the QFI marking.\nThe 5GMS Client continues to use the established TCP connection.\nDiscussion:\n-\tThe 5GMS AS needs to determine whether QoS should be used for this session and which ToS value to use.\n-\tThe Npcf_PolicyAuthorization API allows a ToS value to be provisioned (without a direction indication), but the Nnef_AFsessionWithQOS API does not support provisioning of a ToS value.\n-\tThe uplink traffic is not marked with a ToS field.\nThis candidate solution focuses on a scenario where both downlink and uplink traffic for a particular application flow within a PDU Session shared by several different application flows (from the same or different UE applications) needs to be mapped to a specific QoS Flow and handled differently by the 5G System. In this candidate solution, the 5GMS AF initiates the QoS Flow establishment by using specific ToS values in the downlink traffic.\nThe difference between this and Solution 3a is that the UE receives a QoS rule containing an uplink Packet Filter with ToS.\nThe figure depicts a 5G network with various components such as base stations (gNB), user equipment (UE), and scatterers. The diagram illustrates the signal propagation in a 5G network, highlighting the multi-path signal path and beamforming techniques to mitigate interference. The fiber-optic backbone architecture is shown, with core switches, optical line terminals (OLTs), and distributed nodes. Redundancy paths are depicted in dashed lines, ensuring failover reliability. The layered design aligns with SDN principles.\nFigure 5.3.6.5-1:\nAssumptions:\n-\tA PCC rule for the UE is activate in the 5G System. The PCC rule contains a Service Data Flow Filter with a ToS value and the UE IP address.\nSteps:\nProvisioning: The 5GMS System is provisioned for Dynamic Policy usage as defined in clause 5.7.2 of TS 26.501 [15]. As result, various functions of the 5G System are provisioned for QoS usage as follows:\n1.\tThe 5GMS Client has received Service Access Information (through M6 or M5), providing the information needed to use the Dynamic Policy Invokation API. Here, the sdfMethod indicates the usage of ToS. The 5GMS Client has activated a Dynamic Policy as described in clause 5.7 of TS 26.501 [15].\n2.\tThe 5GMS AF has provisioned the information for a Dynamic PCC rule with the PCF (possibly through NEF).\n3.\tThe PCF has authorized the request and created a PCC rule. The PCF has sent the PCC rule to the SMF, which has forwarded the QoS rule to the UE and to the UPF. The QoS Rule for the UE contains the ToS value.\nDuring media plane usage:\n4.\tThe 5GMS Client initiates connection establishment by sending a TCP SYN packet. The packet is forwarded by the UE SDAP entity (Layer 2) and the UPF to the 5GMS AS.\n5.\tThe 5GMS AS looks up the ToS policy, including the ToS value for this UE/network.\nNOTE:\tThe 5GMS AS may also wait until the first HTTP request message is received to determine the purpose of the request. A 5GMS Client may use the TCP connection for subsequent HTTP transactions (persistent TCP connection).\n6.\tThe 5GMS AS sends a TCP SYN–ACK to the UE to continue the TCP connection establishment handshake. The 5GMS AS sets the ToS field value. The packet reaches the UPF on its path to the UE.\n7.\tThe UPF detects a PDR match for the UE. Here, the PDR for the UE IP address contains the ToS value. (The PDR was provided to the UPF in an earlier step as described in clause 5.3.4.3.)\n8.\tThe UPF encapsulates the downlink IP packet inside an N3 packet. The UPF sets the QFI value in the N3 packet header.\n9.\tThe UPF sends the N3 packet to the RAN and the RAN marks the QFI value in the SDAP layer, sending the packet to the UE.\n10.\tThe UE SDAP entity (Layer 2) forwards the TCP SYN–ACK to the 5GMS Client.\n11.\tThe 5GMS Client send the TCP ACK to complete the TCP connection handshake. (This packet does not need to be marked with a specific ToS value by the 5GMS Client.\n12.\tThe UE detects a QoS Rule match for the UE. Here, the IP Packet Filter contains only the ToS value.\n13.\tThe UE SDAP entity (Layer 2) encapsulates the IP packet containing the TCP ACK into the according radio protocols, including the QFI marking.\nThe 5GMS Client continues to use the established TCP connection.\nDiscussion:\n-\tThe 5GMS AS needs to determine whether QoS should be used for this session and which ToS value to use.\n-\tThe Npcf_PolicyAuthorization API allows a ToS value to be provisioned (without a direction indication), but the Nnef_AFsessionWithQOS API does not support provisioning of a ToS value.\nThis candidate solution focuses on a scenario where both downlink and uplink traffic for a particular application flow within a PDU Session shared by several application flows needs to be mapped to a specific QoS Flow and handled separated by the 5G System. In this candidate solution, the 5GMS Client initiates the QoS Flow establishment by using specific ToS values in the uplink traffic. Here, the reception of the ToS-marked IP Packet in the UPF triggers the creation of a new QoS rule in the UPF, similar to reflective QoS principles.\nNOTE:\tCreation of a new QoS rule derived from an IP packet is defined as “UE-derived QoS rule” creation in clause 5.3.4 (Reflective QoS) of TS 23.501 [15].\nThe figure depicts a 5G network with various components such as base stations (gNB), user equipment (UE), and scatterers. The diagram illustrates the signal propagation in a 5G network, highlighting the multi-path signal path and beamforming techniques to mitigate interference. The fiber-optic backbone architecture is shown, with core switches, optical line terminals (OLTs), and distributed nodes. Redundancy paths are depicted in dashed lines, ensuring failover reliability. The layered design aligns with SDN principles.\nFigure 5.3.6.6-1:\nAssumptions:\n-\tA PCC rule for the UE is activate in the 5G System. The PCC rule contains a Service Data Flow Filter with a ToS value and the UE IP address.\n-\tReflective QoS is enabled for the PDU Session in question.\nSteps:\nProvisioning: The 5GMS System is provisioned for Dynamic Policy usage as defined in clause 5.7.2 of TS 26.501 [15]. As result, various functions of the 5G System are provisioned for QoS usage as follows:\n1.\tThe 5GMS Client has received Service Access Information (through M6 or M5), providing the information needed to use the Dynamic Policy Invokation API. Here, the sdfMethod indicates the usage of ToS. The 5GMS Client has activated a Dynamic Policy as described in clause 5.7 of TS 26.501 [15].\n2.\tThe 5GMS AF has provisioned the information for a Dynamic PCC rule with the PCF (possibly through NEF).\n3.\tThe PCF has authorized the request and created a PCC rule. The PCF has sent the PCC rule to the SMF, which has forwarded the QoS rule to the UE and to the UPF.\nDuring media plane usage\n4.\tThe 5GMS Client initiates connection establishment by sending a TCP SYN packet. The packet is forwarded by the UE SDAP entity (Layer 2) and the UPF. The 5GMS Client has set a ToS value in the TCP SYN packet, as provided by the 5GMS AF in an earlier step (see clause 5.3.4.3).\n5.\tThe UPF detects a PDR match for the UE. Here, the PDR for the PDU Session (e.g. identified by the TEID) contains the ToS value. (The PDR was provided to the UPF in an earlier step as described in Clause 5.3.4.3.)\n6.\tThe UPF creates a “UPF derived QoS Rule”, similar to the “UE derived QoS Rule” (see TS 23.501 [15], clause 5.7.5.2). The UPF derives the IP Packet Filter set (similar to the derivation in the “UE derived QoS rule”) by taking the IP addresses, protocol identifier and port numbers into the IP Packet Filter Set.\n7.\tThe UPF forwards the TCP SYN packet to the 5GMS AS.\n8.\tThe 5GMS AS replies with a TCP SYN–ACK packet to continue the TCP connection establishment handshake.\n9.\tThe UPF detects a PDR match for the UE. Here, the PDR for the UE contains the 5-tuple of the TCP connection.\n10.\tThe UPF encapsulates the downlink IP packet into an N3 packet. The UPF sets the QFI value in the N3 packet header.\n11.\tThe UPF sends the N3 packet to the UE via the RAN.\n12.\tThe UE SDAP entity (Layer 2) detects a new QFI value.\n13.\tSince Reflective QoS is activated for the PDU Session, the UE creates a “UE-derived QoS Rule” as defined in TS 23.501 [23], clause 5.7.5.2.\n14.\tThe UE SDAP entity (Layer 2) forwards the TCP SYN–ACK to the 5GMS Client.\n15.\tThe 5GMS Client sends the TCP ACK to complete the TCP connection handshake. (Unlike in step 4, this packet does not need to be marked with a specific ToS value by the 5GMS Client.)\n16.\tThe UE SDAP entity (Layer 2) detects a PDR match for the UE. Here, the PDR is the 5-tuple as stored in the UE derived QoS rule.\n17.\tThe UE encapsulates the IP packet into the according radio protocols, including the QFI marking.\nThe 5GMS Client continues to use the established TCP connection.\nDiscussion:\n-\tTS 23.501 [23] defines only a “UE-derived QoS Rule”. The concept does not exist for the UPF.\n-\tThe Npcf_PolicyAuthorization API allows a ToS value to be provisioned (without a direction indication), but the Nnef_AFsessionWithQOS API does not support provisioning of a ToS value.\nThis candidate solution focuses on a scenario where both downlink and uplink traffic for a particular application flow within a PDU Session shared by several application flows needs to be mapped to a specific QoS Flow and handled separated by the 5G System. In this candidate solution, the 5GMS Client initiates the QoS Flow establishment by using specific ToS values in the uplink traffic. Here, the IP packet with the ToS value reaches the 5GMS AS and is re-used for downlink traffic.\nThe figure depicts a 5G network with various components such as base stations (gNB), user equipment (UE), and scatterers. The diagram illustrates the signal propagation in a 5G network, highlighting the multi-path signal path and beamforming techniques to mitigate interference. The fiber-optic backbone architecture is shown, with core switches, optical line terminals (OLTs), and distributed nodes. Redundancy paths are depicted in dashed lines, ensuring failover reliability. The layered design aligns with SDN principles.\nFigure 5.3.6.7-1:\nAssumptions:\n-\tA PCC rule for the UE is activate in the 5G System. The PCC rule contains a Service Data Flow Filter with a ToS value and the UE IP address.\n-\tReflective QoS is enabled for the PDU Session in question.\nSteps:\nProvisioning: The 5GMS System is provisioned for Dynamic Policy usage as defined in clause 5.7.2 of TS 26.501 [15], Clause 5.7.2. As result, various functions of the 5G System are provisioned for QoS usage as follows:\n1.\tThe 5GMS Client has received Service Access Information (through M6 or M5), providing the information needed to use the Dynamic Policy Invokation API. Here, the sdfMethod indicates the usage of ToS. The 5GMS Client has activated a Dynamic Policy as described in clause 5.7 of TS 26.501 [15].\n2.\tThe 5GMS AF has provisioned the information for a Dynamic PCC rule with the PCF (possibly through NEF).\n3.\tThe PCF has authorized the request and created a PCC rule. The PCF has sent the PCC rule to the SMF, which has forwarded the QoS rule to the UE and to the UPF.\nDuring Media Plane usage\n4.\tThe 5GMS Client initiates connection establishment by sending a TCP SYN packet. The packet is forwarded by the UE SDAP entity (Layer 2) and the UPF to the 5GMS AS. The 5GMS Client has set a ToS value in the TCP SYN packet, as provided by the 5GMS AF in an earlier step (see clause 5.3.4.3).\n5.\tThe 5GMS AS reads the ToS value from the uplink packet. The 5GMS AS uses the uplink ToS value to mark all downlink packets in that TCP connection.\nNOTE:\tWhen the 5G System employs an N6 NAT, the N6 NAT may set the downlink ToS value to the same value as the uplink ToS value.\n6.\tThe 5GMS AS sends a TYP SYN–ACK back to the UE. The packet reaches the UPF on its path to the UE.\n7.\tThe UPF detects a PDR match for the UE. Here, the PDR for the UE IP address contains the ToS value. (The PDR was provided to the UPF in an earlier step as described in clause 5.3.4.3.)\n8.\tThe UPF encapsulates the downlink IP packet into an N3 packet. The UPF sets the QFI value in the N3 packet header.\n9.\tThe UPF sends the N3 packet to the RAN and the RAN marks the QFI value in the SDAP layer, sending the packet to the UE.\n10.\tThe UE SDAP entity (Layer 2) detects a new QFI value.\n11.\tSince Reflective QoS is activated for the PDU Session, the UE SDAP entity (Layer 2) creates a “UE-derived QoS Rule” as defined in TS 23.501 [23], clause 5.7.5.2.\n12.\tThe UE SDAP entity (Layer 2) forwards the TCP SYN–ACK to the 5GMS Client.\n13.\tThe 5GMS Client send the TCP ACK to complete the TCP connection handshake. (Unlike in step 4, this packet does not need to be marked with a specific ToS value by the 5GMS Client.)\n14.\tThe UE SDAP entity (Layer 2) detects a PDR match for the UE. Here, the PDR is the 5-tuple as stored in the UE-derived QoS rule.\n15.\tThe UE SDAP entity (Layer 2) encapsulates the IP packet into the according radio protocols, including the QFI marking.\nThe 5GMS Client continues to use the established TCP connection.\nDiscussion:\n-\tThe  5GMS AS needs to determine whether QoS should be used for this session and which ToS value to use.\n-\tThe Npcf_PolicyAuthorization API allows a ToS value to be provisioned (without a direction indication), but the Nnef_AFsessionWithQOS API does not support provisioning of a ToS value.\nThis candidate solution focuses on a scenario where both downlink and uplink traffic for a particular application flow within a PDU Session shared by several application flows needs to be mapped to a specific QoS Flow and handled separated by the 5G System. In this candidate solution, the 5GMS Client initiates the QoS Flow establishment by using specific ToS values in the uplink traffic. A ToS-based QoS rule is already provisioned, so that the Uplink Traffic is mapped to the correct QoS Flow.\nThe figure depicts a 5G network with various components such as base stations (gNB), user equipment (UE), and scatterers. The diagram illustrates the signal propagation in a 5G network, highlighting the multi-path signal path and beamforming techniques to mitigate interference. The fiber-optic backbone architecture is shown, with core switches, optical line terminals (OLTs), and distributed nodes. Redundancy paths are depicted in dashed lines, ensuring failover reliability. The layered design aligns with SDN principles.\nFigure 5.3.6.7-1:\nAssumptions:\n-\tA PCC rule for the UE is activate in the 5G System. The PCC rule contains a Service Data Flow Filter with a ToS value and the UE IP address.\n-\tA QoS rule with a ToS and a QFI value for uplink traffic is provisioned.\nSteps:\nProvisioning: The 5GMS System is provisioned for Dynamic Policy usage as defined in clause 5.7.2 of TS 26.501 [15], Clause 5.7.2. As result, various functions of the 5G System are provisioned for QoS usage as follows:\n1.\tThe 5GMS Client has received Service Access Information (through M6 or M5), providing the information needed to use the Dynamic Policy Invokation API. Here, the sdfMethod indicates the usage of ToS. The 5GMS Client has activated a Dynamic Policy as described in clause 5.7 of TS 26.501 [15].\n2.\tThe 5GMS AF has provisioned the information for a Dynamic PCC rule with the PCF (possibly through NEF).\n3.\tThe PCF has authorized the request and created a PCC rule. The PCF has sent the PCC rule to the SMF, which has forwarded the QoS rule to the UE and to the UPF.\nDuring Media Plane usage:\n4.\tThe 5GMS Client initiates connection establishment by sending a TCP SYN packet. The 5GMS Client has set a ToS value in the TCP SYN packet, as provided by the 5GMS AF in an earlier step (see clause 5.3.4.3).\n5. \tThe UE SDAP entity detects a matching ToS value in the uplink traffic.\n6.\tThe UE SDAP entity (Layer 2) encapsulates the IP packet into the according radio protocols, including the QFI marking\n7.\tThe 5GMS AS reads the ToS value from the uplink packet. The 5GMS AS uses the uplink ToS value to mark all downlink packets in that TCP connection.\nNOTE:\tWhen the 5G System employs an N6 NAT, the N6 NAT may set the downlink ToS value to the same value as the uplink ToS value.\n8.\tThe 5GMS AS sends a TYP SYN–ACK back to the UE. The packet reaches the UPF on its path to the UE.\n9.\tThe UPF detects a PDR match for the UE. Here, the PDR for the UE IP address contains the ToS value. (The PDR was provided to the UPF in an earlier step as described in clause 5.3.4.3.)\n10.\tThe UPF encapsulates the downlink IP packet into an N3 packet. The UPF sets the QFI value in the N3 packet header.\n11.\tThe UPF sends the N3 packet to the RAN and the RAN marks the QFI value in the SDAP layer, sending the packet to the UE. The UE SDAP entity (Layer 2) forwards the TCP SYN–ACK to the 5GMS Client.\n12. The 5GMS Client send the TCP ACK to complete the TCP connection handshake.\n13.\tThe UE SDAP entity (Layer 2) detects a ToS match for the UE.\n14.\tThe UE SDAP entity (Layer 2) encapsulates the IP packet into the according radio protocols, including the QFI marking.\nThe 5GMS Client continues to use the established TCP connection.\nDiscussion:\n-\tThe 5GMS AS needs to determine whether QoS should be used for this session and which ToS value to use.\n-\tThe Npcf_PolicyAuthorization API allows a ToS value to be provisioned (without a direction indication), but the Nnef_AFsessionWithQOS API does not support provisioning of a ToS value.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.3.7\tConclusions",
                            "text_content": "This Key Issue explored different solutions for traffic identification, so that the 5G System can detect different application flows and is enabled to apply an appropriate Policy and Charging Rules (PCC) to the associated traffic. The Policy and Changing Rules are needed, when the 5G System should tread the application traffic differently than the normal traffic, e.g. with better QoS or with different charging rules. The 5G System supports different means for direction-specific traffic detection. The use of the following traffic detection schemes is studied in detail in the context of 5G Downlink Media Streaming, e.g. assuming DASH content delivery:\n-\t5-tuple: UE IP address, server IP address, protocol, UE port and server port.\n-\tType of Service (ToS) field: The ToS field is an 8-bit field within the IP header, that can be used to convey the 6-bit DSCP value. In IPv6, the Traffic Class field.\n-\tPacket Flow Description: 3-tuple of Server IP address, protocol and server port.\nThe use of the Flow Label (IPv6 only), the security parameter index (IPsec) and the domain name (part of the Packet Flow Description) are not studied in detail. It is recommended to study IPsec and the usage of the security parameter index for traffic identification is a subsequent study.\nNOTE:\tPFDs also support URL-based and domain name traffic detection. However, the URL is increasingly often encrypted (e.g. by the use of TLS or alternative encrypted transport) and therefore not visible to the network and domain name are also getting encrypted as encrypted forms of DNS and ECH are adopted.\nAlthough TS 23.501 [23] defines a rich set of traffic detection schemes within the Packet Filter Set structure, only a subset of the schemes can be dynamically provisioned using NEF APIs calls. Values for the ToS field, the Flow Label (IPv6 only), and the Security Parameter Index (IPsec only) can only be manually provisioned.\nThe data model of the Dynamic Policy API supports the selection of ToS, FlowLabel or Domain Names within the SdfMethod data type. However, there is no detailed definition on the usage of the feature, including the values for the ToS field. It is recommended to specify the usage of ToS and the configuration of the ToS values within a normative work item.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.4\tAdditional/new transport protocols",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.4.1\tDescription",
                            "text_content": "Media streaming applications are continued to use HTTP-based distribution protocols, but newer versions of HTTP such as HTTP/2 or HTTP/3 are introduced, see for example also TR 26.925 [88], clause 6.1.4. The architectural and performance impacts of such protocols for 5G-based media distribution is unclear and requires study. The study also considers how Media Players may use functionalities existing in new transport protocols, and also investigate the impact of new transport protocols on 5GMS usage and traffic identification (e.g. Service Data Flow Descriptions).\nBased on SMTP (Simple Mail Transport Protocol) [W] and reusing MIME (Multipurpose Internet Mail Extensions) notation [74][75], HTTP protocol (also known as web protocol), powers most websites, mobile apps, and videos. It was created by Tim Berners-Lee at CERN in 1989 and has been enhanced over the years to keep up with the ever-changing World Wide Web. Currently, the web is a mixture of HTTP/1.1 [3] and HTTP/2 [4] adoption. Most well-known websites are running HTTP/2, while smaller websites and late adopters plan to migrate to HTTP/2 in the near future as it is relatively easy to implement. HTTP/2 is used by about 45% of websites and supported by all major web browsers. HTTP/3 is only used by about 5% of websites now and not well-supported by web browsers yet. However. significant HTTP/3 deployments are emerging. For example, YouTube™ has for a long time been offering a pre-RFC draft version to any client that wants to use it, especially the Chrome™ browser. Other browsers are expected to follow soon after waiting for the QUIC and HTTP/3 RFCs to be published before mainlining that feature.\nHTTP/2 introduces the \"Streams\" concept at HTTP level and each stream can have different priorities. All objects can from a web-page can be multiplexed in single long-lived TCP connection. Also, HTTP/uses header compression (HPACK) to avoid verbose/clear text. Also, HTTP/2 pseudo-mandates TLS to prevent “middle boxes” from messing up with the content. However, HTTP/2 does not remove the drawbacks of TCP’s head-of-line blocking - packet loss on one stream will block all other streams until recovery even if packets for all other streams are correctly received.\nHTTP/2 testing shows [2] that the delivery of large objects over HTTP/2 can be slower than over HTTP/1.1 when there is packet loss. This is because HTTP/2 uses a single TCP connection, versus about six connections which most web browsers open over HTTP/1.1. In addition, the TCP congestion control algorithms reduce the TCP congestion window size, resulting in fewer bytes sent over the wire when using just one TCP connection.\nHTTP/2 provides on average a 5% to 15% performance improvement on page load times over HTTP/1.1 [2]. HTTP/1.1 allows persistent TCP connections, but requests still had to be serialized, resulting in the well-known \"HTTP head of queue blocking\". In order to improve downloads, many TCP flows still needed to be parallelized to speed up delivery.\nThe solution to this problem is to use HTTP/2 over a different transport protocol that provides more efficient congestion control. One option would be to upgrade and modify TCP, but modifying TCP implementations is viewed as an impossible task. For example, middle boxes such as NAT, Firewalls, and Load balancers are problematic, because they get rarely upgraded which prevents any updates to TCP. TCP is also hard to evolve as it is almost always implemented as part of operating system kernels, requiring an updated operating system as part of TCP updates. Hence, it was considered easier to introduce a new transport protocol on top of UDP, that can be implemented outside the operating system kernel, in the user space. This new transport protocol is referred to as QUIC.\nThat, in essence, is what HTTP/3 [5] is: HTTP/2 over User Datagram Protocol (UDP) based on IETF QUIC. HTTP/3 is a thin layer on top of QUIC [32] including QPACK header compression [31]. The main QUIC functions are connection and stream multiplexing [32], fast startup[32], loss recovery, in-order delivery (within stream) [32], flow control [32]. TLS1.3 (handshake) [33], loss recovery and congestion control [34].\nHTTP/3 always uses the QUIC protocol as its transport layer, although QUIC may also be used to carry other application-level protocols. For 5MBS, the term “HTTP/3” will always be used to refer to “HTTP/3 over QUIC”, unless the text refers specifically to QUIC in explaining its effect on HTTP/3.By multiplexing multiple concurrent logical streams over a single UDP-based transport association, and by giving each stream its own independent byte offset numbering space, packet loss in one stream does not block progress on other logical streams in the same QUIC connection. (However, the affected stream will still block when packets are lost, so as to guarantee in-order delivery of payloads to the application.).\nHTTP/2 and HTTP/3 protocol stack, which are designed to improve the performance and efficiency of web traffic.\nFigure 5.4-1: HTTP/2 and HTTP/3 protocol stacks\nFor an entertaining introduction to QUIC and HTTP/3, please check .\nHowever, using HTTP/3 over QUIC for adaptive streaming still requires study as under certain circumstances, the quality using QUIC may even degrade for DASH-based streaming than it would increase [6]. The evaluation results show that using the unmodified DASH algorithms on top of QUIC may not provide the anticipated performance boost when compared to the standard DASH over TCP.\nThe main expected benefit of QUIC is being able to multiplex requests for all Adaptation Sets onto the same transport association, and then to manage the network QoS on that aggregate connection. This has a valuable operational benefit to a CDN operator (including the 5GMS AS) in reducing the number of UDP ports that a server needs to keep open. Another benefit is being able to migrate connections from one IP address to another with minimal interruption to either client or server. This is useful when the client moves, but it is also useful when the server changes (e.g. in edge computing relocation Use Cases).\nBecause HTTP/3 and IETF QUIC are new protocols, there are several questions about performance and management that need to be investigated during this study.\nThe IETF specifications for HTTP/3 [5][31] and the core QUIC functions [32, 33, 34] are now approved in the IETF, and have been broadly deployed by a number of browser vendors and content providers, since the IETF QUIC working group has focused on specification, implementation, and, after the specifications were sufficiently stable, deployment, all in parallel. The performance of HTTP/3 in environments that have not been encountered during deployments to date is still an open question. Of greatest interest for this study, is the performance of HTTP/3 in 5G networks. Although deployment of 5G networks has begun, most deployment experience with HTTP/3 in mobile networks over the past few years has been in non-5G networks.\nWhen end users have used HTTP/3 to access servers outside the 5G core network, 3GPP terminal mobility was handled transparently by the 3GPP network, and the UE’s IP address(es) didn’t change. If a server’s IP addresses changed, this was often not visible to the user, due to the widespread deployment of CDNs and load balancers in data centers. If edge computing resource IP addresses change in relocation use cases, QUIC connection migration could be used to reduce the impact on user experience, but this needs to be analyzed carefully.\nMPEG-DASH has provided years of good user experience running over HTTP/1.1. As use cases arise which require very low latency, it is reasonable to better understand how, and when, MPEG-DASH might take advantage of HTTP/3 and analyze whether this has any implications for this study.\n[6] raised the issue that MPEG-DASH performance might be lower over HTTP/3 than over HTTP/2. This reference was comparing Google’s pre-standardization QUIC implementation to highly optimized HTTP/2 over TCP implementations, and is about five years old, as of this writing, but the point remains – we need to know more about unmodified MPEG-DASH over standardized HTTP/3 implementations.\nIn particular, in the downlink media streaming Use Case, the server chooses the algorithm but the client media player decides whether to use a long-lived connection or to drop and reconnect when changing representation/rendition or adaptation/switching set, and the decision on connection (re)use is often delegated by the client application to a library, and this library might not offer an API to influence connection reuse. QUIC optimisations for reducing connection setup time (0-RTT or 1-RTT handshake (as described in [32]) mitigate this suboptimal use of connections to some extent, but the if the client, directly or indirectly by delegating the decision to the library, chooses to close and open connections, any QUIC congestion control algorithm begins probing for available bandwidth with no information about path characteristics. The connection handling characteristics of common APIs need to be analyzed as part of this study.\nThe standardized QUIC congestion control and recovery procedures in [34] are chosen to emulate TCP’s standardized behaviours ([35], plus extensions). These are quite conservative, and not match current work on delay-based congestion control and recovery mechanisms, which have also seen wide deployment in QUIC implementations. In principle, delay-based congestion control and recovery mechanisms should improve user experience for streaming media applications, but this isn’t known yet, and this needs to be carefully analyzed. One of the core functions of QUIC is the capability to migrate connections without application involvement when endpoint IP addresses change, rather than requiring the detection of a connection failure, teardown of that connection, and setup of a new connection. Connection migration is one of the key QUIC functions that we do not have a great deal of experience with – implementers in the IETF said they were concentrating on performance for a connection, and many had not completely implemented or tested connection migrations at scale (data point is from October 2020).\nOne of the biggest distinctions between HTTP/2 over TCP and HTTP/3 over QUIC has been the encryption of almost all transport-level information carried in QUIC. This information, which was not encrypted in TCP even when it was carrying encrypted payloads, was often used in network management to identify and troubleshoot performance problems on the Internet. In most of experience with HTTP/3 deployments to date, content providers (e.g. Google/YouTube, Facebook, etc.) have terminated at least one end of the encrypted end-to-end connections, allowing them to identify problems at the QUIC transport level. That might be true in 5G deployments, or it might not be the case. If that is not the case, it would be very useful to consider the guidance in [36] as part of this study. It is also likely that operator deployments which relied on split-TCP connections to improve performance over radio links will require reconsideration for QUIC-based HTTP/3, since QUIC transport-level information is not available unless a device has a security context for the encrypted QUIC connection. It is likely that we will need to enhance the 3GPP QoS framework, and that if an application is using QUIC, 5-tuples are not sufficient for per-flow QoS.\nAlthough QUIC can be implemented as part of operating system kernels, it is commonly implemented in user space, allowing frequent updates to congestion control and recovery procedures, including introduction of entirely new procedures (e.g. BBR, \"Bottleneck Bandwidth and Round-trip propagation time\" congestion control [37]). It is likely that the performance characteristics of HTTP/3 applications will vary more dynamically than HTTP/1.1 implementations that have been used by MPEG-DASH in the past. This may also have implications for existing applications if they migrate from MPEG-DASH over HTTP/1.1 or HTTP/2, to MPEG-DASH over HTTP/3.\nThere are many details involved, but the following description gives a sense of how little changes at the application layer when 5GMS begins using HTTP/3 as its application protocol.\n\n\n1.\tTo open an HTTP/3 connection and retrieve a resource, an HTTP/3 client possesses a target URI providing a scheme, which needs to be \"https:\", an authority, which must include a resolvable DNS name, and (optionally) a path describing the location of the resource at the authority. This target URI may be obtained in various ways (configuration, dynamic lookup when the HTTP/3 client begins operation, or even from a resource that the HTTP/3 client has already retrieved).\n2.\tThe location is resolved to an IP address, by looking up a DNS name, using HTTPS, or other mechanisms that would be used to resolve any other URI authority.\n3.\tOnce in possession of the IP address for the HTTP/3 server, the HTTP/3 client attempts to open an HTTP/3 connection to the HTTP/3 server. In order to use HTTP/3, the HTTP/3 client communicates with the HTTP/3 server using the underlying QUIC protocol, sent over UDP. During connection establishment, the HTTP/3 client and HTTP/3 server perform a TLS 1.3 handshake, and HTTP/3 support is indicated by selecting the ALPN token \"h3\" in the TLS handshake. When the TLS 1.3 handshake is complete, both HTTP/3 client and HTTP/3 server have validated the connection.\n4.\tWhen connection validation is complete, the HTTP/3 client can begin performing normal HTTP requests over the HTTP/3 connection. In the case of M4d interactions, for example, the HTTP/3 client issues an HTTP GET request.\n5.\tWhen the HTTP/3 server receives an HTTP request, it responds using normal HTTP status codes, and then performs the requested operation if the request has succeeded.\nOne adjustment to the 5GMS architecture to accommodate HTTP/3 could be to provide additional metrics reporting at Layer 7 and Layer 4. In addition to DASH application metrics, providing metrics on HTTP/3 protocol operation and, perhaps, even on QUIC might be useful for 5GMS System operators.\nWhen DASH is used as a streaming protocol, DASH metrics would continue to be available when a DASH client creates an HTTP/3 connection to an HTTP/3 server.\nWhen a non-DASH client, for example, an HLS [87] client, creates an HTTP/3 connection to an HTTP/3 server, a different mechanism would be necessary for metrics reporting. A capability called “QLOG”, currently under development in the QUIC working group of the Internet Engineering Task Force, is one such mechanism.\nQLOG is composed of three related specifications:\n-\ta protocol-independent schema specification and mapping to JSON in [84]\n-\ta specification for HTTP/3-level events [85], and\n-\ta specification for QUIC-level events [86].\nQLOG events can be stored, aggregated, and reported in a variety of ways. In particular, QLOG events can be collected at both endpoints of a connection, so these events could be reported by an HTTP client, an HTTP server, or both, if comparison is desired.\nQLOG could be used to collect HTTP-level events for any HTTP-based streaming protocol running over HTTP/3.\nQLOG could also be used to collect QUIC-level events for any streaming protocol encapsulated in QUIC, but consideration of this usage can be deferred until such protocols are identified.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.4.2\tCollaboration Scenarios",
                            "text_content": "A service provider/content provider runs an adaptive media streaming service between HTTP/3 and QUIC enabled 5G Media Streaming AS and an HTTP/3 and QUIC enabled UE using 5G Media Streaming over M2d and M4d.\nThe QUIC protocol [32] is a general-purpose transport protocol, although most current deployments have been in conjunction with HTTP/3 [5]. Even when limiting discussion to HTTP/3 over QUIC, this capability can be relevant to multiple key topics described in the present document, as well as the basic procedures for 5G Media Streaming described in TS 26.501 [15], in both downlink and uplink directions.\nFor this key topic, the discussion will focus on the collaboration scenario where a 5GMS Application Provider runs an adaptive media streaming service between an HTTP/3-enabled 5GMSd AS and an HTTP/3-enabled 5GMSd Client using downlink media streaming over M2d and M4d. This is Collaboration Scenario 2, from clause A.2 in TS 26.501 [15], reproduced in figure 5.4.2-1 below.\nThe figure depicts a collaboration 2 (unchanged from Figure A.2-1 in TS 26.501 [15]) network, illustrating the various components and their interconnections. The figure includes a base station (BS), a user equipment (UE), and a network element (NE). The BS is responsible for transmitting and receiving signals, while the UE is the device that receives the signal. The NE is a network element that connects the BS and UE, facilitating communication between them. The figure also shows the use of optical fiber as the backbone for the network, with core switches and optical line terminals (OLTs) for data transmission and distribution. The layered design of the network aligns with SDN principles, allowing for efficient network management and control.\nFigure 5.4.2-1: Collaboration 2 (unchanged from Figure A.2-1 in TS 26.501 [15])\nFor this key topic, the discussion will focus on a media plane only collaboration scenario where the 5GMSu AS is deployed in the trusted domain. This collaboration scenario is described in clause 5.5.2.2 and illustrated in figure 5.5.2.2-1.\n-\tIf HTTP/3 is used as the uplink application protocol at reference point M4u, the uplink media is streamed from the Media Streamer subfunction of an HTTP/3-enabled 5GMSu Client to an HTTP/3-enabled 5GMSu AS.\n-\tIf HTTP/3 is used as the media egest application protocol at reference point M2u, the egest media is sent from an HTTP/3-enabled 5GMSu AS to an HTTP/3-enabled 5GMSu Application Provider.\nEditor’s Note: Clause 5.5.2.7, describing a \"hybrid, i.e. end-to-end form of collaboration across uplink media streaming and downlink media streaming services\", and clause 5.2.4.3 on \"Content preparation between uplink ingest and downlink streaming\", would be useful to cover in clause 5.4 as well.\nEditor’s Note: Uplink ingest formats are also a key topic in this study, and clause 5.2.1 names several existing uplink ingest formats to be studied. Even for the formats not routinely carried over HTTP (e.g. RTP-based RIST [21][22] and SRT [82]), discussions are underway in the Internet Engineering Task Force to specify direct mappings onto QUIC (for instance, [80] and [81] for RTP and [83] for SRT). If these uplink ingest formats are included in the final TR, a new 5.4.2.X clause should be added, describing the impact of encapsulating these non-HTTP protocols in QUIC.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.4.3\tDeployment Architectures",
                            "text_content": "A minimal deployment architecture that would provide HTTP/3 as transport for downlink and uplink media streaming is shown in figure 5.4.3.1-1.\nThe deployment architecture for HTTP/3 is depicted in Figure 5.4.3.1-1, illustrating the various components and their interconnections. The figure showcases the network's structure, including the server, client, and edge devices, as well as the network's routing and forwarding mechanisms. The architecture is designed to support efficient and reliable communication, with a focus on minimizing latency and ensuring high-speed data transfer.\nFigure 5.4.3.1-1: Deployment Architecture for HTTP/3\nThe addition of HTTP/3 as a supported protocol at reference points M2 and M4 in the 5G media streaming architecture has little effect on the overall architecture. For example, a 5G System using HTTP/3 would resolve Fully-Qualified Domain Names (FQDNs) in the same way as with previous versions of HTTP, as described in annex B of TS 26.501 [15].\nThe biggest impact would be on implementations adjusting the endpoints they expose.\nTo use HTTP/3 for downlink or uplink media streaming, the 5GMS AS exposes HTTP/3 endpoints at reference points M2 and M4. This is in addition to the HTTP/1.1 and (optionally) HTTP/2 endpoints, as described in clause 6.2.1.2 of TS 26.512 [15].\nIn the following discussion, the term HTTP/3 client is used for the entity that initiates an HTTP/3 connection, and the term HTTP/3 server is used for the entity that the HTTP/3 client wishes to communicate with.\nTo use HTTP/3 for pull-based content ingest, the 5GMSd Application Provider exposes an HTTP/3-based origin endpoint to the 5GMSd AS at reference point M2d. This is in addition to the HTTP/1.1 and (optionally) HTTP/2 endpoints, as described in clause 6.2.1.2 of TS 26.512 [15]. Here, the 5GMS AS acts as an HTTP/3 client, the 5GMSd Application Provider acts as an HTTP/3 server, and HTTP operation proceeds as usual at M2d.\nTo use HTTP/3 for push-based content ingest, the 5GMSd AS exposes an HTTP/3-based origin endpoint to the 5GMSd Application Provider at reference point M2d. Here, the 5GMSd Application Provider acts as an HTTP/3 client, the 5GMS AS acts as an HTTP/3 server, and HTTP operation proceeds as usual at M2d.\nTo use HTTP/3 between the 5GMSd Client and the 5GMSd AS at reference point M4d, the 5GMSd Client acts as an HTTP/3 client, and the 5GMS AS acts as an HTTP/3 server, so that HTTP operation would proceeds as usual at M4d.\nBecause, as described in clause 6.2.1.2 of TS 26.512 [15], the 5GMSd Application Provider may use any supported HTTP protocol version for push-based content ingest at interface M2d, and the Media Stream Handler may use any supported HTTP protocol version at interface M4d, no other changes to the architecture are needed.\nTo use HTTP/3 for uplink media streaming, the 5GMSu AS exposes an HTTP/3-based endpoint to the 5GMSu Client at interface M4u. Here, the 5GMSu Client acts as an HTTP/3 client, the 5GMS AS would act as an HTTP/3 server, and HTTP operation proceeds as usual at M4u.\nSeparately, the 5GMSu AS may expose an HTTP/3-based endpoint to the 5GMSu Application Provider at reference point M2u for media egest. Here, the 5GMS AS acts as an HTTP/3 client, the 5GMSu Application Provider acts as an HTTP/3 server, and HTTP operation proceeds as usual at M2u.\n5.4.3.4\tUsage of HTTP/3 at reference point M5\nEditor’s Note: This section should be filled in as other key issues (clause 5.3 on traffic identification, clause 5.12 on network slicing) progress.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.4.4\tMapping to 5G Media Streaming and High-Level Call Flows",
                            "text_content": "Using HTTP/3 for 5GMS functions that currently use earlier versions of HTTP (either HTTP/1.1 or HTTP 2/) can provide performance improvements, such as:\n1.\t“Single-threading” HTTP requests and responses – HTTP/1.1 doesn’t have any way of disambiguating response packets when multiple requests are outstanding on a connection, so the server sends responses as “next request received, next response returned”, even if the HTTP client has “pipelined” multiple requests without waiting for responses to its outstanding requests.\n2.\tAvoiding TCP “Head-of-Line” (“front-of-queue”) blocking – both HTTP/1.1 and HTTP/2 use TCP, so a missing response packet blocks all further response packets from being delivered to the application until the missing response packet has been detected and successfully retransmitted by TCP.\n3.\tSetting up connections in at most one “Round-Trip Time”, or RTT – HTTP/3 can set up a new connection in a single RTT. This is significantly faster than HTTP/1.1 or HTTP/2, because they use TCP, which requires a three-way TCP handshake, and then at least one more RTT to perform a TLS 1.3, and potentially multiple RTTs.\nBut beyond these performance improvements, there are very few impacts of adding the capability to use HTTP/3 to high-level call flows in 5GMS environments.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.4.5\tPotential open issues",
                            "text_content": "Most of the potential questions previously identified in clause 5.4.1 don’t appear to be continuing concerns, as HTTP/3 has been deployed on the Internet at scale. A few open issues are worth noting here.\nBecause so many media providers have used HTTP-based transport mechanisms, they have been forced to provide “workarounds” to overcome the TCP-related deficiencies that HTTP implementations were forced to deal with. Confirming with the predominant implementors of HLS, MPEG-DASH, SRT, and even RTP what their timeframes are for versions of these protocols that take advantage of HTTP/3 capabilities would be useful, but these versions are already starting to appear. Preliminary proposals for “Tunnelling SRT over QUIC” [SRT-QUIC], and multiple proposals for RTP over HTTP/3, or even directly over QUIC, have been submitted to the IETF.\nOne well-recognized impediment to HTTP/3 deployment in the broader Internet is that it is carried over QUIC, which is a well-behaved transport protocol that detects and responds to path congestion, but QUIC runs over the UDP protocol, which is not understood to be well-behaved. Traditional UDP protocols have been query–response protocols, such as DNS domain name resolution (\"what is the IP address for this domain name?\" followed by \"This is the IP address for that domain name\"), and normally use well-known port numbers (if you send a UDP packet to port 53, network firewalls will assume that it is a DNS query, and unlikely to cause congestion).\nHTTP/3, like any other protocol running over QUIC, will look like a highly encrypted UDP protocol, and it might use the UDP port number that matches the TCP port number of the same protocol running over TCP, but that is not a requirement, so network operators often investigate UDP packets being sent to an unfamiliar port number, especially if that traffic does not seem to be simple query-response traffic.\nIf their investigation is not reassuring, they may block UDP packets being sent to an unfamiliar port number at an unfamiliar IP address, and even if they don’t block that traffic, they may rate-limit the traffic to prevent their network links being overwhelmed by unknown traffic that might not respond to congestion indications. So, on the Internet, HTTP applications that attempt to use HTTP/3 are prepared to fall back to HTTP/2 or even HTTP/1.1 over TCP, which is more reassuring for network operators.\nAdaptive streaming clients are implemented to overcome the TCP-related deficiencies that HTTP implementations were forced to deal with. Today’s adaptive streaming clients are typically not aware that they are operating on top of HTTP/3 and QUIC instead of HTTP/1.1 and TCP. A DASH client as documented in clause 13 of TS 26.512 [?] includes some typical functions that may be impacted by operation on top of HTTP/3, in particular:\n- \tThroughput estimation: An estimate of the network throughput from the 5GMSd Application Server, which is typically computed as the object size divided by the download time where the download time is the time difference between the first and the last bytes received for that object. According to [DASH-QUIC], measuring the throughput of multiplexed audio and video streams over a single UDP socket results in additional response latency for the (much smaller) audio segments, whose individual throughput is not captured during the calculation of channel throughput.\n-\tRequest Scheduling: The adaptive streaming client schedules requests under the assumption of TCP operation. It typically operates for example audio and video on two HTTP sessions with separate sockets, and each of the sockets maintains its own independent socket buffer. By contrast, requests for audio and video are typically multiplexed onto a single HTTP/3 session on a single UDP socket with a single socket buffer. Therefore, the HTTP responses from both the streams interfere, and a higher response rate for one stream affects the queuing delay for the responses on the other stream.\nBased on these operations, it is important that the adaptive streaming client:\n1.\tIs aware that it is operating on top of HTTP/3.\n2.\tAdapts its operation based on HTTP/3 properties\nDetails are for further study.\n5G Media Streaming provides the ability to support regular OTT media streaming by providing additional and auxiliary information between the Media Session Handler and the 5GMSd AF. Supported functions in Rel-16 include telco CDN, network assistance and for example metrics reporting. It would be appropriate to adjust 5GMS function to HTTP/3 based delivery. As an example, certain DASH metrics are designed for TCP based streaming and would preferably be updated to account for HTTP/3 based delivery.\nEditor’s Note: Identify the impact of including QLOG events on 5GMS metrics reporting.\nClause 6.2.1.2 of TS 26.512 [15] describes the required and supported versions of HTTP for the 5GMS AF and 5GMS AS. For these functions to use HTTP/3, that clause must be updated, to add HTTP/3 as a supported HTTP version.\nIn addition to that update, it will be necessary to decide whether support for HTTP/3, and use of HTTP/3, should be required, encouraged, or permitted, over each of the relevant reference points.\nGiven our expectations for the pace of HTTP/3 deployment in 3GPP environments, our recommendation would be to permit HTTP/3 over most of the relevant reference points, in order to allow operators to plan for, and gain operational experience with, HTTP/3 usage in their environments.\nHTTP/3 is ready at this time for use by some 3GPP operators with some types of 5GMS streaming applications, but the actual pace of deployment at any specific 3GPP operator will be based on\n1.\tThe availability of HTTP/3 implementations on UEs, 5GMS AF instances, and 5GMS AS instances.\n2.\tThe ability of operators and end users to see improvements in QoE with HTTP/3, which depends on the choice of streaming protocols in use, and support for HTTP/3 transport in those streaming protocols.\n3.\tThe benefits of HTTP/3 on media plane interfaces (M2, M4) may realize more benefit than control plane interfaces (M1, M5), although, for example, there may be benefits from multiplexing M5 transactions into a single long-lived HTTP/3 session.\n4.\tThe readiness of a 3GPP operator to support HTTP/3 and the underlying QUIC protocol, which may involve more than 5G Media Streaming. If the operator plans to use HTTP/3 in Service-Based Architecture, or plans to use QUIC in ATSSS, the operator may choose to deploy HTTP/3 for 5GMS with those other usages in mind.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.4.6\tCandidate Solutions",
                            "text_content": "Editor’s Note: Provide candidate solutions (including call flows) for each of the identified issues.\nEditor’s Note: Contribution pending.\n5.4.7\tConclusion and Recommendations\nThe study of this Key Issue has explored the ways in which the latest version of HTTP, HTTP/3, can be deployed to support the 5G Media Streaming architecture, and the potential open issues arising from this deployment.\n1.\tBecause the architectural impact of moving from HTTP/1.1 or HTTP/2 to HTTP/3 on any 5GMS reference point is limited, this study has focused on minimal collaboration scenarios and deployment architectures for simplicity.\nThe study of this Key Issue makes the following recommendations:\n1.\tSA4 should begin work on updating 5GMS stage three specifications for reference points that currently use HTTP to allow the use of HTTP/3, to allow early deployment and to identify any unforeseen open issues with using HTTP/3 in a 5G System.\n2.\tAt this time, support for HTTP/3 in 5GMS specifications, and usage of HTTP/3, should be allowed, but not required.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.5\tUplink media streaming",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.5.1\tDescription",
                            "text_content": "Uplink media streaming functionality is currently under-specified in TS 26.501 [15] and TS 26.512 [16]. This part of the study investigates the gaps and potential solutions for completing the uplink streaming procedures, and associated protocols and APIs.\nThe original focus of Rel-16 3GPP TS 26.501 [15] is on the overall system architecture, description of high-level procedures and call flows pertaining to downlink media streaming services.\nIn TS 26.501, there is significant imbalance in the scope and details of the described procedures for downlink vs. uplink media streaming. Key issues include the following:\n1.\tThe procedures for downlink media streaming include session establishment, provisioning of various types of configuration information, metrics reporting, consumption reporting, dynamic policy and network assistance. In comparison, the described procedures for uplink media streaming are limited to session management, remote control, and network assistance. It is unclear for uplink streaming whether and how the configurations for content preparation, content protocols discovery, dynamic policy, metrics reporting, etc., should be defined and how the associated functions will operate.\n-\tAbsent in clause 6 are procedural description and call flow regarding QoE metrics collection and reporting in uplink media streaming as compared to the presence of such text  in clause 5.5 on metrics collection and reporting in downlink media streaming.\n2.\tFor downlink streaming, it is described that access to Service Access Information by the 5GMSd Client may be provided either over M8d by the Application Provider, or else fetched by the Client via M5u. For uplink streaming, the solely described method for the 5GMSu Client to obtain Service Access Information is via application metadata delivery over M8u. The only exception to this rule is the alternative method for provisioning Service Access Information to the 5GMSu Client by the 5GMSu AF, associated with remote control sessions in reference to remote control use cases and operational mechanisms in the context of FLUS (Framework for Live Uplink Streaming) as described in TR 26.939 [13] and TS 26.238 [14]. However, it should be noted that due to the limited description of the relationship between the uplink streaming framework and use cases, defined procedures and APIs in TS 26.512, it is unclear whether or how remote control sessions associated with uplink streaming delivery can make use of those interface procedures and APIs.\n3.\tClause 4.3 is missing the description of Service Access Information parameters for a metrics configuration set pertaining to uplink media streaming, as compared to the presence of such information for downlink media streaming in clause 4.2.3. In particular, the “Metrics” parameter of the downlink streaming metrics configuration set is explicitly bound to the 3GPP “metrics” scheme and corresponds to one or more of the QoE metrics for either a progressive download or 3GP-DASH streaming service as defined in TS 26.247 [26]. On the other hand, given the lack of definition by SA4 of uplink streaming QoE metrics collection and reporting related functionality for existing application service specifications, there is no associated list of metrics on collection and reporting by the 5GMSu Client that can be referenced. Therefore, the following items are studied:\na.\tIdentify the quality metrics for uplink streaming.\nb.\tIdentify the subset of metrics in a. that can be collected by UE and cannot be collected by the network entities such as the 5GMSu AF or the 5GMSu AS.\n4.\tFor downlink streaming, the consumption reporting provides reports of the usage of download streaming of one single content.  However, any contribution reporting from UE for uplink streaming currently is not addressed. Therefore, the following items are studied:\na.\tIdentify the parameters useful for contribution reporting including the user’s initiated and interactivity events, as well as the user’s preferences for the uplink session such as hiding or reporting the location.\nb.\tIdentify the subset of parameters in a. that can be collected by UE that cannot be collected by the network entities such as the 5GMSu AF or the 5GMSu for reporting the usage pattern to the Application Provider.\nc.\tComparing the UE direct reporting of parameters (and metrics in item 3, above) to the collection of those parameters and metrics by the EVEX data collection AF.\nSimilar to TS 26.512, the originally-defined features, protocols and APIs for 5GMS services mainly pertain to downlink media streaming services. More recently, as part of the specification maintenance process, additional descriptive, clarification and corrective text towards supporting uplink streaming services has been incorporated. However, remaining shortcoming include:\n1.\tThe latter informationis centered on identifying relevance of existing and downlink streaming centric interface functionality for uplink streaming. For instance, provisioning and subsequent execution of content protocol discovery, dynamic policy invocation, and metrics reporting are regarded as applicable to support for uplink media streaming services. Also, content preparation via M1-based configuration of Content Preparation Templates may be considered a means for defining manipulations by a 5GMSu AS of media content uploaded from the 5GMSu Client. Such content manipulation may be associated with network-based media processing (NBMP) of uplink-delivered streaming media content (e.g., user-generated content of social media services, professionally-produced uplink streaming of sports events or concerts) as defined in FLUS [13] and further evaluated in the FS_FLUS_NBMP study item. However, further assessment of the potential linkage between content preparation and NBMP should be conducted.\n2.\tAlthough the Metrics Reporting Configuration resource as part of M1 provisioning procedures and described in clause 4.3.9 is intended to apply to either downlink or uplink media streaming, the corresponding data model of that resource (see clause 7.8.3) contains no explicitly-referenceable metrics for collection and reporting associated with uplink streaming services. This is due to the absence of a 3GPP-defined metrics scheme for uplink media streaming as it exists for downlink media streaming (e.g., the 3GPP scheme urn:‌3GPP:‌ns:‌PSS:‌DASH:‌QM10).\n-\tIt would be desirable in this study to identify a candidate set of QoE metrics associated with uplink media streaming services, and as specified by a 3GPP-defined metrics scheme, to be collected by the 5GMSu Client and reported to the 5GMSu AF.\n-\tUp to now, in the development of the 5GMS architecture and associated protocols and APIs, very little attention has been given to defining control plane functionality that can offer unique/beneficial features to the end-user, network operator or Application Provider in the context of uplink media streaming service operation. Such value-added functionality could be enabled by leveraging the information available in the 5GMS network (e.g., subscription class, service characteristics, user/device mobility, network conditions) and which may be static or dynamic in nature. This is also an area that should be further studied.\nTS 26.238 provides the following features:\n1.\tThe FLUS Control Source may discover multiple FLUS sinks.\n2.\tThe FLUS Control Source may discover the capabilities of each discovered FLUS Sink, including its network-based media processing capabilities.\n3.\tThe FLUS Control Source may also request a FLUS Sink to perform media processing.\n4.\tThe UE capabilities (formats, connectivity protocol, remote control) may be discovered by a FLUS Control Sink.\nTS 26.512 uplink streaming currently lacks the above features.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.5.2\tCollaboration Scenarios",
                            "text_content": "Editor’s Note: Study collaboration scenarios between the 5G System and Application Provider for each of the key topics.\nA set of key collaboration scenarios between an 5GMSu Application Provider and the 5G System Provider is described below.\nScenarios associated with Media Plane only collaboration and which may also involve downlink media distribution are presented first. Subsequently, scenarios pertain to both Control Plane and Media Plane collaboration and which may or may not involve downlink media distribution are presented.\nNOTE:\tIn the collaboration scenario descriptions and diagrams below, an interface or API marked with a prime (′), e.g., M1′ or M2u′, denotes that while that interface/API functionally maps to its 3GPP-defined counterpart (e.g., M1 or M2u), its protocol and format are defined by the 5GMSu Application Provider. The implementation of these interfaces is up to the 5GMSu Application Provider discretion.\nThis scenario pertains to a media plane only collaboration for which the 5GMSu AS is deployed in the trusted domain. Here, the 5GMS System Provider is assumed to offer uplink streaming capabilities as a service to an external 5GMSu Application Provider.\nNOTE:\tAlthough a Provisioning Session is shown in Figure 5.5.2.2-1 between the (external) 5GMSu Application Provider and the 5GMSu AF, due to the absence of the M5u interface in this diagram, there is no control plane collaboration between the 5GMSu Application Provider and the 5GMS System Provider.\nThe figure depicts a collaboration network with 10 nodes, each represented by a circle. The nodes are interconnected through a series of lines, forming a network of communication paths. The figure illustrates the various collaboration methods, such as direct, indirect, and hybrid, and their respective advantages and disadvantages.\nFigure 5.5.2.2-1: Collaboration 1\nThis scenario pertains to a media plane only collaboration for which the 5GMSu AS is deployed in the external domain and the 5GMSu AF is not involved. Specifically, the M1′ and/or M2u′ protocols do not follow 3GPP specifications.\nThe figure depicts a collaboration network with two nodes, labeled A and B, connected by a line. The nodes are connected by a cable, and the network is designed to facilitate communication between the two nodes.\nFigure 5.5.2.2-1: Collaboration 2\nIn this collaboration scenario, both the 5GMSu AS and 5GMSu AF are present. The 5GMSu AS resides in the external domain and does not employ 5GMS protocols and formats for uplink media reception from the 5GMSu Client, nor for content egest. The 5GMSu AF is used to interact with the 5G System, e.g., for dynamic policy invocation and/or other uplink streaming related network features such as metrics reporting and network assistance).\nThe figure depicts a collaboration network with three nodes, each labeled with a unique number. The network is designed to facilitate communication and collaboration among the three nodes, with each node having a unique role and connection to the others. The nodes are interconnected through a series of lines, forming a network that allows for efficient communication and information sharing.\nFigure 5.5.2.3-1: Collaboration 3\nIn this collaboration scenario, both the 5GMSu AS and 5GMSu AF are present and follow 3GPP specifications. Both the 5GMSu AS and 5GMSu AF reside in the external DN/domain.\nThe figure depicts a collaboration diagram for a 5G network, illustrating the various collaboration points between different entities such as base stations (BTS), user equipment (UE), and other network elements. The diagram highlights the importance of collaboration in ensuring efficient and reliable communication in a 5G network.\nFigure 5.5.2.4-1: Collaboration 4\nThis scenario is similar to collaboration scenario 4, with the exception that the 5GMSu AS and 5GMSu AF reside in the trusted DN/domain. An additional difference from collaboration scenario 4 is that the M2u API is used by the external 5GMSu Application Provider for content egest.\nThe figure depicts a collaboration network with five nodes, each labeled with a unique number and color. The nodes are interconnected through a series of cables, forming a network that facilitates communication and collaboration among the participants. The color-coded labels indicate the specific roles and functions of each node, such as a leader, a follower, or a facilitator. The network is designed to support various communication protocols, ensuring seamless and efficient collaboration.\nFigure 5.5.2.5-1: Collaboration 5\nThis scenario represents a hybrid, i.e. end-to-end form of collaboration across uplink media streaming and downlink media streaming services. An external 5GMS Application Provider relies on the 5GMS System Provider to support both the uplink streaming media transmission by 5GMSu Clients and subsequent distribution of that content via downlink media streaming for reception by 5GMSd Clients.\nEditor’s Note: The study on the key topic “Content Preparation” includes a use case whereby content preparation is used between uplink and downlink media streaming, and that use case can be considered as a specific example of this collaboration scenario.\n\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.5.3\tDeployment Architectures",
                            "text_content": "Editor’s Note: Based on the 5GMS Architecture, develop one or more deployment architectures that address the key topics and the collaboration models.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.5.4\tMapping to 5G Media Streaming and High-Level Call Flows",
                            "text_content": "Figure 5.5.4.1-1 provides a high-level call flow for the scenario depicted in clause 5.5.2.2.\nThe figure depicts a collaboration scenario 1 call flow, illustrating the flow of calls between two participants. The flow starts with a call initiated by the first participant, followed by a call initiated by the second participant, and finally a call initiated by the third participant. The flow is depicted with different colored lines representing the different stages of the call, and arrows indicating the direction of the call. The figure also includes labels for each participant, such as \"First Participant\" and \"Second Participant,\" and the flow of the call is labeled with the corresponding participant's name.\nFigure 5.5.4.1-1: Collaboration scenario 1 Call flow\nSteps:\n1.\tThe 5GMSu Application Provider creates a Provisioning Session for uplink streaming with the 5GMSu AF.\n2.\tThe 5GMSu Application Provider creates a Content Publishing Configuration as part of the Provisioning Session that defines the instructions for content egest (M1u).\n3.\tThe 5GMSu AF, based on the received Content Publishing Configuration, requests the 5GMSu AS to instantiate the content preparation process (M3u).\n4.\tThe 5GMSu AS initialises the content preparation process.\n5.\tThe 5GMSu AS acknowledges the initialisation of the required process (M3u).\nNOTE:\tM3u procedures between the 5GMS AF and the 5GMS AS are outside the scope of TS 26.512 [16].\n6.\tThe 5GMSu AF acknowledges the successful creation of the Content Publishing Configuration to the 5GMSu Application Provider (M1u).\nAt some later point in time:\n7.\tThe 5GMSu Application Provider optionally provides Service Access Information to the 5GMS-Aware Application (M8, out of scope).\n8.\tUplink media streaming starts from the 5GMSu Client to the 5GMSu AS (M4u).\n9.\tMedia streaming egest starts from the 5GMSu AS to the 5GMSu Application Provider (M2u).\nFinally:\n10.\tThe 5GMSu AS releases its resources after observing a period of inactivity.\nNOTE:\tStep 10 is implementation-dependent.\nFigure 5.5.4.2-1 provides a high-level call flow for the scenario depicted in clause 5.5.2.3.\nIn this figure, we see a collaboration scenario 2 call flow, illustrating the flow of calls between two participants. The flow starts with the caller initiating a call, followed by the call being transferred to the first participant, and then to the second participant. The flow is depicted with different colored lines representing the different stages of the call, and arrows indicating the direction of the call. The figure also includes labels for each participant, such as \"Caller\" and \"Recipient,\" and the flow is labeled with the call number and the duration of the call. This figure provides a visual representation of the call flow and helps in understanding the communication process in a collaborative scenario.\nFigure 5.5.4.2-1: Collaboration scenario 2 Call flow\nSteps:\n1.\tThe 5GMSu Application Provider creates a Provisioning Session for uplink streaming with the 5GMSu AF (M1u′).\n2.\tThe Provisioning function requests the 5GMSu AS to initialise the required content prepatation process (M3u′).\n3.\tThe 5GMSu AS initialises the content preparation process.\n4.\tThe 5GMSu AS acknowledges the initialisation of the required process (M3u′).\n5.\tThe Provisioning function acknowledges the successful creation of the Provisioning Session to the 5GMSu Application Provider (M1u′).\nAt some later point in time:\n6.\tThe 5GMSu Application Provider provides Service Access Information to the 5GMS-Aware Application (M8, out of scope).\n7.\tUplink media streaming starts from the 5GMSu Client to the 5GMSu AS (M4u).\n8.\tMedia streaming egest starts from the 5GMSu AS to the 5GMSu Application Provider (M2u).\nFinally:\n9.\tThe 5GMSu AS releases its resources after observing a period of inactivity.\nNOTE:\tStep 9 is implementation-dependent.\nThe figure depicts a collaboration scenario 3 call flow, illustrating the flow of calls between different entities within a network. It shows the various steps and interactions that occur during a call, such as initiating the call, routing it to the appropriate party, and managing the call's duration. The figure provides a visual representation of the complex network interactions and communication processes that occur in a collaborative call flow.\nFigure 5.5.4.3-1: Collaboration scenario 3 Call flow\nSteps:\n1.\tThe 5GMSu Application Provider creates a Provisioning Session with its internal Provisioning function (M1u′).\n2.\tThe Provisioning function requests the 5GMSu-like AS to initialise the required content preparation process instantiation (M3u′).\n3.\tThe 5GMSu-like AS instantiates the content preparation process.\n4.\tThe 5GMSu-like AS acknowledges the Provisioning the instantiation of required process (M3u′).\n5.\tThe Provisioning function acknowledges successful provisioning to the 5GMSu Application Provider (M1u′).\n6.\tThe 5GMSu Application Provider creates a Provisioning Session for uplink streaming with the 5GMSu AF.\nX.\tThe 5GMSu Application Provider creates a Content Publishing Configuration as part of the Provisioning Session that defines the instructions for content egest (M1u).\nAt some later point in time:\n7.\tThe 5GMSu Application Provider optionally provides Service Access Information to the 5GMS-Aware Application (M8, out of scope).\n8.\tThe 5GMS-Aware Application requests the 5GMSu Client to start an uplink streaming session (M6u/M7u).\n9.\tThe 5GMSu Client optionally (and in the case step 5 was not performed) requests Service Access Information from the 5GSMu AF (M5u).10.\tUplink media streaming starts from the 5GMSu Client to the 5GMSu-like AS (M4u′).\n11.\tMedia streaming egest starts from the 5GMSu-like AS to the 5GMSu Application Provider (M2u′).\nFinally:\n12.\tThe 5GMSu AS releases its resources after observing a period of inactivity.\nNOTE:\tThis step is implementation dependent.\n\nFigure 5.5.4.4-1: Collaboration scenario 5 Call flow\nSteps:\n1.\tThe 5GMSu Application Provider creates a Provisioning Session for uplink streaming with the 5GMSu AF (M1u′).\n2.\tThe 5GMSu Application Provider creates a Content Publishing Configuration as part of the Provisioning Session that defines the instructions for content egest (M1u′).\n3.\tThe 5GMSu AF, based on the received publishing configuration, requests the 5GMSu AS to confirm the availability of content resources for egest (M3u).\nNOTE:\tM3u procedures between the 5GMS AF and the 5GMS AS are outside the scope of TS 26.512 [16].\n4.\tThe 5GMSu AF acknowledges the successful creation of the Content Publishing Configuration to the 5GMSu Application Provider (M1u′).\nAt some later point in time:\n5.  The 5GMSu Application Provider requests that the 5GMSu AF initialises the content preparation process (M1u′).\n6.\tThe 5GMSd AF requests initialisation of the content preparation process (M3u).\n7.\tThe 5GMSd AS initialises the content preparation process, if is not already running (M3u).\n8.\tThe 5GMSd AS acknowledges the initialisation of the content preparation process (M3u).\n9.  The 5GMSu AF acknowledges the initialisation of the cotent preparation process  (M1u′).\n10.\tThe 5GMSu Application Provider provides Service Access Information to the 5GMS-Aware Application (M8, out of scope).\n11. The 5GMS-Aware Application requests the 5GMSu Client to start an uplink streaming session (M6u/M7u).\nAlternatively:\n12.\tThe 5GMS-Aware Application requests the 5GMSu Client to start an uplink streaming session (M6u/M7u).\n13.\tThe 5GMSu Client requests Service Access Information from the 5GSMu AF (M5u).\n14.\tThe 5GMSd AF requests initialisation of the content preparation process (M3u).\n15.\tThe 5GMSd AS initialises the content preparation process, if is not already running (M3u).\n16.\tThe 5GMSd AF acknowledges the initialisation of the content preparation process (M3u).\n17.\tThe 5GMSMu AF provides Service Access Information to the 5GMSu Client (M5u).\nThen:\n18.\tUplink media streaming starts from the 5GMSu Client to the 5GMSu AS (M4u).\n19.\tMedia streaming egest starts from the 5GMSu AS to the 5GMSu Application Provider (M2u′).\nFinally:\n20.\tThe 5GMSu AS releases its resources after observing a period of inactivity.\nNOTE:\tThis step is implementation-dependent.\n\nFigure 5.5.4.5-1: Collaboration scenario 5 Call flow\nSteps:\n1.\tThe 5GMSu Application Provider creates a Provisioning Session with the 5GMSu AF.\n2.\tThe 5GMSu Application Provider requests the 5GMSu AF to create one Content Publishing Configuration that defines the instructions for content egest (M1u).\n3.\tThe 5GMSu AF, based on the received Content Publishing Configuration, requests the 5GMSu AS to confirm the availability of content resources for egest.\nNOTE 1:\tM3u procedures between the 5GMS AF and the 5GMS AS are outside the scope of TS 26.512 [?].\n4.\tThe 5GMSu AF acknowledges to the 5GMSu Application Provider the successful creation of the Content Publishing Configuration (M1u).\nAt some later point in time:\n5.\tThe 5GMSu Application Provider requests that the 5GMSu AF initialises the content preparation process (M1u).\n6.\tThe 5GMSd AF requests initialisation of the content preparation process (M3u).\n7.\tThe 5GMSd AS initialises the content preparation process, if is not already running (M3u).\n8.\tThe 5GMSd AS acknowledges the initialisation of the content preparation process (M3u).\n9.  The 5GMSu AF acknowledges the initialisation of the cotent preparation process  (M1u).\n10.\tThe 5GMSu Application Provider provides Service Access Information to the 5GMS-Aware Application (M8, out of scope).\n11. The 5GMS-Aware Application requests the 5GMSu Client to start an uplink streaming session (M6u/M7u).\nAlternatively:\n12.\tThe 5GMS-Aware Application requests the 5GMSu Client to start an uplink streaming session (M6u/M7u).\n13.\tThe 5GMSu Client requests Service Access Information from the 5GSMu AF (M5u).\n14.\tThe 5GMSd AF requests initialisation of the content preparation process (M3u).\n15.\tThe 5GMSd AS initialises the content preparation process, if is not already running (M3u).\n16.\tThe 5GMSd AF acknowledges the initialisation of the content preparation process (M3u).\n17.\tThe 5GMSMu AF provides Service Access Information to the 5GMSu Client (M5u).\nThen:\n18.\tUplink media streaming starts from the 5GMSu Client to the 5GMSu AS (M4u).\n19.\tMedia streaming egest starts from the 5GMSu AS to the 5GMSu Application Provider (M2u).\nFinally:\n20.\tThe 5GMSu AS releases its resources after observing a period of interactivity.\nNOTE:\t\tThis step is implementation dependent.\nAs is shown, a new resource type, the Content Publishing Configuration is added. This describes the configuration of the egest (M2u) used in step 19.\nThe call flow for this collaboration scenario is described in 5.2.6.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.5.5\tPotential open issues",
                            "text_content": "The following open issues seem to exist in TS 26.512 [16]:\n1.\tLack of a standard template (or clear reference on how to use an existing standard template) for inclusion in a Content Publishing Configuration, i.e. to be able to provide content preparation instructions in a defined, interoperable format that the 5GMS AF supports through M1.\n2.\tLack of definition of protocols for media egest from the 5GMSu AS to the 5GMSu Application Provider in uplink throughvia M2u.\nNOTE:\tThe Content Protocols Discovery APIs allows the 5GMSu Application Provider to discover the supported egest protocols by 5GMSu AS. However, clause 8.1 of TS 26.512 does not currently list any specific egest protocols alongside those for downlink ingest streaming.\n3.\tLack of content publishing API, i.e. a similar functionality to Content Hosting Configuration in downlink streaming, for provisioning the uplink streaming through M1u..\n4.\tLack of Service Access Information for uplink streaming.\nFor downlink streaming, TS 26.512 [16] defines a StreamingAccess object as part of the Service‌Access‌Infromation resource. The StreamingAccess object includes a URL string that points to a media download resource or a manifest that describes a media presentation. In the case of uplink streaming, TS 26.512 does not yet specify which uplink streaming protocols are supported in M5u. Furthermore, it is not clear how the Media Session Handler would retrieve the entry point for uplink streaming to the 5GMSu AS.\nClause 5.5.1.3 describes the uplink streaming features from TS 26.238 [14] that are missing from TS 26.512 [16]. This section translates these missing FLUS features into potential new 5G Media Streaming features.\nTable 5.5.5.2 shows a list of FLUS features and the equivalent features missing from TS 26.512. Note that in this table, the missing features of TS 26.512 are only listed for further discussion below, i.e. this is not a list of proposed features to be added.\nTable 5.5.5.2-1: Mapping existing additional features of FLUS to 5GMS architecture\n\nSee the discussions below for further explanation.\nThe FLUS Discovery Server provides the means for a FLUS Control Source to discover multiple FLUS sinks and their capabilities. In the 5GMS architecture, various 5GMSd AS instances might have different capabilities. However, TS 26.512 does not provide a framework for describing 5GMS AS capabilities or any capability-based discovery mechanism.\nTR 26.803 [46] proposes an edge-enabled 5GMS architecture for discovering EAS-enhanced 5GMSd AS instances and their capabilities by an Edge-Enabled Client (EEC) using EAS discovery filters. One possible way to discover 5GMSu AS capabilities and/or to instantiate a new 5GMSu AS with the desired capabilities is to use the procedure described in TS 26.803 [46] for the 5GMSu AS. This approach requires that the 5GMSu Client’s Media Session Handler supports the EEC logical function, the 5GMSu AF supports the EES logical function, and the 5GMSu AS supports the EAS logical function, as defined by TS 23.558 [47].\nIn some deployment scenarios, the request for media processing is performed by a FLUS Control Source by including a media processing document in its request to the FLUS Control Sink. Since in the present document content preparation is investigated for uplink streaming collaboration scenarios (clause 5.2.4.2 in the content preparation key topic), such functionality can also be used for media processing. If the content preparation template supports a generic media processing description framework such as NBMP, then content preparation can be used to provide equivalent functionality to media processing in the FLUS specification.\nThe 5GMS Content Preparation Template is provisioned through the M1 interface whereas in FLUS it is possible that the media processing is provisioned using the equivalent of the M5u interface.  To provide the UE with the ability to provision Content Preparation Templates, the following are possible options:\nA.\tThe 5GMSu-Aware Application (if needed) provides the desired Content Preparation Template to the 5GMSu Application Provider via M8u and then the Application Provider requests provisioning of the Content Preparation Template through M1u, or\nB.\tThe Media Session Handler in the 5GMSu Client requests the setting up of a Content Preparation Template by direct interaction with the 5GMSu AF via M5u. In this case, M5u needs to be extended to support Content Preparation Template provisioning requests from the Media Session Handler.\nThe current design supports option A. Option B seems unnecessary for the following reasons:\n-\tIt wouldn’t be scalable to maintain a separate uplink streaming Provisioning Session at the 5GMSu AF for each and every UE, especially as the number of UEs becomes large.\n-\tIn the current design, it is possible to create a separate Provisioning Session for each class of UE. In this approach, the UE signals its capabilities to the 5GMSu AF when requested Service Access Information at M5u, and then it is the task of 5GMSu AF to match the declared UE capabilities against the right uplink Provisioning Session metadata when responding to the request.\nIn the 5GMS architecture, the session is generally provisioned by the 5GMSu Application Provider. The Application Provider may already know the 5GMSu Client’s capabilities, for example through information in a user profile, or provided by the 5GMSu-Aware Application via M8u. Therefore, the need for the 5GMSu AF to discover the 5GMSu Client capabilities through M5u seems unnecessary.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.5.5.2-1: Mapping existing additional features of FLUS to 5GMS architecture",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.5.6\tCandidate Solutions",
                            "text_content": "Since TS 26.512 [16] already defines solutions for the content ingest concerning the open issues of 5.5.5, one possible approach is to allow similar data structures, APIs, and protocols for content egest.\nNOTE:\tThe candidate solution provided in the present document merely shows the desired features (by mirroring the distribution features) and is not intended as a proposed solution.\nThe existing ingest protocols can be used for egest.\nTable 5.5.6.1-1: Adding egest content protocols\n\nThe highlighted rows indicate the added protocols.\nAn M1u API, similar to the M1d Content Hosting Configuration API as used for content ingest, can be defined for content egest.\nTable 2: Operations supported by the Content Egest Configuration API\n\nAs is shown in the table, the sub-resource path in particular is changed for this resource, and other aspects remain identical to Content Hosting Configuration API.\nThe Content Publishing Configuration resource, modelled after the Content Hosting Configuration resource, is shown in Table 5.5.6.3-1.\nTable 5.5.6.3-1: Definition of Content Publishing Configuration resource\n\nNote that in the above table:\n1.\tThe Pull mode is defined when the Application Service Provider pulls the content from the 5GMSu AS, and conversely, the Push mode is defined when the 5GMSu AS pushed the content to Application Service Provider.\n2.\tEach parameter description is updated based on item 1.\n3.\tSince in the Pull mode, the Application Service Provider needs to have the content URL addresses, it is assumed that that information is provided by other means (e.g. through M8u by the 5GMSu Aware Application).\n4.\tThe DistributionConfigurations property in the Content Hosting Configuration resource for M1d is here replaced by the ContributionConfigurations property.\n5.\tThe ContributionConfigurations.contentPreparationTemplateId property identifies the Content Preparation Template to be used. Like the Content Preparation Template resource as defined for downlink streaming in TS 26.512 [16], the data model of this resource is determined by its MIME content type.\nThe StreamingAccess object in the Service Access Information resource can be extended to support uplink streaming entry points. This object may include the following information:\n-\tA URN, indicating an uplink streaming protocol provisioned for use over M4u (e.g. MPEG DASH, HLS, DASH-IF Ingest profile 1 or profile 2)\n-\tThe entry URL for the above service (i.e. address of the 5GMSu AS for uplink streaming delivery by Media Streamer over M4u).\nAdditionally, the StreamingAccess property may include alternative media uplink streaming protocols for the same Provisioning Session by making it an array. For instance, two different entry points may be described in the Service Access Information for uplink streaming using DASH-IF Ingest profile 1 and profile 2.\nAn example of such extension is shown in the following table:\nTable 5.5.6.4-1: Definition of ServiceAccessInformation resource\n(based on an extract from clause 11.2.3.1 of TS 26.512 [16])\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.5.6.1-1: Adding egest content protocols",
                                    "table number": 7,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 2: Operations supported by the Content Egest Configuration API",
                                    "table number": 8,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.5.6.3-1: Definition of Content Publishing Configuration resource",
                                    "table number": 9,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.5.6.4-1: Definition of ServiceAccessInformation resource\n(based on an extract from clause 11.2.3.1 of TS 26.512 [16])",
                                    "table number": 10,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.5.7\tConclusion",
                            "text_content": "This key issue has explored five collaboration scenarios for uplink streaming in the 5G Media Streaming architecture. For each scenario, a high-level call flow has been developed. Several gaps were identified during this process. Additionally, the uplink steaming features of TS 26.501 [15] and TS 26.512 [16] were compared with both TS 26.238 [14] as well as the download streaming features of TS 26.501 and TS 26.512, and the missing features are identified.\nAs this study shows, uplink streaming is severely underspecified in TS 26.501 and TS 26.512 in Release 16, and the following gaps are identified:\n1.\tCollaboration scenarios and their associated call flows described in clauses 5.5.2 and 5.5.3.\n2.\tProtocol(s) for egesting uplink streaming to the 5GMSu Application Provider through M2.\n3.\tContent Publishing Configuration API to enable a 5GMSu Application Provider to create, update, retrieve and delete a publishing template through M1.\n4.\tContent Publishing Template to describe the publishing configuration from the 5GMSu AS to the 5GMSu Application Provider, including content preparation prior to egest.\n5.\tEntry point for the UE’s uplink media streaming to the 5GMSu AS that is obtained by the UE through M5.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.6\tBackground traffic",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.6.1\tDescription",
                            "text_content": "Mobile Network Operators (MNO) are faced with the challenge of overload of their networks during peak hours. The following diagram shows a typical distribution of traffic over the day hours in a residential area:\nThe figure depicts a traffic distribution over time, illustrating how different types of traffic are routed through different paths. This can be useful for understanding the network's performance and identifying bottlenecks.\nFigure 5.6.1-1:\tExample of traffic distribution over time\nNote that the traffic distribution is also highly dependent on the geographic area. For instance, traffic distribution in a residential area maybe quite different from traffic distribution in a business or commercial area. Another example is traffic along roads during commute hours, which maybe higher by orders of magnitude than traffic during other hours.\nAs can be seen from the diagram, the traffic distribution is non-uniform/uneven throughout the day, which leads to congestion during the peak hours and very low utilization during off-peak hours. To alleviate this situation, the MNO may incentivize offloading traffic to off-peak hours to balance the network resource usage throught the day. The incentives may be provided in terms of preferential charging and guaranteed QoS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.6.2\tCollaboration Scenarios",
                            "text_content": "MNO and content provider enter an SLA that allows the content provider to distribute its content during off-peak hours to a set of receivers in a pre-determined geographic location.\nCollaboration scenarios 2,4,5,7, and 8 from [TS256.501] are potential collaboration scenarios for traffic offloading using Background Data Transfer.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.6.3\tDeployment Architectures",
                            "text_content": "There is no anticipated change to the 5G media streaming architecture to enable the usage of Background Data Transfer (BDT) for media distribution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.6.4\tMapping to 5G Media Streaming and High-Level Call Flows",
                            "text_content": "The following is a potential high-level call flow for the configuration and usage of a BDT session in 5G media streaming:\nThe figure depicts a potential call flow for a BDT session configuration and establishment, illustrating the steps involved in setting up a Business Data Transfer (BDT) session. The flow includes the following steps:\n\n1. **Setup**: The user initiates the BDT session by initiating a call to the BDT service.\n2. **Configure**: The user configures the session parameters, such as the session type, session duration, and session priority.\n3. **Establish**: The user establishes the session by initiating a call to the BDT service.\n4. **Call**: The user initiates a call to the BDT service, initiating the call flow.\n\nThe figure provides a visual representation of the steps involved in setting up a BDT session, making it easier for users to understand the process.\nFigure 5.6.4-1: Potential call flow for BDT session configuration and establishment\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.6.5\tPotential open issues",
                            "text_content": "The extensions to the client APIs, Provisioning API, and 5GMSd AF services to enable signaling and management of background data traffic sessions need to be specified.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.6.6\tCandidate Solutions",
                            "text_content": "The NEF offers the ResourceManagementOfBdt API, as defined in clause 5.4 of TS29.122 [44], to allow AF consumers to create, manage, and track Background Data Transfer (BDT) policies. The NEF also offers the ApplyingBdtPolicy API to request the application of a previously defined BDT policy for a particular UE or group of UEs.\nThe PCF offers the Npcf_BDTPolicyControl API, as defined in clause 5 of TS29.554 [55], to allow consumers to create and update BDT policies. The NF consumer may subscribe to notifications about any changes to the network conditions that affect a BDT policy.\nA BDT policy consists of multiple transfer policies, each bounded by a time window in wallclock time. The 5GMS AF will select one of the transfer policies to apply.\nBackground Data Transfer is a generic feature that may be used by an Application Service Provider to pre-load content during time periods recommended by the MNO onto a UE. This feature can be suitable for multimedia streaming services but was developed to support other use-cases (such as automotive).\nIn this potential solution, the support for background data transfer in 5GMS can be realized by the following procedures:\n1.\tProvisioning by the 5GMS Application Provider to enable the usage of background data traffic and to define the background data transfer policy. The BDT policy may be part of the general QoS policy templates.\n2.\tCreation, updating, and monitoring the usage of the background data transfer policy in collaboration with the PCF. This may be done using the procedures described in 5.6.6.1.\n3.\tCommunication of the background data transfer policy to the UE, e.g. as part of the access information.\n4.\tRegistration by the 5GMS-Aware Application (via the Media Session Handler) with the 5GMS AF to use background data transfer.\n5.\tNotification by the 5GMS AF to the Media Session Handler of an opportunity to perform background data transfer.\n6.\tActivation of the background data transfer policy for the QoS flow, over which the transfer will happen.\nProvisioning the background data transfer feature (step 1) is realized through an extension to the dynamic policy template as defined in clause 7.9.3 of TS 26.512 [16]. The dynamic policy template may, for example, be extended to include an additional property BdtReqData as defined in clause 5.6.2.3 of TS 29.554 [55].\nThe 5GMS AF uses the provisioning information to create or select a background data transfer policy within the PCF. For this purpose, it may use the Npcf_BDTPolicyControl or the ResourceManagementOfBdt API.\nOnce the policy is created, future downlink media streaming sessions will be able to use the defined background data transfer policy. The 5GMS AF provides the information about the background data transfer policy to the UE as part of the Service Access Information at reference point M5.\nThe M6 interface is extended to allow the application to request background download of content from the Media Session Handler. As a result, the Media Session Handler registers with the 5GMS AF to receive notifications about the availablity of a background data transfer opportunity. Once a download opportunity manifests itself, the 5GMS AF notifies the Media Sesssion Handler about the time window available for background content download, and the Media Session Handler will either perform the download itself, or else invoke the application to download the content. In case the MSH performs the download, appropriate extensions to the M6 API would be required to manage the access to and notification about completed/aborted download operations.\nNOTE:\tIntegration of background data transfer with 5MBS is for future study. Alignment with the xMB API should be considered as part of this.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.6.7\tConclusion",
                            "text_content": "Background Data Transfer (BDT) is a feature that is offered by the 5G System to allow for data transfer during specific time windows with pre-arranged QoS and charging policies. Both PCF and NEF offer the required APIs to configure and use BDT. The discussion and the potential solution lay out the necessary extensions to integrate BDT as part of 5GMS procedures.\nIt is recommended that normative work is started to address the following objectives:\n1.\tDefine the necessary extensions to 5GMS stage 2 and stage 3 to define the procedures and APIs to enable the use of Background Data Transfer in 5GMS, including:\na)\tProvisioning of BDT for content hosting and distribution through M1\nb)\tConfiguration of BDT and subscribe/notification for transfer opportunities and time windows through M5.\nc)\tUsage of BDT by the application through M6.\n2.\tLiaise with other relevant 3GPP groups to align on the usage of the BDT feature.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.7\tContent-Aware Streaming",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.7.1\tDescription",
                            "text_content": "Content-Aware Encoding and statistical multiplexing of services are important and relevant technologies in the media industry. The impacts and opportunities of such technologies for 5GMS is not fully understood and requires study. For example, the currently-defined 5GMSd Application Function (AF) based network assistance solution is exclusively triggered by the Media Player, which instructs the Media Session Handler to interact with the Network. It might be more efficient for such network assistance functionality to be obtained directly from the content provider based on dynamic content complexity. Greater interaction with the 5GMS Application Provider during the lifetime of a session should be studied.\nAccording to [2], if one analyses, almost any movie or television show scene by scene, you’ll notice the content has varying needs in terms of its fundamental complexity. Scenes with a lot of action and detail need a lot more bits in order to hit a quality target, whereas other scenes—say, a newsreader delivering a monologue—can achieve the same quality target with a reduced number of bits.\nAs an example, a game sequences provided for XR Traffic was encoded with x265 over 1 minute in Figure 5.7.1-1. One can see that at the same quality, the number of bits required to represent the content can be quite different.\n\nFigure 5.7.1-1: Bit rate and quality over time for an example sequence.\n(Blue bits, red PSNR in dB × 100)\nIdeally, to maintain quality, one wants the bit rate to vary over time to maintain consistent quality regardless of the complexity of the scene. Four different scene types may be considered, and they differ in complexity- easy, moderate, hard, and very hard to compress. The “very hard” content might be a panning shot over a crowd, a shot of confetti falling, or simply a scene with a lot of high motion. Scenes such as these require more bits to convert all the motion and detail into a high-quality output that can be decoded and recreated accurately. A moderate scene, perhaps a close-up of a car, or an easy scene, like a single person speaking with no camera movement, will require fewer bits to deliver the same quality target as the harder scenes. In order to most efficiently encode the entire video, ideally a rate control mode that allocates more bits to the complex scenes, and fewer bits to the easier ones.\nDifferent rate control algorithms exist:\n-\tCBR: Constant-Bit Rate encoding keeps the bit rate at a constant level, but the quality fluctuates. In ancient systems such as MPEG-2 TS, this is even addressed by sending lots of filler data just to keep the pipe constant\n-\tVBR: Variable Bit Rate encoding following the principle from above to keep the quality constant. This is often also referred to as Content-Aware Encoding nowadays (CAE).\n-\tCapped VBR: in this case the basic idea is to ensure that you have a mix of the above, i.e. a certain bit rate is never exceeded, but in case the content does not need the data rate, less data is sent.\nThe below diagram attempts to address and show these issues, but is more confusing then helpful.\nThe figure depicts a comparison of capped VBR rate control encoding (CVR) and CBR and VBR (Variable Bit Rate) transmission methods in a telecommunications network. CVR is a technique that caps the bit rate at a specific rate, while CBR and VBR are methods that adjust the bit rate based on the data rate requirements. The figure shows that CVR can achieve a higher data rate than CBR and VBR, but it also has a higher latency.\nFigure 5.7-2: Capped VBR rate control encoding compared with CBR and VBR\nVariance in bit rates for different users may also result on the device and the consumption model. For a smaller screen, quite likely quality and bit rate requirements can be lower than for example going to a large screen such as a 4K TV.\nThe 3GPP QoS model contradicts this, as typically resources and QoS parameters are assigned for a session and only GBR is addressed.\nFrom a adaptive bitaret streaming perspective, this content model needs to also be viewed as part on the streaming model, as the complexity of the content may be addressed based on the buffer availability, and also the situation of the network needs to be studied.\n1)\tOn-demand Streaming:\na.\tStationary streaming of C-VBR/CBR content: Typically one operates with receiver buffer levels of 5-30 seconds [check details in TS 26.512]. One tries to keep the buffer filled. As soon as your buffer drains below some threshold, the client triggers a down-switch to a more sustainable bit rate. Switching typically can happen at segment boundaries, for example every 2 seconds.\nb.\tStart-up and seek. In this case, one starts basically starts from an empty buffer. In order to have quick and stable start up and good quality right away, there may be a benefit to get a higher short-term bit rate from the network to fill the buffer quicker to at least the switching threshold as you would not start playback until the threshold is reached. This is a very instantaneous action and needs to be fulfilled instantanteously, at most after 1 second.\nc.\tStationary streaming of VBR/CAE content: In this case you basically operate on buffers of 5-30 seconds as above. The client typically has a map of the bit rate over time profile. In this case the client knows how much bit rate it needs for the next 5-10 seconds in order to keep the buffer stable and it can provide this information in a continuous manner to the network. The network will then grant a certain bit rate. This aspect may be fulfilled with using existing 5GMS functionalities.\n2)\tLive Streaming and especially low-latency live streaming:\na.\tGeneral: In this case the buffer is something of duration 1-5 seconds, it can be kept really low for low-latency streaming. Typically, one operates e2e latency of 3-5 seconds, so the buffer in the client is low. In addition, the client does not know the exact bit rate of the content as it is produced on the fly. Switching can typically be done every 1–2 seconds.\nb.\tStationary streaming CBR: the buffer is much more susceptible, and you may have a threshold of maybe 500 ms when the client needs a fast arriving Segment is not arriving fast enough. This aspect may be fulfilled with using existing 5GMS functionalities.\nc.\tStart-up is similar to on-demand streaming as your buffer is anyways low. So no difference.\nd.\tYet another and probably the most interesting case is the live case, for which the content and each of Representations are VBR encoded, but more following the content complexity and VBR/CAE is done as shown below. The content complexity is not known in advance, but it needs to be provided on an content ingest interface to the network. In this case, the network should provision very fast and dynamically the bit rate if needed, but can relax.\nThere are many other cases, where content complexity and device characteristics need to be taken into account when addressing quality of service.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.7.2\tCollaboration Scenarios",
                            "text_content": "In the following, difference collaboration scenarios are provided. In Figure 5.7-3, content is generated by a third-party content provider in different formats and configurations, taking into account for example:\n1)\tDifferent device types (resolution, frame rates, codecs).\n2)\tDifferent streams (target qualities and bit rates).\n3)\tEncoding parameters (CBR, VBR, etc.).\nFigure 5.7-3 illustrates the content-aware streaming system, which leverages static parameters to optimize content delivery. The system uses a content-aware algorithm to determine the optimal bitrate for each frame, ensuring that the video quality remains high while minimizing bandwidth usage. The system also includes a content-aware scheduler to dynamically adjust the bitrate based on the content's characteristics, such as the number of frames, the resolution, and the frame rate. This approach ensures that the video stream is delivered at the optimal quality while minimizing the overall bandwidth usage.\nFigure 5.7-3: Content-Aware Streaming based on static parameters\nThe network and client can make use of this information in order to optimize the streaming.\nIn a second variant, not only static information is provided, but also dynamic information with the media stream. This data is provided from the content provider to the 5G Media Streaming system and the client.\n\"Figure 5.7-4 illustrates a content-aware streaming system that dynamically adjusts its parameters based on the content being streamed. This system uses a combination of content-aware algorithms and machine learning techniques to optimize the streaming experience for users. The system can adapt to different content types and user preferences, ensuring a seamless and personalized streaming experience.\"\nFigure 5.7-4: Content-Aware Streaming based on dynamic parameters\nThe client can use the information for:\n-\tOptimizing its own quality.\n-\tActing fairly in a way that it only requests higher bit rates when the content is more complex, but leaves remaining capacity to the community.\nIn an On-Demand service, the use of the information is client controlled, i.e. the network is unaware of content complexity.\n-\tClient downloads a description of the content variations and the associated quality initially.\n-\tClient now brokers with the network for an average bit rate, but ability to request higher bit rate when content is complex\n-\tDASH client includes logic to use the VBR options smartly to ask for “boosts” ahead of time when content is complex\nLive Streaming and Ingest (network more actively included in streaming):\n-\tEncoder provides as early as possible indication that content for same quality is getting a complex.\n-\tNetwork uses this and identifies, if and how to fulfill this for the clients that request it.\n-\tTo not confuse client throughput estimation, communication between network and client is necessary.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.7.3\tDeployment Architectures",
                            "text_content": "Editor’s Note: Based on the 5GMS Architecture, develop one or more deployment architectures that address the key topics and the collaboration models.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.7.4\tMapping to 5G Media Streaming and High-Level Call Flows",
                            "text_content": "Editor’s Note: Map the key topics to basic functions and develop high-level call flows.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.7.5\tPotential open issues",
                            "text_content": "Editor’s Note: Identify the issues that need to be solved.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.7.6\tCandidate Solutions",
                            "text_content": "Editor’s Note: Provide candidate solutions (including call flows) for each of the identified issues.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.8\tNetwork Event usage",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.8.1\tDescription",
                            "text_content": "The 5GMS AF performs several critical support operations for media streaming sessions. It also is responsible for collecting information about the progress and status of media streaming sessions. This information may be of interest to the AP or to other NFs in the network.\nThee 5G architecture defines event exposure mechanisms by the AF to other NFs in the network. TS 23.501 [23] and TS 23.502 [24] define the stage 2 Exposure service that can be offered by the AF. In TS 29.517 [25], the stage 3 realization of the Event Exposure service is specified as a RESTful API.\nThe resource structure is replicated in the following figure for convenience:\n\n\nAn Event Consumer subscribes to an application event and provides a URL on which it desires to receive the related event notifications. Both periodic reporting and immediate event reporting options are available. Event Filter Information and Event Reporting Information definitions as specified in TS 23.502 [24] and TS 29.517 [25] are used by the Event Consumer to indicate the desired event parameters and method of reporting for the selected event set.\nSo far, the following AfEvents are defined:\n\nAdditional AFEvents may be defined.\nThe 5GMSd AF may subscribe for event notifications related to application sessions, and receive event notifications for these sessions. Currently, TS 26.512 [16] requires the 5GMSd AF to subscribe with the PCF for the following types of event notifications:\n-\tService Data Flow QoS notification control;\n-\tService Data Flow deactivation;\n-\tResources allocation outcome.\nAdditional events of interest to the 5GMSd AF are for further study.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "So far, the following AfEvents are defined:",
                                    "table number": 11,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.8.2\tCollaboration Scenarios",
                            "text_content": "The Application Provider (AP) is outsourcing part of its content hosting to the MNO. The AP makes use of the Provisioning APIs to configure its content distribution. The AP would like to track the usage of the network resources for the distribution of its content as well as the QoE for its mobile subscribers. At the same time, it may choose to limit access to this information by the MNO to protect the AP’s service interests and/or user’s privacy. The AP configures data collection from UEs and the 5GMSd AS(s) to identity the data to be collected as well as the permitted entities and access levels to that data. The 5GMSd AF triggers the data collection accordingly and uses the AF Event Exposure framework to notify Event consumers about collected data and events.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.8.3\tDeployment Architectures",
                            "text_content": "The deployment architecture for the data collection and exposure by the 5GMSd AF is depicted by the following figure:\nThe figure depicts the provisioning and exposure architecture of a network, illustrating the various components involved in network provisioning and exposure. It includes the network infrastructure, such as routers, switches, and firewalls, as well as the network services, such as VPNs, firewalls, and load balancers. The figure also shows the network security measures, such as encryption and access control lists (ACLs), to ensure the security of the network. The figure is important for understanding the overall network architecture and its components.\nFigure 5.8.3-1: Provisioning and Exposure Architecture\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.8.4\tMapping to 5G Media Streaming and High-Level Call Flows",
                            "text_content": "The following is a sample call flow of the operation of the data collection and exposure by the 5GMSd AF:\nThe figure depicts a call flow for event exposure in a telecommunications network. It illustrates the steps taken by the network to identify and respond to events, such as a security breach or a system failure. The flow starts with the detection of an event, which triggers an alert. The network then initiates a call to the appropriate team or department to investigate the event. The call flow is designed to be efficient and streamlined, ensuring that the response is swift and effective.\nFigure 5.8.4-1: Call flow for event exposure\nA description of the steps is as follows:\n1.\tProvision data collection: The Application Provider provisions the data collection by configuring the data that is to be collected for all streaming sessions of this Provisioning Session.\n2.\tTrigger data collection: The 5GMS AF determines the data that is to be collected from the UE and provides this configuration to the Media Session Handler.\n3.\tTrigger data collection: The 5GMS AF determines the data that is to be collected by the 5GMS AS and uses the M3 interface to configure the 5GMS AS.\n4.\tSubscribe-notify pattern – Subscribe: In this phase, Event Consumers subscribe for the reception of notifications from the 5GMS AF. This phase may happen at any time. Subscriptions may be updated and canceled.\n5.\tConsumption and QoE reports: The Media Session Handler collects logs and information and sends them to the 5GMS AF.\n6.\tAccess logs: The 5GMS AS collects logs and sends the information to the 5GMS AF\n7.\tData aggregation and filtering: In this phase, the 5GMS AF aggregates the information received in the data collection phase, determines for each Event consumer the allowed level of access, and provides the information to the Event Consumers.\n8.\tIf an Event Consumer opted for the subscribe-notify pattern, the 5GMS AF sends a notify message to that Event Consumer.\n9.\tIn case the Event Consumer opted for the Query pattern, by setting the immRep flag to true, the 5GMS AF sends a one-time response with the event information to that Event Consumer.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.8.5\tPotential open issues",
                            "text_content": "The following events are expected to be defined:\n\tConsumption reporting: this event contains reports sent by the UE about the consumption of the service, in terms of streaming session establishment.\n\tQuality of Experience Metrics reporting: this event contains reports sent by the UE about the QoE of the streaming sessions.\n\tNetwork Assistance: this event contains reports collected by the AF on the usage of network assistance such as bitrate recommendation and bitrate boost requests that have been offered for a streaming session.\n\tQoS and Charging usage: this event contains reports about QoS and charging policy requests made by the 5GMS AF for a streaming session.\n\tAccess logs: this event contains reports about the access to the streaming content that is hosted by the network.\nThe granularity of the access to this information depends on the authorized access level. For each of these events, the triggers for the data collection and the levels of access to the collected data need to be defined as well.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.8.6\tCandidate Solution",
                            "text_content": "The 5GMS AF is designed to be the recipient of various types of application event information specific to media streaming, such as consumption reports, metrics reports and AF-based network assistance interactions, from the 5GMS Client (its Media Session Handler) over the M5 interface. Such collection of UE data is referred to in SA2’s eNA_Ph2 work item (see TS 23.288 [48]) as “direct data collection”.\nIt is possible that data collection from the UE is accomplished by the M8 application layer interface between the 5GMS-Aware Application and the 5GMS Application Provider (or, more generically, the Application Service Provider), and in turn forwarded by the ASP to the 5GMS AF, for further exposure s event services to NF consumers. Such mechanism, also referred by SA2 in [48] as “indirect data collection”, is not specified in TS 26.501 [6] and TS 26.512 [7], mainly because M8 functionality is outside the scope of 5GMS, and additionally, there was no use case/requirement in the 5GMSA/5GMS3 work items to drive the related stage 2 and stage 3 definition. On the other hand, due to the outreach from SA2 for AF support of indirect data collection, as shown by Figure 5.8.6.1-1, at least from the standpoint of such UE data being specific to media streaming services, it would make sense to define the requisite interface (i.e., between the ASP and the 5GMS AF) to support indirect data collection.\nThe figure depicts a network setup with multiple layers of communication, including an indirect UE data collection system. The system uses a combination of wired and wireless technologies to collect data from the indirect users. The figure includes various components such as the base station (BS), user equipment (UE), and scatterers, which are essential for the efficient operation of the network. The figure also highlights the importance of redundancy in the system, as it provides failover capabilities to ensure the network's reliability.\nFigure 5.8.6.1-1: Indirect UE data collection\n(copied from TR 23.700-91 [8])\nWhile in principle the M1 interface could be extended for the purpose of indirect data collection (as even suggested by SA2 in the above diagram), logically it would make more sense to define a separate (SBI-based) interface for such purpose. M1 is mainly intended to support provisioning of session-based media streaming services. Indirect UE data collection by the 5GMS AF from the ASP corresponds to a more peripheral or auxiliary feature and might be better served by defining a separate interface or API exposed by the 5GMS AF, for example R1, which is the interface name identified in the BBC et al. discussion paper [49], as shown in Figure 5.8.6.1-2.\nThe figure depicts a generic reference architecture for UE data collection and reporting, which includes various components such as the base station (gNB), user equipment (UE), and scatterers. The diagram highlights beamforming techniques to mitigate interference and the use of SDN principles for network management.\nFigure 5.8.6.1-2: Generic reference architecture for UE data collection and reporting\n(copied from S4-210723 [4])\nIt can be seen from the above diagram that R1 represents more than simply the indirect data collection procedure (referred to in Figure 5.8.6.1-2 as “indirect reporting from ASP”), by including reporting provisioning and event subscription and event publication (event exposure, e.g., via notifications) to the ASP, as further described in [49].\nNote that reporting-related provisioning may pertain to the configuration of rules to be applied by the AF in the processing (e.g., anonymization, normalization, filtering, aggregation) of the data it has collected via direct or indirect methods. Such processing rules may differ for data to be reported by the AF to the ASP versus the data to be reported by the AF (via event exposure) to other NF consumers such as the NWDAF. From that perspective, when the Data Collection AF is instantiated inside a 5GMS AF, the reporting provisioning/configuration function logically belongs to M1 as part of overall provisioning functionality for 5G Media Streaming. Such extension of M1 along with additional specification of R1 is also reflected in [49] as shown in Figure 5.8.6.1-3:\nThe given telecommunication figure depicts a 5G MS (Mobile Station) instantiation of a generic architecture for data collection and reporting. The figure includes various components such as base stations (gNB), user equipment (UE), and scatterers. The diagram highlights beamforming techniques to mitigate interference and the use of redundant paths for failover reliability. The layered design aligns with SDN principles, allowing for efficient data collection and reporting.\nFigure 5.8.6.1-3: 5GMS instantiation of generic architecture for data collection and reporting\n(copied from S4-210723 [49])\nThe details of R1 coupling to and decoupling from M1 should be further studied for each of the R1 functions, with particular regard for the associated procedures, resources and data structures, for example, via emulation of M1 mechanisms and/or reuse of those defined for the Naf Event Exposure service defined in TS 29.517 [25].\nAs indicated in TS 26.501, the 5GMS AS acts as a CDN server (e.g., edge server) in the hosting and delivery of streaming media content (i.e., of ingested/egested content in downlink/uplink streaming). The corresponding content hosting related information, i.e., CDN access logs, available at the 5GMS AS can be forwarded to the 5GMS AF for subsequent event exposure to consumer entities such as the NWDAF or the Application (Service) Provider. Doing so requires the specification of an interface between the 5GMS AS and 5GMS AF. Such interface is logically represented by M3, although this internal interface, intended for the exchange of content hosting related information, is not further described/specified in Rel-16 TS 26.501 and TS 26.512. As part of the present study, it would seem possible to define M3 for the transfer of CDN log information between these entities. However, as defined in TS 26.501, M3 is intended to represent an undefined interface between the 5GMS AF and 5GMS AS for the exchange of content hosting related information. Therefore, it would be more logical to define an SBI-based reporting interface across R3, as shown in Figure 5.8.6.1-3, for the transfer of CDN access logs.\nAs indicated previously, the stage 2 and stage 3 specifications for the Naf_EventExposure service are provided by TS 23.502 [24] and TS 29.517 [25], respectively. Up through Release 16, the categories of UE data at the AF available for event information subscription by NF consumers are the following:\n-\tService Experience information for an application;\n-\tUE mobility information;\n-\tUE communication information; and\n-\tExceptions information.\nComparison of the above categories with QoE metrics (as defined in TS 26.247 [40] for progressive download and DASH streaming services) and service experience and UE communication information types eligible for Naf event exposure (as defined in TS 23.288 [48]) shows the only common information attribute to be throughput. “Average throughput” is a defined quality metric in TS 26.247 for both progressive download and 3GP-DASH services, and “Throughput” is a defined type of performance data from the AF in TS 23.288. However, it is not unreasonable to expect that other QoE metrics collected by the 5GMS AF (based on TS 26.247 definitions for progressive download and DASH streaming) will also be eligible for event exposure to the NWDAF. In particular, at SA2#144-e, a CR to Rel-17 TS 23.288 in S2-2103267 [50] was agreed which adds “QoE metrics” as an additional type of service data related to Service Experience information for subscription by the NWDAF from the AF. Although the identified QoE metrics in that CR references those defined by MTSI in TS 26.114 [51], a CR from Qualcomm in S2-2104496 [52] proposes the inclusion in TS 23.288 of QoE metrics defined for 3GP-DASH and progressive download (per TS 26.247 [40]), VR (per TS 26.118 [53]), MBMS (per TS 26.346 [54]) and 5GMS (per TS 26.512 [45]). Therefore, it is possible that the QoE metrics defined by the 5GMS architecture will be adopted as valid service data for NWDAF subscription to Naf_EventExposure services in Rel-17 TS 23.288 [48] and TS 29.517 [25].\nThe definition of application event types, data components and formats relating to media streaming should be coordinated by SA4 with SA2 and CT3 in the production of the associated stage 2 and stage 3 specifications of Naf_EventExposure services.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.9\tPer-application-authorization",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.9.1\tDescription",
                            "text_content": "Operation of certain 5GMSA and 5G System enabled services include an SLA between the Application Provider and the 5GMS System provider. Different solutions to enable per-application authorization should be studied. . “Per-application authorization” refers to scenarios where one or more 5GMS-Aware Applications are hosted on the same UE (e.g. a SmartPhone) and may access services only from the associated 5GMS Application Provider.\nThe 5G System provider may offer one common 5GMSd AF or dedicated 5GMSd AFs. In the later case, the one 5GMSd AF instance services only a single 5GMSd Application Provider.\nA set of example collaboration scenarios are described in clause 5.9.2.\nOAuth 2.0 [91][92] is commonly used to provide authorization to RESTful HTTP APIs. OAuth separates the authorization server from the resource server. This typically simplifies deployments, since not every resource server such as an HTTP server needs to also provide authorization functionality. The separation of the authorization server from the resource server allows reusing access credentials for different services or between different parties.\nThe OAuth 2.0 architecture defines four main roles:\n-\tResource Owner: A user or entity which can authorize access to a resource.\n-\tResource Server: A function hosting the (protected) resource.\n-\tClient: A function which desires to access the resource hosted on the resource server.\n-\tAuthorization Server: A function which authenticates the resource owner and provides different types of access tokens.\nThe roles can be visualized by the following simple example:\nEXAMPLE:\tA user stores some personal photos on cloud storage. When the user wants to print a photo using an external print service, rather than downloading the photo onto a local drive and then uploading the photo to the print service, the user can instead authorize the print service to fetch the photo from the protoected cloud storage. The Resource Owner here is the user. The Resource Server is the cloud storage. The print service is the Client.\nThe usage of OAuth 2.0 for the purpose of authorzing access to Network Function services is defined by SA3 in clause 13.4 of TS 33.501 [93].\nIn one possible 5G Media Streaming scenario, the 5GMS Application Provider subsidizes access to QoS and other network resources for its own applications. To ensure that only authorized 5GMS-Aware Applications are allowed to access these provisioned reousrces, the 5GMS Application Provider offers an authorization server (or configures such a server provided by the 5G System) that is used to authorize access to the Network Assistance feature of the 5GMS AF.\nHere:\n-\tThe 5GMS Application Provider acts as the Resource Owner, because it owns the Provisioning Session defining the QoS and charging policies.\n-\tThe 5GMS AF acts as the Resource Server.\n-\tThe Client is the Media Session Handler.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.9.2\tCollaboration Scenarios",
                            "text_content": "This collaboration scenario focuses on cases where one or more 5GMSd-Aware Applications are hosted on the same UE and are using the same 5GMSd Client. This may be the case when the 5GMSd Client is provided as an Operating System level service. The 5GMSd Client supports isolation of the different 5GMSd-Aware Applications.\nThe figure depicts a collaboration scenario for per-application authorization in a telecom network. It illustrates the process of authorization for different applications, with each application having its own unique authorization process. The figure shows the flow of authorization from the application to the network, with the network acting as a facilitator to ensure the security and integrity of the application.\nFigure 5.9.2-1: Per-Application Authorization Collaboration Scenario\nEach 5GMSd-Aware Application uses an M8d reference point instance to connect to its 5GMSd Application Provider.\nThe 5G System provider offers a common 5GMSd AF within the trusted DN. The 5GMSd AF supports request and provider isolation so that 5GMSd Application Provider #1 and #2 are not interfering with each other. For example, 5GMSd Application Provider#1 has agreed different charging conditions than Provider #2 and the 5G System should ensure that only 5GMSd-Aware Application #1 can benefit from the conditions. Another example is different QoS levels, e.g. 5GMSd-Aware Application #1 is entitled to receive higher QoS than Application #2.\nThis collaboration scenario focuses on cases where an Application Provider is offering multiple subscription levels to its consumers, for example 4K Premium or SD Standard QoS. This example is inspired by the use case from TS 26.512 [16], Annex A.2.\nThe figure depicts a collaboration scenario for per-application authorization in a telecom network. It illustrates the process of authorization for different applications, with each application having its own unique authorization process. The figure shows the flow of authorization from the application to the network, with the network acting as a facilitator to ensure the security and integrity of the application.\nFigure 5.9.2-2: Per-Application Authorization Collaboration Scenario\nEach 5GMSd-Aware Application uses an M8d reference point instance to connect to its 5GMSd Application Provider. The 5GMSd Application Provider is aware about the different subscription levels of the user.\nThe 5G System provider offers a common 5GMSd AF within the trusted DN. The 5GMSd AF needs to determine that 5GMSd Aware Application #1 is entitled to higher bit rates than 5GMSd-Aware Application #2.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.9.3\tRole distribution in the 5GMS deployments",
                            "text_content": "The 5G Media Streaming architecture can be used for different application service offerings. Annex A in TS 26.512 [16] describes three different Dynamic Policy usage examples: Premium QoS, Conditional Zero Rating and Background Download. In all the three cases, different network features are used to realise the Dynamic Policy, e.g. an increase in network resource utilization when consuming HD content with the corresponding network QoS.\nIt is assumed in all three examples that the 5GMS Application Provider (and the Application Service Provider) has an agreement with the 5G System provider to use the relevant network feature.\nThe figure depicts a 5G Media Streaming Architecture with various roles, including the role of the Media Server, Media Access Controller (MAC), and Media Access Point (MAP). The figure illustrates the various functions and responsibilities of these roles, such as managing media streams, providing access to media content, and ensuring network performance.\nFigure 5.9.3-1: Applying roles for 5G Media Streaming Architecture functions\nFigure 5.9.2-1 illustrates the different roles and responsibilities:\n-\tThe resource in question is a network policy.\n-\tThe 5G System Provider is the resource owner in this case, since it provides the 5G connectivity service.\n-\tThe 5GMSd-Aware Application is the Resource User. It instructs the 5GMSd Client to activate a certain dynamic policy, based on the service subscription and the selected content.\n-\tThe 5GMS Application Provider is the Resource Owner. It checks that the requested dynamic policy matches the application service subscription. For example (with reference to clause A.2 in TS 26.512 [16]), when the user has an HD video subscription, the user should only be authorised to activate a dynamic policy corresponding to the HD operating point.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.9.4\tMapping to 5G Media Streaming and High-Level Call Flows",
                            "text_content": "Editor’s Note: Map the key topics to basic functions and develop high-level call flows.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.9.5\tPotential open issues",
                            "text_content": "Editor’s Note: Identify the issues that need to be solved.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.9.6\tCandidate Solutions",
                            "text_content": "This solution is based on the concept that the 5GMS AF can contact the 5GMS Application Provider (ASP) whenever a new Dynamic Policy is activated by a 5GMS Client.\nThe 5GMS Application Provider provides a different authorization token (e.g. a random number or a random string) via M8 to each 5GMS-Aware Application, so that each application can identify itself uniquely to the 5GMS AF.\nWhen activating a Dynamic Policy, the 5GMS-Aware Application passes the token (via an M6 API call) to the Media Session Handler. When the Media Session Handler desires to activate a dynamic policy, it presents the authorization token to the 5GMS AF by invoking an M5 operation. Upon receit of such a token, the 5GMS AF executes a callback to the 5GMS Application Provider in order to verify, whether this authorization token is valid. When the token is valid, the UE application is authorized to activate this policy.\nThe authorization token is provided e.g. during the login procedure or is requested at a later stage. The UE Application may fetch metadata for the media assets at some stage.\nThe call flow is depicted below, assuming that the authorization token is provided with the application service login response.\nThe figure depicts a callback mechanism for policy activation authorization in a network. It illustrates the use of a callback for policy activation, which is a method of authorization that allows users to request access to a policy without having to authenticate themselves. The figure shows a user interface with a button labeled \"Request Policy Activation\" and a prompt for the user to enter their credentials. The callback is triggered when the user submits the request, and the authorization process is initiated. The figure also includes a visual representation of the callback flow, showing how the user's credentials are processed and the policy is activated.\nFigure 5.9.6.2-1: Usage of a callback for policy activation authorization\nThe steps are as follows:\n1.\tWhen the user wants to use the 5GMS-Aware Application to consume e.g. video content, the user needs to authenticate with the application and the 5GMS Application Provider. (In some cases, this authorization can be cached/stored by the application, so that the user is not always challenged to provide the login credentials.)\nNOTE:\tThe application may be a native application (e.g. an Android application) or a browser application.\n2.\tThe 5GMS Application Provider determines the policy rights to which this application service subscription is entitled (e.g. the user may have subscribed to an SD quality video service or a 4K quality video service). According to the subscription entitlement level, the 5GMS Application Provider creates an authorization token and passes this token together with the login response back to the application.\n3.\tWhen the 5GMS-Aware Application (immediately or later) invokes the Media Session Handler to activate the network service from the 5GMS AF, the application passes the authorization token to the Media Session Handler. The authorization token can embed a user identifier, or the user identifier may be passed as separate (anonymised) parameter.\n4.\tWhen the Media Session Handler activates a dynamic policy, it provides the the token to the 5GMS AF, e.g. as an HTTP query parameter.\n5.\tThe 5GMS AF then verifies the authorization token with the 5GMS Application Provider, using a callback function.\nThis callback URL can be stored by the 5GMS AF together with the Policy Template parameters so that the use of the network policy resource can be revalidated periodically with the 5GMSd Application Provider.\n6.\tWhen the 5GMS AF has verified that the 5GMS Aware Application is authorized to active the dynamic policy (based on the token), the 5GMS AF invokes the appropriate procuedres on the NEF or PCF. For example, the 5GMS AF triggers the addition of a QoS flow by invoking the Nnef_AFsessionWithQoS service.\nIn order to reduce the number of callbacks, tokens with a limited validity duration may be provisioned with the 5GMS AF and the 5GMS-Aware Applications.\nIn this solution the 5GMSd Application Provider provisions a set of valid authorization tokens, including expiry time, in the 5GMS AF in advance via M1.\nAs in Solution 1, the Media Session Handler passes an authorization token when invoking the 5GMS AF at M5. The 5GMA AF authorizes the Media Sesssion Handler’s request based on this token.\nSince the token validity is time-limited, the 5GMS Application Provider must periodically update the set of valid authorization tokens provisioned at the 5GMS AF and the 5GMS-Aware Application is responsible for refreshing the token used by the Media Session Handler. For example, the application may be configured to periodically fetch a new token from the 5GMS Application Provider.\nThe figure depicts a time-limited token usage for policy activation authorization, illustrating the use of time-limited tokens in a policy activation authorization system. The system uses time-limited tokens to ensure that only authorized users can access certain policies, preventing unauthorized access and ensuring the security of the system.\nFigure 5.9.6.3-1: Usage of time-limited tokens for policy activation authorization\nThe steps are as follows:\n1.\tThe 5GMS Application Provider provisions tokens on the 5GMS AF before any 5GMS-Aware Application tries to activate any Dyanmic Policy. The token is provisioned together with the Policy Template definitions.\n2.\tWhen a user (and the 5GMS-Aware Application) successfully authenticates with the 5GMS Application Provider, the 5GMS-Aware Application receives a time-limited authorization token. The 5GMS-Aware Application typically stores the token.\nThe difference with Solution 1 is the use of the token by the 5GMS AF:\n3.\tWhen a 5GMS-Aware Application wishes to activate a Dynamic Policy, it provides the authorization token to the 5GMS AF. The 5GMS AF then validates the token using a simple lookup against it list of currently valid tokens without reference to the 5GMS Application Provider.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.9.7\tConclusions",
                            "text_content": "The Key Issue explores the usage of OAuth 2.0 for per-application authorization of different 5G System features. It is recommended to specify the usage of OAuth 2.0 (according to the SA3 guidelines) within a normative work item.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.10\tSupport for encrypted and high-value content",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.10.1\tDescription",
                            "text_content": "Content is increasingly encrypted for distribution for different reasons, e.g. Content Protection, Conditional Access, or integrity of playback. The management of keys for different use cases is a prime concern. Examples include scalable access to keys, secure storage of keys, key availabilities. It is envisioned that an MNO can provide key management and/or key distribution services for content providers. In particular, providing scalable and secure key management within 5GMS for multiple different devices needs further study.\nExamples for secure media specification are for example provided by the MovieLabs ECP requirements and other content providers requirements.\nIn a specific example, a live sports service provider wants to offer a live stream. Examples include where the content needs to be delivered with low latency (typically encoder to glass in 3–10 seconds) in order to be on par with regular TV distribution means. Other services may also be considered.\nThe service may require different tools and functionalities levels of security:\n1.\tConditional access supported by DRM management. As an example, users need to get a master key for decrypting the secondary level keys.\n2.\tKey rotation in order to support live streaming. As an example, these keys are changed periodically but protected by the master key.\n3.\tDRM and key management to ensure playback rules, for example to avoid that clients attempting early playback of the content too early and have advantages in betting/wagering, skipping content, etc.\n4.\tWatermarking. The content is distributed and a unique signature is added at the latest possible time (in the device, at the Edge). An example of such approach can be found here .\n5.\tContent encryption.\n6.\tA secure implementation (use of TEE, Secure Media Path).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.10.2\tCollaboration Scenarios",
                            "text_content": "It is assumed that the content provider provides DRM protections for the content. However, beyond this different collaboration models between the content provider and 5G System operator/MNO exist.\nAs examples, the MNO provides infrastructure to the content service provider in order to support security related functions.\n-\tThe service provider may want to provide scalable access to the content and in particular the key distribution. Hence it uses 5G Media streaming servers to support secure key distribution.\n-\tThe streaming service provider wants to rule playback, for example to avoid that the situation whereby users can see the streamed content too early while at the same time, the streaming service provider does not want to delay the distribution artificially either and want to give the clients the ability to download the main content (without buffer underruns).\n-\tThe service provider asks for fairness in the client, but the client cannot be trusted to act fairly. Hacked clients are possible. Clients may have DRM systems that the service providers will use.\n-\tThe service provider asks for a watermarking solution from the MNO.\nEncryption (as already defined in TS 26.511 [96]) and secure keys may be used for other purposes, for example for conditional access or DRM systems. In some cases, keys are also provided in hierarchically, depending on business rules, security levels and deployment scenarios.\nIn an extension of the above use case, the content is distributed via multiple operators network. In this case, the encryption may be done by the service provider and the service provider provides the keys to the MNO. In another case, the service is offered by the MNO and the MNO does encryption and key management.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.10.3\tDeployment Architectures",
                            "text_content": "Editor’s Note: Based on the 5GMS Architecture, develop one or more deployment architectures that address the key topics and the collaboration models.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.10.4\tMapping to 5G Media Streaming and High-Level Call Flows",
                            "text_content": "Editor’s Note: Map the key topics to basic functions and develop high-level call flows.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.10.5\tPotential open issues",
                            "text_content": "Editor’s Note: Identify the issues that need to be solved.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.10.6\tCandidate Solutions",
                            "text_content": "Editor’s Note: Provide candidate solutions (including call flows) for each of the identified issues.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.11\tTV-grade mass distribution of unicast Live Services",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.11.1\tDescription",
                            "text_content": "Live TV services of different scale (professional, user-generated, session-based, etc.) are increasingly distributed over broadband and mobile networks. Live TV services are characterized by:\n-\tscalability (in terms of concurrent users),\n- \tconsistent quality,\n-\thigh bandwidth requirements,\n-\ttarget latency constraints, and\n-\tTV Experiences.\nConsistent support of the distribution of such services to a different scale of users and in a concurrent fashion is a prime concern. 5G Media Streaming is expected to support such service distribution and end-to-end optimizations. Improvements and optimizations on the architectural level and stage 3 are expected to be studied.\nTV Services are expected to provide a consistent quality over time. Consistent quality can be defined as the service staying within a set of Operation Point boundaries to the largest extent. Specific aspects are:\n-\tMeeting the latency requirements, namely staying at the target, not exceeding the maximum, and not falling below the minimum. Measuring deviation from the target, as well creating events when exceeding the boundaries, is relevant. For more details see clause 5.11.15.\n-\tMeeting the target playback rate, i.e. how often the playback rate is changed from 1.0, and if there are cases when the playback rate is outside of the range. For more details see clause 5.11.15.\n-\tStaying within the boundaries of the target bit rates and meeting the target. This measurement includes those cases where the bit rate falls to 0, i.e. the service is stalled. All of this can be measured by the 5GMS Client.\nTable 13.2.6-2 in TS 26.512 [16] defines a set of Operation Point parameters, repeated below, to which the Media Player is configured and that it exposes to the 5GMS-Aware Application as status information in notification events at reference point M7 when the current Operation Point changes. This configuration setting may be included in the media presentation manifest, or it may alternatively be provided through private application means. Generally, consistent quality refers to meeting the Operation Point parameters as shown in table 5.11.1.3-1 below . The Media Player and the network are expected to collaborate to meet the quality requirements.\nTable 5.11.1.3-1: Operation Point Information (see TS 26.512, Table 13.2.6-2)\n\nTV Services typically have certain bit rate requirements that need to be met. Clause 5.1 of TR 26.925 [88] provides an overview. These figures are valid for both HDR/non-HDR video:\n\nThese figures may be used as indication of bit rate requirements for services.\nBased on a report developed jointly between DVB and DASH-IF on Low-Latency DASH [9], this clause defines details on how to support consistent latency in DASH for linear TV services. In [9], several definitions had been introduced, repeated here for consistency.\n-\tEnd-to-End Latency (EEL): The latency for an action that is captured by the camera until its visibility on the remote screen.\n-\tEncoder-Display Latency (EDL): The latency of the linear playout output (which typically serves as input to distribution encoder(s)) to the screen.\n-\tPackager-Display Latency: The latency after the output of the distribution encoder to the screen.\n-\tCDN latency: The delay caused by the CDN delivery from CDN input to CDN output.\n-\tLive Edge Start-up Delay (LSD): The time between a user action (service access or service join) and the time until the first media sample of the service is perceived by the user when joining at the live edge. Typically also the channel change time.\n-\tSeek Start-up Delay (SSD): The time between a user action (service access or service join) and the time until the first media sample of the service is perceived by the user when seeking to a time shift buffer.\nThose two categories, latency and delay are subject to be controllable by the service provider for a consistent service offering. In the remainder, primarily the Encoder-Display Latency (EDL) and the Live Edge Start-up Delay are considered, but for some use cases also the End-to-End Latency (EEL) may be relevant. Figure 5.11.1-1 provides a schematic overview of the different latencies.\nThe figure depicts various latencies and delays relevant for low-latency distribution in a telecommunications network. It illustrates the impact of these factors on the overall performance of the network, highlighting the importance of optimizing these parameters to ensure high-quality service delivery.\nFigure 5.11.1-1: Different latencies and delays relevant for low-latency distribution\nThe Low Latency DASH scenario is a variant of the Live Services recommended approach focused on ensuring that the Encoder-Display Latency of the DASH Media Presentation is comparable to the latency when distributing over terrestrial, cable or satellite broadcast. Latency in broadcast is not a unique universal value, as it is influenced by many factors such as the duration of the broadcast encoding pipeline, the latency of the transport channel which can slightly differ per type (satellite, cable, IPTV or, DTT...), or the artificial delays introduced by local content moderation regulations. However, most of the measurements converge on a 3 - 10 seconds latency between the moment where the source signal is acquired for encoding and the moment when it's played back on the TVs, i.e the EDL. Start-up delay requirements are typically in the range of 1-2 seconds. For details refer to [9].\nLow-latency mode are supported to minimize the architectural impacts on existing workflows. Figure 5.11.1-2 provides a basic flow of information for operating a low-latency DASH service as defined in DASH-IF’s Low-latency Modes for DASH [10]. The DASH packager gets information on the general description of the service as well as the encoder configuration. The encoder produces CMAF chunks and fragments. The chunks are mapped by the MPD packager onto Segments and provided to the network in incremental fashion using HTTP/1.1 chunked transfer.\nThe figure depicts a basic operation flow for Low-Latency DASH, a video streaming technology. It illustrates the steps involved in delivering high-quality video content to users, with a focus on minimizing latency and ensuring smooth playback. The figure includes various components such as video encoders, decoders, and network infrastructure, all working together to deliver the video content in real-time.\nFigure 5.11.1-2 Basic operation flow Low-Latency DASH\nHTTP chunked transfer coding needs to be supported up from the ingest into the packager up to the CDN edge, whereas the last mile delivery is expected happen using HTTP chunked transfer coding or HTTP in regular mode. If HTTP chunked transfer coding is supported by the DASH player, it basically means that a media segment carrying the latest moment of the program (also known as the \"live edge time\" as defined in clause 4 of this document) could be consumed on the player while it's still being produced by the encoder and the packager.\nIn case chunked segments are used, clients may want to access partially available Segments for example for fast random access, see ISO/IEC 23009-1 [11]. However, requesting available byte ranges of a partially available Segment, i.e., Segments still being produced, is not consistently supported in CDNs, but solutions are provided in RFC8673 [X6]. This functionality may also be needed to support common segment handling for low-latency DASH and low-latency HLS.\nKey aspects for low-latency live distribution include:\n-\tConsistent support for chunked transfer from ingest to client.\n-\tSupport for partially access of non-complete resources.\n-\tEnd-to-end optimizations to support the latency requirements.\nTR 26.917 [89] studied and identified requirements for TV Experiences. Clause 4.3 of TR 26.917 [89], reproduced below, provides a summary from a user-experience perspective:\n\nThe following assumptions for the study are captured\n-\tTarget for a maximum end-to-end service delay of 3 seconds (Packager-Display latency). This is measured from the input into the DASH Packager to the output of the DASH Player.\n-\tTarget for a tune-in to an ongoing DASH Live stream of maximum 1.5 seconds (Live Edge Startup Delay). This is measured between the user action to tune-in (e.g. pressing a button) and the first frame is output from the DASH Player (still fulfilling the target of the Packager-Display Latency).\n-\tThere is a requirement on a maximum ADG referring to the time difference between the first user to see a frame of media and the last user to see that same frame of media. It should be possible to remain below 1 second apart and within the target latency, i.e. max(ADG) = 1 second.\n-\tThe DASH MPD can prepared so that the DASH Player can operate at different Latencies, e.g. low latency, normal latency or timeshift (video-on-demand profile).\n-\tTV Experiences as summarized in clause 5.11.1.6.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.11.1.3-1: Operation Point Information (see TS 26.512, Table 13.2.6-2)",
                                    "table number": 12,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "TV Services typically have certain bit rate requirements that need to be met. Clause 5.1 of TR 26.925 [88] provides an overview. These figures are valid for both HDR/non-HDR video:",
                                    "table number": 13,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "TR 26.917 [89] studied and identified requirements for TV Experiences. Clause 4.3 of TR 26.917 [89], reproduced below, provides a summary from a user-experience perspective:",
                                    "table number": 14,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.11.2\tDeployment Architectures",
                            "text_content": "A deployment architecture suitable for low-latency CMAF streaming is shown in Figure 5.11.2.1-1.\nThe deployment architecture for low-latency CMAF streaming in Figure 5.11.3-1 illustrates the various components and their interconnections, including the core switch, optical line terminal (OLT), and distributed nodes. The layered design of the architecture aligns with SDN principles, ensuring efficient and reliable network performance.\nFigure 5.11.3-1 Deployment architecture for low-latency CMAF streaming\nIn this case:\n1.\tA live stream is ingested into a live encoder.\n2.\tThe encoded stream is packaged into CMAF chunks.\n3.\tThe packaged CMAF chunks are uploaded to an origin server using chunked transfer encoding input.\n4.\tSegments are then available for retrieval by a CDN on demand and moved through the CDN all the way to the client.\nThis clause deals with providing consistent quality in 5G Media Streaming as part of an Operation Point. Figure 5.11.2.2-1 shows how Operation Points and policies can be matched in a basic setup.\nThe figure depicts a detailed operation point workflow for a 5G network, illustrating the various stages and processes involved in network operation. It includes a flowchart that outlines the steps from network planning to network operation, with key components such as network planning, network design, network deployment, network operation, and network maintenance. The figure provides a clear and concise visual representation of the complex network operations, making it easier for network operators to understand and manage the network.\nFigure 5.11.2.2-1 Operation Point workflow\nThe content-defined Operation Points are shown in the User Plane setup in Figure 5.11.2.2-1.\n1.\tA set of Policy Templates is agreed in advance between the 5GMS Application Provider and the 5G System operator. These may be provisioned in the 5GMS AF via reference point M1. Policy templates represent long term agreements made between the 5GMS Application Provider and the 5GMS System operator.\n2.\tService Operation Points, defined in terms of the parameters reproduced in table 5.11.1.3-1, are long-lived profiles that will be used by media streaming sessions as references.\n3.\tBased on communication with the 5GMS-Aware Application, the UE device characteristics, the prevailing network conditions and so on, the Media Player selects a suitable Operation Point.\n4.\tBased on the parameters of the currently selected Operation Point, the policies in the 5G network are established, by the Media Session Handler instantiating one of the available Policy Templates by invoking the Dynamic Policies API at reference point M5. The streaming session uses at most one of the allowed policy templates at any point in time.\nThe above workflow is expected to be operational for 5G Media Streaming as defined today in TS 26.512 [15]. What is needed in order to execute the workflow is the following\n1)\tWell-defined Operation Points in the content. The Service Description as defined in ISO/IEC 23009-1 is mentioned in TS 26.512 [15] as a high-level statement:\n\nbut not yet in TS 26.247 [40]. More details are needed, including some examples.\n2) \tMedia Session Handling APIs allowing a 5GMS-Aware Application to make use of dynamic policies, network assistance and metrics reporting in the 5GMS Client are not yet specified at reference point M6 in TS 26.512 [15]. In particular, clause 12.2 is incomplete for Dynamic Policy Information and Network Assistance information.\n3)\tMedia Player metrics are not yet defined on the Media Streaming Handler API at reference point M7 defined in clause of TS 26.512 [15]. In particular, the extent to which the Media Player is (un)able to obey the currently selected Operation Point parameters needs to be signalled to the Media Session Handler in order to potentially drive the selection of a different Operation Point.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "1)\tWell-defined Operation Points in the content. The Service Description as defined in ISO/IEC 23009-1 is mentioned in TS 26.512 [15] as a high-level statement:",
                                    "table number": 15,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.11.3\tCollaboration Scenarios",
                            "text_content": "The following collaboration scenarios may be considered:\n1)\tLive content is provided to the MNO as an (uncompressed or mezzanine-compressed) contribution feed, and the MNO does the encoding and packaging for distribution.\n2)\tLive content is encoded and packaged by the content provider (for example as low-latency CMAF) and uploaded to the MNO. The MNO may produce an MPD for its distribution. However, the content provider augments the media with production and/or encoding timestamps (e.g. producer reference times) in order to permit latency measurements.\n3)\tThe origin server is external to the MNO network and content is pulled through the 5GMS AS on demand by the clients.\nFor all of the collaboration scenarions described in clause 5.11.3.1 above, the content provider and the service provider agree on:\n-\tThe MNO may monitor if the end-to-end latency target is maintained. This may for example be done by proper reporting.\n-\tThe desired latency from glass-to-glass is met for example to be 3 seconds.\n-\tThat the content is provided in low-latency, but also for consumption in time shift mode.\n-\tThat the content can be accessed before the whole segment is uploaded.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.11.4\tMapping to 5G Media Streaming and High-Level Call Flows",
                            "text_content": "This clause provides an extension to the general call flow in clause 6.2.3 of TS 26.501 [15] in order to address operation point services.\nThe figure depicts a high-level procedure for delivering DASH content to an Operation Point, highlighting the steps involved in the delivery process.\nFigure 5.11.4.1-1: High-level procedure for DASH content for Operation Point handling\nPrerequisites:\n-\tThe 5GMSd Application Provider has provisioned the 5G Media Streaming System and has set up content ingest.\n-\tThe 5GMSd-Aware Application has received the Service Announcement from the 5GMSd Application Provider.\nExtended Steps:\n1:\tPolicy Templates are defined\n12:\tMedia Player informs application about the current set of Operation Points.\n13:\t5GMSd-Awaer Application selects an Operation Point.\n14:\tMedia Player provdes Operation Point parameters to the Media Session Handler.\n15:\tMedia Session Hahdnler selects a Dynamic Policy based on the provided Operation Point parameters.\n21: Media Player provides Operation Point metrics to the Media Session Handler.\n22: Media Session Handler sends Operation Point measurements and events to the 5GMSd AF.\nIn this case, the specific aspects are as follows:\n1)\tA native stream is ingested into the network. This may be an MPEG-2 TS stream, an RTMP stream, etc. The stream may have time codes included that relate media time to real-time.\n2)\tAlong with the ingest, a provisioning agreement between the content provider and the MNO exists on one or several Service Operation Points and Policy Templates. It may be that only one of the two is defined, and the other one is derived, or both are defined.\n3)\tThe MNO encodes, packages and distributes the content according to the agreed Service Operation Points. The encoding and packaging may take into account the information from the Operation Points but may also take into account the information in the ingested media stream in order to control the latency.\n4)\tThe Operation Point metrics collated by the 5GMS AF are used by the MNO to validate that the Service Operation Point is met, or to adjust the Policy Templates accordingly.\nIn this case, the specific aspects are as follows:\n1)\tCMAF content is provided externally. The content is announced to the MNO for distribution.\n2)\tThe ingest happens in a way such that the latency requirements can be met.\n3)\tA provisioning agreement between the content provider and the MNO exists on one or several Service Operation Points and Policy Templates. It may be that only one of the two is defined, and the other one is derived, or both are defined.\n4)\tThe MNO distributes the content according to the agreed Service Operation Points, i.e. meeting bit rate and latency requirements. The MNO generates the media presentation manifests accordingly, for example the MPD and/or the HLS manifest.\n5)\tThe Operation Point metrics collated by the 5GMS AF are used by the MNO to validate that the Service Operation Point is met, or to adjust the Policy Templates accordingly.\nIn this case, the specific aspects are as follows:\n1)\tDASH or HLS content is provided externally. The content is announced to the MNO for distribution.\n2)\tThe ingest happens in a way such that the latency requirements can be met.\n3)\tA provisioning agreement between the content provider and the MNO exists on one or several Servcie Operation Points and Policy Templates. It may be that only one of the two is defined, and the other one is derived, or both are defined.\n4)\tThe MNO distributes the content according to the agreed Service Operation Points, i.e. meeting bit rate and latency requirements.\n5)\tThe Operation Point metrics collated by the 5GMS AF are used by the MNO to validate that the Service Operation Point is met, or to adjust the Policy Templates accordingly.\nAn example for an operation point is provided below:\n-\tMode = Live.\n-\tmaxBufferTime = 4000.\n-\tswitchBufferTime = 500.\n-\tLatency: target=3000, maximum=5000, minimum=3000.\n-\tPlaybackRate: max=1.2, min=0.8.\n-\tBit rate: target = 4000000, max=6000000, min=1000000.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.11.5\tPotential open issues",
                            "text_content": "The following aspects are not yet addressed in the current 5G Media Streaming specifications:\n-\tOn M1d:\n-\tThe establishment of consistent provisioning for Live TV services of different scale, providing the required Service Operation Points.\n-\tThe ability to support Collaboration 1, for which the MNO provides encoding and packaging.\n-\tOn M2d:\n-\tIngest protocols that support chunk-based ingest and do not add latency by the use of chunked transfer. (No aggregation of chunks into resources.) Note, support for HTTP Chunked Transfer encoding is a requirement of HTTP 1.1 Clients and Servers. The gap is, that an 5GMS AS implementation is free to wait until the full segment is received.\n-\tSignaling of Operation Points along with the content in Collaboration 2.\n-\tOn M4d:\n-\tConsistent support of low-latency streaming formats.\n-\tTime synchronisation between server and client so that performance (particularly latency) can be measured accurately.\n-\tSupport for advanced TV Experiences.\n-\tOn M5d:\n- \tMetrics to monitor the operation of the service and if it meets operation, in particular the latency.\n-\tOn M6d:\n-\tDynamic policies, network assistance and metrics reporting.\n-\tOther:\n-\tSupport TV service requirements.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.11.6\tCandidate Solutions",
                            "text_content": "For the above open issues, the following candidate solutions are considered:\n-\tOn M1d:\n-\tPolicy Template updates to support TV services.\n-\tProvisioning extension to support Collaborations 1, 2 and 3.\n-\tOn M2d:\n-\tDASH-IF Ingest Specification:\n-\tMPD extensions to support signalling of Operation Points using Service Description.\n-\tOn M4d:\n-\tDASH-IF Low-Latency Extensions:\n-\tUTC Time Sync that can be used by the 5GMS AS and the 5GMS Client in order to measure latency accurately. A 3GPP-based network time source may be provided.\n-\tNew DASH and CMAF functionalities that support enhanced TV services, such as pre-selection.\n-\tOn M5d:\n-\tUpdates to DASH QoE metrics reporting for monitoring latency and Audience Drift Gap.\n-\tOn M6d:\n-\tExtensions to M6 to address the requirements.\n-\tGeneral support:\n-\tDASH-IF Low-Latency Extensions: https://dash-industry-forum.github.io/docs/CR-Low-Latency-Live-r8.pdf\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.11.7\tConclusions",
                            "text_content": "Live TV services of different scale (professional, user-generated, session-based, etc.) are increasingly distributed over broadband and mobile networks, including 5G Networks. Live TV services are characterized by at least the following aspects: (1) scalability (in terms of concurrent users), (2) consistent quality, (3) high bandwidth requirements, (4) target latency constraints, and (5) advanced TV Experiences.\nTo address these type services a consistent support in the 5G Media Streaming Architecture, the protocols and codecs is needed. It is identified that the combination of low-latency CMAF formats, chunked transfer from content provider to the device, as well as consistent signaling and support of service quality are key aspects to the work.\nIt is recommended to support and optimize the deployment of unicast live TV services in 5G Systems. For this purpose, the following follow-up aspects are recommended to be addressed:\n1.\tArchitectural and procedural considerations\na)\tAt least one call flow into that documents provisioning, ingest, distribution, presentation and monitoring aspects of low-latency live streaming services using CMAF Chunks.\nb)\tUpdates to reference points to support provisioning, ingest, distribution, presentation and monitoring aspects of low-latency live services using CMAF Chunks.\nc)\tTypical configurable service parameters and operation points in terms of bit rates, latencies, Audience Drift Gaps, etc.\n2.\tProtocols, codecs, metrics and capabilities:\na)\tDefine capability mechanisms in order to identify the support of low-latency modes in 5GMS networks and clients\nb)\tProvisioning to support operation points and policy templates for low-latency live streaming.\nc)\tCreate necessary extensions to support DASH and HLS chunked CMAF low-latency modes in an end-to-end workflow.\nd)\tProvide necessary protocols to scalably support time synchronization across 5GMS Applications, AS and 5GMS Clients (at appropriate precision).\ne)\tExtend QoE metrics schemes and metrics reporting functionality to address monitoring of Operation Point metrics for potential operational improvements.\nf)\tProvide extensions to formats and manifests support advanced TV experiences.\ng)\tInformative guidelines on using different Operation Points for low-latency live streaming.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.12\tNetwork Slicing Extensions for 5G Media Streaming",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.12.1\tDescription",
                            "text_content": "Network slicing standardization has progressed in 3GPP in sub working groups of both the SA and RAN groups. In particular, network slicing standardization that is relevant to our work in 3GPP SA4 has been specified in the SA2, SA5, SA6, and CT3 sub working groups.\n3GPP SA2 specified network slicing related standardization in the following technical specifications:\n-\tTS 23.501 [23]: In this TS, SA2 specified network slicing concepts such as identification and selection of network slice (S-NSSAI and NSSAI), standardized SST values, Network slicing subscription aspects, UE NSSAI configuration and NSSAI storage aspects, network slicing support for roaming, interworking with EPS, network slice-specific authentication and authorization, network slice admission control etc.\n-\tTS 23.502 [24]: In this TS, SA2 specified procedures related to network slicing such as network slice-specific authentication and authorization procedure, network slice admission control function procedures, network slice admission control support for roaming, network slice admission control function (NSACF) services etc.\nWhile 3GPP SA2 has specified architectural concepts about using network slices, 3GPP SA5 has specified the architecture, provisioning, and management (creation, modification, and termination) of network slices in addition to defining roles related to 5G networks and network slicing, and management models for network slicing. The network slicing related standardization specified by 3GPP SA5 can be found in the following technical specifications:\n-\tTS 28.530 [56]: Describes general concepts such as management of 5G networks and network slicing, principles of network slicing management framework, slice profile and service profiles, and business level requirements\n-\tTS 28.531 [57]:  Describes requirements such as creation, modification, activation, deactivation of network slice instances. network slice subnet instances, and 3GPP NF instances. Operations for management of network slice instances and network slice subnet instances is also specified.\n-\tTS 28.532 [58]: Describes management and orchestration concepts such as provisioning management services, fault supervision management services, and performance assurance management services. Corresponding stage-3 management service specification is also specified.\n-\tTS 28.533 [59]: Describes the architecture framework for management of network slicing including the architecture reference model for management interactions with NFV MANO, ZSM framework, and NWDAF\n-\tTS 28.540 [60]: Describes 5G Network Resource Model (NRM) for NR and NG-RAN specifying aspects related to requirements for management of network slice and network slice subnets.\n-\tTS 28.541 [61]: Describes stage-2 and stage-3 specification of 5G NRM including the information model definitions for network slice NRM such as NetworkSlice, NetworkSliceSubnet, ServiceProfile, and SliceProfile.\n-\tTS 28.542 [62]: Describes stage-1 NRM for 5G Core Network.\n-\tTS 28.543 [63]: Describes stage-2 and stage-3 NRM for 5G Core Network.\n-\tTS 28.545 [64]: Describes stage-1 fault supervision aspects about management and orchestration of networks and network slicing.\n-\tTS 28.546 [65]: Describes stage-2 and stage-3 fault supervision aspects about management and orchestration of networks and network slicing.\n-\tTS 28.552 [66]: Describes 5G performance measurements related to network slicing instances.\n-\tTS 28.554 [67]: Describes 5G end to end key performance indicators (KPIs) related to network slicing.\nIn addition to the SA2 and SA5 groups, 3GPP SA6 has specified network slicing related standardization in the following technical specifications:\n-\tTS 23.434 [68]: Specifies the functional architecture for service enabler architecture layer (SEAL) and the procedures, information flows, and APIs for each service within SEAL in order to support vertical applications over the 3GPP system. As part of this specification, aspects related to network slice capability management is specified including procedures and information flows for network slice capability management.\n-\tTR 23700-99 [69]: Proposes application architecture aspects solutions and enhancements to SEAL using the NSCALE application layer enablement.\nFinally, some work related to network slicing has been done by the 3GPP CT3 group in the following technical specifications:\n-\tTS 29.520 [70]: Specifies the stage-3 definition of Network Data Analytics Function Services of the 5G system. Proposes the data model for network slice information that NWDAF can provide to authorized consumers.\nThough the 3GPP SA4 technical specifications related to 5G Media Streaming have touched upon network slicing, the standards could be significantly enhanced with further study and specification related to network slicing aspects. Some of the items currently being worked in SA4 that can be enhanced to incorporate network slicing based specification are presented below. Table 5.12.1.2-1 lists the Release-16 architecture items that can benefit from further specification on network slicing.\nTable 5.12.1.2-1: Release-16 Items for further Network Slicing related specification\n\nTable 5.12.1.2-2 lists candidate list of Release-17 items that can benefit with further specification on network slicing related aspects.\nTable 5.12.1.2-2: Release-17 Items for further Network Slicing related specification\n\nEditor’s Note: Study to include aspects related to network slice usage e.g., how application/OS/UE can map different application traffic to network slices.\nNOTE:\tIn general, all the items in tables 5.12.1.2-1 and 5.12.1.2-2 are listed here to present areas for further study on aspects related to network slicing. The current scope of each of these work items may not include study of network slicing aspects.\nThe scope of the study proposed in the above tables is not exhaustive or final. More study topics can be identified in different work areas being discussed in SA4. The study can include how existing and new use cases can benefit with the network slicing specification. However, such a study in SA4 cannot be done in isolation. Multiple study/work items are currently underway in different SA groups. It is recommended that SA4 study consider such studies and work in other groups while specifying media service level network slicing standardization. The following are some of the study/work items in other groups that may be relevant to study in SA4:\n-\t[3GPP SA2] TR 23.700-40 [71]: Study on enhancement of network slicing; Phase 2.\n-\t[3GPP SA6] TS 23.434 [68]: Service Enabler Architecture Layer for Verticals (SEAL); Functional architecture and information flows.\n-\t[3GPP SA6] TR 23.700-99 [69]: Study in Network slice capability exposure for application layer enablement (NSCALE).\nNOTE:\tFor maintaining alignment with the specifications in other groups, it is recommended that correspondence with those groups is done using standard 3GPP liaison procedures.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.12.1.2-1: Release-16 Items for further Network Slicing related specification",
                                    "table number": 16,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.12.1.2-2: Release-17 Items for further Network Slicing related specification",
                                    "table number": 17,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.12.2\tCollaboration Scenarios",
                            "text_content": "Editor’s Note: Study collaboration scenarios between the 5G System and Application Provider for each of the key topics.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.12.3\tDeployment Architectures",
                            "text_content": "Editor’s Note: Based on the 5GMS Architecture, develop one or more deployment architectures that address the key topics and the collaboration models.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.12.4\tMapping to 5G Media Streaming and High-Level Call Flows",
                            "text_content": "Editor’s Note: Map the key topics to basic functions and develop high-level call flows.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.12.5\tPotential open issues",
                            "text_content": "The following potential open issues are identified:\n1)\tUsage of network slicing identification information as part of service provisioning information (M1)\n2)\tApplicable stage 2 and stage 3 aspects related to impact to QoS specification during service provisioning because of network slicing\n3)\tUsage of network slicing identification information during dynamic policy procedures (M5)\n4)\tApplicable stage 2 and stage 3 aspects related to impact to QoS specification because of network slicing in dynamic policy procedures\n5)\tWill one AF be sufficient to interact with all network slices? Or, is there a separate AF for each slice?\n6)\tProvisioning of media services with multiple network slices – Enhancements to M1 interface\n7)\tQoS Management for network slices – will the QoS be provisioned and managed separately for each slice by the ASP?\n8)\tDetermining the need for AF-to-AF communication to support interoperability if 5GMS AF instances from different vendors are deployed in the same 5GMS System.\nNOTE:\tThere is no impact on SA2 architecture because the concept of a service spanning multiple network slices or PDU Sessions is not in SA2’s scope.\n9)\tImpacts of network slicing on Rel-16/Rel-17 dynamic policy invocation APIs.\n10)\tMethods for deploying, supporting, and resolving slice specific AS instances including modification of media description documents (e.g., DASH MPD), DNS etc.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.12.6\tCandidate Solutions",
                            "text_content": "The 5GMS Application Provider may use the M1 provisioning interface to define a set of network slices that can be used for the media streaming sessions that it offers. This is done when the 5GMS Application Provider would like to request that its media traffic is isolated from other traffic. This may facilitate features such charging and QoS accounting.\nIt may associate each operation point (e.g. 4K HDR, HD, SD) with a dedicated network slice. Access to each network slice at reference point M4 is restricted to UEs with a valid subscription to that service level. The list or groups of users that are to be authorized to use a certain slice is provided by the 5GMS Application Provider during the provisioning step and can be updated subsequently.\nFigure 5.12.6.1-1 below shows a call flow for this solution:\nThe figure depicts a call flow for provisioning network slices and Operation Points in a 5G network. It illustrates the process of creating and managing network slices, which are virtual networks within a 5G network, and Operation Points, which are physical locations where network slices are deployed. The flow includes steps such as creating a new slice, assigning an Operation Point, and configuring the slice with network parameters. The figure also includes a diagram of the network topology, showing the connections between slices and Operation Points.\nFigure 5.12.6.1-1: Call flow for provisioning network slices and Operation Points\nThe steps are as follows:\n1.\tThe 5GMS Application Provider provisions the configuration for all upcoming media streaming sessions in the 5GMS AF at reference point M1.\na.\tThe Application Provider declares a requirement for one or more network slices that correspond to the operation points that it offers for the media streaming service.\nb.\tThe 5GMS AF requests the MnS to create or update a set of network slices based on the provided provisioning information. The MnS for network slice management capability exposure  is currently being studied in SA5 in TR 28.824. The characteristics of a network slice are stored as part of the ServiceProfile as defined in TS 28.541.\nc.\tThe Media Session Handler in the 5GMS Client retrieves Service Access Information from the 5GMS AF. The response includes a mapping between the operation point and the S-NSSAI that should be used by the session.\n2.\tThe 5GMS-Aware Application retrieves the entry point for the media streaming session from the 5GMS Application Provider at reference point M8. The returned entry point contains information about the allowed Operation Points, e.g. in the DASH service descriptor.\n3.\tThe 5GMS-Aware Application selects one of the offered Operation Points.\n4.\tThe application informs the Media Session Handler about the start of a new media streaming session and indicates the selected Operation Point.\n5.\tThe Media Session Handler informs the 5GMS AF about the starting media streaming session and the desired Operation Point.\n6.\tThe 5GMS AF requests the application of the corresponding QoS profile to the media streaming session.\n7.\tThe Media Session Handler may request the establishment of a new PDU session or the  modification of an existing PDU session to use the allowed network slice as indicated by the S-NSSAI. Note that the PDU session is dedicated for the media streaming session traffic. The PDU session establishment and update procedures are defined in clause 8.3 of TS 24.501.\n8.\tThe AMF may request admission control to use the selected slice from the NSACF.\n9.\tIf allowed, the PDU session is established/updated to use the selected S-NSSAI.\n10.\tMedia streaming commences at reference point M4.\nTo support this high-level procedure:\n-\tThe streaming session uses the eMBB SST slice/service type.\n-\tThe Slice Differntiator is mapped to an operation point of the service that is indicated through the externalReference as defined in clause 7.9.3.1 of TS 26.512 [16].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.12.7\tConclusion",
                            "text_content": "1.\tThe collaboration scenarios, deployment architectures, and potential open issues concerning network slicing extensions are to be studied further in Release 18.\n2.\tImpact of network slicing is across multiple work items. Therefore, study for network slicing extensions is to be looked at from the perspective of multiple work items.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.13\tKey Issue #12: 3GPP Service Handler and URLs",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.13.1\tDescription",
                            "text_content": "In many cases, media services are deployed on top of 3GPP systems, in particular the 5G System. In a typical architecture as shown in Figure 5.13.1-1, a media service is provided as an IP service on top of the 5G System.\nThe figure depicts a baseline architecture for third-party service over-the-top (OTT) services, illustrating the various components and their interconnections. The figure includes a base station (BS), a set of network elements, and a set of third-party service providers. The architecture is designed to support multiple OTT services, ensuring seamless integration and efficient use of network resources.\nFigure 5.13.1-1 Baseline Architecture – Third-party Service Over-the Top\nIn this scenario, UE applications are not assumed to have knowledge of 5G Media Streaming, for example a DVB-I Client. Hence, the terms Media Service Application and Portal Application are used throughout this Key Issue instead of 5GMS-Aware Application. In a possible normative work stage, the terms may be replaced with for example \"non 5G-aware\" application.\nNOTE:\tThe case where a 5GMS-Aware Application translates a conventional media service entry URL to a 3GPP Service URL is not precluded.\nIn this context, a Media Service Provider refers to a party that makes use of the 5G System for media delivery but uses only a subset of the functionalities provided by the 5G System.\nThe media service is announced in a Portal Application running in the UE, for example a portal web page or similar electronic service guide, as a link published on social media, or as an entry in a DVB-I service list [97]. In all cases, the service announcement includes a media service entry point URL. When a service is selected in the Portal Application, it launches the URL of the corresponding media service entry point.\nIn the general case, the media service entry point is consumed by a separate Media Service Application in the UE which takes responsibility for interacting with the UE modem to stream the media (downlink or uplink) of the selected media service.\nNOTE:\tIn some deployments, the functions of the Media Service Application are a system service provided by the UE Operating System, or the Portal Application and the Media Service Application are fused together and installed as a single application. In such cases, the Portal Service Provider and Media Service Provider are typically a single entity also.\nThe Android UE Operating System allows a URL to be used by one application to launch a specific other application on the same UE [98]. An application wishing to handle certain URI prefixes does so by declaring a suitable intent filter in its application manifest (a so-called web URI intent declaration).\nAndroid recognises three different types of link:\n-\tDeep links are URIs of any scheme that take users directly to a specific part of an application.\n-\tWeb links are deep links that use the HTTP and HTTPS schemes.\nNOTE:\tOn Android 12 and higher, clicking a web link (that is not an ) always shows content in a web browser.\n-\tAndroid App Links, available from Android 6.0 onwards (API level 23 and higher), are web links that use the HTTP and HTTPS schemes and contain the autoVerify attribute. This attribute allows the application to designate itself as the default handler of a given type of link. Android App Links leverage HTTP URLs and association with a website. If no installed application has declared an intent for the trigger URL, the content at that URL is instead displayed in a web browser, from where the user may be invited to install the application.\niOS supports similar functionalities. Details are for future study.\nA basic call flow for the general case (where the Media Service Application is separate from the Portal Application and the Media Service Provider is separate from the Portal Service Provider) is provided in figure 5.13.1-2.\nThe figure depicts a call flow for an OTT (Over-the-Top) third-party service, illustrating the various steps involved in the call setup and routing. The flow includes the initiation of the call, the routing to the first party, the call setup, the call termination, and the call rerouting to the second party. The figure is a visual representation of the complex call setup process, highlighting the importance of proper call routing and call setup in ensuring a smooth and efficient call experience.\nFigure 5.13.1-2 Baseline call flow – over-the-top third-party service\nThe call flow is as follows:\n1.\tThe user installs the Portal Application.\n2.\tThe user installs the Media Service Application. The manifest of the Media Service Application declares an Intent filter for one or more media entry point URL prefixes.\n3.\tThe Portal Service Provider receives a media service entry point from the Media Service Provider.\n4.\tA UE establishes a connection to the 5G System.\n5.\tThrough this connection (or by other means) the Portal Application discovers the set of currently available media services and their entry point URLs.\n6.\tThe user selects a media service in the Portal Application's user interface.\n7.\tThe Portal Application requests the media service entry point URL corresponding to the media service selected in the previous step.\n8.\tBecause the media service entry point URL matches one of the declared Intent filters for the Media Service Application, the UE Operating System intercepts the request and instead launches the Media Service Application, passing the URL as a parameter.\n9.\tThe Media Service Application now requests content from the Media Service Provider.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.13.2\tCollaboration Scenarios and Deployment Architectures",
                            "text_content": "3GPP has developed several specifications whereby a third-party service may use additional 5G System functionalities, either as supporting functions (e.g. 5GMS Media Session Handler and 5GMS AF) or as essential functions (e.g. delivery via MBMS for which an MBMS Client is needed). Such 3GPP-defined functions may be in the UE, in the network, or both. This is shown in figure 5.13.2-1.\nThe figure depicts a complex telecommunication architecture, specifically focusing on the 5G network. It illustrates the signal propagation in a 5G network, highlighting the role of base stations (gNB), user equipment (UE), and scatterers. The diagram highlights beamforming techniques to mitigate interference, and the architecture is extended with 5GS functions, emphasizing the importance of network slicing and virtualized networks.\nFigure 5.13.2-1 Architecture extended with 5GS functions\nExamples of 3GPP-defined functions include, but are not limited to:\n-\tDASH/HLS Service + using MBMS User Services.\n-\tDASH/HLS Service + using 5G Broadcast Services (i.e. MBMS Receive-Only Mode).\n-\tDASH/HLS Service + using MBS User Services.\n-\tDASH/HLS Service + using 5G Media Streaming functionalities.\n-\tXR Service using 5G Edge Enablers.\nThe third-party service may be served/supported through a 5G System. In order to do so, a dedicated client function needs to be initialized in order to carry out specific functions, for example:\n-\tMBMS Client (UE) and BMSC (see TS 26.346 [54] and TS 26.347 [99]).\n-\tMBS Client (UE) and MBSF/MBSTF (see TS 23.247 [101], TS 26.501 [15], TS 26.512 [16]).\n-\t5GMS Media Session Handler (UE) and 5GMS AF (see TS 26.501 [15], TS 26.512 [16]):\n-\tConsumption Reporting.\n-\tMetrics Reporting.\n-\tDynamic Policies.\n-\t5G Broadcast Receiver (UE).\n-\tEdge-Enabler Client (UE) and Edge Application Server.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.13.3\tMapping to 5G Media Streaming and high-level call flows",
                            "text_content": "Figure 5.13.3-1 provides the potential call flow for launching a dedicated 5G System function.\nThe figure depicts a call flow to launch dedicated 5G System functionalities, illustrating the various steps involved in initiating 5G services. The flow includes initiating a call to the 5G core network, which is responsible for managing the 5G network, and then initiating a call to the 5G core network's dedicated 5G System functionalities. This flow ensures that the 5G core network is properly configured and ready to support 5G services.\nFigure 5.13.3-1 Call flows to launch dedicated 5G System functionalities\nThe call flow is as follows:\n1.\tThe Portal Service Provider receives a media service entry point from the Media Service Provider.\n2.\tThe Media Service Provider establishes a provisioning session with the 5G System for the service.\n3.\tA UE establishes a connection to the 5G System.\n4.\tThrough this connection (or by other means) the Portal Application discovers the set of currently available media services and their entry point URLs.\n5.\tThe user selects a media service in the Portal Application's user interface.\n6.\tThe Portal Application requests the media service entry point URL corresponding to the media service selected in the previous step.\n7.\tOnce the entry point is received, now by some magic, the device-centric dedicated 5GS UE function (e.g. 5GMS Media Session Handler, MBMS Client, MBS Client, etc.) is launched.\n8.\tOnce launched, the UE connects to the peer network functions (e.g. 5GMS AF, BM-SC, MBSF, etc.) and establishes additional functionality.\n9.\tBy another magic, the Media Service Application is automatically launched.\nNOTE:\tIf the Media Service Application is fused with the Portal Application, this launch step is an internal function call.\n10.\tThe Media Service Application now requests content from the Media Service Provider and is supported by the 5G System function launched in step 7.\nIn particular, the magic execution in steps 7 and 9 have not been discussed in detail before now. Different implementation options may exist but may require changes to existing applications.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.13.4\tPotential open issues",
                            "text_content": "As indicated in clause 5.13.3, the main open question in relation to the present document is how the dedicated 5G functions (e.g. 5GMS Media Session Handler, MBMS Client, MBS Client, etc.) are launched. A few options are considered in the following.\n1:\tAn API is created to the device function and the application initializes the function through these APIs – this is, for example, what TS 26.347 [99] assumes.\n-\tProblem: the application on the device needs to have specific provisioning to establish this function.\n-\tUnlikely to be broadly available.\n2:\tUsing a non-HTTP(S) URL as a Media Entry Point that resolves the link by specific handling.\n-\tThis option is, for example, done for MBMS User services in TS 26.347 [99].\n-\tThe URL contains sufficient information to access the service.\n-\tHowever, the problem here is that the URL is not automatically handled by the UE Operating System (e.g. Android) or browser.\n3:\tUsing an HTTP(S) URL as a Media Entry Point that triggers some specific actions\n-\tThis allows the service to be activated by the user simply \"clicking\" it, or by advertising the link in some portal-based user experience. For example, HTTP URLs in SMS text messages are \"clickable\" in Android.\n-\tOnce the user has selected the link described by the URL, the service bootstraps by setting up the appropriate 3GPP functions and connects to the network.\nIn particular option 3 is attractive because it is aligned with existing application development practices. The main issue is to consult a UE-resident URL handler/resolver that bootstraps the service URL and does all the appropriate actions, for example:\n-\tEnable MBMS reception,\n-\tSet up a 5G Media Streaming session (Media Session Handler – 5GMS AF) and so on.\n-\tIn one specific case at least (MBMS Receive-Only Mode service) this needs to be done only on the UE.\nThe basic idea is to specify 3GPP-defined HTTP URLs that:\n-\tInitiate execution of this service bootstrapping with a basic function on the UE to support:\n-\tInitiating some pre-installed functions (e.g. Receive-Only Mode operation).\n-\tLaunching device functions.\n-\tAllow additional network functions to support the resolution of the service URL, for example go to a specific AF providing more service-related information and launching network functions.\nUntil now, 3GPP has avoided the detailed question of how to bootstrap 5G Media Streaming and has deferred such aspects to implementation, device pre-configuration, and so on. We understand that device pre-configuration such as OMA Device Management (DM) is no longer broadly in operation.\nHence, candidate solutions for adding a 3GPP Service Handler in the UE and network for the purpose of 5GMS service launch are considered in the following clause, as shown in figure 5.13.4-1.\nThe figure depicts a 3GPP Service Handler architecture, which is a key component in 3GPP Release 13.4. It is designed to handle the signaling and control traffic for the 3GPP RAN, ensuring efficient and reliable communication. The figure includes various components such as the Service Handler, Service Request Manager (SRM), and Service Control Manager (SCM), which work together to manage the signaling and control traffic. The architecture is designed to be modular and scalable, allowing for easy expansion and adaptation to future network requirements.\nFigure 5.13.4-1 Architecture with 3GPP Service Handler\nBased on the Figure 5.13.4-1, different potential solutions exist:\n1:\tNetwork-based resolution:\n-\tRequest URL is constructed such that it is resolved in a dedicated 3GPP network function.\n-\tRequest URL resolves to a network function that triggers some support function in network.\n-\tNetwork function returns media service entry point URL to the UE, for example in the form of an HTTP(S) redirection.\nNOTE:\tThis network functionality resembles that of the DVB-MABR Multicast rendezvous service when it is deployed in the network (see clause 6.1 of ETSI TS 103 769 [100]).\n-\tMedia Service Application is launched based on returned media entry point URL, for example by means of Android App Link intent.\n2:\tUE-based resolution:\n-\tRequest URL is a 3GPP Service URL constructed to include service information, service parameters and media entry point URL.\n-\tIn this case, the 3GPP Service URL triggers the handling of the URL by:\n-\tOptionally, communicating with the network function to establish functions in the network (possibly getting additional service parameters and media entry point URL).\n-\tLaunching the dedicated 5G System functions based on the URL parameters.\n-\tLaunching the Media Service Application using the media entry point URL extracted from the 3GPP Service URL, for example by means of Andoid App Link intent.\nBoth solutions are valid and are discussed in more detail in the remainder of this clause.\nIf no handler is available for the media service entry point URL on the UE, it simply resolves to a 3GPP network function. This scenario is shown in figure 5.13.4.2-1. The application provider’s media service entry point URL is directly handled in the UE.\nThe figure depicts a network-based solution architecture with a 3GPP Service Handler, illustrating the integration of various components such as the network-based solution, 3GPP Service Handler, and the 3GPP Service Manager. The figure highlights the importance of network-based solutions in ensuring efficient and reliable communication, as well as the role of the 3GPP Service Handler in managing and orchestrating the network-based solution.\nFigure 5.13.4.2-1 Architecture with 3GPP Service Handler in network-based solution\nFigure 5.13.4.2-2 provides the potential call flow for a network-based solution.\nThe figure depicts a call flow in a 3GPP network, specifically focusing on the 3GPP Service Handler. It illustrates the flow of calls between different network entities, including the Service Handler, the Network Operator, and the Service Provider. The figure provides a visual representation of the network's structure and the interactions between these entities, which is crucial for understanding the network's functionality and design.\nFigure 5.13.4.2-2 Call Flow with 3GPP Service Handler in network only\nThe call flow is as follows:\n1.\tThe Portal Service Provider receives a media service entry point from the Media Service Provider.\n2.\tThe Media Service Provider establishes a provisioning session with the 5G System for the service.\n3.\tA UE establishes a connection with the 5G System.\n4.\tThrough this connection (or by other means) the Portal Application discovers the set of currently available media services and their entry point URLs.\n5.\tThe user selects a media service in the Portal Application's user interface.\n6.\tThe Portal Application requests the media service entry point URL corresponding to the service selected in the previous step. This points directly to the 3GPP Service Handler in the network.\n7.\tThe 3GPP Service Handler in the network launches the relevant network function(s).\n8.\tThe 3GPP Service Handler in the network redirectsthe Portal Application to the Media Service Application by returning a URL matching one of the declared intents of the Media Service Application.\n9.\tThe Media Service Application is automatically launched based on the URL\n10.\t\tThe Media Service Application now requests content from the Media Service Provider and is supported by the 5G System function.\nIn a second case, the URL is resolved in a 3GPP Service Handler function in the UE, but may optionally be assisted by a resolution in the network, as shown in figure 5.13.4.3-1. The application provider URL is directly handled in the UE-based 3GPP Service Handler, but additional service parameters may be obtained by it from the network-based 3GPP Service Handler.\nThe figure depicts a 3GPP Service Handler combined in the network and UE, illustrating the integration of the Service Handler with the network and UE architecture.\nFigure 5.13.4.3-1 Architecture with 3GPP Service Handler combined in network and UE\nFigure 5.13.4.3-2 provides the potential call flow for a combined solution.\nThe figure depicts a call flow in a 3GPP Service Handler with a combined solution, illustrating the various steps and interactions between the service handler, the network, and the user. The figure includes a flow diagram, a network diagram, and a user interface, providing a comprehensive overview of the call flow and its components.\nFigure 5.13.4.3-2 Call flow with 3GPP Service Handler with combined solution\nThe call flow is as follows:\n1.\tThe portal service provider receives a media service entry point from the Media Service Provider.\n2.\tThe Media Service Provider establishes a provisioning session with the 5G System for the service.\n3.\tA UE establishes a connection to the 5G System.\n4.\tThrough this connection (or by other means) the Portal Application discovers the set of currently available media services and their entry point URLs.\n5.\tThe user selects a media service in the Portal Application's user interface.\n6.\tThe Portal Application requests the media service entry point URL corresponding to the media service selected in the previous step, which points to the local 3GPP service handler.\n7.\tThe UE-based 3GPP Service Handler may collect additional service parameters from its peer network-based 3GPP Service Handler.\n8.\tThe UE-based 3GPP Service Handler launches the Dedicated 5GS UE Function (e.g. 5GMS Media Session Handler, MBMS Client, MBS Client, etc.). Launch may be achieved by invoking the defined APIs of the Dedicated 5GS UE function, for example those for the MBMS Client defined in TS 26.347 [99]. If these APIs do not exist, then the the UE-based 3GPP Service Handler and the Dedicated 5GS UE Function may be considered \"one\" functional block and this step is an function call internal to that block.\n9.\tThe Dedicated 5GS UE Function may collect information from its peer Dedicated 5GS Network Function (e.g. 5GMS AS, BM-SC, MBSF, etc.).\n10.\tThe UE-based 3GPP Service Handler also launches the Media Service Application on the UE.\n11.\tInter-process communication between the Media Service Application, UE-based 3GPP Service Handler and the Dedicated 5GS UE Function is established – this may for example allow to exchange status information, get notifications as typically provided over M6.\n12.\tThe Media Service Application now requests content from the Media Service Provider using the URL for the media service in the way described in clause 5.13.1, for example through Android app links, or by using the APIs defined by the Media Service Application to hand over the media URL.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.13.5\tCandidate Solutions – 3GPP Service and URL handler",
                            "text_content": "In order to address the cases in clause 5.13.4, it is proposed to:\n-\tRegister a unique host name in the 3GPP-managed domain 3gppservices.org for each 3GPP service as part of 3GPP specifications such that service instances can be referenced under a controlled URL, e.g. http://ms.launch.3gppservices.org and https://ms.launch.3gppservices.org for 5G Media Streaming services.\n-\tSpecify a website/redirection mechanism in case a suitable 3GPP Service Handler is not already installed on the UE to handle the URL.\n- \tThe URL itself needs to be constructed in such a way that it can be resolved to the media service, for example by embedding the media entry point URL.\n-\tSpecify an application/service that realises the UE-based 3GPP Service Handler which declares an intent filter so that the application acts as the default handler for the 3GPPP Services domain name registered above. The intent filter includes the following declarations:\n-\tThe DEFAULT category to allow the application to respond to implicit intents.\n-\tThe BROWSABLE category in order for the intent filter to be invoked when clicking a link in a browser.\n-\t<data> tags including the android:scheme attribute for both HTTP and HTTPS.\n-\tA <data> tag including the android:host attribute with the registered 3GPP Services domain.\n-\tVerify ownership details see .\nAn example intent filter is provided below:\n\nBased on this setup, the following set of actions and calls happen:\n1.\tA 3GPP Service Handler background service is pre-installed on the UE by the vendor or installed once by the user. The manifest includes an intent filter that declares an interest in the 3GPP Services domain.\n2. \tThe Media Service Provider has a service with an entry point URL.\n3.\tThe Media Service Provider negotiates all service parameters with the 5G System (provisioning).\n4.\tThe Media Service Provider creates a bootstrapping URL (much like a landing page URL).\n-\thttp://<service type identifier>.launch.3gppservices.org/<service parameters>\n-\thttps://<service type identifier>.launch.3gppservices.org/<service parameters>\nExample service type identifiers could include:\n-\tms with a service parameter that identifies or resolves to a 5GMS Provisioning Session to indicate the necessity to initiate media session handling for 5G Media Streaming.\n-\tmbms with MBMS parameters for Receive-Only Mode operation to indicate the necessity to launch the MBMS Client in order to initiate reception of a MBMS User Service.\n-\tmbs with an MBS Service identifier to indicate the necessity to launch the MBS Client in order to initiate reception of a 5G Multicast–Broadcast User Service.\n-\tims to indicate use of the IP Multimedia Subsystem.\n-\tetc.\nService parameters are formatted as path elements and/or query parameters and could include:\n-\tA service identifier that is preferably globally unique so that the same value can be used in different 5G Systems.\n-\tThe service entry point URL of an application service to be launched by the UE-based 3GPP Service Handler.\n5.\tThe Media Service Provider provides:\n-\tOnly the 3GPP Service URL to a Portal Service Provider, search engine, etc., if the service requires 3GPP service launch. This may embed the service entry point URL.\n-\tBoth the service entry point URL and the 3GPP Service URL, if the 3GPP service is only an enhancement to launch the third-party service.\n6.\tThe Portal Service Provider provides these URLs to the Portal Application running on the UE, e.g. as part of a script, for display in a web page etc.\nWhen the service is selected by the user, the Portal Application obtains or generates a 3GPP Service URL and submits a request for it.\n7.\tIf a 3GPP Service Handler for the requested service type identifier is already installed on the UE, it is invoked in the background by the mobile Operating System via its registered intent filter to handle the URL and:\n-\tUses the service parameters to establish the 3GPP service in the background (if appropriate or available) and potentially connects to the network.\n-\tExtracts the media service entry point URL from the 3GPP Service URL  and uses it to the Media Service Application.\n-\tEstablish Inter-Process Communication with other UE functions, as required.\n-\tThe Media Session Handler (Media Player or Media Streamer) may be launched by the 3GPP Service Handler, if separate from the Media Service Application.\n8.\tIf a 3GPP Service Handler for the requested service type identifier is not yet installed on the UE:\n- \tA network service is called and runs the 3GPP Service URL resolution. In the simplest case, this resolution, included in the MNO's network, redirects to the media service or\n- \tAn HTTP 404 client error response is returned by the UE Operating System and the Portal Application either terminates the service or uses the alternate over-the-top entry point.\nIn this case the media service URL is extended with query parameters (or similar) of interest to the 3GPP Service Handler. This requires the Media Service Application to understand that it requires/benefits from a 3GPP service and requires it to launche the 3GPP Service Handler application. The Media Service Application needs to be specifically built for this, adding for example intent filters.\nhttp://<media service application host and path>/?3GPP-service=<service parameters  or URL>\nIn another option, at least the first option may be addressed with a DNS resolution. In this case\n1)\tA common 3gpp: URL scheme automatically launches a 3GPP resolver.\n2)\tThe 3GPP resolver uses DNS service resolution to request SRV records.\n3)\tThe resolution provides all required service parameters.\n4)\tIn case of Receive-Only Mode operation, DNS service resolution may happen within the UE based on pre-configuration.\n5)\tAlternative or new record types may be defined.\n- \tURI DNS record may be suitable for this use case.\nmbs://netflux.com/series8  mbs  URI-DNS  DNS query URI dns://netflux.com\nAn example URI DNS record is provided as follows:\n_mbs-rom._tcp IN URI   10 1 \"http://www.example.com/path/service-announcement\"\nFigure 5.13.5.3-1 provides a service architecture with DNS functionality.\nThe figure depicts a service architecture with DNS functionality, illustrating the various components and their interconnections. The diagram includes a DNS server, a DNS resolver, and a DNS client, all interconnected through a network. The DNS server is responsible for storing and serving DNS queries, while the resolver is responsible for translating the query into an IP address. The client is responsible for receiving the IP address and resolving it to the desired domain name. The diagram also includes a DNS cache, which stores previously resolved DNS queries for faster lookups. Overall, the figure provides a comprehensive overview of the service architecture, highlighting the interconnections and the role of each component in the DNS process.\nFigure 5.13.5.3-1 Service architecture with DNS functionality\nThe problem with such an approach is that the URL does not use the HTTP scheme and hence is not supported by the Android intent filter mechanism. A dedicated DNS query would have to be implemented.\nSolution 1, registering a 3GPP Service domain for use in URLs as described in clause 5.3.4.1, has multiple benefits in comparison with the other candidate solutions:\n- \tURL is clickable, and can for example be added to web pages, text messages and so on. This is not the case for solution 3.\n- \tIf service is not found, this can be returned to portal and alternative URL may be used.\n-\tCan be applied for any third-party application and does not require any changes to app. This is not the case for solution 2.\n-\tIs likely extensible also to iOS to install a similar function on the device.\n-\tService can be launched including Interprocess Communication (IPC). Not the case for solution 2 and 3.\nA few open issues still exist, but may be left to implementation:\n-\tIt is unclear if the 3GPP Service Handler application can be launched as a background service on common UE Operating Systems.\n-\tHow could this model work for webRTC-based services?\n-\tDoes the service scale properly?\n-\tWhat are security/authorization aspects?\n-\tWhat are the implications of every MNO running its own 3GPP Service Handler as a background service?\n-\tCan such a 3GPP Service Handler be pre-installed on a device by the UE vendor as a common UE Operating System function?\n-\tHow can the lifecycle of the 3GPP Service Handler background application be managed and monitored?\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "An example intent filter is provided below:",
                                    "table number": 18,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.13.6\tSpecific cases",
                            "text_content": "In this case, an Emergency Service Provider also wants to distribute the Emergency Alerts through LTE-based 5G Broadcast. This is for example relevant in at least two cases:\n1.\tUE consumes service from broadcast network and hence is camped on the LTE-based 5G Broadcast ROM service and therefore receives the SIB messages from the MBMS ROM system.\n2.\tMNO PLMN is not accessible and therefore the UE camps on the broadcast network because it is the only available system, for example in disaster situations during which the mobile network is not up and running, or in remote coverage areas.\nIn addition, an Emergency Media Broadcast Service may be provided. Assume the setup documented in figure 5.13.6-1.\nThe figure depicts a potential architecture for emergency warning through 5G broadcast, with pointers to media services. It illustrates the use of 5G technology to deliver emergency alerts to a large audience, with the help of media services. The figure includes key components such as base stations (gNB), user equipment (UE), and media services, which are essential for the effective delivery of emergency alerts.\nFigure 5.13.6-1 Potential Architecture for Emergency Warning through 5G Broadcast with pointers to media services\nUsing the principles of Solution 1,\n-\tDefine a URL for 3GPP services as part of 3GPP specifications, e.g. services.3gpp.org\n-\tDefine a service sub-domain mbms\n-\tAdd the relevant parameters from mbms-URL as defined in TS 26.347, clause 8.4 to the URL\n-\tIn operation,\n-\tinstall a background app that handles the URL.\n-\tEmergency media application provider has a service and wants to provide it through MBMS.\n-\tThe 3GPP System provides a URL to the Emergency service provider with all relevant parameters\n-\tgpp-services.com/mbms/<service parameters>/<URL to application service>\n-\tThe Emergency media application service provider provides to the CMAS provider.\n-\tOnly the 3GPP MBMS Service URL, if the service is only available over MBMS.\n-\tBoth URLs, the unicast and the 3GPP service URL, if the 3GPP service is available on both.\n-\tThe emergency service provider adds the URLs to a CMAS message as a textual description.\n-\tThe user reads the message and clicks on the 3GPP Service URL.\n-\tThe click deep-links to the 3GPP Service app and the service app.\n-\tidentifies MBMS and launches the MBMS client.\n-\tIdentifies the third-party entry point and launches the URL.\nFigure 5.13.6-2 provides the architecture and messages exchanged for the above use cases.\nThe figure depicts the architecture and messages to CMAS-based service launch in a 5G network. It illustrates the use of carrier-sensing and carrier-sensing-based services (CS-BS) to enhance network performance. The figure includes key components such as the base station (gNB), user equipment (UE), and the Centralized Management and Access Service (CMAS). The diagram highlights the use of carrier-sensing and carrier-sensing-based services to improve network performance.\nFigure 5.13.6-2 Architecture and messages to CMAS-based service launch\nThe following call flow and actions happen.\n1. User gets emergency notifications, click on “registered” URL.\n2. Android system sends the URL to the service handler (background app).\n3. The service handler does two things:\na: Start the middleware based on part of the URL (e.g. frequency, TMGI).\nb: Start the application and send a URL.\n4. The “UE Service Handler” serves as an HTTP proxy for the Application#2.\na. Gets files from the MW.\nb. Serves files to Media app.\nIn this case, it may not be necessary that the URL includes the application service entry point, but the entry point is included in a service announcement file related to the 5G UE functions. As an example, the service entry point is part of the MBMS User Service Description.\nWith reference to candidate Solution 1 outlined in clause 5.13.5.1, clause 5.13.6.2.2 proposes a format for a 3GPP Service URL that can be used by a 5GMS-Aware Application (playing the dual role of Portal Application and Media Service Application) to launch a 5G Media Streaming Session using an external service identifier proposed in clause 5.13.6.2.3. The proposal is aligned with clause B.1 of TS 26.501 [15] which describes a DNS-based solution to MNO-specific Service Access Information acquisition.\nIn this proposal, the 5GMS Media Session Handler plays the role of 3GPP Service Handler. A procedure for handling the 5GMS Service URL in the Media Session Handler is proposed in clause 5.13.6.2.4.\nThe 3GPP Service URL format used to initiate 5G Media Streaming sessions takes the following form:\nhttp[s]://ms.launch.3gppservices.org/service-id/{external_service_id}?{query_parameters}\nThe parameters of the 5GMS Service URL are as follows:\nTable 5.13.6.2.2-1: 5GMS Service URL parameters\n\nThe external_service_id path element and af-host query parameter correspond to the baseline Service Announcement for 5G Media Streaming envisaged in TS 26.501 [15]. Together, they enable a full set of Service Access Information to be retrieved by the Media Session Handler from the 5GMS AF using the M5 Service Access Information API.\nThe media-entry-point parameter is used to support the procedure where the Media Session Handler launches media playback in the Media Stream Handler (Media Player or Media Streamer) after successfully retrieving a full set of Service Access Information via reference point M5 (if needed) and after successfully initiating media session handling.\nThe remaining parameters are used for client-side filtering of Media Entry Point information provided in the Service Access Information and selection of one Media Entry Point by the Media Session Handler. (They are mutually exclusive with the media-entry-point parameter.) In this case, media playback by the Media Stream Handler (Media Player or Media Streamer) is launched by the Media Session Handler with its chosen Media Entry Point.\nIf the 5GMS-Aware Application wants to launch media streaming itself (rather than have the Media Session Handler launch media streaming on its behalf), the media-entry-point query parameter and all client-side filtering parameters are omitted from the Service URL. In this case, the Media Session Handler only initiates media session handling for the 5GMS Provisioning Session identified by the External Application Identifier.\nThe list of parameters could be extended to allow a 5GMS-Aware Application to pass a complete set of Service Access Information (previously acquired by it via reference point M8) to the Media Session Handler, thereby avoiding the need for it to invoke the M5 Service Access Information API on the 5GMS AF. However, since not all parameters available in M5 Service Access Information are provided back to the 5GMS Application Provider by the M1 Provisioning APIs, a fully comprehensive solution may not be possible.\nNote the use of a new External Service Identifier rather than the Provisioning Session ID in the 5GMS Service URL. The Provisioning Session ID is different for every 5GMS System, and it is subject to change in a given 5GMS System if 5GMS services are reprovisioned. Both facets of the Provisioning Session ID are therefore inconvenient for a 5GMS-Aware Application that is intended to work on different 5GMS Systems. Using a stable, cross-system identifier to retrieve Service Access Information is significantly preferable.\nFor an External Service Identifier to be useful and convenient in the context of 5G Media Streaming:\n1.\tIt needs to be unique on a given 5GMS System so that it can be used for retrieval of Service Access Information at reference point M5.\n-\tAttempting to create more than one Provisioning Session at reference point M1 with the same External Service Identifier is an error.\n2.\tIt needs to be the same across all 5G Systems so that a single 5GMS-Aware Application is portable between 5G Systems.\n-\tImplies a need for External Service Identifier values to be allocated by a party other than an MNO.\n-\tValues could be allocated by a centralised registry function (e.g., run by 3GPP).\n-\tFor better scalability, values could be allocated in a distributed fashion by each Application Service Provider (5GMS Application Provider).\nA globally unique identifier, such as a URI (e.g., a URN or tag URI), UUID, Fully-Qualified Domain Name or reverse FQDN (e.g. uk.co.bbc.iplayer.vod) would satisfy both of the above requirements.\nIt is proposed that TS 26.512 [2] specifies that the External Service Identifier is formatted as a reverse FQDN for the following reasons:\ni)\tA reverse FQDN is likely to be considerably shorter than a UUID.\nii)\tUnlike a URI, a reverse FQDN does not typically require percent encoding to embed its value in the 3GPP Service URL.\niii)\tReverse FQDNs are typically used by application developers as part of class package names.\nThe Media Session Handler plays the role of 3GPP Service Handler for 5GMS Service URLs by registering itself as the URL handler for the domain name ms.launch.3gppservices.org (e.g., by declaring an intent filter in an Android application manifest). Hence, the Media Session Handler is launched when a 5GMS-Aware Application requests a 5GMS Service URL (e.g., by means of an Android intent filter).\nBased on the information supplied in the 5GMS Service URL, the Media Session Handler forms the M5 request URL for Service Access Informaiton as follows:\nhttp[s]://{apiRoot}/3gpp-m5/service-access-information/{external_service_id}\nNOTE:\tThis implies a change to clause 11.2.2 in TS 26.512 [16] which currently specifies the use of the Provisioning Session ID to retrieve Service Access Information as the final path element of the request URL.\n1.\tIf the Media Session Handler was invoked with one or more af-host-address query parameters, the Media Session Handler chooses one to substitute into {apiRoot} in the above request URL.\na.\tThis corresponds to collaboration scenarios where the 5GMS AF is deployed in the External DN.\nb.\tThe party operating the 5GMS AF is responsible for ensuring that the hostname(s) resolve to the correct IP address(es) in the External DN.\nc.\tIf the port number is omitted from any af-host-address, port 443 is assumed.\nd.\tIf more than one af-host-address query parameter is supplied in the Service URL, the Media Session Handler may use an alternative host endpoint address at reference point M5 if the one it is using fails to respond after some implementation-specific number of retries.\n2.\tIf the af-host-address query parameter is omitted, the default host name ms.af.3gppservices.org and port number 443 is used instead.\na.\tThis corresponds to collaboration scenarios where the 5GMS AF is deployed in the Trusted DN.\nb.\tThe 5G System operator is responsible for supporting resolution of this well-known host name to the correct IP address(es) in the Trusted DN, e.g., by managing appropriate DNS records.\nc.\tThe 5G System operator is responsible for ensuring that a resilient service is available at this host endpoint address. If the hostname resolves to multiple IP addresses, the Media Session Handler may use a different one at reference point M5 if the one it is using fails to respond after some implementation-specific number of retires.\nd.\tIt is recognised that correct resolution of the hostname may be hampered if the end user configures an alternative DNS resolution service. Unless the Media Session Handler can override this and use the 5G System DNS resolution service, this is considered a failure case for 5G Media Streaming session initiation that is reportable to the end user.\n3.\tIf the Media Session Handler was invoked with the optional media-entry-point query parameter, the Media Session Handler issues a request for this URL (thereby chaining the Media Stream Handler), but only after it has successfully retrieved the Service Access Information from the 5GMS AF.\nDepending on the success (or otherwise) of retrieving the Service Access Information (and optionally chaining the Media Stream Handler with the media entry point), the Media Session Handler returns an appropriate HTTP status code to the invoking 5GMS-Aware Application.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.13.6.2.2-1: 5GMS Service URL parameters",
                                    "table number": 19,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.13.7\tConclusion",
                            "text_content": "Until now, 3GPP specifications for 5G Media Streaming have avoided addressing the detailed question of how to bootstrap 3GPP-defined UE and network functions such as the Media Session Handler or the MBMS/MBS Client. This is deferred to implementation, device pre-configuration, and so on. However, the lack of specification covering this Key Issue is hindering adoption of 5GS-supported media services because today UE applications may have to be modified in order to support such services.\n3GPP defines the ability to use DNS Resolution and non-HTTP URL handling. However, handling non-3GPP URLs in common devices is not broadly supported by commonly available high-level UE Operating Systems and HTTP-based URL handling is preferred. Of the candidate solutions studied in clause 5.13.5, Solution 1 (clause 5.13.5.1), namely creating an HTTP(S) URL that is 3GPP-owned, is preferred.\nBased on this conclusion, it is proposed to:\n-\tExtend the baseline 5G Media Streaming architecture to add a 3GPP Service and URL Handler in the UE and the network according to figure 5.13.3-1.\n-\tAddress provisioning, message exchange and call flows in order to support different use cases, namely the case for which the URL is resolved in the network, the URL is resolved in the UE, and the case for which the URL is resolved in a combination of network and UE as discussed in clause 5.13.3.\n-\tSpecify a concrete URL format for 3GPP services with individual host names registered in the 3GPP-managed domain launch.3gppservices.org as part of 3GPP specifications, and ensure that this can be used in the context of 3GPP-based services, namely:\n-\tSpecify a suitable website redirection mechanism in case a suitable 3GPP Service Handler is not already installed on the device to handle the URL.\nThe URL itself needs to be sufficiently unambiguous to resolve to the service entry point URL and may embed the service entry point URL as well.\n-\tSpecify 3GPP Service URL instantiations with parameters suitable for launching at least the Media Session Handler for 5G Media Streaming, MBMS Client (including Receive-Only Mode services) and MBS Client.\n-\tProvide the ability for a 5GMS-Aware Application to create a Service URL in order to bootstrap 5G Media Streaming.\n-\tInvestigate and study the application of 3GPP services and URL handling beyond 5G Media Streaming.\n-\tSpecify an external service identifier assigned by the 5GMS Application Provider that can be used to launch 5G Media Streaming sessions on different 5GMS Systems via a common 3GPP Service URL.\n-\tModify the Provisioning Session resource to include one (or more) of these identifiers.\n-\tModify the Service Access Information API to accept this instead of a Provisioning Session identifier.\n-\tSpecify a default 5GMS AF host name to be used by the Media Session Handler when the 3GPP Service URL does not specify one.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.14\t5GMS Application Server configuration and management",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.14.1\tDescription",
                            "text_content": "The general architecture for 5G Media Streaming illustrated in figure 4.2-1 of TS 26.501 [15] specifies M3 as a reference point between the 5GMS Application Function and the 5GMS Application Server.\nIn the case of downlink media streaming, clause 4.2.1 of [15] specifies that reference point M3d is for internal interactions between these system actors for the purposes of configuring the content hosting feature for 5G Media Streaming:\n\nFurthermore, clause 9 of TS 26 512 [16] does not specify procedures at reference point M3:\n\nBecause there is no interface standardised at reference point M3 in the current release, a 5G System operator must follow one of the following courses to deploy a 5GMS System:\n1.\tDeploy compatible 5GMS AS and 5GMS AF instances with a proprietary configuration interface at reference point M3.\n-\tAchieving this aim may necessitate procurement of both functions from the same vendor.\n2.\tImplement a proprietary configuration interface at reference point M3 between incompatible 5GMS AS and 5GMS AF instances as a system integration exercise.\nBoth approaches are unattractive to a 5G System operator for different and obvious reasons. From this, it may be inferred that deployment of the 5GMS architecture is hampered by the lack of standardisation at reference point M3.\nIn a deployment of the 5G Media Streaming architecture (a so-called \"5GMS System\") a 5GMS AF manages a set of one or more 5GMS AS instances that collectively deliver the required content hosting services for downlink media streaming and/or content publishing services for uplink media streaming.\nIn order to deliver the required service levels, the 5GMS AF needs to know:\n1.\tWhether each 5GMS AS instance under its management is currently operating correctly.\n-\tIf not, the 5GMS AF may need to start a new 5GMS AS instance to replace the one that is no longer operating.\n2.\tWhether each 5GMS AS instance under its management is currently operating comfortably within the envelope of its system capabilities.\n-\tIf the 5GMS AS instance in question is overloaded, the 5GMS AF may need to start an additional 5GMS AS instance in order to satisfy the committed service levels.\n-\tIf the population of 5GMS AS instances has slack capacity, the 5GMS AF may shut down one or more 5GMS AS instances in order to avoid wasting system resources.\nIn the present release, the 5GMS AF does not have standardised access to health and load information about the set of 5GMS AS instances under its management via reference point M3 unless the 5GMS AS is deployed as an Edge Application Server (EAS). From this, it may be inferred that non-edge deployments of the 5GMS architecture are hampered by the lack of standardisation at reference point M3.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "In the case of downlink media streaming, clause 4.2.1 of [15] specifies that reference point M3d is for internal interactions between these system actors for the purposes of configuring the content hosting feature for 5G Media Streaming:",
                                    "table number": 20,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Furthermore, clause 9 of TS 26 512 [16] does not specify procedures at reference point M3:",
                                    "table number": 21,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.14.2\tDeployment architectures",
                            "text_content": "Especially in the case where the 5GMS AS is deployed as a set of Edge Application Server instances, but also in the general case where the 5GMS AS is realised using multiple physical server devices, there may be a large set of 5GMS AS instances to be configured and managed by the 5GMS AF. It is the responsibility of the 5GMS AF to determine which Content Hosting Configurations and/or Content Publishing Configurations to deploy on each 5GMS AS instance in order to balance the load of downlink and/or uplink media streaming appropriately between them to achieve the agreed service levels.\nIt is especially important in a mixed deployment of the 5GMS System that a 5GMS AF from one vendor can configure and manage a 5GMS AS instance from a different vendor in an interoperable manner. For this reason:\n1.\tIt is considered desirable to standardise the configuration of the 5GMS AS at reference point M3.\n2:\tIt is considered desirable to standardise a management interface that enables a 5GMS AF to monitor the status of the estate of 5GMS AS instances it is responsible for. This may be further generalised to a management interface that enables any Application Function to monitor the status of the estate of Application Server instances it is responsible for.\nNOTE:\tThis Key Issues does not address the topic of dynamic operational traffic migration between 5GMS AS instances.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.14.3\tCollaboration scenarios",
                            "text_content": "Figure 5.14.3-1 shows the collaboration between a 5GMS AF and a 5GMS AS it is managing. TS 26.501 [15] designates the reference point between these two logical entities as M3.\nThe figure depicts a collaboration between 5G Mobile Subscriber Equipment (5GMS) and 5G Mobile Access Network (5GMS) under the management of 5G Mobile Subscriber Equipment (5GMS) Access Network (5GMS-AS). The figure illustrates the network architecture, highlighting the role of 5GMS-AS in managing the 5GMS network.\nFigure 5.14.3-1: Collaboration between 5GMS AF and 5GMS AS under its management\nGeneralising this collaboration, any Application Function in the 5G System may be managing an Application Server instance. This generalised collaboration is depicted in figure 5.14.3-2:\nThe figure depicts a simplified representation of a Generalised Collaboration between any AF and an AS under its management, highlighting the key elements such as the AF, AS, and the collaboration process.\nFigure 5.14.3-2: Generalised collaboration between any AF and an AS under its management\nThe relationship between an Application Function and an Application Server instance it is managing is somewhat similar to the relationship between the NRF and an Application Function instance it is managing. As defined in clause 5.2.7.2 of TS 23.502 [24], the NRF exposes an Nnrf_AFManagement service that allows an Application Function instance to register its profile with the NRF and subsequently to report regular heartbeats, including an indication of current Application Function load.\nThe figure depicts a service-based interface for AS and AF management, illustrating the various components and their connections. It highlights the use of APIs and protocols for communication, such as RESTful APIs and HTTP/HTTPS, to facilitate the management of network services. The interface is designed to be user-friendly and intuitive, allowing network operators to manage their network services efficiently and effectively.\nFigure 5.14.3-3: Service-Based interfaces for AS and AF management\nUsing this architectural template, an AS management service interface can be imagined between the AS and the AF, referred to in the above figure as Naf_ASManagement.\nFigure 5.14.3-4 illustrates the subcase where an AS is deployed as an Edge Application Server (EAS). When it starts up, the EAS instance registers itself with an Edge Enabler Service (EES) using the Eees_EASRegistration procedure at reference point EDGE-3, as defined in clauses 6.5.4 and 8.4.3 of TS 23.558 [47].\nThe figure depicts the architectural arrangement for EAS registration with EES, illustrating the various components and their interconnections. The figure includes a central EAS server, a set of EESs, and a network of EESs connected to the EAS server. The EESs are interconnected through a network of optical fibers, with each EES having its own optical line terminal (OLT) and distributed nodes. The figure also shows the use of redundancy paths to ensure failover reliability.\nFigure 5.14.3-4: Architectural arrangement for EAS registration with EES\nThe purpose of this registration is to populate an entry in an EAS instance catalogue maintained by the EES to assist in later discovery of appropriate EAS instances by Application Clients. To this end, the EAS provides at the time of registration an EAS Profile (see clause 8.2.4 of [47]) describing its capabilities, as well as availability information such as time and location constraints.\nThe stage 2 definition of the EAS Profile in table 8.2.4-1 of [47] describes the concept of an availability reporting period property. Based on this property definition, it may be inferred that the EES should periodically check the availability of the EAS instance after successful registration.\nNOTE:\tIn this release, the availability reporting procedure is not further elaborated in TS 23.558 [47], nor does TS 29.558 [102] specify a stage 3 service operation to realise it.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.14.4\tMapping to 5G Media Streaming and high-level call flows",
                            "text_content": "Figure 5.14.4.1-1 shows the high-level call flow for configuring the 5GMSd AS in response to provisioning of the content hosting features in the 5GMSd AF.\nThe figure depicts a high-level call flow for configuring 5G Mobile Subscriber Aggregation (5GMS) as an Application Service (AS) by 5G Mobile Subscriber Aggregation (5GMSd) Application Function (AF). The flow includes various steps such as network planning, network design, network configuration, and network testing. The figure provides a visual representation of the process, making it easier to understand and follow.\nFigure 5.14.4.1-1: High-level call flow for configuration of 5GMS AS by 5GMSd AF\nThe steps in this call flow are summarised as follows, with variations from TS 26.501 [15] highlighted in bold:\n1.\tThe 5GMSd Application Provider creates an umbrella Provisioning Session by invoking the appropriate operation at reference point M1d. The 5GMSd AF allocates a Provisioning Session Identifier and a canonical 5GMSd AS host name for the Provisioning Session and includes these values in the resource representation it returns to the 5GMSd Application Provider.\n2.\tIn the case where HTTPS-based content distribution is desired at reference point M4d, the 5GMSd Application Provider optionally creates server certificate subresources under the Provisioning Session umbrella resource created in step 1 by invoking the appropriate operation at reference point M1d.\n3.\tIn the case where processing of content is required in the 5GMSd AS between content ingest at reference point M2d and content distribution at reference point M4d, the 5GMSd Application Provider optionally creates Content Preparation Template subresources under the Provisioning Session umbrella resource created in step 1 by invoking the appropriate operation at reference point M1d.\n4.\tThe 5GMSd Application Provider provisions the content hosting feature by invoking the appropriate operation at reference point M1d. A Content Hosting Configuration subresource is created under the Provisioning Session umbrella resource created in step 1. This may reference server certificates provisioned in step 2 and/or Content Preparation Templates provisioned in step 3.\nAs a direct result of step 4:\n5.\tThe 5GMSd AF configures in some or all of the 5GMSd AS instance(s) under its management any server certificates referenced by the new Content Hosting Configuration provisioned in step 4 that are not already configured.\n6.\tThe 5GMSd AF configures in some or all of the 5GMSd AS instance(s) under its management the Content Preparation Templates referenced by the new Content Hosting Configuration provisioned in step 4.\n7.\tThe 5GMSd AF configures in some or all of the 5GMSd AS instance(s) under its management the Content Hosting Configuration provisioned in step 4. This may reference server certificates provisioned in step 5 and/or Content Preparation Templates provisioned in step 6.\nFinally:\n8.\tThe 5GMSd AF responds to the 5GMSd Application Provider at reference point M1d indicating whether the operation at step 4 was successful or not.\nFigure 5.14.4.2-1 shows the high-level call flow for configuring the 5GMSu AS in response to provisioning of the content publishing features in the 5GMSu AF.\nThe figure depicts a high-level call flow for configuring the 5G Mobile Subscriber Unit (5GMSu) Access Facade (AF) by the 5G Mobile Subscriber Unit Access Facade (5GMSu AF). The flow includes various steps such as selecting the appropriate 5GMSu AF, configuring the 5GMSu AF, and testing the 5GMSu AF. The figure provides a clear and concise overview of the process, making it easy for users to understand the steps involved in configuring the 5GMSu AF.\nFigure 5.14.4.2-1: High-level call flow for configuration of 5GMSu AS by 5GMSu AF\nThe steps in this call flow are summarised as follows, with variations from TS 26.501 [15] highlighted in bold:\n1.\tThe 5GMSu Application Provider creates an umbrella Provisioning Session by invoking the appropriate operation at reference point M1u. The 5GMSu AF allocates a Provisioning Session Identifier and a canonical 5GMSu AS host name for the Provisioning Session and includes these values in the resource representation it returns to the 5GMSu Application Provider.\n2.\tIn the case where HTTPS-based content contribution is desired at reference point M4u, the 5GMSu Application Provider optionally creates server certificate subresources under the Provisioning Session umbrella resource created in step 1 by invoking the appropriate operation at reference point M1u.\n3.\tIn the case where processing of content is required in the 5GMSu AS between content ingest at reference point M4u and content egest at reference point M2u, the 5GMSu Application Provider optionally creates Content Preparation Template subresources under the Provisioning Session umbrella resource created in step 1 by invoking the appropriate operation at reference point M1u.\n4.\tThe 5GMSu Application Provider provisions the content publishing feature by invoking the appropriate operation at reference point M1u. A Content Publishing Configuration subresource is created under the Provisioning Session umbrella resource created in step 1. This may reference server certificates provisioned in step 2 and/or Content Preparation Templates provisioned in step 3.\nAs a direct result of step 4:\n5.\tThe 5GMSu AF configures in some or all of the 5GMSu AS instance(s) under its management any server certificates referenced by the new Content Publishing Configuration provisioned in step 4 that are not already configured.\n6.\tThe 5GMSu AF configures in some or all of the 5GMSu AS instance(s) under its management the Content Preparation Templates referenced by the new Content Publishing Configuration provisioned in step 4.\n7.\tThe 5GMSu AF configures in some or all of the 5GMSu AS instance(s) under its management the Content Publishing Configuration provisioned in step 4. This may reference server certificates provisioned in step 5 and/or Content Preparation Templates provisioned in step 6.\nFinally:\n8.\tThe 5GMSu AF responds to the 5GMSu Application Provider at reference point M1u indicating whether the operation at step 4 was successful or not.\nFigure 5.14.4.3-1 below shows the call flow for management of a 5GMS AS by a 5GMS AF.\nThe figure depicts a call flow for managing a 5G Mobile Service Aggregator (5GMS) as an Access Network (5GMS-AF). It illustrates the various steps involved in managing the call flow, including the initiation of a call, the routing of the call to the appropriate 5GMS-AF, and the completion of the call. The figure also includes visual elements such as call buttons, call status indicators, and call routing paths, providing a clear and concise representation of the call flow.\nFigure 5.14.4.3-1: Call flow for management of a 5GMS AS by a 5GMS AF\nNOTE 1:\tThe management of a 5GMSu AS instance by the 5GMSu AF are identical to the management of a 5GMSd AS instance by the 5GMSd AF.\nNOTE 2:\tThe call flows below may be generalised to apply to the management of an Application Server by any Application Function.\nThe steps are as follows:\n1.\tA new 5GMS AS instance is spawned by the 5GMS AF. The identity of the managing 5GMS AF instance is passed to the 5GMS AS as a start-up parameter.\nNOTE:\tFor the sake of simplicity, the managing 5GMS AF instance is the same as that which spawns the 5GMS AS instance in the figure. This need not necessarily be the case.\n2.\tThe 5GMS AS instance registers with its managing 5GMS AF by invoking the Naf_ASManagement_‌AFRegister service operation on it.\n3.\tThe 5GMS AS instance may register to receive status update notifications from its managing 5GMS AF by invoking the Naf_ASManagement_‌AFStatusSubscribe service operation on it.\nOperation of the 5GMS AS proceeds with the following two steps occurring asynchronously in parallel:\n4.\tThe 5GMS AS instance periodically sends heartbeat messages to its managing 5GMS AF by invoking the Naf_ASManagement_‌AFUpdate service operation on it. The heartbeat message includes information about the current 5GMS AS load.\n5.\tThe managing 5GMS AF periodically sends status notifications to all 5GMS AS instances that subscribed to these notifications in step 3 above by invoking the Naf_ASManagement_‌AFStatusNotify service operation on them. This may, for example, notify subscribers that another 5GMS AS instance managed by the same 5GMS AF instance has registered, deregistered or sent a heartbeat.\nFinally:\n6.\tAt some later point in time, the 5GMS AF decides to destroy the 5GMS AS instance.\nNOTE:\tFor the sake of simplicity, the managing 5GMS AF instance is the same as that which destroys the 5GMS AS instance in the figure. This need not necessarily be the case.\n7.\tIf it registered to receive status notifications in step 3, the 5GMS AS instance cancels its subscription by invoking the Naf_ASManagement_‌AFStatusUnsubscribe service operation on its managing 5GMS AF.\n8.\tThe 5GMS AS instance deregisters from its managing 5GMS AF by invoking the Naf_ASManagement_‌AFStatusUnsubscribe service operation on it.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.14.5\tPotential open issues",
                            "text_content": "While the value of Application Server registration and heartbeats at reference point M3 is plain, the utility of subscribe–notify operations is less clear.\nThe call flow documented in clause 5.14.4.3 above (where a 5GMS AS instance periodically reports its health and current load to its managing 5GMS AF) mimics the design of an AF reporting its health and load to the NRF, as introduced in clause 5.14.3. An alternative approach would be to align with the design pattern of the Edge Application architecture defined in TS 23.558 [47] by specifying that a 5GMS AF is responsible for periodically checking the availability of the 5GMS AS instances it is managing. Both alternative design patterns are represented in the 5G System specifications and there are no clear arguments in favour of one approach over the other. However, the lack of a concrete specification of this availably checking procedure in TS 29.558 [102] tends to favour the more complete NRF approach defined in clause 5.2.7.2 of TS 23.502 [24] over that of the Edge Application Architecture.\nThe topic of traffic migration between 5GMS AS instances cuts across this Key Issue, as well as that of the Edge Application Architecture. It is suggested that this topic is the subject of future study.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.14.6\tCandidate solutions",
                            "text_content": "A candidate design of the M3 Application Server configuration API based on the call flows documented in clause 5.14.4.1 and 5.14.4.2 is summarised in figure 5.14.6.1-1 below:\nThe figure depicts a candidate design of an M3 configuration AP, which is a type of mobile radio communication system. The design includes a base station (gNB), a mobile radio (MR) module, and a user equipment (UE) module. The figure illustrates the layout of the components, including the antenna, power supply, and communication paths. The design is based on the 3GPP standard, which is used for 3G and 4G mobile communication systems. The figure is important for understanding the technical aspects of the M3 configuration AP design and its components.\nFigure 5.14.6.1-1: Candidate design of M3 configuration AP\nThe proposed applicability of the M3 API operations is summarised in table 5.14.6.1-1 below:\nTable 5.14.6.1-1: Applicability of M3 API operations\n\nA candidate design of the Naf_ASManagement service offered by the AF to AS instances and based on the call flow documented in clause 5.14.4.3 is summarised in figure 5.14.6.2-1 below:\nThe figure depicts a candidate design for the Naf_ASManagement service, which aims to improve the efficiency and reliability of network management. It compares the proposed design with the existing Nnrf_AFManagement service, highlighting potential improvements and improvements in network management.\nFigure 5.14.6-1: Candidate design of the Naf_ASManagement service\nand direct comparison with the existing Nnrf_AFManagement service\nThe proposed applicability of the Naf_ASManagement service operations is summarised in table 5.14.6.2-1 below:\nTable 5.14.6.2-1: Applicability of M3 API operations\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.14.6.1-1: Applicability of M3 API operations",
                                    "table number": 22,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.14.6.2-1: Applicability of M3 API operations",
                                    "table number": 23,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.14.7\tConclusion and recommendations",
                            "text_content": "The case for standardising the configuration of 5GMS AS instances by the 5GMS AF at reference point M3 is made in clauses 5.14.1.1 and 5.14.2. Relevant collaboration scenarios are documented in clause 5.14.3 and an illustrative mapping to call flows for both downlink media streaming (clause 5.14.4.1) and uplink media streaming (clause 5.14.4.2) are provided. A candidate M3 Application Server configuration API based on these calls flows is proposed in clause 5.14.6.1.\nIt is recommended:\n1.\tTo pursue standardisation of 5GMS AS configuration at reference point M3 as an extension to TS 26.501 [15] and TS 26.512 [16] based on the design proposed in clause 5.14.6.1.\nThe case for standardising the management of 5GMS AS instances by the 55GMS AF at reference point M3 is made in clauses 5.14.1.2 and 5.14.2. Relevant collaboration scenarios are documented in clause 5.14.3, including a generalisation of this concept to any kind of Application Server managed by any Application Function. An illustrative generic high-level call flow is provided in clause 5.14.4.3. A candidate Naf_ASManagement service API based on this call flow is proposed in clause 5.14.6.2.\nIt is recommended:\n2.\tTo pursue standardisation of a generic AS management service for use at any reference point between an AS instance and its managing AF (including reference point M3) in liaison with SA2, based on the design proposed in clause 5.14.6.2.\n3.\tTo reference the registration and heartbeat procedures of this generic AS management service in the high-level call flows defined in TS 26.501 [15].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "6\tConclusions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.1\tList of Conclusions",
                    "description": "",
                    "summary": "",
                    "text_content": "Table 6.1-1 points to conclusions and next steps for each of the key issues studied in the present document.\nTable 6.1-1: Index of Key Issues, Conclusions, and Next Steps\n\n",
                    "tables": [
                        {
                            "description": "Table 6.1-1: Index of Key Issues, Conclusions, and Next Steps",
                            "table number": 24,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.2\tContent preparation",
                    "description": "",
                    "summary": "",
                    "text_content": "The study of this key issue demonstrates that the use of the Content Preparation Template is not explained adequately in TS 26.501 Release 16. Furthermore, TS 26.512 needs several extensions to make the use of the Content Preparation Template interoperable in the 5GMS architecture.\nThe following extensions are recommended:\n-\tInclusion of content preparation deployment scenarios and associated call flows in Stage 2.\n-\tExtending the Content Preparation Templates Provisioning API and defining the 5GMS AF/AS requirements needed for the deployment scenarios identified in the study in Stage 3.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.3\tTraffic identification",
                    "description": "",
                    "summary": "",
                    "text_content": "The 5G System offers different solutions for traffic identification and traffic detection. Traffic identification is essential so that the 5G System can detect application flows to which, for instance, an appropriate Policy and Charging Rule (PCC) is applied.\nIt is recommended to study use-cases with IPsec and the usage of the security parameter index for traffic identification further in a subsequent study.\nExisting stage 2 procedures already support the use of different traffic identification mechanisms.\nThe following extensions are recommended for stage 3:\n-\tExtensions to the M5 API to support the configuration of ToS values for the identification of traffic associated with a Dynamic Policy.\n-\tDescribe the usage of usage of ToS/DSCP for traffic identification within an informative annex.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.4\tAdditional/new transport protocols",
                    "description": "",
                    "summary": "",
                    "text_content": "The latest version of HTTP, HTTP/3, [5] can be used for at least some types of media immediately, but some existing 3GPP Stage 3 specifications are explicitly tied to specific versions of HTTP and need to be updated to allow HTTP/3 as a supported version, in order to allow deployment of this new protocol.\nHTTP/3 is defined in the IETF and has been completed in the QUIC working group and approved for publication as an RFC but has not been published yet because of a normative dependency on other documents. The HTTP/3 document is stable (has not changed since February 2021)\nWhen HTTP is used in 5GMS applications, it is often used with application-level protocols such as DASH or HLS that are defined (partially) outside of 3GPP. Some usages in 5GMS will depend on support for HTTP/3 in these application-level protocols.\nThe following actions are recommended:\n-\tUpdate 5GMS stage 3 specifications to allow the use of HTTP/3 at relevant reference points in the 5GMS architecture, to allow early deployment and to identify any unforeseen open issues with using HTTP/3 in a 5G System.\n-\tAt this time, support for HTTP/3 in 5GMS specifications, can be allowed, but not required.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.5\tUplink media streaming",
                    "description": "",
                    "summary": "",
                    "text_content": "The study of this key issue demonstrates that uplink streaming is severely underspecified in TS 26.501 and TS 26.512 in Release 16, and several gaps are identified.\nThe following extensions are recommended:\n1.\tInclusion of collaboration scenarios and associated call flows in Stage 2.\n2.\tSpecification of egest protocol(s), Content Publishing Configuration APIs and a corresponding Content Publishing Configuration resource, and the UE’s uplink streaming entry point in Stage 3.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.6\tBackground traffic",
                    "description": "",
                    "summary": "",
                    "text_content": "Background Data Transfer (BDT) offers Mobile Network Operators (MNOs) and application service providers a tool to deliver content opportunistically at beneficial costs during low traffic time windows. The usage of BDT for media streaming services and potential enhancements to the 5GMS procedures and APIs have been studied and documented in the present document.\nExisting stage 2 procedures already support the use of BDT. It is recommended to define the necessary parameter extensions to the M1, M5, and M6 reference points to provide access to BDT. Any normative work has to take into account the available BDT procedures developed by other 3GPP groups.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.7\tContent-aware streaming",
                    "description": "",
                    "summary": "",
                    "text_content": "No conclusion has yet been reached for this key issue.\nInitial considerations are provided in clause 5.7. It is recommended to study it further at an appropriate time.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.8\tNetwork Event usage",
                    "description": "",
                    "summary": "",
                    "text_content": "The 5GMS AF performs several critical support operations for media streaming sessions and collects information about the progress and status of media streaming sessions. This information can be of interest to the 5GMS Application Provider or to other Network Functions in the 5G Sytem.\nThe following extensions (Stage 2 and Stage 3) are recommended:\n-\tIdentify and define the media-related data to be exposed by the 5GMS AF towards the 5G System and other event consumer entities. Work with other 3GPP groups for carriage in existing AF events or the definition of new AF Events.\n-\tEnhance the 5GMS AF data collection to support direct and indirect collection of UE data pertaining to media sessions.\n-\tDevise mechanisms to control the access to the collected media session data.\n-\tDefine a generic architecture within which media-specific solutions for the configuration and subsequent operation of data collection and data reporting (via event exposure) by the AF can be specified.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.9\tPer-application-authorization",
                    "description": "",
                    "summary": "",
                    "text_content": "The 5G Media Streaming Architecture enables a 5GMS-Aware Application to access certain network features, in alignment with the 5GMS Application Provider. The Key Issue explores the usage of OAuth 2.0 for per-application authorization of different 5G System features, for example to prevent misuse. The Key Issue specifically addresses use-cases, when a UE hosts multiple 5GMS-Aware Applications from different 5GMS Application Providers.\nIt is recommended to specify the usage of OAuth 2.0 (according to the SA3 guidelines) within a normative work item.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.10\tSupport for encrypted and high-value content",
                    "description": "",
                    "summary": "",
                    "text_content": "No conclusion has yet been reached for this key issue.\nInitial considerations are provided in clause 5.10. It is recommended to study it further at an appropriate time.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.11\tTV-grade mass distribution of unicast Live Services",
                    "description": "",
                    "summary": "",
                    "text_content": "Live TV services of different scale (professional, user-generated, session-based, etc.) are increasingly distributed over broadband and mobile networks, including 5G Networks. Live TV services are characterized by at least the following aspects: (1) scalability (in terms of concurrent users), (2) consistent quality, (3) high bandwidth requirements, (4) target latency constraints, and advanced TV Experiences.\nTo address these type services a consistent support in the 5G Media Streaming Architecture, the protocols and codecs is needed. It is identified that the combination of low-latency CMAF formats, chunked transfer from content provider to the device, as well as consistent signaling and support of service quality are key aspects to the work.\nBased on the discussion and conclusions in clause 5.11.7, it is recommended to support and optimize the deployment of unicast live TV services in 5G Systems. For this purpose, the following follow-up aspects are recommended to be addressed:\n1.\tIntegrate into TS 26.501 (Stage 2)\na)\tAt least one call flow into that documents provisioning, ingest, distribution, presentation and monitoring aspects of low-latency live streaming services using CMAF Chunks.\nb)\tUpdates to reference points to support provisioning, ingest, distribution, presentation and monitoring aspects of low-latency live services using CMAF Chunks.\nc)\tTypical configurable service parameters and operation points in terms of bit rates, latencies, Audience Drift Gaps, etc.\n2.\tAddress updates to relevant stage-3 specifications (e.g., TS 26.511, TS 26.512, TS 26.247) to add consistent support of low-latency live streaming services, including:\na)\tDefine capability mechanisms in order to identify the support of low-latency modes in 5GMS networks and clients.\nb)\tProvisioning to support operation points and policy templates for low-latency live streaming.\nc)\tCreate necessary extensions to support DASH and HLS chunked CMAF low-latency modes in an end-to-end workflow.\nd)\tProvide necessary protocols to scalably support time synchronization across 5GMS Applications, AS and 5GMS Clients (at appropriate precision).\ne)\tExtend QoE metrics schemes and metrics reporting functionality to address monitoring of Operation Point metrics for potential operational improvements.\nf)\tProvide extensions to formats and manifests support advanced TV experiences.\ng)\tInformative guidelines on using different Operation Points for low-latency live streaming.\n3.\tStudy even lower-latency streaming technologies based on the use cases and considerations of the DASH-IF webRTC streaming report [94].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.12\tNetwork Slicing Extensions for 5G Media Streaming",
                    "description": "",
                    "summary": "",
                    "text_content": "As described in TS 28.530, network slicing is a paradigm where logical networks/partitions are created, with appropriate isolation, resources and optimized topology to serve a purpose or service category (e.g. use case/traffic category, or for MNO-internal reasons) or customers (logical system created \"on demand\"). Media services can be delivered to end users using such different network slices. As documented in clause 5.12 of the present document, aspects related to network slicing are not adequately addressed in TS 26.501 and 26.512. The following are the conclusions so far in the study:\n1.\tThe collaboration scenarios, deployment architectures, and potential open issues concerning network slicing extensions are to be studied further in Release 18.\n2.\tThe impact of network slicing is across multiple work items. Therefore, study for network slicing extensions is to be looked at from the perspective of multiple work items.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.13\t3GPP Service Handler and URLs",
                    "description": "",
                    "summary": "",
                    "text_content": "Until now, 3GPP specifications for 5G Media Streaming have avoided addressing the detailed question of how to bootstrap 3GPP-defined UE and network functions such as the Media Session Handler or the MBMS/MBS Client. This is deferred to implementation, device pre-configuration, and so on. However, the lack of specification covering this Key Issue is hindering adoption of 5GS-supported media services because today UE applications may have to be modified in order to support such services.\n3GPP defines the ability to use DNS Resolution and non-HTTP URL handling. However, handling non-3GPP URLs in common devices is not broadly supported by commonly available high-level UE Operating Systems and HTTP-based URL handling is preferred. Of the candidate solutions studied in clause 5.13.5, Solution 1 (clause 5.13.5.1), namely creating an HTTP(S) URL that is 3GPP-owned, is preferred.\nBased on this conclusion, it is proposed to:\n1.\tExtend the baseline 5G Media Streaming architecture to add a 3GPP Service and URL Handler in the UE and the network according to figure 5.13.5-1.\n2.\tAddress provisioning, message exchange and call flows in order to support different use cases, namely the case for which the URL is resolved in the network, the URL is resolved in the UE, and the case for which the URL is resolved in a combination of network and UE as discussed in clause 5.13.5.\n3.\tSpecify a concrete URL format for 3GPP services with individual host names assigned in the 3GPP-managed domain launch.3gppservices.org as part of 3GPP specifications, and ensure that this can be used in the context of 3GPP-based services, namely:\na)\tVoid.\nb)\tSpecify a suitable website redirection mechanism in case a suitable 3GPP Service Handler is not already installed on the UE.\n4.\tThe URL itself needs to be sufficiently unambiguous to resolve to the service entry point URL and may embed the service entry point URL as well.\n5.\tSpecify 3GPP Service URL instantiations with parameters suitable for launching at least the Media Session Handler for 5G Media Streaming, MBMS Client (including Receive-Only Mode services) and MBS Client.\n6.\tProvide the ability for a 5GMS-Aware application to create a Service URL in order to bootstrap 5G Media Streaming.\n7.\tInvestigate and study the application of 3GPP services and URL handling beyond 5G Media Streaming.\n8\tSpecify an external service identifier assigned by the 5GMS Application Provider that can be used to launch 5G Media Streaming sessions on different 5GMS Systems via a common 3GPP Service URL.\n-\tModify the Provisioning Session resource to include one (or more) of these identifiers.\n-\tModify the Service Access Information API to accept this instead of a Provisioning Session identifier.\n9.\tSpecify a default 5GMS AF host name to be used by the Media Session Handler when the 3GPP Service URL does not specify one.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.14\t5GMS Application Server configuration and management",
                    "description": "",
                    "summary": "",
                    "text_content": "The 5G Media Streaming architecture in TS 26.501 [15] defines a reference point between the 5GMS AF and the 5GMS AS but does not further define its purpose and procedures in the present release. This hampers interoperability between 5GMS AS instances procured from different vendors and the 5GMS AF that manages them which, in turn, acts as a barrier to the adoption and deployment of the 5GMS System by network operators.\nThe study of this Key Issue recommends:\n1.\tExtending the 5GMS System to standardise the interface used by the 5GMS AF to configure 5GMS AS instances.\na)\tDefine high-level procedures and call flows at reference point M3 in TS 26.501 [15] in line with the conclusions of the Key Issue.\nb)\tSpecify detailed procedures and a RESTful API at reference point M3 in TS 26.512 [16] in line with the conclusions of the Key Issue.\n2.\tExtending the 5G System to standardise a generic interface to be used by an Application Function to manage Application Server instances.\na)\tDefine high-level procedures and call flows in line with the conclusions of the Key Issue in a new Technical Specification. The high-level design and work split to be discussed with SA2. This new specification to be referenced by existing high-level procedures and call flows for 5G Media Streaming in TS 26.501 [15] in the context of reference point M3.\nb)\tSpecify detailed procedures and protocols in line with the conclusions of the Key Issue in a new Technical Specification. The detailed design and work split to be discussed with SA2 and/or CT3.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "7\tRecommendations",
            "description": "5G Media Streaming provides significant opportunities to integrate operator and third-party media streaming services into 5G Systems. The report provides at set of considered extensions to 5G Media Streaming as defined in TS 26.501, as well as the format and protocol specifications in TS 26.511 and TS 26.512, respectively. Advances in 5G System technologies, external enhancement and developments in other SDOs such as IETF, DASH-IF or MPEG, as well as initial experiences from deployments have led to a set of conclusions in clause 6.\nBased on the details in the report, the following next steps are proposed.\n1.\tInitiate stage 2 and stage 3 work on Network Event usage based on the conclusions in clause 6.8. Note that this is already addressed in TS 26.531 [94] and TS 26.532 [95], respectively.\n2.\tProvide relevant extensions to the Stage 2 5G Media Streaming architecture defined in TS 26.501 [15] based on the conclusions in clause 6. Candidates for these extensions are:\na)\tContent preparation deployment scenarios and associated call flows in Stage 2 according to clause 6.2.\nb)\tInclusion of collaboration scenarios and associated call flows in Stage 2 for uplink media streaming according to clause 6.5.\nc)\tInclusion and extensions of procedures and call flows for end-to-end low latency live streaming based on the conclusions in clause 6.11.\nd) \tExtend the baseline 5G Media Streaming architecture to add a 3GPP Service and URL Handler in the UE and the network based on the conclusions in clause 6.13.\ne)\tInclusion of collaboration scenarios and associated call flows for configuration of 5GMS AS instances at reference point M3, based on the conclusions in clause 6.14.\nf)\tReferencing of generic procedures and call flows for the management of AS instances in the context of the 5GMS architecture at reference point M3, based on the conclusions in clause 6.14.\n3.\tProvide relevant extensions to 5G Media Streaming protocols and formats based on the conclusions in clause 6. Candidates for these extensions are:\na)\tStage-3 follow-up work from 5G Media Streaming architecture extensions referred to above based on conclusions in clauses 6.2, 6.5, or 6.11.\nb)\tExtensions to 5GMS protocols to support traffic identification based on the conclusions in clause 6.3\nc)\tAddition of HTTP/3 to the 5GMS protocols as an optional alternative based on the conclusions in clause 6.4.\nd)\tAddition of necessary parameter extensions to the M1, M5, and M6 reference points to provide access to Background Data Transfer based on the conclusions in clause 6.6.\ne)\tSpecification of the usage of OAuth 2.0 (according to the SA3 guidelines) for 5GMS protocols based on the conclusions in clause 6.9.\nf)\tSpecifications for the 3GPP Service Handler and 3GPP Service URL including the necessary UE functions to support automatic launch of 5G System services in the context of 5G Media Streaming based on the conclusions in clause 6.13.\ng)\tSpecification of a RESTful API for configuration of the 5GMS AS via reference point M3 in TS 26.512 [16] based on the conclusions of clause 6.14.\n4.\tContinue the study of additional extensions to 5G Media Streaming. Potential candidate topics based on this Technical Report are:\na)\tContent-aware streaming based on the initial considerations in clause 5.7.\nb)\tStudy even lower-latency streaming technologies based on the use cases and considerations of the DASH-IF WebRTC streaming report [94].\nc)\tDistribution of encrypted and high-value content based on the considerations in clause 5.10.\nd)\tNetwork slicing extensions for 5G Media Streaming based on the conclusions in clause 6.12.\ne)\tInvestigate and study the application of 3GPP services and URL handling beyond 5G Media Streaming based on the conclusions in 6.13.\n5.\tLiaise with SA2 and other relevant groups on the standardisation of a generic Application Server management service based on the conclusions of clause 6.14.\nAll work topics will benefit from continuously checking relevance and support across 3GPP members. In addition, close coordination with other groups in 3GPP on 5G System and radio-related matters, edge computing, applications, operational management and security as well, in communication with experts in MPEG, DASH-IF, CTA WAVE on DASH, HLS and CMAF, as well as with IETF on new protocols.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.1\tStatus and usage of Web protocols",
            "description": "The site HTTPArchive.org [x1] offers some insights into the uptake of different HTTP protocol versions by publicly accessible websites. The Report “State of the Web” contains statistics about the number of TCP connections per page and the number of HTTP/2 requests over a time period. The site crawls millions of URLs every month. The URLs are taken from the Chrome User Experience Report.\nCurrently, around 70% of websites support HTTP/2. Unfortunately, the site does not show statistics for video usage.\nThe site quic.netray.io [x2] offers some insights into the HTTP/3 (QUIC) take-up.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "A.1.1\tM4d protocol usage",
                    "description": "",
                    "summary": "",
                    "text_content": "It is anticipated that MPEG-DASH would be used by many Application Providers on the M4d Interface if 5GMS services become widely deployed. MPEG-DASH defines the manifest format and also the media segment format. MPEG-DASH allows several different ways to use the underlying HTTP transport, depending on the DASH Profile.\nFor traffic identification, the identification of the transport protocol (TCP or UDP) used on interface M4d is essential, since the transport protocol needs to be described in the Service Data Flow Template. HTTP/1.1 and HTTP/2 both use TCP transport. HTTP/3 uses a UDP-based QUIC transport. Furthermore, HTTP/1.1. often leverages multiple TCP connections simultaneously, while HTTP/2 and HTTP/3 allow more efficient reuse of the transport through the technique of non-blocking request multiplexing on a single transport connection.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "A.1.2\tResults of HTTP protocol version usage study",
                    "description": "",
                    "summary": "",
                    "text_content": "Editor’s Note: It is currently unclear how to document the results of the transport connection usage study. It is clear, this this represents only a small snapshot on how the different HTTP versions are used and currently only focused on browser based clients.\nWithin a small study, the transport protocol usage of three major video-on-demand providers were studied, namely YouTube, Netflix and Amazon. The study leveraged browser-based DASH players, using the popular web browsers Google Chrome (version 87.0.4280.141, 64-bit running on Win 10 Pro Version 2004 b 19041.746) and Mozilla Firefox (version 84.0.2, 64-bit running on Win 10 Pro Version 2004 b 19041.746). The intention was to get more insights into HTTP usage.\na)\tAccessing YouTube with Chrome, we found that YouTube in a Chrome Browser uses MPEG-DASH with HTTP/3 transport. Several YouTube clips were selected, and HTTP/3 was consistently used for retrieving both media segments and other content. Detailed investigations showed that only a single HTTP/3 connection was established to the server.\nb)\tAccessing Amazon Prime with Chrome, we found that Amazon Prime uses MPEG-DASH. For some movies, HTTP/2 is used for all content (including media segments). Some other movies used HTTP/1.1 for media segments and HTTP/2 for non-media segments. It is not clear on which basis the application protocol is selected.\nc)\tAccessing Netflix with Firefox, we found that Netflix uses MPEG-DASH with HTTP/1.1. Some objects, such as images, are fetched using HTTP/2.\nd)\tAccessing YouTube with Firefox, we found that YouTube uses MPEG-DASH with HTTP/1.1. Non-video transactions use HTTP/2.\n\n",
                    "tables": [
                        {
                            "description": "",
                            "table number": 25,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        }
    ]
}