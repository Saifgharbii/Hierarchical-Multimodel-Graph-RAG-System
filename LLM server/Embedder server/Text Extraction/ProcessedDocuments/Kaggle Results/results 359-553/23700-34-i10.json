{
    "document_name": "23700-34-i10.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Report has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document is a technical report which identifies the application enabling layer platform architecture, capabilities and services to efficiently support distribution, storage and delivery for the application content/data for vertical applications.\nThe study takes into consideration the existing stage 1 and stage 2 work within 3GPP related to data delivery and 3GPP system user plane aspects specified in 3GPP TS 22.261 [2], 3GPP TS 23.501 [6] and 3GPP TS 23.247 [4].\nThis document will provide recommendations for normative work.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 22.261: \"Service requirements for the 5G system; Stage 1\".\n[3]\t3GPP TS 23.222: \"Functional architecture and information flows to support Common API Framework for 3GPP Northbound APIs; Stage 2\".\n[4]\t3GPP TS 23.247: \"Architectural enhancements for 5G multicast-broadcast services\".\n[5]\t3GPP TS 23.434: \"Service Enabler Architecture Layer for Verticals (SEAL); Functional architecture and information flows\".\n[6]\t3GPP TS 23.501: \"System architecture for the 5G System (5GS)\".\n[7]\t3GPP TS 23.502: \"Procedures for the 5G System; Stage 2\".\n[8]\t3GPP TS 23.548: \"5G System Enhancements for Edge Computing; Stage 2\".\n[9]\t3GPP TS 23.554: \"Application architecture for MSGin5G Service\".\n[10]\t3GPP TS 23.558: \"Architecture for enabling Edge Applications\".\n[11]\t3GPP TR 23.700-60: \"Study on XR (Extended Reality) and media services \"\n[12]\t3GPP TS 28.104: \"Management and orchestration; Management Data Analytics\".\n[13]\t3GPP TS 28.541: \"Management and orchestration; 5G Network Resource Model (NRM); Stage 2 and stage 3\".\n[14]\tIEEE 802.1CB-2017: \"IEEE Standard for Local and metropolitan area networks--Frame Replication and Elimination for Reliability\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions, symbols and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tDefinitions",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms and definitions given in 3GPP TR 21.905 [1] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in 3GPP TR 21.905 [1].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tSymbols",
                    "description": "",
                    "summary": "",
                    "text_content": "None\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.3\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in 3GPP TR 21.905 [1] and the following apply. \nAn abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in 3GPP TR 21.905 [1].\nAC\tApplication Client\nACR\tApplication Context Relocation\nACT\tApplication Context Transfer\nAF\tApplication Function\nAPI\tApplication Programming Interface\nCAPIF\tCommon API Framework for northbound APIs\nDD\tData Delivery\nEAS\tEdge Application Server\nEDN\tEdge Data Network\nEEL\tEdge Enabler Layer\nFRER\tFrame Replication and Elimination for Reliability\nNEF\tNetwork Exposure Function\nNRM\tNetwork Resource Management\nNSACF\tNetwork Slice Admission Control Function\nNWDAF\tNetwork Data Analytics Function\nPCF\tPolicy and Charging Function\nQUIC\tQuick UDP Internet Connections\nSBA\tService Based Architecture\nSCEF\tService Capability Exposure Function\nSEAL\tService Enabler Architecture Layer\nSEALDD\tSEAL Data Delivery\nURLLC\tUltra Reliable and Low Latency Capability\nURSP\tUE Route Selection Policy\nVAL\tVertical Application Layer\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tKey issues",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "4.1\tKey issue #1: Support for E2E redundant transport",
                    "description": "",
                    "summary": "",
                    "text_content": "Industrial requirements for supporting redundant transports for URLLC are specified in clause 5.33.2.1 of 3GPP TS 23.501 [6] with dual connectivity based end to end redundant user paths. Rel-16 URLLC work in 5GS is limited to URSP solutions assuming that the UE's application layer or operating system supports duplication of the traffic and provides two distinct traffic descriptors for the two redundant traffic. How to initiate the establishment procedure and how to use the redundant user plane path are not defined yet (now they are up to the upper layer implementation). For example, the UE may use the implementation of FRER (Frame Replication and Elimination for Reliability), IEEE 802.1CB-2017 [14], in the UE's upper layer protocols (i.e. application layer or operating system layer), to establish two redundant PDU Sessions and manage the replication and elimination of redundant packets/frames. However, redundant implementation on upper layer protocols is not always available for application clients and application servers. In those cases where application client and application server support is not available for redundant implementation, the application enablement layer (with SEALDD client and SEALDD server) can support this functionality for the application. For the verticals/enterprises, it is a better choice to use the SEALDD service for the interaction with 5GC and management of the replication and elimination of redundant packets so as to remove the complication from the application.\nThe following open issues can be studied to support E2E redundant transmission aspects as enabler capabilities:\n1.\tWhether and how to support the packet/data duplication and elimination between client (UE) and server (Network) at enabler layer for E2E redundant transport?\n2.\tWhether and how to support the interaction between the enabler service and 5GC to establish the E2E redundant transmission path?\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.2\tKey issue #2: Support for Transport layer enhancement for UE's service continuity",
                    "description": "",
                    "summary": "",
                    "text_content": "3GPP TS 23.548 [8] and 3GPP TS 23.558 [10] specifies that, service continuity is required for EAS relocation and service continuity relies on application layer support of seamless context/status relocation between the EAS servers. Transport layer connection re-establishment also causes service interrupts. Thus EAS IP replacement is also discussed in 3GPP TS 23.548 [8], assuming that real-time transport layer relocation is supported between the source EAS and target EAS. However, the real-time context/status relocation and transport layer real-time relocation are not always supported for the verticals/enterprises. In those cases where network support is not available, the application enablement layer can support this functionality for the application. The data delivery enabler service in network can maintain the transport layer connection with corresponding client in the UE. EAS can use such data delivery enabler service for EAS relocation (including context transfer and lossless packet transfer). Such data delivery enabler can ensure the UE's service continuity including seamless data delivery and enhanced transport layer management.\nFor example, two basic scenarios can be considered involving the data delivery enabler:\nThe figure depicts the EAS relocation process, showing the steps taken to balance the EAS load in a network. The relocation is crucial for maintaining network performance and ensuring the safety of the network.\nFigure 4.2-1: EAS relocation due to EAS load balancing\nThe figure depicts the EAS relocation process in a 5G network, illustrating the steps taken to ensure the effective relocation of Emergency Alert System (EAS) signals in response to changes in the location of the receiving device. The figure shows the EAS signal path, including the base station (gNB), user equipment (UE), and scatterers, as well as the redundant paths that are used to ensure failover reliability. The layered design of the optical backbone aligns with SDN principles, allowing for efficient network management and improved performance.\nFigure 4.2-2: EAS relocation due to UE location change\nFigure 4.2-1 shows the EAS relocation due to EAS load balancing, in this scenario, UPF and SEALDD server are not changed. SEALDD server should support the seamless EAS relocation to ensure UE service continuity. SEALDD server may provide transport layer enhancement (i.e. transport layer packets processing to ensure the S-EAS and T-EAS can receive/send the packets properly without re-establishment of transport layer connection).\nFigure 4.2-2 shows the EAS relocation due to UE location change, in this scenario, UPF and SEALDD server are changed. SEALDD server may provide transport layer enhancement (i.e. lossless packet transfer and transport layer status coordination during the whole relocation procedure).\nThe following aspects can be studied to support SEALDD enabled transport layer enhancement for UE continuity:\n-\tHow to support EAS relocation scenarios involving SEALDD server (e.g. EAS relocation initiated by the AF/AS for load balancing or EAS relocation initiated by the 5GC because of UE location change).\n-\tHow SEALDD enabler provides support for seamless relocation and lossless data delivery?\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.3\tKey issue #3: Support for data transmission quality measurement and guarantee",
                    "description": "",
                    "summary": "",
                    "text_content": "SEAL data delivery enabler can provide detailed end to end quality measurement reports and end to end transport optimization since the application data is processed in SEAL data delivery enabler layer and transmitted between SEALDD clients and SEALDD servers.\nNOTE 1:\tIt is assumed that SEALDD server should be co-located with application server or deployed close to the application server.\nSEAL data delivery enabler can employ data transmission quality measurement mechanisms (e.g. packet loss, network performance, connectivity status, data stream analytics) to analyse the end to end (UE to SEALDD server(s) supporting the Application Server) data transmission quality. SEAL data delivery enabler can then provide analytics as inputs to application layer e.g. for maintaining user experience. SEALDD service can also be used to support data transmission for different types of application data. As per the data type, SEALDD layer may apply different transport optimizations (e.g. adaption of transmission to varying transmission speed due to network situation). The following can be studied to support data transmission quality measurements aspects as enabler capabilities:\n1.\tHow to support the data transmission quality measurements in SEALDD server/client?\n2.\tWhat APIs should SEALDD enabler provide to application clients/servers to support receiving transmission quality measurements?\n3.\tWhat APIs should SEALDD enabler provide to application clients/servers to support configuration of transmission quality measurements?\n4.\tHow to support data transmission in SEALDD enabler layer with guaranteed quality?\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.4\tKey issue #4: SEALDD and MSGin5G",
                    "description": "",
                    "summary": "",
                    "text_content": "MSGin5G is specified in 3GPP TS 23.554 [9] to provide messaging communication capability in 5GS especially for Massive Internet of Things (MIoT). MSGin5G provides a data delivery method for application clients/servers in message format for industrial devices. And it can be implemented by PLMN/third party as one enablement service and exposes related API to application provider. As a data delivery enabler layer for general cases, SEAL data delivery enabler layer functions can also utilize MSGin5G to provide services for UEs in industrial environments.\nHence, it is required to study how to leverage MSGin5G service in SEALDD and integration possibility.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.5\tKey issue #5: SEALDD enabled Data Storage",
                    "description": "",
                    "summary": "",
                    "text_content": "Applications can employ data storage service to increase performance by reducing the need for data retrieval over the 3GPP network and backhaul network towards application server. In this case, data requested by the clients or application servers can be received from 3GPP network or specific application servers only once and then be stored in the data storage server. The subsequent requests for the stored data can be handled locally and the data can be retrieved directly from the data storage server to save the processing time and transferring resources cost on interacting with 3GPP network or application server. SEALDD can provide data storage service for VAL applications.\nThe data stored in the SEALDD server can be content data. In this case, the SEALDD server provides data storage service to enable cache services for a VAL server. Then the data storage server can provide to the VAL user with stored application content once requested by other users in the same area according to the interaction with VAL server. Meanwhile, for constrained devices, e.g. battery driven low-power IoT devices, while is sleeping, the SEALDD server could help to do some data storage and then send the stored data out after.\nThe data stored in the SEALDD server can also be contexts, status reports or analytics collected from application server or 5GS. It will save processing resources and transferring resources of 5GC and application servers. Also, the SEALDD server can be an interchange server for consumers which do not have direct connections with the data providers (e.g. for application context transfer between EAS without connections).\nThe following aspects can be studied for this Key Issue:\n-\tWhat capability should the SEALDD server provide to support the data storage service?\n-\tWhat APIs should SEALDD enabler provide to enable the VAL server and VAL client to use the data storage service provided by SEALDD, such as the creation, refreshing, update, and deletion of the stored data?\n-\tWhat APIs should SEALDD enabler provide to VAL clients/servers to monitor the status of the stored data?\n-\tWhat management information or analytics should be provided to configure the storage service?\n-\tWhether and how to provide data storage service to support application data (e.g. application context) storage for VAL servers?\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.6\tKey issue #6: SEALDD coordination with EEL",
                    "description": "",
                    "summary": "",
                    "text_content": "In SEALDD scenario, VAL application data traffic is converted to SEALDD traffic and the SEALDD traffic ends in SEALDD server. It means the packets sent from the UE uses the address of SEALDD server as the destination IP address. In EDGEAPP scenario, EEC gets the address of EAS via EAS discovery procedure from the EES, and the application data traffic sent from the Application Client on the UE has the address of EAS as the destination address. If the Application Client on the UE uses EEL to discover and select EAS, while the EAS uses SEALDD to help improve data delivery, then the coordination between SEALDD and EEL should be studied.\nThe following coordination aspects can be studied for this Key Issue:\n-\tWhether and how to enable the selection of a proper SEALDD server for an EAS (VAL server).\n-\tWhether and how to enable the discovery and selection of a proper SEALDD server related to a specific VAL server for a SEALDD client when both SEALDD server and VAL server are deployed in EDN.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.7\tKey issue #7: SEALDD server discovery and selection",
                    "description": "",
                    "summary": "",
                    "text_content": "SEALDD server is used to efficiently support distribution, storage and delivery of the application content/data for vertical applications. For a specific VAL server, which may be used for some specific service e.g. remote control, and have its own service area, mechanisms should be studied on how to discover and select the proper SEALDD server for the VAL server.\nA VAL server serving a VAL client on a UE can be changed (e.g. When UE moves out of the VAL server's service area or VAL server goes under maintenance). Usually a new VAL server is replaced as the serving VAL server. In this scenario, the SEALDD server may also be changed due to the change of VAL server. Hence, how to discover and select a new SEALDD server to support the change in VAL server should also be studied.\nThe following aspects can be studied for this Key Issue:\n-\tHow to discover and select the proper SEALDD server for a specific VAL server.\n-\tHow to discover and select the proper SEALDD server related to a specific VAL server for a SEALDD client.\n-\tHow to discover and select a new SEALDD server due to the change in VAL server.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.8\tKey issue #8: SEALDD data distribution",
                    "description": "",
                    "summary": "",
                    "text_content": "SEALDD server is used to provide enhanced data distribution service for vertical applications. For a specific peer of VAL client and VAL server, data traffic flows via the SEALDD enabler. There could be multiple types of SEALDD traffic between the SEALDD client and SEALDD server to meet the different VAL requirements and support different SEALDD services. Interactions between the SEALDD client and SEALDD server for data delivery should be studied.\nIn another example, VAL client and VAL server are from different application service providers and a SEALDD server provided by regulator (e.g. government) needs to carry out traffic control for the communication between the VAL client and VAL server for privacy/security reason. The VAL data flow is transferred via the SEALDD layer and the SEALDD layer terminates the SEALDD application traffic. The VAL data flow being transferred between the VAL client and VAL server may be subject to flow control (e.g. which entity talks with which entity, block/unblock, sensitive information screening/masking, rate control) in the application layer under different conditions (e.g. one hour during the night) by regulator. Different VAL server may have different data processing limit due to the server’s capability. VAL server may have the requirements to allocate different rate limit to different users.\nNOTE:\tSecurity aspects will be covered by SA3.\nThe following aspects can be studied for this Key Issue:\n-\tWhat are the interactions between the SEALDD client and SEALDD server to enable the data transmission for different purposes? (e.g. redundancy, regular transmission).\n-\tHow to control the SEALDD data distribution between the VAL client and VAL server.\n-\tHow to manage the bitrate of different users dynamically to better serve the users?\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "5\tArchitectural requirements",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tGeneral requirements",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.1.1\tDescription",
                            "text_content": "The general architecture requirements specified in clause 4.1 of 3GPP TS 23.434 [5] are applicable for SEALDD service. This clause specifies the general requirements for SEALDD service.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.2\tRequirements",
                            "text_content": "[AR-5.1.2-a] The SEAL shall support data delivery services towards the Vertical Application Client(s) and Vertical Application Server(s).\n[AR-5.1.2-b] The SEAL shall enable SEALDD service to utilize MSGin5G service for supporting data delivery for Vertical applications.\n[AR-5.1.2-c] The SEAL shall provide a mechanism to enable the SEALDD service discovery to support data delivery between VAL client(s) and VAL servers(s) considering different deployments of VAL server(s) (e.g. cloud or edge).\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.2\tData transmission requirements",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.2.1\tDescription",
                            "text_content": "This clause specifies the data transmission requirements for SEALDD service.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.2\tRequirements",
                            "text_content": "[AR-5.2.2-a] The SEALDD service shall provide a mechanism for application signalling data transmission and application media data transmission between VAL client(s) and VAL server(s).\n[AR-5.2.2-b] The SEALDD service shall provide a mechanism to support the data transmission quality requirement configurations and measurements for the application data transmission between VAL client(s) and VAL server(s).\n[AR-5.2.2-c] The SEALDD service shall provide a mechanism for application data transmission between VAL client(s) and VAL server(s) with guaranteed quality.\n[AR-5.2.2-d] The SEALDD service shall provide a mechanism for application data packaging and un-packaging to support the data transmission between VAL client(s) and VAL server(s).\n[AR-5.2.2-e] The SEALDD service shall provide a mechanism for E2E redundant data transmission between VAL client and VAL server.\n[AR-5.2.2-f] The SEALDD service shall provide a mechanism to support the packet/data duplication, elimination and error recovery between VAL client and VAL server.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.3\tData storage requirements",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.3.1\tDescription",
                            "text_content": "This clause specifies the data storage requirements for SEALDD service.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.3.2\tRequirements",
                            "text_content": "[AR-5.3.2-a] The SEALDD service shall provide a mechanism for data storage supporting the CRUD operations.\n[AR-5.3.2-b] The SEALDD service shall provide a mechanism to support the data storage status management.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.4\tSEALDD server discovery and selection requirements",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.4.1\tDescription",
                            "text_content": "This clause specifies the SEALDD server discovery and selection requirements for SEALDD service.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.4.2\tRequirements",
                            "text_content": "[AR-5.4.2-a] The SEALDD service shall provide a mechanism for supporting the SEALDD server discovery and selection for VAL server.\n[AR-5.4.2-b] The SEALDD service shall provide a mechanism to provide the information of SEALDD server to VAL/SEALDD client.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.5\tMSGin5G message transfer requirements",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.5.1\tDescription",
                            "text_content": "This clause specifies the MSGin5G message transfer requirements for SEALDD service.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.5.2\tRequirements",
                            "text_content": "[AR-5.5.2-a] The SEALDD service shall provide a mechanism to support the SEALDD traffic transmission using MSGin5G message.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "6\tSolutions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.1\tSolution #1: Data delivery enabler service architecture",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.1.1\tSolution description",
                            "text_content": "This clause describes the architecture for enabling SEAL Data Delivery applications in the following representations:\n-\tA service-based representation as specified in 3GPP TS 23.434 [5], where the SEAL Data Delivery Enabler Layer functions (e.g. SEALDD server) enable other authorized Vertical Application Layer functions (e.g. VAL server) to access their services.\n-\tA service-based representation as specified in 3GPP TS 23.501 [6], where the Network Functions (e.g. NEF) enable authorized SEAL Data Delivery Layer functions (e.g. SEALDD server) i.e. Application Functions, to access their services;\n-\tA service-based representation, where the Core Network Northbound APIs as specified in 3GPP TS 23.501 [6] and 3GPP TS 23.502 [7], are utilized by authorized SEAL Data Delivery Enabler Layer functions via CAPIF core function specified in 3GPP TS 23.222 [3]; and\n-\tA reference point representation, where existing interactions between any two functions (e.g. SEALDD client and SEALDD server) is shown by an appropriate point-to-point reference point (e.g. SEALDD-UU).\nSEAL Data Delivery Enabler Layer functions shown in the service-based representation of the SEAL Data Delivery architecture shall only use service-based interfaces for their interactions.\nFigure 6.1.1.1-1 illustrates the service based representation of SEAL Data Delivery function in the overall SEAL service-based representation which is specified in clause 15 of 3GPP TS 23.434 [5].\nThe figure depicts a simplified representation of the SEALDD model, which is a service-based interface model for SEAL (Service-oriented Architecture for Low-Latency, High-Throughput). The model is used to describe the service-oriented architecture (SOA) for low-latency, high-throughput applications. The figure includes various components such as service interfaces, service-oriented architecture (SOA) components, and service-oriented architecture (SOA) components. The figure is used to illustrate the service-oriented architecture (SOA) model for low-latency, high-throughput applications.\nFigure 6.1.1.1-1 SEALDD representation in SEAL generic functional model representation using service-based interfaces\nThe SEALDD function exhibits service-based interfaces which are used for providing and consuming SEALDD services. The service-based interface for SEALDD function is representation as Sdd.\nNOTE 1:\tNot all entities represented in this diagram will interact with the Sdd interface.\nFigure 6.1.1.1-2 illustrates the service-based representation for utilization of the 5GS network services based on the 5GS SBA specified in 3GPP TS 23.501 [6].\nThe figure depicts a 5G SBA (Service Based Architecture) representation, illustrating the utilization of 5GS network services based on the 5GS SBA. The figure shows various services such as 5G Core, 5G Core-Enhanced, 5G Core-Enhanced-Enhanced, and 5G Core-Enhanced-Enhanced-Enhanced-Enhanced, each represented by different colored lines and symbols. The figure also includes a 5GS SBA-based service, represented by a solid line, and a 5GS SBA-based service-based service, represented by a dashed line. The figure highlights the importance of 5GS SBA in enabling efficient and reliable network services.\nFigure 6.1.1.1-2: Utilization of 5GS network services based on the 5GS SBA – service based representation\nThe SEALDD server acts as AF for consuming network services from the 3GPP 5G Core Network entities over the Service Based Architecture specified in 3GPP TS 23.501 [6].\nFigure 6.1.1.1-3 illustrates the service-based representation for utilization of the Core Network (5GC, EPC) northbound APIs via CAPIF.\nThe figure depicts a utilization of Core Network Northbound APIs via CAPIF (Capability-based Interface Framework) service-based representation. It illustrates the utilization of APIs for network services, including network management, network monitoring, and network security. The figure shows the different APIs and their corresponding services, such as network management APIs, network monitoring APIs, and network security APIs. The figure also includes a visual representation of the APIs and their services, with icons and labels to help understand the different functionalities.\nFigure 6.1.1.1-3: Utilization of Core Network Northbound APIs via CAPIF – service based representation\nThe SEALDD server acts as authorized API invoker to consume services from the Core Network (5GC, EPC) northbound API entities like SCEF, NEF, SCEF+NEF which act as API Exposing Function as specified in 3GPP TS 23.222 [3].\nThe mechanism for northbound APIs discovery using the service-based interfaces depicted in figure 6.1.1.1-3 is as specified in 3GPP TS 23.222 [3].\nFigure 6.1.1.1-4 illustrates the architecture for SEAL Data Delivery enabler service.\nThe figure depicts the architecture of the SEAL Data Delivery Service, which is a key component of the SEAL (Secure End-to-End Link) network. The figure illustrates the various layers and components involved in the data delivery process, including the network core, network edge, and network edge devices. The figure also highlights the use of SDN (Software-Defined Networking) principles to manage and optimize the network's performance.\nFigure 6.1.1.1-4 Architecture for SEAL Data Delivery Service\nFor uplink traffic, VAL client sends application data traffic to SEALDD client for SEALDD service over SEALDD-C. After data plane packet processing by SEALDD client, the application data traffic is converted to SEALDD data traffic and transferred to SEALDD server over SEALDD-UU. The SEALDD server restores the application data traffic and sends it to VAL server over SEALDD-S. For downlink traffic, VAL server sends application data traffic to SEALDD server for SEALDD service over SEALDD-S. After data plane packet processing by SEALDD server, the application data traffic is converted to SEALDD data traffic and transferred to SEALDD client over SEALDD-UU. The SEALDD client restores the application data traffic and sends it to VAL client over SEALDD-C. Optionally, VAL deployments may choose to route application signalling traffic and application data traffic for some or all functions it offers using SEALDD service and figure 6.1.1.1-5 illustrates the architecture for achieving this. In this case the VAL client and VAL server may choose not to maintain application connection by themselves and transfer all the application traffic over SEALDD connections for those functions.\nNOTE 2:\tSEALDD capabilities are provided as APIs to the VAL Layer, it is up to VAL layer to decide which traffic to be transferred (e.g. application signalling, application data).\nThe figure depicts a network architecture for application traffic transfer, illustrating the various components and their interconnections. Key components include the application servers, application load balancers, and network load balancers. The architecture is designed to ensure efficient and reliable application traffic transfer, with redundancy paths and failover mechanisms in place.\nFigure 6.1.1.1-5: Architecture for application traffic transfer\nThe SEAL Data Delivery client interacts with the SEAL data delivery server to establish application layer data transport path.\nThrough this path, the SEALDD server and client provides data transport service capabilities such as data plane packet processing (e.g. packet duplication, elimination or transport coordination), data forwarding, data caching, background data transfer, etc. to support the VAL server and client. Annex X describes a typical lifecycle of SEALDD to establish the SEALDD connection for the VAL client and VAL server.\nThe SEAL data delivery client functional entity acts as the application client for the data delivery enablement. The SEALDD client supports the following capabilities:\n-\tDiscovering and selecting the proper SEALDD server.\n-\tEstablishing data transmission connection with SEALDD server.\n-\tModifying the data transmission connection with SEALDD server.\n-\tEstablishing redundant PDU sessions with 5GS.\n-\tReceiving the application data from VAL client and delivering the application data to the VAL client received from network.\n-\tEncapsulating the application data as per data transmission mechanism and further transmitting the encapsulated application data over the SEALDD flow to the SEALDD server.\n-\tReceiving the encapsulated application data over the SEALDD flow from the SEALDD server, de-encapsulating the application data as per the data transmission mechanisms used.\n-\tUtilizing the MSGin5G functions to send the uplink SEALDD traffic in MSGin5G message format.\nThe SEAL data delivery server functional entity acts as the application server for the data delivery enablement. The SEALDD server supports the following capabilities:\n-\tAllocating the SEALDD traffic descriptor (e.g. addresses or ports) for regular or redundant transmission.\n-\tInteracting with 5GS to provide the requested parameters (e.g. URSP rules).\n-\tReceiving the application data from VAL server and delivering the application data to the VAL server received from network.\n-\tEncapsulating the application data as per data transmission mechanism and further transmitting the encapsulated application data over the SEALDD flow to the SEALDD client.\n-\tReceiving the encapsulated application data over the SEALDD flow from the SEALDD client, de-encapsulating the application data as per the data transmission mechanisms used.\n-\tUtilizing the MSGin5G functions to send the downlink SEALDD traffic in MSGin5G message format.\n-\tStoring the application data from VAL client or VAL server, and supporting the storage query and storage management.\n-\tSupporting the application context transfer between VAL servers by reusing the storage service.\nReference point between SEALDD client and SEALDD server used to transfer data content and exchange information for SEALDD service provisioning, control, reporting etc.\nReference point between SEALDD client and VAL client to enable northbound client side API exposed by SEALDD client to VAL client for data delivery and SEALDD service provisioning, control, reporting etc.\nReference point between SEALDD server and VAL server to enable northbound server side API exposed by SEALDD server to VAL server for data delivery and SEALDD service provisioning, control, reporting etc.\nReference point enables interactions between two SEALDD servers to transfer data content and exchange information for SEALDD service provisioning, control, reporting etc.\nThe SEALDD server, acting as AF, may communicate with the 5G Core Network functions via NEF (N33) reference point (for interactions with PCF, NSACF, etc.), or interacting with PCF directly via N5, if permitted.\nThe N6 reference point is used by SEALDD service as the user plane path for data transmission.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.2\tSolution evaluation",
                            "text_content": "This solution provides SEALDD architecture by including the basic description of functional entities, reference points, etc.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.2\tSolution #2: E2E redundant transmission path establishment",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.2.1\tArchitecture enhancements",
                            "text_content": "In this solution, as shown in Figure 6.2.1-1, SEALDD client and SEALDD server transfer SEALDD traffic via two redundant PDU sessions as specified in clause 5.33.2.1 of 3GPP TS 23.501 [6].\nThe figure depicts an E2E redundant transmission architecture, illustrating the various components and their interconnections. The architecture includes redundant paths for data transmission, ensuring high reliability and fault tolerance.\nFigure 6.2.1-1: E2E redundant transmission architecture\nIn this solution, Figure 6.2.1-2 shows the data traffic flow of E2E redundant transmission. For uplink data delivery, VAL client sends application traffic to SEALDD client, the SEALDD client duplicates the application packets and maps them into two SEALDD traffic. Then the two SEALDD traffic are transferred to SEALDD server via the two redundant PDU sessions shown in figure 6.2.1-1. The SEALDD server eliminates the redundant packets and recovers the application traffic. The recovered application traffic is transferred to VAL server by the SEALDD server. For downlink data delivery, VAL server sends application traffic to SEALDD server, the SEALDD server duplicates the application packets and maps them into two SEALDD traffic. The two SEALDD traffic are transferred to UE via the two redundant PDU sessions. The SEALDD client eliminates the redundant SEALDD packets and recovers the application traffic, then sends the application traffic to the VAL client.\nThe figure depicts the E2E redundant transmission traffic flow in a 5G network, illustrating the flow of data from the source to the destination. The flow is shown in two stages: the source to the core switch and the core switch to the distributed nodes. The figure highlights the use of redundant paths to ensure reliability and failover in case of failures.\nFigure 6.2.1-2: E2E redundant transmission traffic flow\nEspecially, Figure 6.2.1-3 shows the data traffic flow of E2E redundant transmission for multiple VAL servers. In this scenario, SEALDD server and SEALDD client use different SEALDD flow IDs and SEALDD traffic descriptors to identify SEALDD traffic for different VAL servers.\nFigure 6.2.1-3 illustrates the E2E redundant transmission traffic flow for multiple VAL servers, demonstrating the efficient and reliable communication between the servers. The flow is depicted with multiple paths, each representing a different path for data transmission. The use of redundant paths ensures that the data is transmitted in case of any failure, providing a high level of security and reliability.\nFigure 6.2.1-3: E2E redundant transmission traffic flow for multiple VAL servers\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #1 and key issue #8 on Support for E2E redundant transport in clause 4.1 and clause 4.8.\nIn this solution, SA2 mechanisms to establish redundant PDU Sessions are utilized to help establish the E2E redundant transport path. It is assumed that the 5GS deployment supports establishing the redundant PDU Sessions.\nThe figure depicts the E2E redundant transmission traffic flow transition in SEALDD enabler, illustrating the flow of data from the source to the destination, with multiple paths and redundancies to ensure data integrity and reliability.\nFigure 6.2.2.1-1: E2E redundant transmission traffic flow transition in SEALDD enabler\nFigure 6.2.2.1-1 shows the data traffic transition of E2E redundant transmission. For outbound data delivery, VAL application traffic is sent to SEALDD enabler layer, the SEALDD enabler duplicates the application packets and maps them into two SEALDD traffic (with the same Flow ID). Then according to the SEALDD traffic descriptors of the SEALDD flow, the SEALDD traffic is sent out with different destination addresses or ports and different source addresses or ports. For inbound data delivery, two SEALDD traffic (with different source addresses or ports and different destination addresses or ports) are received. According to the SEALDD traffic descriptors, SEALDD enabler decides they belong to the same Flow. Then after packet elimination and reordering, the two SEALDD traffic is aggregated to one VAL application traffic.\nPre-conditions:\n1.\tThe VAL server can discover and select the SEALDD server by CAPIF functions.\nFigure 6 illustrates the establishment of an E2E redundant transmission path for a 5G network, with key components including the base station (gNB), user equipment (UE), and scatterers. The diagram highlights the use of beamforming techniques to mitigate interference and the importance of redundancy paths to ensure reliable communication.\nFigure 6.2.2.2-1: E2E redundant transmission path establishment\n1.\tThe VAL server decides to use SEALDD service to help ensuring data transmission quality for specific users or specific traffic and send a SEALDD service subscription request to the SEALDD server discovered by CAPIF. The request may include e.g. UE ID/address, identifiers of the application traffic (e.g. VAL service ID, VAL server ID, the URI/address of the VAL server), QoS requirements.\nNOTE 1:\tIf both signalling and data traffic of the VAL server is transmitted via SEALDD service, the URI/address of the VAL server is not needed.\n2.\tUpon receiving the request, the SEALDD server decides to establish redundant transmission path according to the QoS requirements and the network status exposed by 5GS. The SEALDD server allocates two different addresses or ports for the two redundant transmission paths and sends an AF request to 5GS to create or update URSP rules as described in clause 4.15.6.10 of 3GPP TS 23.502 [7] for the UE(s) going to use the redundant transmission service. The AF request includes Identifiers of the UE(s) and application traffic descriptor containing the addresses or ports allocated by SEALDD server.\n3.\tIf the processing of the request was successful, the SEALDD server responds with a SEALDD service subscription response and indicates the VAL server that redundant transmission service should be activated.\n4.\t[Optional] If the redundant transmission requirement is not preconfigured or notified to the VAL client, the VAL server may notify the VAL client(s) which are going to use the redundant transmission service through application layer message.\nNOTE 2:\tThe VAL client can be preconfigured that the VAL service should always be transmitted via redundant transmission. Or this application layer notification may be notified to the UE in other period before the VAL application traffic is really transmitted.\n5.\tThe VAL client sends a SEALDD service request to SEALDD client with the identifiers of the application traffic (e.g. VAL service ID, VAL server ID, the URI/address of the VAL server) and requests to use E2E redundant transmission for the application traffic.\n6.\tThe SEALDD client discover and select the proper SEALDD server for the VAL application.\nNOTE 3:\tHow to discover and select the proper SEALDD server is discussed in KI #6 and KI #7.\n7.\tThe SEALDD client sends SEALDD redundant transmission request to SEALDD server. The request includes the SEALDD client ID, SEALDD flow ID, the identifiers of the application traffic for SEALDD server to identify the specific application traffic.\n8.\tUpon receiving the request, the SEALDD server sends SEALDD traffic descriptor for redundant transmission of the SEALDD server side (i.e. the addresses or ports for the redundant transmission paths allocated in step 2 and the transport protocol used for the SEALDD traffic) to SEALDD client.\n9.\tThe UE uses the SEALDD traffic descriptor of the SEALDD server side to trigger the two redundant PDU Sessions establishment procedure via 5GS as specified in clause 5.33.2.1 of 3GPP TS 23.501 [6].\n10.\t[Optional] The SEALDD client sends SEALDD redundant transmission update request to SEALDD server. The request includes the SEALDD client ID, the SEALDD flow ID, the SEALDD traffic descriptors for redundant transmission of the SEALDD client side (i.e. UE addresses and ports of the two redundant PDU Sessions). The two redundant SEALDD traffic use the same SEALDD flow ID for identification.\n11.\t[Optional] The SEALDD server establishes connection with VAL server for the VAL client to transmit application traffic mapping to the redundant SEALDD traffic. The SEALDD server sends response to SEALDD client. After this step, the SEALDD client and SEALDD server both get the whole SEALDD traffic descriptors (including the UE's addresses/ports and SEALDD server's addresses/ports for the SEALDD traffic transmission). The SEALDD client and SEALDD server store the mapping between the application traffic and SEALDD traffic.\n12.\tThe SEALDD client responds with a SEALDD service response.\nNOTE 4:\tStep 10 and Step 11 are optional. If the redundant PDU sessions are already established before step 7, the IP addresses of the UE may be notified to the SEALDD server in step 7. In other cases, after the establishment of the two redundant PDU sessions, the SEALDD client may communicate with SEALDD server through the redundant PDU sessions to let the SEALDD server know the UE's address(es) of the redundant PDU session to fulfil the traffic mapping or the SEALDD client and SEALDD server may use other mapping mechanisms, it is up to the transport protocol used by SEALDD client and SEALDD server for the SEALDD traffic.\nUpon receiving application traffic from VAL client, the SEALDD client duplicates the application packets and maps them into two SEALDD traffic SEALDD traffic descriptors or ports as negotiated with SEALDD server in step 8 and step 10. The two SEALDD traffic is sent through two redundant PDU sessions to the SEALDD server. The SEALDD server maps the two SEALDD traffic to the same application traffic according to the stored SEALDD traffic descriptors, SEALDD client ID and SEALDD flow ID. After packet elimination and reordering the SEALDD server sends the aggregated application traffic to VAL server via the connection established in step 11. The downlink application traffic sent from VAL server to VAL client is processed similarly.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.3\tSolution evaluation",
                            "text_content": "This solution addresses the open issues of KI #1 and KI #8 and provides the enhanced E2E redundant transmission architecture to support SEALDD enabled E2E redundant transmission. The SEALDD data traffic transition is also introduced to clearly define the SEALDD enabler layer's functionality. The procedure shows the detailed SEALDD connection establishment steps for a VAL server to request redundant transport support from the SEALDD layer.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.3\tSolution #3: Client initiated request for redundant transport",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.3.1\tSolution description",
                            "text_content": "The following solution is provided for key issue #1. It complements solution #2.\nThe figure depicts a client initiating a request for redundant transport, which is a crucial aspect of network reliability and performance. The figure shows a client initiating a request for redundant transport, which is a critical component of network reliability and performance. The figure illustrates the process of initiating a request for redundant transport, which is a critical component of network reliability and performance.\nFigure 6.3.1.2-1: Client initiated request for redundant transport\n1.\tA VAL client determines to use SEALDD service to ensure that the data transmission quality for the application traffic is met and makes a service request to the SEALDD client. The request includes the identifiers of the application traffic (e.g. application ID, the VAL server ID/address), the QoS requirements for the application traffic, etc.\n2.\tUpon receiving the request, the SEALDD client decides to establish redundant transmission path according to the QoS requirements. If necessary, the SEALDD client discovers a SEALDD server that supports redundant transport, provides SEALDD services to the VAL server and from which it is authorized to request redundant transport services.\nNOTE 1:\tIf SEALDD server discovery procedures in solution #7 or solution #8 are used, a precondition to the procedure is that the VAL server has subscribed to the SEALDD server for SEALDD service. After the discovery procedure as described in solution #7 or solution #8 is used, the SEALDD client can determine the SEALDD server it is authorized to request redundant transport services from.\n3.\tThe SEALDD client sends a request to the SEALDD server to configure redundant transport for the application traffic. The request includes the SEALDD client ID, the SEALDD flow ID, the application ID, the UE ID/address, the VAL server ID/address, the QoS requirements, the UE location, and a request for redundant transport.\nNOTE 2:\tThe step also includes any additional authorization steps necessary (i.e., by SEALDD server, VAL server) to determine whether the redundant transmissions can be initiated on behalf of the VAL client.\n4.\tThe SEALDD server allocates IP addresses and ports for the redundant transport paths and initiates the AF traffic influence procedure with the 5G network to create or update URSP rules for the UE. The request includes the UE ID and application descriptor for the application traffic. The UE receives the new or updated URSP rules from the 5G core network.\nNOTE 3:\tThe normative phase will determine whether and how NRM needs to support this SEALDD functionality (e.g. by providing allocation of address).\n5.\tThe SEALDD server responds to the SEALDD client providing the configuration status. The response includes the IP addresses and ports for the redundant transmission paths allocated in step 4. The SEALDD client and SEALDD server store the mapping between the application traffic and SEALDD traffic.\n6.\tThe UE establishes redundant PDU sessions with the 5G network using the new or updated URSP rules.\n7.\t[Optional] The SEALDD client sends a SEALDD connection modification request. The request includes the SEALDD client ID, the SEALDD flow ID, the application traffic descriptors for redundant transmission of the SEALDD client side (i.e. UE addresses and ports of the two redundant PDU Sessions). The two redundant SEALDD traffic use the same SEALDD flow ID for identification.\n8.\t[Optional] The SEALDD server establishes connection with VAL server for the VAL client to transmit application traffic mapping to the redundant SEALDD traffic. The SEALDD server sends a response to the SEALDD client. After this step, the SEALDD client and SEALDD server both get the application traffic descriptors (including the UE's addresses/ports and SEALDD server's addresses/ports for the SEALDD traffic transmission). The SEALDD client and SEALDD server store the mapping between the application traffic and SEALDD traffic.\n9.\tThe SEALDD client responds with a SEALDD service response.\nThe VAL client sends application traffic to the SEALDD client, which duplicates the application data on the redundant PDU sessions. The SEALDD server receives the redundant traffic and reassembles the data to send to the VAL server. Similarly, the SEALDD server duplicates downlink traffic from the VAL server and sends the data to the SEALDD client on the redundant PDU sessions. The SEALDD client eliminates the redundant data and reassembles data to send to the VAL client.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.2\tSolution evaluation",
                            "text_content": "This solution addresses KI #1 and provides a procedure for a VAL client to request redundant transport support from the SEALDD layer.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.4\tSolution #4: Data storage creation",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.4.1\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #5 on SEALDD enabled data storage. In this solution, the stored data can be queried by the creator or the other network functions for context or content transfer.\nThe figure depicts a storage service creation request, with various components such as storage service, storage service request, storage service response, and storage service response request. The request is initiated by a storage service request, which is then responded to by a storage service response. The response is a storage service response, which is then returned to the storage service request. The storage service response is a storage service response, which is then returned to the storage service request. The storage service response is a storage service response, which is then returned to the storage service request. The storage service response is a storage service response, which is then returned to the storage service request. The storage service response is a storage service response, which is then returned to the storage service request. The storage service response is a storage service response, which is then returned to the storage service request. The storage service response is a storage service response, which is then returned to the storage service request. The storage service response is a storage service response, which is then returned to the storage service request. The storage service response is a storage service response, which is then returned to the storage service request. The storage service response is a storage service response, which is then returned to the storage service request. The storage service response is a\nFigure 6.4.1.2.1-1: Storage service creation request\n1.\tThe VAL client/server determines to use SEALDD storage service, which could store/host data on behalf of the VAL client/server. The VAL client/server makes a storage service creation request to the SEALDD server. If the request is initiated by the VAL client, the request is first sent to the SEALDD client hosted on the same UE and then forwarded to the SEALDD server. The request includes the data to be stored and information associated with the data, such as access control policy, expiration time of the storage, etc. The VAL client/server may also specify in the request if/what management or status information of the data storage is required (e.g., information about how often the stored data is accessed).\n2.\tThe SEALDD server processes the storage service creation request. If the request is accepted, the SEALDD server configures the storage service based on the request and stores the data at the storage server. If status information of the stored data is requested, the SEALDD server will start to monitor the status of the stored data, such as to track the accesses to the data for the data access status.\n3.\tThe SEALDD server sends a response to the requesting VAL client/server. The response indicates if the request is accepted and the identifier of the stored data (if applicable). Upon receiving the response, the requesting VAL client/server may create a record for the stored data.\nPre-conditions:\n1.\tVAL client/server has stored data in SEALDD server.\n2.\tThe consumer (e.g. SEALDD client/VAL server/other SEALDD server) requesting the stored data has got the identifier of the stored data (e.g. via application layer signalling or other mechanisms).\nThe figure depicts a network architecture with multiple layers, including a storage server (SEALDD) and a client server (SEALDD-S). The storage server is responsible for storing data, while the client server is responsible for accessing and processing data. The figure illustrates the network's architecture, including the storage server's connection to the client server, and the data transfer between the two servers.\nFigure 6.4.1.2.2-1: Access to stored data in SEALDD server\n1.\tThe consumer (e.g. SEALDD client/VAL server/other SEALDD server) sends a storage service query request to the SEALDD server with the identifier of the stored data.\nNOTE:\tThe consumer requesting for the stored data can be the data storage creator or other network functions.\n2.\tUpon receiving the request, the SEALDD server performs an authorization check to verify if the requested data (according to the data access control policy) can be accessed by the consumer. The SEALDD server will also check whether the stored data is expired.\n3.\tIf the verification was successful, the SEALDD server responds with the requested data.\nPre-conditions:\n1.\tThe SEALDD service is configured to track and maintain data storage access information (i.e. status information).\n2.\tA storage service creation request procedure from a VAL client/server to the SEALDD storage server has been performed. The request includes a subscription to data storage access information (i.e. status information).\nThe figure depicts a storage management procedure, illustrating the steps involved in managing storage resources in a network. The diagram shows the storage nodes, storage controllers, and storage arrays, with various interfaces and connections. The figure highlights the importance of proper configuration and monitoring to ensure efficient storage utilization and data protection.\nFigure 6.4.1.2.3-1: Storage management procedure\n1.\tBased on the configured subscription for data storage status information, the SEALDD server may send a notification to the requester with the collected information.\n2.\tBased on the received stored data status information, the requesting VAL client/server determines to perform a management operation, such as to update, refresh, or delete the stored data. The VAL client/server sends a storage management request to the SEALDD server to perform the determined management operation.\n3.\tThe SEALDD server processes the storage management request. If the request is accepted, the SEALDD server performs the required management operation on the stored data.\n4.\tThe SEALDD server sends a response to the requesting VAL client/server with the result of the management operation, which may include updated information of the stored data.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.4.2\tSolution evaluation",
                            "text_content": "The solution addresses Key Issue #5: SEALDD enabled Data Storage.\nThe solution defines APIs and procedures for the SEALDD server to support data storage service and enable the VAL client/server to use the data storage service provided by SEALDD. With this solution, a VAL client/server would be able to store data at a storage server, query the stored data, receive status information (e.g., data storage access information) of the stored data, manage the stored data, and configure the storage service.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.5\tSolution #5: SEALDD adaptation in CAPIF",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.5.1\tSolution description",
                            "text_content": "The SEALDD server and VAL server may support CAPIF. When CAPIF is supported:\n-\tThe SEALDD server shall support the CAPIF API provider domain functions (i.e. CAPIF-2/2e (SEALDD-S interface), CAPIF-3/3e, CAPIF-4/4e and CAPIF-5/5e as specified in 3GPP TS 23.222 [3]);\n-\tThe VAL server shall act as API invoker and support the API invoker functions (i.e. CAPIF-1/1e and CAPIF-2/2e (SEALDD-S interface) as specified in 3GPP TS 23.222 [3]); and\n-\tThe SEALDD server shall act as API invoker and support the API invoker functions (i.e. CAPIF-1/1e and CAPIF-2/2e (SEALDD-E interface) as specified in 3GPP TS 23.222 [3]).\nThe figure depicts the SEALDD adaptation in the CAPIF architecture, illustrating the process of signal enhancement and interference management. The figure shows the various components involved, such as the base station (BTS), user equipment (UE), and scatterers, which are essential for the successful implementation of SEALDD. The figure also highlights the use of redundancy paths to ensure reliable communication, and the layered design of the architecture aligns with SDN principles.\nFigure 6.5.1-1: SEALDD adaptation in the CAPIF architecture\nThe VAL server can discover a proper SEALDD server from CAPIF core function with different discovery filters, e.g. expected AEF location. If a VAL server is changed during UE mobility, a new SEALDD server may be discovered and selected.\nThis is also applicable for EAS to discover and select an SEALDD server to use SEALDD-S services, if any.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.5.2\tSolution evaluation",
                            "text_content": "This solution addresses KI#6 about how to discover and select SEALDD server for EAS.\nThis solution also addresses KI#7 about how to discover and select SEALDD server for VAL server.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.6\tSolution #6: SEALDD integrating MSGin5G for message transfer",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.6.1\tArchitecture enhancements",
                            "text_content": "MSGin5G functions described in 3GPP TS 23.554 [9] are integrated in SEALDD enabler layer. As shown in Figure 6.6.1-1, MSGin5G client functionality is integrated in SEALDD client, and MSGin5G server functionality is integrated in SELADD server. SEALDD server and SEALDD client can use MSGin5G functionalities to send SEALDD traffic in MSGin5G message format.\nThe figure depicts the SEALDD (Software-Defined Networking in 5G) architecture, which integrates the MSGin5G (Software-Defined Networking in 5G) framework. The figure illustrates the various components and their interconnections, highlighting the importance of software-defined networking in 5G networks.\nFig 6.6.1-1 SEALDD integrating MSGin5G architecture\nNOTE:\tWhether and how the integrated or standalone MSGin5G server function invoke SEALDD service for data transfer is in the scope of 3GPP TS 23.554 [9].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.6.2\tSolution description",
                            "text_content": "The following solution corresponds to the KI #4 on SEALDD and MSGin5G.\nMSGin5G provides a data delivery messaging service in 5GS especially for enabling IoT device communications. It has been specified starting with Rel-17 in 3GPP TS 23.554 [9].\nSEALDD is proposed as a generic data delivery enabler layer for all the verticals utilizing SEAL. It is beneficial to deploy one unified data delivery system suitable for all kinds of terminals to reduce the complexity of vertical applications.\nThis solution proposes that SEALDD integrates MSGin5G functionalities in SEALDD layer and provides MSGin5G transmission as an optional SEALDD service. SEALDD traffic can be encapsulated and transmitted in the format of MSGin5G messages.\nEnhancements and improvements of MSGin5G in Rel-18 is needed to be studied in 5GMSG Service phase 2. This study only focuses on how to integrate the MSGin5G functions.\nFollowing procedures are supported for SEALDD integrating MSGin5G functions:\n-\tSEALDD integrating MSGin5G for message transfer.\nThe procedure of SEALDD MSGin5G for message transfer is shown in Figure 6.6.2.2.2-1\nPre-conditions:\n1.\tThe VAL server has subscribed for SEALDD MSGin5G transferring service.\n2.\tSEALDD client and SEALDD server have established SEALDD connection for data transferring.\nThe figure depicts a simplified representation of a SEALDD (Software-Defined Networking) integration for message transfer in a 5G network. It illustrates the use of MSGin5G, a software-defined message integration technology, to enable seamless communication between different network components. The figure shows the integration of SEALDD with the 5G network, highlighting the importance of software-defined networking in modern telecommunications.\nFigure 6.6.2.2.2-1: SEALDD integrating MSGin5G for message transfer\n0.\tSEALDD client registers to SEALDD server for MSGin5G services as defined in clause 8.2.1 of 3GPP TS 23.554 [9].\n1a.\tFor Uplink traffic, VAL client sends a request to SEALDD client with application data and optionally the indicator for invoking the MSGin5G transferring service to send a new MSGin5G message to the VAL server to transfer the application data.\n2a.\tUpon receiving the request from VAL client, the SEALDD client decides to send the application data in MSGin5G format. SEALDD client invokes the integrated MSGin5G client functionality to send an MSGin5G message with the application data in the message payload to SEALDD server according to the procedure defined in clause 8.3.2 of 3GPP TS 23.554 [9].\n3a.\tUpon receiving the MSGin5G message, the SEALDD server delivers the MSGin5G message to VAL server or parses the message and provides the content in the payload of the message to the VAL server with SEALDD API.\n1b.\tFor Downlink traffic, VAL server initiates an API request to SEALDD server with application data and optionally the indicator for invoking the MSGin5G transferring service to send a new MSGin5G message to the VAL client to transfer the application data.\n2b.\tUpon receiving the request from VAL server, the SEALDD server decides to send the application data in MSGin5G format. SEALDD server invokes the integrated MSGin5G server functionality to send an MSGin5G message with the application data in the message payload to SEALDD client according to the procedure defined in clause 8.3.3 of 3GPP TS 23.554 [9].\n3b.\tUpon receiving the MSGin5G message, the SEALDD client delivers the MSGin5G message to VAL client or parses the message and provides the content in the payload of the message to the VAL client with SEALDD API.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.6.3\tSolution evaluation",
                            "text_content": "This solution addresses KI #4 and provides the enhanced SEALDD layer integrating MSGin5G functionality to support SEALDD enabled MSGin5G message transfer. SEALDD traffic can be encapsulated and transmitted in the format of MSGin5G messages. SEALDD layer reuses the functionality defined in 3GPP TS 23.554 [9] and no enhancement to MSGin5G functionality is introduced in this solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.7\tSolution #7: SEALDD server discovery and selection for specific VAL server",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.7.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.7.2\tSolution description",
                            "text_content": "The following solution corresponds to the KI #7 on SEALDD server discovery and selection.\nIn this solution, VAL server discovers and selects SEALDD server by CAPIF functions.\nThere can be scenarios of how SEALDD service is used:\n-\tScenario (a): SEALDD service is used for both signalling and data traffic transfer.\n-\tScenario (b): SEALDD service is used only for data traffic transfer.\nThe SEALDD client can use existing mechanisms (e.g. DNS query) to find an appropriate SEALDD server and establish the connection for VAL client and VAL server. (This mechanism can be used for both scenario (a) and scenario (b). The mechanisms such as DNS query mechanisms are outside the scope of SA6.\nSpecifically for scenario (b), the VAL server can notify the VAL client about the SEALDD subscription information via application layer signalling.\nThis procedure is used for scenario (b).\nPre-conditions:\n1.\tThe VAL server can discover and select the SEALDD server by CAPIF functions.\n2.\tThe VAL server decides to use SEALDD service for data traffic transfer.\n3.\tThe VAL server and VAL client maintain application layer connection for signalling traffic.\nThe figure depicts the process of SEALDD server discovery and selection for data traffic transfer, highlighting the importance of network security and data integrity.\nFigure 6.7.2.2.2-1: SEALDD server discovery and selection for data traffic transfer\n1.\tThe VAL server decides to use SEALDD service to enhance data transmission and send a SEALDD service subscription request to the SEALDD server discovered by CAPIF. The request may include e.g. VAL server ID/address, application profile and SEALDD service type.\n2.\tUpon receiving the request, the SEALDD server performs an authorization check to verify if the VAL server requested SEALDD service (mainly consider e.g. application profile, SEALDD service type) can be provided by the SEALDD server. If the verification was successful, the SEALDD server responds with a SEALDD service subscription response.\n3.\tSince the VAL server and VAL client maintain application layer connection for signalling traffic, VAL server can notify the VAL client with the SEALDD subscription information (including e.g. the SEALDD server address, SEALDD service type, etc.) via application layer signalling.\nNOTE:\tApplication layer signalling mechanism is outside the scope of SA6.\n4.\tThe VAL client sends a request to SEALDD client to request for SEALDD service. The request may include the SEALDD server address and may include the related SEALDD service information.\n5.\tUpon receiving the request, the SEALDD client establishes the connection with the SEALDD server for the SEALDD service.\n6.\tThe SEALDD client uses the established connection for routing of the outgoing application traffic to VAL server, as needed, and may provide necessary notifications/responses to the VAL client.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.7.3\tSolution evaluation",
                            "text_content": "This solution proposes two alternative ways to find SEALDD server for VAL/SEALDD client in general scenario (none-EDN scenario). And this solution addresses the second and third open issues of KI #7.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.8\tSolution #8: SEALDD server discovery and selection in EDN",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.8.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.8.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #6 on SEALDD coordination with EEL.\nThere can be scenarios of how SEALDD service is used:\n-\tScenario (a): SEALDD service is used for both signalling and data traffic transfer.\n-\tScenario (b): SEALDD service is used only for data traffic transfer.\nNOTE:\tFor the same VAL application, VAL servers for Scenario (a) and Scenario (b) and VAL servers without SEALDD service may coexist in the same EDN. The three types of servers may use different EAS IDs or other information (e.g. EAS service, additional associated SEALDD server information) to differentiate each other for EAS discovery.\nAfter VAL server subscribes SEALDD service from the SEALDD server, the VAL server registers associated SEALDD server information to EES. In EAS discovery procedure, EEC can get the associated SEALDD server(s) information of the desired the VAL server(s). Then SEALDD client can use the SEALDD server information to establish the data delivery connection for the VAL client (AC) and VAL server (EAS).\nFollowing procedures are supported for SEALDD server discovery and selection for a specific VAL server deployed in EDN:\n1.\tVAL server (as an EAS) registered to EES with associated SEALDD server address as VAL server endpoint in EAS profile.\n2.\tVAL server (as an EAS) registered to EES with associated SEALDD server information;\nThe procedure 1 can be used for scenario (a). The procedure 2 can be used for both scenario (a) and scenario (b). Alternatively for scenario (b), the VAL client can also discover the VAL server using existing EAS discovery mechanism specified in clause 8.5 of 3GPP TS 23.558 [10] and establish the application layer signalling connection, then application layer signalling mechanism proposed in solution #7 can be used.\nThe figure depicts a network setup with a VAL server registered to an EES network, and an associated SEALDD server address. The VAL server is responsible for managing the network's security and authentication, while the SEALDD server is responsible for managing the network's security and authentication. The figure also shows the network's topology, including the presence of multiple switches and routers, as well as the presence of a firewall and a load balancer.\nFigure 6.8.2.2.2-1: VAL server registered to EES with associated SEALDD server address as VAL server endpoint\n1.\tThe VAL server can discover and select the SEALDD server (e.g. by CAPIF functions).\n2.\tThe VAL server decides to use SEALDD service to enhance data transmission and send a SEALDD service subscription request to the SEALDD server.\n3.\tUpon receiving the request, the SEALDD server performs an authorization check and responds with a SEALDD service subscription response.\n4.\tThe VAL server (as an EAS) registers to the EES as described in clause 8.3.3.2.2 of 3GPP TS 23.558 [10] with the associated SEALDD server address as EAS Endpoint in the EAS profile. The EAS ID used by VAL server in registration may indicate the application service association between the VAL service and SEALDD service implicitly or explicitly.\nThis procedure reuses the current procedure described in clause 8.3.3.2.2 of 3GPP TS 23.558 [10] .The VAL server (as an EAS) registers to the EES with the associated SEALDD server address as the EAS Endpoint in the EAS profile. Then the EEC can use the EAS discovery procedure defined in clause 8.5 of 3GPP TS 23.558 [10] to find the VAL server's address which is SEALDD server's address. The VAL client can initiate SEALDD service via SEALDD client with the SEALDD server's address. This procedure can be used for scenario (a).\nThe figure depicts an EAS register to EES with associated SEALDD server information, illustrating the communication between the EAS and EES systems.\nFigure 6.8.2.2.3-1: EAS register to EES with associated SEALDD server information\n1.\tThe SEALDD server (as an EAS) registered to EES with SEALDD profile (i.e. EAS profile) as an API provider.\n2.\tThe EAS (VAL) server can discover and select the SEALDD server (e.g. by CAPIF functions).\n3.\tThe EAS (VAL server) decides to use SEALDD service to enhance data transmission and send a SEALDD service subscription request to the SEALDD server.\n4.\tUpon receiving the request, the SEALDD server performs an authorization check and responds with a SEALDD service subscription response.\n5.\tThe VAL server (as an EAS) registers to the EES as described in clause 8.3.3.2.2 of 3GPP TS 23.558 [10] with the associated SEALDD server information (i.e. SEALDD service and SEALDD server address) as associated EAS ID and EAS Endpoint in the EAS profile.\nNOTE:\tThe SEALDD server information can reuse the format defined in linked EAS related solutions studied in FS_eEDGEAPP.\nThis procedure reuses the current procedure described in clause 8.3.3.2.2 of 3GPP TS 23.558 [10] .The VAL server (as an EAS) registers to the EES with the associated SEALDD server information (i.e. SEALDD service and SEALDD server address) as associated EAS ID and EAS Endpoint in the EAS profile. Then the EEC can use the EAS discovery procedure defined in clause 8.5 of 3GPP TS 23.558 [10] to find the VAL server's address and associated SEALDD server's address. The VAL client can initiate SEALDD service via SEALDD client with the SEALDD server's address. For scenario (b), the VAL client can also establish the connection with VAL server using the VAL server's information for application signalling transfer and only use the SEALDD connection for application data transfer.\nEditor's note:\tWhether EAS discovery procedure should be enhanced is FFS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.8.3\tSolution evaluation",
                            "text_content": "This solution proposes to enhance EAS registration procedure to enable VAL/SEALDD client to discover and select proper SEALDD server. And this solution addresses the second open issue of KI #6 about \"whether and how to enable the discovery and selection of a proper SEALDD server related to a specific VAL server for a SEALDD client when both SEALDD server and VAL server are deployed in EDN\".\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.9\tSolution #9: SEALDD interaction for regular application traffic transfer",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.9.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.9.2\tSolution description",
                            "text_content": "The following solution corresponds to the KI #8 on SEALDD data distribution and the KI #3 on QoS guarantee.\nThe SEALDD client and SEALDD server interact with each other to configure the data delivery connection for regular application layer transfer. This solution is for the scenario that VAL server sends all the traffic (including signalling traffic and data traffic) to VAL client via SEALDD service and the VAL server does not maintain direct application layer connection with the VAL client. By consuming the SEALDD service for application layer signalling transfer, the VAL server does not need to maintain application layer signalling connection with the clients and only communicates with SEALDD server to serve the clients.\nNOTE:\tThis solution is used for regular connection establishment and is not used for redundant transmission.\n6.9.2.2\tProcedure\nPre-conditions:\n1.\tThe VAL server can discover and select the SEALDD server by CAPIF functions.\nThe figure depicts a simplified representation of the SEALDD interaction for application traffic transfer in a 5G network. It illustrates the flow of data between the source and destination nodes, highlighting the importance of network slicing and network slicing management in ensuring efficient and secure communication.\nFigure 6.9.2.2-1: SEALDD interaction for application traffic transfer\n1.\tThe VAL server decides to use SEALDD service for application traffic transfer and send a SEALDD service subscription request to the SEALDD server. The service request includes the identifiers of the application traffic (e.g. VAL service ID, VAL server ID), and optionally, the QoS information for the application traffic, e.g. QoS requirements.\nNOTE 1:\tThe VAL service ID may indicate the service type of application traffic (e.g. video, mission critical data, etc.).\n2.\tUpon receiving the request, the SEALDD server performs an authorization check. If authorization is successful, the SEALDD server allocates a specific address or port used for SEALDD traffic transfer with the incoming SEALDD client(s) for the VAL server. The SEALDD server may send the AF request to provide the required QoS information to 5GC via N33/N5, as defined in clause 5.2.6.9 and in clause 5.2.5.3 of 3GPP TS 23.502 [7]. The AF request includes the application traffic descriptor containing the address or ports allocated by SEALDD server, and the QoS information for application traffic. The QoS information may be allocated by SEALDD server according to VAL service ID for different service type of application traffic if the QoS information is not provided by VAL server\n3.\tThe SEALDD server responds with a SEALDD service subscription response.\n4.\tThe VAL client sends a SEALDD service request to SEALDD client with the identifiers of the application traffic (e.g. VAL service ID, VAL server ID).\n5.\tThe VAL/SEALDD client discover and select the proper SEALDD server for the VAL application as described for scenario (a) in sol #7 and sol #8. After this step, the VAL server is discovered and selected along with the associated SEALDD server, the SEALDD client can get the SEALDD server's address.\n6.\tThe SEALDD client sends SEALDD connection establishment request to SEALDD server with the SEALDD client ID, the SEALDD flow ID, and the identifiers of the application traffic.\nNOTE 2:\tThe SEALDD flow ID is used by the SEALDD client and SEALDD server to identify different application traffic, and it is mapped to the identifiers of the application traffic.\n7.\tThe SEALDD server responds to the SEALDD client with the SEALDD traffic descriptor of SEALDD server side (e.g. address/port allocated in step 2, transport layer protocol) mapping to the application traffic.\n8.\tThe SEALDD client uses the SEALDD traffic descriptor of SEALDD server side for SEALDD connection establishment. The SEALDD server stores the SEALDD client ID, SEALDD flow ID to identify the SEALDD traffic and establishes connection with VAL server for the VAL client to transmit application traffic mapping to the SEALDD traffic.\nNOTE 3:\tIf the UE's address for SEALDD traffic transfer is different from the address used in the control plane interaction (step 5 and 6), another SEALDD interaction procedure may be triggered to notify the SEALDD server about the address/port used by the SEALDD client for SEALDD traffic transfer. Or the SEALDD server reuses the SEALDD client's address used in step 5 for SEALDD traffic transfer.\nAfter this step, the SEALDD client and SEALDD server both get the whole SEALDD traffic descriptor (including the UE's address/port and SEALDD server's address/port for the SEALDD traffic transmission). The SEALDD client and SEALDD server store the mapping between the application traffic and SEALDD traffic.\nUpon receiving application traffic from VAL client, the SEALDD client maps it into SEALDD traffic with SEALDD traffic descriptor as negotiated with SEALDD server. The SEALDD server maps the SEALDD traffic to the application traffic according to the stored SEALDD traffic descriptor, SEALDD client ID, SEALDD flow ID. The SEALDD server sends the recovered application traffic to VAL server via the connection established in step 7. The downlink application traffic sent from VAL server to VAL client is processed similarly.\nAfter the connection establishment, the VAL server can communicate with VAL client for application layer signalling traffic transfer via the established SEALDD connection. The VAL server can also use the same connection for data traffic transfer or initiate another SEALDD connection for data traffic transfer, it is up to the VAL server's requirement.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.9.3\tSolution evaluation",
                            "text_content": "This solution addresses the open issue of KI #8 for regular transmission service and the open issue of KI #3 for guaranteed quality. This solution proposed interactions between SEALDD client and SEALDD server to enable regualr application traffic transfer, and also proposed interaction between SEALDD server and 5GS to perform QoS request and QoS authorization for VAL server via N33/N5.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.10\tSolution #10: SEALDD server relocation",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.10.1\tSolution description",
                            "text_content": "As describe in Figure 4.2-2 of KI#2, the SEALDD server may be relocated due to UE mobility or load re-balance. KI#7 also discussed open issue about SEALDD server discovery and selection in case of SEALDD server change.\nIf SEALDD server is adapted to EDGEAPP as an EAS, the EAS relocation procedure can be used to support SEALDD server relocation for both UE mobility and SEALDD server load re-balance. If SEALDD is not adapted to EDGEAPP, for UE mobility, the SEALDD client can discover (e.g. using DNS) a new SEALDD server in the target area and establish a new SEALDD communication channel including the old SEALDD communication channel information. For load re-balance, the SEALDD server can discover (e.g. using DNS) an equivalent SEALDD server and communicate with the new SEALDD server.\nBased on existing service continuity mechanism supported by SA2 (e.g. BP/ULCL), during SEALDD server relocation with UPF change, the new UPF takes care of the existing unfinished application traffic flow towards the old VAL server and inter-UPF tunnel is used to forward the traffic. For new application traffic flow which may have UE's new IP address as source IP address, the new SEALDD server sends it directly to the new VAL server.\nFor SEALDD server relocation, the inter-SEALDD server communication via SEALDD-E reference point is needed, which transfers the SEALDD context from the old SEALDD server to the new SEALDD server.\nThe following procedures detail the EDGEAPP ACT part between old SEALDD server (i.e. S-EAS) and new SEALDD server (i.e. T-EAS) as described in 3GPP TS 23.558 [10], clause 8.8.2.2 to clause 8.8.2.6. The pre-condition used in the following procedure is that new SEALDD server endpoint is discovered and selected, and either the old SEALDD server endpoint is available in the new SEALDD server or the new SEALDD server endpoint is available in the old SEALDD server.\nNOTE 1:\tThe way to provide SEALDD server endpoint can be via VAL server or via EES, and discovery of the new SEALDD server can utilize solution #8. The ACT procedure in the VAL server is also executed according to EDGEAPP ACR scenario but its detail is out of scope of SA6.\nNOTE 2:\tThe context transfer scope (service level and/or UE level) of SEALDD service subscription depends on the API details of the service subscription over SEALDD-S reference point, which will be decided in the normative work.\nThe following figure describes SEALDD context transfer procedure in pull (step 1a and 2a) or push (step 1b and 2b) operation.\nThe transferred SEALDD context includes the service subscription information created upon VAL server's interaction for requesting SEALDD transmission service (e.g. step 1 and 2 in solution #9), and also the SEALDD client and SEALDD server communication tunnel management information (e.g. UE IP address) which is created upon SEALDD client's interaction for requesting data transmission (e.g. step 5 and 6 in solution #9).\nNOTE 1:\tOther content of the SEALDD context is to be determined in the normative work.\nThe new SEALDD server, after receiving the SEALDD context from the old SEALDD server, may update the connection info in step 3, e.g. update the allocated IP address and port for SEALDD-Uu communication. Then the SEALDD client acknowledges the received SEALDD Connection info update notification in step 4.\nNOTE 2:\tThe SEALDD client has subscribed to receive the connection info update notification in SEALDD connection establishment request.\nAfter SEALDD client is aware of the new SEALDD-Uu IP address and port, it starts to send new SEALDD traffic (received from the VAL client) over the new connection. The new SEALDD server maps the received SEALDD traffic to the application traffic according to the SEALDD traffic descriptor and VAL service ID. The new SEALDD server sends the recovered application traffic to new VAL server. The downlink application traffic sent from the new VAL server to VAL client is processed similarly.\nNOTE 3:\tThe new VAL server’s end point for receiving uplink data from SEALDD server can be transferred as part of the SEALDD context data as described in solution #11.\nThe figure depicts a scenario where SEALDD (Software-Defined Networking) is used without IP replacement, highlighting the importance of network virtualization and the role of SDN in managing network resources.\nFigure 6.10.1.2-1: SEALDD context transfer without IP replacement\nThere is an EAS IP replacement feature defined in 3GPP TS 23.548 [8] which allow an AF to perform server change (e.g. due to load re-balance) without impacting the UE (i.e. UE is not aware of EAS change). In Figure 6.10.1.3-1, the differences comparing to Figure 6.10.1.2-1 are:\n-\tAdditional transport layer context is transferred from the old SEALDD server to new SEALDD server in step 1 and 2; and\n-\tinstead of notifying the SEALDD client about the new SEALDD server IP address and port, the AF traffic influence with EAS IP replacement is performed either by the old or new SEALDD server towards the 3GPP Core Network as described in 3GPP TS 23.548 [8], clause 6.3.3.2.\nSince the UE is not aware of EAS change, the new SEALDD traffic (due to new VAL traffic sent by VAL client) is sent by UPF towards the new SEALDD server, this handling in UPF is agnostic to the new SEALDD server.\nThe figure depicts a context transfer scenario with IP replacement, illustrating the process of replacing context-specific IP addresses with IP addresses that are more generic and can be used across different networks. This is crucial for network management and troubleshooting, as it allows for the replacement of context-specific IP addresses with more generic ones, which can be used in different network environments.\nFigure 6.10.1.3-1: SEALDD context transfer with IP replacement\nThe EAS IP replacement feature requires support of TCP/TLS/QUIC context transfer between EASs. One possible impact for the SEALDD discovery using EEL can be an enhanced EAS profile with such a seamless transport service continuity capability during EAS registration procedure, so that the old SEALDD server can discover new SEALDD servers (i.e. T-EASs in EDGEAPP context) supporting TCP/TLS/QUIC context transfer.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.10.2\tSolution evaluation",
                            "text_content": "This solution address KI#7 about SEALDD server discovery and selection, the T-EAS discovery procedure is utilized to facilitate SEALDD layer service continuity.\nThis solution addresses KI#2 to support SEALDD enabled transport layer status coordination for service continuity utilizing SA2 defined feature for EAS IP replacement. Impact for EAS registration is identified to enable a proper T-EAS discovery supporting smooth transport service continuity.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.11\tSolution #11: SEALDD support of UE's service continuity",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.11.1\tSolution description",
                            "text_content": "The following solution is provided for key issue #2. It complements the SEALDD flow ID in solutions #2 and #9.\nAn Application Client on a UE, acting as VAL client, establishes communications with VAL Server 1. The VAL client has established a SEALDD flow to send application data to VAL Server 1. The UE moves and the 5GC notifies VAL Server 1 of the UE's mobility. EES 1 detects that ACR is required and initiates ACR between Val Servers acting as EASs. In addition to the ACR steps already specified in 3GPP TS 23.558[10], two new SEALDD procedural steps are proposed as follows:\n- A notification from VAL Server 1 to SEALDD server 1 of an ongoing ACR, before starting ACT.\n- A procedure (termed SEALDD flow transfer) where SEALDD server 1 transfers the SEALDD flow to SEALDD server 2 such that the application data can be sent to VAL Server 2.\nPre-conditions:\n1.\tVAL Server 1, acting as EAS 1, subscribes to receive ACR notifications from EES 1.\n2.\tVAL server 1 and VAL Server 2 have performed SEALDD Server discovery, and acting as EASs, registered to corresponding EES with the associated SEALDD server information.\nAssumptions:\n1.\tWhen VAL servers are registered as EASs, EESs are able to determine, during ACR from a SEALDD-enabled VAL server, a target VAL server which is also SELDD-enabled. In other words, the Edge Enablement Layer can distinguish between a VAL server which uses SEALDD (termed SEALDD-enabled) and another VAL server for the same application which is not SEALDD-enabled.\nThe figure depicts a simplified representation of the SEALDD (Service-Enhanced Universal Access Layer) support for UE (User Equipment) service continuity. It illustrates the various layers of the SEALDD architecture, including the core switch, optical line terminal (OLT), and distributed nodes, which are crucial for ensuring service continuity in a 5G network. The figure highlights the importance of redundancy paths and failover mechanisms to ensure reliable service delivery.\nFigure 6.11.1.2-1: SEALDD support of UE's service continuity\n1.\tAn application client on a UE, acting as a VAL client, establishes a SEALDD flow over SEALDD-UU to send application data to VAL Server 1. SEALDD client and SEALD server 1 maintain SEALDD flow information (e.g., SEALDD flow ID, VAL IDs/addresses, VAL requirements).\n2.\tApplication data is sent via the SEALDD flow between the VAL Client and VAL Server 1.\n3.\tThe UE moves and generates a mobility event in the 5GC.\n4.\tThe UE's mobility event triggers the execution of an Application Context Relocation (ACR) procedure as described in 3GPP TS 23.558[10]. Any of the ACR scenarios detailed in 3GPP TS 23.558[10] clauses 8.8.2.2-8.8.2.6 may occur. In this step, the first three phases of the ACR procedure are performed, up to ACT. In this step VAL Server 1 acts as EAS 1 and VAL Server 2 as EAS 2, therefore participating in corresponding signaling. VAL server 2 has been selected as SEALDD-enabled server meeting the ACR criteria to be the target EAS (see precondition 1).\n5.\tBefore triggering ACT, VAL Server 1 sends a SEALDD notification of ACR event to SEALDD Server 1.\n6.\tIn response to the SEALDD notification of ACR event, SEALDD server 1 transfers the SEALDD flow to SEALDD server 2 which serves VAL Server 2. SEALDD server 1 sends SEALDD flow information (e.g., SEALDD flow ID, VAL IDs/addresses, VAL requirements) to SEALDD server 2. Network connection is established between SEALDD client and SEALDD server 2. As part of this establishment, SEALDD server 1 or SEALDD server 2 may apply the functionality specified in 3GPP TS 23.502 [7] clause 5.2.6.7 for AF traffic influence, providing the N6 routing information for the SEALDD client and SEALDD server 2 (if applicable). A notification may also be sent to the SEALDD client to notify it that the SEALDD flow has been transferred to SEALDD server 2.\nNOTE 1:\tOther information to be exchanged between SEALDD Servers during SEALDD context transfer are to be determined in the normative phase. The information required enables the recipient SEALDD Server2 to establish the network connection with SEALDD client 1 and to provide the SEALDD flow with same value-add functionality as the source SEALDD Server 1.\nNOTE 2:\tSolution #10 describes SEALDD context management applicable for this step. Additional details describing how to manage SEALDD connections and traffic flows during/after context transfer are to be determined in the normative phase.\n7.\tSEALDD Server 1 notifies VAL Server 1 of the completion of the SEALDD flow transfer.\n8.\tVAL Server 1 (acting as EAS1) and VAL Server 2 (acting as EAS 2) execute the Application Context Transfer (ACT) procedure step corresponding to the pending ACR scenario (3GPP TS 23.558[10] clauses 8.8.2.2-8.8.2.6).\nNOTE 2:\tThe ACT procedure referenced is not in scope of SA6 specifications, but it is implicitly defined via its use in 3GPP TS 23.558[10]. This specification leaves unchanged the ACT assumptions and descriptions from 3GPP TS 23.558[10].\n9.\tThe post-ACR clean-up phase is executed, as described in the corresponding ACR scenario (3GPP TS 23.558[10] clauses 8.8.2.2-8.8.2.6)\n10.\tThe application data from the VAL Client is sent via the SEALDD flow (with SEALDD server 2) to VAL Server 2.\nNOTE 3:\tThe SEALDD-UU client endpoint of the SEALDD flow in this step is maintained the same as in step1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.11.2\tSolution evaluation",
                            "text_content": "This solution addresses KI#2 to support SEALDD enabled transport layer status coordination for service continuity utilizing SEALDD flow management and context transfer.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.12\tSolution #12: SEALDD enabled data transmission quality measurement",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.12.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.12.2\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #3 about Support for data transmission quality measurement. The SEALDD client and SEALDD server is enhanced to carry out the data transmission quality measurement.\nPre-conditions:\n1.\tThe SEALDD server and SEALDD client are synchronized to the time source provided by 5GS as specified in 3GPP TS 23.501 [6].\n2.\tThe VAL server discovers and selects the SEALDD server by CAPIF functions.\nThe figure depicts a system for monitoring data transmission quality in a 5G network. It shows a set of sensors and a control unit, which can be used to monitor the signal strength, packet loss, and jitter. The system is designed to provide real-time data and alerts, helping operators to optimize network performance and ensure reliable communication.\nFigure 6.12.2.2-1 SEALDD enabled data transmission quality monitoring\n1.\tThe VAL server sends a SEALDD service subscription request to the SEALDD server. The service request includes the identifiers of the application traffic (e.g. VAL service ID, VAL server ID), requirement of transmission quality measurement (e.g. latency, bitrate, packet loss rate).\n2.\tUpon receiving the request, the SEALDD server performs an authorization check. If authorization is successful, the SEALDD server responds with a SEALDD service subscription response.\n3.\tSEALDD connection establishment steps as proposed in clause 6.9.2.2.\n4.\tSEALDD server initiates the UL/DL packet delay measurement based on the subscription request from VAL server. The SEALDD server encapsulates the DL monitoring packet (i.e. DL SEALDD packet with SEALDD DL monitoring header and VAL traffic as payload, or dummy DL SEALDD packet generated for data transmission quality monitoring) with local time T1 when the SEALDD server sends out the DL monitoring packets.\n5.\tSimilarly, the SEALDD client encapsulates the UL monitoring packet (i.e. UL SEALDD packet with SEALDD UL monitoring header and VAL traffic as payload, or dummy UL SEALDD packet generated for data transmission quality monitoring) with local time T2 when the SEALDD client receives the DL monitoring packet and local time T3 when the SEALDD client sends out the UL monitoring packet.\n6.\tThe SEALDD server records the local time T4 when the SEALDD server receives the UL monitoring packet and calculates the packet delay with T1, T2, T3, T4. The SEALDD server can also calculate the bitrate and packet loss rate over a certain period over a specific SEALDD connection by recording the status of the SEALDD packets carrying VAL traffic or dummy SEALDD packets generated for transmission quality measurement.\n7.\tThe SEALDD server reports the data transmission quality measurement results (e.g. packet delay, bitrate, packet error rate) to the VAL server according to the subscription.\nNOTE:\tThe SEALDD server can provide the related API to allow other consumers (e.g. VAL server, SEALDD server, SEAL server, etc) to invoke to query the measurement result. Any SEAL server (e.g. NSCE server) can consume the measurement service by acting like VAL server.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.12.3\tSolution evaluation",
                            "text_content": "By encapsulating the UL/DL monitoring packet in SEALDD client and SEALDD server, this solution addresses the first open issue of KI#3 to support the data transmission quality measurement (e.g. latency, bitrate, packet loss rate) in SEALDD layer. The detailed API defination of transmission quality report will be determined in normative work.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.13\tSolution #13: SEALDD support for data transmission quality guarantee with redundant transport",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.13.1\tSolution description",
                            "text_content": "The support of data transmission quality measurements enables SEALDD clients/ servers to determine if actions are needed to meet SEALDD service guarantees. In this solution, the redundant trasport mechanism offered by the Core Network is used by SEALDD to improve data transmission quality.\nNOTE 1: This solution assumes that SEALDD services are offered in deployments with optimal SEALDD Server to VAL Server connections.\nNOTE 2: Any neccesary mapping between data transmission quality criteria and the measurments neccesary to be accesible to SEALDD to enable this solution are to be addressed in the normative phase.\nThis procedure describes the use of redundant transport as an action to meet connection reliability requirements specified by a SEALDD service policy.\nPre-conditions:\n1.\tA SEALDD service policy, which includes data transmission quality guarantees, is available to SEALDD server, SEALDD client and/or VAL client. The policy can be used to configure measurements and determine the necessary SEALDD layer actions for meeting the service policy requirements.\n2.\tThe SEALDD Client is authorized to request redundant transport services on behalf of the VAL client.\nThe figure depicts a SEALDD data transmission quality guarantee with redundant transport, illustrating the importance of redundancy in ensuring reliable data transmission.\nFigure 6.13.1.2.1-1: SEALDD data transmission quality guarantee with redundant transport\n1.\tA VAL client and server establish a SEALDD connection to transport the application data. As part of the connection establishment, the SEALDD service policy in precondition 1 is shared so that it is available to both the SEALDD client and the SEALDD Server. The SEALDD Server may use the data transmission quality requirements of this policy in conjunction with other local policies pre-provisioned at the SEALDD server. As a result, SEALDD measurements are configured at the SEALDD client as described in solution #12 and the SEALDD client receives measurement reports containing SEALDD flow ID, a report identifier, the measurement identifier, the measurement values, and a timestamp.\n2.\tBased on measurement reports, the SEALDD client determines to perform an action do that the data transmission quality requirements of the policy are met. Specifically, the SEALDD client determines to trigger the establishment of redundant transport services.\n3.\tThe SEALDD client uses steps 3 to 6 of the procedure of solution #3 to request the use of redundant transport service from the SEALDD server. As part of this step, the UE may end the initial PDU session and establish redundant PDU sessions.\n4.\tThe SEALDD client updates the SEALDD connection with the redundant transport information, i.e., the UE addresses and ports for the redundant PDU sessions, the SEALDD flow identifier, and the application traffic descriptors. The SEALDD client also configures the parameters for enabling any necessary SEALDD measurements for the new transport.\n5.\tThe SEALDD server sends a response to the SEALDD client and configures the necessary measurements for the new transports.\n6.\tThe SEALDD server may subscribe to receive notifications from the 5G network for user plane measurements (e.g., the network latency requirements specified in 3GPP TS 28.541[13]), network analytics (as specified in 3GPP TS 28.104 [12], etc.).\n7.\tThe SEALDD client and server handle data duplication and elimination of application traffic on the redundant transport and the necessary measurements are collected by the SEALDD client and server.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.13.2\tSolution evaluation",
                            "text_content": "This solution addresses the KI#3 open issue supporting data transmission in SEALDD enabler layer with guaranteed quality. The solution uses the SEALDD measurement capabilities (e.g. as described in solution #12) for triggering actions determined based on SEALDD service policies. Specifically, the SEALDD layer uses the Core Network   redundant transport mechanism for maintaining guaranteed SEALDD data transmission quality requirements.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.14\tSolution #14: Data distribution management in SEALDD",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.14.1\tSolution description",
                            "text_content": "The regulator manages Data Delivery (DD) policy provisioning in its SEALDD server. During the application communication between VAL client (provider A) and VAL server (provider B), the DD policy is enforced by the SEALDD server (regulator).\nNOTE:\tProvider A and Provider B can be the same provider.\nThe figure depicts a general communication channel between a VAL client and VAL server, utilizing SEALDD (Secure End-to-End Data Link) technology. The diagram illustrates the communication path, including the use of SEALDD for secure data transmission.\nFigure 6.14.1.1-1: General communication between the VAL client and VAL server via SEALDD\nPre-conditions:\n1.\tThe SEALDD server (regulator) has DD policies received from the VAL server (regulator).\n2.\tThe VAL server (provider B) and SEALDD client has subscribed to receive notifications from SEALDD server (regulator).\nThe figure depicts a policy enforced by the SEALDD server (regulator) for connectivity, which is crucial for ensuring the smooth operation of a 5G network. The policy is based on the principles of network slicing, where different slices are assigned to different users or services. This allows for efficient resource allocation and ensures that users have access to the resources they need. The figure also shows the role of the SEALDD server (regulator) in managing the network, including the allocation of slices, the enforcement of policies, and the monitoring of network performance.\nFigure 6.14.1.2-1: Policy enforced by SEALDD server (regulator) for connectivity\n1.\tWhen the time for data transmission is about to start, the SEALDD server (regulator) enforces the policy to trigger DD connection establishment. If spatial condition for UE is provided, the SEALDD server (regulator) also ensures the UE’s location requirement is satisfied when establishing DD connection (e.g. by using NEF service for monitoring UE location or SEAL location service for UE entering area of interest).\n2.\tIf there is a special routing requirement for SEALDD user plane traffic (e.g. running on a specific slice and DNN), the SEALDD server (regulator) interacts with 3GPP CN to provision service specific parameters with NEF as described in 3GPP TS 23.502 [7], clause 4.15.6.10 and clause 4.15.6.7. If there are QoS requirement in the DD policy, the SEALDD server also apply QoS to ensure the quality for SEALDD traffic by utilizing NEF/PCF/NRM/EES service for QoS adjustment. If the DD policy specifies failure detection report, the SEALDD server may subscribe to CN analytics (e.g. DN performance analytics) from NEF/NWDAF and further notify data delivery status of application traffic to VAL client of provider A (via SEALDD client) and VAL server (provider B) based on analytics result.\n3-4.\tThe SEALDD server allocates an IP address and port for sending and receiving packet over SEAL-S reference point, then SEALDD server sends DD connection establishment notification to the VAL server (provider B) with VAL service ID, the IP address and port. The notification is acknowledged by the VAL server (provider B).\n5-6.\tThe SEALDD server allocates an IP address and port for sending and receiving packet over SEAL-Uu reference point, then SEALDD server sends DD connection establishment notification to the SEALDD client with VAL service ID, the IP address and port. The notification is acknowledged by the SEALDD client. UE IP address (and port) may be included by the SEALDD client in the notification acknowledgement or sent in a separate update message by SEALDD client if a different UE IP address is to be used in DD connection user plane.\nNOTE 1:\tStep 3 and step 5 can be done in parallel.\nNOTE 2:\tStep 5 can be sent via PDU session (if exist) or via application triggering (if no PDU session exists).\n7.\tThe SEALDD client further notifies the VAL client (provider A) about the DD connection being established.\nUpon receiving application traffic from VAL client (not shown in the figure), the SEALDD client sends it to SEALDD server (regulator) in SEALDD traffic. The SEALDD server (regulator) identifies application traffic based on the VAL service ID and further sends the application traffic to VAL server (provider B). The downlink application traffic sent from VAL server to VAL client is processed similarly.\nPre-conditions:\n1.\tThe VAL server (provider B) and SEALDD client has subscribed to receive notifications from SEALDD server (regulator).\nThe figure depicts a DD connection deletion scenario, showing the process of removing a Direct-to-Direct (DD) connection from a network. The figure illustrates the steps involved in deleting a DD connection, including the steps to disconnect the connection, the steps to remove the connection from the network, and the steps to remove the connection from the network. The figure also includes a visual representation of the network topology, showing the connections between different devices and the network's structure.\nFigure 6.14.1.3-1: DD connection deletion\n1.\tSEALDD server decides to remove the connection. Such a decision may be based on decision in SEALDD server in the following cases:\na.\tDD policy removal or validity time expiration;\nb.\tDD policy specified end time reached for DD communication;\nc.\tUE is leaving the area of interest (if spatial condition for UE is provided in the policy).\n2-3.\tThe SEALDD server (regulator) notifies DD connection deletion to the VAL server (provider B). The notification is acknowledged by the VAL server (provider B). The application traffic is stopped on both sides.\n4-5.\tThe SEALDD server (regulator) notifies DD connection deletion to the SEALDD client. The notification is acknowledged by the SEALDD client. The application traffic is stopped on both sides.\nNOTE 1:\tStep 2 and step 4 can be done in parallel.\nNOTE 2:\tStep 5 can be sent via PDU session (if exist) or via application triggering (if no PDU session exists).\n6.\tThe SEALDD client further notifies the VAL client (provider A) about the DD connection being removed. The application traffic is stopped on both sides.\n7.\tIf a special routing requirement for SEALDD user plane traffic was provided to 3GPP CN, the SEALDD server (regulator) interacts with 3GPP CN to remove service specific parameters with NEF as described in 3GPP TS 23.502 [7], clause 4.15.6.7.\n8.\tThe SEALDD server removes the DD connection (i.e. deletes the DD connection context).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.14.2\tSolution evaluation",
                            "text_content": "This solution addresses KI #8 about the SEALDD data distribution control between the VAL client and VAL server. The policy control in SEALDD helps to manage the SEALDD connectivity for application traffic transfer with QoS and status notification.\nThis solution also addresses KI #3 about how to support data transmission in SEALDD enabler layer with guaranteed quality by providing QoS for application traffic (i.e. using NEF/PCF/NRM/EES QoS service).\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.15\tSolution #15: SEALDD enabled data transmission via N6 Tunnel",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.15.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.15.2\tSolution description",
                            "text_content": "This solution addresses the key issue #3. In this solution, it is proposed to enable the SEALDD server to transfer data via N6 tunnel and provide traffic information in the N6 tunnelling header to provide guaranteed quality for specific VAL services.\nNOTE:\tThis solution is based on the solution #22 of SA2's 3GPP TR 23.700-60 [11].\nThe figure depicts a network setup with a 5G signal path, illustrating the signal propagation in a 5G network. It highlights the multi-path signal propagation, with key components such as the base station (gNB), user equipment (UE), and scatterers. The diagram illustrates beamforming techniques to mitigate interference, and the fiber-optic backbone architecture with core switches, optical line terminals (OLTs), and distributed nodes. The layered design aligns with SDN principles.\nFigure 6.15.2.2-1 SEALDD enabled data transmission via N6 Tunnel\nThis procedure reuses the existing steps described in solution #9. The enhancement is described as the following steps:\n1-2.\tThe VAL server may invoke a new API for N6 tunnel data transfer for specific VAL service and the SEALDD server allocates a specific SEALDD traffic descriptor of SEALDD server side for SEALDD traffic transferring via N6 tunnel.\n6.\tThe SEALDD server selects a preconfigured N6 tunnel for sending the SEALDD traffic.\n7.\tThe SEALDD server responds to the SEALDD client with the SEALDD traffic descriptor of SEALDD server side (e.g. address/port allocated in step 2, transport layer protocol) mapping to the application traffic.\n8.\tThe SEALDD client uses the SEALDD traffic descriptor of SEALDD server side for SEALDD connection establishment. The SEALDD server stores the SEALDD client ID, SEALDD flow ID to identify the SEALDD traffic and establishes connection with VAL server for the VAL client to transmit application traffic mapping to the SEALDD traffic. SEALDD server will maintain the mapping between the SEALDD client ID, SEALDD flow ID and N6 tunnel, the mapping between N6 tunnel and VAL server.\nUpon receiving application traffic from VAL server, the SEALDD server maps it into SEALDD traffic with SEALDD traffic descriptor as negotiated with SEALDD client. When transmitting through the 5GC network, the SEALDD server sends the SEALDD traffic towards the UPF via N6 tunnel. The SEALDD server will also include traffic specific information (e.g. packet priority, packet type) in the N6 tunnel header. The UPF will extract the information from the N6 packets header and may optimize the traffic transmission by sending that information to the RAN side. When receiving the SEALDD traffic, the SEALDD client maps the SEALDD traffic to the application traffic according to the stored mapping relationship. The SEALDD server sends the recovered application traffic to VAL server. The uplink application traffic sent from VAL client to VAL server is processed similarly.\nNOTE:\tOnly downlink data sent from the SEALDD server will be encapsulated with traffic specific information (e.g. packet priority, packet type) in the N6 tunnel header. Uplink data may be transmitted via the N6 tunnel without special information in the N6 packets header.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.15.3\tSolution evaluation",
                            "text_content": "This solution addresses the open issue of KI #3 on data transmission quality guarantee. It enables the VAL server to use the SEALDD to transmit data via N6 tunnel towards the 5GC and provide traffic information in the N6 tunnelling header to get guaranteed data transmission quality for specific VAL services.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.16\tSolution #16: SEALDD enabled application context transfer",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.16.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.16.2\tSolution description",
                            "text_content": "This solution addresses the key issue #5. In this solution, the SEAL DD server provides an application context transfer service to the application layer. With this new delivery service, the ASP can transfer the application context via the SEAL DD layer.\nPre-conditions:\n-\tThe source VAL server already obtains the serving target SEAL DD server of the target VAL server.\nThe figure depicts a 16-bit, 2-2-2-1 SEALDD (Software-Defined Networking) enabled application context transfer, illustrating the process of data transmission in a network. The figure shows the network's architecture, including the core switches, optical line terminals (OLTs), and distributed nodes, which are crucial for ensuring network reliability and failover. The layered design of the network aligns with SDN principles, allowing for efficient data transfer and management.\nFigure 6.16.2.2-1 SEALDD enabled application context transfer\n1.\tThe target VAL server subscribes the application context transfer event from its serving SEAL DD server.\n2.\tThe source VAL server determines to use the application context transfer service provided by the SEAL DD server. The source VAL server invokes the application context transfer creation request, the target VAL server and target SEAL DD server information is included.\n3.\tThe source SEAL DD server determines to create a delivery connection with the target SEAL DD server.\n4.\tThe source SEALDD server sends the SEAL DD connection establishment request towards the target SEAL DD server. The target VAL server is included. Other information related to the connection is also provided, e.g., the supporting protocols for this delivery. The target SEAL DD server accepts the request and returns the SEAL DD connection establishment response. The selected protocol, port number for this connection is included. The target SEAL DD server allocates the storage for the target VAL server.\n5.\tThe source SEALDD server allocates storage for the source VAL server and return the URL for application context storage, if the application context URL is not provided from the source VAL server.\n6.\tIf the SEAL DD storage service is used, the source VAL server puts the application context to the destination storage via the storage management procedure as described in Sol#4.\n7.\tIf the SEAL DD storage service is used, the application context is delivered from the source SEAL DD server towards the target SEAL DD server, and further fetched by the target VAL server via the storage management procedure as described in Sol#4.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.16.3\tSolution evaluation",
                            "text_content": "This solution enables the VAL server to use the SEAL DD provided application context delivery service to transfer the application context.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.17\tSolution #17: E2E redundant transmission path establishment with dual UE – dual UP",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.17.1\tSolution description",
                            "text_content": "The following solution corresponds to the key issue #1 on Support for E2E redundant transport in clause 4.1.\nIn this solution, the SA2 architecture of reliability group-based redundancy concept as defined in Annex F of 3GPP TS 23.501 [6] is utilized to help establish the E2E disjoint redundant UP paths in the MNO network. It is assumed that the 5GS deployment supports the reliability group-based redundancy concept.\nFigure 6.17.1.1-1 shows the used architecture of E2E redundant transmission path establishment with dual UE – dual UP according to Annex F in 3GPP TS 23.501 [6].\nThe proposed configuration and procedure handles cases of UE, gNB and UPF malfunction for device-to-DN connections by the establishment of Reliability Groups of corresponding UEs and gNBs and by disjoint path configuration between the device and the DN.\nThe given telecommunication figure depicts a detailed architecture for E2E redundant transmission path establishment, with dual UE and dual UP paths. The figure is based on the reliability group-based redundancy concept from the 3GPP TS 23.501 Annex F, which is used to ensure reliable communication in a 5G network.\nFigure 6.17.1.1-1: Used architecture for E2E redundant transmission path establishment with dual UE – dual UP paths, from “Figure F-2: Reliability group-based redundancy concept in RAN”, Annex F of 3GPP TS 23.501 [6]\nIn the proposed configuration multiple UEs belong to the same device. From the UEs in the same device, multiple PDU Sessions are set up to ensure redundancy, which use independent RAN and CN UP entities, i.e. disjoint UP paths. Each UE sets up a PDU session to S-NSSAI/DNN.\nThe core network UP deployment is aligned with RAN deployment and supports redundant user plane paths. The redundant RAN coverage is achieved by overlapping cells, supported by multiple gNBs.\nThe disjoint UP path establishment including UEs, gNBs and UPFs is realized by defining Reliability Groups (RGs) identified by S-NSSAI and RAT Frequency Selection Priority index.\nUsing RGs, selection of different gNBs and different cells for each UE in the device is realized. Once the RGs of the RAN are set up, UE selects cells from the same RG to ensure that different UEs in the same device are assigned to different gNBs. UE is handed over only to cells within the same RG. In case the UE connects to a cell in the wrong RG, gNB initiates HO to a cell in the appropriate RG whenever a suitable cell is available.\nBeyond UEs and gNBs, the disjoint UP path establishment includes separate UPFs. To achieve this, the separate RGs are identified with the requested S-NSSAI.  S-NSSAI might be received from 5GC (i.e. AMF) during the UE registration procedure, as noted also in step 2 of the procedure in Figure 6.X.3-1. S-NSSAI is used for AMF and SMF selection. UPF is selected with S-NSSAI/DNN.\nThe figure depicts a functional model for E2E redundant transmission path establishment with dual UE and dual UP, illustrating the process of establishing redundant paths for reliable communication.\nFigure 6.17.1.2-1: Functional model for E2E redundant transmission path establishment with dual UE – dual UP\nFigure 6.17.1.2-1 indicates the application layer architecture variant for E2E redundant transmission path establishment with dual UE – dual UP. Differences compared to the Data delivery enabler service architecture shown in figure 6.1.1.1-4 are the following:\n-\tthe presence of the network resource control server and the network resource control client for network resource management during disjoint path establishment,\n-\tthe presence of dual SEALDD-UU over the disjoint paths,\n-\ttwo UEs are indicated within the same device, according to Figure F-1 in 3GPP TS 23.501 [6].\nSEAL NRM Server and SEAL NRM Client as specified in 3GPP TS 23.434 [5] are best suited for the functionality of the network resource control server and network resource control client respectively, on adding the required enhancements.\nFollowing the configuration of SEALDD Server and SEALDD Client through the network resource control server and network resource control client as shown in figure 6.17.1.3-1, SEALDD Server and SEALDD Client are responsible for dual-UP uplink and downlink traffic on SEALDD-UUs, shown in figure 6.17.1.2-1.\nFor uplink data delivery, VAL client sends application traffic to SEALDD Client on SEAL-C, the SEALDD Client assigns a sequence number and application flow ID to the application data packet and replicates the SEALDD packet for transport with UDP on the redundant SEALDD-UU. Sequence number and application flow ID are part of the SEALDD packet header. The SEALDD server eliminates the replication to recover the application data packet; remove the SEALDD header and sends the application data packet to VAL server on SEAL-S.\nFor downlink data delivery, VAL server sends application data packets to SEALDD server that assigns a sequence number and application flow ID to each application data packet and replicates the SEALDD packet for transport with UDP on the redundant IP flows to the SEALDD Client. Each IP flow is identified with UE IP address (one per UE) , SEALDD Server IP address (one per server port), transport.\nFigure 6.17.1.3-1 indicates the procedure of E2E redundant transmission path establishment with dual UE – dual UP.\nThe figure depicts a procedure for establishing an E2E redundant transmission path with dual UEs and dual UPs, illustrating the steps involved in ensuring reliable communication in a 5G network.\nFigure 6.17.1.3-1: Procedure of E2E redundant transmission path establishment with dual UE – dual UP\n1.a.\tVAL server sends VAL connection with high availability request to the network resource control server together with the VAL UE ID. In line with the planned application requirements, VAL Server sends QoS and communication service availability requirements to the network resource control server. VAL Server also requests a list of high availability connections according to the QoS and availability requirements.\n1.b.\tOptionally, VAL server sends connection with high availability request to the SEALDD server which in turn sends the request to the network resource control server. In line with the planned application requirements, SEALDD Server sends QoS and communication service availability requirements to the network resource control server. SEALDD Server also requests a list of high availability connections according to the QoS and availability requirements.\n2.\tReliability Group (RG) configuration: The network resource control server and the 5GS interact to configure RGs for Disjoint Path Redundant Connectivity. A RG is defined based on the requested S-NSSAI by the UE. The S-NSSAI can be received from the AMF in the 5GC in URSP during UE registration procedure.\nThe UE RG parameter is encoded into RAT/Frequency Selection Priority (RFSP) Index. PCF is configured to authorize the RFSP for each requested S-NSSAI. Network resource control server derives the GPSIs of the UEs in the VAL client device from the requested VAL UE ID.\n3.\tNetwork resource control server requests the establishment of PDU sessions by UE1/GPSI1 to S-NSSAI1/DNN and by UE2/GPSI2 to S-NSSA2/DNN. Different DNNs might be used.\n4.\tNetwork resource control server requests the SEALDD server to prepare dual UP paths for application data from VAL server.\n5 and 6.\tNetwork resource control client requests UE1 and UE2 to set up the PDU sessions.\n7 and 8.\tUE1 and UE2 response with UE-IP1 and UE-IP2 IP addresses of the established PDU sessions.\n9.\tNetwork resource control client responds in the Dual PDU session response with UE-IP1 and UE-IP2.\n10.\tSEALDD server responds in the Redundant UP response with IP address of the server ports (PortIP1 and PortIP2).\n11 and 12.\tNetwork resource control server configures the dual paths based on IPflow1 (UEIP1 and PortP1) and IPflow2 (UEIP2 and PortIP2) as well as the appflowID used by SEALDD to distinguish between the different application flows.\n13.\tNetwork resource control client configures the SEALDD client with the dual paths IPflow1 and IPflow2 as well as with the appflowID.\n14.\tSEALDD client responses with the SEALDD CL port to be used by VAL client for sending the application data\n15.\tNetwork resource control client acknowledges in Configure dual UP response the configuration of the dual UP path by the SEALLDD client.\n16.\tSEALDD server acknowledges in Configure dual UP response the configuration of the dual UP path and the SEALDD server port to be used by VAL server for sending application data.\n17.\tNetwork resource control client notifies VAL client with VAL connection with high availability and the SEALDD client port to use for sending application data.\n18. a.\tNetwork resource control server acknowledges the establishment of the high availability VAL connection and provides the SEALDD Server Port to be used by VAL Server for sending application data.\n18.b.\tOptionally, network resource control server acknowledges the establishment of the high availability SEALDD connection and provides the SEALDD Server Port to SEALDD Server which in turn sends it to VAL Server, to be used by VAL Server for sending application data.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.17.2\tSolution evaluation",
                            "text_content": "Editor's Note:\tThis subclause will evaluate the solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.18\tSolution #18: SEALDD enabled rate control for different VAL users",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.18.1\tArchitecture enhancements",
                            "text_content": "None.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.18.2\tSolution description",
                            "text_content": "As described in KI #8, in some scenarios, VAL servers need to restrict the rate of users accessing it for rate control.\nThe following solution corresponds to KI #8 to support SEALDD enabled rate control for VAL applications.\nSEALDD can offer rate control service for VAL applications as available API. In this solution, when VAL server subscribes to SEALDD server for data delivery services, it will also provide rate limit (i.e. minimum rate requirement and maximum rate limit) for VAL users. The SEALDD layer may provide the differentiated data delivery service with different rate experience for VAL users.\nThe figure depicts a system that enables rate control for different VAL users, with SEALDD (Software-Defined Networking) enabled. The system includes various components such as the base station (BTS), user equipment (UE), and network elements. The figure illustrates the process of rate control, which is a key feature of the system, allowing users to adjust their data rates based on network conditions. The system's design is based on Software-Defined Networking principles, which aim to simplify network management and improve performance.\nFigure 6.18.2.2-1 SEALDD enabled rate control for different VAL users\n0.\tThe VAL server discovers and selects the SEALDD server by CAPIF functions.\n1.\tThe VAL server sends a SEALDD service subscription request to the SEALDD server. The service request includes the identifiers of the application traffic (e.g. VAL service ID, VAL server ID), the VAL server’s total rate limit and rate limits (i.e. minimum rate requirement and maximum rate limit) for VAL users. The subscription request may also contain the rate control policy (e.g. re-allocating the rate limit between different VAL users).\n2.\tUpon receiving the request, the SEALDD server performs an authorization check. If authorization is successful, the SEALDD server responds with a SEALDD service subscription response.\n3.\tThe VAL/SEALDD client discovers and selects the proper SEALDD server for the VAL application as described for scenario (a) in sol #7 and sol #8. After this step, the VAL server is discovered and selected along with the associated SEALDD server, the SEALDD client can get the SEALDD server's address.\n4.\tThe SEALDD client sends SEALDD connection establishment request to SEALDD server with the SEALDD client ID, the VAL user’s information.\n5.\tThe SEALDD server can subscribe to 5GC for QoS monitoring of the specific UE related to the VAL user.\n6.\tThe SEALDD server performs rate limit check according to the VAL user’s rate limit, the current SEALDD traffic delivery status and the VAL server’s total rate limit.\n7a.\tIf the available rate (i.e. the remaining rate that can be used for the VAL user without exceeding the VAL server’s total rate limit) cannot meet the VAL user’s minimum rate requirement, the SEALDD server will reject the SEALDD client’s connection establishment request.\n7b.\tWhen the available rate can meet the VAL user’s requirement, the SEALDD client can establish the SEALDD connection with the SEALDD server.\nNOTE 1:\t The SEALDD server can re-allocate the available rate resource to different VAL users according to the rate control policy received in step 1.\nNOTE 2:\tThe mechanism for step 7b can be specified in normative work.\n8.\tThe SEALDD server can provide the suggested traffic transmission rate to the SEALDD client according to the VAL user’s rate limit and the related UE’s current network status (i.e. via QoS monitoring report from the 5GC).\n9.\tThe SEALDD server notify the SEALDD client about the rate control configuration of rate resource.\n10.\tThe SEALDD server and SEALDD client execute the new rate control configuration via application layer rate control.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.18.3\tSolution evaluation",
                            "text_content": "This solution address the KI#8 to support SEALDD enabled rate control for different VAL users. The SEALDD server may perform the rate control actions according to the VAL server’s rate limit, traffic delivery status for different VAL users.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "7\tOverall evaluation",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "7.1\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "The following clauses contain an overall evaluation of the solutions presented in this technical report, their applicability to the identified key issues and possible dependencies to other groups. This clause also includes a summary of the SEALDD services to be considered for the normative phase.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.2\tArchitecture enhancements",
                    "description": "",
                    "summary": "",
                    "text_content": "The solution #1 proposes general architecture enhancements for SEALDD enabler layer including functional architecture, reference points and traffic flow architecture.\nSolution #2 proposes the enhanced architecture for E2E redundant transmission including the traffic flow and traffic transition model.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.3\tSolution evaluations",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.3.1\tGeneral",
                            "text_content": "All the key issues and solutions specified in this technical report are listed in Table 7.2.1-1. This table includes the mapping of the key issues to the solutions and corresponding solution evaluations.\nTable 7.3.1-1 Key issue and solutions\n\n7.3.2\tSEALDD services\nTable 7.3.2-1 provides an overview of the SEALDD services which are provided by SEALDD layer, based on the individual solutions.\nTable 7.3.2-1 SEALDD services\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.3.1-1 Key issue and solutions",
                                    "table number": 1,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.3.2-1 SEALDD services",
                                    "table number": 2,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.3.3\tOverall evaluation of key issue#1",
                            "text_content": "The open issues of KI #1 include:\n1.\tWhether and how to support the packet/data duplication and elimination between client (UE) and server (Network) at enabler layer for E2E redundant transport?\n2.\tWhether and how to support the interaction between the enabler service and 5GC to establish the E2E redundant transmission path?\nThere are two solutions in the TR, VAL server triggered solution is described in solution#2, and VAL client triggered solution is described in solution#3. Both of them address the two open issues of this KI.\nSolution #2 provides the enhanced E2E redundant transmission architecture to support SEALDD enabled E2E redundant transmission. The format of the SEALDD traffic flow and the data traffic transition are also introduced to clearly define the SEALDD enabler layer's functionality. The procedure shows the detailed SEALDD connection establishment steps.\nSolution #3 complements solution #2 with VAL client triggered E2E redundant transmission.\nBoth solutions reuse the current AF influence URSP mechanism to establish redundant PDU Sessions for redundant SEALDD traffic transmission.\nSolution #17 cover the case of a redundant path configuration, which uses dual UEs and dual - separated in both at the radio interface, RAN and core network - UP paths, which could significantly improve the service availability of a connection between a device and a DN in case of failure due to UE or gNB malfunction (e.g. failure of RAN CP to master gNB). This solution, however, is for consideration in a future release.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.4\tOverall evaluation of key issue#2",
                            "text_content": "The open issues of KI#2 include:\n-\tHow to support EAS relocation scenarios involving SEALDD server (e.g. EAS relocation initiated by the AF/AS for load balancing or EAS relocation initiated by the 5GC because of UE location change).\n-\tHow SEALDD enabler provides support for seamless relocation and lossless data delivery?\nThere are two solutions related to this KI in the TR, the SEALDD server relocation is proposed in solution #10 for EDN scenario and non-EDN scenario, and in solution #11, the EDGEAPP ACR procedure is enhanced to introduce the SEALDD context management in EDN scenario.\nSolution #10 proposes that the current EDGEAPP and DNS mechnism can be used to discover the new SEALDD server due to UE mobility and for load-balancing, and further introduces the SEALDD context transfer procedure for the cases of non-IP replacement and IP replacement.\nSolution #11 integrates the SEALDD server discovery and the SEALDD context transfer into the current EDGEAPP ACR procedure.\nFor the normative work, the following aspects need to be resolved:\n-\tThe detailed information in SEALDD context transfer procedure.\n-\tAdditional details about how to manage SEALDD connections and traffic flows during/after context transfer to ensure lossless data delivery.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.5\tOverall evaluation of key issue#3",
                            "text_content": "The open issues of KI #3 include:\n-\tHow to support the data transmission quality measurements in SEALDD server/client?\n-\tWhat APIs should SEALDD enabler provide to application clients/servers to support receiving transmission quality measurements?\n-\tWhat APIs should SEALDD enabler provide to application clients/servers to support configuration of transmission quality measurements?\n-\tHow to support data transmission in SEALDD enabler layer with guaranteed quality?\nIn current TR, there are five solutions (i.e., solution #9, solution #12, solution#13, solution #14, solution #15) to address this KI.\nThe first three open issues are about the data transmission quality measurement, solution #12 provides the corresponding method of transmission quality measurement. The transmission quality measurement (e.g. latency, bitrate, etc) can be calculated by the SEALDD server, based on the encapsulated UL/DL monitoring packet in SEALDD client and SEALDD server. The detailed API definition of transmission quality report will be determined in the normative phase.\nFor the last open issue about transmission quality guarantee, there are four solutions (i.e., solution #9, solution #13, solution #14 and solution #15) in the TR.\nIn solution #9 and solution #14, the SEALDD server provides the required QoS information for specific VAL server to 5GC via N33/N5. With the interaction between SEALDD server and 5GC, the QoS request and QoS authorization can be performed to guarantee QoS quality.\nSolution #13 uses the transmission quality measurement result (i.e., as provided in solution #12) to perform the specific actions based on the SEALDD service policies, such as adjusting the regular transmission to redundant transmission to maintain the guaranteed data transmission.\nSolution #15 proposes that the SEALDD server can encapsulate the traffic specific information (e.g. packet priority, packet type) in the N6 tunnel header, and transmit the SEALDD traffic towards the UPF via the selected N6 tunnel. The information included in N6 packet header can be used by 5GS to have better resource schedule and provide the guaranteed data transmission quality.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.6\tOverall evaluation of key issue#4",
                            "text_content": "The open issue of KI #4 is that how to leverage MSGin5G service in SEALDD and integration possibility.\nThere is one solution in the TR, SEALDD integrating MSGin5G for message transfer is proposed in solution #6 to address the open issue of KI #4.\nSolution #6 provides a deployment choice for SEALDD layer to integrate MSGin5G functionality to support SEALDD enabled MSGin5G message transfer. The solution proposes that SEALDD integrates MSGin5G functions in SEALDD layer and utilize MSGin5G service in SEALDD layer. SEALDD traffic can be encapsulated and transmitted in the format of MSGin5G messages. SEALDD layer reuses the functionality defined in 3GPP TS 23.554 [9] and no enhancement to MSGin5G functionality is introduced in SEALDD.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.7\tOverall evaluation of key issue#5",
                            "text_content": "The open issues of KI #5 include:\n-\tWhat capability should the SEALDD server provide to support the data storage service?\n-\tWhat APIs should SEALDD enabler provide to enable the VAL server and VAL client to use the data storage service provided by SEALDD, such as the creation, refreshing, update, and deletion of the stored data?\n-\tWhat APIs should SEALDD enabler provide to VAL clients/servers to monitor the status of the stored data?\n-\tWhat management information or analytics should be provided to configure the storage service?\n-\tWhether and how to provide data storage service to support application data (e.g. application context) storage for VAL servers?\nThere are two solutions in the TR, Data storage management is described in solution#4and Application context transfer via data storage service is described in solution #16.\nSolution #4 defined a data storage service where the stored data can be queried by the creator or the other network functions for context or content transfer. The solution includes the data storage creation, data storage query and data storage management (including status notification, storage update, storage refresh, storage delete) procedures and functionalities.\nSolution #16 defined an application context transfer service between the VAL servers via invoking the data storage service defined in solution #4. This solution addresses the open issue “Whether and how to provide data storage service to support application data (e.g. application context) storage for VAL servers?” of KI #5.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.8\tOverall evaluation of key issue#6",
                            "text_content": "The open issues of KI #6 include:\n-\tWhether and how to enable the selection of a proper SEALDD server for an EAS (VAL server).\n-\tWhether and how to enable the discovery and selection of a proper SEALDD server related to a specific VAL server for a SEALDD client when both SEALDD server and VAL server are deployed in EDN.\nThere are two solutions in the TR, Solution #5 proposes to reuse CAPIF architecture and functionalities to enable VAL server to discover and select SEALDD server in EDN scenario. Solution #8 proposes to enhance EAS registration procedure to enable VAL/SEALDD client discover and select proper SEALDD server. Solution #5 addresses the first open issue of KI #6 and solution #8 addresses the second open issue of KI #6.\nThe two solutions form a complete process of SEALDD server discovery: VAL server discovers and selects the SEALDD server. VAL server subscribes to the SEALDD server for SEALDD service and registers to EES about the association information with the SEALDD server. Then EEC can use current EAS discovery procedure to find the proper SEALDD server for VAL/SEALDD client.\nSolution #8 provides two alternative ways of enhancement for different SEALDD transmission scenarios:\n1.\tVAL server (as an EAS) registered to EES with associated SEALDD server address as VAL server endpoint in EAS profile.\n2.\tVAL server (as an EAS) registered to EES with associated SEALDD server information;\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.9\tOverall evaluation of key issue#7",
                            "text_content": "The open issues of KI #7 include:\n-\tHow to discover and select the proper SEALDD server for a specific VAL server.\n-\tHow to discover and select the proper SEALDD server related to a specific VAL server for a SEALDD client.\n-\tHow to discover and select a new SEALDD server due to the change in VAL server.\nThere are two solutions in the TR, Solution #5 proposes to reuse CAPIF architecture and functionalities to enable VAL server discover and select SEALDD server in general scenario (non-EDN scenario). And Solution #5 addresses the first open issue of KI #7. Solution #7 proposes two alternative ways to find SEALDD server for VAL/SEALDD client in general scenario (none-EDN scenario). And Solution #7 addresses the second and third open issues of KI #7.\nSolution #7 proposes two scenarios about how SEALDD service is used:\n-\tScenario (a): SEALDD service is used for both signalling and data traffic transfer.\n-\tScenario (b): SEALDD service is used only for data traffic transfer.\nFor scenario (a) solution #7 leaves it to VAL's implementation on enhancement of DNS query mechanism.\nFor scenario (b) solution #7 proposes to let VAL server notify the VAL client about the associated SEALDD server via application layer signalling.\nIn addition, solution #10 offers possibility to use EDGEAPP for target SEALDD server discovery and selection during service continuity.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.10\tOverall evaluation of key issue#8",
                            "text_content": "The open issue of KI #8 is that:\n-\tWhat are the interactions between the SEALDD client and SEALDD server to enable the data transmission for different purposes? (e.g. redundancy, regular transmission etc.).\nThere are 3 solutions related to this KI in the TR, interactions between SEALDD client and SEALDD server to enable E2E redundant transmission is described in solution#2, interactions between SEALDD client and SEALDD server to enable regualr application traffic transfer is described in solution#9. And solution #14 describes the SEALDD server triggered application traffic transfer.\nInteractions between SEALDD client and SEALDD server are defined in the two solutions for different SEALDD services to configure the SEALDD connection establishment parameters for application traffic transfer. Application traffic descriptor, SEALDD traffic descriptor and the mapping relationship are described in the solutions. The difference is that for E2E redundant transmission service, two SEALDD traffic descriptors are needed and extra interactions may be needed since the SEALDD traffic is transmitted in two newly established redundant PDU Sessions.\nAnother open issue of KI #8 mentions:\n-\tHow to control the SEALDD data distribution between the VAL client and VAL server.\nSolution #14 offers the possibility to control application data distribution (via SEALDD) based on policy in SEALDD server. The policy includes temporal and spatial conditions for data distribution to control SEALDD connection establishment and deletion.\nThere is another open issue of KI#8:\n-\tHow to manage the bitrate of different users dynamically to better serve the users as per the servers’ resource limitations?\nFor the above open issue, solution #18 proposes that the SEALDD layer can perform the rate control actions for different VAL users. These rate control actions are determined according to the VAL server's rate limit policy and the network status.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "8\tConclusions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "8.1\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "This technical report fulfils the objectives of the study on SEAL Data Delivery. The report includes the following:\n1.\tDefinition of terms and abbreviations used in the study (clause 3);\n2.\tKey issues identified by the study (clause 4) and corresponding architectural requirements (clause 5);\n3.\tIndividual solutions addressing the key issues (clause 6);\n4.\tOverall evaluations of all the key issues and solutions (clause 7).\nThe study concludes with following general considerations for the normative work:\n1.\tDefinition of terms and abbreviations captured in clause 3 will be reused; and\n2.\tArchitectural requirements identified in clause 5 will be used as baseline architectural requirements.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "8.2\tArchitecture enhancement conclusions",
                    "description": "",
                    "summary": "",
                    "text_content": "The study concludes with following architectural enhancements considerations for the normative work:\n1.\tArchitecture enhancements from solution #1 will be used for the baseline architecture.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "8.3\tKey Issue conclusions",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "8.3.1\tConclusion of key issue#1",
                            "text_content": "Solution #2 and solution #3 can be considered in the normative work. Solution #2 will be the baseline solution in normative work, and solution #3 can be merged into solution #2 to form a general E2E redundant transmission solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "8.3.2\tConclusion of key issue#2",
                            "text_content": "Solution #10 and solution #11 can be considered in the normative work. The detailed information in SEALDD context tranfer procedure and how to manage SEALDD connections and traffic flows will be further discussed in the normative phase.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "8.3.3\tConclusion of key issue#3",
                            "text_content": "Solution # 12 can be considered in the normative work to provide the SEALDD enabled tranmission quality measurement. Solution #9, solution #13 and solution #14 can be considered in the normative work to provide the transmission quality guarantee. Solution #15 will be specified in the future release, if using N6 tunneling header to provide traffic information is supported by SA2. The detailed API and information flows will be determined in the normative work.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "8.3.4\tConclusion of key issue#4",
                            "text_content": "Solution #6 can be considered as the baseline solution of KI #4 in the normative work.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "8.3.5\tConclusion of key issue#5",
                            "text_content": "Solution #4 and solution #16 can be considered in the normative work, detailed APIs and information flows can be discussed in normative phase.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "8.3.6\tConclusion of key issue#6",
                            "text_content": "Solution #5 and both alternative ways of solution #8 can be considered in the normative work.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "8.3.7\tConclusion of key issue#7",
                            "text_content": "Solution #5 can be considered in the normative work.  Most parts of solution #7 are up to the VAL's implementation and out of SA6's scope, the main point is that the SEALDD client can get the SEALDD server information from the VAL client.\nNOTE:\tIn the normative work, about solution #7, it will only be mentioned that the SEALDD client can get the SEALDD server information from the VAL client, how VAL client gets the SEALDD server information is up to the VAL's implementation and out of SA6 scope.\nSolution #10 can also be considered in the normative work for target SEALDD server discovery and selection.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "8.3.8\tConclusion of key issue #8",
                            "text_content": "Solution #2, solution #9, solution #14 and solution #18 can be considered in the normative work for different SEALDD services for open issues of  KI #8.\n\nThe figure depicts the overall lifecycle of SEALDD, a software-defined network (SDN) solution. It illustrates the various stages of network management, including network planning, design, deployment, operation, and maintenance. The figure includes key components such as network virtualization, network slicing, and network orchestration, which are essential for managing and optimizing network resources.\nFigure A-1: Overall lifecycle of SEALDD\nAs shown in Figure A-1, the whole lifecycle of SEALDD to establish the SEALDD connection for the VAL client and VAL server includes 2 phases:\n1.\tSEALDD server Service Preparation Phase (This Phase is used by the VAL server to get SEALDD server prepared for SEALDD client access):\n(1)\tWhen the VAL server decides to use the SEALDD service for data transmission enhancement, it discovers the SEALDD server (e.g. by CAPIF).\n(2)\tThen the VAL server triggers SEALDD service subscription procedure to the discovered SEALDD server, in that procedure, SEALDD server is associated with the VAL server, and specific SEALDD server resource (e.g. address/port of the SEALDD server for redundant transmission) is allocated for the VAL server's service to transfer SEALDD traffic.\n(3)\tFor EDN scenario, the SEALDD server or VAL server will register the association information to the EES.\n2.\tSEALDD client Service Consuming Phase (When SEALDD server is prepared in SEALDD server Service Preparation Phase, the VAL client(s) can trigger SEALDD client to connect to specific prepared SEALDD server for SEALDD service):\n(1)\tWhen VAL client request to use SEALDD service to transmit the VAL traffic to VAL server, the VAL client or SEALDD client can discover the proper SEALDD server associated with the VAL server (e.g. via EAS discovery, DNS query, pre-configuration or Application layer signalling).\n(2)\tThen SEALDD client can interact with SEALDD server to negotiate for SEALDD data transfer. If Address/Port is allocated in SEALDD service subscription phase, it will be notified to SEALDD client in this step.\n(3)\tData transmission connection is established between the SEALDD client and SEALDD server for SEALDD traffic transfer.\n(4)\tFor some specific service (e.g. E2E redundant transmission), SEALDD server may configure the data connection with VAL server for transferring the VAL data mapping with the SEALDD client's SEALDD traffic.\n(5)\tThe whole configuration is accomplished and the VAL traffic is transferred via the SEALDD connection.\nThis clause provides a deployment example of SEALDD service based on the deployment model of cloud platform.\nFigure B-1 shows the deployment model of current cloud platform providing services to Client based APP or Browser based APP users via 3GPP network. The components of instances of application server can be classified into 3 parts: service logical component capable of processing application specific logic (including e.g. image recognition, video rendering or location function, and the services can be deployed as micro services for remote API invocation), storage component (including e.g. data storage accessing management function and data storage function such as database or file storage server) and External Communication component (including e.g. API gateway for API invoking management, data transmission gateway for media data transfer and communication endpoint service). Storage component and External Communication component are generic to all type of application, and they are normally provided as services in the cloud platform. SEALDD covers Storage component and External Communication component in its scope and improves communication service performance by employing 5G capability support.\nThe deployment model of Cloud Platform, as depicted in Figure B-1, illustrates the various components and their interconnections, highlighting the importance of scalability, flexibility, and cost-effectiveness in cloud computing.\nFigure B-1: Deployment model of Cloud Platform\nFigure B-2 shows a deployment example of SEALDD service based on the deployment model of current cloud platform providing services with 3GPP specific optimizations via 5G network.\nThe deployment suggestion of SEALDD service, as depicted in Figure B-2, highlights the importance of network slicing and SDN in managing and optimizing network resources. The figure illustrates the deployment of SEALDD service, which is a cloud-based service that provides network slicing capabilities. This service is designed to provide differentiated services to different network segments, allowing for efficient resource allocation and improved network performance. The deployment suggestion in Figure B-2 emphasizes the need for network slicing and SDN to manage and optimize network resources, ensuring that the service can be delivered efficiently and effectively to the end users.\nFigure B-2: Deployment suggestion of SEALDD service\nAs shown in Figure B-2, SEALDD server provides generic services such as storage service and external communication service for application server. Specially, SEALDD server is deployed with 5G adaptation function to provide 3GPP specific optimization via 5G network. It includes control-plane processing function which can communicate with the control plane of 5GC via N33/N5 interfaces. And it includes user-plane processing function which does the mapping between the application traffic and SEALDD traffic, the SEALDD traffic is transferred via the N6 interface of the 5G network. In this deployment model, the application server only keeps the application logical components as Micro services and can invoke the SEALDD API for data storage and external communication. The application server only read/write data or signals from the SEALDD server.\nThis deployment model enables the developer to use the 5G exposed capability for data transmission optimization and is aligned with the current cloud platform architecture which is compatible with existing application developing progress.\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "",
                                    "table number": 3,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}