{
    "document_name": "23700-87-i00.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Report has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\nIn the present document, certain modal verbs have the following meanings:\nshall\tindicates a mandatory requirement to do something\nshall not\tindicates an interdiction (prohibition) to do something\nNOTE 1:\tThe constructions \"shall\" and \"shall not\" are confined to the context of normative provisions, and do not appear in Technical Reports.\nNOTE 2:\tThe constructions \"must\" and \"must not\" are not used as substitutes for \"shall\" and \"shall not\". Their use is avoided insofar as possible, and they are not used in a normative context except in a direct citation from an external, referenced, non-3GPP document, or so as to maintain continuity of style when extending or modifying the provisions of such a referenced document.\nshould\tindicates a recommendation to do something\nshould not\tindicates a recommendation not to do something\nmay\tindicates permission to do something\nneed not\tindicates permission not to do something\nNOTE 3:\tThe construction \"may not\" is ambiguous and is not used in normative elements. The unambiguous constructions \"might not\" or \"shall not\" are used instead, depending upon the meaning intended.\ncan\tindicates that something is possible\ncannot\tindicates that something is impossible\nNOTE 4:\tThe constructions \"can\" and \"cannot\" shall not to be used as substitutes for \"may\" and \"need not\".\nwill\tindicates that something is certain or expected to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nwill not\tindicates that something is certain or expected not to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nmight\tindicates a likelihood that something will happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nmight not\tindicates a likelihood that something will not happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nIn addition:\nis\t(or any other verb in the indicative mood) indicates a statement of fact\nis not\t(or any other negative verb in the indicative mood) indicates a statement of fact\nNOTE 5:\tThe constructions \"is\" and \"is not\" do not indicate requirements.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The scope of this document is to study IMS architecture enhancements to support new real time communication services based on requirements of e.g. eMMTEL and 5G_MEDIA_MTSI_ext.\nThe study in this document includes the following aspects:\n1)\tStudy the enhancement of IMS architecture and procedures to support Data Channel usage in IMS network, including whether and which functionalities are defined in IMS architecture for Data Channel server, with separate control plane and media plane, and Data Channel application repository, which procedures are needed between Data channel server and IMS AS to support call event notifications.\n2)\tStudy whether and how IMS architecture and functions are supported for the requirements from SA WG1 Rel-18 eMMTEL WID impacts:\n-\tto support AR telephony communication.\n-\tto support 3rd party to verify via operator network that the caller is authorized to use or reference specific identity information which can be securely signalled to the callee when placing a call.\n3)\tStudy whether and which IMS media control interfaces can be potentially applied for service based architecture, supporting both existing capabilities and new capabilities for possible new applications and efficient media processing.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 23.501: \"System Architecture for the 5G System; Stage 2\".\n[3]\t3GPP TS 23.502: \"Procedures for the 5G system, Stage 2\".\n[4]\t3GPP TS 23.503: \"Policy and Charging Control Framework for the 5G System\".\n[5]\t3GPP TS 23.228: \"IP Multimedia Subsystem (IMS)\".\n[6]\t3GPP TS 26.114: \"Media handling and interaction\".\n[7]\t3GPP TS 22.261: \"Service requirements for the 5G system\".\n[8]\t3GPP TS 24.229: \"IP Multimedia Call Control based on SIP and SDP; Stage 3\".\n[9]\t3GPP TS 29.165: \"Inter-IMS Network to Network Interface (NNI)\".\n[10]\tIETF RFC 5688: \"A Session Initiation Protocol (SIP) Media Feature Tag for MIME Application Subtypes\".\n[11]\tIETF RFC 6809: \"Mechanism to Indicate Support of Features and Capabilities in the Session Initiation Protocol (SIP)\".\n[12]\tIETF RFC 3264: \"An Offer/Answer Model with the Session Description Protocol (SDP)\".\n[13]\tIETF RFC 3261: \"SIP: Session Initiation Protocol\".\n[14]\t3GPP TR 26.998: \"Support of 5G Glass-type Augmented Reality / Mixed Reality (AR/MR) devices\".\n[15]\t3GPP TS 26.928: \" Extended Reality (XR) in 5G\".\n[16]\tdraft-ietf-stir-passport-rcd-18: \"PASSporT Extension for Rich Call Data\".\nEditor's note:\tThe above document cannot be formally referenced until it is published as an RFC.\n[17]\tATIS-1000074: \"Signature-based Handling of Asserted information using toKENs (SHAKEN)\". https://access.atis.org/apps/group_public/download.php/62391/ATIS-1000074.v002.pdf.\n[18]\tIETF RFC 8224: \"Authenticated Identity Management in the Session Initiation Protocol (SIP)\".\n[19]\tIETF RFC 6749: \"The OAuth 2,0 Authorization Framework\".\n[20]\t3GPP TS 24.183: \"IP Multimedia Subsystem (IMS) Customized Ring Signal (CRS)\".\n[21]\t3GPP TS 23.256: \" Support of Uncrewed Aerial Systems (UAS) connectivity, identification and tracking\".\n[22]\tIETF RFC 8226: \"Secure Telephone Identity Credentials: Certificates\".\n[23]\tdraft-ietf-stir-cert-delegation-04: \"STIR Certificate Delegation\".\nEditor's note:\tThe above document cannot be formally referenced until it is published as an RFC.\n[24]\tATIS-1000092: \"Signature-based Handling of Asserted information using toKENs (SHAKEN): Delegate Certificates\". .\n[25]\t3GPP TR 22.873: \"Study on evolution of IMS multimedia telephony service\".\n[26]\t3GPP TS 29.214: \"Policy and Charging Control over Rx reference point\".\n[27]\t3GPP TS 29.514: \"5G System; Policy Authorization Service; Stage 3\".\n[28]\tdraft-ietf-sipcore-callinfo-rcd-04: \"SIP Call-Info Parameters for Rich Call Data\".\nEditor's note:\tThe above document cannot be formally referenced until it is published as an RFC.\n[29]\t3GPP TS 26.511: \"5G Media Streaming (5GMS); Profiles, codecs and formats\".\n[30]\t3GPP TS 26.116: \"Television (TV) over 3GPP services; Video profiles\".\n[31]\t3GPP TS 26.117: \"5G Media Streaming (5GMS); Speech and audio profiles\".\n[32]\t3GPP TS 26.118: \"Virtual Reality (VR) profiles for streaming applications\".\n[33]\t3GPP TS 26.119: \"Media Capabilities for Augmented Reality\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions of terms and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tTerms",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms given in TR 21.905 [1], in TS 23.501 [2] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in TR 21.905 [1] or in TS 23.501 [2].\nApplication data channel: It is used to transfer data of data channel applications between the UEs or between the UE and the network. The application data channel should be established only after the application has been downloaded. As specified in TS 26.114 [6], the stream ID for application data channel can be integers starting from 1000.\nAR Application Server: It is used to control the service logic related to AR communication. The functional definition of the AR Application Server is out of scope of 3GPP.\nBootstrap data channel: It is used to transfer data channel application list and data channel applications between the UE and the network. The bootstrap data channel is based on HTTP protocol. As specified in TS 26.114 [6], the stream ID for bootstrap data channel can be integers below 1000.\nData channel application: The HTML web content includes JavaScript(s), and optionally image(s) and style sheet(s). It is accessible at the HTTP root (\"/\") URL through a bootstrap data channel and describes the graphical user interface and the interactive service logic.\nDC Application Server: It interacts with DCSF and DC media function (either DCMF or enhanced MRF) for data channel traffic handling in P2A/A2P scenario. The functional definition of the DC Application Server is out of scope of 3GPP.\nMs reference point: This reference point is used to request signing of an Identity header field or request verification of a signed assertion in an Identity header field.\nSecure Telephone Identity Authentication Service (STI-AS): The SIP application server that performs the function of the authentication service defined in IETF RFC 8224 [18].\nSecure Telephone Identity Verification Service (STI-VS): The SIP application server that performs the function of the verification service defined in IETF RFC 8224 [18].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in TR 21.905 [1], in TS 23.501 [2] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in TR 21.905 [1] or in TS 23.501 [2].\n5QI\t5G QoS Identifier\nA2P\tApplication to Person\nDC\tData Channel\nDCAR\tData Channel Application Repository\nDCMF\tData Channel Media Function\nDCMTSI\tData Channel Multimedia Telephony Service for IMS\nDCS\tData Channel Server\nDCS-C\tControl Function of Data Channel Server\nDCS-M\tMedia Function of Data Channel Server\nDCSF\tData Channel Signalling Function\nP2A\tPerson to Application\nP2P\tPerson to Person\nPASSporT\tPersonal Assertion Token\nQCI\tQoS Class Identifier\nQoS\tQuality of Service\nRCD\tRich Call Data\nSHAKEN\tSignature-based Handling of Asserted information using toKENs\nSTI\tSecure Telephone Identity\nSTI-AS\tSecure Telephone Identity Authentication Service\nSTI-VS\tSecure Telephone Identity Verification Service\nSTIR\tSecure Telephone Identity Revisited\nTN\tTelephone Number\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tArchitectural Assumptions and Principles",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "4.1\tArchitectural Assumptions",
                    "description": "",
                    "summary": "",
                    "text_content": "The following architecture assumptions are applied to all KIs in the study:\n-\tReference architecture of IMS defined in TS 23.228 [5] is used as basis architecture for supporting next generation real time communication.\n-\tCall control protocol is based on SIP.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.2\tArchitectural Principles",
                    "description": "",
                    "summary": "",
                    "text_content": "The following architectural principles apply for all KIs in the study:\n-\tSolutions shall be access agnostic.\nThe following architectural principles apply for Data Channel usage in IMS:\n-\tSolutions shall have minimal impacts to IMS architecture and procedures.\n-\tSolutions shall use functionality and procedures for data channel as defined in TS 26.114 [6] as a baseline.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "5\tKey Issues",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tKey Issue #1: Enhancement to support Data Channel usage in IMS network",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.1.1\tDescription",
                            "text_content": "In TS 26.114 [6], the key component DCMTSI client is defined as a data channel capable MTSI client supporting data channel media. It implies the data channel media function or component is necessary for data channel communication.\nTS 26.114 [6] specifies the workflow where the data channel application is created prior to the DCMTSI call where it is intended to be used, and it doesn't cover how to create data channel in parallel with IMS call setup.\nThis key issue aims to study enhancement of IMS network to support the following aspects:\n-\tHow IMS network architecture needs to be enhanced to support functionalities associated with Data Channel Server functionality allowing for separate control and media plane, and Data Channel Application Repository. This includes defining new IMS functionalities and interfaces and/or identifying impacts on existing IMS functionalities and interfaces.\n-\tWhether, and if so which, existing IMS procedures need to be changed to support Data Channel usage in IMS.\n-\tStudy how support of Data Channel capabilities can be discovered by the network and UE.\n-\tStudy which functionalities and procedures that need to be changed to support policy and charging control for Data Channel in IMS including QoS support.\n-\tWhether and how IMS network architecture and procedures can be enhanced to support interworking between a DCMTSI client and MTSI client.\nNOTE:\tThis last bullet has dependency on progress of other bullets. Coordination with SA WG4 might be needed.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.2\tKey Issue #2: IMS based AR telephony communication",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.2.1\tDescription",
                            "text_content": "The Key Issue is to study the IMS architecture and solution for AR telephony communication including:\n-\tStudy, and identify IMS network architecture enhancements required to support AR telephony communication for different types of AR-capable UEs.\n-\tStudy, and identify how existing IMS procedures including signalling and media processing need to be changed to support AR telephony communication\nNOTE:\tCoordination with SA WG4 will be required, the AR media and AR specific data format, codecs and media processing procedures need to be defined in SA WG4.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.3\tKey issue #3: Third party specific user identities",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.3.1\tDescription",
                            "text_content": "The Key Issue is to study the architecture impact of third party specific user identities accessing IMS network, including:\n-\tStudy and if needed, define a mechanism how the serving IMS network can authorize a third party, and how the authorized third parties can verify whether a third party user is allowed to use third-party specific identities to initiate a call.\n-\tStudy and if needed, define a mechanism how the terminating IMS network can support the called party to verify third-party specific identities during a call.\n-\tStudy whether and how IMS procedures need to be enhanced to support authentication, authorization and verification to use third-party specific identities, which should be performed by the IMS network and third party. This includes studying potential impacts to the call-back procedure, and potential impacts on STIR/SHAKEN procedures defined in TS 24.229 [8].\n-\tStudy and if needed, identify required enhancements to an IMS subscription to support trusted third parties.\nNOTE:\tSecurity related aspects should be studied by SA WG3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.4\tKey Issue #4: Study of Applicability of Service based principles to IMS media control interfaces",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.4.1\tDescription",
                            "text_content": "This key issue aims to study whether and how 5G service based principles can be applied to IMS media control architecture and related interfaces.\nThe following aspects are studied in this key issue taken into account all the Notes listed below:\n-\tStudy whether and how 5G service based principles e.g. service registration, discovery, selection, etc. can be applied to IMS media control architecture and interfaces, to support existing and new capabilities such as e.g. Data Channel or AR, and to provide efficient media processing.\n-\tBased on the outcome from the first bullet, study co-existence of 5G service based and legacy IMS media control interfaces while considering backward compatibility.\nNOTE 1:\tThe priority is to support IMS DC.\nNOTE 2:\tSolutions defined for this key issue need to be aligned with solutions for e.g. data channel and AR communications.\nNOTE 3:\tSIP as call control protocol shall be maintained.\nNOTE 4:\tWhile media discovery/selection is in scope for the study, extension to e.g. IMS AS, etc. discovery/selection may be considered when it comes to solution evaluation.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "6\tSolutions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.0\tMapping of Solutions to Key Issues",
                    "description": "",
                    "summary": "",
                    "text_content": "Table 6.0-1: Mapping of Solutions to Key Issues\n\n",
                    "tables": [
                        {
                            "description": "Table 6.0-1: Mapping of Solutions to Key Issues",
                            "table number": 3,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.1\tSolution #1: Data Channel Usage for A2P/P2A Scenario",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.1.1\tDescription",
                            "text_content": "This solution resolves Key Issue #1 about supporting Data Channel usage in IMS network, specifically for Application to Person (A2P) and Person to Application (P2A) scenarios.\nDC Server includes both control function and media function and they interact with IMS AS in the IMS network. DC control function implements data channel business logic; and DC media function executes IMS data channel media operations. DC media function can be deployed as a standalone function as shown in Figure 6.1.1-1 (Option 1); or it can be integrated in MRF in IMS network as shown in Figure 6.1.1-2 (Option 2). In Option 1, there are two new interfaces which need to be defined: Interface 1 between DC control function and IMS AS, and Interface 2 between DC control function and DC media function. Interface 1 is used to send DC event notification and exchange the media information which will be translated into SIP/SDP between DC control function and IMS AS. In Option 2, only Interface 1' between DC control function and IMS AS is newly defined; and the interface between IMS AS and MRF will reuse Mr'/Cr in IMS architecture. In Option 2, when DC Control Function needs to control the DC related media in MRF, it will send the controlling operations to IMS AS, and IMS AS interacts with MRF for the media operations through existing Mr'/Cr interfaces. It will be better for MRF to receive the controlling operations from a single source, e.g. IMS AS.\nFigure 6 illustrates the architecture of a standalone Data Center (DC) media function, showcasing the integration of various components such as the Data Center Network (DCN), Network Functions Virtualization (NFV), and the use of Software-Defined Networking (SDN) principles. The figure highlights the central role of the Data Center Network in managing network resources and services, with the Media Function (MF) at the core of the DC infrastructure. The diagram emphasizes the importance of virtualization and software-defined technologies in enabling efficient and scalable network operations within the data center environment.\nFigure 6.1.1-1: Option 1: Standalone DC media function\nFigure 6 illustrates the integration of the DC media function within the MRF (Multirate Filter) in a telecommunication system. The figure showcases the block diagram of the MRF, which includes the DC (Direct Conversion) media function, the MRF itself, and the associated control and processing elements. The DC media function is depicted as a separate block within the MRF, indicating its role in processing signals at different rates. This integration allows for efficient signal processing and conversion between different rates, enhancing the overall performance of the telecommunication system.\nFigure 6.1.1-2: Option 2: DC media function integrated in MRF\nThe procedures of Data Channel establishment for A2P/P2A applications defined in clause 6.1.2 will be based on the interaction between DC control function and DC media function.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.2\tProcedures",
                            "text_content": "Depicted in Figure 6.1.2 -1 is the high-level procedures of Data Channel establishment for A2P/P2A applications.\n\nFigure 6 illustrates the high-level procedures of data channel establishment for A2P/P2A applications, showcasing the process of message routing, authentication, and encryption. The figure highlights the role of the SMSC (Short Message Service Center) and the MMSC (Multimedia Messaging Service Center) in facilitating secure communication between the sender and receiver. The various signaling protocols, such as Diameter, are depicted as they facilitate the establishment of the data channel. The figure emphasizes the importance of security measures, including authentication and encryption, to ensure the confidentiality and integrity of the exchanged messages.\nFigure 6.1.2-1: High-level procedures of Data Channel establishment for A2P/P2A applications\nThere are 3 phase procedures for supporting DC usage in IMS network as shown in Figure 6.1.2-1 and they are:\n-\tProcedures of bootstrap DC establishment;\n-\tProcedures of application acquirement;\n-\tProcedures of application DC establishment.\nFor the procedures of bootstrap DC establishment, DCMTSI Client sends Invite request for Bootstrap DC to IMS AS through I/S-CSCF. IMS AS triggers the event notification to DC Control Function. Then DC Control Function instructs DC Media Function to create Bootstrap DC resource directly or through IMS AS. IMS AS responds the result to DCMTSI Client. Then bootstrap data channel is established between DCMTSI and DC Media Function.\nFor the procedures of application acquirement, DCMTSI Client sends Application Request to DC Media Function on the established bootstrap data channel. DC Media Function interacts with DC Application Repository to get the application and transfers it to DCMTSI Client over bootstrap data channel.\nFor the procedures of application DC establishment, DCMTSI Client sends Invite request for Application DC to IMS AS through I/S-CSCF. IMS AS triggers the event notification to DC Control Function. The subscribe/notify pattern could be used by DC Control Function and IMS AS for the DC event notification. DC Control Function subscribes to IMS AS and the subscription information at least includes the user identity and the event description i.e. DC event information. When there are multiple IMS AS deployed, DC Control Function will subscribe to all IMS AS. Alternatively, the pre-configuration of mapping information of the user identity to DC Control Function stored in IMS AS can be used for the DC event notification. Then DC Control Function instructs DC Media Function to create Application DC resource directly or through IMS AS. IMS AS responds the result to DCMTSI Client. Then application data channel is established between DCMTSI Client and DC Media Function; and the data could be exchanged between DCMTSI Client and DC Media Function for the A2P/P2A application over this DC.\n\nEditor's note:\tThe detail subscription information from DC Control Function to IMS AS is FFS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.3\tImpacts on existing nodes and functionality",
                            "text_content": "The solution has impacts on the following entities:\nUE:\n-\tSupport DCMTSI functionality and related procedures.\nIMS network:\n-\tIMS AS: Support interaction with DC Control Function and Media Function to support DC usage; send DC event notification and receive DC media information.\n-\tNew added DC Control Function, DC Media Function, and DC Application Repository.\n-\tMRF: Support DC Media Function.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.2\tSolution #2: Solution of Data Channel usage in IMS network",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.2.1\tDescription",
                            "text_content": "TS 26.114 [6] specifies the workflow where the data channel application is created prior to the DCMTSI call where it is intended to be used. It doesn't cover how to integrate data channel related functions into IMS architecture, as well as the impact to IMS call setup procedures.\nThis solution proposes the enhancement of IMS network based on SBA to support the functionalities of data channel. Two new network functions are specified for data channel management, including Data Channel Server (DChS) and Data Channel Application Repository (DCAR). Some existing NFs are enhanced in IMS network to support data channel, including MRFC, NRF and NEF.\nFigure 1 depicts the reference architecture of IMS enhancement for data channel. Service-based interfaces are used within the Control Plane.\nFigure 6.2.1.2-1 illustrates the enhancement of the IP Multimedia Subsystem (IMS) architecture to support data channels. The figure showcases the integration of the IMS core network with the evolved packet core (EPC) to facilitate data communication. Key components include the home subscriber server (HSS), service control point (SCP), and media gateway controller (MGC). The figure highlights the improved signaling and session control, enabling faster and more efficient data transmission for multimedia services.\nFigure 6.2.1.2-1: IMS architecture enhancement to support data channel\nData Channel Server (DChS) supports the following functionalities:\n-\tReceives data channel applications from the users or authorized party.\n-\tStores the data channel applications in the Data Channel Application Repository (DCAR).\n-\tManages data channels with DCMTSI clients according to the request from IMS-AS.\n-\tDistributes or updates data channel applications via established bootstrap data channels to DCMTSI clients.\n-\tRoutes data channel applications traffic between DCMTSI clients and the application servers.\n-\tGenerates traffic usage reports and event reports\nData Channel Application Repository (DCAR) supports the following functionalities:\n-\tStorage and retrieval data channel applications\nNOTE:\tAn open interface between DCAR and DChS will not need to be normatively specified.\n\nMedia Resource Function Controller (MRFC) is enhanced with service-based interface to support the handling of media data from data channels and the convergence with audio/video traffic in the media channels.\nEditor's note:\tHow MRFC applies in IMS data channel establishment procedures is FFS.\nNRF maintains the IMS NFs profile and support service discovery function.\nNEF supports provision of external information e.g. data channel applications to IMS networks.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.2\tProcedures",
                            "text_content": "Figure 6.2.2-1 illustrates the step-by-step process of establishing a data channel in a telecommunication system. The figure depicts the interaction between the network elements involved in the process, including the network elements, the signaling protocol, and the data channel establishment procedure. The figure shows the sequence of events, from the initiation of the data channel establishment procedure to the successful establishment of the data channel. The figure also shows the role of each network element in the process, including the network element that initiates the procedure, the network element that receives the request, and the network element that completes the procedure. The figure provides a clear and concise overview of the data channel establishment procedure, making it a valuable resource for understanding the process in a telecommunication system.\nFigure 6.2.2-1: Data Channel establishment procedure\n1.\tThe originating DCMTSI UE as defined in TS 26.114 [6] includes a data channel media description for the bootstrap data channels in the initial SDP offer.\n2.\tThe IMS-AS determines to trigger the bootstrap data channel for the originating UE based on the network operator's policy.\n3.\tThe IMS AS creates and sends a new SDP offer to the terminating DCMTSI UE in order to setup a bootstrap data channel with the terminating UE.\n4.\tIf the IMS-AS does discovery of Data Channel Server (DChS), the IMS-AS shall utilize the NRF to discover DChS instance(s) unless DCS information is available by other means, e.g. locally configured on IMS-AS.\n5.\tIMS AS sends an offer response of bootstrap DC to the originating UE.\n6.\tThe IMS-AS requests DChS to allocate resource (e.g. DTLS/SCTP bears) for the bootstrap DC to the originating UE and the terminating UE with related media description information.\n7.\tIf the DChS does not store the requested applications, it will retrieve the applications from the Data Channel Application Repository (DCAR). If the DC applications are provisioned by third party, the NEF is required for the interworking between DChS and external AF. If the DCAR are deployed by third party, the NEF is required for the interworking between DChS and DCAR.\n8.\tThe applications are distributed to the DCMTSI UE(s) via the bootstrap data channel(s) as defined in TS 26.114 [6].\n9.\tOne or more non-bootstrap data channels are established according to the media feature of applications that invoked in the DCMTSI UE. IMS AS may request MRFC to perform the synchronization and convergence of DC media and audio/video media for rendering in the DC applications.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.3\tImpacts on existing nodes and functionality",
                            "text_content": "Media Resource Function Controller (MRFC) is enhanced to support the handling of media data from data channels and the convergence with audio/video traffic in the media channels.\nNRF is enhanced to maintain the IMS NFs profile and support service discovery function.\nNEF is enhanced to support provision of external information e.g. data channel applications to IMS networks.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.3\tSolution #3: Data Channel Architecture",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.3.1\tDescription",
                            "text_content": "This solution addresses Key Issue #1 \"Enhancement to support Data Channel usage in IMS network\" and focuses on how IMS network architecture and procedures needs to be enhanced to support functionalities associated with Data Channel Server functionality allowing for separate control and media plane, and Data Channel Application Repository.\nThe solution introduces two new network functions into IMS network, which provide the control function and the media function of IMS data channel respectively.\nThe following Figure 6.3.1.1-1 shows the high-level architecture of the solution.\nFigure 6.3.1.1-1 illustrates the IMS (IP Multimedia Subsystem) data channel architecture, focusing on the reference point representation. The figure showcases the various components involved in the data channel, including the IMS core, home subscriber server (HSS), and media gateway controller (MGC). The core network is depicted as a central hub, with the HSS and MGC connected through signaling protocols. The figure emphasizes the interconnection and communication between these components, highlighting their role in managing and controlling multimedia services.\nFigure 6.3.1.1-1: IMS data channel architecture; reference point representation\nThe following network functions are introduced into this architecture, whose services are described in clause 6.3.1.2:\n-\tDCS-C: Control Function of Data Channel Server.\n-\tDCS-M: Media Function of Data Channel Server.\nNOTE 1:\tThe NRF is not depicted in the reference point architecture figure.\nNOTE 2:\tThere is no change to the existing MRF (MRFC and MRFP).\nThe following reference points are defined for the IMS data channel architecture. It is suggested that SBI is applied to these reference points:\n-\tIF1:\tReference point between the DCS-C and the DCS-M.\n-\tIF3:\tReference point between the DCS-C and the MMTel AS.\n-\tIF4:\tReference point between the DCS-C and the NEF.\n-\tIF5:\tReference point between the MMTel AS and the DCS-M.\nNOTE 3:\tSpecifying IF4 is out of the scope of 3GPP Release 18 and will be discussed in the later release.\nThe Control Function of Data Channel Server (DCS-C) plays the role of IMS data channel control function, which includes:\n-\tManages bootstrap data channels and application data channels.\n-\tControls upload and download of IMS data channel applications.\n-\tSubscribes and receives media event notifications from the MMTel AS when the data channels are associated with an IMS audio/video session. The notifications contain the information about the data channel media descriptions in the SDP offer/answer received by the MMTel AS. Based on these information and the user's subscription to the data channel services, the DCS-C indicates the MMTel AS how to deal with the data channel media descriptions in the SDP offer/answer received.\nIt is noted that the MMTel AS is selected by the S-CSCF when the ISC interface is triggered, the DCS-C does not know which MMTel AS will serve some user. Therefore the DCS-C has to query all the MMTel AS in the network via the NRF and send Subscribe requests to them. Another solution is that implicit subscription is used. That is, the MMTel AS knows the mapping from the subscriber identity segments to the DCS-C based on local configuration:\n-\tExposure data channel capability to the third party through IF4.\nIn addition, the DCS-C need to support service registration with the NRF, and service discovery/selection via the NRF.\nThe Media Function of Data Channel Server (DCS-M) plays the role of IMS data channel media function, which includes:\n-\tInitiates and terminates bootstrap data channels between the UE and itself.\n-\tInitiates and terminates application data channels between the UE and itself in A2P/P2A scenarios.\n-\tSupports data channel interworking towards internet/intranet. In the A2P/P2A scenarios, the data channel applications may be hosted on the third party application server and the UE must interacts with the third party application server through the DCS-M to send and receive application data.\nIn addition, the DCS-M need to support service registration with the NRF.\nAll the services described below will be discovered and selected via the NRF.\nFigure 6.3.1.3.1-1 presents a reference architecture for the NDCs-C services, utilizing a Service Based Interconnect (SBI) representation. The figure illustrates the various components involved, including the Network Domain Controller (NDC), Service Domain Controller (SDC), and Service Function Chaining (SFC) nodes. The SBI model emphasizes the logical and functional relationships between these components, facilitating efficient service orchestration and management. The architecture emphasizes the use of standardized APIs and interfaces to enable seamless integration and interoperability across different service providers and network domains.\nFigure 6.3.1.3.1-1: Reference Architecture for the Ndcs-c Services; SBI representation\nFigure 6.3.1.3.1-2 presents a reference architecture for the NDCs-C services, focusing on the reference point representation. The figure illustrates the various components involved, including the NDCs-C, NDCs-C, and the reference point. The architecture emphasizes the importance of efficient communication and coordination among these elements to ensure seamless service delivery. The figure also highlights the role of the NDCs-C in managing and controlling the network resources, enabling the provision of high-quality services to the end-users. Overall, the architecture depicted in Figure 6.3.1.3.1-2 underscores the need for a well-structured and coordinated approach to service delivery in the NDCs-C environment.\nFigure 6.3.1.3.1-2: Reference Architecture for the Ndcs-c Services; reference point representation\nThe DCS-C provides the following services to the NEF:\n-\tControl operations of data channel, such as opening, continuing, closing, refusing some data channel media stream, etc.\nNOTE:\tThis service is out of the scope of 3GPP Release 18 and will be discussed in the later release.\nFigure 6.3.1.3.2-1 presents a reference architecture for the NDCs-m services, utilizing a Service Based Interconnect (SBI) representation. The figure illustrates the various components involved, including the Network Function Virtualization (NFV) Infrastructure, Centralized Management and Orchestration (CMO), and the Network and Service Function Chaining (NSFC). The SBI model is employed to depict the relationships and interactions between these elements, emphasizing the dynamic and scalable nature of the architecture. This design supports the efficient deployment and management of services, ensuring high availability and performance for end-users.\nFigure 6.3.1.3.2-1: Reference Architecture for the Ndcs-m Services; SBI representation\nFigure 6.3.1.3.2-2 presents a reference architecture for the NDCs-m services, focusing on the reference point representation. The figure illustrates the various components involved, including the service provider network, the customer premises equipment, and the network elements that facilitate the delivery of multimedia services. The architecture emphasizes the integration of different network layers, such as the transport layer, the network layer, and the application layer, to ensure seamless and efficient service delivery. The figure also highlights the role of network functions virtualization (NFV) and software-defined networking (SDN) in enabling flexible and scalable network operations. Overall, the architecture aims to provide a robust and flexible framework for delivering multimedia services over the NDCs-m network.\nFigure 6.3.1.3.2-2: Reference Architecture for the Ndcs-m Services; reference point representation\nThe DCS-M provides the following services to the MMTel AS:\n-\tOperations on data channel related resources and data channel media stream, such as allocating/updating/releasing data channel related resources, initiating and terminating some data channel media stream and so on.\nThe DCS-M provides the following services to the DCS-C:\n-\tOperations on the application data of the data channel applications, such as sending/reporting application data, and so on.\nFigure 6.3.1.3.3-1 presents a reference architecture for NMMtelas services, utilizing System-Based Interfaces (SBIs) for representation. The figure illustrates a layered structure, starting with the subscriber premises equipment (SME) at the bottom, followed by the service provider network (SPN), and culminating in the service provider network management (SPNM) at the top. The architecture emphasizes the importance of seamless service delivery and efficient network management, with various components such as the service control point (SCP), service data point (SDP), and service management point (SMP) playing crucial roles in service orchestration and policy enforcement. The figure also highlights the use of network functions virtualization (NFV) and software-defined networking (SDN) principles, which enable flexible and scalable network services.\nFigure 6.3.1.3.3-1: Reference Architecture for the Nmmtelas Services; SBI representation\nFigure 6.3.1.3.3-2 presents a reference architecture for NMMtelas services, focusing on the representation of reference points. The figure illustrates the interconnected components, including the NMMtelas service provider, the NMMtelas service, and the reference points. These reference points are crucial for establishing connections and facilitating communication between different entities within the NMMtelas ecosystem. The architecture emphasizes the importance of efficient and secure communication channels, ensuring seamless service delivery and user experience.\nFigure 6.3.1.3.3-2: Reference Architecture for the Nmmtelas Services; reference point representation\nThe MMTel AS provides the following services to the DCS-C:\n-\tSubscription and notification of media event during an IMS session.\nIt should be noted that, the DCS-C could not know what subscribers each MMTel AS serve for the MMTel AS is selected by the S-CSCF and, there are two solutions:\n-\tThe DCS-C should subscribe to all the MMTel ASs in the network for the media event notification.\n-\tThe MMTel AS is locally configured for discovering the DCS-C serving specific subscribers.\n-\tMedia control during an IMS session, including SDP operations such as initiating, terminating and forwarding some media stream.\nEditor's note:\tThe lawful intercept solution of IMS data channel is FFS.\n\nEditor's note:\tHow the data channel interacts with IMS supplementary services is FFS.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.2\tProcedures",
                            "text_content": "The DCS-C, DCS-M and MMTel AS should register their services to the NRF before providing services to the consumers, through the NF service registration procedure specified in clause 4.17.1 of TS 23.502 [3].\nBootstrap data channels are established between the UE and the network. In an IMS session associated with data channel, the originating network and the terminating network will establish bootstrap data channels with the originating UE and the terminating UE respectively, if the networks and the UEs all support data channel. There are different data channel media descriptions in the SDP offer/answer, according to clause 6.2.10.1 of TS 26.114 [6].\nIn P2P scenarios, application data channels are established between the UEs. For example, Sharing Screen is implemented through the application data channel between the originating UE and the terminating UE. In this case, a separate data channel media description is used in the SDP offer/answer for the application data channel.\nIn A2P/P2A scenarios, application data channels are established between the UE and the DCS-M. For example, Multimedia CLIP (Calling Line Identification Presentation) is implemented through the application data channel between the DCS-M in the originating network and the terminating UE. In this case, the application data channel could use the same data channel media description with that of the bootstrap data channel between the DCS-M in the originating network and the terminating UE, if the two kinds of data channels use the same bear/QCI Flow. Otherwise, a separate data channel media description is used in the SDP offer/answer for the application data channel.\nThere are two types establishing procedures of bootstrap data channel shown below.\n-\tUE-initiated bootstrap data channel establishment.\n-\tNetwork-initiated bootstrap data channel establishment.\nNOTE 1:\tIt is assumed in this clause that all the service producers (MMTel AS, DCS-C and DCS-M) have registered their services to the NRF and the DCS-C has subscribed to the MMTel AS.\nNOTE 2:\tThe NF discovery and selection is not shown in the following procedures.\nFigure 6.3.2.3.1-1 and Figure 6.3.2.3.1-2 show the procedure of UE-initiated bootstrap data channel establishment between network A and the UEs. It's assumed that both UE A and UE B support data channel capability.\nFigure 6.3.2.3.1-1 illustrates the UE-initiated bootstrap data channel establishment procedure, which involves the initial setup of a data connection between the user equipment (UE) and the network. The figure shows the process of synchronization, where the UE and the network agree on a common time source. This is crucial for accurate signal transmission and reception. The figure also depicts the exchange of authentication and key agreement (AKA) messages between the UE and the network, ensuring secure communication. The establishment of the data channel is a multi-step process that includes channel access, channel binding, and channel state information (CSI) feedback, all of which are essential for maintaining a reliable and efficient connection.\nFigure 6.3.2.3.1-1: UE-initiated bootstrap data channel establishment procedure\n1.\tUE A sends an INVITE request to its local IMS network with an initial SDP offer, to initiates an IMS session to UE B.\n2.\tThe MMTel AS A sends a Media Event Notification to the DCS-C A, indicating the channel media descriptions with the IMS session. The DCS-C A sends a Media Control request to the MMTel AS A, indicating how to process the SDP. The MMTel AS A sends an DC Resource Allocation request to the DCS-M A, requiring the DCS-M A to allocate data channel resources for the bootstrap data channel media stream between UE A and the DCS-M A and the bootstrap data channel media stream between the DCS-M A and UE B.\n3.\tThe MMTel AS A updates the SDP offer in the INVITE request, based on the Media Control request from the DCS-C A, and sends the INVITE request message to the terminating network.\n4.\tUE B sends an 18X response to its local IMS network with an initial SDP answer.\n5.\tThe P-CSCF B executes QoS procedure to establish the dedicated bearer/QCI Flow for the audio/video/data channel media based on the SDP answer in the 18X response.\n6.\tThe MMTel AS B updates the initial SDP answer in the 18X response, and sends it to the remote network.\n7.\tWhen the MMTel AS A receives the 18X response, it sends a Data Channel Resource Update request to the DCS-M A, requiring the DCS-M A to update data channel resources for the bootstrap data channel media stream between the DCS-M B and UE B. The MMTel AS A sends a Media Update Notification message to the DCS-C A, reporting the data channel media negotiation result.\n8.\tThe MMTel AS A updates the initial SDP answer in the 18X response, and sends it to the S-CSCF A. This 18X response is sent to the UE A by the S-CSCF.\n9.\tThe P-CSCF A executes QoS procedure to establish the dedicated bearer/QCI Flow for the audio/video/data channel media based on the SDP answer in the 183 response.\n10.\tThe subsequent is the PRACK/PRACK 200 procedure.\n11.\tAfter the precondition procedure is completed in the network A, UE A sends an UPDATE request with a new SDP offer for media renegotiation.\n12-13.\tUE A initiates SCTP association and DTLS connection establishment procedures to establish the bootstrap data channels with the DCS-M A and the DCS-M B respectively. UE A retrieves the bootstrap application and the data channel application list from the DCS-C A and the DCS-C B respectively.\n14.\tAfter the precondition procedure is completed in the network B, UE B returns a 200 OK with a new SDP answer for the UPDATE request from UE A.\n15-16.\tUE B initiates SCTP association and DTLS connection establishment procedures to establish the bootstrap data channels with the DCS-M B and the DCS-M A respectively. UE B retrieves the bootstrap application and the data channel application list from the DCS-C B and the DCS-C A respectively.\n17.\tThe subsequent procedure of the session is continued.\nThe network-initiated bootstrap data channel establishment procedure is used when the originating UE does not support data channel. Therefore, there is no data channel media description in the initial SDP offer generated by the originating UE. If the originating network or the terminating network supports data channel, it will add data channel media description(s) into the SDP offer to negotiate with the terminating UE.\nThe network-initiated bootstrap data channel establishment procedure has few difference with the UE-initiated bootstrap data channel establishment procedure, and details are not described herein again.\nThere are two types establishing procedures of application data channel shown below.\n-\tEstablishing application data channel between UEs.\n-\tEstablishing application data channel between the UE and the network.\nNOTE 1:\tIt's assumed in this clause that all the service producers (MMTel AS, DCS-C and DCS-M) have registered their services to the NRF and the DCS-C has subscribed to the MMTel AS.\nNOTE 2:\tThe NF discovery and selection is not shown in the following procedures.\nFigure 6.3.2.4.1-1 shows the establishment procedure of application data channel between UEs after the IMS session between UE A and UE B has been connected. It's assumed that both UE A and UE B, and their local networks support data channel capability.\nFigure 6.3.2.4.1-1 illustrates the establishment procedure of an application data channel between User Equipment (UEs) in a telecommunication network. The figure depicts the process of how UEs connect to the network and establish a data channel for communication. The figure shows the interaction between the UEs, the Base Transceiver Station (BTS), and the Core Network (CN). The BTS is responsible for receiving and transmitting signals from the UEs, while the CN handles routing and data processing. The figure highlights the importance of efficient data channel establishment in ensuring smooth communication between UEs and the network.\nFigure 6.3.2.4.1-1: Establishment procedure of application data channel between UEs\n1.\tUE A sends a re-INVITE request to the P-CSCF A with an updated SDP offer in which a data channel media description for an application data channel is added.\n2.\tThe MMTel AS A sends a Media Event Notification to the DCS-C A with the information of this new data channel media description. The DCS-C A sends a Media Control request to the MMTel AS A, indicating how to process the SDP.\n3.\tThe MMTel AS A updates the SDP offer based on the Media Control request from the DCS-C A, and sends the re-INVITE request message to the S-CSCF A with the updated SDP offer. This re-INVITE request is sent to the MMTel AS B.\n4.\tThe MMTel AS B sends a Media Event Notification message to the DCS-C B. The DCS-C B sends a Media Control request to the MMTel AS B, indicating how to process the SDP.\n5.\tThe MMTel AS B updates the SDP offer in the re-INVITE request, based on the Media Control request from the DCS-C B, and sends the re-INVITE request message to the S-CSCF B with the updated SDP offer. This re-INVITE request is sent to UE B.\n6.\tUE B sends a 200 OK response to its local network with a SDP answer.\n7.\tThe P-CSCF B executes QoS procedure to establish the dedicated bearer/QCI Flow for the application data channel media based on the SDP answer in this 200 OK response.\n8.\tThis 200 OK response is sent to UE B.\n9.\tThe P-CSCF A executes QoS procedure to establish the dedicated bearer/QCI Flow for the application data channel media based on the SDP answer in this 200 OK response.\n10.\tUE A initiates SCTP association and DTLS connection establishment procedures to establish the application data channel with UE B.\n11.\tThe subsequent is the ACK for 200 OK procedure.\nFigure 6.3.2.4.2-1 shows the establishment procedure of application data channel between UE B and the network A when the IMS session between UE A and UE B is not connected yet. It's assumed that both UE A and UE B, and their local networks support data channel capability.\nFigure 6.3.2.4.2-1 illustrates the establishment procedure of an application data channel between a user equipment (UE) and a network. The figure depicts the process in three main steps: the UE sends a registration request, the network responds with a registration acknowledgment, and finally, the UE and the network agree on a shared secret key for secure communication. The figure highlights the importance of these steps in establishing a reliable and secure connection for data transmission.\nFigure 6.3.2.4.2-1: Establishment procedure of application data channel between the UE and the network\n1.\tUE B sends an UPDATE request with an updated SDP offer, in which an application data channel media stream is added. This UPDATE request is sent to the MMTel AS B.\n2.\tThe MMTel AS B sends a Media Event Notification to the DCS-C A. The DCS-C A sends a Media Control request to the MMTel AS A, requiring the MMTel AS A to terminate this application data channel media stream. The MMTel AS A sends a DC Resource Allocation request to the DCS-M A, requiring the DCS-M A to allocate data channel resources for the application data channel media stream between the DCS-M A and UE B.\n3.\tThen the MMTel AS B updates the SDP offer and sends the UPDATE request to the S-CSCF A with the SDP offer. Then this UPDATE request is sent to UE A.\n4.\tUE A returns a 200 OK response. This response is sent to UE B.\n5.\tThe P-CSCF B executes QoS procedure to update the dedicated bearer/QCI Flow for the data channel media based on the SDP answer in the 200 OK response.\n6.\tThe application data channel between the DCS-M A and UE B is established.\nIn the case of data channel associated with an IMS audio/video session, all the data channels should be terminated with the IMS session.\nIn the case of abnormal scenarios, such as failing to establish bearer/QCI Flow for data channel, audio/video media negotiation failure and so on, the MMTel AS should terminate all the data channels.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.3\tImpacts on existing nodes and functionality",
                            "text_content": "This solution has some requirements on the existing IMS nodes below:\nMMTel AS:\n-\tSupport service registration with the NRF and service discovery via the NRF.\n-\tProvides the DCS-C media event subscription and notification service.\n-\tProvides the DCS-C media control service, including initiation and termination of bootstrap data channels and application data channels.\n-\tSupports IMS data channel capability registration of the UE, as specified in clause 5.4.1.7 of TS 24.229 [8].\n-\tSupports data channel media negotiation according to the requests from the DCS-C.\nP-CSCF/IMS-AGW:\n-\tSupports for data channel QoS handling between IMS Core and Packet Core.\nIBCF/TrGW:\n-\tSupports data channel media feature tag and data channel media description at the II-NNI, as specified in TS 29.165 [9].\nPCRF/PCF:\n-\tSupports for data channel QoS handling between IMS Core and Packet Core.\nThis solution has some impacts on the existing interfaces below:\nNnrf:\n-\tNnrf_NFManagement service need to be extended to support service registration of DCS-C, DCS-M and MMTel AS.\n-\tNnrf_NFDiscovery service need to be extended to support service discovery/selection of DCS-C, DCS-M and MMTel AS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.4\tSolution #4: IMS Data Channel Capabilities Discovery",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.4.1\tDescription",
                            "text_content": "This solution addresses Key Issue #1 \"Enhancement to support Data Channel usage in IMS network\" and focuses on the third bullet, that is, how support of Data Channel capabilities can be discovered by the network and UE.\nIMS data channel capabilities discovery includes two aspects:\n-\tThe network discovers the data channel capability of the UE, including the local UE and the remote UE.\n-\tThe UE discovers the data channel capability of the network, including the local network and the remote network.\nThe basic principles of how the network discovers the data channel capability of the UE are as follows.\n-\tThe home network discovers the data channel capability of its UE during IMS REGISTER procedure defined in clause 5.1.1 of TS 24.229 [8].\n-\tThe network discovers the data channel capability of the remote UE during initial INVITE procedure defined in clause 5.1.3.1 and clause 5.1.4.1 of TS 24.229 [8].\nAccording to clause 5.1.1 of TS 24.229 [8], a DCMTSI client shall include a +sip.app-subtype media feature tag, as specified by IETF RFC 5688 [10], with a value of \"webrtc-datachannel\" in the Contact header field of a REGISTER request to indicate to its local network that it supports IMS data channel capability.\nIt should be noted that, the MMTel AS also need to discover whether the UE supports data channel capability in the case of data channel associated with an IMS voice/video call. According to clause 5.4.1.7 of TS 24.229 [8], the S-CSCF should include the contents of the incoming REGISTER request or the contents of the 200 (OK) response to the incoming REGISTER request in the body of the third-party REGISTER, if there is Filter Criteria indicating the need. That is, the MMTel AS could discover the data channel capability of the UE by inspecting a +sip.app-subtype media feature tag with a value of \"webrtc-datachannel\" in the Contact header field of user-initiated REGISTER request contained in the body of the third-party REGISTER request received from the S-CSCF.\nAccording to clause 5.1.3.1 of TS 24.229 [8], when the local UE originates an initial INVITE request, it shall include a +sip.app-subtype media feature tag, as specified by RFC 5688 [10], with a value of \"webrtc-datachannel\" in the Contact header of the INVITE request, to indicate to the remote network that it supports IMS data channel capability during this IMS session.\nAccording to clause 5.1.4.1 of TS 24.229 [8], when the local UE terminates an initial INVITE request, it shall include a +sip.app-subtype media feature tag, as specified by RFC 5688 [10], with a value of \"webrtc-datachannel\" in the Contact header of the 18X and 200 response to the INVITE request, to indicate to the remote network that it supports IMS data channel capability during this IMS session.\nIt is suggested that the mechanism defined in IETF RFC 6809 [11] is applied for the UE to discover the data channel capability of its home network. That is, the S-CSCF in its home network includes a Feature-Caps header field, with the \"+g.3gpp.webrtc-datachannel\" header field parameter in the 200 OK response during IMS registration procedure defined in clause 5.1.1 of TS 24.229 [8], if the home network supports IMS data channel capability.\nAfter the initial registration if the network starts supporting IMS DC then S-CSCF shall add Feature-Caps header with value set to \"+g.3gpp.webrtc-datachannel\" in 200 OK of any subsequent registration request it receives from the UE.\nEditor's note:\tThis feature-capability indicator \"+g.3gpp.webrtc-datachannel\", is to be registered with IANA.\nIn roaming scenario, the HPLMN should ensure that the requested QoS sent to a VPLMN is within the limits of the roaming agreement. Therefore, if the S-CSCF knows that the VPLMN does not support IMS data channel capability based on local configuration according to the roaming agreement with the VPLMN, it should not include a Feature-Caps header field, with the \"+g.3gpp.webrtc-datachannel\" header field parameter in the 200 OK response during IMS registration procedure.\nIf the local UE is the originating party, it may discover that the remote end does not support IMS data channel if the port number in the data channel media stream of the SDP answer it received is set to zero, as specified in clause 6 of IETF RFC 3264 [12].\nIt's important that the basic IMS voice/video session should not be impacted by the failure of data channel media negotiation. To avoid this case, it's recommended that:\n-\tif the home network does not support IMS data channel, the UE should not include data channel media description in the SDP offer.\n-\tFor already registered UE if the IMS DC capability of network was not provided then S-CSCF shall add a Feature-Caps header field with a \"+g.3gpp.webrtc-datachannel\" header field parameter in the 200 OK of any subsequent registration request it receives from the UE.\n-\tif the remote network does not support IMS data channel and returns a 488 (Not Acceptable Here) response with a Warning header indicating that it does not support data channel media description, as specified in IETF RFC 3261 [13], the originating UE in the local network should remove all the data channel media descriptions in the SDP offer and retry sending the updated request, as specified in clause 6.1.2 of TS 24.229 [8].\n-\tif the remote UE does not support IMS data channel, the MMTel AS in the remote network should remove all the data channel media descriptions in the SDP offer contained in any request message to the remote UE.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.4.2\tProcedures",
                            "text_content": "There is no update to the existing procedures.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.4.3\tImpacts on existing nodes and functionality",
                            "text_content": "The requirements on the S-CSCF are as follows:\n-\tIf the network supports data channel media, the S-CSCF should include a Feature-Caps header field with a \"+g.3gpp.webrtc-datachannel\" header field parameter in the 200 OK response during SIP registration procedure, to indicate the UE that its home network supports data channel capability.\n-\tFor already registered UE if the IMS DC capability of network was not provided then S-CSCF shall add a Feature-Caps header field with a \"+g.3gpp.webrtc-datachannel\" header field parameter in the 200 OK of any subsequent registration request it receives from the UE.\nThe requirements on the MMTel AS are as follows:\n-\tThe MMTel AS should discover the data channel capability of the served UE by a +sip.app-subtype media feature tag with a value of \"webrtc-datachannel\" in the Contact header field of user-initiated REGISTER request contained in the body of the third-party REGISTER request received from the S-CSCF.\nThe requirements on the UE are as follows:\n-\tThe UE discovers the data channel capability of its home network by detecting a Feature-Caps header field with a \"+g.3gpp.webrtc-datachannel\" header field parameter in the 200 OK response from the S-CSCF during SIP registration procedure.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.5\tSolution #5:  Negotiation and report of IMS Data Channel capabilities",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.5.1\tDescription",
                            "text_content": "This solution aims to address how support of Data Channel capabilities can be discovered by the network and UE in key issue #1: Enhancement to support Data Channel usage in IMS network.\nIMS Data Channel services are provided based on supporting of IMS Data Channel related capabilities by DCMTSI UE and IMS network.\nThe IMS Data Channel capabilities of the DCMTSI UE and IMS network needs to be discovered and negotiated, in order to determine whether IMS Data Channel is allowed to be provided and what DC services can be provided:\n-\tWhether DCMTSI UE or IMS network supports IMS Data Channel related capabilities determines whether IMS Data Channel Server needs to be involved in IMS call session and whether IMS Data Channel is allowed to be established during IMS call session;\n-\tIf IMS Data Channel is allowed to be provided, the detailed capabilities related to IMS Data Channel needs to be reported to IMS network, to determine what DC application can be supported and downloaded to the DCMTSI UE or to determine which functionalities within an application is enabled or disabled. IMS data channel capabilities are the capabilities that are required by DC applications for data processing, e.g. media processing, AI, location. These capabilities are essential for IMS network to decide what application can be provided and for the UE to use specific applications, e.g. if the UE has no AR capability, AR assistance will not be able to use hence IMS network will not download AR related applications or disable link to AR assistance service when downloading a HTML index page to the UE, so that the user will not click the AR assistance but failed to use it.\nEditor's note:\tWhether the detailed capabilities is needed is for further study and evaluation.\nData Channel services are provided by operators on top of MMTel services, so the operators may need to control the services that can be provided to the UE, in the same manner with supplementary services or value-added services. In this assumption, providing IMS Data Channel services may need service information of IMS data channel from the service profile within the IMS subscription. Only UEs that subscribes IMS Data Channel is allowed to use IMS Data Channel services. IMS Data Channel subscription may include whether and what IMS Data Channel related capabilities are allowed in a registration period. Based on operator's policy, Data Channel services may also be provided only based on UE support of DC capability.\nIf the IMS network decides to provide IMS data channel to the UE, it needs to indicate support of IMS data channel to the UE.\nA DCMTSI UE includes its support of IMS Data Channel in Register request message when initiating IMS registration procedure. A feature tag has been defined in TS 26.114 [6] as the indication of supporting IMS Data Channel, which can be reused and included.\nWhen the S-CSCF receives a Register request indicating the UE support IMS Data Channel, after successful authentication, it determines if the UE is allowed to use IMS Data Channel within this registration period, based on whether the UE and IMS network supports IMS Data Channel. The S-CSCF includes an indication of whether the UE is allowed to use IMS Data Channel in the 200 OK response for Registration request. If DC subscription is required, S-CSCF may also consider the service profile received from HSS when determining whether the UE is allowed to use IMS Data Channel.\nIf the UE is allowed to use IMS Data Channel services, the S-CSCF includes the indication of the UE is allowed to use IMS Data Channel in third party registration request to the AS.\nAs described in 6.5.1.1, IMS Data Channel capabilities of DCMTSI UE are used for Data Channel Server to determine what DC application can be supported and downloaded to the DCMTSI UE or to determine which functionalities within an application is enabled or disabled. One way to report the capabilities from the DCMTSI UE to Data Channel Server is via IMS registration procedure.\nA DCMTSI UE may include the capability list with its detailed capabilities related to IMS Data Channel in Register request message if available. The capabilities are defined in 6.5.1.5. If the UE is allowed to use IMS Data Channel services, the S-CSCF includes the indication of the UE is allowed to use IMS Data Channel and the capability list the UE sent in third party registration request to the AS.\nWhen the AS receives third party registration request including the indication of the UE is allowed to use IMS Data Channel and IMS Data Channel capability list information, it invokes service of Data Channel Server to forward the IMS Data Channel capability list information to Data Channel Server through the service based interface between AS and Data Channel Server.\nIn this solution, the SIP and IMS are only used to transport UE DC capability list information to Data Channel Server. The IMS entities, including S-CSCF and IMS AS do not recognize and store this information.\nEditor's note:\tThe service definition is FFS after the architecture is finalized.\nBesides solution in clause 6.5.1.3, an alternative solution to report the capabilities from the DCMTSI UE to Data Channel Server is via Data Channel application request.\nAfter the bootstrap data channel is established, the UE sends Data Channel application request to Data Channel Server through the bootstrap data channel to retrieve the \"data channel application\" as specified in [6]. If the UE has its IMS Data Channel capability list, the UE includes the information in the request message.\nIn this solution, the UE DC IMS Data Channel capability list is transported via bootstrap data channel and is transparent to IMS network,\nTo ensure the interoperability between DCMTSI UE and Data Channel Server, the detailed Data Channel capabilities of the UE may need to be defined within 3GPP specifications, as proposed in clause 6.5.1.6.\nBesides solution in clause 6.5.1.3 and 6.5.1.4, an alternative solution to report the capabilities from the DCMTSI UE to Data Channel Server is via bootstrap data channel request.\nWhen the UE sends the bootstrap data channel request to Data Channel Server, if the UE has its IMS Data Channel capability list, the UE includes the information in the request message. The IMS Data Channel capability list is included in the SIP Invite/re-Invite message. And the opposite UE can also send the IMS Data Channel capability list to the Data Channel Server if it has.\nIf both UEs use the same Data Channel Server, and the Data Channel Server gets IMS Data Channel capability list of each UEs, the Data Channel Server can generate the Application list which is supported by both UEs, which can avoid the failure of the application data channel procedure.\nTo ensure the interoperability between DCMTSI UE and Data Channel Server, the detailed Data Channel capabilities of the UE may need to be defined within 3GPP specifications, as proposed in clause 6.5.1.6.\nThe capabilities related to IMS Data Channel may include:\n-\tvideo codec;\n-\tAI capability;\n-\tpositioning capability;\n-\tAR communication capability.\nEditor's note:\tWhether other capabilities are needed is FFS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.5.2\tProcedures",
                            "text_content": "The figure 6.5.2-1 depicts the procedures how the IMS network and DCMTSI UE discovers and negotiates IMS Data Channel capability, and how the IMS Data Channel capability information is reported to Data Channel Server.\n\nFigure 6 illustrates the process of IMS data channel capability discovery, negotiation, and reporting in a telecommunication system. The figure showcases the interaction between the home subscriber server (HSS), service control point (SCP), and the media gateway controller (MGC). The HSS and SCP exchange information regarding the data channel capabilities, leading to the negotiation of the appropriate parameters. Once agreed upon, the MGC and the home subscriber equipment (HSE) establish the data channel, ensuring seamless communication. The figure emphasizes the importance of this procedure in maintaining efficient and reliable data transmission within the IMS framework.\nFigure 6.5.2-1: Procedure of IMS Data Channel capability discovery, negotiation and report\nThe procedure includes the following steps:\n1.\tThe DCMTSI UE initiates IMS registration and includes its support of IMS Data Channel. The UE optionally includes the capability list with all detailed capabilities related to IMS Data Channel in Register request message if option 1 in clause 6.5.1.3 is used.\n2.\tP-CSCF forwards Register request message to S-CSCF.\n3.\tIMS registration procedure is as specified in current specifications.\n4.\tAfter successful authentication, if the operator requires the UE to subscribe DC service, S-CSCF may get service information from the service profile in HSS.\n5.\tS-CSCF determines if the UE is allowed to use IMS Data Channel within this registration period, based on IMS Data Channel capabilities of the UE and IMS network and optionally from the service profile retrieved from HSS.\n6.\tS-CSCF includes the indication of supporting IMS DC to P-CSCF in 200 OK response.\n7.\tP-CSCF forwards 200 OK response to the UE. The UE stores and uses the indication of supporting IMS DC.\n8.\tThe S-CSCF initiates third party registration and includes the indication of the UE is allowed to use IMS Data Channel in third party registration request to the AS.\n9.\tIf option 1 in clause 6.5.1.3 is used, the AS invokes service of Data Channel Server to forward the indication of the UE is allowed to use IMS Data Channel and the IMS Data Channel capabilities of the UE retrieved from Register request to Data Channel Server through the service based interface between AS and Data Channel Server.\nIf option 2 in clause 6.5.1.4 is used, this step is skipped.\n10.\tThe bootstrap data channel is established.\nIf option 3 in clause 6.5.1.5 is used, the IMS Data Channel capability list is included in the SIP Invite/re-Invite message which is used to request to establish the bootstrap data channel. And if the Data Channel Server receives the IMS Data Channel capability list from the opposite UE in the response message, the Data Channel Server can generate the Application list which is supported by both UEs. The application list is sent to both UEs after the bootstrap data channel is established.\n11.\tIf option 2 in clause 6.5.1.4 is used, when the UE sends Data Channel application request to Data Channel Server through the bootstrap data channel to retrieve data channel application, it may include its IMS Data Channel capability list in the request message, which is transparent to IMS network.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.5.3\tImpacts on existing nodes and functionality",
                            "text_content": "UE impacts:\n-\tThe UE includes its support of IMS Data Channel in Register request;\n-\tstores and uses the indication of supporting IMS DC received in 200 OK response.\n-\tThe UE may include its IMS Data Channel capability list in Register request (when option 1 in clause 6.5.1.3 is used) or in the request message to retrieve data channel application (when option 2 in clause 6.5.1.4 is used) or in the request message to establish the bootstrap data channel (when option 3 in clause 6.5.1.5 is used);\nS-CSCF impacts:\n-\tdetermines if the UE is allowed to use IMS Data Channel and which capabilities are allowed to use within this registration period, based on service profile received from HSS and IMS Data Channel capabilities of the UE and IMS network;\n-\tsends the indication of supporting IMS DC and allowed IMS DC capability list in 200 OK response;\n-\tincludes the indication of whether the UE is allowed to use IMS Data Channel and the capability list the UE is allowed to use in third party registration request.\nIMS AS impacts:\n-\tinvokes Data Channel Server service to forward the received information to Data Channel Server through the service based interface between AS and Data Channel Server (when option in clause 6.5.1.3 is used).\nData Channel Server impacts:\n-\tgenerates the application list base on both UE's IMS Data Channel capability list (when option 3 in clause 6.5.1.5 is used).\nHSS:\n-\tHolds the DC service profile and convey it to S-CSCF.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.6\tSolution #6: Enhancement to support Data Channel usage in IMS network",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.6.1\tDescription",
                            "text_content": "This solution is proposed to address WT#5.1: Key Issue on enhancement to support Data Channel usage in IMS networks.\n1)\tThe Data Channel Server functionalities should be separated as Data Channel control function and Data Channel media function to facilitate the Data Channel media utilization.\n2)\tData Channel control function can be defined as DCS (Data Channel Server)/DCS-C(Data Channel Server-Control) by reusing existing definition in TS 26.114, or DCSF(Data Channel Signalling Function) to distinguish with DCS. Data Channel Media function is the new function which has not been defined in TS 26.114, hence it can be defined as DCM (Data Channel Media)/DCS-M (Data Channel Server-Media), or DCMF (Data Channel Media Function).\nEditor's note:\tIn this document DCSF and DCMF will be used at this time and the naming can be considered as FFS.\n3)\tHTTP/Restful should be applied on the interface between Data Channel Control function(DCSF) and Data Channel Media function(DCMF).\n4)\tThe Data Channel Application Repository(DCAR) can be the data base component inside DCSF.\nThe network architecture for data channel and major functionalities of IMS data channel is illustrated in clause 6.6.2 and the procedure for data channel set up is illustrated in clause 6.6.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.6.2\tNetwork Architecture and Functionalities of IMS Data Channel",
                            "text_content": "Figure 6.2-1 illustrates the IMS (IP Multimedia Subsystem) data channel network architecture, showcasing the various components involved in the communication process. The figure depicts the core elements of the IMS architecture, including the home subscriber server (HSS), service control point (SCP), and multimedia application server (MASP). The HSS is responsible for managing subscriber data, while the SCP handles service control and policy enforcement. The MASP, on the other hand, is in charge of multimedia application processing. The figure also highlights the role of the media gateway controller (MGC) in managing the media gateway functions and the home location register (HLR) for subscriber identity management. The network architecture is designed to support a wide range of multimedia services, ensuring seamless communication and a high-quality user experience.\nFigure 6.6.2-1: IMS Data Channel Network Architecture\nThe IMS data channel network architecture provides the definition of IMS data channel interfaces and network functions.\nData Channel Signalling Function(DCSF/DCS):\n-\tImplements data channel control logic through DC control API\n-\tInitiates the bootstrap and application data channel control procedures\n-\tTerminates the bootstrap and application data channel control procedures\n-\tHandles the Application confliction and priority decision among different data channel applications\nData Channel Application Repository function:\n-\tSupports data channel applications storage which can be internally inside Data Channel Signalling Function or dedicated element outside of Data Channel Signalling Function.\nData Channel Media Function(DCMF):\n-\tExecutes IMS data channel media(bootstrap or application data channel) creation and closure\n-\tConnects with IMS network media functions(IMS-AGW) and 3rd party data channel media functions as protocol or content gateway\nIMS AS:\n-\tInterworks with Data Channel Signalling Function on Data Channel call event routing and Data Channel control procedure\n-\tInteracts with Data Channel Media Function on data channel media control\nNetwork interface:\n-\tIF1: the interface between Data Channel Signalling Function and Data Channel Media Function for data channel media content transmission.\n-\tIF2: the interface between Data Channel Signalling Function and Operator Application Server for Data Channel control and Application information communication.\n-\tIF3: the interface between NRF and IMS AS for data channel media function selection.\n-\tIF4: the interface between Data Channel Media Function and other data channel related media resources\n-\tIF5: the interface between Data Channel Signalling Function and IMS AS for data channel control information interaction.\n-\tIF6: the interface between IMS AS and the Data Channel Signalling Function is used for data channel call event communication.\n-\tIF7: the interface between Data Channel Signalling Function and NEF for data channel application and services logic controlling.\n-\tIF8: the interface between Data Channel Signalling Function and NEF data channel media content transmission.\n-\tIF9/Mb: the interface between Data Channel Media Function and IMS-AGW for data channel protocol or media content transmission\n-\tIF10: the interface between Data Channel Media Function and 3rd party media function for data channel protocol or 3rd party media content transmission, or integration with local data channel media\n-\tSh/N71: the interface between Data Channel Signalling Function and HSS/UDM for fetching Data Channel user subscription data;\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.6.3\tProcedure",
                            "text_content": "The Data Channel initiates and terminates procedures should cover the bootstrap and application data channel procedures.\nFigure 6 illustrates the process of a User Equipment (UE) initiating a Bootstrap Data Channel Establishment (BDC) in a telecommunication network. The figure depicts the UE sending a Bootstrap Request (BR) to the Network Equipment (NE) through a Control Channel (CC). The NE then responds with a Bootstrap Response (BR) through the CC. This process is crucial for establishing a secure and reliable connection between the UE and the network. The figure highlights the role of the UE, NE, and CC in this process, emphasizing the importance of efficient and secure communication in modern telecommunication networks.\nFigure 6.6.3.1-1: UE Initiated Bootstrap Data Channel Establishment\nProcedures for UE initiated bootstrap data Channel establishment is as follows:\n1~3.\tUE#1 sends the SIP INVITE request with an initial SDP to AS, through originating network P-CSCF and S-CSCF. The initial SDP contains the bootstrap data channel establishment requirement which is indicated by stream ID(dcmap value:0/100), stream Label, etc. In this example procedure, SDP contains both offers for stream ID 0 and 100.\n4.\tAfter receiving the SIP INVITE request, AS validates the Data Channel media description information and/or user subscription data to determine whether the DC Call request should be sent to DCSF.\nIf the DC call request needs to be sent to DCSF, the AS selects a DCSF for this session based on local configuration or discovers and selects a DCSF instance via NRF. The solution of discovery and selection of DCSF defined in solution #17 applies.\n5.\tAS sends the DC call request to the DCSF which is selected in Step. 4.\nNOTE:\tThe detailed interaction between AS and the DCSF is specified in solution #20.\n6.\tAfter receiving the DC call request, the DCSF determines the policy about how to process the bootstrap data channel establishment requirement based on the related parameters in the DC call request and/or operator strategy.\nDCSF sends data channel control request to AS with the policy of bootstrap data channel establishment, and it mainly includes the indications as follows:\n-\tTerminates the bootstrap data channel establishment which takes the originating network DCMF as target;\n-\tForwards or initiates the bootstrap data channel establishment which takes the terminating network DCMF or UE as target.\nThe DCSF also includes the media point information, i.e. IP address/port of DCSF for routing of further application request and application between DCSF and DCMF via interface IF1.\n7.\tThe AS selects a DCMF based on local configuration or discovers and selects a DCMF instance via NRF. The solution of discovery and selection of DCMF defined in solution #17 applies. Then the AS instructsDCMF on Data Channel establishment and data channel media resource reservation based on the DC media information received from DCSF. The media resource for interface IF1 to DCSF is also reserved. And DCMF responds after successful media resource reservation.\n8.\tAS sends an data channel control response to DCSF to indicate the media resource reservation result.\n9~11.\tAS sends the INVITE which includes the updated SDP offer to originating S-CSCF and then to remote network side/UE#2. The SDP offer for bootstrap data channel to UE#2 may also be included.\n12.\tSDP negotiation proceeds at terminating network side.\n13-18.\tUE#2 returns a 183 response with SDP answer to originating network P-CSCF. The AS modifies SDP answer for bootstrap data channels to UE#1 in 183 response which may include local bootstrap data channel to UE#1 or remote bootstrap data channel to UE#1. The AS modifies the media resources on originating DCMF and reports to originating DCSF.\n19.\tThe originating network P-CSCF executes QoS procedure for bootstrap data channel media based on the SDP answer information from the 183 response.\n20.\tP-CSCF returns the 183 response to UE#1.\n21.\tThe PRACK and UPDATE negotiation between originating and terminating network.\n22~23.\tThe bootstrap data channels have been established between originating DCMF and UE#1/UE#2. The UEs send application request messages to DCMF via bootstrap data channel with its data channel capabilities. The DCMF forwards the message to received media point of DCSF. The DSCF downloads the proper data channel applications to UE#1 and UE#2 based on their data channel capabilities.\n24.\tAlternatively, the bootstrap data channels have been established between terminating DCMF and UE#1/UE#2. The data channel application is requested and downloaded to UE#1 and UE#2 from terminating DSCF.\n25.\tThe subsequent procedures continue.\nFigure 6 illustrates the process of a User Equipment (UE) initiating the establishment of an application data channel. The figure depicts the various stages of the process, starting with the UE sending a request to the network. The network then responds with a signaling message, which includes a random number for security purposes. The UE uses this random number to create a cryptographic key, which is then sent back to the network. Once the network verifies the key, it sends a confirmation message to the UE, signaling the successful establishment of the data channel. This process ensures secure and reliable communication between the UE and the network.\nFigure 6.6.3.2-1: UE Initiated Application Data Channel Establishment\nProcedures for UE initiated application data Channel establishment with originating network is as follows:\n1.\tThe precondition of application data channel establishment is bootstrap data channel has been established successfully.\n2~4.\tUE#1 sends the SIP re-INVITE request with an updated SDP to AS, through originating network P-CSCF and S-CSCF. The updated SDP contains the established bootstrap data channel information, as well as the application data channel establishment requirement which is indicated by stream ID(dcmap value:greater than or equal to 1000), stream Label, etc.\n5.\tAfter receiving the SIP re-INVITE request, AS validates the Data Channel media description information from DCSF and/or user subscription data to determine whether DC Call request should be sent to DCSF.\n6.\tAS sends the DC call request to the DCSF which is selected in Step. 5.\nNOTE:\tThe detailed interaction between AS and the DCSF is specified in solution #20.\n7.\tAfter receiving the DC call event notification, the DCSF determines how to process the application data channel establishment requirement based on the related parameters in the DC call event notification and/or Operator policy.\nDCSF sends data channel control request to AS with the indication on application data channel establishment. It mainly includes the actions as follows:\n1)\tTerminates the application data channel establishment which takes the originating network DCMF as target endpoint.\n2)\tForwards or initiates the application data channel establishment which takes the terminating network DCMF or UE#2 as target endpoint.\nNOTE:\tThe procedure in figure 6.6.3.2.1 traffic case meets with condition 1).\n8.\tThe AS selects a DCMF based on local configuration or discovers and selects a DCMF instance via NRF. The solution of discovery and selection of DCMF defined in solution #17 applies. Then AS instructs DCMF on Data Channel establishment and data channel media resource reservation based on the DC media information received from DCSF. And DCMF responds after successful media resource reservation.\n9.\tAS sends a data channel control response to DCSF to indicate the media resource reservation result.\n10~11.\tThe MMTel AS A updates the SDP offer and sends an re-INVITE request to the originating network S-CSCF, then this re-INVITE request is sent to terminating network and UE#2.\n12.\tSDP negotiation proceeds at terminating network side.\n13~14.\tUE#2 returns a 200 OK for re-INVITE to AS.\n15~16.\tAS negotiates with DCSF and DCMF for the SDP modification.\n17~18.\tAS constructs and sends the updated SDP with negotiated application data channel media to originating network S-CSCF and P-CSCF.\n19.\tThe originating network P-CSCF executes QoS procedure for application data channel media based on the SDP answer information from the 200 OK response.\n20.\tP-CSCF returns the 200 OK response to UE#1.\n21.\tThe application data channel has been established between UE#1 and originating network DCMF; and UE#1 can get application content from DCMF through this application data channel.\n22.\tThe subsequent procedures continue.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.6.4\tImpacts on Existing Functions and Services",
                            "text_content": "-\tExtensions of IMS existing function to support inter-working with IMS Data Channel functionalities:\n-\tI/S-CSCF: supports end user registration for data channel.\n-\tP-CSCF: supports for data channel media offer and answer negotiation.\n-\tIMS AS and NRF supports service based discovery and selection of DCSF and DCMF.\n-\tIMS AS supports call event report to DCSF via service based IF3 interface.\n-\tIMS AS supports DC media management to DCMF via service based IF5 interface.\n-\tExtensions of IMS subscription to support IMS Data Channel services.\n-\tExtensions of IMS MMTEL Services for the enhancement of IMS Data Channel capability.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.7\tSolution #7: Reference architecture to support Data Channel usage in IMS",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.7.1\tDescription",
                            "text_content": "In clause 6.2.10 of TS 26.114 [6], a Data Channel Workflow is defined including Data Channel Server and Data Channel Application Repository. However, this workflow does not define interfaces between the functions, nor does it show or define interfaces between Data Channel Server and existing IMS functions.\nThis solution defines architectural enhancements to IMS to support Data Channel functionality by re-using the Data Channel Workflow as mentioned above. The Data Channel functionality can be used to enable e.g. screen sharing, file transfer and co-editing during and in the context of an IMS call. The overall reference architecture to support Data Channel usage in IMS is depicted in Figure 6.7.1-1.\nFigure 6, 7, and 1-1 illustrate a reference architecture designed to support the usage of Data Channels in IMS (IP Multimedia Subsystem). The architecture showcases the integration of various components, including the Home Node B (HNB), Serving Gateway (S-GW), and User Premises Equipment (UPE). The figure emphasizes the role of the IMS core network in managing multimedia sessions and the importance of Quality of Service (QoS) management for a seamless user experience. The visual representation of the architecture highlights the interconnection and interaction between these components, emphasizing the complexity and functionality of the IMS system.\nFigure 6.7.1-1: Reference architecture to support Data Channel usage in IMS\nData Channel Server (DC Server or DCS) and Data Channel Application Repository are defined in TS 26.114 [6] while all other functions in Figure 6.7.1-1 are defined in TS 23.228 [5]. The DC Server is separated in a control and a media function called Data Channel (DC) control and Data Channel (DC) media functions, called DCS-C and DCS-M respectively.\nNOTE:\tThe DC control function can be standalone or collocated with other functions like MMTel AS. The DC media function can be standalone (i.e. dealing only with DC media) or collocated with other functions like MRF.\nUE A and UE B contain a DCMTSI client, which is a data channel capable MTSI client supporting data channel media, as defined in TS 26.114 [6]. The DCMTSI client uses SIP/SDP to indicate support for \"webrtc-datachannel\" and to establish a \"bootstrap\" data channel to the Data Channel Server. The \"bootstrap\" data channel is used to send the application (JavaScript files) from the Data Channel Server to the UE during an IMS call. The DC Server fetches the application from the Data Channel Application Repository via the DC2 interface which is out of scope of 3GPP. The DCMTSI client in the originating UE uses SIP/SDP to establish data channel media either to the DC media function or directly to the terminating UE via the IMS domain. This data channel transports media content either via the DC media function or directly between the two UEs.\nAfter negotiation of the bootstrap data channel with the DCS-C, UE can setup the bootstrap data channel connection with the DCS-M. Then UE can initiate a HTTP GET request on the root (\"/\") URL through the bootstrap data channel. The DCS-M sends the application list in the HTTP response to the UE.\nThe DC control function interacts with the IMS MMTel AS via DC1 interface. DC1 is used for Data Channel call control (establishing bootstrap and application data channels to UE A and UE B) and call event notifications. Call event triggers from MMTel AS to DC control function contain calling and called identities, UE capabilities and SDP related information. Notification from DC control function to MMTel AS via DC1 interface contains e.g. address/port information of the DC media function where the UE sends and receives data channel media, and optionally QoS data related to the media channel. DC1 is based on a HTTP Restful API protocol and follows SBI principles.\nAfter establishment of the DC application data channel the UE can send/receive DC Data via the application data channel directly to/from another UE or via the DCS-M. The DCS-M can use HTTP/S to provide DC Data (e.g., AR model data in case of an AR application) to the UE.\nThe IMS MMTel AS discovers and selects the DC control function either\n-\tusing SBI principles: DC control function registers at NRF with its capabilities (e.g. support of Data Channel capability) and MMTel AS discovers and selects DC control function via NRF; or\n-\tby static configuration: MMTel AS is configured with DC control function FQDN or IP address.\nThe DC control function discovers and selects DC media function either\n-\tusing SBI principles: DC media function registers at NRF with its capabilities (e.g. support of Data Channel capability) and DC control function discovers and selects DC media function via NRF; or\n-\tby static configuration: DC control function is configured with DC media function FQDN or IP address.\nImpacts to IMS interfaces Gm, Mw, ISC, Iq are determined during normative phase.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.7.2\tProcedures",
                            "text_content": "Figure 6.7.2.1-1 illustrates the process of a User Equipment (UE) initiating the establishment of a Bootstrap Data Channel. The figure depicts the initial stages of the process, starting with the UE sending a Bootstrap Request (BRQ) to the Network Equipment (NE). The NE responds with a Bootstrap Response (BRP), and the UE then sends a Bootstrap Data Request (BDR) to the UE's Home Agent (HA). The HA sends a Bootstrap Data Response (BDR) back to the UE, which then proceeds to establish the Bootstrap Data Channel. The figure highlights the importance of this process in ensuring reliable communication between the UE and the network.\nFigure 6.7.2.1-1: UE Initiated Bootstrap Data Channel establishment\nProcedure for UE initiated bootstrap data channel establishment is as follows:\n1.\tUE A sends the SIP INVITE request with an initial SDP to MMTel AS, through originating IMS network. The initial SDP contains audio/video, and the bootstrap data channel establishment requirements.\n2.\tAfter receiving the SIP INVITE request, MMTel AS validates the Data Channel media description information and user subscription data to determine whether to send the DC call event notification to DCS-C.\nIf the DC call event notification needs to be sent to DCS-C, the MMTel AS selects a DCS-C for this session based on local configuration or service discovery via NRF and selects a DCS-C instance. The DC call event notification includes calling/called party identify, bootstrap data channel information, and possibly other data.\n3~5.\tAfter receiving the DC call event notification, the DCS-C determines the policy how to process the bootstrap data channel establishment requirement based on the related parameters in the DC call event notification, service subscription, and/or operator policies. DCS-C sends DC media resource reservation request to DCS-M when bootstrap data channel is allowed. The DCS-M allocates media resources for the bootstrap data channel and sends them to DCS-C. DCS-C sends DC control request with reserved media resources to MMTel AS.\n6.\tMMTel AS sends the INVITE which includes the modified SDP offer to originating IMS network and then to the remote network. The SDP offer includes bootstrap data channel establishment information from DCS-M.\n7.\tUE B returns a 183 response with SDP answer. The SDP answer includes bootstrap data channel information from UE B.\n8.\tThe terminating IMS network executes QoS procedure for bootstrap data channel media based on the SDP answer information from the 183 Response.\n9~10.\tThe terminating IMS network returns the 183 Response to the originating IMS network and MMTel AS.\n11.\tAfter receiving the 183 Response, MMTel AS validates the Data Channel media description information and sends DC call event notification (e.g., calling and called party information) with bootstrap data channel establishment information to DCS-C.\n12~14.\tAfter receiving the DC call event notification, the DCS-C sends DC media resource update and reservation request to DCS-M. Then DCS-M updates the bootstrap data channel establishment information. The DCS-M allocates media resources for the bootstrap data channel to UE A and sends them to DCS-C. DCS-C sends DC control request with reserved media resources to MMTel AS.\n15.\tThe MMTel AS sends 183 response which includes the modified SDP answer to the originating IMS network and then to UE A. The SDP answer includes bootstrap data channel establishment information from DCS-M. The originating IMS network executes QoS procedure for bootstrap data channel media based on the SDP answer information from the 183 Response.\n16.\tThe PRACK and UPDATE negotiation between originating and terminating network occurs.\n17~22.\tThe UE A and UE B initiate bootstrap data channel establishment based on SDP negotiation. The bootstrap data channel is established between originating DCS-M and UE A and UE B. The UEs sends application request messages to DCS-M via bootstrap data channel to retrieve the application list. The DCS-M retrieves proper application list from Data Channel application repository via DCS-C and includes them in response to UE A and UE B.\nFigure 6.7.2.2-1 illustrates the establishment of an Application Data Channel between two User Equipment (UEs) in a peer-to-peer (P2P) communication scenario. The figure depicts the process of channel establishment, including the signaling and synchronization between the UEs, as well as the allocation of resources such as time slots and frequency bands. The figure highlights the role of the network infrastructure, including the base stations and the core network, in enabling seamless data exchange between the UEs. The visual representation emphasizes the importance of efficient resource management and synchronization in ensuring reliable and high-speed communication between connected devices.\nFigure 6.7.2.2-1: Application Data Channel establishment between UEs (P2P)\nProcedure for application data channel between UEs establishment is as follows:\n1.\tUE A sends the SIP re-INVITE request with an initial SDP to MMTel AS, through originating IMS network. The initial SDP contains audio/video, and the application data channel establishment requirements.\n2.\tAfter receiving the SIP re-INVITE request, MMTel AS validates the Data Channel media description information and user subscription data to determine whether to send the DC call event notification to DCS-C.\nIf the DC call event notification needs to be sent to DCS-C, the MMTel AS selects a DCS-C for this session based on local configuration or service discovery via NRF and selects a DCS-C instance. The DC call event notification includes calling/called party identity, application data channel information, and possibly other data.\n3. After receiving the DC call event notification, the DCS-C determines the policy how to process the application data channel establishment requirement based on the related parameters in the DC call event notification, service subscription, and/or operator policies. For the P2P application data channel, DCS media resources are not required. DCS-C sends DC control request without reserved media resources to MMTel AS.\n4.\tMMTel AS sends the INVITE which includes the original SDP offer to originating IMS network and then to the remote network.\n5.\tUE B returns 200 OK response with SDP answer. The SDP answer includes application data channel data from UE B.\n6~7.\tThe terminating IMS network executes QoS procedure for application data channel media based on the SDP answer information in the 200 OK response. The terminating IMS network returns the 200 OK response to the originating IMS network and MMTel AS.\n8.\tAfter receiving the 200 OK response, MMTel AS validates the Data Channel media description information and sends DC call event notification with application data channel establishment information to DCS-C.\n9~10.\tAfter receiving the DC call event notification, the DCS-C determines this is for P2P application data channel establishment, which doesn't require DCS media resources. DCS-C sends DC control request without reserved media resource to MMTel AS.\n11.\tThe MMTel AS sends 200 OK response which includes SDP answer to originating IMS network and then to UE A. The SDP answer includes application data channel establishment information from UE B. The originating IMS network executes QoS procedure for application data channel media based on the SDP answer information from the 200 OK response.\n12.\tThe ACK for 200 OK procedure is send.\n13~14.\tThe UE A and UE B initiate application data channel establishment based on SDP negotiation. UE A and UE B exchange application data via the application data channel.\nFigure 6.7.2.3-1 illustrates the establishment of an application data channel between a user equipment (UE) and a distributed antenna system (DAS) in a downlink (P2A) scenario. The figure depicts the process of data transmission, starting from the UE, passing through the DAS, and reaching the destination. Key components include the UE, DAS, and the data link layer (DLL) protocol. The figure highlights the role of the DAS in improving signal quality and coverage, particularly in areas with poor connectivity.\nFigure 6.7.2.3-1: Application Data Channel establishment between UE and DCS (P2A)\nProcedure for application data channel establishment between UE and DCS is as follows:\n1.\tUE A sends the SIP re-INVITE request with an initial SDP to MMTel AS, through originating IMS network. The initial SDP contains the application data channel establishment requirements.\n2.\tAfter receiving the SIP re-INVITE request, MMTel AS validates the Data Channel media description information and user subscription data to determine whether to send the DC call event notification to DCS-C.\nIf the DC call event notification needs to be sent to DCS-C, the MMTel AS selects a DCS-C for this session based on local configuration or service discovery via NRF and selects a DCS-C instance. The DC call event notification includes calling/called party identity, application data channel information, and possibly other data.\n3~5.\tAfter receiving the DC call event notification, the DCS-C determines the policy how to process the application data channel establishment requirement based on the related parameters in the DC call event notification, service subscription, and/or operator policies. For the P2A application data channel, DCS media resources are required. DCS-C sends DC media resource reservation request to DCS-M. The DCS-M allocates media resources for the application DC and sends them to DCS-C. DCS-C sends DC control request with reserved media resource to MMTel AS.\n6.\tMMTel AS sends the 200 OK response to the UPDATE message which includes the SDP answer for the application data channel and DCS-M information (e.g., address).\n7~8.\tThe UE A initiates application data channel establishment with DCS-M and exchanges application data with an Application Server via the application data channel.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.7.3\tImpacts on existing nodes and functionality",
                            "text_content": "Following nodes are impacted by this solution.\nHSS:\n-\tImpact to HSS (e.g. Data Channel specific subscription information) is FFS.\nData Channel control (DCS-C)function:\n-\tInteracts with the IMS MMTel AS via DC1 interface. DC1 is used for Data Channel call control and call event notifications and is based on a HTTP Restful API. The control function interacts with the DC media function via DC3 to reserve and maintain media resources.\n-\tDC control function discovers and selects DC media function either using SBI principles (i.e. via NRF) or by static configuration (e.g. by using a configured FQDN or IP address).\nData Channel media (DCS-M) function:\n-\tMaintains DC media resources and interacts with the DC control function via DC3. DC3 can be based on HTTP/S.\nData Channel Application repository:\n-\tIt stores data channel applications. This function is out of scope of 3GPP.\nCSCF:\n-\tImpact to P-CSCF, I-CSCF, S-CSCF is FFS.\nMMTel AS:\n-\tNeeds to interact with the DC control function via DC1 interface to send call event triggers and receive notifications that are translated into SIP/SDP.\n-\tMMTel AS discovers and selects DC control function either using SBI principles (i.e. via NRF) or by static configuration (e.g. by using a configured FQDN or IP address).\nIMS-AGW:\n-\tNeeds to support transport of DC Data.\nUE:\n-\tSupport data channel usage in IMS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.8\tSolution #8: AR Telephony Communication Based on Data Channel",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.8.1\tDescription",
                            "text_content": "This solution resolves Key Issue #2 about supporting IMS based AR telephony communication.\nFor some AR telephony communication, e.g. remote cooperation, the exchanged data between two sides includes two types: one is the normal multimedia audio or video which can be handled in a normal multimedia call; another is AR specific data which is some additional information related to the multimedia audio or video. For this kind of AR telephony communication, the data channel could be used to transfer the AR specific data during the communication. UE renders AR content based on these specific data.\nThe protocol stack for MTSI client which is involved in an AR telephony communication is shown in Figure 6.8.1-1, as specified in TS 26.114 [6].\nFor AR telephony communication, the normal multimedia part is transported as speech/video over RTP and the AR specific data is transported through data channel over SCTP/DTLS.\nFigure 6.1-1 illustrates the user plane protocol stack for a basic M-T-S-I (Multiple-Tandem-Single-Interface) client, showcasing the various layers involved in the communication process. The figure begins with the physical layer, which handles the transmission of raw bits over the air interface. Moving up, the data link layer is responsible for framing and error detection, while the network layer manages routing and addressing. The transport layer ensures reliable data transfer, and the application layer serves the specific requirements of the client application. The figure also highlights the role of the user plane, which is responsible for the actual data exchange between the client and the network.\nFigure 6.8.1-1: User plane protocol stack for a basic MTSI client\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.8.2\tProcedures",
                            "text_content": "Depicted in Figure 6.8.2 -1 is the high-level procedures of AR telephony communication service.\nFigure 6.2-1 illustrates the high-level procedures of AR telephony communication service, showcasing the various stages from call initiation to termination. The figure depicts the interaction between the caller, called party, and the telecommunication network, highlighting the role of signaling protocols and signaling elements. Key components include the signaling point between the two parties, the signaling network, and the signaling elements that facilitate the exchange of information. The figure emphasizes the importance of efficient signaling and the role of network elements in ensuring smooth communication.\nFigure 6.8.2-1: High-level procedures of AR telephony communication service\nWhen UE initiates an AR telephony communication with peer UE, the data exchange for this communication request will include both normal multimedia and AR specific data.\nThere are 3 phase procedures for supporting AR telephony communication service based on data channel as shown in Figure 6.8.2-1 and they are:\n-\tProcedures of normal multimedia part of AR telephony communication;\n-\tProcedures of bootstrap DC establishment and application acquirement;\n-\tProcedures of application DC establishment and data exchange for AR telephony communication.\nFor the procedures of normal multimedia part of AR telephony communication, normal IMS calling procedure is proceeded and after that, audio/video multimedia of AR telephony communication is transported over RTP.\nFor the procedures of bootstrap DC establishment and application acquirement, bootstrap DC is established and application for AR specific data exchange is acquired by two UEs. The application is associated with the normal multimedia part in the previous procedures and the integration of them provides the AR telephony communication service. The application produces and exchanges AR specific data, such as digital content, to enhance the telephony communication.\nFor the procedures of application DC establishment, UE sends Invite request for Application DC to IMS AS through I/S-CSCF. IMS AS sends the Data Channel event notification to DC Control Function. The interaction between IMS AS and DC Control Function for the DC event notification is addressed by other solutions for Key Issue #1. Then DC Control Function instructs DC Media Function to create Application DC resource directly or through IMS AS. IMS AS sends Invite request for Application DC to peer UE through peer I/S-CSCF and peer IMS AS serving peer UE. The response of Invite request from peer UE is transferred to UE through IMS AS, I/S-CSCF of both UE sides. Then application data channel is established between UE and peer UE; and the AR specific data in this AR telephony communication could be exchanged between them over the data channel.\nThe procedures for multimedia part establishment and DC part establishment of AR telephony communication could be proceeded simultaneously, i.e. the invitation request from UE could include both multimedia part establishment and DC part establishment requests.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.8.3\tImpacts on existing nodes and functionality",
                            "text_content": "The solution has impacts on the following entities:\nUE:\n-\tSupport AR and data channel functionality and related procedures.\nIMS network:\n-\tIMS-AS: Support interaction with DC Control Function and Media Function to support DC usage.\n-\tNew added data channel functionality: DC Control Function, DC Media Function, and DC Application Repository.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.9\tSolution #9: Supporting AR communication",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.9.1\tDescription",
                            "text_content": "According to the definition of TR 26.998 [14], different AR devices have different media processing capabilities. IMS needs to support media transmission and media rendering related to AR communication. This solution defines how IMS can be enhanced to support AR communication.\nThis solution has the following assumptions:\n-\tDue to the flexibility (constant iteration, frequent upgrade required) and diversity (various industries, different experiences) of AR applications, built-in or pre-installed AR applications in AR devices will lead to software version fragmentation and difficult integration of different terminals. Therefore, this solution only considers the unified use of IMS data channel downloading mode for AR applications.\n-\tFor the security of national laws and regulations, 3D models used for AR communication should be provided to the IMS when the AR application connects to IMS and saved in the persistent database. IMS needs to be notified when the 3D model is changed by AR application.\nThe following definitions apply to this solution:\n3D Model: 3D Model include 3D virtual object model and 3D virtual human avatar model.\nAR metadata: Data used for AR media rendering, including user pose information and camera information and so on.\nFigure 6.9.1.3-1 illustrates the enhanced IMS (IP Multimedia Subsystem) architecture designed to support AR (Augmented Reality) communication. The figure showcases the integration of various components, including the IMS core, multimedia servers, and AR applications, which work together to facilitate seamless AR communication experiences. The core components, such as the IMS Application Server, Multimedia Server, and AR Application, are depicted in detail, highlighting their roles in processing and delivering AR content. The figure emphasizes the importance of a well-structured IMS architecture in enabling efficient AR communication, with a focus on the integration of multimedia services and AR applications for a holistic AR experience.\nFigure 6.9.1.3-1: Enhanced IMS architecture to support AR communication\nNOTE 1:\tThe DCMF could be an enhanced MRF that support DC, the DC related architecture and interfaces will be defined in the solution to KI#1.\nAR communication architecture is enhanced based on data channel architecture, including the following network functions:\n1.\tAdd a new network function AR Application Server, responsible for AR service control related to AR communication, including AR session media controlling, AR media rendering negotiation and AR service handling.\nNOTE 2:\tAR Application Server can be deployed in operator's network or belongs to third party.\n2.\tAdd the AR media processing network function ARMF, responsible for AR communication media transmission and media rendering function, including the following functions:\n-\tAR Rendering Logic: controls the application-based rendering logic of AR communication.\n-\tAR Media Processing Function: including Vision Engine, 3D Rendering Engine. Vision Engine and 3D Rendering Engine will establish spatial map, and render the scenes, virtual human models and 3D object models according to the field of view, posture, position, etc. which are transmitted from UE using data channel.\nNOTE 3:\tARMF is a logic network function element, it can be deployed together with other media functions such as DCMF, it can also be collocated in other functional entities, e.g. UMF (Unified Media Function). The details of UMF is described in solution #15.\nThe following reference points are used for the IMS AR communication architecture. It is suggested that SBI is applied to these reference points.\n-\tDC4: Service based reference point between the AR Application Server and the DCSF for AR service handling and AR session media control.\n-\tDC5: Service based reference point between the MMTEL AS and the ARMF for AR resource management.\nNOTE 4:\tThe DC4 interface will be defined in solution #20.\nThe following media interface are used for the IMS AR communication architecture.\n-\tMDC2: Reference point of data channel media between the AR Application Server and DCMF for AR media rendering negotiation.\n-\tMDC4: Reference point of AR media between the AR Application Server and ARMF for AR media transmission.\n-\tMb (RTP&DC): The media interface between UE and IMS-AGW, including RTP channel used for audio/video media stream transmission and data channel used for data media stream transmission.\n-\tMb (RTP): The media interface between IMS-AGW and ARMF, using RTP channel for audio/video media stream transmission.\n-\tMb (HTTP): The media interface between DCMF and ARMF, used by DCMF to transmit data in HTTP channel after transforming data media stream received in data channel to HTTP format.\n-\tMb (DC): the media interface between IMS-AGW and DCMF, using data channel for data media stream transmission.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.9.2\tProcedures",
                            "text_content": "According to AR communication scenarios defined by TR 26.998 [14] and TR 26.928 [15], media processing capabilities are different for different AR devices (STAR, EDGAR, and WLAR). The AR communication call flows can be summarized as follows:\n1.\tTerminal rendering process: When the media processing capability of AR device meets the requirements of AR communication (such as AR mark and simple AR effect) according to its status such as power status, signal status, computing power status,   status, etc, the AR device can independently implement AR media rendering by itself. The either side of IMS provides AR application to the calling and the called users at the same time. The terminal performs local rendering based on the media obtained locally or sent by the peer.\n2.\tNetwork rendering process: When the media processing capability of AR device cannot meet AR communication requirements (such as complex scene or virtual human rendering requirements) according to its status, the AR device can decide to request IMS for AR media rendering. The either side of IMS provides AR application to the calling and the called users at the same time, IMS then performs AR media rendering based on AR media received from the calling or the called users, finally IMS sends rendered AR media using normal audio/video streams through RTP channel to the calling or called user.\nFigure 6.9.2.1-1 illustrates the terminal rendering process, which involves the conversion of digital data into a format that can be displayed on a screen. The process starts with the input of digital data, which is then processed by the terminal's hardware and software to create a visual representation. This representation is then sent to the display, which converts the digital data into an image that can be seen by the user. The process is repeated for each frame of the video, creating a smooth and continuous image. The figure also shows the various components of the terminal rendering process, including the input data, the processing hardware and software, and the display.\nFigure 6.9.2.1-1: Terminal rendering process\nKey steps:\n1.\tThe UE-A initiates an AR communication session and establishes audio and video session connections with the UE-B.\n2.\tThe bootstrap and application data channel connections are established for the UE-A and UE-B according to AR application requirements.\nScenario 1: The UE performs AR media rendering based on the AR media get from local application.\n3.\tThe UE-A gets AR media (such as 3D model) from AR application locally and performs AR media rendering itself.\n4.\tThe UE-A sends the rendered AR audio/video media to the peer through the RTP channel.\nScenario 2: The UE performs AR media rendering based on the AR media get from remote application.\n5.\tThe UE-B sends AR media through application data channel to UE-A.\n6.\tThe UE-A performs AR media rendering itself based on the AR media received, and displays the rendered audio/video media on its screen.\nFigure 6.9.2.2-1 presents a detailed network rendering process, illustrating the steps involved in creating a network diagram. The figure showcases the transformation of raw data into a visual representation, emphasizing the importance of accurate and clear network visualization. Key components such as nodes, links, and routers are depicted, highlighting their roles in data transmission and processing. The figure also highlights the use of network simulation tools, which aid in testing and optimizing network configurations before implementation. Overall, the network rendering process depicted in Figure 6.9.2.2-1 is crucial for effective network planning, design, and management.\nFigure 6.9.2.2-1: Network rendering process\nKey steps:\n1.\tThe UE-A initiates an AR communication session and establishes audio and video session connections with the UE-B. Then the bootstrap data channels are established for the UE-A and UE-B.\n2.\tThe application data channels are established for the UE-A and the UE-B.\nAR Media Rendering Negotiation Procedure:\n3.\tThe UE-A decide to request network media rendering based on its status such as power status, signal status, computing power status, internal storage status, etc.\n4.\tThe UE-A initiate the application data channel between UE-A and the DCMF, and sends a Media Rendering Negotiation Request to IMS, finally the request is transferred to AR AS.\nNOTE:\tThe media negotiation for split rendering between the UE and the network will be specified by SA WG4.\n5.\tThe AR AS decides whether to provide media rendering function based on the request from UE in step 4 and its available resource.\n6.\tThe AR AS will send request to DCSF to allocate media resource on ARMF.\n7.\tThe DCSF will send a XR Service Resource Allocation Request using Nmmtelas_XRServiceResource_Allocate to MMTel AS to confirm whether ARMF has enough resource to finish AR media rendering, carrying XR computing power value.\n8.\tThe MMTEL AS sends a XR Media Resource allocation request using Narmf_XRMediaResource_Allocate to ARMF, carrying the UE-A's application data channel address information, the IMS-AGW(for UE-A) audio/video address information, and the remote UE-B's address information.\n9.\tWhen the ARMF resource applied successfully, it returns a successful response carrying the termination addresses information allocated on ARMF to the MMTEL AS.\n10-11.\tThe MMTEL AS sends a successful response to the DCSF. The DCSF will forward the message to AR AS.\n12.\tThe AR AS stores the media point information of the ARMF.\n13.\tThe AR AS sends a Media Rendering Negotiation Response to indicate the media rendering negotiation is successful.\nUE-A can request to change the network rendering content if the status changed in the UE-A, such as low power, low computing power etc.\nAR Session Media re-Negotiation Procedure For Network Rendering:\n14.\tIf the XR resource are allocated successfully in step11, the MMTEL AS sends a DC modification request using Ndcmf_MediaResourceManagement to the DCMF, carrying ARMF address information, to connect DCMF and ARMF termination.\n15.\tThe MMTEL AS sends a REINVITE message carrying ARMF address information, to anchor UE-A's audio/video media stream to ARMF through IMS-AGW.\n16.\tThe UE-A sends 200 response carrying UE-A's audio/video media address information.\n17.\tThe MMTEL AS sends a REINVITE message carrying ARMF address information, to connect ARMF to UE-B.\n18.\tThe terminating IMS side sends 200 for REINVITE.\nNetworking Rendering Procedure:\n19.\tThe UE-A starts AR media rendering.\n20-21.\tThe UE-A sends AR media through application data channel to DCMF and DCMF transfers the AR media to ARMF for AR media rendering.\n22.\tThe ARMF performs AR media rendering.\n23.\tThe UE-A performs part of the AR media rendering itself.\n24-25.\tThe UE-A sends the rendered audio/video media over RTP to ARMF through IM-AGW. If UE-A does not perform the rendering, the UE-A sends the original audio/video media over RTP to ARMF.\n26-27.\tThe ARMF combines the AR media rendered by ARMF and the rendered AR media received from UE-A, and sends the complete audio/video media to UE-B. If UE-A does not perform the rendering itself, step 25 can be omitted, and the ARMF directly sends the rendered media to the UE-B.\n28.\tThe ARMF sends the rendered video RTP media stream to the UE-A when it needs to send video back to the UE-A through the video back channel.\n29.\tThe UE-A hangs up, UE-A sends a BYE message to P-CSCF.\n30.\tAR AS sends a XR Service Resource release request to DCSF to release the allocated resource.\n31.\tDCSF sends the XR Service Resource release request using Nmmtelas_XRServiceResource_Release to MMTEL AS.\n32.\tMMTEL AS sends the XR Media Resource release request using Narmf_XRMediaResource_Release to ARMF.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.9.3\tImpacts on existing nodes and functionality",
                            "text_content": "MMTel AS:\n-\tSupport data channel resource modification, to connect DCS-M to a new network node.\n-\tSupport ARMF resource management, and connect ARMF to IMS-AGW and DCMF.\nDCMF:\n-\tSupport transforming AR media in data channel to HTTP and send to a new network node.\nAR AS:\n-\tSupport AR media rendering negotiation between UE and IMS.\n-\tSupport AR application service handling.\nARMF:\n-\tSupport AR media rendering function for AR communication based on the received AR metadata and audio/video media stream.\nUE:\n-\tSupport data channel capability.\n-\tDecides whether to use the network rendering method and change the split ratio of the rendering tasks based on its status.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.10\tSolution #10: Support of Third Party specific User Identities in IMS re-using the Ms reference point and STIR/SHAKEN",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.10.1\tDescription",
                            "text_content": "The Ms reference point as described in TS 24.229 [8] is used to request signing of an Identity header field or request verification of a signed assertion in an Identity header field. This enables calling number verification using signature verification and attestation information based on the STIR/SHAKEN framework.\nThis solution proposes to use the existing Ms reference point and procedures as described in TS 24.229 [8] for signing and verifying other identities than for example the ones in the P-Asserted-Identity header field which are mainly in the format of a SIP URI or Tel URL. For verification of the calling line identity the IBCF or an AS of the originating network sends a HTTP signing request to the signing AS which in turn replies with a Personal Assertion Token (PASSporT). At the terminating network side, the IBCF or an AS sends a HTTP verification request to the signing AS including the PASSporT which in turn replies with a verification success or failure message. Figure 6.10.1-1 shows the use of the Ms reference point for signing and verification of identities in SIP header fields using an AS (STI-AS) for signing at the originating side and an AS (STI-VS) for verification at the terminating side.\nFigure 6.10.1-1 illustrates the operation of the Ms reference point, as described in TS 24.229 [8], Annex V.2. The figure depicts the various components involved in the process, including the Ms reference point, the Ms interface, and the Ms signaling. The Ms reference point is responsible for providing a common point of reference for the synchronization of the time and frequency domains in a mobile network. The Ms interface is used to exchange information between the Ms reference point and the mobile network elements, such as the Ms synchronization server and the Ms synchronization request/response. The Ms signaling is used to establish and maintain the synchronization relationship between the Ms reference point and the mobile network elements. The figure shows how the Ms reference point operates in conjunction with the Ms interface and Ms signaling to provide accurate and reliable synchronization for the mobile network.\nFigure 6.10.1-1: Ms reference point operation (see TS 24.229 [8], Annex V.2)\nAccording to draft-ietf-sipcore-callinfo-rcd-04 [28] and draft-ietf-stir-passport-rcd-18 [16] securing the display name of a callers was outside the scope of Secure Telephone Identity Revisited (STIR) while [16] documents an optional mechanism for PASSporT and the associated STIR procedures allowing to sign and verify additional data elements (see also [28] for more detailed description) including for example:\n-\tthe name of the calling person or of an entity;\n-\tthe traditional caller ID along with related display information that would be rendered to the called party during alerting;\n-\thyperlinks to images, such as logos or pictures of faces, or to similar external profile information;\n-\tinformation related to the location of the caller;\n-\tinformation related to an organization the caller is associated with, or categories/departments of organizations and institutions;\n-\tpossibly other Rich Call Data (RCD) information elements.\nThe types of Third Party User Identities as used in IMS should be aligned with the definitions in [28] and include the calling person's name and job title, information related to the organization the caller is associated with and information related to the caller's location. The concrete list of Third Party User Identities is determined during normative phase in alignment with stage 3.\nThe overall reference architecture is depicted in Figure 6.10.1-2. The Third Party (Enterprise) network can be connected to the serving IMS network via UNI or NNI interfaces. The serving IMS network handles outbound SIP calls from the Third Party network.\nFigure 6.10.1-2 illustrates the connection between a third-party network and a serving IMS (IP Multimedia Subsystem) network. The figure depicts the network architecture, showing how the third-party network is connected to the IMS network through a series of interfaces and protocols. The diagram highlights the role of the IMS network as the central hub for multimedia services, while the third-party network provides additional functionality and connectivity. The figure also shows how the two networks communicate and exchange data, emphasizing the importance of seamless integration and interoperability in modern telecommunications networks.\nFigure 6.10.1-2: Third Party network connected to the serving IMS network\nThere are several options how and where the Third Party User Identities are signed and verified, listed below as Option 1, Option 2a and Option 2b. These options allow for different deployment scenarios, e.g. using UNI or NNI interface (e.g. IP-PBX cases) between Third Party and IMS network, with different levels of impact to the Third Party network and the IMS network provider and with different levels of trust relationship between both.\nOption 1: The Third Party (an Enterprise) invokes the signing itself. For that purpose, the Third Party may use the SHAKEN framework and protocols defined by STIR. This requires a STI certificate assigned to the Third Party to cryptographically assert authority over telephone numbers. The scope of a STI certificate can be expressed by the certificate's TNAuthList identifying a set or subset of Telephone Numbers (TNs) assigned to the certificate holder as described in RFC 8226 [22]. This allows the terminating network to compare the calling number attested by the SIP request with the TNAuthList of the certificate to determine whether the caller is authorized to use the calling number. In addition, with the use of the delegate certificate mechanism as described in draft-ietf-stir-cert-delegation-04 [23] and in ATIS-1000092 [24] it is possible to extend the SHAKEN credential system to enable also non-SHAKEN entities such as a Third Party IP-PBX to create and sign a PASSporT to demonstrate its association with the calling TN when initiating outbound calls to a telephone service provider, e.g. an IMS service provider. The certificate management procedures are further described in ATIS-1000092 [24]. This allows the serving IMS network (IBCF or AS) for an incoming SIP request based on local policies to verify the provided PASSporT, compare the calling number attested by the SIP request with the TNAuthList of the certificate and, if accepted, forward the SIP request with the signature towards the terminating network which in turn can invoke the verification. With this approach the serving IMS network is not required to configure and store the list of numbers that the Third Party is authorized to use.\nOption 2: The serving IMS network (IBCF in the trunking case, S-CSCF or AS otherwise) invokes the signing on behalf of the Third Party. In this case the signing AS in Figure 6.10.1-1 is invoked by the IMS network based on local policy (e.g. signing is only invoked if the call leaves the IMS network and Third Party specific user identity information is present in a SIP header). The verification of the signature is invoked in the terminating IMS network. The Third Party specific user identities that are subject for signing in the serving IMS network can be either provided:\na)\tby the Third Party in the SIP signalling during session setup; the legitimacy of the calling telephone number or other provided information can be part of the service level agreement between IMS service provider and Third Party or the IMS service provider can obtain TN or other data (e.g. name card) assignment information from the Third Party by means outside the scope of 3GPP; or\nb)\tby the HSS in the serving IMS network based on trusted information from the Third Party. In this case the HSS may need to store additional data (in addition to telephone numbers or SIP URIs) in the subscription of a Third Party subscriber like a caller name or organization information. These data are fetched from the HSS by the S-CSCF or AS depending which entity invokes the signing. If these additional data are not user specific (e.g. just a company name), also other entities like the IBCF or an AS may be configured with this Third Party specific user identity information.\nThe SIP header extensions required to transfer Third Party specific user identity information are defined by stage 3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.10.2\tProcedures",
                            "text_content": "The procedures to sign and verify PASSporT tokens follow the descriptions in TS 24.229 [8] and ATIS-1000074 [17] with the main difference that besides telephone numbers also other information as described in draft-ietf-sipcore-callinfo-rcd-04 [28] and draft-ietf-stir-passport-rcd-18 [16] can be used for signing and verification. Use of delegate certificates is based on draft-ietf-stir-cert-delegation-04 [23] and ATIS-1000092 [24].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.10.3\tImpacts on existing nodes and functionality",
                            "text_content": "Following nodes are impacted by this solution.\nHSS:\n-\tFor Option 2b in clause 6.10.1 the HSS stores additional trusted information from the Third Party like caller name, job title, organization the caller is associated with and information related to the caller's location.\nIBCF, S-CSCF and AS:\n-\tNeed to be able to invoke signing and verification of new information elements in the SIP header based on local policies and an existing trust relationship with the Third Party.\n-\tIBCF, AS: May be configured with Third Party specific user identity information that is not user specific.\n-\tS-CSCF, AS: May fetch data from HSS for signing.\nSigning AS (STI-AS):\n-\tNeed to be able to sign new information elements from the SIP header.\nVerification AS (STI-VS)\n-\tNeed to be able to verify new information elements from the SIP header.\nCSCF:\n-\tPotentially support of new SIP headers. Transparently forwards the signature from the Third Party towards the terminating network.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.11\tSolution #11: Verification of calling party when using third party specific identity",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.11.1\tDescription",
                            "text_content": "This paper proposes solution for verifying the calling party when using third party specific identity at the originating side and validating at the terminating side to ensure to the called party that the call is received from the intended user.\nThe following are the main principles of the solution:\n-\tThird Party will create group data in HSS which will have list of IMPUs, s, Signing server address and the need for verification per IMPU. These IMPUs are assigned by third party to its users which will be used by them to make calls.\n-\tThese IMPUs can be put into one IRS and get implicitly registered or independently registered.\n-\tWhen the user initiates one session using one of the assigned IMPU then at the originating side, S-CSCF derives the IMPU from PAI/from header and if the same IMPU is present in group data then it invokes the Signing server.\n-\tSigning server will sign it and provides the Identity header.\n-\tAt the terminating side S-CSCF will invoke the verification server based on the presence of Identity header.\n-\tVerification server will validate the header and provide the validity status.\nIf both the calling party and called party belongs to same group data (calls between users of same third party) then based on operator policy invoking of signing server at the originating side will be skipped.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.11.2\tProcedures",
                            "text_content": "Figure 6 illustrates the process of network controlling network slice when a user equipment (UE) does not have a Permanent Diameter Object (PDU) session. The figure depicts the interaction between the network elements, including the Home Node B (HNB), Serving Node (SN), and the P-GW, in managing network resources and ensuring efficient communication. The diagram highlights the role of the Home Location Register (HLR) and the Mobility Management Entity (MME) in maintaining session control and resource allocation. The visual representation emphasizes the importance of real-time coordination and dynamic resource management in supporting seamless connectivity and service delivery in a network slicing architecture.\nFigure 6.11.2-1: Network controlling network slice when UE does not have PDU session\nThe detailed procedure is described in Figure 6.11.2-1.\n1.\tHSS will expose services for third party to create group data. Third party will provision the list of IMPUs which will be used by its users along with signing server address to this group data.\n2.\tUE1 will be implicitly registered or independently registered as in clause 5.2.1a of TS 23.228 [5].\n3.\tUE1 initiate a IMS session by sending INVITE.\n4.\tS-CSCF at originating side will derive the IMPU from PAI/From header and if present in group data then invoke the signing server and forwards the INVITE request.\n5.\tSigning server will sign the request using certificates and add the Identity header and sends back the INVITE to S-CSCF\n6.\tS-CSCF will forward the INVITE request to the terminating side.\n7.\tS-CSCF at terminating side will invoke the verification server based on the presence of Identity header and forwards the INVITE request.\n8.\tVerification server will verify the Identity header using certificates and provides the validity status along with the INVITE to S-CSCF.\n9.\tS-CSCF at terminating side sends the INVITE towards UE2 based on the successful validation result. S-CSCF may reject the call for the unsuccessful result received from verification server.\n10.\tSuccessful call happens between UE1 & UE2.\nEditor's note:\tSecurity aspect related to signing server if hosted by third party will be handled by SA WG3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.11.3\tImpacts on existing nodes and functionality",
                            "text_content": "This solution may have the following impacts to existing entities and interfaces:\nHSS:\n-\tHSS will expose services for third party to create group data.\nS-CSCF:\n-\tS-CSCF at originating side will invoke signing server if the received IMPU from PAI/From header is present in the group data.\n-\tS-CSCF at terminating side will invoke verification server based on the present of Identity header. Also based on the successful result from verification server it will forward the invite to called party and may reject the call for unsuccessful result.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.12\tSolution #12: Solution of SHAKEN based third-party specific user identities",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.12.1\tDescription",
                            "text_content": "SHAKEN (Signature-based Handling of Asserted Information Using toKENs) is defined as a framework that utilizes protocols defined in the IETF STIR Working Group that work together in an end-to-end architecture for the authentication and assertion of a Caller ID by an originating service provider and the verification of this identity by a terminating service provider.\nSTIR/SHAKEN framework has been adopted in 3GPP and related procedures are defined in TS 24.229 [8].\nThis solution introduced an enhancement to existing STIR/SHAKEN framework and procedures to support the usage of third-party specific user identities. It is assumed that the SIP UA has been authorized by third party Authorization Server with designated IMPU or an application layer token.\nFigure 6.12.1.2-1 depicts the reference architecture of enhanced SHAKEN framework.\nThis is a logical view of the architecture and does not mandate any particular deployment and/or implementation. Secure Telephone Identity Authentication Service (STI-AS) together with Secure Key Store (SKS) performs as Signing Server, which creates PASSporT signatures. Secure Telephone Identity Verification Service (STI-VS) performs as Verification Server, which verifies the signature in the Identity header field.\nFigure 6 illustrates the enhancement of the SHAKEN framework to support third-party specific user identities, showcasing the integration of new elements to validate and authenticate calls. The figure highlights the addition of new components, such as the third-party authentication server (TPA), which authenticates the user identity before the call is forwarded to the network. The diagram also emphasizes the role of the signaling system 7 (SS7) in the process, ensuring secure call routing. The visual representation of the framework's evolution underscores the commitment to improving call security and preventing fraud.\nFigure 6.12.1.2-1: Enhancement of SHAKEN framework to support third-party specific user identities\nThird party Authorization Server interacts with IMS network via NEF to authorize the usage of third-party specific user identity by the originating SIP UA. If the third party specific user identity is authorized, the third party Authorization Server may issue an enterprise name card of the originating SIP UA to IMS network, which can be presented to the terminating SIP UA upon successful verification.\nThe key information included in the enterprise name card may derived from the \"display-name\" in the From header and further \"rich call data\" (RCD) about the caller in Call-Info header as specified in draft-ietf-sipcore-callinfo-rcd-03 [28].\nAfter inserting the Call-Info header field, the originating IMS or third party AS should sign the caller information via STIR mechanisms RFC8224 [18] and through the draft-ietf-stir-passport-rcd-15 [16], which extends PASSporT to provide cryptographic protection for the \"display-name\" field of SIP requests as well as further \"rich call data\" (RCD) about the caller. The terminating IMS can verify the signature and forward the \"display-name\" and RCD to the callee UE for rendering.\nWhen the IMS call is originated from IP PBX, third-party specific user ID including the enterprise name card is generated by IP PBX in the SIP INVITE message in a P-Asserted-Identity and Call-info header fields. The S-CSCF or IBCF then initiates a trigger to the Signing Server for the SIP INVITE.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.12.2\tProcedures",
                            "text_content": "Figure 6.12.2 -1 illustrates the procedure of third-party specific user identity authorization and verification, detailing the steps involved in granting access to third-party applications. The figure outlines the process, which starts with the user initiating the authentication request. The system then checks the user's identity against a third-party database, ensuring that the user is authorized to access the requested service. If the user is verified, the system grants access, and the user can proceed with the third-party application. The figure emphasizes the importance of secure and efficient user authentication in today's digital landscape.\nFigure 6.12.2-1: Procedure of third party specific user identity authorization and verification\nFollowing preconditions are fulfilled before a SIP UA with third party specific user identity initiating a call flow.\n-\tFor the originating UE, subscription data for the usage of third party specific user identity and signing of third party specific user ID for secure delivery may be configured in the HSS.\n-\tFor the terminating UE, subscription data for the verification of third party specific user identity may be configured in the HSS.\n-\tThird party Authorization Server is authorized by the serving IMS network to provide third party specific user identity for specific group of SIP UAs. A security association between third party Authorization Server and NEF has been established.\n-\tThe originating SIP UA is authorized by third party Authorization Server to use designated third party specific user identity in following two methods:\n-\tOption A: The third party leverages the subscriber management capability exposed by HSS via NEF to allocate an designated Public User Identity and associated Service Profile for the SIP UA.\n-\tOption B: The third party assigned a token to the SIP UA for the authorization of third party specific ID via application layer. How the third party Authorization Server distributes the token to the SIP UAs is out of the scope of this study report.\nThe enhancement to SHAKEN reference call flow specified in clause 4.3 of ATIS-1000074 [17] are as following:\n1.\tThe originating SIP UA creates a SIP INVITE with:\n-\tthe Public User Identity allocated by third party (for option A); or\n-\tan Authorization Header which contains the third party specific user identity, realm of the third party Authorization Server and the token assigned by the third party Authorization Server (for option B).\nNOTE 1:\tSIP UA may interactive with third party Authorization Server via application layer to get the third party specific user identity and token, which is out of scope of this study.\n2.\tThe S-CSCF resolves the address of the third party Authorization Server based on the Public User Identity (option A) or realm information in the authorization request (option B). The authorization request is forwarded to the NEF. The NEF discovers the selects the third party Authorization Server for the authorization of using third party specific user identity.\nNOTE 2:\tIf a secure connection between the S-CSCF and third party Authorization Server is available, the exchange of authorization information may not involve NEF. This communication method is similar like the secondary authorization/authentication procedures as described in clause 4.3.2.3 of TS 23.502 [3].\n3.\tThe third party Authorization Server authorizes the request and creates an enterprise name card for the SIP UA, which is going to be delivered in the SIP header. If the authorization request is rejected, the IMS call can continue without presentation of third party specific user identity.\nNOTE 3:\tThe key information of enterprise name card and integrity protection mechanism are specified in draft-ietf-stir-passport-rcd-15 [16].\n4-5.\tThe Signing Server signs the SIP INVITE and adds Identity header field(s) per IETF RFC 8224 [18] using the third party specific user ID in the P-Asserted-Identity header field and enterprise name card information.\n6.\tSIP INVITE with signature is sent to the terminating IMS networks.\n7-8.\tUpon receiving the SIP INVITE with third party specific user identity, the terminating IMS triggers the verification procedure with the Verification Server.\n9.\tThe third party specific user identity and enterprise name card is received and rendered in the terminating SIP UA.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.12.3\tImpacts on Existing Nodes and Functionality",
                            "text_content": "NEF is enhanced to support following functionalities:\n-\tAuthorization of third party Authorization Server and establishment of secure association with Authorization Server.\n-\tSupporting interaction between IMS network and third party Authorization Server for authentication and authorization of SIP UAs for using third party specific user identities. The existing NEF Services Nnef_Authentication specified in TS 23.256 [21] can be reused and extended for the authorization of third party user ID with third party Authorization Server.\n-\tSupporting exposure of subscription data management capability from HSS to allocate designated Public User Identities for authorized SIP UAs.\nUE is enhanced to support:\n-\tInitiating IMS call with third party allocated IMPU (for option A).\n-\tDelivery of third party specific identity, realm and token in the SIP INVTE (for option B).\n-\tRendering caller information (e.g., enterprise name card) in terminating UE.\nS-CSCF is enhanced to support following functionalities:\n-\tUpon receiving IMS calls from designed IMPUs, resolving the address of third party Authorization Server and trigger the Authorization Request via NEF (for option A).\n-\tReceiving the SIP INVITE with Authorization Header for the third-party user ID request, and generating authorization request to the NEF (for option B).\n-\tTriggering the signing of third-party specific user ID with the Signing Server for originating call.\n-\tTriggering the Verification Server for the verification of the signature in the Identity Header field for terminating call.\n-\tInterworking with third party Authorization server directly or via NEF for authorization request of third-party user ID.\nIP PBX is enhanced to support inserting enterprise name card in the P-Asserted-Identity header field of SIP INVITE.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.13\tSolution #13: third party specific user identities",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.13.1\tDescription",
                            "text_content": "This solution proposes an architecture using the third party ID and credential to access IMS network.\nThis solution proposes to solve the data coupling issue between third party subscribers and network operators using procedures similar to OAuth 2.0 framework. The OAuth 2.0 is described in IETF RFC 6749 [19].\nThis solution covers two ways of enterprises accessing IMS network: SIP trunk and single registration.\nThis solution has following assumptions:\n-\tThe third party (e.g. enterprises) subscribes with the network operator, and the third party subscribers (e.g. employees) use third party ID (enterprise employee ID) to access operators' network.\n-\tThe third party authentication server belongs to the third party IT domain. The third party subscribers (e.g. employees) need to be authenticated and authorized by third party (e.g. their enterprise) before accessing operator network. Network operators' IMS needs to connect to the third party authentication server.\n-\tThis solution assumes the SIP client of single registration is a SIP calling App installed on UE, or a wired SIP phone configured by the third party (enterprise) or the third party subscriber.\n-\tThe third party ID and credential (e.g. token) will be generated by the third party.\nthird party: An enterprise. The third party is authorized to access IMS network after subscribing with the operator. Under the OAuth 2.0 framework, the third party is the resource owner.\nthird party auth. server: an authentication server used by the third party to authenticate and authorize the third party subscriber, allocate tokens to the authenticated third party subscriber and accept Token verification request from other servers. Under the OAuth 2.0 framework, the third party auth. server is the authorization server.\nthird party subscriber: a user of third party, e.g. an employee. The authentication and authorization will jointly be performed by IMS and third party auth. server. Under the OAuth 2.0 framework, the third party subscriber is the client.\nthird party ID (3PID): the identity of third party subscriber accessing to IMS network. Used for authentication and authorization, combined with credential.\nenterprise Data Server (EDS): a network element in IMS that connects to third party auth. server. EDS performs authentication and authorization of third party subscriber with third party auth. server. Under the OAuth 2.0 framework, EDS and IMS is the resource server.\nNOTE 1:\tThe subscription data generated by EDS follows the same format of subscription in HSS. The third party user specific data (e.g. position, call purpose, current location) does not need to be standardized. However, the interface for fetching the data is standardised.\nNOTE 2:\tAppropriate terminology regarding Credential Provider can be decided in normative phase.\nFigure 6.13.1.3-1 depicts the architecture for the third party ID access solution. The third party subscribers use the third party ID and credential to access IMS network. IMS network and the third party auth. server jointly perform authentication and authorization, which achieves calls, user identity information retrievals, name card securely transmissions and demonstrations.\nFigure 6.13.1.3-1: Architecture for third party ID Access solution illustrates a multi-tiered architecture for managing third-party identity access within a network. The figure showcases the various components involved, including the third-party service provider (TSP), the network service provider (NSP), and the identity provider (IdP). The TSP is responsible for authenticating and authorizing users, while the NSP manages network access. The IdP is the central repository for user identities, ensuring secure access to network resources. The figure emphasizes the importance of secure communication channels and the use of encryption to protect sensitive data.\nFigure 6.13.1.3-1: Architecture for third party id Access solution\nNOTE 1:\tSecurity related aspects should be studied by SA WG3.\nConsidering the network position of the Enterprise Data Server, the EDS needs to frequently communicate with external servers and perform joint authentication. Therefore, the EDS cannot be combined with other functions that are at the core of the network. Enterprise Data Server in Carrier IMS Domain has following service logic:\n-\tAccept provision instruction and store third party subscription data (e.g. enterprise name, enterprise domain name, call out E.164 number list for its employee) in its database.\n-\tInterwork with third party Auth. Server with Mutual TLS authentication and authenticate third party.\n-\tJointly authenticate and authorize third party subscriber with the third party Auth. Server and EDS stores/caches the third party subscriber data (e.g. enterprise identity information and authorized call out E.164 number) from the third party Auth. Server.\n-\tInterwork with I/S-CSCF and provide function for third party authenticate procedures, third party subscribers authenticate procedures, location management procedures, user data handling procedures, IMS Restoration procedures, the first two are new procedures defined for the solution, other procedures are same with procedures defined in Cx / N70.\n-\tInterwork with MMTel AS and provide function for third party ID presentation procedures, Data handling procedures, Subscription/notification procedures, the first is new procedure defined for the solution, other procedures are same with procedures defined in Sh / N71.\n-\tInterwork with IBCF and provide function for query provisioned information procedures, this procedure is new defined procedure for this solution.\nThe following reference points are defined for the third party id access architecture. It is suggested that SBI is applied to these reference points, and use HTTP/2 protocol.\n-\tIF1:\tReference point between the EDS and the I/S-CSCF.\n-\tIF2:\tReference point between the EDS and the MMTel AS.\n-\tIF3:\tReference point between the EDS and the IBCF.\n-\tIF4:\tReference point between the EDS and the third party Auth. Server.\nNOTE 2:\tIF4 is out of scope of 3GPP.\nTraditionally, the subscription is associated to a single user. To satisfy the data decoupling requirement of enterprise, IMS needs to support the subscription of an enterprise, instead of its each employee. Under this subscription, the third party subscriber (e.g. an employee) could use the IMS resource to initiate a call after authenticated by the third party auth. server and IMS, and the third party is charged for the call. Key data of the subscription includes third party domain name, the CA for the third party certificate, third party name, and E.164 number segment or list allocated to the given third party for call routing etc. The network operator could decide which data is needed based on their own design.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.13.2\tProcedures",
                            "text_content": "Editor's note:\tThe detail registration, originating and terminating call flow is FFS.\nFigure 6.13.2.1-1 illustrates the process of third-party ID access via a SIP trunk, showcasing the interaction between the service provider's network and an external entity. The figure depicts the flow of information, including signaling, media, and user data, highlighting the secure and controlled access points. Key components such as the Session Initiation Protocol (SIP) signaling, media gateways, and the Session Border Controller (SBC) are shown, emphasizing the multi-layered security measures in place. The figure emphasizes the importance of maintaining privacy and control while enabling third-party access to essential services.\nFigure 6.13.2.1-1: Third party ID Access via SIP Trunk\n1.\tThe BSS provisions the third party subscription data to the EDS according to the description in 6.x.1.4.\n2.\tThe third party PBX establishes TLS connection with the IBCF. The PBX needs to store the IBCF domain name and the CA of the IBCF certificate for the TLS handshake.\n3.\tThe IBCF sends domain name and provisioned info to the EDS to verify if the third party PBX is a trusted one.\n4.\tAfter verifying provisioned info, EDS sends response indicating the request has succeeded.\n5.\tThe TLS connection is established.\n6.\tThe third party subscriber sends a SIP INVITE through TLS connection, containing the third party ID and token. The third party subscriber gets the token when login into the third party auth. server.\n7.\tThe IBCF forwards the SIP request to the S-CSCF.\n8.\tThe S-CSCF finds the corresponding EDS based on the domain info in the third party ID, and send the third party ID and the token to the EDS for authentication.\n9.\tThe EDS forwards the third party ID and the token to the corresponding third party auth. server for authentication. The TLS link between EDS and third party Auth. Server is established in previous stage with mutual TLS authentication.\n10.\tThe third party auth. server verifies whether the Token is a valid one. If so, the third party auth. server sends success response with the relevant third party subscriber data (e.g. E.164 number, name, department etc.) corresponding to the provisioned third party ID to the EDS. The EDS caches the data.\n11.\tThe EDS informs the S-CSCF the authentication is succeeded. The S-CSCF downloads temporarily generated user data from the EDS.\nNOTE 1:\tSecurity related aspects should be studied by SA WG3.\n12.\tThe S-CSCF forwards the messages to the AS.\n13.The MMTel AS requests user data from the EDS.\nNOTE 2: \tThe subscription data generated by EDS follows the same format of subscription in HSS. The third party user specific data (e.g. position, call purpose, current location) does not need to be standardized, and will be transparently transmitted from EDS to MMTel AS to MRF.\n14.\tThe EDS responses, returning data of the third party subscriber.\n15.\tThe MMTel AS requests the MRF to process name card media.\n16.\tThe MMTel AS responses, and perform asynchronous processing.\n17.\tThe MMTel changes the value of From and P-Asserted-Identity headers to E.164 number that allocated to the given third party, then forwards the INVITE to the S-CSCF.\n18.\tThe S-CSCF forwards the messages to the terminating IMS network.\n19.\tThe MRF shows the rich name card (e.g. through the CRS service defined in TS 24.183 [20]) during ringing. The detailed procedure is specified in 6.13.2.5.\nNOTE 3:\tThe media negotiation process of CRS aligns with A.2.2 procedure in TS 24.183 [20].\nNOTE 4:\tThe structure of the name card is customized by third party.\n20.\tThe called party responds 18x and 200 to the S-CSCF.\n21.\tThe S-CSCF forwards 18x and 200 messages to the calling UE.\n22.\tThe MRF stops playing rich name card in media plane, and redirects the call to calling party.\n23.\tCall established.\n24.\tCall ended.\n25.\tBilling and record for later audit use.\nFigure 6.13.2.2-1 illustrates the process of third-party ID access via a single SIP registration. The figure depicts a network architecture where a third-party ID is granted access to a service provider's network through a single SIP registration. The diagram showcases the various components involved, including the service provider's network, the third-party ID, and the SIP registration server. The figure highlights the security measures in place, such as authentication and authorization protocols, to ensure secure and controlled access to the network resources. The use of SIP (Session Initiation Protocol) registration simplifies the process of granting access to third-party entities, allowing for efficient management and control of network resources.\nFigure 6.13.2.2-1: Third party ID Access via Single SIP Registration\nEditor's note:\tThe Editor's note in clause 6.13.2.1 are also applicable here.\n1.\tThe BSS sends third party provision to EDS according to the description in 6.13.1.4.\n2.\tThe third party subscriber sends authentication requests to third party auth. server.\n3.\tThe third party auth. server returns Token after authenticating the third party subscriber.\n4.\tThe third party subscriber sends SIP REGISTER to the P-CSCF with a third party ID and Token.\n5.\tThe P-CSCF forwards the message to the S-CSCF.\n6.\tThe S-CSCF finds the corresponding EDS based on the domain info in third party ID, and send third party ID and Token to the EDS for authentication.\n7.\tThe EDS forwards third party ID and Token to corresponding third party auth. server for authentication. The TLS link between EDS and third party Auth. Server is established in previous stage with mutual TLS authentication.\n8.\tThe third party auth. server verifies whether the token is a valid one. If so, third party auth. server sends success responses and relevant third party subscriber data corresponding to provisioned third party ID to the EDS. The EDS caches the data.\n9.\tThe EDS informs S-CSCF the authentication is succeeded. The S-CSCF downloads temporarily generated user data from the EDS.\n10.\tThe S-CSCF sends 200 response.\n11.\tThe P-CSCF forwards 200 response.\n12.\tThe S-CSCF sends registration request to the MMTel AS. The MMTel AS downloads temporarily generated user data from the EDS.\n13.\tThe third party subscriber sends a SIP INVITE.\n14.\tThe P-CSCF forwards the message to the S-CSCF.\n15.\tThe S-CSCF forwards the messages to the AS.\n16-26.\tThese steps are same as steps 15-25 described in clause 6.13.2.1.\nNOTE:\tSecurity related aspects (e.g. Steps 2-11) should be studied by SA WG3.\nFigure 6.13.2.3-1: SIP Trunk third party U user as the called party\" illustrates a SIP Trunk setup where a third-party user is being called as the called party. The figure shows the various components involved, including the Session Initiation Protocol (SIP) trunk, the third-party user's device, and the user's device. The diagram highlights the signaling process, including the establishment of the call, call forwarding, and call termination. The figure emphasizes the importance of SIP Trunks in modern communication systems, enabling seamless communication between different networks and devices.\nFigure 6.13.2.3-1: SIP Trunk third party User as the called party\nEditor's note:\tThe Editor's note in clause 6.13.2.1 are also applicable here.\n1.\tThe S-CSCF receives INVITE request from originating side, which the E.164 number is assigned to a third party.\n2.\tThe S-CSCF finds the corresponding EDS based on the domain information in the Request URI, and gets the number relative data from the EDS.\n3.\tThe EDS returns user data information, including third party PBX's IBCF domain name and third party domain name.\n4.\tThe S-CSCF forwards the message to the MMTel AS.\n5.\tThe MMTel AS requires the relevant service data from the EDS.\n6.\tThe EDS returns the data.\n7.\tThe MMTel AS forwards the message to the S-CSCF after MMTel service handling.\n8.\tThe S-CSCF changes the Route header to third party domain name, and forwards the message to the IBCF.\n9.\tThe IBCF gets the third party PBX address from the DNS server, and forwards the message through the established TLS connection. If the TLS connection has not established, the IBCF will start the handshake.\n10.\tThe third party PBX responds 18x and 200.\n11.\tThe IBCF forwards 18x and 200 responses.\n12.\tCall established.\n13.\tCall ends.\n14.\tBilling and record for later audit use.\nFigure 6.13.2.4-1 illustrates a single SIP Registration third party user acting as the called party, showcasing the communication flow between different entities in a VoIP network. The figure depicts the interaction between the SIP registrar, the SIP user agent, and the SIP user, highlighting the process of call setup, signaling, and call control. Key components include the Session Initiation Protocol (SIP) registrar, the SIP user agent, and the SIP user, which are essential for establishing and managing voice and video calls over the internet. The figure emphasizes the importance of secure and efficient communication between these components, ensuring a smooth and reliable user experience.\nFigure 6.13.2.4-1: single SIP Registration third party User as the called party\n1.\tThe S-CSCF receives INVITE request from originating side, which the E.164 number is assigned to a third party.\n2.\tThe S-CSCF finds the corresponding third party ID of the E.164 number from implicit registration set, and forwards the message to the MMTel AS.\n3.\tThe MMTel AS finds the corresponding third party ID of the E.164 number from implicit registration set, and forwards the message to the S-CSCF after MMTel service handling.\n4.\tThe S-CSCF forwards the message to the P-CSCF.\n5.\tThe P-CSCF forwards the message to the third party calling APP.\n6.\tThe third party calling APP responds 18x and 200.\n7.\tThe P-CSCF forwards 18x and 200 messages.\n8.\tCall established.\n9.\tCall ends.\n10.\tBilling and record for later audit use.\nThis clause aims to give solution to the KI \"how the terminating IMS network can support the called party to verify third party specific identities during a call.\" and \"potential impacts on STIR/SHAKEN procedures defined in TS 24.229 [8]\".\nFigure 6.13.2.5-1: Terminating IMS network - verifying third party specific identities and name cards\n\nFigure 6.13.2.5-1 illustrates the termination of an IMS network, where third-party specific identities and name cards are verified. The figure showcases the process of integrating external services into the IMS network, ensuring secure and accurate authentication. Key components include the IMS core network, home subscriber server (HSS), and third-party service providers. The figure highlights the importance of seamless integration and security measures in modern telecommunications networks.\nFigure 6.13.2.5-1: terminating IMS network verifying third party specific identities and name card\n1.\tThe third party subscriber initiates a call.\n2.\tThe originating MMTel AS gets a private key, generates the JWT and signature, and put them in SIP Identity header as the standard STIR/SHAKEN procedure.\n3.\tThe originating MMTel AS indicates in the INVITE message that the caller side support media SHAKEN by carrying \"Supported: early-media-verification-with-shaken\".\n4.\tThe originating IBCF forwards the message to the terminating IBCF.\n5.\tThe terminating IBCF forwards the message to the terminating MMTel AS.\n6.\tThe terminating MMTel AS verifies the signature in Identity header with the public key as the standard STIR/SHAKEN procedure.\n7.\tThe terminating MMTel AS generates shared key and shared salt, encrypts them with the public key. The shared key and shared salt is used for the originating IMS to encrypt the media and the terminating IMS to decrypt the media.\n8.\tThe terminating MMTel AS forwards the call to the terminating UE, and uses verstat parameter in the From and PAI URI header to indicate caller's level.\n9.\tThe terminating UE responds 18x. When the response reach terminating MMTel AS, it will include the encrypted shared key and shared salt in the response, and also indicate the originating IMS that it supports media check.\n10.\tThe terminating MMTel AS forwards the 18x to the originating MMTel AS, carrying the Require and P-Media-Verification header.\n11.\tThe originating MMTel AS decrypts the shared key and shared salt with the private key.\n12.\tThe terminating MMTel AS forwards the shared key and shared salt to the terminating media checkpoint, and inform the terminating media checkpoint to initiate media check.\n13.\tThe terminating media checkpoint responds.\n14.\tThe originating MMTel AS forwards the shared key and shared salt to the MRF, and request the MRF to initiate media integrity protection tag in SRTP tag.\n15.\tThe MRF responds.\n16.\tThe originating MMTel AS informs the MRF to start playing name card.\nNOTE 1:\tThe media negotiation process of CRS aligns with A.2.2 procedure in TS 24.183 [20].\n17.\tThe MRF start sending the SRTP with integrity protection.\n18.\tThe terminating media checkpoint checks the integrity of the media.\n19.\tThe terminating media checkpoint sends the result to the terminating MMTel AS.\n20.\tThe terminating MMTel AS sends the results to the terminating UE.\nNOTE 2:\tSecurity related aspects should be studied by SA WG3.\nEditor's note:\tWhich network element will take the role of terminating media check point is FFS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.13.3\tImpacts on Existing Nodes and Functionality",
                            "text_content": "I/S-CSCF impact:\n-\tSupport third party subscription model.\n-\tSupport using third party ID and token to access IMS network.\n-\tSupport IF1 reference point between I/S-CSCF and EDS.\nP-CSCF impact:\n-\tSupport using third party ID and Token to access IMS network.\nIBCF impact:\n-\tSupport using third party ID and Token to access IMS network.\n-\tSupport IF3 reference point between IBCF and EDS.\nMMTel AS impact:\n-\tSupport using third party ID to trigger services.\n-\tSupport generating and validating signature as STIR/SHAKEN process.\n-\tSupport encrypting and decrypting the shared key and shared salted used to encrypted rich name card media.\n-\tSupport controlling MRF to process and forward rich name card media.\n-\tSupport IF2 reference point between MMTel AS and EDS.\nMRF impact:\n-\tSupport processing and forwarding rich name card media.\nEDS impact:\n-\tSupport authenticating and connecting to third party auth. server, retrieving and caching identity information.\n-\tSupport receiving verification request from IBCF and CSCF, and forwarding the request to third party.\n-\tSupport generating temporary IMS user data, and forwarding to CSCF and AS.\nNOTE:\tWhether the impact happens in MRF could be influenced by other KI.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.14\tSolution #14: IMS MRF Discovery and Selection using 5G-SBA NRF",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.14.1\tDescription",
                            "text_content": "This is a solution for part of Key Issue #4: Study of Applicability of Service based principles to IMS media control interfaces - addressing the issue of selecting an appropriate MRF by an IMS AS, the solution proposes extending existing NRF capabilities to support this action. It is anticipated that use of this solution will be orthogonal to other solutions for different aspects of Key Issue #4.\nOn initialization the MRF performs a NF registration with the NRF, this procedure is enhanced to include the list of media capabilities supported by the MRF - this may include a wildcard to indicate all media capabilities supported. In addition to the new indication of media capabilities, the registration may include other existing parameters such as location and priority, etc. This list of media capabilities is operator configured depending on the IMS service offering and network configuration, some media capabilities configuration may be generic (e.g. voice, video), some may be more specific (e.g. a specific video codec).\nAfter successful registration, the NRF will receive status updates from the MRF regarding the load according to existing 5G_SBA principles. The NRF can then utilize the load information to assist in MRF selection or distribute to other SBA entities using existing capabilities. How the MRF determines its load is left for implementation (e.g. hardware processor load, allocated memory occupancy, media channels used, total bandwidth consumed etc).\nWhen an IMS AS requires a MRF to perform media processing for a particular IMS service it shall request service discovery/selection by the NRF, this request will need to include the media capabilities (configured according the AS service and operator configuration) this particular IMS service requires. Depending on IMS AS implementation the AS may request each media capability individually, or may request a particular set at a time (e.g. a TAS supporting voice services may request all of the voice capabilities the first time it needs a service for a particular user, or may request each voice capability singularly when it needs to provide a particular service for a user). When performing service discovery, the IMS AS will need to include the list of required media capabilities (or wildcard), for service selection the IMS AS may need to include other parameters.\nNOTE 1:\tThe media capabilities requested must align with the operator configured list of media capabilities supported by the MRF (MRFC/MRFP).\nIf the NRF is performing discovery, the NRF will need to respond with the list of MRF matching the requested media capabilities (along with the other NRF parameters, location, priority, load etc). The IMS AS can then use the supplied information to select the appropriate MRF. If the NRF is performing discovery and selection the NRF will only need to respond with the specific selected MRF.\nNOTE 2:\tIn some network implementations all MRF may be configured to provide all media capabilities, and thus registration and selection may only need to use the wildcard media capabilities.\nExamples of media capabilities include:\n-\tVoice Announcements;\n-\tVoice Conferencing;\n-\tVoice Codec Adaptation;\n-\tRTT Interworking;\n-\tVideo Codec Adaptation;\n-\tVideo Conferencing;\n-\tXRM Adaptation;\n-\tDC Interworking.\nFollowing the discovery/selection of the MRF by the IMS AS, normal IMS procedures (using SIP signalling) will occur to establish the connections to the MRF.\nAfter discovery/selection of the MRF the subsequent interactions with the MRF use SIP signalling it is not applicable to use communication modes C and D and thus no SCP interactions occur. Therefore, there are no SCP impacts.\nIn some networks the MRF is distributed into discrete MRFC and MRFP - to support all implementation options the same procedures for MRF selection/discovery may need to be supported for MRFC and MRFP nodes. The IMS AS may need to discover/select an appropriate MRFC, and in some cases the MRFC may need to discover/select an appropriate MRFP. However, in many implementations the pairing between MRFC and MRFP can be fixed by implementation or pre-configuration, and thus only selection of MRFC is sufficient.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.14.2\tProcedures",
                            "text_content": "Figure 6 illustrates the process of MRF service registration, showcasing the interaction between the network elements involved. The figure depicts the communication between the network server, represented by the square, and the MRF service registration, represented by the circle. The arrows indicate the flow of data, with the network server sending a request to the MRF service registration, which then responds with the necessary information. This visual representation provides a clear understanding of the communication protocol and the role of each network element in the registration process.\nFigure 6.14.2.1: MRF Service Registration\n1.\tThe IMS_MRF sends Nnrf_NFManagement_NFRegister Request message to inform the NRF of its profile when the IMS_MRF becomes operative for the first time. The IMS_MRF profile includes the operator configured list of media capabilities supported by this MRF - this may be a wildcard to indicate support of all media capabilities.\n2.\tThe NRF stores the profile of the IMS_MRF and marks it available.\n3.\tThe NRF acknowledge MRF Registration is accepted via Nnrf_NFManagement_NFRegister response.\nNOTE:\tFor distributed MRFC/MRFP replace IMS MRF above with either MRFC or MRFP - in fully distributed implementations both MRFC and MRFP may need to register ; however in some implementations only one of the MRFC or MRFP will need to register if the pairing is known or pre-configured (as per SBA model A).\nFigure 6 illustrates the IMS Multimedia RNC (MRF) discovery process using Service Based Architecture (SBA) Network Reliable Function (NRF). The figure showcases the interaction between the IMS (IP Multimedia Subsystem) and the MRF, highlighting the use of SBA NRF for efficient and reliable communication. The diagram showcases the various components involved, including the IMS, MRF, and the underlying network infrastructure. The figure emphasizes the importance of SBA NRF in ensuring smooth and efficient communication between the IMS and MRF, thereby improving overall network performance.\nFigure 6.14.2.2: IMS_MRF discovery using SBA NRF\n1.\tThe IMS NF (e.g. CSCF, IMS_AS, etc) invokes Nnrf_NFDiscovery_Request to request an MRF - including the list of required media capabilities (which may be a wildcard for all media services).\n2.\tThe NRF authorizes the Nnrf_NFDiscovery_Request. According to current 5G_SBA practices.\n3.\tIf the request is allowed, the NRF determines a set of MRF instance(s) matching the Nnrf_NFDiscovery_Request and internal policies of the NRF and sends the information for the determined IMS_MRF instance(s).\nDepending on implementation the discovery request may contain other information (e.g. IMS_NF location, IP address, etc.). The selection algorithm may be configured to use this information (if available) to determine the most suitable IMS_MRF instance, e.g. the location may be used to select the IMS_MRF instance located closest to the user if all other aspects are equal.\nNOTE 1:\tThe list of media capabilities (which could be a single capability) sent in the Discovery_Request must align with the operator configured list of capabilities supported by the MRF (MRFC/MRFP) that are sent when the AF registers with the NRF.\nBased on network configuration either the NRF performs network selection based on included profile information or supplies the set of appropriate MRF (and associated profile information) for the IMS_NF to perform NF selection according to its own criteria.\nNOTE 2:\tFor distributed MRFC/MRFP the IMS NF may be discovering/selecting the MRFC or MRFP - in fully distributed implementations both MRFC and MRFP may need to be selected in this way.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.14.3\tImpacts on Existing Nodes and Functionality",
                            "text_content": "Impacts to NRF\n-\tNRF needs to support MRF registration (with a list of IMS media capabilities).\n-\tNRF needs to support MRF selection/discovery (with a list of IMS media capabilities).\nImpacts to MRF\n-\tMRF needs to support SBA.\n-\tMRF needs to support service registration with NRF including media capabilities.\n-\tMRF needs to support configuration of list of supported media capabilities.\nImpacts to IMS AS\n-\tAS needs to support MRF selection/discovery via NRF.\n-\tAS needs to support configuration of the requested media capabilities.\nNOTE:\tIt is assumed that the IMS AS already supports SBA due to support of Sh via SBA in earlier releases.\nNnrf\n-\tNF registration service requires addition of MRF, MRFC, and MRFP as NF types.\n-\tNF registration service requires extension to include list of media capabilities of MRF (including wildcard).\n-\tNF discovery service needs to support IMS AS to request MRF, MRFC, and MRFP services for selection/discovery.\n-\tNF discovery service for MRF requires extension to include required media capabilities of MRF (including wildcard).\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.15\tSolution #15: Applying service based principles to IMS media control interfaces for supporting new capbilities Efficiently",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.15.1\tDescription",
                            "text_content": "For media control interfaces of new capabilities (such as DC, AR, etc.), service-based interfaces should be used. For the existing capabilities associated with the new capabilities, the media control interface should also be service-based(Only AGW is considered this time, and the service-based transformation of other existing media capabilities is FFS). Both new media capabilities and existing media capabilities should establish a dynamic registration and discovery mechanism. Further, the unified media plane function is used to enable the coordination between new media capabilities and existing media capabilities, making media processing more efficient.\nMedia plane network element (NE): The existing media plane network element, including MRFP/IMS-AGW/ TrGW/IM-MGW.\nMedia plane network function (NF): The media plane network entities that are accessed through service-based interfaces and support dynamic registration and discovery. The media plane NF inherits some of the media capabilities of the existing media plane network element.\nMedia plane network function service (NFS): media plane NF is disassembled into different services, referred to as NFS.\nUnified Media Function (UMF): The unified NF which load media plane NFS. Any media plane NFS can be loaded into a UMF, which supports the mixed deployment of NFS from different media plane NEs at the same time.\nNumf: the service-based interface provided by UMF. All media control plane NEs request the media capabilities by this interface.\nBased on the scope of this solution, media plane NF is disassembled into different services, referred to as NFS (network function service). Each NFS has the characteristics of independence and autonomy.\nNFS related to DC and AR is defined in other documents. Here, only NFS related to AGW is defined.\nTable 6.15.1.3-1\n\nNOTE 1:\tThe operations contained in each NFS need to be defined in CT WG4.\nFor media plane NFS, the NRF (Network Repository Function) needs to be defined to be responsible for the automatic management of all NFS, including registration, discovery and status detection. After a NF is powered on, it will actively report its own NFS information to NRF.\nThe media plane NF loading with media plane NFS is uniformly named UMF (Unified media function), which provides the possibility for the unified deployment of NFS from different media plane NEs, and enables more efficient media processing.\nDuring the session, when a media control plane NE (such as AS, P-CSCF etc.) needs to use a certain media capability, it needs to query the NRF to obtain a specific UMF instance.\nNOTE 2:\tUMF is an implementation option. There is no requirement to replace existing media functions with UMF or implement all functions in a single UMF.\nEditor's note:\tWhether and which other information besides supported media capabilities is used to select UMF, MRF, TrGW, IMS-AGW is FFS.\nFigure 6.15.4-1 presents the architecture that supports Service Based Architecture (SBA) for the media plane in an IP Multimedia Subsystem (IMS). The figure illustrates the integration of various components, including the Session Border Controller (SBC), Home Subscriber Server (HSS), and Multimedia Application Server (MAS), which work together to facilitate multimedia communication services. The SBC is responsible for call setup and control, while the HSS manages subscriber information and policy control. The MAS handles the multimedia application processing. The figure also highlights the use of Session Initiation Protocol (SIP) signaling for communication between these components. The architecture ensures a scalable and flexible platform for delivering multimedia services over an IP network.\nFigure 6.15.1.4-1: Architecture to support SBA for IMS media plane\nNOTE:\tThe capabilities of DCS-M and AR-M in relevant documents are uniformly provided by UMF, which is no longer reflected separately in the above figure. P-CSCF (IMS-ALG) accesses the service bus and invokes the AGW function based on the service-based interface.\nH248-based media control and service-based media control can coexist in one network:\n-\tIf a control plane NE only supports H248 interface, it calls the media capability provided by the traditional media plane NE, such as P-CSCF_1 below.\n-\tIf a control plane NE only supports SBI, it calls the media capability provided by UMF, such as P-CSCF_3 below.\n-\tIf a control plane NE supports both H248 interface and SBI, it can freely choose to call the media capability provided by the traditional media plane NE or the media capability provided by UMF, such as P-CSCF_2 below.\nFigure 6.15.1. 5 -1 illustrates the architecture to support Service Based Architecture (SBA) for the IMS media plane, which is a crucial component of the Multimedia Session Control Function (MSCF). The figure depicts the various entities involved, including the Session Border Controller (SBC), Home Subscriber Server (HSS), and Multimedia Application Server (MAS). The SBC is responsible for handling media sessions, while the HSS manages subscriber data and the MAS handles multimedia applications. The figure also shows the interconnections between these components, highlighting the SBA's role in enabling efficient communication and resource sharing. The use of SBA in the IMS media plane is essential for providing a scalable and flexible platform for multimedia services.\nFigure 6.15.1.5-1: Architecture to support SBA for IMS media plane\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.15.1.3-1",
                                    "table number": 4,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.15.2\tProcedures",
                            "text_content": "\nAfter an UMF is powered on, it shall register in NRF their capabilities using the Nnrf_NFManagement_NFRegister Request message (as described in clause 4.17 of TS 23.502 [3]). The parameter related to IMS media plane are as follows:\n-\tWhen UMF sends NF registration request to NRF, the following key parameters need to be carried:\n-\tNF type: indicates NF type, and the value should be \"UMF\".\n-\tsupported NF services: indicates the list of NFS instances contained in an NF, which can be discovered by other NF. The value is the attribute of each NFS instance in the current UMF: unique identification, type (such as numf-agw-xxx), calling address, etc.\nDuring the IMS procedure, an SBI capable IMS entity (such as AS, P-CSCF, etc.) sends a Nnrf_NFDiscovery_Request to NRF (as described in clause 4.17 of TS 23.502 [3]) to discover SBI capable UMF instances. The parameter related to IMS media plane are as follows:\n-\tService consumers need to carry the following key parameters when sending NF discovery request to NRF:\n-\tRequester NF type: indicates the NF type of the service requester. Possible values include AS, P-CSCF, S-CSCF and IBCF.\n-\tTarget NF type: service provider NF type, the value should be \"UMF\".\n-\tService names: the type of NFS requested. The value range is all NFS supported by UMF, such as numf-agw-xxx. This parameter is required for IMS media plane.\nThe Figure below shows the procedure of UE-initiated bootstrap data channel establishments, as example of collaboration between new media capabilities and existing media capabilities. This procedure assumes that UE A (calling party) only needs to establish a bootstrap DC with the local network (stream ID 0), but does not need to establish a bootstrap DC with the remote network (stream ID 100).\nThis procedure focuses on data channel. The audio / video established simultaneously with DC is not described in this procedure.\nUMF_O implements the functions of the existing IMS-AGW and is requested by P-CSCF through the service-based interface instead of the original H248 interface.\nFigure 6.15.2.3 -1: Procedure of UE-initiated bootstrap data channel establishments illustrates the process of establishing a data channel between a user equipment (UE) and a network element in a telecommunication network. The figure shows the UE initiating the process by sending a request for a data channel. The network element responds with a confirmation, and the two devices agree on a shared channel for communication. This procedure is crucial for establishing a secure and reliable connection between the UE and the network, enabling seamless data transmission and communication services.\nFigure 6.15.2.3-1: Procedure of UE-initiated bootstrap data channel establishments\n1.\tUMF_O indicates that it supports AGW media capability and DC related media capability through above NF registration procedure.\n2.\tUE A sends an INVITE request to the P-CSCF_O with an initial SDP offer, to initiates an IMS call to UE B (called party). The initial SDP offer includes one description for the bootstrap data channel media stream between UE A and the local network.\n3.\tP-CSCF_O sends NF discovery request to NRF carrying required NF information: NF type(value: 'UMF'), media plane service names (value: 'AGW'). NRF provides UMF_O as the target NF in the response message.\n4.\tP-CSCF_O sends Reserve and Configure Connect Point request to UMF_O to acquire two DC connection point information: 1) first DC connection point for connecting to UE A, 2) second DC connection point for connecting to local network. Connection point information includes their unique identification, local IP, local port, URL address, etc.\nNOTE 1:\tThe audio / video connection points are acquired by the same message, but the following procedure will not be described audio/video related processing in detail.\n5.\tP-CSCF_O forwards the INVITE message to S-CSCF-O, and the address in SDP is replaced with the local address of second connection point. Additionally, the INVITE carries the information of the two connection points and UMF_O. The connection point information includes their unique identification, URL address, etc. The UMF_O information includes unique identification of UMF_O.\nS-CSCF-O forwards the INVITE message to MMTELAS_O.\n6.\tMMTELAS_O sends an Event Notification to the DCS-C, and DCS-C sends a Session Control request to the MMTel AS A, indicating it how to process the SDP: In this case, it requires the MMTel AS A to terminate the bootstrap data channel media stream between UE A and the local network, and initiate a bootstrap data channel media stream between the local network and UE B.\n7.\tMMTELAS_O sends NF discovery request to NRF carrying required NF information: NF type (value: 'UMF'), media plane service names (value: 'DC') and preferred NF instance information: preferred-NF-id (value: 'UMF_O').\n8.\tNRF according to UMF_ O's registration information to determines that UMF_O can provide DC media plane service, it sends a NF discovery response to MMTELAS_O indicating MMTELAS_O that the target NF providing DC service for current session is UMF_O.\nNOTE 2:\tIf the UMF_O can't provide DC media plane service, NRF returns another UMF instance instead of UMF_O to provide the service, the subsequent procedure is no different from the existing procedure.\n9.\tThe MMTELAS_O constructs a new SDP offer based on the Session Control request from the DCS-C, including one new description for data channel media stream between UE B and the local network. Then sends an INVITE request message to the S-CSCF with the new SDP offer. The address in SDP is the local address of second DC connection point.\nS-CSCF-O forwards the INVITE message to called IMS network.\n10.\tCalled IMS network sends this 18X response to the S-CSCF-O carrying called media descriptions for data channel media stream between UE B and the local network.\nS-CSCF-O forwards the 18X response to MMTELAS_O.\n11.\tMMTELAS_ O sends Configure DC Connection Point request to UMF_ O, configures the remote address of second connection point as per called party's IP/port, and completes the establishment of the bootstrap DC path between the local network and the UE B.\n12.\tUMF_O sends Configure Connection Point response to MMTELAS_ O\n13.\tMMTELAS_ O sends a Media Update Notification message to the DCS-C, reporting the audio/video/data channel media negotiation result, including URL address of two connection point.\nDCS-C sends a response to MMTELAS_ O\n14.\tMMTELAS_O updates the initial SDP answer in 183 response, and sends it to the S-CSCF. The new SDP answer includes one media description for data channel media stream between UE A and the local network. The transport layer address is replaced with invalid value (such as 0.0.0.0).\nS-CSCF-O forwards the 183 response to P-CSCF_O.\n15.\tP-CSCF_O updates the SDP answer in 183 response, the transport layer address is replaced with the local address of first connect point, then forwards the 183 response to UE A.\nThe subsequent is the PRACK/PRACK 200 procedure.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.15.3\tImpacts on existing nodes and functionality",
                            "text_content": "P-CSCF/AS impact:\n-\tThe extension for supporting the discovery of media plane NF through NRF.\n-\tThe extension for supporting requesting media plane NF through the SBI.\nNRF impact:\n-\tThe extension for supporting preferred NF instance.\nUMF impact:\n-\tSupport the mixed deployment of NFS from different media plane NEs (DCS-M and AR-M and IMS-AGW).\n-\tSupport coordination between new media capabilities and existing media capabilities.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.16\tSolution #16: Solution for IMS Media Support for DC Server",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.16.1\tDescription",
                            "text_content": "In this solution, the MRF is enhanced to support the IMS DC feature. To provide the DC Signalling Function (DCSF) with the enhanced MRF Egress information for Bootstrap data as an example, as well as receive the DCSF bootstrapping addressing information, the IMS AS interacts with the DCSF for that purpose.\nFigure 6.16.1-1 depicts a high level architecture diagram for the enhanced MRF solution showing the architecture of the IMS for supporting the IMS Data Channel feature, illustrating the interworking between IMS and other entities needed to support DC feature in this option.\nIn this architecture, the IMS MRF is enhanced to support additional functionality related to DCSF and other data channel media. This functionality is referred to as Data Channel Media Function (DCMF) while maintaining backward compatibility, and reusability. MRFs that are expected to support DC feature shall be enhanced for that purpose.\nNOTE 1:\tNot all deployed MRFs needs to be enhanced to support DC feature.\nIn this architecture, the '3rd Party WebRTC enabled Application' provides application media content relayed over established WebRTC 1.0 RTCDataChannels (IF10). The '3rd Party WebRTC enabled Application' establishes peer media connectivity using WebRTC data channels.\nFigure 6.16.1.1-1includes the following interfaces:\n-\tIF1 between the enhanced MRF and DCSF for media transport related to bootstrapping. What is transported over IF1 is only relevant to the UE. IF1 is HTTP based.\n-\tIF10 between the enhanced MRF and 3pty Web RTC Applications. IMS is transparent to the data channel payload media carried on this interface.\n-\tIF6 between the IMS AS and DCSF for managing DC feature related to IMS data channel including media control. This interface hast to be extensible and support vendor specific information with no impact on interoperability. IF6 is service based.\n-\tDCSF includes multiple functions. The control function for DCSF decides usage of data channel media within the sessions, interacting with both the IMSAS and third-party WebRTC applications. The Bootstrap media function terminates HTTP bootstrap channels established with call sessions, hereby taking the role of a standard web server, potentially acting as a proxy for HTTP resources hosted by external third-party webservers. The DC Application repository includes bootstrap media content fetched by TS 26.114 [6] UE's.\n-\tMRF (MRFC/MRFP) includes both legacy media resources (e.g. Voice and Video).\n- \tEnhanced MRF includes the data channel media function DCMF resources.\nNOTE 2:\tNot all MRFs have to be enhanced to support DCMF.\n-\tThe IMSAS can utilize the Network Repository Function to discover the MRF instance(s). The NRF provides the IP address or the FQDN of MRF instance(s) to the IMSAS. The MRF selection function in the IMSAS selects the MRF instance(s) based on the available MRF instances obtained from NRF or based on the configured MRF information in the IMSAS. The following factors may be considered during the MRF discovery and selection: - UE location information. - Local operator policies. - Availability of candidate MRFs. - UE IP address. - Access Type. - Proximity to location of selected UPF if possible.\nIF6 is in scope of the TR.\nNimsas implements services supported by the IMS AS.\nNdcsf implements services supported by the DCSF.\nEditors note:\tNimsas, and Ndcsf are FFS.\nFigure 6 illustrates the IMS Domain Controller (DC) Enhanced Mobile Roaming Function (MRF) Architectural Option, showcasing the integration of various components such as the IMS Core, Home Location Register (HLR), and Visitor Location Register (VLR). The figure highlights the role of the IMS DC in managing mobile roaming, with a focus on the Enhanced MRF, which improves efficiency and reduces latency. The diagram emphasizes the importance of real-time communication and data synchronization between the IMS Core and the HLR/VLR, ensuring seamless handover and service continuity for mobile users.\nFigure 6.16.1-1: IMS DC Enhanced MRF Architectural Option\nNOTE 3:\tApplication Repository can be outside DCSF.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.16.2\tProcedures",
                            "text_content": "The call flow in Fig 6.16.2.1-1 illustrates the various interactions within an IMS DC related session related to the DC feature. Interactions triggered by UEs related to the actual initiation of bootstrapping are not included.\nFigure 6 illustrates the process of establishing a direct current (DC) channel in a telecommunication system. The figure depicts the interaction between a transmitter and a receiver, with various components such as the antenna, amplifier, and demodulator. The DC channel is established through the use of frequency hopping, as shown by the multiple frequency bands being used. The figure also highlights the importance of synchronization between the transmitter and receiver, as indicated by the clock signals and timing diagrams. Overall, the figure provides a detailed overview of the steps involved in establishing a DC channel, emphasizing the synchronization and frequency hopping techniques used in modern telecommunication systems.\nFigure 6.16.2.1-1: DC Channel Establishment\nThe following is a brief description of the steps in the call flow:\n-\tIn step 1, a DCMTSI UE registers in IMS after successfully establishing an IMS PDU session.\n-\tIn step 2, the UE establishes an audio IMS session with a DCMTSI UE of the terminating network, i.e. both UE's have indicated support for the IMS DC feature by including the feature tag +sip.app-subtype=\"webrtc-datachannel\" in the Contact header\n-\tIn step 3, the originating user initiates upgrade of the established session to add data channel content, which results in the DCMTSI UE sending a session re-negotiation request with local and remote data channel streams added to the SDP as per TS 26.114 [6]. It is here assumed that both the originating and terminating networks provides IMS DC content.\n-\tIn step 4, the IMS AS notifies the DCSF about a session modification request event of served user including information about offered data channel streams. DCSF apply policies and check for applicable content that may require bootstrapping.\nEditor's note:\tThe exact nature of that interaction is FFS.\n-\tIn step 5, the DCSF instructs the IMSAS on how each offered data channel stream of served user shall be handled, i.e. passed-on to the terminating network, removed or be anchored in the enhanced MRF. In this example, the DCSF requests IMS AS to anchor the stream including local bootstrapping and pass-on the stream including remote bootstrapping.\nEditor's note:\tThe exact nature of that interaction is FFS.\n-\tIn step 6, the IMS AS selects an enhanced MRF supporting the DCMF feature and requests the MRF to allocate resources for the specified data channel stream.\n-\tIn step 7, the IMS AS informs DSCF that anchoring of the local bootstrap stream was successful, so session modification procedure can continue.\nEditor's note:\tThe exact nature of that interaction is FFS.\n-\tIn step 8, the session modification procedure is continued. The SDP is adjusted as per DCSF request, to exclude the data channel stream anchored in the MRF before the session re-negotiation request is sent to the terminating network.\n-\tIn step 9, the terminating network responds to session modification request. In this call flow it is also assumed that the terminating network offers remote bootstrapping, which means that the offered data channel stream for remote bootstrapping is accepted.\n-\tIn step 10, the IMS AS notifies the DCSF of the session modification request answer event, including data channel stream information of the SDP answer.\nEditor's note:\tThe exact nature of that interaction is FFS.\n-\tIn step 11, The DCSF may at this point depending on the remote answer, request the IMSAS to update the enhanced MRF with additional instructions on how DC streams shall be handled within the session.\n-\tIn step 12, the IMS AS updates the SDP towards the UE as per DCSF request, so that the IMS AGW is updated with correct media anchoring information related to the bootstrap data streams.\n-\tIn step 13, the SIP ACK is sent to the target.\nAs can be seen, as examples, a) the local Bootstrap data of served user traverses through enhanced MRF to the DCSF, b) the remote Bootstrap of served user, offered by the Terminating NW, bypasses the enhanced MRF.\n-\tIn step 14, the remote user may take the initiative to upgrade the session with DC content, which would result in the remote DCMTSI UE, initiating a session modification, adding local and remote bootstrapping streams.\nEditor's note:\tThis interface is FFS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.16.3\tImpacts on existing nodes and functionality",
                            "text_content": "Editor's note:\tThis clause captures impacts on existing 3GPP nodes and functional elements.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.17\tSolution #17: Service registration, discovery and selection for distributed DC server",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.17.1\tDescription",
                            "text_content": "This solution addresses Key Issue #1 \"Enhancement to support Data Channel usage in IMS network\" and Key Issue #4: \"Study of Applicability of Service based principles to IMS media control interfaces\", on service registration and discovery of DC Server.\nTo support distributed DC server architecture with separate control plane and media plane, separate service registration and discovery for control plane and media plane are required.\nThe solution proposes to extend existing NRF based mechanism with DC specific profiles for control plane and media plane of DC Server. When there are multiple control plane NFs or media plane NFs, the solution discovers and selects a NF whose profile fulfils the DC requirements.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.17.2\tDCSF Registration and Discovery",
                            "text_content": "Figure 6 illustrates the detailed procedure for registering a device with the Dynamic Configuration System for Frequency (DCSF) in a telecommunication network. The figure outlines the steps involved in the registration process, including the interaction between the device, the network management system, and the DCSF. Key components such as the network management station (NMS), the device, and the DCSF are depicted, emphasizing the importance of accurate and efficient device registration for network management and resource allocation. The figure highlights the role of the NMS in coordinating the registration process and the significance of the DCSF in managing the dynamic frequency allocation within the network.\nFigure 6.17.2.1-1: DCSF registration procedure\n1.\tThe DCSF sends Nnrf_NFManagement_NFRegister_Request message to inform the NRF of its profile.\n2.\tThe NRF stores the DCSF profile and marks it as available.\n3.\tThe NRF acknowledges that DCSF Registration is accepted by Nnrf_NFManagement_NFRegister_Response.\nConsidering DCSF may be deployed per customer, e.g. per company, and integrates or connects to different DCAR to provide different applications or services to their subscribers, the DCSF profile includes information identifying the customers it serves, i.e. IMPU range of calling identity or called identity of it serves.\nNOTE 1:\tThe DCSF profile will align with solution #20 and the details can be specified in normative work.\nNOTE 2: The DCSF also can update and deregister in the NRF after registration and the procedures are specified in clauses 4.17.2 and 4.17.3 of TS 23.502 [3].\nFigure 6 illustrates the DCSF (Device Configuration Security Framework) discovery procedure, which involves the interaction between a central server and various devices. The figure showcases the process of device registration, security policy assignment, and the establishment of a secure communication channel. Key elements include the device, the central server, and the security policies. The visual representation emphasizes the importance of secure communication in modern network infrastructure.\nFigure 6.17.2.2-1: DCSF discovery procedure\n1.\tIMS AS sends Nnrf_NFDiscovery_Request to NRF, with the required data channel control related information .e.g. calling IMPU, Request URI, NF type=DCSF.\n2.\tThe NRF determines the DCSF instance(s) which satisfies the Nnrf_NFDiscovery_Request and/or NRF local policy. NRF can provide the dedicated one DCSF instance based on network configuration or send the appropriate DCSF instances to the IMS AS, and IMS AS will make decision on the selection of DCSF.\n3.\tNRF sends Nnrf_NFDiscovery_Response with the DCSF instance(s) information to IMS AS. In case of multiple DCSF instances are received, the IMS AS will perform DCSF NF selection based on the local policy.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.17.3\tDCMF Registration and Discovery",
                            "text_content": "Figure 6 illustrates the detailed process of DC M F registration procedure, which involves various steps such as request initiation, authentication, and registration. The figure showcases the interaction between the network elements, including the network element (NE), the service module (SM), the home agent (HA), and the network management station (NMS). The process is depicted through a series of boxes and arrows, representing the flow of data and instructions between these components. The figure emphasizes the importance of secure and efficient communication in managing network resources and ensuring proper service delivery.\nFigure 6.17.3.1-1: DCMF registration procedure\n1.\tThe DCMF sends Nnrf_NFManagement_NFRegister Request message to inform the NRF of its profile. The DCMF profile includes the data channel media capabilities which are supported by this DCMF.\n2.\tThe NRF stores the DCMF profile and marks it as available.\n3.\tThe NRF acknowledges that DCMF Registration is accepted by Nnrf_NFManagement_NFRegister_Response.\nNOTE 1:\tThe details of DCMF profile is similar to MRF in solution #14 and can be specified in normative work.\nNOTE 2:\tThe DCMF also can update and deregister in the NRF after registration and the procedures are specified in clauses 4.17.2 and 4.17.3 of TS 23.502 [3].\nFigure 6 illustrates the DCMF (Dynamic Channel and Modulation Format) discovery procedure in a telecommunication network. The figure depicts the process of how nodes in the network identify and select the most suitable modulation and coding scheme for data transmission. The procedure involves a series of steps, including channel quality assessment, modulation and coding scheme negotiation, and feedback mechanisms to ensure efficient communication. Key components include the network nodes, the signaling protocol, and the feedback loop that adjusts the DCMF parameters for optimal performance.\nFigure 6.17.3.2-1: DCMF discovery procedure\n1.\tIMS AS sends Nnrf_NFDiscovery_Request to NRF, with the required data channel media services related information, e.g. NF type=DCMF.\n2.\tThe NRF determines the DCMF instance(s) which satisfies the Nnrf_NFDiscovery_Request and/or NRF local policy. NRF can provide the dedicated one DCMF instance based on network configuration or send the appropriate DCMF instances to the IMS AS, and IMS AS will make decision on the selection of DCMF.\n3.\tNRF sends Nnrf_NFDiscovery_Response with the DCMF instance(s) information to IMS AS. In case of multiple DCMF instances are received, the IMS AS will perform DCMF NF selection based on the local policy.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.17.4\tImpacts on existing nodes and functionality",
                            "text_content": "NRF:\n-\tNRF supports service based registration, update, deregistration and discovery of DCSF and DCMF.\nIMS AS:\n-\tIMS AS supports service based discovery and selection of DCSF and DCMF.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.18\tSolution #18:  Negotiation the data channel application(s) used in the call",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.18.1\tDescription",
                            "text_content": "For example, UE-A and UE-B is on the call, and the UE-A is the one who requests to establish an application data channel.\nAs described in TS 26.114 [6] that: application data channel can be established after the data channel application is downloaded from the Data Channel Server Control Function. That is the UE-A can select any data channel application which has been downloaded to establish the application data channel, and does not consider whether the user of UE-B is willing to use it e.g. the user of UE-A selects an LCS data channel application, but the user of UE-B does not like to let others know his location, so the user of UE-B refuses the request. This trial and error method is a kind of waste to Operator(wasting network resource) and to UEs(wasting battery power).\nThis solution provides a new procedure to let the user of UE-B has the capability to decide whether to use the data channel application(s) selected by UE-A before downloading the data channel application(s) to the UEs and receiving the establishment request.\nThis solution is used in the P2P scenario.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.18.2\tProcedures",
                            "text_content": "The figure 6.18.2-1 depicts the procedures how the data channel application used in the call is negotiated.\nFigure 6 illustrates the negotiation process of a selected data channel application, showcasing the interaction between a network element and a service provider. The figure highlights the exchange of information, including channel access requests and grant decisions, emphasizing the role of Quality of Service (QoS) in ensuring efficient resource allocation. The visual representation emphasizes the importance of timely and accurate communication between network entities for smooth data transmission.\nFigure 6.18.2-1: Negotiation of a selected data channel application\nKey steps:\n1.\tThe UE-A establishes audio/video session connections with the UE-B.\n2.\tThe UE-A initiates bootstrap data channel connections. The bootstrap data channel is established for the UE-A and UE-B respectively, e.g. using the DC Control Function of UE-A.\n3.\tThe data channel application list is received from the DC Control Function by UE-A and UE-B respectively.\n4.\tUE-A and UE-B negotiate the data channel application(s) used in the call.\nThe UE-A can send the selected data channel application list to UE-B to ask whether UE-B is willing to use in the call, e.g. via the bootstrap data channels established in step 2.\nThe UE-B can acknowledge whether the data channel application(s) in the list can be used in the call, e.g. via the bootstrap data channels.\nEditor's note:\tHow to sends the data channel application list from UE-A to UE-B is FFS. Whether the message sent in the bootstrap data channel needs to be specified in 3GPP is FFS.\nEditor's note:\tHow does the solution work if the UE's are using different DC server instances or in different IMS networks is FFS.\n5-6.\tThe data channel application(s) acknowledged by UE-B will be downloaded to the UE-A and UE-B respectively.\n7.\tThe application data channel is established between UE-A and UE-B.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.18.3\tImpacts on Existing Nodes and Functionality",
                            "text_content": "This solution has some requirements on the existing IMS nodes below:\nUE:\n-\tThe UE-A who selects a data channel application(s) can request the UE-B whether to accept to use it.\n-\tThe UE-B can acknowledge whether to use the data channel application selected by the UE-A.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.19\tSolution #19: Light weight solution of third party specific ID using existing mechanisms",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.19.1\tDescription",
                            "text_content": "This solution addresses Key Issue #3 \"Third party specific user identities\".\nThis solution is a light weight solution using existing mechanisms including implicit registration set, display-name parameter in From hear field and STIR/SHAKEN, to sign, verify and demonstrate an ID including third party specific information. This solution has no impact on the UE, so it applies to the standard IMS UE and does not require the UE to be upgraded or install any application.\nThe third party customer has a business contract with IMS network operator. Based on the contract, each third party user is provisioned with IMS subscription data, including a third party specific IMPU, stored in the HSS of the IMS network. This third party specific IMPU includes IMS domain name specific to the third party customer.\nThe IMS network operator configures corresponding SiFC on S-CSCF identifying the domain name and targeting the originating AS specific to the customer.\nThe originating AS can be a specific AS for a third party, e.g. a STI-AS, or an existing AS, e.g. TAS. The IMS network operator provisions domain name list or IMPU range of third parties it serves in the AS to decide whether to sign the message.\nThe UE get the third party specific IMPU and uses it to initiate IMS call.\nOriginating S-CSCF forwards the INVITE request message, based on the configured iFC, to the originating AS specific to the customer. The originating AS adds display-name containing third party specific information to From header field in the INVITE message. The third party specific information can be texts of the company name, title, et. al. The originating AS may also copy Tel URI included in P-Asserted-Identity header to From header for CLIP and for call back.\nThe originating AS and the terminating AS follows existing STIR/SHAKEN procedures specified in TS 24.229 [8] to sign and verify the modified From header field.\nPer third party request, the originating AS discovers the call is between users belonging to the same third party based on the configured domain name list or IMPU range of third parties it serves, it can skip the signing procedure.\nNOTE:\tThe display-name part of From header field is not verified by the terminating AS, but the terminating AS can check and validate it according to RFC 8224 [18].\nThe terminating AS may modify display-name of From header with some texts like \"verified by operator\" to inform the called user that the calling ID has been verified and attested.\nThe terminating UE demonstrate the calling ID based on From header.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.19.2\tProcedures",
                            "text_content": "There is no impact on procedures.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.19.3\tImpacts on existing nodes and functionality",
                            "text_content": "The originating AS:\n-\tcopy Tel URI included in P-Asserted-Identity header to From header for CLIP and for call back;\n-\tadds display-name containing third party specific information to From header field in the INVITE message;\n-\tprovisions domain name list or IMPU range of third parties it serves.\nHSS and S-CSCF:\n-\tsupport of provisioning and configuration of third party specific SiFC.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.20\tSolution #20: Merged solution to support Data Channel usage in IMS network",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.20.1\tDescription",
                            "text_content": "This solution addresses Key Issue #1 \"Enhancement to support Data Channel usage in IMS network\" and focuses on how IMS network architecture and procedures are enhanced to support Data Channel usage. This contribution is trying to merge existing solutions of DC architecture and procedure in TR 23.700-87 to establish a joint proposal for evaluation and conclusion for KI#1.\nGenerally, this contribution includes principles and contents from solution #1, solution #3, solution #6, solution #7 and solution #16.\nThe interim conclusion in clause 9.1 is also considered when shaping the merged solution.\nThis solution supports separation of signalling function and media function supporting Data Channel. A new service based function, Data Channel Signalling Function (DCSF), is introduced. There are two ways to provide the DC media function to fulfil different requirements of IMS migration to support DC:\n-\tby enhancing the existing IMS MRF (called enhanced MRF) to perform media functions related to DC, which interacts with IMS AS via legacy MRF interfaces, i.e. Mr'/Cr; and\n-\tby introducing a new service based function called Data Channel Media Function (DCMF), which interacts with IMS AS via the new SBA interface DC2.\nFor both options, the DC media function is specified in clause 6.20.1.2.\nNOTE 1:\tThe above MRF can be a standalone enhanced MRF that performs only DC functions, or a combined MRF that performs the DC functions as well as other media functions (e.g. voice/video, etc).\nNOTE 2:\tDCMF can also be collocated with other functional entities.\nThe discovery and selection of DCSF, DCMF,/enhanced MRF and IMS AS are supported by NRF based mechanisms, referring to solutions #14 and #17.\nThe two architecture options of this solution are shown in Figure 6.20.1.2-1 and Figure 6.20.1.2-2.\nIn this Release, it is assumed that IMS AS, as depicted in the architecture figure, is co-located with the TAS.\nFigure 6 illustrates a multi-domain communication architecture option of IMS (IP Multimedia Subsystem) that supports the usage of DC (Data Center) with DCMF (Data Center Mobility Framework). The figure depicts the integration of IMS with DCMF, highlighting the seamless communication between the two. The architecture showcases the various components involved, such as the IMS core, IMS services, and the DCMF framework. The figure emphasizes the efficient management of mobile traffic within the data center, ensuring high-quality communication and reduced latency. The integration of IMS with DCMF enables the support of various services, such as voice, video, and messaging, within the data center environment.\nFigure 6.20.1.2-1: Architecture option of IMS supporting DC usage with DCMF\nFigure 6 illustrates a multi-option architecture of IMS (IP Multimedia Subsystem) that supports the usage of DC (Data Center) with enhanced MRF (Multipath Routing Forwarding) capabilities. The figure showcases various components and their interconnections, highlighting the efficient routing and forwarding of multimedia traffic in a data-centric environment. The architecture emphasizes the integration of IMS with DC, enabling improved performance and scalability for multimedia services.\nFigure 6.20.1.2-2: Architecture option of IMS supporting DC usage with enhanced MRF\nThe following functional entities are introduced or enhanced to support DC usage in IMS network:\n1)\tData Channel Signalling Function (DCSF):\n-\tImplements data channel control logic through DC1 control API;\n-\tReceives event reports from the IMS AS and decides the usage of data channel;\n-\tManages bootstrap data channels and (if applicable) application data channels by interacting with IMS AS;\n-\tEnables uploading of data channel applications as specified in TS 26.114 [6], however this is out of scope;\n-\tControls download of IMS data channel applications to the UE;\n-\tSupports HTTP web server to terminate HTTP traffic associated with downloading of data channel applications (Bootstrapping) via DCMF and/or enhanced MRF. Additionally, it may optionally act as a proxy for HTTP for resources hosted by external third-party applications;\n-\tInteracts with NEF for data channel capability exposure via N33 and MDC3/MDC2;\n-\tInteracts with DC application Server via DC3/DC4 for DC resource control and traffic forwarding via MDC3/MDC2.\n2)\tData Channel Application Repository (DCAR):\n-\tSupports data channel applications storage. DCAR can be part of the DCSF or a standalone function.\nNOTE 1:\tWhen the DCAR is a standalone function, the interface DC5 between DCAR and DCSF is out of scope of 3GPP.\n3)\tData Channel Media Function (DCMF) / enhanced MRF:\nDCMF and enhanced MRF support the same DC media functionalities as below:\n-\tManage the media resources for data channel media (bootstrap and application data channel if applicable) under the control of IMS AS;\n-\tTerminates bootstrap data channel to/from the UE and forwards HTTP traffic between the UE and DSCF via MDC1 and optionally between the UE and the DC Application Server via MDC2;\n-\tAnchors application data channel in P2P scenarios, if required, and accordingly supports e.g. data traffic forwarding and possible media interworking between DCMTSI client and MTSI client;\n-\tRelays A2P/P2A application data channels between the UE and the DC Application Server via MDC2.\nNOTE 2:\tThe definition of DC Application Server is out of scope of 3GPP.\n4)\tIMS AS:\n-\tInterworks with DCSF via DC1 for event notification for data channel and data channel control procedures;\n-\tInteracts with DCMF via DC2 and with enhanced MRF via Mr'/Cr for data channel media resource management.\nNOTE 3:\tThe IMS AS may be integrated with the DCSF in which case the DC1 interface is internal.\nThe following service based reference points are introduced or enhanced to support DC usage in IMS network:\n-\tDC1:\tReference point between the DCSF and the IMS AS.\n-\tDC2:\tReference point between the IMS AS and DCMF.\n-\tDC3:\tReference point between the DCSF and NEF.\n-\tDC4:\tReference point between the DCSF and DC Application Server.\n-\tDC5:\tReference point between the DCSF and DCAR.\nNOTE 4:\tDC5 is not specified in 3GPP.\nEditor's note:\tWhether DC3 is specified in this release is FFS.\nThe following reference points are introduced or enhanced to support DC media handling:\n-\tMb:\tExisting reference point used for transport of data channel media between DCMF and IMS-AGW.\n-\tMr'/Cr:\tSIP based reference point between IMS AS and enhanced MRF\n-\tMDC1:\tReference point for transport of data channel media between DC media function (either DCMF or enhanced MRF) and DCSF.\n-\tMDC2:\tReference point for transport of data channel media between DC media function (either DCMF or enhanced MRF) and DC Application Server.\n-\tMDC3:\tReference point of data channel media between DCSF and DC Application Server.\nNOTE 5:\tMDC1, MDC2 and MDC3 are not specified in 3GPP.\nDC1, DC2, DC3 and DC4 are service based interfaces so that the following services are to be specified:\n-\tNdcsf:\n-\tExposure of data channel control. (Possible service consumer: NEF, DC Application Server).\n-\tNdcmf:\n-\tManagement of data channel media resources. (Possible service consumer: IMS AS).\n-\tNimsas:\n-\tNotification of data channel media events, e.g. media resource status or media information, to IMS AS during an IMS session. (Possible service consumer: DCSF).\n-\tManagement of data channel media resources. (Possible service consumer: DCSF).\n-\tNnef:\n-\tEnhancements on exposure for data channel capabilities (Possible service consumer: DC Application server).\nEditor's note:\tWhether enhancements to Nnef is specified in this release is FFS.\nFigure 6.20.1.2.2.1-1 below depicts the DCMF media configuration, referred to as the \"HTTP Proxy\" configuration, available for the DCSF when instructing the DCMF to relay bootstrap data channel media between the Mb and the MDC1 interfaces. The protocol view of this media configuration can be used as a basis for deriving required DCMF attributes for DC1 and DC2 service operations (as well as Mr'/Cr).\nFigure 6.20.1.2.2-1 illustrates the media configuration for an HTTP Proxy in a DC environment, specifically for the Bootstrap DC. The figure shows the various components involved, including the DCMF Mb (DC Management Framework), MDC1 (Management Domain Controller 1), and the HTTP Proxy. The configuration details the communication protocols, such as HTTP and HTTPS, and the ports used for data transfer. The figure also highlights the security measures, such as the use of SSL/TLS for secure communication. Overall, this media configuration ensures efficient and secure communication between the Bootstrap DC and other components in the data center.\nFigure 6.20.1.2.2-1: DCMF Mb - MDC1 \"HTTP Proxy\" Media Configuration for Bootstrap DC\nThe DCMF \"HTTP Proxy\" configuration will be selected by the DCSF to provide the bootstrap application (menu and application download). Figure 6.20.1.2.2-2 below depicts the DCMF \"Transparent Relay Mode\" configuration available for the DCSF when instructing the DCMF to relay application data channel media between the Mb and MDC2 towards a DC Application Server providing a P2A/A2P DC application. The protocol view can be used as a basis for deriving required attributes for DC1, DC2, DC3 and DC4 service operations (as well as Mr'/Cr). The DCMF will in this configuration relay the complete SCTP association payload as is, between the UE and the DC Application Server, hereby requiring the DC Application Server to allocate an SCTP Association media resource.\nFigure 6.20.1.2.2 illustrates the transparent relay mode media configuration for application DC (Data Communication) in a DCMF (Data Communication over Multiple Fibres) system. The figure depicts the MDC2 (Media Dependent Channel) as the primary communication channel, with the transparent relay mode facilitating the transmission of data over multiple fibres. The diagram highlights the role of the relay nodes, which are responsible for forwarding data between the primary and secondary communication channels. The figure emphasizes the importance of efficient media configuration in ensuring reliable and high-speed data communication in a DCMF system.\nFigure 6.20.1.2.2-2: DCMF Mb – MDC2 \"Transparent Relay Mode\" Media Configuration for Application DC\nFigures 6.20.1.2.2-3 below depicts an example that the DCMF \"HTTP Proxy\" configuration available for the DCSF when instructing the DCMF to relay application data channel media between the Mb and MDC2 towards a DC Application Server providing a P2A/A2P HTTP DC application. The downloaded DC application will in this case communicate with the DC Application Server, using basic HTTP., within the same bootstrap SCTP association as in which this application was downloaded. UDP, TCP and SCTP should be supported as the transport layer protocols for MDC2.\nNOTE 1:\tThe protocol used within the application data channel is out of scope of 3GPP.\nFigure 6.20.1.2.2 - 3 illustrates the media configuration for an application using a DCMF (Datagram Congestion Control Protocol) and an HTTP proxy in a multi-drop configuration for a Media Device Class (MDC) 2. The figure shows the arrangement of devices, including the Media Concentrator (MC) and the Media Concentrator Interface (MCIF), which facilitate the communication between the devices. The HTTP proxy is used to manage the communication between the client and the server, ensuring efficient data transfer and error handling. The figure highlights the importance of proper media configuration in ensuring smooth and reliable communication in a network.\nFigure 6.20.1.2.2-3: DCMF Mb – MDC2 \"HTTP Proxy\" Media Configurations for Application DC\nNOTE 2:\tEnhanced MRF supports the same functionality as DCMF in Figure 6.20.1.2.2-1, 2, and 3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.20.2\tProcedures",
                            "text_content": "If NRF is used for NF registration and discovery, the DCSF, DCMF/ MRF and IMS AS shall register their services at the NRF before providing services to consumers.\nThe registration and discovery of DCSF, DCMF and IMS AS refers to solution #17 on top of existing procedures specified in TS 23 501 [2].\nThe registration and discovery of MRF refers to solution #14.\nIf NRF is not used for NF registration and discovery, the discovery of NF is based on configurations. The IMS AS is configured with the contact information for a DSCF. This may be the target DSCF instance, or the request could be directed to the target DSCF instance to be used by the IMS AS for subsequent interactions for the subject user.\nDSCF and IMS AS assume there is an implicit subscription to all IMS DC session relevant events in IMS AS for every IMS user engaged in an IMS DC session. IMS AS notifies the DSCF of all relevant IMS DC events requiring action from the DCSF.\nFigure 6 illustrates the process of UE-initiated bootstrap data channel establishment, specifically focusing on the first half of the process. The figure depicts the initial stages of a communication session between a user equipment (UE) and a base station (BS), where the UE attempts to establish a connection with the BS. The figure shows the exchange of control and data packets between the UE and the BS, highlighting the synchronization and timing aspects of the process. The figure is a valuable resource for understanding the intricacies of establishing a data channel in a wireless communication system.\nFigure 6.20.2.3-1: UE Initiated Bootstrap Data Channel Establishment (1/2)\n1.\tUE#1 sends the SIP INVITE request with an initial SDP to AS, through originating network P-CSCF and S-CSCF. The initial SDP contains offers for the bootstrap data channel establishment requirement. In this example procedure, SDP contains both bootstrap data channel offers for originating side and terminating side.\nNOTE 1:\tThis SIP INVITE can also be a SIP re-INVITE performed after the initial IMS audio session is setup.\nNOTE 2:\tThe trigger for a UE to initiate or not initiate a DC establishment request is to be determined during the normative phase. One option is that this trigger is left for UE implementation.\n2.\tIMS AS validates user subscription data to determine whether the DC Call request should be triggered to DCSF.\nIf IMS AS determins that the DC call request needs to be sent to DCSF, the IMS AS selects a DCSF for this user based on local configuration or discovery and selection of a DCSF instance via NRF.\nIf the IMS AS determined that the DC call request need not sent to DCSF, or DCSF decides that DC request is not allowed, the IMS AS proceeds with normal IMS procedures to setup the MMTel session without performing DC bootstrapping.\nNOTE 3:\tBased on local configuration the IMS-AS can decide whether the DC bootstrap establishment proceeds or not.\n3.\tIMS AS notifies the DCSF the call event by sending Nimsas_SessionEventControl_Notify (SessionEstablishmentRequestEvent, CallingID, CalledID, SessionCase, SessionID, MediaInfoList) request to the DCSF. IMS AS may provide information such as IMPU and location information of UE#1 to the DCSF.\nNOTE 4:\tProviding subscriber related information such as location information to the DC Application Server or to the DCAR is not specified in Rel-18.\n4.\tAfter receiving the DC control request, the DCSF determines the policy about how to process the bootstrap data channel establishment requirement based on the related parameters in the DC control request and/or operator strategy.\n5.\tSince the SessionEstablishmentRequestEvent indicates that served user offered local bootstrap media, DCSF, based on its policies prepares originating side MDC1 media information, as well as the terminating side MDC1 remote bootstrap media (targeting remote UE) for the DCMF.\n6. DCSF invokes the Nimsas_MediaControl_MediaInstruction (SessionID, MediaInstructionSet) operation based on its policies instructing the IMS AS to connectDCMF both for originating and terminating side.\n7.\tThe IMS AS selects a DCMF based on local configuration or discovers and selects a DCMF instance or enhanced MRF supporting DC media function via NRF.\n8.\tIMS AS invokes DCMF service to instruct DCMF to allocate a Mb resource to terminate the media descriptor specified by the DCSF for the originating side. For IMS AS to stand alone DCMF, DC2 is used to reserve data channel media resources reserved based on DCSF media information created in step 5. If enhanced MRF is used, IMS AS uses Mr'/Cr to enhanced MRF to reserve data channel media resources.\n9.\tIMS AS invokes DCMF service to instruct DCMF to allocate a Mb resource to terminate the media specified by the DCSF for the terminating side. For IMS AS to stand alone DCMF, DC2 is used to reserve data channel media resources based on DCSF received in step 5. If enhanced MRF is used, IMS AS uses Mr'/Cr to enhanced MRF to reserve data channel media resources.\nNOTE 5:\tThe DCMF media resource allocation could be done with one or multiple service invocations.\n10.\tIMS AS responds to MediaInstruction request received in step 6. The response may include the atomic success of operation received by the IMS AS and includes also media resource information.\n11.\tThe DCSF stores the media resource information and responds to the Notify Request received in step 3.\n12-14.\tIMS AS sends the INVITE which includes the updated SDP offer adding media information of DCMF or enhanced MRF to originating S-CSCF and then to remote network side and UE#2. The SDP offer for bootstrap data channel to UE#2 will in this case be included.\nFigure 6 illustrates the process of UE-initiated bootstrap data channel establishment, where a 2/2 protocol is used. The figure shows the initial connection between the UE and the network, with the UE sending a synchronization signal to the network. The network then responds with a synchronization signal, establishing a connection. This process is crucial for ensuring reliable communication between the UE and the network.\nFigure 6.20.2.3-2: UE Initiated Bootstrap Data Channel Establishment (2/2)\n15-17.\tUE#2 and terminating network returns an 18X response with SDP answer to bootstrap DC to originating network. If the terminating network decides to establish another bootstrap DC to UE#1 and UE#2, the corresponding data channel media description is also included in SDP answer.\n18.\tIMS AS invokes DCMF service to instruct DCMF on data channel media resource modification based on the SDP answer received from terminating network. For IMS AS to stand alone DCMF, DC2 is used to reserve data channel media resources. If enhanced MRF is used, IMS AS uses Mr'/Cr to enhanced MRF to modify data channel media resource.\n19-20.\tThe IMS AS modifies SDP answer for bootstrap data channels to UE#1 in 18X response which may include local bootstrap data channel to UE#1 and/or remote bootstrap data channel to UE#1 and sends 18X response to S-CSCF and P-CSCF.\n21.\tThe originating network P-CSCF executes QoS procedure for bootstrap data channel media based on the SDP answer information from the 18X response.\n22.\tP-CSCF returns the 18X response to UE#1.\n23.\tThe PRACK and UPDATE negotiation between originating and terminating network.\n24-25.\tUE#2 and terminating network returns a 200 OK response.\n26.\tIMS AS notifies the successful session establishment event, with Nimsas_SessionEventControl Notify (SessionEstablishmentSuccessEvent, SessionID, MediaInfoList) to DCSF. IMS AS may provide information such as IMPU and location information of UE#2 to the DCSF.\n27.\tThe DCSF responds to the notification.\n28-30. 200 OK forwarded to UE#1.\n31~32.\tThe bootstrap data channels have been established between originating DCMF or enhanced MRF and UE#1/UE#2. The UEs send application request messages to DCMF or enhanced MRF via bootstrap data channel with its data channel capabilities. The DCMF or enhanced MRF forwards the message to received media point of DCSF. The DCSF provides the proper data channel applications to UE#1 and UE#2 based on their data channel capabilities through DCMF or enhanced MRF.\n33.\tThe bootstrap data channels have been established between terminating DCMF or enhanced MRF and UE#1/UE#2. The data channel application is requested and downloaded to UE#1 and UE#2 from terminating DCSF.\nEditor's note:\tHow the originating and terminating UEs download the same application is FFS.\nEditor's note:\tWhether the bootstrap DC can be established before step 30 (200 OK) is FFS.\n34.\tThe subsequent procedures continue.\nFigure 6 illustrates the process of a User Equipment (UE) initiating a Peer-to-Peer (P2P) application data channel establishment. The figure depicts the initial stages of the process, starting with the UE sending a request to the Access and Mobility Management Entity (AMME) for channel establishment. The AMME then sends a request to the Home Location Register (HLR) for selecting an appropriate channel. The HLR responds with a list of available channels, and the AMME selects one based on the Quality of Service (QoS) requirements. The selected channel is then allocated to the UE, and the P2P application data channel is established. The figure also shows the handover process, where the UE may need to switch channels if it moves to a different location.\nFigure 6.20.2.4-1: UE Initiated P2P Application Data Channel Establishment\n0.\tIMS session and bootstrap data channel has been established. Data channel applications have been downloaded to UE#1 and UE#2.\n1.\tUE#1 sends the SIP reINVITE request with an updated SDP to IMS AS, through originating network P-CSCF and S-CSCF. The updated SDP contains the established bootstrap data channel information, as well as the application data channel establishment requirement which is indicated by stream ID (dcmap value: greater than or equal to 1000), stream Label, etc.\n2.\tIMS AS validates user subscription data to determine whether the media change request should be triggered to DCSF.\n3.\tIMS AS notifies via Nimsas_SessionEventControl_Notify (MediaChangeRequest Event, SessionID, EventDirection, MediaInfoList) the DCSF of the media update request event. IMS AS may provide information such as IMPU and location information of UE#1 to the DCSF.\n4.\tAfter receiving the session event notification, the DCSF determines the policy about how to process the application data channel establishment requirement based on the related parameters in the notification and/or operator strategy.\n5.\tDCSF determines (in this example) that the added application data channel media of the offer takes UE#2 as target endpoint not requiring anchoring in the local DCMF or enhanced MRF. If DCMF or enhanced MRF needs to anchor application data channel, DCMF would have used the Nimsas_ MediaControl service .\n6.\tDCSF responds to the notification received in step 3.\n7-8.\tIMS AS sends the reINVITE to originating S-CSCF and then to remote network side and UE#2.\n9-11.\tUE#2 and terminating network returns a 200 OK response with SDP answer for application DC to originating network.\nEditor's note:\tIt is FFS how UE#2 determines which DC application to use. This needs to be discussed with SA WG4.\n13.\tIf DCMF needs to anchor application data channel, IMS AS invokes DCMF service to modify data channel media resource based on the SDP answer to application DC. For IMS AS to stand alone DCMF, DC2 is used to modify data channel media resources. If enhanced MRF is used, IMS AS uses Mr'/Cr to enhanced MRF to modify data channel media resource.\n1412.\tIMS AS notifies the successful data channel modification to DCSF. IMS AS may provide information such as IMPU and location information of UE#2 to the DCSF.\n13.\tDCSF responds to the notification.\n14-15.\tThe IMS AS sends 200 OK response to S-CSCF and P-CSCF.\n16.\tThe originating network P-CSCF executes QoS procedure for application data channel media based on the SDP answer information from the 200 OK response.\n17.\tP-CSCF returns the 200 OK response to UE#1.\n18.\tUE#1 send ACK to the terminating network.\n19.\tThe application data channel between UE#1 and UE#2 is established, in this example, not anchored on DCMF/enhanced MRF.\nFigure 6 illustrates the process of a User Equipment (UE) initiating a P2A/A2P application data channel establishment. The figure depicts the interaction between the UE and the Access and Mobility Management Entity (AMME) in a 5G network. The UE sends a request to the AMME, which then coordinates with the eNodeB to establish the data channel. The figure shows the exchange of messages between the UE, AMME, and eNodeB, highlighting the role of the AMME in managing the data channel establishment process. The figure is essential for understanding the complex interactions between different network entities in a 5G network.\nFigure 6.20.2.5-1: UE Initiated P2A/A2P Application Data Channel Establishment\n0-3.\tSteps 0-3 of clause 6.20.2.3 applies.\n4.\tAfter receiving the session event notification, the DCSF determines the policy about how to process the application data channel establishment requirement based on the related parameters in the notification and/or operator strategy.\n5.\tDCSF determines (in this example) that the added application data channel media of the offer takes DC Application Server as target endpoint requiring anchoring in the local DCMF or enhanced MRF. DCSF communicates with the DC Application Server for DC resource control; and when application data channel is established, DC application server will send/receive traffic to/from UE#1 through MDC2.\nNOTE:\tDetails on how the DCSF communicates with the DC Application Server via DC4 is out of scope of Release 18.\n6.\tDCSF invokes Nimsas MediaControl service to instruct IMS AS to connect media to DCMF including information on how to relay data channel media via the MDC2 interface.\n7.\tIMS AS invokes DCMF service to instruct DCMF on Data Channel establishment and data channel media resource reservation based on the DC media information received from DCSF. For IMS AS to stand alone DCMF, DC2 is used to reserve data channel media resources. If enhanced MRF is used, IMS AS uses Mr'/Cr to enhanced MRF to reserve data channel media resources.\n8.\tIMS AS notifies the MediaControl instruction control response to DCSF.\n9.\tThe DCSF stores the media resource information and establishes MDC1 connections with DCMF or enhanced MRF for application DC traffic to UE#1 and replies to the Nimsas notification request.\n10-11.\tIMS AS sends the reINVITE which does not include the SDP offer for application data channel to originating S-CSCF and then to remote network side and UE#2.\n12-14.\tUE#2 and terminating network returns a 200 OK response with SDP answer for audio/video.\n15.\tIMS AS notifies the DCSF about the successful result of the MediaChangeRequest event.\n16.\tDCSF replies to the notification.\n17-18.\tThe IMS AS includes SDP answer for application data channels to UE#1 in 200 OK response and sends 200 OK response to S-CSCF and P-CSCF.\n19.\tThe originating network P-CSCF executes QoS procedure for application data channel media based on the SDP answer information from the 200 OK response.\n20.\tP-CSCF returns the 200 OK response to UE#1.\n21.\tUE#1 send ACK to the terminating network.\n22.\tThe application data channel between UE#1 and DC Application Server is established via DCMF or enhanced MRF. DCMF or enhanced MRF forwards data channel traffic between UE#1 and DC Application Server based on MDC2 media point information received in step 6.\nAccording to clause 6.2.10.1 of TS 26.114 [6], the UE can send a HTTP GET Request for the root (\"/\") URL through the bootstrap data channel which is replied with a data channel application describing the graphical user interface and the logic needed to handle any further data channel usage beyond the bootstrap data channel itself. The graphical user interface should be subscriber specific e.g., it should only contain applications for which the user has subscribed to and is authorized to use. To provide a subscriber specific data channel application list via the bootstrap data channel, the DCSF, when receiving call event notification including subscriber specific information from the IMS AS, creates the URL identifying the graphical user interface for this subscriber. The DCSF provides the URL via the IMS AS to the DCMF or enhanced MRF during data channel media resource reservation for the bootstrap data channel. The DCMF or enhanced MRF associate this URL with the bootstrap data channel. Once the DCMF or enhanced MRF, acting as HTTP proxy, receive a HTTP GET Request containing the root URL through the bootstrap data channel, the DCMF or enhanced MRF replace the root URL in the HTTP GET Request with the subscriber specific URL and forward the request to the DCSF for downloading the subscriber specific graphical user interface.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.20.3\tNetwork Function Services",
                            "text_content": "The following table illustrates the DCMF Services and Service Operations.\nTable 6.20.3.1.1-1: NF services provided by the DCMF\n\nNOTE:\tIn this Release, the IMS AS supporting data channel is TAS.\n6.20.3.1.2.1\tGeneral\nService description: This service enables the DCMF to create, update and delete media resources related to IMS Data Channel. The media resources include Mb media resources and resources related to media path between DCMF and DCSF.\n6.20.3.1.2.2\tNdcmf_MRM_Create service operation\nService operation name: Ndcmf_MRM_Create\nDescription: The consumer NF requests the DCMF to create and reserve a media resource to originate/terminate IMS Data Channel media flow.\nInputs, Required: DCMF media specification.\nDCMF media specification includes remote media point information, i.e. IP address, ports used by the DCMF to handle IMS Data Channel media flows towards the DCSF. The DCMF media specification may also include information specifying IMS data channel attributes to be offered by the DCMF in case the data channel shall take the remote NW as target.Inputs, Optional: Mb media specification, Replacement URL\nMb media specification includes media description information derived from m line, c line and SDP parameters in the SDP offer/answer, for the Mb interface required by the DCMF. If this parameter is omitted from the Create operation, then this means that IMS AS requests DCMF to provide a Mb resource offer.\nReplacement URL is the URL identifying the resource in DCSF, e.g. graphical user interface, specific to a subscriber which provides the instruction of DC applications to be requested and downloaded to the UE. The DCMF uses this URL to replace the root URL in the HTTP GET Request from the UE.\nOutputs, Required: Result indication, DCMF resource identity, Mb media resource information.\nDCMF resource identity uniquely identifies the media resource within the producer instance. This identity shall be used as reference when updating or deleting the created media resource.\nMb media resource information includes media flow information over Mb, e.g. local IP address and ports, which is used by the consumer NF to generate SDP offer or answer.\nOutputs, Optional: DCSF media resource information.\nDCSF media resource information includes local media point (IP address, port number) on DCMF towards DCSF, which is forwarded to the DCSF by the consumer NF.\nNOTE:\tThe details of media specifications and media resource information is defined in normative work and also in stage 3.\n6.20.3.1.2.3\tNdcmf_MRM_Update service operation\nService operation name: Ndcmf_MRM_Update\nDescription: The consumer NF requests the DCMF to update media resources.\nInputs, Required: DCMF resource identity.\nDCMF resource identity specifies the media resource to be updated.\nInputs, Optional: Mb media specification, DCMF media specification.\nMb media specification includes updated media information for the Mb interface.\nDCMF media specification includes updated media information for the DCMF.\nOutputs, Required: Result indication.\nOutputs, Optional: Mb media resource information, DCSF media resource information.\nMb media resource information includes modified Mb media resource information if present.\nDCSF media resource information includes modified DCSF media resource information if present.\n6.20.3.1.2.4\tNdcmf_MRM_Delete service operation\nService operation name: Ndcmf_MRM_Delete\nDescription: The consumer NF requests the DCMF to delete media connections of a media flow and release corresponding media resource.\nInputs, Required: DCMF resource identity.\nDCMF resource identity specifies the media resource to be deleted.\nInputs, Optional: None.\nOutputs, Required: Result indication.\nOutputs, Optional: None.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.20.3.1.1-1: NF services provided by the DCMF",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.5.3\tImpacts on existing nodes and functionality",
                            "text_content": "UE impacts:\n-\tThe UE supports indicating its DC capability and discovery of network DC capability;\n-\tThe UE supports SDP negotiation enhancements for bootstrap data channel and application data channel;\n-\tThe UE supports data channel application request, downloading and DC media handling.\nP-CSCF impacts:\n-\tP-CSCF supports media resource reservation and modification for bootstrap data channel and application data channel.\nIMS AS impacts:\n-\tIMS AS supports service based discovery and selection of DCSF, DCMF and enhanced MRF;\n-\tIMS AS supports call event notification to DCSF via DC1 interface;\n-\tIMS AS supports DC media management with DCMF via service based DC2 interface and to enhanced MRF via Mr'/Cr interface.\nNEF impacts:\n-\tExposure for data channel capabilities.\nMRF impacts:\n-\tMRF supports data channel media handling when enhanced with DC media functionality.\nNRF impacts:\n-\tNRF supports service based discovery and selection of DCSF, DCMF and enhanced MRF.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.21\tSolution #21: Interworking between a DCMTSI client in terminal and an MTSI client in terminal",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.21.1\tDescription",
                            "text_content": "Some data channel use cases do not require interaction from both ends. For example, in Real-time Sharing Screen use case specified in TR 22.873, only the sharing party shares its mobile screen to other parties through data channel supported by its DCMTSI client in terminal, and the other parties only need to receive the sharing screen media stream, which could be transferred over video media streams supported by all the MTSI client in terminals. Hence, if these data channel services can be supported between a DCMTSI client in terminal and an MTSI client in terminal, it would speed up the commercial deployment process of IMS data channel.\nThis solution proposes a method to achieve the one-sided interactive communication between a DCMTSI client in terminal and an MTSI client in terminal.\nIn addition to those functions defined in other solutions, the Data Channel Signalling Function (DCSF) also need to provide:\n-\tControls interworking between a DCMTSI client in terminal and an MTSI client in terminal.\nIn addition to those functions defined in other solutions, the Data Channel Media Function (DCMF) also need to provide:\n-\tSupports of interworking between a DCMTSI client in terminal and an MTSI client in terminal. That is, it supports to correlate application data channels with video media streams, decapsulates data over the application data channels from a DCMTSI client in terminal, encapsulates and sends these data over video media streams to an MTSI client in terminal. It also includes anchoring audio/video media streams.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.21.2\tProcedures",
                            "text_content": "The procedures described in this clause is applied to some data channel use cases in which it's a video session and only unidirectional interaction is needed between both UEs.\nFor example, in Real-time Sharing Screen use case, only UE A supports IMS data channel and it establishes application data channels with the DCMF in its local network and transfers its mobile screen data, including RTP stream and RTCP stream, over the application data channels. The DCMF decapsulates RTP data and RTCP data from the data channels, encapsulates and sends these data through video media streams to UE B. Figure 6.21.2.1-1 depicts the workflow below.\nFigure 6 illustrates the interworking between a DCMTSI client in terminal and an MTSI client in terminal, showcasing the communication process between the two systems. The diagram highlights the exchange of messages and data packets, emphasizing the synchronization and coordination between the two clients. The figure also demonstrates the use of a terminal server, which facilitates the interaction between the clients and the central server, ensuring seamless communication and efficient data transfer.\nFigure 6.21.2.1-1: Interworking between a DCMTSI client in terminal and an MTSI client in terminal\nFigure 6.21.2.1-2 demonstrates the procedure of UE-initiated bootstrap data channel establishment between network A and UE A (a DCMTSI client in terminal), while an IMS video call is established between UE A and UE B (an MTSI client in terminal).\nFigure 6 illustrates the process of bootstrap data channel establishment between a DCMTSI client in terminal and an MTSI client in terminal, as defined by 21.2.1-2. The figure depicts the steps involved in the procedure, including the initial synchronization, channel access, and data transfer between the two clients. The visual representation emphasizes the importance of this process in ensuring seamless communication and interoperability between different types of clients within a terminal.\nFigure 6.21.2.1-2: Bootstrap data channel establishment procedure for interworking between a DCMTSI client in terminal and an MTSI client in terminal\n1-8.\tUE A completes media negotiation with local network through INVITE/18X/200 procedure and the dedicated bearer/QCI Flow of data channel is created between UE A and its local network. Based the updated DC media description information reported by the MMTel AS A, in which the port of bootstrap data channel between the DCSF A and UE B is set zero, the DCSF A knows that UE B or network B does not support IMS data channel.\nNOTE:\t\"a=3gpp-qos-hint\" line in SDP is used to indicate specific loss and latency characteristics desired by the data channel applications. As specified in Annex A, clause A.20 of TS 29.214 [26] and Annex B, clause B.16 of TS 29.514 [27], the P-CSCF will provide the PCRF/PCF with the desired loss and latency characteristics and the PCRF/PCF will map the data channel media in SDP to an appropriate QoS.\n9-11.\tAfter the precondition procedure is completed, UE A initiates SCTP association and DTLS connection establishment procedures and establishes a bootstrap data channel with the DCMF A. Then UE A retrieves the bootstrap application and the data channel application list from the DCSF A. The data channel application list may include all data channel applications or only contain the data channel applications which can be workable for interworking between a DCMTSI client in terminal and an MTSI client in terminal. If all data channel applications are included in the list, the indications to the applications which are workable for interworking should be sent to UE and demonstrated to the user. The user downloads application e.g. Real-time Screen Sharing application from the DCSF A. At the same time, the IMS video session is connected and video stream is transferred between UE A and UE B.\nAfter UE A retrieves Real-time Screen Sharing application from the DCSF A and run the application, the following procedure shown in Figure 6.21.2.1-3 is performed to transfer UE A's mobile screen data to UE B.\nFigure 6 illustrates the step-by-step procedure for establishing an application channel between a DCMTSI client in terminal and an MTSI client in terminal for interworking. The figure outlines the process, which includes the exchange of messages between the two clients, the establishment of a connection, and the transmission of data. The figure is a valuable resource for understanding the technical details involved in the interworking process between these two types of clients.\nFigure 6.21.2.1-3: Application channel establishment procedure for interworking between a DCMTSI client in terminal and an MTSI client in terminal\n1.\tUE A initiates a re-INVITE request to negotiate application data channel media with the local network, in which two application data channels (stream 1000 and 1001) are contained. Stream 1000 is used to transfer video RTP stream of screen shots sequence and stream 1001 is used to transfer RTCP stream.\n2.\tThe MMTel AS A reports the media event of data channel the DCSF A.\n3.\tBased on the initial SDP O/A media negotiation, the DCSF A knows that UE B or network B could not support IMS data channel. In addition to the App info carried in the report from the MMTel AS A, the DCSF A could decide that it need to start one-side data channel procedure in this IMS session. If the one-side data channel procedure is not applied to this App, the DCSF A should indicate the MMTel AS A to reject this re-INVITE request.\n4.\tThe DCSF A send a Data Channel Control Request to the MMTel AS A and indicates it to create two application data channels (stream 1000 and 1001).\n5.\tThe MMTel AS A send a Media Resource Management Request to the DCMF to allocate resource for two application data channels (stream 1000 and 1001).\n6.\tThe DCSF A indicates the MMTel AS A to anchor the video media streams of UE B to the DCMF A, then the MMTel AS A controls the DCMF A to allocate video resource.\n7-9.\tThe MMTel AS A sends a re-INVITE request with the SDP offer for anchoring the video media of UE B to the DCMF A. UE B returns 200 OK with its SDP answer. Then the MMTel AS A sends ACK to UE B.\n10-11.\tThe MMTel AS A sends 200 OK for re-INVITE initiated by UE A and UE A returns ACK.\n12.\tUE A initiates SCTP association and DTLS connection establishment procedures and establishes two application data channels (stream 1000 and 1001) with the DCMF A.\n13.\tThe MMTel AS A reports a Media Event to the DCSF A, and reports that anchoring video stream is successful.\n14.\tThe DCSF A indicates the MMTel AS A to continue the call process, then the MMTel AS A controls the DCMF A to associate application data channel stream 1001 and 1002 between UE A and the DCMF A with the allocated video streams between UE B and the DCMF A.\nThen the application data channels (stream 1001 and 1002) between the DCMF A and UE A are associated with the RTP and RTCP video streams between the DCMF A and UE B. The RTP and RTCP stream of UE A's screenshot sequence is received by UE B from video streams.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.21.3\tImpacts on Existing Nodes and Functionality",
                            "text_content": "This solution has some requirements on the existing IMS nodes below:\nMMTel AS:\n-\tSupport triggering media re-negotiation to anchor video media to the DCMF according to the requests from the DCSF.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.22\tSolution #22: Application Data Channel establishment based on application ID",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.22.1\tDescription",
                            "text_content": "After bootstrap DCs are established for an IMS session, DCMTSI UEs may download DC applications from the DC server and trigger the establishment of DCs for the selected applications.\nThe DC Server may determine to establish application DCs based on the SDP offer provided by DCMTSI UE with the following route selections:\n-\tDirect DC connection between UEs;\n-\tAnchoring the DCs in the DC Server (e.g. DCS-M, DCMF, MRF);\n-\tForwarding DC streams to/from 3pty Web RTC Applications;\n-\tForwarding DC streams to/from AR Server (or other Application Servers).\nBased on the existing information in the SDP Offer specified in TS 26.114, the DC Server is not able to know which application is going to be transferred in the requested DC, and may not able to determine the proper traffic route selection for the DC establishment.\nWhen an DCMTSI UE sends an SDP Offer for the establishment of an application DC, an optional information of the triggered DC Application ID is included in the SDP Offer. The DC Server may check the traffic requirement of the specific DC Application ID and  determine the route selection for the DC establishment.\nWhen multiple Application Data Channels with different route (e.g. P2P or P2A) are supported in a DC application, additional information associated with the DC application ID may be required to assist the route selection (e.g. P2P or P2A) of each Data Channel.\nNOTE:\tHow to indicate the additional information associated with a DC application ID offered and selected in SDP should be defined in CT1/SA4.\nIf the DC Application ID is not available in the SDP Offer, the DC Server may determine the route selection based on MNOs policy (e.g., direct DC connection between DCMTSI UEs).\nEditor's note:\tOther ways to determine the route selection policy besides DC Application ID and MNOs policies are FFS.\nData transmission on data channels shall not start until there is confirmation that both peers have downloaded the selected DC applications and instantiated the corresponding data channels.\nWhen an DCMTSI UE sends an SDP Offer for the establishment of an application DC, an optional information of the triggered DC Application ID is included in the SDP Offer. Upon receiving the DC Application ID, the peer UE checks the availability of the DC application and may trigger the downloading of the same DC application before sending the SDP Answer.\nIf the DC Application ID is not included in the SDP Offer, it is assumed that the peer UE has already instantiated the DC application, e.g. the DC application is pre-configured in the UE, or peer UE has downloaded all the available DC applications from the DC Servers.\nDC Application ID is used to uniquely identify a DC Application in the IMS networks, which can be included in the SDP media description of DC as an optional line to identify the association of DC with the serving application.\nThe DC Application ID may be specified as following options:\n-\tAllocated by IMS network provider, which may include following information:\n-\tPLMN ID (include MNC + MCC);\n-\tData channel application providers (user or network provider);\n-\tDC Application Number, (allocated by the network provider);\n-\tDC Application Name (optional, human readable information).\n-\tURI/URL of the DC Application stored in the DC Server or DC Application Depository.\n-\tAllocated by third party AF or HLOS, defined the same as in TS 23.503 [4].\nThe DC Application ID can be contained in SDP media description via specifying a new attribute for DC Application ID.\nExample of DC attributes for DC Application ID:\na=dcapp-id=\"DC Application #1\"\nNOTE:\tHow to indicate the application offered and selected in SDP should be defined in CT WG1/SA WG4.\nThe DC Application ID is allocated by MNO or retrieved from DC Application provider when the DC Application is uploaded to DC Server or DC Application Repository.\nDC Server may be configured with a DC Application profile associated with the DC Application ID, which indicates the characteristic of the DC Application (e.g. AR application) and traffic route policy for the DC control (e.g., UE to UE connection, anchored in DC Server, FQDN of associated application server).\nThe allocated DC Application ID can be contained in the DC application package or signalled to the UE when the DC application is downloaded in bootstrap DC. When the UE initiating the DC for an application, the DC Application ID is included in the SDP media description.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.22.2\tProcedures",
                            "text_content": "Figure 6 illustrates the step-by-step procedure for establishing a Distributed Denial of Service (DDoS) attack mitigation domain (DC) in a network. The figure outlines the process, starting with the detection of an attack and continuing through the establishment of the DC, the activation of the DC, and the eventual termination of the attack. The figure emphasizes the importance of timely and effective DDoS attack mitigation, as well as the role of network elements such as the Network Management System (NMS) and the Security Information and Event Management (SIEM) system in the overall process.\nFigure 6.22.2.1-1: Procedure of application DC establishment\n0.\tBootstrap DCs are established for UE_A and UE_B. UE_A downloads the selected DC application via bootstrap DC. The DC Application ID is obtained when UE_A downloading the DC application.\n1.\tUE_A sends an SDP offer for the establishment of an application DC, which may contain the DC Application ID in the SDP media description.\n2.\tUpon receiving the SDP Offer, IMS_AS sends a service request with the DC Application ID to the signalling function of DChS for the creation of a DC . If the DC application is a local application, the DChS determines the DC control policy (e.g. traffic route) of the DC based on the associated DC Application profile. If the DC creation request intends to open a remote application from the UE, as specified in TS 26.114 [6], the DChS may reject the DC creation request.\nNOTE:\tIf the DC Application ID is not available in the SDP Offer, the DC Server may determine the route selection based on MNOs policy (e.g., direct DC connection between DCMTSI UEs).\n3.\tThe signalling function of DChS sends a service response with the DC control policy to the IMS_AS.\n4.\tThe IMS_AS requests Data Channel media function to allocates related media resource for the DC, and may further establish media connection to Other_AS (e.g., AR Application Server, 3rd party WebRTC Server).\n5.\tThe SDP Offer with DC Application ID is sent to the terminating IMS_AS.\n6.\tThe IMS_AS_B sends a service request to the signalling function of DChS_B for the creation of the DC. When DCS_B finds the received DC Application ID is not a local application, it determines not to anchor the data channel.\n7.\tThe DChS_B sends a service response with the DC control policy.\n8.\tThe SDP Offer with DC Application ID is sent to the UE_B. The user of terminating UE decides to accept or reject to use the DC application which is identified by the received DC Application ID/Name.\n9.\tIf the user accepts the DC application, the terminating UE checks whether the identified DC Application is instantiated. If not, the terminating UE requests the downloading of the DC application via bootstrap DC. The UE also need to associate the DC traffic with the identified DC application.\n10.\tUE_B returns 200 OK.\n11.\tThe application DCs and corresponding media connections to Other_AS are established according to the DC route configuration instruction from DChS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.22.3\tImpacts on Existing Nodes and Functionality",
                            "text_content": "DChS is enhanced to support:\n-\tRetrieving or allocating DC Application ID when a DC application is provided and uploaded to the DC Application Repository. Retrieving and storing the DC application profile in the DC Server.\n-\tDelivering the associated DC Application IDs when a UE downloading DC applications.\n-\tDetermining DC control policy according to the DC Application ID.\nUE is enhanced to support following functionalities:\n-\tAdding DC Application ID in the SDP offer when initiating SDP negotiation for the DC .\n-\tTriggering the downloading of identified DC Application via the bootstrap DC.\n-\tAssociating the DC traffic with the identified DC application.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.23\tSolution #23: UE capabilities detection for IMS DC applications",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.23.1\tDescription",
                            "text_content": "This solution is proposed in order to address WT#5.1: Key Issue on enhancement to support Data Channel usage in IMS networks.\nIMS network or third party may provide variety of DC applications to the DCMTSI UE, and each DC application may have different requirements for the UE capabilities for its execution . At the same time, DCMTSI UE may support a variety of capabilities that can be invoked by DC applications. Before a DCMTSI UE is going to download a DC application, the UE or IMS network need to check whether the required capabilities of the DC application can be supported by the UE and to determine whether the DC application can be downloaded to the UE.\nAs an example, SA WG4 defines media capabilities several 3GPP specifications:\n-\tTS 26.511 [29]: 5G Media Streaming (5GMS); Profiles, codecs and formats\n-\tTS 26.116 [30]: Television (TV) over 3GPP services; Video profiles\n-\tTS 26.117 [31]: 5G Media Streaming (5GMS); Speech and audio profiles\n-\tTS 26.118 [32]: Virtual Reality (VR) profiles for streaming applications\n-\tTS 26.119 [33] (under development in Rel-18): Media Capabilities for Augmented Reality\nThe example of UE capabilities that might be used by DC applications may include:\n-\thardware capabilities, including\n-\tvideo encoding and decoding capabilities\n-\taudio encoding and decoding capabilities\n-\tother media capabilities such as haptics, etc.\n-\tsupport for multiple encoders/decoders in parallel\n-\trendering capabilities\n-\tvisual rendering capabilities, such as GPUs\n-\taudio rendering capabilities\n-\tCapturing capabilities\n-\tvisual capturing capabilities, such as 2D and 3D cameras\n-\taudio rendering capabilities, such as microphones, arrays of microphones\n-\tSensor and Tracking capabilities\n-\tSupport for positioning\n-\tSupport for pose recognition\n-\tOther AR Runtime capabilities\n-\tStorage (W/R)\n-\tConnectivity\n-\t5G capabilities\n-\tNon 3GPP access networks, e.g. WiFi/BT.\nNOTE 1:\tThe definition of UE capabilities to be used by DC applications is out of SA WG2 scope.\nIt is assumed when a DC application is uploaded to DC server, the required UE capabilities are provided and stored in the manifest of the application. A DC Bootstrap Application installed in the UE retrieves allowed DC application lists from DC Servers and renders the list for user selection. The DC Bootstrap Application is preconfigured in the UE or downloaded from DC server via Bootstrap DC.\nFollowing two options are proposed for UE capabilities negotiation:\n-\tOption A: the UE retrieves the allowed DC application lists including required UE capabilities for each application from the DC Servers via Bootstrap DC. The Bootstrap Application in the UE checks the application lists against the UE capabilities. If the UE does not have needed capabilities, the corresponding DC application will not be shown/enabled for such UE.\n-\tOption B: when retrieving the DC application list, the Bootstrap Application in the UE sends its capabilities to the DC Server via Bootstrap DC. The DC Server checks the application lists against the UE capabilities. If the UE does not have needed capabilities, the corresponding DC application will be removed from the application list. The validated DC application list is sent to the UE.\nNOTE 2:\tBoth options A and B are over-the-top solutions and have no impacts to 3GPP defined architectures and procedures.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.23.2\tProcedures",
                            "text_content": "Figure 6 illustrates the process of detecting a user equipment's (UE) capabilities for distributed computing (DC) applications. The figure showcases the interaction between the UE and a cloud-based server, highlighting the various stages of data transmission and processing. Key elements include the UE, cloud server, and the underlying network infrastructure. The figure emphasizes the importance of real-time data analysis and the optimization of network resources for seamless DC application performance.\nFigure 6.23.2-1: Detection of UE capabilities for DC applications\n1.\tIn an MMTel session, the bootstrap data channels are established between UEs and the DC Server.\n2-3.\tUE downloads via bootstrap DC a Bootstrap Application (or pre-configured in the UE).\n4.\tOption A: the UE-A retrieves an allowed DC application list from DC Server via bootstrap channel, including capability/resource needed for each applications.\nOption B: the UE-A sends its capabilities to the DC Server via Bootstrap DC. The DC Server checks the applications against UE capabilities, and response with a refined DC application list.\n5. Same procedure as step 4 for UE-B.\nNOTE:\tFor option B, the DC Server may take into account the capabilities received in steps 4a and 5a to derive a common application list for both UE-A and UE-B before performs steps 4b and 5b.\n6.\t(Only applies for option A) The Bootstrap Application in the UE refines the DC application list against the UE capabilities. If UE does not have needed capabilities, the corresponding DC application may be removed from the application list.\n7.\tThe Bootstrap Application displays the supported DC application list in the UE-A for user selection.\n8-9.\tSame procedures as steps 6-7 for UE_B.\n10. The UE triggers the establishment of Application DC upon user selection.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "7\tOverall Evaluation",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "7.1\tEvaluation on Key Issue #1",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.1.1\tArchitecture and procedure enhancements",
                            "text_content": "Solution #1, #2, #3, #6, #7 and #16 have proposed architecture and procedure enhancements on how IMS network supports data channel. The evaluation is as follows:\nSolution #1:\nThis solution is proposed only for A2P/P2A scenario. It supports split of DC control function and media function with two options to control DC media function:\n-\tOption 1: DC media function is standalone and is controlled by DC control function, which requires DC control function directly controlling the media resource of DC.\n-\tOption 2: DC media function is integrated in MRF and is controlled by DC control function via IMS AS. DC control function does not directly control the media resource of DC.\n-\tThe subscribe/notify pattern is used for DC event notification from IMS AS to DC control function, which requires DC control function subscribing to all IMS AS.\nSolution #2:\nThis solution enhances IMS AS to be the DC control function, which makes decision of DC and control DC server to manage DC media resource.\n-\tThe DC server further control MRF via service based interface for media resource management.\nSolution #3:\nThis solution supports split of DC control function and media function by introducing DCS-C for DC control and DCS-M for media control.\n-\tThe subscribe/notify pattern is used for DC event notification from IMS AS to DC control function, which requires DCS-C subscribing to all IMS AS.\n-\tDCS-C makes decision of DC usage and controls DCS-M for DC resource management via IMS AS. DCS-C does not directly control the media resource of DC.\nSolution #6:\nThis solution is similar to solution #3. It supports split of DC control function and media function by introducing DCSF and DCMF.\n-\tThe IMS AS reports DC event to DCSF with request/response pattern.\n-\tDCSF makes decision of DC usage and controls DCMF for DC resource management via IMS AS. DCSF does not directly control the media resource of DC.\nSolution #7:\nThis solution supports split of DC control function and media function.\n-\tThe IMS AS reports DC event to DC control function with request/response pattern.\n-\tDC media function is controlled by DC control function, which requires DC control function directly controlling the media resource of DC.\nSolution #16:\nThis solution introduces DCSF as DC control function and enhances MRF to support DC media function.\n-\tThe IMS AS reports DC event to DCSF with request/response pattern.\n-\tDCSF makes decision of DC usage and controls DCMF for DC resource management via IMS AS. DCSF does not directly control the media resource of DC.\nSolution #18:\nThis solution introduces the procedure for negotiation of the data channel application(s) used in the call between UEs.\n-\tThe user of terminating UE has the capability to decide whether to use the data channel application(s) selected by initiating UE before downloading the data channel application(s).\nSolution #20:\nThis is a merged solution trying to produce a joint proposal based on the existing solutions for KI #1.\n-\tThe architecture separates signalling function and media function supporting Data Channel. A new service based function, Data Channel Signalling Function (DCSF), is introduced. For media function supporting Data Channel, 2 options are proposed: enhanced MRF, or a new service based function called Data Channel Media Function (DCMF).\n-\tThe procedures for UE initiated bootstrap DC establishment, UE initiated application DC establishment for P2P and P2A/A2P usage are described.\n-\tThe IMS AS selects the DCSF and also gets the notification endpoint of the DCSF for DC event notification, either via local configuration or via NRF. The interaction between IMS AS, DCSF and DCMF uses service based interfaces.\nSolution #21:\nThis solution proposes using DCSF/DCMF to support interactive communication between a DCMTSI client and an MTSI client.\n-\tThe procedures of bootstrap DC and application DC establishment for interworking between a DCMTSI client and an MTSI client are described.\n-\tThe DCMF decapsulates RTP/RTCP data from the data channels connected to DCMTSI client, then encapsulates and sends these data through video media streams to MTSI client.\nSolution #22:\nThis solution introduces DC Application ID contained in SDP to identify the association of DC with the serving application, when an DCMTSI UE sends an SDP Offer for the establishment of an application DC.\n-\tThe DC Server may check the traffic requirements against the DC Application ID and determine the route selection for the DC establishment.\n-\tUpon receiving the DC Application ID, the peer UE checks the availability of the DC application and may trigger the downloading of the same DC application before sending SDP Answer if the user accepts to use it in the call.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.2\tDC capability discovery",
                            "text_content": "Solution #4, #5 and #23 propose solutions on how to define DC capabilities and how the capability of supporting DC is mutually discovered between network and UE. The evaluation is as follows:\nSolution #4:\nThe networks discover UE DC capability as follows:\n-\tThe home network discovers UE DC capability based on +sip.app-subtype media feature tag in Register request as specified in TS 24.229 [8].\n-\tThe remote network discovers UE DC capability based on +sip.app-subtype media feature tag in initial INVITE request or 18X/200 OK response as specified in TS 24.229 [8].\nThe UE discovers network capability as follows:\n-\tThe UE discovers DC capability of home network based on Feature-Caps header in 200 OK to Register request as specified in TS 24.229 [8].\n-\tThe UE discovers DC capability of remote network according to whether the SDP info for DC is included.\nSolution #5:\nThis solution proposes two types of DC capability, one of which is indication of whether UE or network supports DC, the other is the detailed capabilities of supporting DC.\nFor indication of whether UE or network supports DC:\n-\tThe home network discovers UE DC capability based on +sip.app-subtype media feature tag in Register request as specified in TS 24.229 [8].\n-\tThe network includes an indication of whether the UE is allowed to use IMS Data Channel in the 200 OK response for Registration request.\nFor the detailed capabilities of supporting DC, there are 3 options to transfer the capabilities from UE to network:\n-\tOption 1: report of IMS Data Channel capabilities in SIP Register request via IMS registration procedure;\n-\tOption 2: report of IMS Data Channel capabilities via bootstrap DC when the UE requests Data Channel applications;\n-\tOption 3: report of IMS Data Channel capabilities in SIP INVITE/reINVITE request when the UE establishment the bootstrap data channel.\nOption 1 and option 3 may need stage 3 standardization, while option 2 is on application level that can be implementation specific.\nSolution #23:\nThis solution proposes two options for UE capability negotiation:\n-\tOption A: the UE retrieves the allowed DC application lists including required UE capabilities for each application from the DC Server (DCSF) via the Bootstrap DC. If the UE does not have needed capabilities, the corresponding DC application will not be shown/enabled for such a UE.\n-\tOption B: when retrieving the DC application list, the Bootstrap Application in the UE sends its capabilities to the DC Server (DCSF) via the Bootstrap DC. The DC Server checks the application list against the UE capabilities. The validated DC application list is replied to the UE.\nNOTE:\tBoth options do not require any normative changes in 3GPP specifications.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.2\tEvaluation on Key Issue #2",
                    "description": "",
                    "summary": "",
                    "text_content": "For Key Issue #2, the following solutions are proposed:\n-\tSolution#8 mainly proposes the following:\n-\tThe data channel could be used to transfer the AR specific data during the session for some AR telephony communication; and UE renders AR content based on these specific data. The solution does not suggest specific IMS architecture enhancements to support AR telephony communications.\n-\tFor supporting AR telephony communication service based on data channel, the high-level 3 phase procedures are described which include: procedures of normal multimedia part of AR telephony communication, procedures of bootstrap DC establishment and application acquirement, and procedures of application DC establishment and data exchange for AR telephony communication.\n-\tSolution#9 mainly proposes the following:\n-\tBesides being based on the data channel architecture, this solution defines two specialised network functions to enable network rendering: the AR Application Server NF which includes AR media rendering negotiation and AR service handling; and the AR Media Function NF.\n-\tFor terminal rendering process, it uses the same procedure as described in Solution#8.\n-\tFor network rendering process, IMS performs AR media rendering based on AR media received from the calling or the called users, and then IMS sends rendered AR media using normal audio/video streams through RTP channel to the calling or called user. The partial media rendering by splitting the rendering tasks between terminal and network is also described.\nNOTE:\tAlignment is required with SA4 for the network rendering procedures as it provides the media negotiation procedures.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.3\tEvaluation on Key Issue #3",
                    "description": "",
                    "summary": "",
                    "text_content": "Five solutions were proposed for KI#3: #10, #11, #12, #13, #19.\nThree solutions refer explicitly to STIR/SHAKEN: #10, #12, #19.\nOne solution refers to signing and verification of SIP headers but does not mention STIR/SHAKEN explicitly: #11\nIn the following table solutions are classified based on following categories (Y=YES, N=NO, more details in brackets):\n-\tSolution is applicable to UNI (SIP UA) and NNI (IP PBX) case\n-\tSolution re-uses STIR/SHAKEN framework and related IETF RFCs/drafts\n-\tSolutions is impacting existing IMS procedures (e.g., SIP headers)\n-\tSolutions requires new/adapted function(s) in the IMS\n-\tSolution requires new/adapted function(s) in the Enterprise network\nTable 7.3-1\n\n",
                    "tables": [
                        {
                            "description": "Table 7.3-1",
                            "table number": 6,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.4\tEvaluation on Key Issue #4",
                    "description": "",
                    "summary": "",
                    "text_content": "Solution #14, #15 and #17 are related to KI#4. The evaluation is as follows:\n-\tSolution #14\nThis solution proposes extending existing NRF services to support registration and discovery of MRF which supports both legacy and new capabilities. New media capabilities are defined and used for MRF registration and selection.\nThe solution supports both integrated MRF and distributed MRFC/MRFP.\n-\tSolution #15\nThis solution proposes a service based framework of IMS media plane.\nIt introduces concept of Media plane network function service (NFS) and Unified Media Function (UMF), by which the functionalities of IMS network entities are dissembled as NFS and are requested from UMF by consumer NFs.\nThe registration of UMF and media capability discovery is based on NRF enhancements.\nIn this release, UMF only supports functionality of IMS-AGW.\n-\tSolution #17\nThis solution proposes extending existing NRF services to support registration and discovery of DCMF. The media capabilities of DCMF are referring to solution #14 and used for DCMF registration and selection.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "8\tDeployment Guideline",
            "description": "Editor's note:\tThis clause captures deployment guidelines for typical edge computing use cases.\n\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "9\tConclusions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "9.1\tConclusions of Key Issue #1",
                    "description": "",
                    "summary": "",
                    "text_content": "The following conclusions are agreed for IMS DC architecture:\n-\tThe data channels shall be established in the context of an IMS MMTel session. Standalone data channels without accompanying media in an IMS MMTel session are not supported in this Release.\n-\tThe signalling function and media function supporting Data Channel are logically separated from each other.\n-\tTo fulfil different requirements of IMS migration to support DC, the DC media function can be provided by enhancing the existing IMS MRF reusing Mr'/Cr interface to the IMS AS or by a new service based function supporting a new SBA interface to the IMS AS. The architectures of IMS supporting Data Channel for both options are specified in solution #20 and are used as the basis for normative work.\n-\tDCSF and DCMF registration, discovery and selection follows SBA principles as outlined in Solution #17. DCSF and DCMF profiles are being defined during normative phase.\nNOTE 1:\tIt is still to be decided whether a single DCSF will be used for IMS AS discovery or more than a single DSCF can be used depending on the DCSF Registration in NRF.\nNOTE 2:\tOther information used in DCSF registration and for DCSF discovery is specified during normative work.\n-\tThe signalling function supporting Data Channel interacts with IMS AS for call event notification and management of data channel media. Such interaction is based on service based interface principles. Solution #20 is used as basis for normative work related to interactions between IMS AS And DC signalling function.\n-\tThe signalling function is not involved in SIP/SDP negotiation.\n-\tIMS AS exclusively controls media resources for data channel purposes.\n-\tThe IMS AS interacts with media function supporting Data Channel for data channel resource management. Solution #20 is used as basis for normative work related to interactions between IMS AS and DC media function.\n-\tBoth, the UDP proxy and HTTP proxy media configurations for DCMF/enhanced MRF shall be specified.\n-\tThe DCSF shall provide a URL during bootstrap data channel establishment to the DCMF or enhanced MRF via the IMS AS that allows to download a subscriber specific graphical user interface to the UE via the bootstrap data channel. The DCMF or enhanced MRF, acting as HTTP proxy, when receiving a HTTP GET Request containing the root URL through the bootstrap data channel from the UE, shall replace the root URL in the HTTP GET Request with the subscriber specific URL that was received from the DCSF.\n-\tThe application data channel protocol is out of scope of 3GPP.\n-\tThe DCAR can be integrated in the signalling function supporting Data Channel or deployed standalone. In either case, the interface to DCAR and its functionality is out of scope of 3GPP and hence is not specified.\n-\tThe interaction between the signalling function supporting Data Channel and NEF is not standardized in this release.\nThe following interim conclusions are agreed for IMS DC capability discovery:\n-\tThe network discovers the UE support of DC based on existing mechanism as specified in TS 26.114 [6] and TS 24.229 [8].\n-\tThe UE discovers home network support for DC via the Feature-Caps header field in 200 OK during registration, as specified in solution #4.\n-\tThe discovery of UE capabilities required to use data channel applications is done via application level communication through the bootstrap data channel and is transparent to IMS.\nNOTE 3:\tUE capabilities exchange through the bootstrap data channel is an optional feature and out of scope of 3GPP. Whether a high-level description of this feature is required in a technical specification will be decided during normative phase.\nThe following conclusions are agreed for IMS application DC establishment:\n-\tInformation for the binding of DC Application with the related DC is required to support multiple, simultaneous DC applications in a UE. The UE is aware of the binding information, (e.g., DC Application ID as specified in solution #22) from Bootstrap DC. The binding information is sent from UE in SDP to assist DC route selection in the DC server and synchronize the DC application used in the call with peer UE(s).\nNOTE 4:\tIn normative phase, the definition of the binding information needs to be aligned with the future specification of SA WG4.\nWhen a UE is connected via 3GPP access and the use of mobile data is deactivated, the feature \"IMS data channel\" is not available via 3GPP access in Rel-18.\nNOTE 5:\tNo further work is required during normative phase on the data off aspect.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "9.2\tConclusions of Key Issue #2",
                    "description": "",
                    "summary": "",
                    "text_content": "The following conclusions are agreed for supporting AR telephony communication:\n-\tThe data channel architecture is used as baseline to support AR telephony communication. If the UE needs network support for media rendering, the architecture and procedures specified in Solution #9 are used. Otherwise, if the UE can perform the media rendering without network support, the procedures as specified in Solution #8 are taken as baseline for terminal rendering process.\nNOTE:\tThe media negotiation for network supported rendering between the UE and the network will be specified in SA WG4.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "9.3\tConclusions of Key Issue #3",
                    "description": "",
                    "summary": "",
                    "text_content": "Five solutions were proposed for KI#3 (sol #10, #11, #12, #13, #19). Out of these, three solutions refer explicitly to STIR/SHAKEN (sol #10, #12, #19) while one solution refers to signing and verification of SIP headers but does not mention STIR/SHAKEN explicitly (sol #11).\nIt is concluded that KI#3 will not progress for normative work in Rel-18.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "9.4\tConclusions of Key Issue #4",
                    "description": "",
                    "summary": "",
                    "text_content": "The following conclusions are agreed for service based IMS media control interfaces:\n-\tThe 5G service registration, discovery and selection applies to the MRF. The MRF profile is to be defined during normative work.\n-\tBaseline for defining service based principles for MRF is solution #14.\nThis Annex provides a subset of the services required to support the DCMF architectures depicted in clause 6.20.1.2.2. It is not intended to be complete.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "A.1\tGeneral",
            "description": "The following table shows the IMS AS Services and IMS AS Service Operations.\nTable A1-1: NF services provided by the IMS AS\n\n",
            "summary": "",
            "tables": [
                {
                    "description": "Table A1-1: NF services provided by the IMS AS",
                    "table number": 7,
                    "summary": "",
                    "name": ""
                }
            ],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.2\tNimsas_SessionEventControl Service",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "A.2.1\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "Service description: This service enables the consumer to be notified and take part in session events when served IMS subscribers takes part in IMS sessions.\nThe following operations are available for this service:\n-\tNotifying IMS session control events of a specific IMS subscriber to NFs.\nThis service operation reports the event to the consumer that has subscribed implicitly via configuration in the IMS AS.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "A.2.2\tNimsas_SessionEventControl_Notify service operation",
                    "description": "",
                    "summary": "",
                    "text_content": "Service operation name: Nimsas_SessionEventControl_Notify\nDescription: This service operation enables IMS AS to notify consumers of session events related to a specific served IMS subscriber requesting IMS data channel.\nInputs, Required: SessionID, EventID,\nInputs, Optional:  CallingID, CalledID, SessionCase, MediaInfoList\nCallingID is the calling subscriber.\nCalledID is the called Subscriber\nSessionCase indicates if this is an originating or terminating session.\nEventInitiator indicates initiator of the event, i.e. 'served user' vs 'remote user'.\nMediaInfoList includes for each media in the list; media ID which uniquely identifies this media item within the list, media specification, which is dependent on media type, and includes relevant attributes e.g dcmap.\nOutputs, Required: Result indication.\nOutputs, Optional: None\nThe table below is a subset of events and related information.\nTable A.2.2-1 : subset for List of events and Related Optional parameters\n\n",
                    "tables": [
                        {
                            "description": "Table A.2.2-1 : subset for List of events and Related Optional parameters",
                            "table number": 8,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "A.3\tNimsas_MediaControl Service",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "A.3.1\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "Service description: This service enables the consumer to control IMS AS handling of media within an IMS session. The service is used before responding to a Nimsas_SessionEventControl_Notity request.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "A.3.2\tNimsas_MediaControl_MediaInstruction service operation",
                    "description": "",
                    "summary": "",
                    "text_content": "Service operation name: Nimsas_MediaControl_MediaInstruction\nDescription: This operation provides instructions to the IMS AS for all the media a consumer requires based on its policies for the received session event, and that may require resource reservation in DCMF or enhanced MRF. There will be separate entry for every media that includes the complete media specification required by DCMF to provide interworking between Mb and MDC1/MDC2 interfaces.\nThis enables establishing an end-to-end media path for the required bootstrap channels by the originating or terminating end in the originating network, as well as originating or terminating end from the terminating network. Additionally, it enables establishing the end-to-end media path for the application data channels for peer-to-peer communication, peer to network and vice versa\nInputs, Required: SessionID, MediaInstructionSet\nMediaInstructionSet includes a set of instructions for each media. Each instruction includes:\n'mediaID' used by the IMS AS and the DSCF for referencing purposes. The consumer reuses the mediaID it received from the IMS AS for referencing the same media.\n'mediaInstruction' instructing the IMS AS for handling the media, examples are connectDCMF, disconnectDCMF filtermedia, etc.\n'mediaInstructionData' includes instruction dependent data intended for consumption by the DCMF or enhanced MRF.Inputs, Conditional: None.\nInputs, Optional: CallingID, CalledID, Replacement URL to retrieve application list via the bootstrap DC\nOutputs, Required: Atomic operation result indication\nOutputs, Optional: mediaResourceInformation\n\n\n",
                    "tables": [
                        {
                            "description": "",
                            "table number": 9,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        }
    ]
}