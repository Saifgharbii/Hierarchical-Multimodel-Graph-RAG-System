{
    "document_name": "33527-i10.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Specification has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\nIn the present document, modal verbs have the following meanings:\nshall\t\tindicates a mandatory requirement to do something\nshall not\tindicates an interdiction (prohibition) to do something\nThe constructions \"shall\" and \"shall not\" are confined to the context of normative provisions, and do not appear in Technical Reports.\nThe constructions \"must\" and \"must not\" are not used as substitutes for \"shall\" and \"shall not\". Their use is avoided insofar as possible, and they are not used in a normative context except in a direct citation from an external, referenced, non-3GPP document, or so as to maintain continuity of style when extending or modifying the provisions of such a referenced document.\nshould\t\tindicates a recommendation to do something\nshould not\tindicates a recommendation not to do something\nmay\t\tindicates permission to do something\nneed not\tindicates permission not to do something\nThe construction \"may not\" is ambiguous and is not used in normative elements. The unambiguous constructions \"might not\" or \"shall not\" are used instead, depending upon the meaning intended.\ncan\t\tindicates that something is possible\ncannot\t\tindicates that something is impossible\nThe constructions \"can\" and \"cannot\" are not substitutes for \"may\" and \"need not\".\nwill\t\tindicates that something is certain or expected to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nwill not\t\tindicates that something is certain or expected not to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nmight\tindicates a likelihood that something will happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nmight not\tindicates a likelihood that something will not happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nIn addition:\nis\t(or any other verb in the indicative mood) indicates a statement of fact\nis not\t(or any other negative verb in the indicative mood) indicates a statement of fact\nThe constructions \"is\" and \"is not\" do not indicate requirements.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document contains objectives, requirements and test cases to virtualized network product classes.\nSeveral virtualized network product classes share very similar if not identical security requirements for some aspects. Therefore, these are collected in the present document applicable to many virtualized network product classes. In addition to this catalogue, requirements specific to different network product classes will be captured in separate documents.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 33.117: \"Catalogue of general security assurance requirements\".\n[3]\t3GPP TR 33.927: \"Security Assurance Specification (SCAS); threats and critical assets in 3GPP virtualized network product classes\".\n[4]\tETSI GS NFV 002: \"Network Functions Virtualisation (NFV); Architectural Framework\".\n[5]\tVoid\n[6]\tETSI GS NFV 003: \"Network Functions Virtualisation (NFV); Terminology for Main Concepts in NFV\".\n[7]\t3GPP TR 33.926: \"Security Assurance Specification (SCAS) threats and critical assets in 3GPP network product classes\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions of terms, symbols and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tTerms",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms given in TR 21.905 [1] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in TR 21.905 [1].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tSymbols",
                    "description": "",
                    "summary": "",
                    "text_content": "Void\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.3\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in TR 21.905 [1].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tCatalogue of security requirements and related test cases for virtualized network product",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "4.1\tIntroduction",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.1.1\tPre-requisites for testing",
                            "text_content": "The SCAS tests, as described in the present specification, are to be applied to a virtualized network product whose software and/or hardware has been brought into use so that the network product can provide the intended functionality, either in a real network environment or in a simulated environment. This implies that, before any testing is performed, the software and/or hardware has been installed correctly, the virtualized network product is instantiated, and communication has been established over all standardized interfaces and OAM interfaces related with the network product's functionality, as described in the vendor's documentation. In addition, supporting environment for GVNP has also been provided before the testing is performed. The assumption of requirement for the NFVI supporting environment have been included in the vendor's documentation.\nCommunication over external non standardized interfaces that may exist and are marked as optional, according to the vendor's documentation, shall also be established during testing unless they are explicitly marked as \"not recommended\" in the vendor's documentation.\nFor each of the enabled external communication interfaces there may be various optional capabilities. During testing, all such capabilities shall be enabled unless they are explicitly marked as \"not recommended\" in the vendor's documentation.\nIn some cases a test case might require configuration changes as part of the execution steps or pre-conditions. After such test is executed and prior to any further test execution it needs to be ensured that the state of the ToE is restored back in the original state.\nSCAS testing is not about security in operations and deployments. So, in particular, SCAS testing is independent of any operator guidelines or considerations on specific deployment scenarios.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.1.2\tUse of tools in testing",
                            "text_content": "The following text shall apply to all test cases described in the present document:\nThe present document takes into account that the landscape of testing tools evolves more rapidly than SCAS specifications. It is therefore allowed that, for each requirement, the actual test carried out may deviate from the stepwise description of the test case in the present document if the following conditions are fulfilled:\n(1)\t The test is carried out by preferably using Commercial-of-the-Shelf (COTS) and Free-Open-Source-Software (FOSS) tools that are available for other testers that may want to repeat the test. In case a tool not in any of these two categories is used then evidence of the quality assurance of the tool needs to be provided. This applies only to tools used to perform the actual test and not supportive tools needed for setting up the testing environment like for example traffic generators/ simulators.\nIn cases where a test lab is not able to obtain the necessary tools to perform the test, vendor proprietary test tools may be used by the test lab as long the test tool is controlled under a suitable quality management system (QMS). The test lab ensures that this QMS is in place in order to avail of a vendor’s test tool.\nAdditionally in cases where the accredited test lab does not have the necessary test environment to perform a test, it shall be possible for the accredited test lab personnel to perform the test in a vendor's test lab. In such cases the accredited lab should record details of test environment, test set-up used and how the test was performed.\n(2)\t The tester provides evidence, e.g. by referring to the documentation of the tool, that the tool is suitable to verify the requirement, and the scope of testing is equal or larger to the one of the test case described in the present document. The evidence needs to be sufficiently detailed for experts in the field of testing, not for the general public.\n(3)\t The tester provides evidence that the tool has been actually used for testing the network product (e.g. by providing a trace).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.1.3\tDocumentation Requirements",
                            "text_content": "When a test case makes an assumption on the availability of certain items in the product documentation then this assumption is to be considered part of the requirement even if the requirements text does not mention the documentation.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.2\tSecurity functional requirements and related test cases",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.2.1\tIntroduction",
                            "text_content": "The present clause describes security functional requirements and the corresponding test cases, independent of a specific virtualized network product class of type 1. According to security threat analysis in TR 33.927 [2], the proposed security requirements for GVNP of type 1 are classified in three groups:\n-\tSecurity functional requirements deriving from 3GPP specifications in clause 4.2.2.\n-\tGeneral security functional requirements which include requirements not already addressed in the 3GPP specifications but whose support is also important to ensure a network product conforms to a common security baseline detailed in clause 4.2.3.3.5.\n-\tSecurity functional requirements related to Virtualization layer, hardware and resource isolation, among others. These requirements can be called security functional requirements deriving virtualization for simplify and detailed in clause 4.2.7.\nCompared to physical network products, GVNP of type 1 faces the threats relating to ETSI-definer interfaces defined in [3] and [4]. So, the security requirements of the above first and second group shall base on the security requirements in clause 4.2 of TS 33.117 [1] to identify the different security requirements for GVNP of type 1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.2.2\tSecurity functional requirements deriving from 3GPP specifications and related test cases",
                            "text_content": "Clause 4.2.2 in TS33.117[1] can be reused. There are no VNF-specific additions to clause 4.2.2 of TS 33.117 [1].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.2.3\ttechnical baseline",
                            "text_content": "The technical baseline in clause 4.2.3 of TS33.117[1] is a generic set of security requirements to be fulfilled by all virtualized network products.\nIn particular these requirements counter the security threats identified in the TR 33.927 [2] and they basically aim to guarantee the network product confidentiality, integrity and availability.\nAll text from TS 33.117 [1], clause 4.2.3.2 applies to GVNP of type 1.\nAll text from TS 33.117 [1], clause 4.2.3.3.1 applies to GVNP of type 1.\nAll text from TS 33.117[1], clause 4.2.3.3.2 applies to GVNP of type 1.\nAll text from TS 33.117 [1], clause 4.2.3.3.3 applies to GVNP of type 1.\nAll text from TS 33.117 [1], clause 4.2.3.3.4 applies to GVNP of type 1.\nAll text from TS 33.117 [1], clause 4.2.3.3.5 applies to GVNP of type 1.\nIn addition, VNF package and VNF image integrity shall be validated when on board, and VNF image integrity shall be validated when in instantiated. The detailed potential security requirements and related test cases are as following.\nRequirement Name: VNF package and VNF image integrity\nRequirement Description:\n1) VNF package and image shall contain integrity validation value (e.g. MAC).\n2) VNF package shall be integrity protected during on boarding.\nThreat Reference: Clause 5.3.2.5.1 of the TR 33.927[2], \"Software Tampering \";\nTest case:\nTest Name: TC_VNF PACKAGE AND IMAGE_ INTEGRITY\nPurpose:\n1. To test whether the VNF package has been integrity protected or not.\n2. To test whether the VNF image has been integrity protected or not.\nProcedure and execution steps:\nPre-Condition:\n-\tThe virtualized network product document describes information regarding integrity protection of VNF package and VNF images, including details of how the integrity check is carried out, who makes the digital signatures of VNF package, what evidence is created to prove that the integrity check has been executed and what the result of the check is, etc.\n-\tA valid VNF package and a not-valid VNF package (i.e. a tampered image in VNF package) are available.\n-\tA valid VNF image (i.e. a correct HASH value is attached) and a not-valid VNF image (i.e. an incorrect HASH value is attached, e.g. the VNF image can be tampered when the VNF image is sent from the NFVO to the VIM or when the VNF image is stored in the image repository) are available in the image repository of VIM.\n-\tThere are NFVO and VIM, or simulated NFVO and VIM. The certificate or the public key which is used to verify the digital signature of VNF package and image has been pre-configured in the NFVO and VIM respectively.\nExecution Steps\nExecute the following steps:\n1. Review the documentation provided by the vendor describing how VNF package integrity is verified;\n2. During VNF package on boarding, the tester uploads a valid VNF package into a NFVO. The NFVO verifies the integrity of the VNF package by validating the digital signature of the VNF package using the pre-configured certificate or public key according to the documentation;\n3. During VNF package on boarding, the tester uploads a not-valid VNF package into a NFVO. The NFVO validates the digital signature of the VNF package using the pre-configured certificate or public key;\n4. During VNF instantiation, the VIM selects a VNF image with a correct integrity protection value from the image repository to instantiate the VNF image. The VIM validates the correctness of the integrity protection value using the pre-configured certificate or public key according to the documentation;\n5. During VNF instantiation, the VIM selects a VNF image with an incorrect integrity protection value from the image repository to instantiate the VNF image. The VIM validates the correctness of the integrity protection value using the pre-configured certificate or public key according to the documentation.\nExpected Results:\n1. The VNF package is successfully on boarded into the NFVO;\n2. The not-valid VNF package is not on boarded;\n3. The VNF image with a correct integrity protection value is instantiated by the VIM;\n4. The VNF image with an incorrect integrity protection value is not instantiated by the VIM.\nExpected format of evidence:\nSnapshots containing the result of the VNF package on boarding and the VNF image instantiation.\nAll text from TS 33.117 [1], clause 4.2.3.4 applies to virtualized network products.\nAll text from TS 33.117 [1], clause 4.2.3.5 applies to virtualized network products.\nAll text from TS 33.117 [1], clause 4.2.3.6 applies to virtualized network products.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.2.4\tOperating systems",
                            "text_content": "All text from TS 33.117 [1], clause 4.2.4 applies to guest operating systems for GVNP of type 1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.2.5\tWeb servers",
                            "text_content": "All text from TS 33.117 [1], clause 4.2.5 applies to GVNP of type 1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.2.6\tNetwork devices",
                            "text_content": "All text from TS 33.117 [1], clause 4.2.6 applies to GVNP of type 1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.2.7\tSecurity functional requirements deriving from virtualisation and related test cases",
                            "text_content": "Requirement Name: GVNP lifecycle management security\nRequirement Description:\n1) VNF shall authenticate VNFM when VNFM initiates a communication to VNF.\n2) VNF shall be able to establish securely protected connection with the VNFM.\n3) VNF shall check whether VNFM has been authorized when VNFM access VNF's API.\n4) VNF shall log VNFM's management operations for auditing.\nNote: \tAccording to the definition in ETSI GS NFV 003 [6], VNFM is responsible for the lifecycle management of VNF. The lifecycle management of VNF is set of functions required to manage the instantiation, maintenance and termination of VNF. The GVNP of type 1 is 3GPP VNF. A 3GPP VNF lifecycle management begins when the 3GPP VNF is instantiated by a VNFM after the 3GPP VNF package is delivered to the operator and uploaded to NFVO. It is different terminology with the product lifecycle management process in clause 6 that includes set of functions required to manage first commercial introduction, update, minor release, major release, end of life.\nThreat Reference: Threats on interface between 3GPP VNF and VNFM, in clause 5.3.2.3 of TR 33.927 [3].\nTest case:\nTest Name: TC_LIFECYCLE MANAGEMENT SECURITY\nPurpose:\n1. To test the VNF authenticates VNFM when VNFM initiates a communication to VNF.\n2. To test the VNF establishes secure connection with the VNFM after successful authentication.\n3. To test the VNF check whether VNFM has been authorized when VNFM access to VNF's API.\n4. To check whether VNF logs the lifecycle management operations from VNFM.\nNote: \tThis test case is not applicable when the VNF and VNFM belongs to the same VNF vendor. If the VNF and VNFM belongs to the same VNF vendor and the interface between VNF and VNFM is proprietary interface, the API level authorization is not needed.\nProcedure and execution steps:\nPre-Condition:\n1. There is a VNFM (or simulated VNFM) in the test environment.\n2. The VNF vendor's document describes how VNF authenticates/authorizes VNFM. Execution Steps\nExecute the following steps:\n1. The tester triggers the establishment of communication between the VNF and the VNFM.\n2. The tester captures the communication between the VNF and the VNFM using a tool (e.g. wireshark).\n3. The tester checks whether the VNF authenticates the VNFM or not according to the mechanism described in the vendor's document. For example, the VNF can use HTTPS to communicate with the VNFM, the VNF uses VNFM's certificate for authentication.\n4. The tester checks whether the VNF establishes secure connection with the VNFM after successful authentication. For example, a TLS connection is established after the VNF successfully authenticates the VNFM.\n5. The tester using the VNFM to access the VNF's API and checks whether the VNF authorizes the VNFM or not according to the mechanism described in the vendor's document. For example, VNF can use OAuth2.0 to authorize the VNFM. The VNF uses VNFM's token for authorization.\n6. The tester checks whether the VNF logs the operations from VNFM or not.\nExpected Results:\n1. Secure communication is established between VNF and VNFM with integrity and confidentiality protection.\n2. The VNFM successfully accesses the VNF's API.\n3. The VNF logs the operations from VNFM.\nExpected format of evidence:\n1. Pcap traces contain the authentication and authorization processes.\n2. Screenshot contains the logs.\nRequirement Name: secure executive environment provision\nRequirement Description:\nThe VNF shall support to compare the owned resource state with the parsed resource state from VNFD (VNF Description) by the VNFM. The VNF can query the parsed resource state by the VNFM from the OAM. The VNF shall send an alarm to the OAM if the two resource states are inconsistent. This comparing process can be triggered periodically by the VNF, or the administrator can manually trigger the VNF to perform the comparing process.\nThreat Reference: Threats on interface between 3GPP VNF and virtualisation layer, in clause 5.3.2.3 of TR 33.927 [3].\nTest case:\nTest Name: TC_SECURE EXECUTIVE ENVIRONMENT PROVISION\nPurpose:\n1. To test whether the VNF compares the owned resource state with the parsed resource state.\n2. To test whether the VNF send an alarm to the OAM if the two resource states are inconsistent.\nProcedure and execution steps:\nPre-Condition:\nThere are a VNF, a virtualization layer (or simulated virtualization layer), an OAM, a VNFM, a VIM (or simulated OAM, VNFM, VIM) on the test environment.\nExecution Steps\nExecute the following steps:\n1. The tester utilizes the virtualization layer to change the resource state of VNF (e.g. change vCPU size of the VNF).\n2. The tester uses the VNF to query the parsed resource state from the OAM.\n3. The tester uses the OAM to query the parsed resource state of the VNF from the VNFM and send the received resource state to the VNF.\n4. The tester checks whether the VNF sends an alarm to the OAM when the VNF receives the parsed resource state from the OAM and finds that the owned resource state and the parsed resource state are inconsistent.\nExpected Results:\n1. The VNF send an alarm to the OAM when the VNF receives the parsed resource state from the OAM and find that the owned resource state and the parsed resource state are inconsistent.\nExpected format of evidence:\n1. Screenshot contains the alarm on the OAM.\nRequirement Name: Instantiating VNF from trusted VNF image\nRequirement Description:\nA VNF shall be initiated from trusted images in a VNF package. The VNF image(s) shall be signed by an authorized party. The authorized party is trusted by the operators.\nThreat Reference: TR 33.926 [7], Clause5.3.4.1, \"Software Tampering \";\nTest case:\nTest Name: TC_INSTANTIATING VNF _ TRUSTED IMAGE\nPurpose:\nTo test whether the instantiating VNF from trusted VNF image.\nProcedure and execution steps:\nPre-Condition:\n-\tThe virtualized network product document describes information regarding digital signature protection of VNF images, including details of how the signature check is carried out, who makes the digital signature of VNF image etc.\n-\tOne VNF package included two trusted VNF images and the VNF package carries a correct digital signature of the VNF package.\n-\tAnother VNF package included untrusted VNF image which carry wrong digital signature of VNF image and the VNF package carries a correct digital signature of the VNF package.\n-\tThere are a NFVO, or a simulated NFVO. A certificate or public key which is used to verify the digital signature of VNF image has been pre-configured in the NFVO. This certificate is trusted by the operator. It means the digital signature of the VNF image is successfully verified by using the public key in the certificate trusted by the operator\nExecution Steps:\nExecute the following steps:\n1. Review the documentation provided by the vendor describing how digital signature of the VNF image is verified;\n2. The tester uploads a VNF package included two trusted VNF images into a NFVO. The NFVO verifies the VNF images by validating each digital signature of the VNF image using the pre-configured certificate or the public key according to the documentation;\n3. The tester uploads another VNF package included un-trusted VNF image into NFVO. The NFVO verifies the VNF image(s) by validating each digital signature of the VNF image using the pre-configured certificate or the public key according to the documentation.\nNote:\tThe digital signature validation of the image is also described in clause 4.2.3.3.5.2 VNF package and VNF image integrity, but the two test cases have the different test purposes. This test case focuses on VNF image credibility, while clause 4.2.3.3.5.2 is concerned with VNF image integrity.\nExpected Results:\n1. In the step 2, the signatures of the VNF images are successfully validated and the VNF package is successfully on boarded into the NFVO;\n2. In the step 3, the signature of the un-trusted VNF image is failed to be validated and the VNF package is not on boarded into the NFVO;\nExpected format of evidence:\nSnapshots containing the result of the VNF package on boarding.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.3\tSecurity requirements and related test cases related to hardening",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.3.1\tIntroduction",
                            "text_content": "The requirements proposed in the present clause aim to securing virtualised network products (including the network functions in service-based architecture) by reducing its surface of vulnerability. In particular the identified requirements aim to ensure that all the default virtualised network product configurations (including operating system software, firmware and applications) are appropriately set. The hardening requirements were proposed in TS 33.117 [2] are general and generally apply to GVNP of type 1. So, the potential hardening requirements for GVNP of type 1 also include four aspects, i.e. general hardening requirements (i.e. technical baseline), operating system, web server, network devices.\nCompared to the physical network products, GVNP of type 1 has not hardware, but contains 3GPP functions, other functions and guest OS, it also has inter-VNF traffic and intra-VNF traffic in addition to than O&M traffic, control plane traffic and data plane traffic etc. The following clauses describe how to reduce the exposure from these new features.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.3.2\tTechnical baseline",
                            "text_content": "All text from TS 33.117 [2], clause 4.3.2.1 applies to GVNP of type 1.\nAll text from TS 33.117 [2], clause 4.3.2.2 applies to GVNP of type 1.\nAll text from TS 33.117 [2], clause 4.3.2.3 applies to GVNP of type 1.\nAs GVNP of type 1 does not contain the hardware layer, all text from TS 33.117 [2] clause 4.3.2.4 applies to GVNP of type 1, except the requirements and testing on hardware functions.\nAs GVNP of type 1 does not contain the hardware layer, all text from TS 33.117 [2] clause 4.3.2.5 applies to GVNP of type 1, except the requirements and testing on hardware components.\nAll text from TS 33.117 [2], clause 4.3.2.6 applies to GVNP of type 1.\nAll text from TS 33.117 [2], clause 4.3.2.7 applies to GVNP of type 1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.3.3\tOperating systems",
                            "text_content": "All text from TS 33.117 [2], clause 4.2.4 applies to guest operating systems for GVNP of type 1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.3.4\tWeb servers",
                            "text_content": "All text from TS 33.117 [2], clause 4.2.5 applies to GVNP of type 1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.3.5\tNetwork devices",
                            "text_content": "All text from TS 33.117 [2], clause 4.2.6 applies to GVNP of type 1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.3.6\tVirtualized Network Products",
                            "text_content": "All text from TS 33.117 [2], clause 4.3.5.1 applies to GVNP of type 1, except for the supporting physical separation of traffic belonging to different network domains. However, the supporting separation of traffic belonging to different network domain shall be supported for virtualized network products. It needs to have same testing step but to set Pre-condition from two separate interface to two separate logical interface from TS 33.117 [2].\nRequirement Name: inter-VNF and intra-VNF Traffic Separation\nRequirement Description:\nThe network used for the communication between the VNFCs of a VNF (intra-VNF traffic) and the network used for the communication between VNFs(inter-VNF traffic) shall be separated to prevent the security threats from the different networks affect each other.\nThreat Reference: Security threat caused by lack of GVNP traffic isolation in clause 5.3.2.7.15 of TR 33.927 [3]\nTest case:\nTest Name: TC_TRAFFIC_SEPARATION_INTER-VNF_INTRA-VNF\nPurpose:\nTo test whether the traffics between inter-VNF traffic and intra-VNF traffic are separated.\nProcedure and execution steps:\nPre-Condition:\n1. There has a VNF instance on the test environment. This VNF instance has more than one VNFCI (VNF component Instance). The network between VNFCIs means intra-VNF network which is private network provided by vendor.\n2. The document which describes how to separate the inter-VNF traffic with the intra-VNF traffic has been provided by the vendor. For example, the different network segments are described in the document.\n3. Another VNF instance (or a simulated VNF instance) is on the test environment and can communicate with the tested VNF instance.\nExecution Steps\nExecute the following steps:\n1.\tThe tester checks whether the inter-VNF traffic and intra-VNF traffic are separated according the document by the vendor. For example, the tester checks whether the different network segments used by inter-VNF traffic and intra-VNF traffic respectively.\n2.\tThe tester checks whether a VNFCI refuses inter-VNF traffic on all intra-VNF interfaces. For example, the tester can send ping to all intra-VNF interfaces through an inter-VNF interface.\n3.\tThe tester checks whether a VNFCI refuses intra-VNF traffic on all inter-VNF interfaces. For example, the tester can send ping to all inter-VNF interfaces through an intra-VNF interface.\nExpected Results:\nIn the step 1, the inter-VNF traffic and intra-VNF traffic are separated according the document by the vendor. In the step 2 and step 3, the VNFCI refuses traffic.\nExpected format of evidence:\nA PASS or FAIL.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.4\tBasic vulnerability testing requirements",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.4.1\tIntroduction",
                            "text_content": "All text from TS 33.117 [2], clause 4.4 applied to all types of GVNPs.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.4.2\tPort Scanning",
                            "text_content": "All text from TS 33.117 [2], clause 4.4.2 applied to all types of GVNPs.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.4.3\tVulnerability Scanning",
                            "text_content": "All text from TS 33.117 [2], clause 4.4.3 applied to all types of GVNPs.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.4.4\tRobustness and Fuzz testing",
                            "text_content": "All text from TS 33.117 [2], clause 4.4.4 applied to all types of GVNPs.\n\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "",
                                    "table number": 3,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}