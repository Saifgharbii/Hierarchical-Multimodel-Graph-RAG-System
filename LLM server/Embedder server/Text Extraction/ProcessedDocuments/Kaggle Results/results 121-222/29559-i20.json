{
    "document_name": "29559-i20.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Specification has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\nIn the present document, modal verbs have the following meanings:\nshall\tindicates a mandatory requirement to do something\nshall not\tindicates an interdiction (prohibition) to do something\nThe constructions \"shall\" and \"shall not\" are confined to the context of normative provisions, and do not appear in Technical Reports.\nThe constructions \"must\" and \"must not\" are not used as substitutes for \"shall\" and \"shall not\". Their use is avoided insofar as possible, and they are not used in a normative context except in a direct citation from an external, referenced, non-3GPP document, or so as to maintain continuity of style when extending or modifying the provisions of such a referenced document.\nshould\tindicates a recommendation to do something\nshould not\tindicates a recommendation not to do something\nmay\tindicates permission to do something\nneed not\tindicates permission not to do something\nThe construction \"may not\" is ambiguous and is not used in normative elements. The unambiguous constructions \"might not\" or \"shall not\" are used instead, depending upon the meaning intended.\ncan\tindicates that something is possible\ncannot\tindicates that something is impossible\nThe constructions \"can\" and \"cannot\" are not substitutes for \"may\" and \"need not\".\nwill\tindicates that something is certain or expected to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nwill not\tindicates that something is certain or expected not to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nmight\tindicates a likelihood that something will happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nmight not\tindicates a likelihood that something will not happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nIn addition:\nis\t(or any other verb in the indicative mood) indicates a statement of fact\nis not\t(or any other negative verb in the indicative mood) indicates a statement of fact\nThe constructions \"is\" and \"is not\" do not indicate requirements.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document specifies the stage 3 protocol and data model for the Npkmf Service Based Interface. It provides stage 3 protocol definitions and message flows, and specifies the API for each service offered by the 5G PKMF as specified in 3GPP TS 33.503 [4].\nThe 5G System stage 2 architecture and procedures are specified in 3GPP TS 23.501 [2] and 3GPP TS 23.502 [3].\nThe Technical Realization of the Service Based Architecture and the Principles and Guidelines for Services Definition are specified in 3GPP TS 29.500 [5] and 3GPP TS 29.501 [6].\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 23.501: \"System Architecture for the 5G System; Stage 2\".\n[3]\t3GPP TS 23.502: \"Procedures for the 5G System; Stage 2\".\n[4]\t3GPP TS 33.503: \"Security Aspects of Proximity based Services (ProSe) in the 5G System (5GS)\".\n[5]\t3GPP TS 29.500: \"5G System; Technical Realization of Service Based Architecture; Stage 3\".\n[6]\t3GPP TS 29.501: \"5G System; Principles and Guidelines for Services Definition; Stage 3\".\n[7]\tOpenAPI : \"OpenAPI Specification Version 3.0.0\", .\n[8]\tIETF RFC 9113: \"HTTP/2\".\n[9]\tIETF RFC 8259: \"The JavaScript Object Notation (JSON) Data Interchange Format\".\n[10]\tIETF RFC 9457: \"Problem Details for HTTP APIs\".\n[11]\t3GPP TS 33.501: \"Security architecture and procedures for 5G system\".\n[12]\tIETF RFC 6749: \"The OAuth 2.0 Authorization Framework\".\n[13]\t3GPP TS 29.510: \"Network Function Repository Services; Stage 3\".\n[14]\t3GPP TR 21.900: \"Technical Specification Group working methods\".\n[15]\t3GPP TS 29.571: \"5G System; Common Data Types for Service Based Interfaces; Stage 3\".\n[16]\t3GPP TS 24.554: \"Proximity-services (ProSe) in 5G System (5GS) protocol aspects; Stage 3\".\n[17]\t3GPP TS 29.503: \"5G System; Unified Data Management Services; Stage 3\".\n[18]\t3GPP TS 29.509: \"5G System; Authentication Server Services; Stage 3\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions of terms, symbols and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tTerms",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms given in 3GPP TR 21.905 [1] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in 3GPP TR 21.905 [1].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tSymbols",
                    "description": "",
                    "summary": "",
                    "text_content": "Void\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.3\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in 3GPP TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in 3GPP TR 21.905 [1].\n5G PKMF\t5G ProSe Key Management Function\n5G ProSe\t5G Proximity based Services\nRPAUID\tRestricted ProSe Application User ID\nPDUID\tProSe Discovery UE ID\nUP-PRUK\tUser Plane ProSe Remote User Key\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tOverview",
            "description": "The 5G ProSe Key Management Function (5G PKMF) is the logical function handling network related actions required for the key management and the security material for discovery of a 5G ProSe UE-to-Network Relay by a 5G ProSe Remote UE, for establishing a secure PC5 communication link between a 5G ProSe Remote UE and 5G ProSe UE-to-Network Relay, for discovery of a 5G ProSe UE-to-UE Relay by a 5G ProSe End UE, and for establishing a secure PC5 communication link between a 5G ProSe End UE and a 5G ProSe UE-to-UE Relay (see 3GPP TS 33.503 [4]).\nFigure 4-1 provides the reference model (in service based interface representation and in reference point representation), with focus on the 5G PKMF:\nThe figure depicts a reference model for the 5G Physical Layer Multifunctional (PKMF) system, illustrating the various components and their interactions. The model includes the base station (gNB), user equipment (UE), and scatterers, with beamforming techniques to mitigate interference. The figure also highlights the use of redundancy paths to ensure failover reliability.\nFigure 4-1: Reference model – 5G PKMF\nThe functionalities supported by the 5G PKMF are listed in clause 4.2.1.2 of 3GPP TS 33.503 [4].\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "5\tServices offered by the 5G PKMF",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tIntroduction",
                    "description": "",
                    "summary": "",
                    "text_content": "The table 5.1-1 shows the 5G PKMF Services and 5G PKMF Service Operations:\nTable 5.1-1: List of 5G PKMF Services\n\nTable 5.1-2 summarizes the corresponding APIs defined for this specification.\nTable 5.1-2: API Descriptions\n\n",
                    "tables": [
                        {
                            "description": "Table 5.1-1: List of 5G PKMF Services",
                            "table number": 3,
                            "summary": "",
                            "name": ""
                        },
                        {
                            "description": "Table 5.1-2: API Descriptions",
                            "table number": 4,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.2\tNpkmf_PKMFKeyRequest Service",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.2.1\tService Description",
                            "text_content": "This service enables an NF (i.e. another 5G PKMF in another PLMN) to request information related to 5G ProSe keying. The following are the key functionalities of this NF service.\n-\tProvide 5G ProSe related keying material\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.2\tService Operations",
                            "text_content": "The ProseKey service operation is invoked by a NF Service Consumer, i.e. another 5G PKMF in another PLMN, towards the 5G PKMF to retrieve the keying material related to 5G ProSe.\nThe ProseKey service operation is used during the following procedure:\n-\tPC5 security establishment for 5G ProSe UE-to-Network relay communication over User Plane (see 3GPP TS 33.503 [4], clause 6.3.3.2.2)\nThe NF Service Consumer (i.e. another 5G PKMF in another PLMN) shall retrieve the 5G ProSe related keying material by invoking the \"request \" custom method on the resource URI of \"Prose Keys Collection\" resource, see clause 6.1.3.2.4. See also Figure 5.2.2.2.1-1.\nThe figure depicts a complex network architecture, illustrating the various components and their interactions. It includes a base station (gNB), user equipment (UE), and scatterers, highlighting the importance of beamforming techniques to mitigate interference. The figure also illustrates the layered design of the network, aligning with SDN principles.\nFigure 5.2.2.2.1-1 ProseKey service operation\n1.\tThe NF Service Consumer shall send a HTTP POST request to invoke \"request\" custom method. The payload of the request shall be an object of \"ProseKeyReqData\" data type.\tThe payload shall include the Relay Service Code, the KNRP freshness parameter 1, and either the SUCI of the 5G ProSe UE (Remote UE or End UE) or the UP-PRUK ID.\n2a.\tOn success, the 5G PKMF shall respond with the status code \"200 OK\". The payload of the response shall be an object of \"ProseKeyRspData\" data type. They payload shall include the KNRP, the KNRP freshness parameter 2 and optionally the GPI.\n2b.\tOn failure or redirection, one of the HTTP status codes listed in table 6.1.3.2.4.2.2-2 shall be returned. For a 4xx/5xx response, the message body shall contain a ProblemDetails structure with the \"cause\" attribute set to one of the application errors listed in table 6.1.3.2.4.2.2-2.\n3.\t[conditional] If synchronization failed when UE processes the authentication challenge in the GPI and a subsequent Key Request is send for resynchronization, the NF Service Consumer shall send a HTTP POST request to invoke \"request\" custom method. The payload of the request shall be an object of \"ProseKeyReqData\" data type. The payload shall include the Relay Service Code, the KNRP freshness parameter 1, the information for resynchronization (RAND and AUTS).\n4a.\tOn success, the 5G PKMF shall respond with the status code \"200 OK\". The payload of the response shall be an object of \"ProseKeyRspData\" data type. They payload shall include the KNRP, the KNRP freshness parameter 2 and the GPI.\n4b.\tOn failure or redirection, one of the HTTP status codes listed in table 6.1.3.2.4.2.2-2 shall be returned. For a 4xx/5xx response, the message body shall contain a ProblemDetails structure with the \"cause\" attribute set to one of the application errors listed in table 6.1.3.2.4.2.2-2.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.3\tNpkmf_ResolveRemoteUserId Service",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.3.1\tService Description",
                            "text_content": "The Npkmf_ResolveRemoteUserId service enables a NF to request the 5G PKMF to resolve Remote User ID (i.e., UP-PRUK ID) to SUPI.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.3.2\tService Operations",
                            "text_content": "The service operation defined for the Npkmf_ResolveRemoteUserId service is as follows:\n-\tRetrieve: It allows a consumer NF to get an user’s SUPI from Remote User ID.\nThe Retrieve service operation is used during the following procedure:\n-\tPC5 security establishment for 5G ProSe UE-to-Network relay communication over User Plane (see 3GPP TS 33.503 [4], clause 6.3.3.2.2)\nThe NF Service Consumer (e.g., SMF, 5G PKMF) shall request the 5G PKMF to get the SUPI of a 5G ProSe Remote UE as shown in Figure 5.3.2.2.1-1\nThe figure depicts a simplified representation of a ProSe Remote UE (Remote User Equipment) in a 5G network, highlighting the various components and their interconnections. The figure includes a base station (gNB), user equipment (UE), and scatterers, illustrating the signal propagation and the use of beamforming techniques to mitigate interference. The figure also shows the fiber-optic backbone architecture, highlighting the redundancy paths and the layered design of the network.\nFigure 5.3.2.2.1-1: Requesting the SUPI of a ProSe Remote UE\n1.\tThe NF service consumer (e.g., SMF, 5G PKMF) sends a POST request to the resource representing the resolve-id custom operation. The request body shall contain the UP-PRUK ID.\n2a.\tOn success, the 5G PKMF responds with \"200 OK\" with the message body containing the corresponding SUPI.\n2b.\tIf there is no valid data, HTTP status code \"404 Not Found\" shall be returned including additional error information in the response body (in the \"ProblemDetails\" element).\nOn failure, the appropriate HTTP status code indicating the error shall be returned and appropriate additional error information should be returned in the POST response body.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.4\tNpkmf_ Discovery Service",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.4.1\tService Description",
                            "text_content": "This service enables an NF (i.e. another 5G PKMF in another PLMN) to request authorization information. The following are the key functionalities of this NF service.\n-\tProvide the authorization from the 5G PKMF for announcing in the PLMN\n-\tProvide the discovery key from the 5G PKMF for monitoring in the PLMN\n-\tProvide the discovery key from the 5G PKMF for a discoverer UE in the PLMN to operate Model B restricted discovery\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.4.2\tService Operations",
                            "text_content": "The Npkmf_Discovery service supports following service operations:\n-\tAnnounceAuthorize\n-\tMonitorKey\n-\tDiscoveryKey\nThe AnnounceAuthorize service operation is invoked by a NF Service Consumer, i.e. another 5G PKMF in another PLMN, towards the 5G PKMF to retrieve the authorization from the 5G PKMF for announcing in the PLMN.\nThe NF Service Consumer (e.g., 5G PKMF) shall request the 5G PKMF to get authorization as shown in Figure 5.4.2.2.1-1\nThe figure depicts a network architecture with various components, including a base station (gNB), user equipment (UE), and scatterers. The diagram illustrates the signal propagation in a 5G network, highlighting the multi-path signal path and beamforming techniques to mitigate interference. The fiber-optic backbone architecture is shown, with core switches, optical line terminals (OLTs), and distributed nodes. Redundancy paths are depicted in dashed lines, ensuring failover reliability. The layered design aligns with SDN principles.\nFigure 5.4.2.2.1-1: Announce Authorize\n1.\tThe NF service consumer (e.g., 5G PKMF) sends a HTTP PUT request to the resource representing the announce-authorize custom operation. The request body shall contain the RSC.\n2a.\tIf the context indicated by the userInfoId doesn't exist, the 5G PKMF shall create the new resource, and upon success of creation of the resource, \"201 created\" shall be returned.\n2b.\tIf the context indicated by the userInfoId already exists, the 5G PKMF shall replace the stored data using the received data, and upon success of the update of the resource, \"204 No Content\" shall be returned.\n2c.\tOn failure or redirection, one of the HTTP status code listed in Table 6.3.3.2.3.1-3 may be returned. For a 4xx/5xx response, the message body may contain a ProblemDetails structure with the \"cause\" attribute set to one of the application error listed in Table 6.3.3.2.3.1-3.\n\nThe MonitorKey service operation is invoked by a NF Service Consumer, i.e. another 5G PKMF in another PLMN, towards the 5G PKMF to retrieve the discovery key from the 5G PKMF for monitoring in the PLMN.\nThe NF Service Consumer (e.g., 5G PKMF) shall request the 5G PKMF to get authorization as shown in Figure 5.4.2.3.1-1\nThe figure depicts a network monitoring system with various key indicators displayed on a screen. The system includes a user interface (UI) for easy monitoring and management of network performance, as well as a dashboard for real-time data analysis. The UI allows users to view network metrics such as latency, throughput, and packet loss, as well as analyze the performance of individual network components. The dashboard provides a comprehensive view of the network's health, enabling network operators to quickly identify and address issues. The system's design is based on the principles of network monitoring and management, ensuring that the network operates efficiently and securely.\nFigure 5.4.2.3.2-1: Monitor Key\n1.\tThe NF Service Consumer (e.g., 5G PKMF) shall send an HTTP PUT request to the resource representing the monitor-key custom operation. The request body shall contain the RSC and PC5 UE security capability.\n2a.\tIf the context indicated by the userInfoId doesn't exist, the 5G PKMF shall create the new resource, and upon success of creation of the resource, \"201 created\" shall be returned.\n2b.\tIf the context indicated by the userInfoId already exists, the 5G PKMF shall replace the stored data using the received data, and upon success of the update of the resource, \"204 No Content\" shall be returned.\n2c.\tOn failure or redirection, one of the HTTP status code listed in Table 6.3.3.3.3.1-3 may be returned. For a 4xx/5xx response, the message body may contain a ProblemDetails structure with the \"cause\" attribute set to one of the application error listed in Table 6.3.3.3.3.1-3.\n\nThe DiscoverKey service operation is invoked by a NF Service Consumer, i.e. another 5G PKMF in another PLMN, towards the 5G PKMF to retrieve the discovery key from the 5G PKMF for a discoverer UE in the PLMN to operate Model B restricted discovery.\nThe NF Service Consumer (e.g., 5G PKMF) shall request the 5G PKMF to get authorization as shown in Figure 5.4.2.4.1-1\nThe figure depicts a network diagram with various components, including a base station (gNB), user equipment (UE), and scatterers. The diagram illustrates the signal propagation in a 5G network, highlighting the multi-path signal path and beamforming techniques to mitigate interference. The fiber-optic backbone architecture is shown, with core switches, optical line terminals (OLTs), and distributed nodes. Redundancy paths are depicted in dashed lines, ensuring failover reliability. The layered design aligns with SDN principles.\nFigure 5.4.2.4.2-1: Discover Key\n1.\tThe NF Service Consumer (e.g., 5G PKMF) shall send an HTTP PUT request to the resource representing the monitor-key custom operation. The request body shall contain the RSC and PC5 UE security capability.\n2a.\tIf the context indicated by the userInfoId doesn't exist, the 5G PKMF shall create the new resource, and upon success of creation of the resource, \"201 created\" shall be returned.\n2b.\tIf the context indicated by the userInfoId already exists, the 5G PKMF shall replace the stored data using the received data, and upon success of the update of the resource, \"204 No Content\" shall be returned.\n2c.\tOn failure or redirection, one of the HTTP status code listed in Table 6.3.3.3.3.1-3 may be returned. For a 4xx/5xx response, the message body may contain a ProblemDetails structure with the \"cause\" attribute set to one of the application error listed in Table 6.3.3.3.3.1-3.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "6\tAPI Definitions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.1\tNpkmf_PKMFKeyRequest Service API",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.1.1\tIntroduction",
                            "text_content": "The Npkmf_PKMFKeyRequest shall use the Npkmf_PKMFKeyRequest API.\nThe API URI of the Npkmf_PKMFKeyRequest API shall be:\n{apiRoot}/<apiName>/<apiVersion>\nThe request URIs used in HTTP requests from the NF service consumer towards the NF service producer shall have the Resource URI structure defined in clause 4.4.1 of 3GPP TS 29.501 [6], i.e.:\n{apiRoot}/<apiName>/<apiVersion>/<apiSpecificResourceUriPart>\nwith the following components:\n-\tThe {apiRoot} shall be set as described in 3GPP TS 29.501 [6].\n-\tThe <apiName> shall be \"npkmf-keyrequest \".\n-\tThe <apiVersion> shall be \"v1\".\n-\tThe <apiSpecificResourceUriPart> shall be set as described in clause 6.1.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.2\tUsage of HTTP",
                            "text_content": "HTTP/2, IETF RFC 9113 [8], shall be used as specified in clause 5 of 3GPP TS 29.500 [5].\nHTTP/2 shall be transported as specified in clause 5.3 of 3GPP TS 29.500 [5].\nThe OpenAPI [7] specification of HTTP messages and content bodies for the Npkmf_PKMFKeyRequest API is contained in Annex A.\nSee clause 5.2.2 of 3GPP TS 29.500 [5] for the usage of HTTP standard headers.\nJSON, IETF RFC 8259 [9], shall be used as content type of the HTTP bodies specified in the present specification as specified in clause 5.4 of 3GPP TS 29.500 [5]. The use of the JSON format shall be signalled by the content type \"application/json\".\n\"Problem Details\" JSON object shall be used to indicate additional details of the error in a HTTP response body and shall be signalled by the content type \"application/problem+json\", as defined in IETF RFC 9457 [10].\nThe mandatory HTTP custom header fields specified in clause 5.2.3.2 of 3GPP TS 29.500 [5] shall be applicable, and the optional HTTP custom header fields specified in clause 5.2.3.3 of 3GPP TS 29.500 [5] may be supported.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.3\tResources",
                            "text_content": "This clause describes the structure for the Resource URIs and the resources and methods used for the service.\nFigure 6.1.3.1-1 describes the resource URI structure of the Npkmf_PKMFKeyRequest API.\n\nThe figure depicts the resource URI structure of the Npkmf_PKMFKeyRequest API, which is used to request a PKMF key from a PKI. The structure includes the key type, the key ID, the key length, and the key's expiration date. The API is used to authenticate the user's identity and ensure the security of the PKI.\nFigure 6.1.3.1-1: Resource URI structure of the Npkmf_PKMFKeyRequest API\nTable 6.1.3.1-1 provides an overview of the resources and applicable HTTP methods.\nTable 6.1.3.1-1: Resources and methods overview\n\nThis resource represents the collection of the ProSe Keys managed by the 5G PKMF.\nThis resource is modelled with the Collection resource archetype (see clause C.2 of 3GPP TS 29.501 [5]).\nResource URI: {apiRoot}/<apiName>/<apiVersion>/prose-keys\nThis resource shall support the resource URI variables defined in table 6.1.3.2.2-1.\nTable 6.1.3.2.2-1: Resource URI variables for this resource\n\nThere is no standard method supported by the resource.\nTable 6.1.3.2.4.1-1: Custom operations\n\nThis custom operation requests the keying material related to 5G ProSe in the 5G PKMF.\nThis operation shall support the request data structures specified in table 6.1.3.2.4.2.2-1 and the response data structure and response codes specified in table 6.1.3.2.4.2.2-2.\nTable 6.1.3.2.4.2.2-1: Data structures supported by the POST Request Body on this resource\n\nTable 6.1.3.2.4.2.2-2: Data structures supported by the POST Response Body on this resource\n\nTable 6.1.3.2.4.2.2-3: Headers supported by the 307 Response Code on this resource\n\nTable 6.1.3.2.4.2.2-4: Headers supported by the 308 Response Code on this resource\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.3.1-1: Resources and methods overview",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.2-1: Resource URI variables for this resource",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.4.1-1: Custom operations",
                                    "table number": 7,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.4.2.2-1: Data structures supported by the POST Request Body on this resource",
                                    "table number": 8,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.4.2.2-2: Data structures supported by the POST Response Body on this resource",
                                    "table number": 9,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.4.2.2-3: Headers supported by the 307 Response Code on this resource",
                                    "table number": 10,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.4.2.2-4: Headers supported by the 308 Response Code on this resource",
                                    "table number": 11,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.4\tCustom Operations without associated resources",
                            "text_content": "There is no custom operation without associated resources supported in Npkmf_PKMFKeyRequest Service.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.5\tNotifications",
                            "text_content": "There is no notification defined for Npkmf_PKMFKeyRequest service.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.6\tData Model",
                            "text_content": "This clause specifies the application data model supported by the API.\nTable 6.1.6.1-1 specifies the data types defined for the Npkmf_PKMFKeyRequest service based interface protocol.\nTable 6.1.6.1-1: Npkmf_PKMFKeyRequest specific Data Types\n\nTable 6.1.6.1-2 specifies data types re-used by the Npkmf_PKMFKeyRequest service based interface protocol from other specifications, including a reference to their respective specifications and when needed, a short description of their use within the Npkmf_PKMFKeyRequest service based interface.\nTable 6.1.6.1-2: Npkmf_PKMFKeyRequest re-used Data Types\n\nThis clause defines the structures to be used in resource representations.\nTable 6.1.6.2.2-1: Definition of type ProseKeyReqData\n\nTable 6.1.6.2.3-1: Definition of type ProseKeyRspData\n\nThis clause defines simple data types and enumerations that can be referenced from data structures defined in the previous clauses.\nThe simple data types defined in table 6.1.6.3.2-1 shall be supported.\nTable 6.1.6.3.2-1: Simple data types\n\nThere is no data type describing alternative data types or combinations of data types in Npkmf_PKMFKeyRequest Service.\nThere is no binary data type in Npkmf_PKMFKeyRequest Service.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.6.1-1: Npkmf_PKMFKeyRequest specific Data Types",
                                    "table number": 12,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.1-2: Npkmf_PKMFKeyRequest re-used Data Types",
                                    "table number": 13,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.2-1: Definition of type ProseKeyReqData",
                                    "table number": 14,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.3-1: Definition of type ProseKeyRspData",
                                    "table number": 15,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.2-1: Simple data types",
                                    "table number": 16,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.7\tError Handling",
                            "text_content": "For the Npkmf_PKMFKeyRequest API, HTTP error responses shall be supported as specified in clause 4.8 of 3GPP TS 29.501 [6]. Protocol errors and application errors specified in table 5.2.7.2-1 of 3GPP TS 29.500 [5] shall be supported for an HTTP method if the corresponding HTTP status codes are specified as mandatory for that HTTP method in table 5.2.7.1-1 of 3GPP TS 29.500 [5].\nIn addition, the requirements in the following clauses are applicable for the Npkmf_PKMFKeyRequest API.\nProtocol errors handling shall be supported as specified in clause 5.2.7 of 3GPP TS 29.500 [5].\nThe application errors defined for the Npkmf_PKMFKeyRequest service are listed in Table 6.1.7.3-1.\nTable 6.1.7.3-1: Application errors\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.7.3-1: Application errors",
                                    "table number": 17,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.8\tFeature negotiation",
                            "text_content": "The optional features in table 6.1.8-1 are defined for the Npkmf_PKMFKeyRequest API. They shall be negotiated using the extensibility mechanism defined in clause 6.6 of 3GPP TS 29.500 [5].\nTable 6.1.8-1: Supported Features\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.8-1: Supported Features",
                                    "table number": 18,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.9\tSecurity",
                            "text_content": "As indicated in 3GPP TS 33.501 [11] and 3GPP TS 29.500 [5], the access to the Npkmf_PKMFKeyRequest API may be authorized by means of the OAuth2 protocol (see IETF RFC 6749 [12]), based on local configuration, using the \"Client Credentials\" authorization grant, where the NRF (see 3GPP TS 29.510 [13]) plays the role of the authorization server.\nIf OAuth2 is used, an NF Service Consumer, prior to consuming services offered by the Npkmf_PKMFKeyRequest API, shall obtain a \"token\" from the authorization server, by invoking the Access Token Request service, as described in 3GPP TS 29.510 [13], clause 5.4.2.2.\nNOTE:\tWhen multiple NRFs are deployed in a network, the NRF used as authorization server is the same NRF that the NF Service Consumer used for discovering the Npkmf_PKMFKeyRequest service.\nThe Npkmf_PKMFKeyRequest API defines a single scope \"npkmf-keyrequest\" for OAuth2 authorization (as specified in 3GPP TS 33.501 [11]) for the entire service, and it does not define any additional scopes at resource or operation level.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.10\tHTTP redirection",
                            "text_content": "An HTTP request may be redirected to a different 5G PKMF service instance, within the same 5G PKMF or a different 5G PKMF of an 5G PKMF set, e.g. when an 5G PKMF service instance is part of an 5G PKMF (service) set or when using indirect communications (see 3GPP TS 29.500 [5]).\nAn SCP that reselects a different 5G PKMF producer instance will return the NF Instance ID of the new 5G PKMF producer instance in the 3gpp-Sbi-Producer-Id header, as specified in clause 6.10.3.4 of 3GPP TS 29.500 [5].\nIf an 5G PKMF within an 5G PKMF set redirects a service request to a different 5G PKMF of the set using an 307 Temporary Redirect or 308 Permanent Redirect status code, the identity of the new 5G PKMF towards which the service request is redirected shall be indicated in the 3gpp-Sbi-Target-Nf-Id header of the 307 Temporary Redirect or 308 Permanent Redirect response as specified in clause 6.10.9.1 of 3GPP TS 29.500 [5].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.2\tNpkmf_ResolveRemoteUserId Service API",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.2.1\tIntroduction",
                            "text_content": "The Npkmf_ResolveRemoteUserId service shall use the Npkmf_ResolveRemoteUserId API.\nThe API URI of the Npkmf_ResolveRemoteUserId API shall be:\n{apiRoot}/<apiName>/<apiVersion>\nThe request URIs used in HTTP requests from the NF service consumer towards the NF service producer shall have the Resource URI structure defined in clause 4.4.1 of 3GPP TS 29.501 [6], i.e.:\n{apiRoot}/<apiName>/<apiVersion>/<apiSpecificResourceUriPart>\nwith the following components:\n-\tThe {apiRoot} shall be set as described in 3GPP TS 29.501 [6].\n-\tThe <apiName> shall be \"npkmf-userid\".\n-\tThe <apiVersion> shall be \"v1\".\n-\tThe <apiSpecificResourceUriPart> shall be set as described in clause 6.2.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.2\tUsage of HTTP",
                            "text_content": "HTTP/2, IETF RFC 9113 [8], shall be used as specified in clause 5 of 3GPP TS 29.500 [5].\nHTTP/2 shall be transported as specified in clause 5.3 of 3GPP TS 29.500 [5].\nThe OpenAPI [7] specification of HTTP messages and content bodies for the Npkmf_ResolveRemoteUserId API is contained in Annex A.3.\nSee clause 5.2.2 of 3GPP TS 29.500 [5] for the usage of HTTP standard headers.\nJSON, IETF RFC 8259 [9], shall be used as content type of the HTTP bodies specified in the present specification as specified in clause 5.4 of 3GPP TS 29.500 [5]. The use of the JSON format shall be signalled by the content type \"application/json\".\n\"Problem Details\" JSON object shall be used to indicate additional details of the error in a HTTP response body and shall be signalled by the content type \"application/problem+json\", as defined in IETF RFC 9457 [10].\nThe mandatory HTTP custom header fields specified in clause 5.2.3.2 of 3GPP TS 29.500 [5] shall be supported, and the optional HTTP custom header fields specified in clause 5.2.3.3 of 3GPP TS 29.500 [5] may be supported.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.3\tResources",
                            "text_content": "This clause describes the structure for the Resource URIs and the resources and methods used for the service.\nFigure 6.2.3.1-1 depicts the resource URIs structure for the Npkmf_ResolveRemoteUserId API.\nThe figure depicts the resource URI structure of the Npkmf _ ResolveRemoteUserId API, which is used to resolve remote user IDs in a network. The structure includes the resource URI, the user ID, and the method to resolve the user ID. This API is used to manage user authentication and authorization in a network.\nFigure 6.2.3.1-1: Resource URI structure of the Npkmf_ResolveRemoteUserId API\nTable 6.2.3.1-1 provides an overview of the resources and applicable HTTP methods.\nTable 6.2.3.1-1: Resources and methods overview\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.3.1-1: Resources and methods overview",
                                    "table number": 19,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.4\tCustom Operations without associated resources",
                            "text_content": "The URI structure for Custom Operations without associated resources is included as part of the Figure 6.2.3.1-1\nTable 6.2.4.1-1: Custom operations without associated resources\n\nThis custom operation is used by the NF service consumer (e.g., SMF, 5G PKMF) to request to resolve ProSe Remote User ID (i.e., UP-PRUK) to SUPI.\nThe URI of this custom operation is: {apiRoot}/npkmf-userid/<apiVersion>/resolve-id\nThis operation shall support the response data structures and response codes specified in tables 6.2.4.2.2-1 and 6.2.4.2.2-2.\nTable 6.2.4.2.2-1: Data structures supported by the POST Request Body on this resource\n\nTable 6.2.4.2.2-2: Data structures supported by the POST Response Body on this resource\n\nTable 6.2.4.2.2-3: Headers supported by the 307 Response Code on this resource\n\nTable 6.2.4.2.2-4: Headers supported by the 308 Response Code on this resource\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.4.1-1: Custom operations without associated resources",
                                    "table number": 20,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.4.2.2-1: Data structures supported by the POST Request Body on this resource",
                                    "table number": 21,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.4.2.2-2: Data structures supported by the POST Response Body on this resource",
                                    "table number": 22,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.4.2.2-3: Headers supported by the 307 Response Code on this resource",
                                    "table number": 23,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.4.2.2-4: Headers supported by the 308 Response Code on this resource",
                                    "table number": 24,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.5\tNotifications",
                            "text_content": "There is no notification defined for Npkmf_ResolveRemoteUserId service.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.6\tData Model",
                            "text_content": "This clause specifies the application data model supported by the API.\nTable 6.2.6.1-1 specifies the data types defined for the Npkmf_ResolveRemoteUserId service based interface protocol.\nTable 6.2.6.1-1: Npkmf_ResolveRemoteUserId specific Data Types\n\nTable 6.2.6.1-2 specifies data types re-used by the Npkmf_ResolveRemoteUserId service based interface protocol from other specifications, including a reference to their respective specifications and when needed, a short description of their use within the Npkmf_ResolveRemoteUserId service based interface.\nTable 6.2.6.1-2: Npkmf_ResolveRemoteUserId re-used Data Types\n\nThis clause defines the structures to be used in resource representations.\nTable 6.2.6.2.2-1: Definition of type ResolveRequest\n\nTable 6.2.6.2.2-1: Definition of type ResolveResponse\n\nThere are no simply data types and enumerations defined in Npkmf_ResolveRemoteUserId Service.\nThere is no data type describing alternative data types or combinations of data types in Npkmf_ResolveRemoteUserId Service.\nThere is no binary data type in Npkmf_ResolveRemoteUserId Service.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.6.1-1: Npkmf_ResolveRemoteUserId specific Data Types",
                                    "table number": 25,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.1-2: Npkmf_ResolveRemoteUserId re-used Data Types",
                                    "table number": 26,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.2.2-1: Definition of type ResolveRequest",
                                    "table number": 27,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.2.2-1: Definition of type ResolveResponse",
                                    "table number": 28,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.7\tError Handling",
                            "text_content": "For the Npkmf_ResolveRemoteUserId API, HTTP error responses shall be supported as specified in clause 4.8 of 3GPP TS 29.501 [6]. Protocol errors and application errors specified in table 5.2.7.2-1 of 3GPP TS 29.500 [5] shall be supported for an HTTP method if the corresponding HTTP status codes are specified as mandatory for that HTTP method in table 5.2.7.1-1 of 3GPP TS 29.500 [5].\nIn addition, the requirements in the following clauses are applicable for the Npkmf_ResolveRemoteUserId API.\nNo specific procedures for the Npkmf_ResolveRemoteUserId service are specified.\nThe application errors defined for the Npkmf_ResolveRemoteUserId service are listed in Table 6.2.7.3-1.\nTable 6.2.7.3-1: Application errors\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.7.3-1: Application errors",
                                    "table number": 29,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.8\tFeature negotiation",
                            "text_content": "The optional features in table 6.2.8-1 are defined for the Npkmf_ResolveRemoteUserId API. They shall be negotiated using the extensibility mechanism defined in clause 6.6 of 3GPP TS 29.500 [5].\nTable 6.2.8-1: Supported Features\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.8-1: Supported Features",
                                    "table number": 30,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.9\tSecurity",
                            "text_content": "As indicated in 3GPP TS 33.501 [8] and 3GPP TS 29.500 [5], the access to the Npkmf_ResolveRemoteUserId API may be authorized by means of the OAuth2 protocol (see IETF RFC 6749 [9]), based on local configuration, using the \"Client Credentials\" authorization grant, where the NRF (see 3GPP TS 29.510 [13]) plays the role of the authorization server.\nIf OAuth2 is used, an NF Service Consumer, prior to consuming services offered by the Npkmf_ResolveRemoteUserId API, shall obtain a \"token\" from the authorization server, by invoking the Access Token Request service, as described in 3GPP TS 29.510 [13], clause 5.4.2.2.\nNOTE:\tWhen multiple NRFs are deployed in a network, the NRF used as authorization server is the same NRF that the NF Service Consumer used for discovering the Npkmf_ResolveRemoteUserId service.\nThe Npkmf_ResolveRemoteUserId API defines a single scope \"npkmf-userid\" for the entire service, and it does not define any additional scopes at resource or operation level.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.10\tHTTP redirection",
                            "text_content": "An HTTP request may be redirected to a different 5G PKMF service instance, within the same 5G PKMF or a different 5G PKMF of an 5G PKMF set, e.g. when an 5G PKMF service instance is part of an 5G PKMF (service) set or when using indirect communications (see 3GPP TS 29.500 [5]).\nAn SCP that reselects a different 5G PKMF producer instance will return the NF Instance ID of the new 5G PKMF producer instance in the 3gpp-Sbi-Producer-Id header, as specified in clause 6.10.3.4 of 3GPP TS 29.500 [5].\nIf an 5G PKMF within an 5G PKMF set redirects a service request to a different 5G PKMF of the set using an 307 Temporary Redirect or 308 Permanent Redirect status code, the identity of the new 5G PKMF towards which the service request is redirected shall be indicated in the 3gpp-Sbi-Target-Nf-Id header of the 307 Temporary Redirect or 308 Permanent Redirect response as specified in clause 6.10.9.1 of 3GPP TS 29.500 [5].\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.3\tNpkmf_Discovery Service API",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.3.1\tIntroduction",
                            "text_content": "The Npkmf_Discovery shall use the Npkmf_Discovery API.\nThe API URI of the Npkmf_Discovery API shall be:\n{apiRoot}/<apiName>/<apiVersion>\nThe request URIs used in HTTP requests from the NF service consumer towards the NF service producer shall have the Resource URI structure defined in clause 4.4.1 of 3GPP TS 29.501 [6], i.e.:\n{apiRoot}/<apiName>/<apiVersion>/<apiSpecificResourceUriPart>\nwith the following components:\n-\tThe {apiRoot} shall be set as described in 3GPP TS 29.501 [6].\n-\tThe <apiName> shall be \"npkmf-discovery\".\n-\tThe <apiVersion> shall be \"v1\".\n-\tThe <apiSpecificResourceUriPart> shall be set as described in clause 6.3.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.2\tUsage of HTTP",
                            "text_content": "HTTP/2, IETF RFC 9113 [8], shall be used as specified in clause 5 of 3GPP TS 29.500 [5].\nHTTP/2 shall be transported as specified in clause 5.3 of 3GPP TS 29.500 [5].\nThe OpenAPI [7] specification of HTTP messages and content bodies for the Npkmf_Discovery API is contained in Annex A.\nSee clause 5.2.2 of 3GPP TS 29.500 [5] for the usage of HTTP standard headers.\nJSON, IETF RFC 8259 [9], shall be used as content type of the HTTP bodies specified in the present specification as specified in clause 5.4 of 3GPP TS 29.500 [5]. The use of the JSON format shall be signalled by the content type \"application/json\".\n\"Problem Details\" JSON object shall be used to indicate additional details of the error in a HTTP response body and shall be signalled by the content type \"application/problem+json\", as defined in IETF RFC 7807 [10].\nThe mandatory HTTP custom header fields specified in clause 5.2.3.2 of 3GPP TS 29.500 [5] shall be applicable, and the optional HTTP custom header fields specified in clause 5.2.3.3 of 3GPP TS 29.500 [5] may be supported.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.3\tResources",
                            "text_content": "This clause describes the structure for the Resource URIs and the resources and methods used for the service.\nFigure 6.3.3.1-1 describes the resource URI structure of the Npkmf_Discovery API.\n\nThe figure depicts the resource URI structure of the Npkmf_Discovery API, which is used to discover network resources. The structure includes the resource type, resource identifier, and resource URI. The figure provides a visual representation of the API's structure, making it easier to understand and interpret.\nFigure 6.3.3.1-1: Resource URI structure of the Npkmf_Discovery API\nTable 6.3.3.1-1 provides an overview of the resources and applicable HTTP methods.\nTable 6.3.3.1-1: Resources and methods overview\n\nResource URI: {apiRoot}/npkmf-disc/<apiVersion>/{ueId}/announce-authorize/{userInfoId}\nThis resource shall support the resource URI variables defined in table 6.3.3.2.2-1.\nTable 6.3.3.2.2-1: Resource URI variables for this resource\n\n6.3.3.2.3.1\tPUT\nThis method shall support the URI query parameters specified in table 6.3.3.2.3.1-1.\nTable 6.3.3.2.3.1-1: URI query parameters supported by the PUT method on this resource\n\nThis method shall support the request data structures specified in table 6.3.3.2.3.1-2 and the response data structures and response codes specified in table 6.3.3.2.3.1-3.\nTable 6.3.3.2.3.1-2: Data structures supported by the PUT Request Body on this resource\n\nTable 6.3.3.2.3.1-3: Data structures supported by the PUT Response Body on this resource\n\nTable 6.3.3.2.3.1-4: Headers supported by the 201 Response Code on this resource\n\nTable 6.3.3.2.3.1-5: Headers supported by the 307 Response Code on this resource\n\nTable 6.3.3.2.3.1-6: Headers supported by the 308 Response Code on this resource\n\nThis resource represents the Monitor Key.\nResource URI: {apiRoot}/npkmf-disc/<apiVersion>/{ueId}/monitor-key/{userInfoId}\nThis resource shall support the resource URI variables defined in table 6.3.3.3.2-1.\nTable 6.3.3.3.2-1: Resource URI variables for this resource\n\n6.3.3.3.3.1\tPUT\nThis method shall support the URI query parameters specified in table 6.3.3.3.3.1-1.\nTable 6.3.3.3.3.1-1: URI query parameters supported by the PUT method on this resource\n\nThis method shall support the request data structures specified in table 6.3.3.3.3.1-2 and the response data structures and response codes specified in table 6.3.3.3.3.1-3.\nTable 6.3.3.3.3.1-2: Data structures supported by the PUT Request Body on this resource\n\nTable 6.3.3.3.3.1-3: Data structures supported by the PUT Response Body on this resource\n\nTable 6.3.3.3.3.1-4: Headers supported by the 201 Response Code on this resource\n\nTable 6.3.3.3.3.1-5: Headers supported by the 307 Response Code on this resource\n\nTable 6.3.3.3.3.1-6: Headers supported by the 308 Response Code on this resource\n\nThis resource represents the Discovery Key.\nResource URI: {apiRoot}/npkmf-disc/<apiVersion>/{ueId}/discovery-key/{userInfoId}\nThis resource shall support the resource URI variables defined in table 6.3.3.4.2-1.\nTable 6.3.3.4.2-1: Resource URI variables for this resource\n\n6.3.3.4.3.1\tPUT\nThis method shall support the URI query parameters specified in table 6.3.3.4.3.1-1.\nTable 6.3.3.4.3.1-1: URI query parameters supported by the PUT method on this resource\n\nThis method shall support the request data structures specified in table 6.3.3.4.3.1-2 and the response data structures and response codes specified in table 6.3.3.4.3.1-3.\nTable 6.3.3.4.3.1-2: Data structures supported by the PUT Request Body on this resource\n\nTable 6.3.3.4.3.1-3: Data structures supported by the PUT Response Body on this resource\n\nTable 6.3.3.4.3.1-4: Headers supported by the 201 Response Code on this resource\n\nTable 6.3.3.4.3.1-5: Headers supported by the 307 Response Code on this resource\n\nTable 6.3.3.4.3.1-6: Headers supported by the 308 Response Code on this resource\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.3.3.1-1: Resources and methods overview",
                                    "table number": 31,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.2.2-1: Resource URI variables for this resource",
                                    "table number": 32,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.2.3.1-1: URI query parameters supported by the PUT method on this resource",
                                    "table number": 33,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.2.3.1-2: Data structures supported by the PUT Request Body on this resource",
                                    "table number": 34,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.2.3.1-3: Data structures supported by the PUT Response Body on this resource",
                                    "table number": 35,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.2.3.1-4: Headers supported by the 201 Response Code on this resource",
                                    "table number": 36,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.2.3.1-5: Headers supported by the 307 Response Code on this resource",
                                    "table number": 37,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.2.3.1-6: Headers supported by the 308 Response Code on this resource",
                                    "table number": 38,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.3.2-1: Resource URI variables for this resource",
                                    "table number": 39,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.3.3.1-1: URI query parameters supported by the PUT method on this resource",
                                    "table number": 40,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.3.3.1-2: Data structures supported by the PUT Request Body on this resource",
                                    "table number": 41,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.3.3.1-3: Data structures supported by the PUT Response Body on this resource",
                                    "table number": 42,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.3.3.1-4: Headers supported by the 201 Response Code on this resource",
                                    "table number": 43,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.3.3.1-5: Headers supported by the 307 Response Code on this resource",
                                    "table number": 44,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.3.3.1-6: Headers supported by the 308 Response Code on this resource",
                                    "table number": 45,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.4.2-1: Resource URI variables for this resource",
                                    "table number": 46,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.4.3.1-1: URI query parameters supported by the PUT method on this resource",
                                    "table number": 47,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.4.3.1-2: Data structures supported by the PUT Request Body on this resource",
                                    "table number": 48,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.4.3.1-3: Data structures supported by the PUT Response Body on this resource",
                                    "table number": 49,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.4.3.1-4: Headers supported by the 201 Response Code on this resource",
                                    "table number": 50,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.4.3.1-5: Headers supported by the 307 Response Code on this resource",
                                    "table number": 51,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.3.4.3.1-6: Headers supported by the 308 Response Code on this resource",
                                    "table number": 52,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.3.4\tCustom Operations without associated resources",
                            "text_content": "There is no custom operation without associated resources supported in Npkmf_Discovery Service.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.5\tNotifications",
                            "text_content": "There is no notification defined for Npkmf_Discovery service.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.6\tData Model",
                            "text_content": "This clause specifies the application data model supported by the API.\nTable 6.3.6.1-1 specifies the data types defined for the Npkmf_Discovery service based interface protocol.\nTable 6.3.6.1-1: Npkmf_Discovery specific Data Types\n\nTable 6.3.6.1-2 specifies data types re-used by the Npkmf_Discovery service based interface protocol from other specifications, including a reference to their respective specifications and when needed, a short description of their use within the Npkmf_Discovery service based interface.\nTable 6.3.6.1-2: Npkmf_Discovery re-used Data Types\n\nThis clause defines the structures to be used in resource representations.\nTable 6.3.6.2.2-1: Definition of type AnnounceAuthData\n\nTable 6.3.6.2.3-1: Definition of type MonitorKeyReqData\n\nTable 6.3.6.2.4-1: Definition of type MonitorKeyRespData\n\nTable 6.3.6.2.5-1: Definition of type DiscoveryKeyReqData\n\nTable 6.3.6.2.6-1: Definition of type DiscoveryKeyRespData\n\nTable 6.3.6.2.7-1: Definition of type DiscSecMaterials\n\n\nThis clause defines simple data types and enumerations that can be referenced from data structures defined in the previous clauses.\nThe simple data types defined in table 6.3.6.3.2-1 shall be supported.\nTable 6.3.6.3.2-1: Simple data types\n\nThere is no data type describing alternative data types or combinations of data types in Npkmf_Discovery Service.\nThere is no binary data type in Npkmf_Discovery Service.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.3.6.1-1: Npkmf_Discovery specific Data Types",
                                    "table number": 53,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.6.1-2: Npkmf_Discovery re-used Data Types",
                                    "table number": 54,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.6.2.2-1: Definition of type AnnounceAuthData",
                                    "table number": 55,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.6.2.3-1: Definition of type MonitorKeyReqData",
                                    "table number": 56,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.6.2.4-1: Definition of type MonitorKeyRespData",
                                    "table number": 57,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.6.2.5-1: Definition of type DiscoveryKeyReqData",
                                    "table number": 58,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.6.2.6-1: Definition of type DiscoveryKeyRespData",
                                    "table number": 59,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.6.2.7-1: Definition of type DiscSecMaterials",
                                    "table number": 60,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.3.6.3.2-1: Simple data types",
                                    "table number": 61,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.3.7\tError Handling",
                            "text_content": "For the Npkmf_Discovery API, HTTP error responses shall be supported as specified in clause 4.8 of 3GPP TS 29.501 [6]. Protocol errors and application errors specified in table 5.2.7.2-1 of 3GPP TS 29.500 [5] shall be supported for an HTTP method if the corresponding HTTP status codes are specified as mandatory for that HTTP method in table 5.2.7.1-1 of 3GPP TS 29.500 [5].\nIn addition, the requirements in the following clauses are applicable for the Npkmf_Discovery API.\nProtocol errors handling shall be supported as specified in clause 5.2.7 of 3GPP TS 29.500 [5].\nThe application errors defined for the Npkmf_Discovery service are listed in Table 6.3.7.3-1.\nTable 6.3.7.3-1: Application errors\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.3.7.3-1: Application errors",
                                    "table number": 62,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.3.8\tFeature negotiation",
                            "text_content": "The optional features in table 6.3.8-1 are defined for the Npkmf_Discovery API. They shall be negotiated using the extensibility mechanism defined in clause 6.6 of 3GPP TS 29.500 [5].\nTable 6.3.8-1: Supported Features\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.3.8-1: Supported Features",
                                    "table number": 63,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.3.9\tSecurity",
                            "text_content": "As indicated in 3GPP TS 33.501 [11] and 3GPP TS 29.500 [5], the access to the Npkmf_Discovery API may be authorized by means of the OAuth2 protocol (see IETF RFC 6749 [12]), based on local configuration, using the \"Client Credentials\" authorization grant, where the NRF (see 3GPP TS 29.510 [13]) plays the role of the authorization server.\nIf OAuth2 is used, an NF Service Consumer, prior to consuming services offered by the Npkmf_Discovery API, shall obtain a \"token\" from the authorization server, by invoking the Access Token Request service, as described in 3GPP TS 29.510 [13], clause 5.4.2.2.\nNOTE:\tWhen multiple NRFs are deployed in a network, the NRF used as authorization server is the same NRF that the NF Service Consumer used for discovering the Npkmf_Discovery service.\nThe Npkmf_Discovery API defines the following scopes \"npkmf-keyrequest\" for OAuth2 authorization as specified in 3GPP TS 33.501 [8]:\nTable 6.3.9-1: OAuth2 scopes defined in Npanf_ProseKey API\n\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.3.9-1: OAuth2 scopes defined in Npanf_ProseKey API",
                                    "table number": 64,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.3.10\tHTTP redirection",
                            "text_content": "An HTTP request may be redirected to a different 5G PKMF service instance, within the same 5G PKMF or a different 5G PKMF of an 5G PKMF set, e.g. when an 5G PKMF service instance is part of an 5G PKMF (service) set or when using indirect communications (see 3GPP TS 29.500 [5]).\nAn SCP that reselects a different 5G PKMF producer instance will return the NF Instance ID of the new 5G PKMF producer instance in the 3gpp-Sbi-Producer-Id header, as specified in clause 6.10.3.4 of 3GPP TS 29.500 [5].\nIf an 5G PKMF within an 5G PKMF set redirects a service request to a different 5G PKMF of the set using an 307 Temporary Redirect or 308 Permanent Redirect status code, the identity of the new 5G PKMF towards which the service request is redirected shall be indicated in the 3gpp-Sbi-Target-Nf-Id header of the 307 Temporary Redirect or 308 Permanent Redirect response as specified in clause 6.10.9.1 of 3GPP TS 29.500 [5].\n\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "A.1\tGeneral",
            "description": "This Annex specifies the formal definition of the API(s) defined in the present specification. It consists of OpenAPI 3.0.0 specifications in YAML format.\nThis Annex takes precedence when being discrepant to other parts of the specification with respect to the encoding of information elements and methods within the API(s).\nNOTE 1:\tThe semantics and procedures, as well as conditions, e.g. for the applicability and allowed combinations of attributes or values, not expressed in the OpenAPI definitions but defined in other parts of the specification also apply.\nInformative copies of the OpenAPI specification files contained in this 3GPP Technical Specification are available on a Git-based repository that uses the GitLab software version control system (see clause 5.3.1 of 3GPP TS 29.501 [6] and clause 5B 3GPP TR 21.900 [14]).\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.2\tNpkmf_PKMFKeyRequest API",
            "description": "openapi: 3.0.0\n\ninfo:\ntitle: Npkmf_PKMFKeyRequest\nversion: 1.0.1\ndescription: |\nPKMF KeyRequest Service.\n© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).\nAll rights reserved.\n\nexternalDocs:\ndescription: 3GPP TS 29.559 V17.2.0; 5G System; 5G ProSe Key Management Services; Stage 3.\nurl: https://www.3gpp.org/ftp/Specs/archive/29_series/29.559/\n\nservers:\n- url: '{apiRoot}/npkmf-keyrequest/v1'\nvariables:\napiRoot:\ndefault: https://example.com\ndescription: apiRoot as defined in clause 4.4 of 3GPP TS 29.501\n\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- npkmf-keyrequest\n\npaths:\n/prose-keys/request:\npost:\nsummary: Request Keying Materials for 5G ProSe\noperationId: ProseKey\ntags:\n- ProSe Keys Collection (Collection)\nrequestBody:\nrequired: true\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/ProseKeyReqData'\nresponses:\n'200':\ndescription: Success\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/ProseKeyRspData'\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\ncomponents:\nsecuritySchemes:\noAuth2ClientCredentials:\ntype: oauth2\nflows:\nclientCredentials:\ntokenUrl: '{nrfApiRoot}/oauth2/token'\nscopes:\nnpkmf-keyrequest: Access to the Npkmf_PKMFKeyRequest API\n\nschemas:\n#\n#  Structured Data Types\n#\nProseKeyReqData:\ndescription: Representation of the input to request the keying material.\ntype: object\nproperties:\nrelayServCode:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/RelayServiceCode'\nknrpFreshness1:\n$ref: '#/components/schemas/KnrpFreshnessParameter1'\nresyncInfo:\n$ref: 'TS29503_Nudm_UEAU.yaml#/components/schemas/ResynchronizationInfo'\nprukId:\n$ref: '#/components/schemas/PrukId'\nsuci:\n$ref: 'TS29509_Nausf_UEAuthentication.yaml#/components/schemas/Suci'\nrequired:\n- relayServCode\n- knrpFreshness1\n\nProseKeyRspData:\ndescription: Representation of the successfully requested keying material.\ntype: object\nproperties:\nknrp:\n$ref: '#/components/schemas/Knrp'\nknrpFreshness2:\n$ref: '#/components/schemas/KnrpFreshnessParameter2'\ngpi:\n$ref: '#/components/schemas/Gpi'\nrequired:\n- knrp\n- knrpFreshness2\n\n#\n#  Simple Data Types\n#\nPrukId:\ndescription: User Plane Prose Remote User Key ID\ntype: string\n\nKnrp:\ndescription: Key for NR PC5\ntype: string\n\nKnrpFreshnessParameter1:\ndescription: KNRP Freshness Parameter 1\ntype: string\n\nKnrpFreshnessParameter2:\ndescription: KNRP Freshness Parameter 2\ntype: string\n\nGpi:\ndescription: GBA Pushing Information\ntype: string\n\n\n#\n#  Enumeration Data Types\n#\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.3\tNpkmf_ResolveRemoteUserId API",
            "description": "openapi: 3.0.0\n\ninfo:\ntitle: Npkmf_ResolveRemoteUserId\nversion: 1.0.0\ndescription: |\nPKMF Resolve Remote User Id Service.\n© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).\nAll rights reserved.\n\nexternalDocs:\ndescription: 3GPP TS 29.559 V17.3.0; 5G System; 5G ProSe Anchor Services; Stage 3.\nurl: https://www.3gpp.org/ftp/Specs/archive/29_series/29.559/\n\nservers:\n- url: '{apiRoot}/npkmf-userid/v1'\nvariables:\napiRoot:\ndefault: https://example.com\ndescription: apiRoot as defined in clause 4.4 of 3GPP TS 29.501\n\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- npkmf-userid\n\npaths:\n/resolve-id:\npost:\nsummary: Retrieve the SUPI of the ProSe Remote UE\noperationId: RetrieveSUPI\ntags:\n- SUPI Retrieval\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/ResolveRequest'\nrequired: true\nresponses:\n'200':\ndescription: Expected response to a valid request\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/ResolveResponse'\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\ndescription: Unexpected error\n\ncomponents:\nsecuritySchemes:\noAuth2ClientCredentials:\ntype: oauth2\nflows:\nclientCredentials:\ntokenUrl: '{nrfApiRoot}/oauth2/token'\nscopes:\nnpkmf-userid: Access to the Npkmf_ResolveRemoteUserId API\n\nschemas:\n#\n#  Structured Data Types\n#\n\nResolveRequest:\ndescription: Request Data\ntype: object\nproperties:\nupPrukId:\n$ref: 'TS29559_Npkmf_PKMFKeyRequest.yaml#/components/schemas/PrukId'\nplmnId:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PlmnId'\nrequired:\n- upPrukId\n\nResolveResponse:\ndescription: Response Data\ntype: object\nproperties:\nsupi:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Supi'\nrequired:\n- supi\n\n#\n#  Simple Data Types\n#\n\n\n#\n#  Enumeration Data Types\n#\n\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.4\tNpkmf_Discovery API",
            "description": "openapi: 3.0.0\n\ninfo:\ntitle: Npkmf_Discovery API\nversion: '1.0.0'\ndescription: |\nNpkmf_Discovery Service.\n© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).\nAll rights reserved.\n\nexternalDocs:\ndescription: 3GPP TS 29.559 V17.5.0; 5G System; 5G ProSe Key Management Services; Stage 3.\nurl: https://www.3gpp.org/ftp/Specs/archive/29_series/29.559/\n\nservers:\n- url: '{apiRoot}/npkmf-discovery/v1'\nvariables:\napiRoot:\ndefault: https://example.com\ndescription: apiRoot as defined in clause 4.4 of 3GPP TS 29.501\n\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- npkmf-discovery\n\npaths:\n/{ueId}/announce-authorize/{userInfoId}:\nput:\nsummary: Obtain the authorization from the 5G PKMF for announcing in the PLMN\noperationId: ObtainAnnounceAuth\ntags:\n- Obtain the authorization from the 5G PKMF for announcing in the PLMN\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- npkmf-disc\n- oAuth2ClientCredentials:\n- npkmf-disc\n- npkmf-disc:announce-authorize:modify\nparameters:\n- name: ueId\nin: path\ndescription: Identifier of the UE\nrequired: true\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/VarUeId'\n- name: userInfoId\nin: path\ndescription: User Info Id\nrequired: true\nschema:\n$ref: '#/components/schemas/UserInfoId'\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/AnnounceAuthData'\nrequired: true\nresponses:\n'201':\ndescription: Successful creation of the resource\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/AnnounceAuthData'\nheaders:\nLocation:\ndescription: >\nContains the URI of the newly created resource, according to the structure:\n{apiRoot}/npkmf-disc>/<apiVersion>/{ueId}/announce-authorize/{userInfoId}\nrequired: true\nschema:\ntype: string\n'204':\ndescription: Successful update of the resource.\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\ndescription: Unexpected error\n\n/{ueId}/monitor-key/{userInfoId}:\nput:\nsummary: Obtain the discovery key from the 5G PKMF for monitoring in the PLMN\noperationId: ObtainMonitorKey\ntags:\n- Obtain the discovery key from the 5G PKMF for monitoring in the PLMN\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- npkmf-disc\n- oAuth2ClientCredentials:\n- npkmf-disc\n- npkmf-disc:monitor-key:modify\nparameters:\n- name: ueId\nin: path\ndescription: Identifier of the UE\nrequired: true\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/VarUeId'\n- name: userInfoId\nin: path\ndescription: User Info Id\nrequired: true\nschema:\n$ref: '#/components/schemas/UserInfoId'\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/MonitorKeyReqData'\nrequired: true\nresponses:\n'201':\ndescription: Created\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/MonitorKeyRespData'\nheaders:\nLocation:\ndescription: >\nContains the URI of the newly created resource, according to the structure:\n{apiRoot}/npkmf-disc>/<apiVersion>/{ueId}/monitor-key/{userInfoId}\nrequired: true\nschema:\ntype: string\n'204':\ndescription: Successful update of the resource.\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\ndescription: Unexpected error\n\n/{ueId}/discovery-key/{userInfoId}:\nput:\nsummary: Obtain the discovery key from the 5G PKMF for a discoverer UE\noperationId: ObtainDiscKey\ntags:\n- Obtain the discovery key for a discoverer UE\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- npkmf-disc\n- oAuth2ClientCredentials:\n- npkmf-disc\n- npkmf-disc:discovery-authorize:modify\nparameters:\n- name: ueId\nin: path\ndescription: Identifier of the UE\nrequired: true\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/VarUeId'\n- name: userInfoId\nin: path\ndescription: User Info Id\nrequired: true\nschema:\n$ref: '#/components/schemas/UserInfoId'\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/DiscoveryKeyReqData'\nrequired: true\nresponses:\n'201':\ndescription: Created\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/DiscoveryKeyRespData'\nheaders:\nLocation:\ndescription: >\nContains the URI of the newly created resource, according to the structure:\n{apiRoot}/npkmf-disc>/<apiVersion>/{ueId}/discovery-key/{userInfoId}\nrequired: true\nschema:\ntype: string\n'204':\ndescription: Successful update of the resource.\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\ndescription: Unexpected error\n\n\ncomponents:\nsecuritySchemes:\noAuth2ClientCredentials:\ntype: oauth2\nflows:\nclientCredentials:\ntokenUrl: '{nrfApiRoot}/oauth2/token'\nscopes:\nnpkmf-disc: Access to the Npkmf_Discovery API\nnpkmf-disc:announce-authorize:modify: >\nAccess to modify the authorization to announce for a UE in the PLMN\nnpkmf-disc:monitor-key:modify: >\nAccess to modify the authorization for monitoring for an UE in the PLMN\nnpkmf-disc:discovery-key:modify: >\nAccess to modify the authorization from the 5G DDNMF for a discoverer UE\nin the PLMN to operate Model B restricted discovery\n\nschemas:\n\n# STRUCTURED TYPES:\n\nAnnounceAuthData:\ntype: object\ndescription: Represents Data used to request the authorization to announce for a UE\nrequired:\n- relayServCode\nproperties:\nrelayServCode:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/RelayServiceCode'\n\nMonitorKeyReqData:\ntype: object\ndescription: Data used to request the discovery key to monitor for a UE\nrequired:\n- relayServCode\n- ueSecurityCapability\nproperties:\nrelayServCode:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/RelayServiceCode'\nueSecurityCapability:\n$ref: '#/components/schemas/UeSecurityCapability'\n\nMonitorKeyRespData:\ntype: object\ndescription: Represents the obtained Monitor Discovery Key Data for a UE\nrequired:\n- chosenPc5CipheringAlgorithm\n- discSecMaterials\nproperties:\nchosenPc5CipheringAlgorithm:\n$ref: '#/components/schemas/ChosenPc5CipheringAlgorithm'\ndiscSecMaterials:\n$ref: '#/components/schemas/DiscSecMaterials'\nDiscoveryKeyReqData:\ntype: object\ndescription: Data used to request the discovery key to monitor for a discoverer UE\nrequired:\n- relayServCode\n- ueSecurityCapability\nproperties:\nrelayServCode:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/RelayServiceCode'\nueSecurityCapability:\n$ref: '#/components/schemas/UeSecurityCapability'\n\nDiscoveryKeyRespData:\ntype: object\ndescription: Represents the obtained Monitor Discovery Key Data for a discoverer UE\nrequired:\n- chosenPc5CipheringAlgorithm\n- discSecMaterials\nproperties:\nchosenPc5CipheringAlgorithm:\n$ref: '#/components/schemas/ChosenPc5CipheringAlgorithm'\ndiscSecMaterials:\n$ref: '#/components/schemas/DiscSecMaterials'\nDiscSecMaterials:\ntype: object\ndescription: Represents the discovery security materials\nproperties:\nduik:\n$ref: '#/components/schemas/Duik'\ndusk:\n$ref: '#/components/schemas/Dusk'\nduck:\n$ref: '#/components/schemas/Duck'\n\n\n\n# SIMPLE TYPES:\nUserInfoId:\ntype: string\n\nUeSecurityCapability:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Bytes'\n\nChosenPc5CipheringAlgorithm:\ndescription: Contains the chosen PC5 ciphering algorithm.\ntype: integer\n\nDuik:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Bytes'\n\nDusk:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Bytes'\n\nDuck:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Bytes'\n\n# ENUMS:\n\n\n\n\n",
            "summary": "",
            "tables": [
                {
                    "description": "",
                    "table number": 65,
                    "summary": "",
                    "name": ""
                }
            ],
            "figures_meta_data": [],
            "subsections": []
        }
    ]
}