{
    "document_name": "24582-i20.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Specification has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document specifies the media plane control protocols and interactions with the media needed to support Mission Critical Data (MCData) services, which are IP Connectivity, Short Data Service (SDS) and File Distribution (FD).\nMission critical communication services are services that require preferential handling compared to normal telecommunication services, e.g. in support of police or fire brigade.\nThe MCData service and its associated media plane control protocols can be used for public safety applications and also for general commercial applications (e.g., utility companies and railways).\nThe present document is applicable to User Equipment (UE) supporting MCData client functionality and to servers in the MCData system.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 23.282: \"Functional architecture and information flows to support Mission Critical Data (MCData) Stage-2\".\n[3]\t3GPP TS 23.280: \"Common functional architecture to support mission critical services Stage-2\".\n[4]\t3GPP TS 24.481: \"Mission Critical Services (MCS) group management; Protocol Specifications\".\n[5]\t3GPP TS 24.482: \"Mission Critical Services (MCS) identity management; Protocol Specifications\".\n[6]\t3GPP TS 24.483: \"Mission Critical Services (MCS) Management Object (MO)\".\n[7]\t3GPP TS 24.484: \"Mission Critical Services (MCS) configuration management; Protocol Specifications \".\n[8]\t3GPP TS 24.282: \"Mission Critical Services (MCS) signalling control; Protocol Specifications \".\n[9]\tIETF RFC 2046 (November 1996): \"Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types\".\n[10]\tIETF RFC 4122 (July 2005): \"A Universally Unique IDentifier (UUID) URN Namespace\".\n[11]\tIETF RFC 4975 (September 2007): \"The Message Session Relay Protocol (MSRP)\".\n[12]\tIETF RFC 6135 (February 2011): \"An Alternative Connection Model for the Message Session Relay Protocol (MSRP)\".\n[13]\tIETF RFC 6714 (August 2012): \"Connection Establishment for Media Anchoring (CEMA) for the Message Session Relay Protocol (MSRP)\".\n[14]\tIETF RFC 4976 (September 2007): \"Relay Extensions for the Message Session Relay Protocol (MSRP)\".\n[15]\t3GPP TS 33.180: \"Security of mission critical services\".\n[16]\tIETF RFC 3550 (July 2003): \"RTP: A Transport Protocol for Real-Time Applications\".\n[17]\tIETF RFC 3711 (March 2004): \"The Secure Real-time Transport Protocol (SRTP)\".\n[18]\t3GPP TS 24.008: \"Mobile radio interface Layer 3 specification; Core network protocols; Stage 3\".\n[19]\tIETF RFC 2784 (March 2000): \"Generic Routing Encapsulation (GRE).\n[20]\tIETF RFC 2790 (September2000): \"Key and Sequence Number Extensions to GRE.\n[21]\tIETF RFC 791 (September 1981) \"INTERNET PROTOCOL\".\n[22]\tIETF RFC 8200 (July 2017) \"Internet Protocol, Version 6 (IPv6) Specification\".\n[23]\tIETF RFC 8086 (March 2017) \"GRE-in-UDP Encapsulation.\n[24]\t3GPP TS 24.501: \"Technical Specification Group Core Network and Terminals; Non-Access-Stratum (NAS) protocol for 5G System (5GS); Stage 3\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tDefinitions",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms and definitions given in 3GPP TR 21.905 [1] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in 3GPP TR 21.905 [1].\nexample: text used to clarify abstract rules by applying them literally.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in 3GPP TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in 3GPP TR 21.905 [1].\nCSK\tClient-Server Key\nCSK-ID\tClient-Server Key Identifier\nDPCK\tMCData Payload Cipher Key\nDPCK-ID\tMCData Payload Cipher Key Identifier\nDPKK\tMCData Payload Protection Key\nDPKK-ID\tMCData Payload Protection Key Identifier\nFD\tFile Distribution\nGMK\tGroup Master Key\nGMK-ID\tGroup Master Key Identifier\nGRE\tGeneric Routing Encapsulation\nKMS\tKey Management Server\nKPAK\tKMS Public Authentication Key\nMBS\tMulticast/Broadcast Service\nPCK\tPrivate Call Key\nPCK-ID\tPrivate Call Key Identifier\nPVT\tPublic Validation Token\nSDS\tShort Data Service\nSPK\tSignalling Protection Key\nSPK-ID\tSignalling Protection Key Identifier\nSSK\tSecret Signing Key\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tGeneral",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "4.1\tOverview",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.1.1\tShort data service",
                            "text_content": "The media plane control procedures, both for one-to-one and group short data services, take place for on-network only, when standalone short data is sent using media plane or when the short data is sent after an SDS session is established. In both cases the media plane is established as specified in 3GPP TS 24.282 [8].\nThe media plane uses the MSRP protocol as specified in RFC 4975 [11], RFC 4976 [14], RFC 6135 [12], and RFC 6714 [13].\nIn a standalone SDS using media plane, a single SDS message is sent by the originating MCData client as specified in this document. The procedure is terminated as specified in 3GPP TS 24.282 [8].\nWhen an SDS session is established any MCData client with appropriate permissions, which participates this SDS session, can initiate the transmission of and SDS message until the termination of the SDS session. The termination of an SDS session is specified in 3GPP TS 24.282 [8].\nAn SDS message sent using media plane is carried in the body of an MSRP SEND request. The media control parameters and the data of an SDS message are carried in separate bodies in the same MSRP SEND request.\nThe Conversation ID,the Message ID, the optional InReplyTo message ID, the optional SDS disposition request type and the optional Application identifier are communicated by the MCData client which sends the SDS message in the media control part of the body in the MSRP SEND request. The data is carried in a separate body of the MSRP SEND request.\nFor standalone SDS using media plane, the disposition notification is communicated as specified in 3GPP TS 24.282 [8].\nFor SDS during an SDS session the disposition notification is communicated using the procuderes specified in the current document until the SDS session is terminated. After the termination of the SDS session the disposition notification, if any, is communicated as specified in 3GPP TS 24.282 [8].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.1.2\tFile distribution",
                            "text_content": "The media plane control procedures, both for one-to-one and group file distribution using media plane, take place for on-network only. The media plane for FD is established as specified in 3GPP TS 24.282 [8].\nThe media plane uses the MSRP protocol as specified in RFC 4975 [11], RFC 4976 [14], RFC 6135 [12], and RFC 6714 [13].\nA file is sent using media plane by the originating MCData client as specified in this document. The procedure is terminated as specified in 3GPP TS 24.282 [8].\nThe Conversation ID , the Message ID, the optional InReplyTo message ID, the optional FD disposition request type, the optional Application ID, the optional Mandatory download and the optional Metadata are communicated by the MCData client which sends the file using the procedures specified in 3GPP TS 24.282 [8] while establishing the media plane.\nThe file is carried in the body of the MSRP SEND request as specified in this document.\nThe disposition notification is communicated as specified in 3GPP TS 24.282 [8].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.1.3\tVoid",
                            "text_content": "",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.1.4\tIP Connectivity",
                            "text_content": "The media plane control procedures for one-to-one IP Connectivity service using media plane, take place for on-network only. The media plane for IP Connectivity is established and terminated as specified in 3GPP TS 24.282 [8].\nThe media plane uses the IP protocol as specified in RFC 791 [21] and RFC 8200 [22].\nThe IP Connectivity media plane is established by the originating MCData client as specified in this document.\nIP Connectivity provides a media plane for exchange of any kind of IP data between IP applications. Once the media plane is established along with IP Connectivity the IP applications can exchange IP data.\nNOTE\tIP Connectivity specified in the current document is not compatible with release 16.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.2\tOther considerations",
                    "description": "",
                    "summary": "",
                    "text_content": "When an SDS message is sent using media plane, the body included in the MSRP SEND request, which carries media control information or which carries notification information, is protected between each entity separately if protection is applied. On the other hand the body included in the MSRP SEND request which carries the data is end to end protected. The procedures for the protection of the media control information or notification or of the data are specified in this document.\nWhen a file is is sent using media plane, the file or file portion, included in the body of the MSRP SEND request, is end to end protected. The procedure for the protection of the file is specified in this document.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "5\tFunctional entities",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tGeneral for MCData functional entities",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.1.1\tSDS and FD",
                            "text_content": "Media plane control is conducted between the MCData server and MCData UE. MCData server has capability functions for SDS and FD. MCData UE incorporates the MCData client. MCData user or MCData user application may feed or consume data transmitted or received via the capability functions in the MCData client. The capability function in the MCData client provides SDS and FD services.\nThe capability functions of the MCData server are specified for the controlling MCData function and the participating MCData function. The capability functions of the MCData UE are specified for the MCData client.\nData to be transmitted either by the MCData user or by a MCData user application using media plane shall be transmitted by the MCData client to the participating MCData function. The participating MCData function shall forward the data to the controlling MCData function. The controlling MCData function shall distribute the data to the destination MCData client for one-to-one MCData service and to the MCData clients of the affiliated group members for group MCData service via the participating MCData functions serving each destination MCData client. A participating MCData function may serve one or more MCData clients. Based on deployment, controlling MCData function may be in communication with zero, one or more participating MCData functions. If a participating MCData function is collocated with the controlling MCData function, the controlling MCData function may perform the functions of this co-located participating MCData function. In this case the controlling MCData function and this co-located participating MCData function shall act as a single entity.\nIn the media plane the MCData client and the controlling MCData function shall act as MSRP clients. If and when a participating MCData function is in the communication path as a separate entity between the controlling MCData function and one or more MCData clients, it shall act as an MSRP relay.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.2\tIP Connectivity",
                            "text_content": "IP Connectivity provides a media plane for exchange of any kind of IP data between IP applications. These IP applications may reside on external non-3GPP hosts connected via an IP interface to the MCData UE that incorporates the MCData client, or they may be running on the MCData UE. The participating MCData function and the controlling MCData functions may be in the path of the data exchange between the authorized MC Data users.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.2\tFunctional entities for SDS",
                    "description": "",
                    "summary": "",
                    "text_content": "The capability function for SDS for media plane in the MCData server is composed of SDS distribution function and the Transmission/Reception control. In the media plane the functions of SDS distribution and the Transmission/Reception control are specified for the controlling MCData function and the participating MCData function. The functions of the SDS are specified for the SDS function in MCData client.\nFor SDS, data is composed of short data in the form of text, hypertext, binary string or location information. Short data generated in the MCData client and sent using media plane follows the path for the originating MCData client to the terminating MCData clients as explained in clause 5.1.1.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.3\tFunctional entities for FD",
                    "description": "",
                    "summary": "",
                    "text_content": "The capability function for FD for media plane in the MCData server is composed of FD function and the Transmission/Reception control. The file distribution over media plane functionalities in the MCData server are specified for the controlling MCData function and the participating MCData function. The functions of the FD are specified for the FD function in the MCData client.\nFor FD, data is composed of a file. A file provided at the MCData client and sent using media plane follows the path from the originating MCData client to the terminating MCData clients as explained in clause 5.1.1.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.4\tFunctional entities for IP Connectivity",
                    "description": "",
                    "summary": "",
                    "text_content": "For IP Connectivity, the transmitted data may consist of any kind of IP data. IP Connectivity data sent by the MCData client using media plane follows the path from the originating MCData client to the terminating MCData client as explained in clause 5.1.2.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "6\tSDS media plane procedures",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.1\tMCData client procedures",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.1.1\tStandalone SDS via media plane",
                            "text_content": "In a standalone SDS via media plane, upon receiving an SDS request from the user or user application the originating MCData client establishes the media plane as specified in 3GPP TS 24.282 [8]. When the media plane is established a conversation ID is associated with this SDS message.\nFor the procedures in clause 6.1.1.2 it is assumed that it has been verified that:\n1.\tif standalone one to one SDS using media plane is initiated:\na.\tthe MCData client is allowed to transmit data;\nb.\tthe size of the SDS message is less than or equal to maximum amount of data that the MCData user can transmit in a single request during one-to-one communication; and\nc.\tthe size of the SDS message is less than or equal to maximum data size for SDS;\n2.\tif standalone group SDS using media plane is initiated:\na.\tthe MCData client is allowed to transmit data in this group;\nb.\tthe size of the SDS message is less than or equal to maximum amount of data that the MCData user can transmit in a single request during group communication;and\nc.\tthe size of the SDS message is less than or equal to maximum data size for SDS; and3.\tthe size of the short data including the media plane information elements is larger than the allowed limits over MCData-SDS-1 interface using SIP reference points.\nbefore the media plane establishment is initiated as specified in 3GPP TS 24.282[8]:\nThe procedures in clause 6.1.1.2 and clause 6.1.1.3 are applicable for one-to-one and group standalone SDS using media plane.\nUpon receiving an indication to establish MSRP connection for standalone SDS using media plane as the originating client, the MCData client:\n1.\tshall act as an MSRP client according to IETF RFC 6135 [12];\n2.\tshall act according to IETF RFC 6135 [12], as:\na.\tan \"active\" endpoint, if a=setup attribute in the received SDP answer is set to \"passive\"; and\nb.\tan \"passive\" endpoint, if a=setup attribute in the received SDP answer is set to \"active\";\n3.\tshall establish the MSRP connection according to the MSRP connection parameters in the SDP answer received in the SIP 200 (OK) response according to IETF RFC 4975 [11]; and\n4.\tif acting as an \"active\" endpoint, shall send an empty MSRP SEND request to bind the MSRP connection to the MSRP session from the perspective of the passive endpoint according to the rules and procedures of IETF RFC 4975 [11] and IETF RFC 6135 [12].\nOn receiving MSRP 200 (OK) response to the first MSRP SEND request, the MCData client:\n1.\tshall generate a SDS SIGNALLING PAYLOAD as specified in clause 6.1.1.2.2;\n2.\tshall generate a SDS DATA PAYLOAD as specified in clause 6.1.1.2.3;\n3.\tshall include the SDS SIGNALLING PAYLOAD and SDS DATA PAYLOAD in an MSRP SEND request as specified in clause 6.1.1.2.4; and\n4.\tshall send the MSRP SEND request on the established MSRP connection.\nIf MSRP chunking is not used then on receipt of a 200 (OK) response, the MCData client shall terminate the SIP session as specified in 3GPP TS 24.282 [8].\nIf MSRP chunking is used, the MCData client:\n1.\tshall send further MSRP SEND requests as necessary;\n2.\tshall wait for a 200 (OK) response to each MSRP SEND request sent; and\n3.\ton receipt of the last 200 (OK) response shall terminate the SIP session as specified in 3GPP TS 24.282 [8].\nOn receiving a non-200 MSRP response to the MSRP SEND request the MCData client shall handle the error as specified in IETF RFC 4975 [11]. To terminate the MSRP session, the MCData client:\n1.\tif there are further MSRP chunks to send, shall abort transmission of these further MSRP chunks;\n2.\tshall indicate to MCData user that the SDS message could not be sent; and\n3.\tshall terminate the SIP session as specified in 3GPP TS 24.282 [8].\nOn receiving an indication to terminate the session from the signalling plane, the MCData client:\n1.\tif there are further MSRP chunks to send, shall abort transmission of these further MSRP chunks and may indicate to MCData user that the SDS message could not be sent.\nIn order to generate an SDS signalling payload, the MCData client:\n1.\tshall generate an SDS SIGNALLING PAYLOAD message as specified in 3GPP TS 24.282 [8]; and\n2.\tshall include the SDS SIGNALLING PAYLOAD message in an application/vnd.3gpp.mcdata-signalling MIME body as specified in 3GPP TS 24.282 [8]; and\nWhen generating a an SDS SIGNALLING PAYLOAD message, the MCData client:\n1.\tshall generate a SDS SIGNALLING PAYLOAD message as defined in 3GPP TS 24.282 [8]. In the SDS SIGNALLING PAYLOAD message, the MCData client:\na.\tmay include and set the Disposition request type IE to:\ni.\t\"DELIVERY\", if only delivery disposition is requested;\nii.\t\"READ\", if only read disposition is requested; or\niii.\t\"DELIVERY AND READ\", if both delivery and read dispositions are requested;\nb.\tshall set Date and time IE to current UTC time;\nc.\tshall set Conversation ID IE to a universally unique message ID generated as per IETF RFC 4122 [10];\nd.\tshall set Message ID IE to a universally unique message ID generated as per IETF RFC 4122 [10];\ne.\tif indicated that the SDS message is in reply to another SDS message then, shall include the Reply ID IE set to the message identifier of the indicated SDS message;\nf.\tif indicated that the target recipient of the SDS message is an application then, shall set Application Identifier IE to the application identifier; and\ng)\tshall set the Sender MCData user ID to its own MCData user ID as specified in clause 15.2.15 of 3GPP TS 24.282 [8].\nIn order to generate SDS data payload, the MCData client:\n1.\tshall generate a DATA PAYLOAD message as specified in 3GPP TS 24.282 [8]; and\n2.\tshall include the DATA PAYLOAD message in an application/vnd.3gpp.mcdata-payload MIME body as specified in 3GPP TS 24.282 [8].\nWhen generating a a DATA PAYLOAD message, the MCData client:\n1.\tshall generate a SDS DATA PAYLOAD message as defined in 3GPP TS 24.282 [8]. In the SDS DATA PAYLOAD message, the MCData client:\na.\tshall set Number of payloads IE to the total number of payloads being sent; and\nb.\tfor each payload, shall include Payload IE. In the Payload IE:\ni.\tshall set Payload content type to \"TEXT\", or \"BINARY\", or \"HYPERLINKS\", or \"LOCATION\" according to the payload type; and\nii.\tshall set Payload data IE to actual payload.\nThe MCData client shall take the procedures in clause 6.4.1 into consideration when generating MSRP SEND messages.\nThe MCData client shall generate MSRP SEND for SDS message requests according to IETF RFC 4975 [11].\nWhen generating an MSRP SEND for SDS message request containing an SDS SIGNALLING PAYLOAD message and an SDS DATA PAYLOAD message, the MCData client\n1.\tshall set To-Path header according to the MSRP URI(s) received in the answer SDP;\n2.\tshall include two MIME bodies in accordance with clause 6.4.1 where:\na.\tin the first body the Content-Type header field is set to \"application/vnd.3gpp.mcdata-signalling\" and the generated SDS SIGNALLING PAYLOAD message is included; and\nb.\tin the second body the Content-Type header field is set to \"application/vnd.3gpp.mcdata-payload\" and the generated SDS DATA PAYLOAD message is included.\nWhen generating an MSRP SEND for SDS message request containing only an SDS DATA PAYLOAD message, the MCData client:\n1.\tshall set To-Path header according to the MSRP URI(s) received in the answer SDP;\n2.\tshall set the Content-Type as \"application/vnd.3gpp.mcdata-payload\"; and\n3.\tshall set the body of the MSRP SEND request to the generated SDS DATA PAYLOAD message.\nWhen generating an MSRP SEND for SDS message request containing only an SDS SIGNALLING PAYLOAD, the MCData client.\n1.\tshall set To-Path header according to the MSRP URI(s) received in the answer SDP;\n2.\tshall set the Content-Type as \"application/vnd.3gpp.mcdata-signalling\"; and\n3.\tshall set the body of the MSRP SEND request to the generated SDS SIGNALLING PAYLOAD message.\nUpon receiving an indication to establish MSRP connection for standalone SDS using media plane as the terminating client, the MCData client:\n1.\tshall act as an MSRP client according to IETF RFC 6135 [12];\n2.\tshall act either as an active endpoint or as an passive endpoint to open the transport connection, according to IETF RFC 6135 [12];\n3.\tshall establish the MSRP connection according to the MSRP connection parameters in the SDP offer received in the SIP INVITE request according to IETF RFC 4975 [11];\n4.\tif acting as an \"active\" endpoint, shall send an empty MSRP SEND request to bind the MSRP connection to the MSRP session from the perspective of the passive endpoint according to the rules and procedures of IETF RFC 4975 [11] and IETF RFC 6135 [12];\nOnce the MSRP connection is established, the MCData client:\n1.\ton receipt of an MSRP request in an MSRP session, shall follow the rules and procedures defined in IETF RFC 4975 [11] and in IETF RFC 6714 [13];\n2.\tIf an MSRP SEND request indicates the use of chunking, shall wait until all further MSRP SEND requests for the remaining chunks have been received and shall reassemble the entire set of MSRP requests into the MCData standalone message before delivering the content to the application; and\n3.\tshall handle the received content as described in clause 6.1.1.3.2.\nThe MCData client:\n1.\tshall decode the contents of the application/vnd.3gpp.mcdata-signalling MIME body;\n2.\tshall decode the contents of the application/vnd.3gpp.mcdata-payload MIME body;\n3.\tif the SDS SIGNALLING PAYLOAD message contains a new Conversation ID, shall instantiate a new conversation with the Message ID in the SDS SIGNALLING PAYLOAD identifying the first message in the conversation thread;\n4.\tif the SDS SIGNALLING PAYLOAD message contains an existing Conversation ID and:\na.\tif the SDS SIGNALLING PAYLOAD message does not contain an InReplyTo Message ID, shall use the Message ID in the SDS SIGNALLING PAYLOAD to identify a new message in the existing conversation thread; and\nb.\tif the SDS SIGNALLING PAYLOAD message contains an InReplyTo Message ID, shall associate the message to an existing message in the conversation thread as identified by the InReplyTo Message ID in the SDS SIGNALLING PAYLOAD and use the Message ID in the SDS SIGNALLING PAYLOAD to identify the new message;\n5.\tshall identify the number of Payload IEs in the DATA PAYLOAD message from the Number of Payloads IE in the DATA PAYLOAD message;\n6.\tif the SDS SIGNALLING PAYLOAD message does not contain an Application identifier IE:\na.\tshall determine that the payload contained in the DATA PAYLOAD message is for user consumption;\nb.\tmay notify the MCData user; and\nc.\tshall render the contents of the Payload IE(s) to the MCData user;\n7.\tif the SDS SIGNALLING PAYLOAD message contains an Application identifier IE:\na.\tshall determine that the payload contained in the DATA PAYLOAD message is not for user consumption;\nb.\tshall not notify the MCData user;\nc.\tif the Application identifier value is unknown, shall discard the SDS message; and\nd.\tif the Application identifier value is known, shall deliver the contents of the Payload IE(s) to the identified application; and\n8.\tif SDS Disposition request type IE is present in the SDS SIGNALLING PAYLOAD message received in clause 6.1.1.3.1 then, shall send a disposition notification as described in 3GPP TS 24.282 [8] clause 9.2.1.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.2\tShort data during an SDS session",
                            "text_content": "In a SDS session, upon receiving an SDS request from the user or user application the originating MCData client establishes the media plane as specified in 3GPP TS 24.282 [8].\nThe procedure in clause 6.1.2.2 and clause 6.1.2.3 are applicable for one-to-one and group SDS session.\nAny MCData user with appropriate permissions, originator of the SDS session or not, can send a SDS message during the SDS session.\nA client which is not permitted to transmit data should not use the procedure in clause 6.1.2.2 and clause 6.1.2.3.\nUpon receiving an indication to establish MSRP connection for SDS session as the originating MCData client, the MCData client:\n1.\tshall act as an MSRP client according to IETF RFC 6135 [12];\n2.\tshall act according to IETF RFC 6135 [12], as:\na.\tan \"active\" endpoint, if a=setup attribute in the received SDP answer is set to \"passive\"; and\nb.\tan \"passive\" endpoint, if a=setup attribute in the received SDP answer is set to \"active\";\n3.\tshall establish the MSRP connection according to the MSRP connection parameters in the SDP answer received in the SIP 200 (OK) response according to IETF RFC 4975 [11];\n4.\tif acting as an \"active\" endpoint, shall send an empty MSRP SEND request to bind the MSRP connection to the MSRP session from the perspective of the passive endpoint according to the rules and procedures of IETF RFC 4975 [11] and IETF RFC 6135 [12];\nOnce the MSRP session is established, the MCData client:\n1.\ton receipt of an MSRP request in the MSRP session, shall follow the rules and procedures defined in IETF RFC 4975 [11] and in IETF RFC 6714 [13];\n2.\tIf an MSRP SEND request indicates the use of chunking, shall wait until all further MSRP SEND requests for the remaining chunks have been received and shall reassemble the entire set of MSRP requests into the MCData SDS message before delivering the content to the application; and\n3.\tshall handle the received content as described in clause 6.1.2.6.\nOn receiving MSRP 200 (OK) response to the first MSRP SEND request, the MCData client can generate and send an SDS message as specified in clause 6.1.2.4, or can generate and send an SDS disposition notification for a received SDS message as specified in clause 6.1.2.5, if requested.\nReceived content and disposition requests shall be handled as specified in clause 6.1.2.6.\nUpon receiving an indication to establish MSRP connection for SDS session as the terminating MCData client, the MCData client:\n1.\tshall act as an MSRP client according to IETF RFC 6135 [12];\n2.\tshall act either as an active endpoint or as an passive endpoint to open the transport connection, according to IETF RFC 6135 [12];\n3.\tshall establish the MSRP connection according to the MSRP connection parameters in the SDP offer received in the SIP INVITE request according to IETF RFC 4975 [11];\n4.\tif acting as an \"active\" endpoint, shall send an empty MSRP SEND request to bind the MSRP connection to the MSRP session from the perspective of the passive endpoint according to the rules and procedures of IETF RFC 4975 [11] and IETF RFC 6135 [12];\nOnce the MSRP session is established, the MCData client:\n1.\ton receipt of an MSRP request in the MSRP session, shall follow the rules and procedures defined in IETF RFC 4975 [11] and in IETF RFC 6714 [13];\n2.\tIf an MSRP SEND request indicates the use of chunking, shall wait until all further MSRP SEND requests for the remaining chunks have been received and shall reassemble the entire set of MSRP requests into the MCData SDS message before delivering the content to the application; and\n3.\tshall handle the received content as described in clause 6.1.2.6.\nOn receiving MSRP 200 (OK) response to the first MSRP SEND request sent as \"active\" endpoint, or after sending MSRP 200 (OK) response to the first MSRP SEND request received as \"passive\" endpoint, the MCData client can generate and send an SDS message as specified in clause 6.1.2.4, or can generate and send an SDS disposition notification for a received SDS message as specified in clause 6.1.2.5, if requested.\nReceived content and disposition requests shall be handled as specified in clause 6.1.2.6.\nAn MCData client is allowed to send a one-to-one SDS message only if:\n1.\tthe <allow-transmit-data> element of an <actions> element is present with a value \"true\" (see the MCData user profile document in 3GPP TS 24.484 [7]);\n2.\tthe size of the SDS message is less than or equal to the value of the <max-data-size-sds-bytes> element in the MCData service configuration document as specified in 3GPP TS 24.484 [7]; and\n3.\tthe size of the SDS message is less than or equal to the value of <MaxData1To1> element of the MCData user profile document (see the MCData user profile document in 3GPP TS 24.484 [7]).\nAn MCData client is allowed to send a group SDS message only if:\n1.\tthe <mcdata-allow-transmit-data-in-this-group> element of an <action> element is present with a value \"true\" as defined in the MCData group document for this MCData group as specified in 3GPP TS 24.481 [4];\n2.\tthe size of the SDS message is less than or equal to the value contained in the <mcdata-on-network-max-data-size-for-SDS> as defined in the MCData group document for this MCData group as specified in 3GPP TS 24.481 [4]; and\n3.\tthe size of the SDS message is less than or equal to the value contained in the <mcdata-max-data-in-single-request> element of the <entry> element of the MCData group document for this MCData group as specified in 3GPP TS 24.481 [4].\nIf the above-mentioned conditions satisfy, the MCData client:\n1.\tshall generate an SDS SIGNALLING PAYLOAD as specified in clause 6.1.1.2.2;\n2.\tshall generate an SDS DATA PAYLOAD as specified in clause 6.1.1.2.3;\n3.\tshall include the SDS SIGNALLING PAYLOAD and SDS DATA PAYLOAD in an MSRP SEND request as specified in clause 6.1.1.2.4, with the following clarification:\na.\tshall set To-Path header according to the MSRP URI in the received SDP; and\n4.\tshall send the MSRP SEND request on the established MSRP connection.\nTo send an SDS disposition notification, the MCData client:\n1.\tshall generate a SDS NOTIFICATION as specified in clause 6.1.2.5.2;\n2.\tshall include the SDS NOTIFICATION in an MSRP SEND request as specified in clause 6.1.2.5.3, with the following clarification;\na.\tshall set To-Path header according to the MSRP URI in the received SDP; and\n3.\tshall send the MSRP SEND request on the established MSRP connection.\nIf MSRP chunking is used, the MCData client:\n1.\tshall send further MSRP SEND requests as necessary.\nOn receiving a non-200 MSRP response to the MSRP SEND request the MCData client shall handle the error as specified in IETF RFC 4975 [11]. To terminate the MSRP session, the MCData client:\n1.\tif there are further MSRP chunks to send, shall abort transmission of these further MSRP chunks; and\n2.\tshall indicate to MCData user that the SDS message or the SDS disposition notification could not be sent.\nIn order to generate an SDS notification, the MCData client:\n1.\tshall generate an SDS NOTIFICATION message as specified in 3GPP TS 24.282 [8]; and\n2.\tshall include the SDS NOTIFICATION message in an application/vnd.3gpp.mcdata-signalling MIME body as specified in 3GPP TS 24.282 [8].\nWhen generating an SDS NOTIFICATION message, the MCData client:\n1.\tif sending a delivered notification, shall set the SDS disposition notification type IE as \"DELIVERED\";\n2.\tif sending a read notification, shall set the SDS disposition notification type IE as \"READ\";\n3.\tif sending a delivered and read notification, shall set the SDS disposition notification type IE as \"DELIVERED AND READ\";\n4.\tif the SDS message could not be delivered to the user or application (e.g. due to lack of storage), shall set the SDS disposition notification type IE as \"UNDELIVERED\";\n5.\tshall set the Date and time IE to the current time;\n6.\tshall set the Conversation ID to the value of the Conversation ID that was received in the SDS message;\n7.\tshall set the Message ID to the value of the Message ID that was received in the SDS message;\n8.\tif the SDS message was destined for the user, shall not include an Application ID IE;\n9.\tif the SDS message was destined for an application, shall include an Application ID IE set to the value of the Application ID that was included in the SDS message; and\n10.\tshall set the Sender MCData user ID to its own MCData user ID as specified in clause 15.2.15 of 3GPP TS 24.282 [8].\nThe MCData client shall generate MSRP SEND requests for SDS disposition notification according to IETF RFC 4975 [11].\nWhen generating an MSRP SEND request for SDS disposition notification containing an SDS NOTIFICATION message, the MCData client\n1.\tshall set To-Path header according to the MSRP URI(s) received in the answer SDP;\n2.\tshall set the content type as Content-Type = \"application/vnd.3gpp.mcdata-signalling\"; and\n3.\tshall set the body of the MSRP SEND request to the generated SDS NOTIFICATION message.\nUpon receiving an SDS message, the MCData client:\n1.\tshall follow the procedure defined in clause 6.1.1.3.2, with the following clarification:\na.\tif SDS Disposition request type IE is present in the received SDS SIGNALLING PAYLOAD message then, shall send an SDS disposition notification as described in clause 6.1.2.5.\nUpon receiving an SDS disposition notification, the MCData client:\n1.\tshall decode the contents of the application/vnd.3gpp.mcdata-signalling MIME body; and\n2.\tshall deliver the notification to the user or application.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.2\tParticipating MCData function procedures",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.2.1\tStandalone SDS via media plane",
                            "text_content": "For a standalone SDS via media plane, the media plane is established between the originating MCData client and the originating participating MCData function, the originating participating MCData function and the controlling MCData function, the controlling MCData function and the terminating participating MCData function(s) and each terminating participating MCData function and the terminating MCData client(s) as specified in 3GPP TS 24.282 [8].\nThe procedures in clause 6.2.1.4 and clause 6.2.1.5 are applicable for one-to-one and group standalone SDS using media plane.\nTo receive a SDS message over MSRP, the participating MCData function:\n1.\tshall act according to IETF RFC 6135 [12], as:\na.\tan \"passive\" endpoint, if a=setup attribute in the sent SDP answer was set to \"passive\"; and\nb.\tan \"active\" endpoint, if a=setup attribute in the sent SDP answer was set to \"active\"; and\n2.\tshall establish an MSRP connection according to the MSRP connection parameters in the sent SDP answer response as described in IETF RFC 4976 [14].\nTo send a SDS message over MSRP, the participating MCData function:\n1.\tshall act according to IETF RFC 6135 [12], as:\na.\tan \"active\" endpoint, if a=setup attribute in the received SDP answer is set to \"passive\"; and\nb.\tan \"passive\" endpoint, if a=setup attribute in the received SDP answer is set to \"active\"; and\n2.\tshall establish the MSRP connection according to the MSRP connection parameters in the received SDP answer response as described in IETF RFC 4976 [14].\nThe originating participating MCData function should establish the MSRP session with the originating MCData client as specified in clause 6.2.1.2.\nThe originating participating MCData function should establish the MSRP session with the controlling MCData function as specified in clause 6.2.1.3.\nUpon receiving an MSRP SEND request from the originating MCData client, the originating participating MCData function:\n1.\tif in a standalone one-to-one SDS using media plane, shall verify the SDS message size is less than or equal to <MacData1To1> element of the MCData user profile document for the originating MCData client (see the MCData user profile document in 3GPP TS 24.484 [7]);\n2.\tif the verifications in 1 above fails, shall send the MSRP response with the error code 403 to the originating MCData client and shall not continue with the rest of the procedure;\n3.\tif an MSRP connection is not established with the controlling MCData function then, shall establish the MSRP connection as specified in clause 6.2.1.4.2. Otherwise, shall use the existing MSRP connection; and\n4.\tshall forward the received MSRP SEND request to the controlling MCData function according to the rules and procedures of IETF RFC 4975 [11].\nUpon receiving an MSRP 200 (OK) response from the controlling MCData function, the participating MCData function shall forward the MSRP 200 (OK) response to the originating MCData client according to the rules and procedures of IETF RFC 4975 [11].\nUpon receiving an error MSRP response from the controlling MCData function, the participating MCData function shall forward the error MSRP response to the originating MCData client according to the rules and procedures of IETF RFC 4975 [11].\nThe terminating participating MCData function should establish the MSRP session with the controlling MCData function as specified in clause 6.2.1.2.\nThe terminating participating MCData function should establish MSRP session to terminating MCData client as specified in clause 6.2.1.3.\nUpon receiving an MSRP SEND request from the controlling MCData function, the terminating participating MCData function:\n1.\tshall generate and send a MSRP 200 (OK) response for the received MSRP SEND request to the controlling MCData function, according to the rules and procedures of IETF RFC 4975 [11]; and\n2.\tshall forward the received MSRP SEND request to the terminating MCData client according to the rules and procedures of IETF RFC 4975 [11].\nUpon receiving an error MSRP response from the terminating MCData client, the participating MCData function shall forward the error MSRP response to the originating MCData client according to the rules and procedures of IETF RFC 4975 [11].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.2\tShort data during an SDS session",
                            "text_content": "For a one-to-one or group SDS session, the media plane is established between the originating MCData client and the originating participating MCData function, the originating participating MCData function and the controlling MCData function, the controlling MCData function and the terminating participating MCData function(s) and each terminating participating MCData function and the terminating MCData client(s) as specified in 3GPP TS 24.282 [8]. The procedures in clause 6.2.2.4 and clause 6.2.2.5 are applicable for one-to-one and group SDS session.\nTo receive a SDS message over MSRP, the participating MCData function:\n1.\tshall act according to IETF RFC 6135 [12], as:\na.\tan \"passive\" endpoint, if a=setup attribute in the sent SDP answer was set to \"passive\"; and\nb.\tan \"active\" endpoint, if a=setup attribute in the sent SDP answer was set to \"active\"; and\n2.\tshall establish an MSRP connection according to the MSRP connection parameters in the sent SDP answer response as described in IETF RFC 4976 [14].\nTo send a SDS message over MSRP, the participating MCData function:\n1.\tshall act according to IETF RFC 6135 [12], as:\na.\tan \"active\" endpoint, if a=setup attribute in the received SDP answer is set to \"passive\"; and\nb.\tan \"passive\" endpoint, if a=setup attribute in the received SDP answer is set to \"active\"; and\n2.\tshall establish the MSRP connection according to the MSRP connection parameters in the received SDP answer response as described in IETF RFC 4976 [14].\nThe originating participating MCData function should establish the MSRP session with the originating MCData client as specified in clause 6.2.2.2.\nThe originating participating MCData function should establish the MSRP session with the controlling MCData function as specified in clause 6.2.2.3.\nUpon receiving an MSRP SEND request from the originating MCData client, the originating participating MCData function:\n1.\tif an MSRP connection is not established with the controlling MCData function then, shall establish the MSRP connection as specified in clause 6.2.2.4.2. Otherwise, shall use the existing MSRP connection; and\n2.\tshall forward the received MSRP SEND request to the controlling MCData function according to the rules and procedures of IETF RFC 4975 [11].\nUpon receiving an MSRP 200 (OK) response from the controlling MCData function, the participating MCData function shall forward the MSRP 200 (OK) response to the originating MCData client according to the rules and procedures of IETF RFC 4975 [11].\nUpon receiving an error MSRP response from the controlling MCData function, the participating MCData function shall forward the error MSRP response to the originating MCData client according to the rules and procedures of IETF RFC 4975 [11].\nThe terminating participating MCData function should establish the MSRP session with the controlling MCData function as specified in clause 6.2.2.2.\nThe terminating participating MCData function should establish MSRP session to terminating MCData client as specified in clause 6.2.2.3.\nUpon receiving an MSRP SEND request from the controlling MCData function, the terminating participating MCData function:\n1.\tshall generate and send a MSRP 200 (OK) response for the received MSRP SEND request to the controlling MCData function, according to the rules and procedures of IETF RFC 4975 [11]; and\n2.\tshall forward the received MSRP SEND request to the terminating MCData client according to the rules and procedures of IETF RFC 4975 [11].\nUpon receiving an error MSRP response from the terminating MCData client, the participating MCData function shall forward the error MSRP response to the originating MCData client according to the rules and procedures of IETF RFC 4975 [11].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.3\tControlling MCData function procedures",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.3.1\tStandalone SDS via media plane",
                            "text_content": "The controlling MCData function plays a key role in anchoring the media between the originating MCData client and the terminating MCData client. Hence controlling MCData function maintains a MSRP session with all the active MCData clients.\nThe procedures in clause 6.3.1.2 and clause 6.3.1.3 are applicable for both, one-to-one and group standalone SDS using media plane.\nTo establish the MSRP connection with the originating MCData client, the controlling MCData function performs below procedures:\n1.\tshall act as an MSRP client and establish TLS connection with the originating participating MCData function, if exists, otherwise the originating MCData client, according to the rules and procedures as described in IETF RFC 4975 [11];\n2.\tshall act as an MSRP client to send MSRP SEND requests according to the rules and procedures described in IETF RFC 6135 [12];\n3.\tshall act as an \"passive\" endpoint according to the rules and procedures described in IETF RFC 6135 [12];\n4.\tshall establish the MSRP connection with originating MCData client, according to the rules and procedures described in IETF RFC 6135 [12]; and\n5.\tas a passive endpoint, shall wait for MSRP SEND request on established MSRP connection, to bind the MSRP connection to the MSRP session according to the rules and procedures of IETF RFC 4975 [11] and IETF RFC 6135 [12].\nTo establish the MSRP connection with the terminating MCData client, the controlling MCData function performs below procedures:\n1.\tshall act as an MSRP client and establish TLS connection with the terminating participating MCData function, if exists, otherwise the terminating MCData client, according to the rules and procedures as described in IETF RFC 4975 [11];\n2.\tshall act as an MSRP client to send MSRP SEND requests according to the rules and procedures described in IETF RFC 6135 [12];\n3.\tshall act according to IETF RFC 6135 [12], as:\na.\tan \"active\" endpoint, if a=setup attribute in the received SDP answer is set to \"passive\"; and\nb.\tan \"passive\" endpoint, if a=setup attribute in the received SDP answer is set to \"active\";\n4.\tshall establish the MSRP connection with each terminating MCData client identified in the 3GPP TS 24.282 [8], according to the rules and procedures described in IETF RFC 6135 [12]; and\n5.\tif acting as an \"active\" endpoint, shall send an empty MSRP SEND request on each established MSRP connection, to bind the MSRP connection to the MSRP session according to the rules and procedures of IETF RFC 4975 [11] and IETF RFC 6135 [12].\nUpon receiving a MSRP SEND request from the originating participating MCData function, the controlling MCData function:\n1.\tif in a standalone one-to-one SDS using media plane, shall verify the SDS message size is less than or equal to <max-data-size-sds-bytes> element in the MCData service configuration document as specified in 3GPP TS 24.484 [7];\n2.\tif in a standalone group SDS using media plane shall verify:\na.\tthe SDS message size is less than or equal to <mcdata-max-data-in-single-request> element of the MCData group document for the (see the MCData group document in 3GPP TS 24.481 [4]); and\nb.\tthe SDS message size is less than or equal to <mcdata-on-network-max-data-size-for-SDS> element of the MCData group document (see the MCData group document in 3GPP TS 24.481 [4]);\n3.\tif the verifications in either 1 or 2 a or 2 b above fails, shall send the MSRP response with the error code 403 to the MCData client which sent the SDS message and shall not continue with the rest of the procedure;\n4.\tshall generate and send a MSRP 200 (OK) response for the received MSRP SEND requests to the originating participating MCData function, according to the rules and procedures of IETF RFC 4975 [11]; and\n5.\tshall forward the received MSRP SEND requests to each terminating MCData client with which a successful MSRP connection was established, according to the rules and procedures of IETF RFC 4975 [11]. Following clarifications apply to the generated MSRP SEND request:\na.\tshall modify the To-Path header according to the MSRP URI received in the answer SDP from the MCData client in accordance with rules and procedures of IETF RFC 4975 [11]; and\nb.\tshall modify the From-Path header to the controlling MCData function's own MSRP URI, according to the rules and procedures of IETF RFC 4975 [11].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.2\tShort data during SDS session",
                            "text_content": "To establish the MSRP connection with the originating MCData client, the controlling MCData function performs below procedures:\n1.\tshall act as an MSRP client and establish TLS connection with the originating participating MCData function, if exists, otherwise the originating MCData client, according to the rules and procedures as described in IETF RFC 4975 [11];\n2.\tshall act as an MSRP client to send MSRP SEND requests according to the rules and procedures described in IETF RFC 6135 [12];\n3.\tshall act as an \"passive\" endpoint according to the rules and procedures described in IETF RFC 6135 [12];\n4.\tshall establish the MSRP connection with originating MCData client, according to the rules and procedures described in IETF RFC 6135 [12]; and\n5.\tacting as a \"passive\" endpoint, shall wait for MSRP SEND request on established MSRP connection, to bind the MSRP connection to the MSRP session according to the rules and procedures of IETF RFC 4975 [11] and IETF RFC 6135 [12].\nTo establish the MSRP connection with the terminating MCData client, the controlling MCData function performs below procedures:\n1.\tshall act as an MSRP client and establish TLS connection with the terminating participating MCData function, if exists, otherwise the terminating MCData client, according to the rules and procedures as described in IETF RFC 4975 [11];\n2.\tshall act as an MSRP client to send MSRP SEND requests according to the rules and procedures described in IETF RFC 6135 [12];\n3.\tshall act according to IETF RFC 6135 [12], as:\na.\tan \"active\" endpoint, if a=setup attribute in the received SDP answer is set to \"passive\"; and\nb.\tan \"passive\" endpoint, if a=setup attribute in the received SDP answer is set to \"active\";\n4.\tshall establish the MSRP connection with each terminating MCData client identified in the 3GPP TS 24.282 [8], according to the rules and procedures described in IETF RFC 6135 [12]; and\n5.\tif acting as an \"active\" endpoint, shall send an empty MSRP SEND request on each established MSRP connection, to bind the MSRP connection to the MSRP session according to the rules and procedures of IETF RFC 4975 [11] and IETF RFC 6135 [12].\nUpon receiving a MSRP SEND request from the originating participating MCData function, the controlling MCData function:\n1.\tshall generate and send a MSRP 200 (OK) response for the received MSRP SEND requests to the originating participating MCData function, according to the rules and procedures of IETF RFC 4975 [11]; and\n2.\tshall forward the received MSRP SEND requests to each terminating MCData client with which a successful MSRP connection was established, according to the rules and procedures of IETF RFC 4975 [11]. Following clarifications apply to the generated MSRP SEND request:\na.\tshall modify the To-Path header according to the MSRP URI received in the answer SDP from the MCData client in accordance with rules and procedures of IETF RFC 4975 [11]; and\nb.\tshall modify the From-Path header to the controlling MCData function's own MSRP URI, according to the rules and procedures of IETF RFC 4975 [11].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.4\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.4.1\tHandling of MIME bodies in MSRP SEND messages",
                            "text_content": "The MCData client and MCData server shall support several MIME bodies in MSRP SEND requests as specified in IETF RFC 4975 [11].\nWhen the MCData client or the MCData server sends a MSRP SEND that contains more than one MIME body, the MCData client or the MCData server:\n1)\tshall, as specified in IETF RFC 2046 [9], include one Content-Type header field with the value set to multipart/mixed and with a boundary delimiter parameter set to any chosen value;\n2)\tfor each MIME body:\na)\tshall insert the boundary delimiter;\nb)\tshall insert the Content-Type header field with the MIME type of the MIME body; and\nc)\tshall insert the content of the MIME body; and\n3)\tshall insert a final boundary delimiter.\nWhen the MCData client or the MCData server sends an MSRP SEND containing only one MIME body, the MCData client or the MCData server:\n1)\tshall include a Content-Type header field set to the MIME type of the MIME body; and\n2)\tshall insert the content of the MIME body.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.5\tSDS delivery using MBMS",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.5.1\tGeneral Description (non-normative)",
                            "text_content": "The procedures for group SDS delivery using MBMS via the media plane can be seen as extensions of the procedures for group SDS session delivery using unicast. The procedures of the originating client, originating participating function and controling function are those used for unicast session delivery for group SDS. Only the terminating participating function and the terminating client are involved in MBMS delivery functionality for group SDS.\nThe procedures assume that consistent with 3GPP TS 24.282 [8], an SDS session has already been established and the originating and terminating MCData clients have already completed successfully the SDP offer/answer negotiation. It is further assumed that the terminating MCData participating function has already sent an MBMS bearer announcement message providing information about the MBMS bearer and subchannel intended for MBMS delivery and that the terminating MCData client has received and processed the MBMS bearer announcement message, as described in 3GPP TS 24.282 [8].\nDuring the SDS session, the terminating MCData participating function intercepts MSRP SEND messages arriving from the originating side, and, after eliminating duplicates, encapsulates them unchanged as payload in (S)RTP/UDP/IP (see IETF RFC 3711 [17]) packets and transmits them on an MBMS bearer towards the terminating MCData client. Upon reception, the terminating MCData client decapsulates the payload and processes it as an MSRP SEND message within the SDS session, arriving from the originating side.\nNOTE 1: Since MSRP chunking is supported for unicast delivery, it is also supported for MBMS delivery.\nNOTE 2: If SRTP (see IETF RFC 3711 [17]), rather than RTP, is used to security protect packets sent on MBMS bearer, MuSiK (see 3GPP TS 24.482 [5] and 3GPP TS 33.180 [15]) may be employed to provide protection in addition to the security mechanisms that protect the unicast MSRP traffic.\nNOTE 3: Whether unicast or MBMS delivery are used is up to the terminating participating function, which can use listening status reports from the MCData clients, the presence or absence of the DELIVERED disposition in SDS, as well as other information, to decide on an individual MCData client and SDS basis. At any time during a session, the terminating participating server can toggle between unicast and MBMS delivery.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.5.2\tProcedures for the terminating MCData client",
                            "text_content": "The terminating MCData client shall execute the procedure for MSRP connection establishment described in clause 6.1.2.3.1.\nWhile MBMS delivery is expected, the terminating MCData client shall monitor the general purpose MBMS subchannel.\nWhen receiving a Map Group To Bearer message over the general purpose MBMS subchannel, the MBMS interface in the MCData client:\n1)\tshall associate the TMGI in the TMGI field, the MBMS subchannel for media with the MCData group identity in the MCData Group ID field; and\n2)\tshall start or continue the procedure described in clause 6.5.2.3.\nWhen receiving the Unmap Group To Bearer message referring to the current communication over a MBMS subchannel, the MBMS interface in the MCData client:\n1)\tshall remove the association between the TMGI, the MBMS subchannel for media in the group session identified by the MCData Group ID field, if such an association exists; and\n2)\tshall cease monitoring the associated MBMS bearer and subchannel for media and, if the SDS session is still ongoing, shall resume or continue SDS delivery via media plane over unicast.\nThe terminating MCData client shall:\n1.\twhile MBMS delivery is expected, the terminating MCData client shall monitor the MBMS bearer and subchannel indicated by the Map Group To Bearer message; and\n2.\tfor each received (S)RTP media packet, until a SIP BYE is received or until an implementation dependent timeout occurs:\na.\tdecapsulate the payload out of the (S)RTP packet and, if SRTP rather than RTP is used (see IETF RFC 3711 [17]), decrypt and validate the payload;\nb.\tif the media packet was received via an MBMS bearer with the TMGI associated to the group, accept the payload as correctly destined for the terminating MCData client, regardless of whether or not the To-Path header of the MSRP SEND message in the payload matches the terminating MCData client's MSRP URI (i.e. the MSRP URI provided in the answer SDP to the controlling function during the MSRP session establishment, in accordance with rules and procedures of IETF RFC 4975 [11]); and\nc.\tprocess the payload as a received MSRP SEND message according to clause 6.1.2.3.1, in the context of the media flow formed by previously received MSRP SEND messages, whether delivered via unicast or via MBMS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.5.3\tProcedures for the terminating MCData participating function",
                            "text_content": "The terminating MCData participating function:\n1.\tshall establish an MSRP session with the controlling MCData function according to clause 6.2.2.5.1; and\n2.\tshall establish an MSRP session with the terminating MCData client according to clause 6.2.2.5.2.\nThe terminating MCData participating function:\n1.\tshall build a Map Group To Bearer message (see clause 11.2.4) to include:\na.\tthe TMGI of the MBMS bearer to carry the traffic;\nb.\tthe identifier of the media stream; and\nc.\tthe MCData Group identifier field; and\n2.\tshall send (repetitively, at short, implementation dependent time intervals) the Map Group To Bearer message over the general purpose MBMS subchannel.\nWhen the session ends, the terminating MCData participating function shall build the corresponding Unmap Group To Bearer message (see clause 11.2.5) and shall send it over the general purpose MBMS subchannel.\nWhen receiving an MSRP SEND message that the terminating participating server considers qualified for MBMS delivery and is destined to one of the MCData clients listening to the MBMS subchannel, the participating MCData function:\nNOTE 1:\tAn MSRP SEND message that does not qualify for MBMS delivery or is not destined to an MCData client listening to the MBMS subchannel is handled as an MSRP SEND message to be delivered over unicast (see clause 6.2.1.5.3).\n1.\tshall generate and send an MSRP 200 (OK) response for the received MSRP SEND message to the controlling MCData function, according to the rules and procedures of IETF RFC 4975 [11];\n2.\tshall check if the media packet that encapsulates the MSRP SEND message is already sent over the MBMS subchannel or not;\n3.\tif the media packet is already sent over the MBMS subchannel, shall discard the MSRP SEND message; and\n4.\totherwise:\na.\tshall build an (S)RTP/UDP/IP (see IETF RFC 3711 [17]) media packet with the IP address and UDP port number indicated in the sent Map Group To Bearer message and with the received MSRP SEND message as payload, security protected if SRTP is used, per IETF RFC 3711 [17] and 3GPP TS 33.180 [15]; and\nb.\tshall transmit the built (S)RTP/UDP/IP packet on the MBMS bearer identified by the TMGI indicated in the sent Map Group To Bearer message.\nNOTE 2: To save over-the air resources, the terminating MCData participating function releases or reduces the bandwidth of the unicast downlink bearers used for unicast SDS delivery. However, to enable the ability of rapid switching between unicast and MBMS delivery, the terminating MCData participating function can keep the unicast bearers intact.\nUpon receiving error MSRP responses (see IETF RFC 4975 [11]) from the terminating MCData client, the terminating MCData participating function shall forward the error MSRP responses towards the originating MCData client.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.6\tSDS delivery using MBS",
                    "description": "",
                    "summary": "",
                    "text_content": "All steps of clause 6.5 apply also for MBS, with the clarification that terminology mapping specified in annex X applies.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "7\tFD media plane procedures",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "7.1\tMCData client procedures",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.1.1\tGeneral",
                            "text_content": "For file distribution, upon receiving a request from the user or user application the originating client establishes the media plane as specified in 3GPP TS 24.282 [8].\nThe procedures in clause 7.1.2 and clause 7.1.3 are applicable for one-to-one and group file distribution.\nA MCData client which is not permitted to transmit data should not use the procedure in clause 7.1.2.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.2\tOriginating MCData client procedures",
                            "text_content": "Upon receiving an indication to establish MSRP connection for file distribution as the originating client, the MCData client:\n1.\tshall act as an MSRP client according to IETF RFC 6135 [12];\n2.\tshall act according to IETF RFC 6135 [12], as:\na.\tan \"active\" endpoint, if a=setup attribute in the received SDP answer is set to \"passive\"; and\nb.\tan \"passive\" endpoint, if a=setup attribute in the received SDP answer is set to \"active\";\n3.\tshall establish the MSRP connection according to the MSRP connection parameters in the SDP answer received in the SIP 200 (OK) response according to IETF RFC 4975 [11]; and\n4.\tif acting as an \"active\" endpoint, shall send an empty MSRP SEND request to bind the MSRP connection to the MSRP session from the perspective of the passive endpoint according to the rules and procedures of IETF RFC 4975 [11] and IETF RFC 6135 [12].\nOn receiving MSRP 200 (OK) response to the first MSRP SEND request, the MCData client can send the file. To send the file, the MCData client:\n1.\tshall generate MSRP SEND for file distribution request according to IETF RFC 4975 [11]. When generating an MSRP SEND, the MCData client:\na.\tshall set To-Path header according to the MSRP URI(s) received in the answer SDP;\nb.\tshall set the Content-Type header field = to \"application/vnd.3gpp.mcdata-file\"; and\nc.\tshall include in the body of the MSRP SEND request the MSRP payload. The MSRP payload is set to the file or part of the file.\n2.\tshall send the MSRP SEND request(s) on the established MSRP connection.\nIf MSRP chunking is used, the MCData client:\n1.\tshall send further MSRP SEND requests containing the file as necessary;\n2.\tshall wait for a 200 (OK) response to each MSRP SEND request sent; and\n3.\ton receipt of the last 200 (OK) response shall terminate the SIP session as specified in 3GPP TS 24.282 [8].\nOn receiving a non-200 MSRP response to the MSRP SEND request the MCData client shall handle the error as specified in IETF RFC 4975 [11]. To terminate the MSRP session, the MCData client:\n1.\tif there are further MSRP chunks to send, shall abort transmission of these further MSRP chunks;\n2.\tshall indicate to MCData user that the file could not be distributed; and\n3.\tshall terminate the SIP session as specified in 3GPP TS 24.282 [8].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.3\tTerminating MCData client procedures",
                            "text_content": "Upon receiving an indication to establish MSRP connection for file distribution as the terminating client, the MCData client:\n1.\tshall act as an MSRP client according to IETF RFC 6135 [12];\n2.\tshall act either as an active endpoint or as an passive endpoint to open the transport connection, according to IETF RFC 6135 [12];\n3.\tshall establish the MSRP connection according to the MSRP connection parameters in the SDP offer received in the SIP INVITE request according to IETF RFC 4975 [11];\n4.\tif acting as an \"active\" endpoint, shall send an empty MSRP SEND request to bind the MSRP connection to the MSRP session from the perspective of the passive endpoint according to the rules and procedures of IETF RFC 4975 [11] and IETF RFC 6135 [12];\nOnce the MSRP session is established, the MCData client:\n1.\ton receipt of an MSRP request in the MSRP session, shall follow the rules and procedures defined in IETF RFC 4975 [11] and in IETF RFC 6714 [13];\n2.\tIf an MSRP SEND request indicates the use of chunking, shall wait until all further MSRP SEND requests for the remaining chunks have been received and shall reassemble the entire set of MSRP requests into the file before delivering the content to the application; and\n3.\tshall handle the received content as described in clause 7.1.3.2.\nUpon receiving a file, the MCData client:\n1.\tshall decode the contents of the application/vnd.3gpp.mcdata-file MIME body; and\n2.\tonce all the chunks of the file are successfully received, shall indicate to the signalling plane that the file download is completed.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.2\tParticipating MCData function procedures",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.2.1\tGeneral",
                            "text_content": "For a one-to-one or group file distribution, the media plane is established between the originating MCData client and the originating participating MCData function, the originating participating MCData function and the controlling MCData function, the controlling MCData function and the terminating participating MCData function(s) and each terminating participating MCData function and the terminating MCData client(s) as specified in 3GPP TS 24.282 [8]. The procedures in clause 7.2.2 and clause 7.2.3 are applicable for one-to-one and group file distribution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.2\tEstablishing MSRP session to receive the file",
                            "text_content": "To receive a file over MSRP, the participating MCData function:\n1.\tshall act according to IETF RFC 6135 [12], as:\na.\tan \"passive\" endpoint, if a=setup attribute in the sent SDP answer was set to \"passive\"; and\nb.\tan \"active\" endpoint, if a=setup attribute in the sent SDP answer was set to \"active\"; and\n2.\tshall establish an MSRP connection according to the MSRP connection parameters in the sent SDP answer response as described in IETF RFC 4976 [14].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.3\tEstablish MSRP session to send the file",
                            "text_content": "To send a file over MSRP, the participating MCData function:\n1.\tshall act according to IETF RFC 6135 [12], as:\na.\tan \"active\" endpoint, if a=setup attribute in the received SDP answer is set to \"passive\"; and\nb.\tan \"passive\" endpoint, if a=setup attribute in the received SDP answer is set to \"active\"; and\n2.\tshall establish the MSRP connection according to the MSRP connection parameters in the received SDP answer response as described in IETF RFC 4976 [14].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.4\tOriginating participating MCData function procedures",
                            "text_content": "The originating participating MCData function should establish the MSRP session with the originating MCData client as specified in clause 7.2.2.\nThe originating participating MCData function should establish the MSRP session with the controlling MCData function as specified in clause 7.2.3.\nUpon receiving an MSRP SEND request from the originating MCData client, the originating participating MCData function:\n1.\tif an MSRP connection is not established with the controlling MCData function then, shall establish the MSRP connection as specified in clause 7.2.4.2. Otherwise, shall use the existing MSRP connection; and\n2.\tshall forward the received MSRP SEND request to the controlling MCData function according to the rules and procedures of IETF RFC 4975 [11].\nUpon receiving an MSRP 200 (OK) response from the controlling MCData function, the participating MCData function shall forward the MSRP 200 (OK) response to the originating MCData client according to the rules and procedures of IETF RFC 4975 [11].\nUpon receiving an error MSRP response from the controlling MCData function, the participating MCData function shall forward the error MSRP response to the originating MCData client according to the rules and procedures of IETF RFC 4975 [11].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.5\tTerminating participating MCData function procedures",
                            "text_content": "The terminating participating MCData function should establish the MSRP session with the controlling MCData function as specified in clause 7.2.2.\nThe terminating participating MCData function should establish MSRP session to terminating MCData client as specified in clause 7.2.3.\nUpon receiving an MSRP SEND request from the controlling MCData function, the terminating participating MCData function:\n1.\tshall generate and send a MSRP 200 (OK) response for the received MSRP SEND request to the controlling MCData function, according to the rules and procedures of IETF RFC 4975 [11]; and\n2.\tif the indication to store the received file for later delivery is received from the signaling plane, the participating function:\na)\tshall receive and store the file; and\nb)\tshall indicate to the signalling plane that the file download is completed as specified in 3GPP TS 24.282 [8] clause 10.2.5.3.4;\notherwise:\na)\tshall forward the received MSRP SEND request to the terminating MCData client according to the rules and procedures of IETF RFC 4975 [11].\nUpon receiving an error MSRP response from the terminating MCData client, the participating MCData function shall forward the error MSRP response to the originating MCData client according to the rules and procedures of IETF RFC 4975 [11].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.3\tControlling MCData function procedures",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.3.1\tGeneral",
                            "text_content": "",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.2\tEstablishing MSRP session",
                            "text_content": "To establish the MSRP connection with the originating MCData client, the controlling MCData function performs below procedures:\n1.\tshall act as an MSRP client and establish TLS connection with the originating participating MCData function, if exists, otherwise the originating MCData client, according to the rules and procedures as described in IETF RFC 4975 [11];\n2.\tshall act as an MSRP client to send MSRP SEND requests according to the rules and procedures described in IETF RFC 6135 [12];\n3.\tshall act as an \"passive\" endpoint according to the rules and procedures described in IETF RFC 6135 [12];\n4.\tshall establish the MSRP connection with originating MCData client, according to the rules and procedures described in IETF RFC 6135 [12]; and\n5.\tacting as a \"passive\" endpoint, shall wait for MSRP SEND request on established MSRP connection, to bind the MSRP connection to the MSRP session according to the rules and procedures of IETF RFC 4975 [11] and IETF RFC 6135 [12].\nTo establish the MSRP connection with the terminating MCData client, the controlling MCData function performs below procedures:\n1.\tshall act as an MSRP client and establish TLS connection with the terminating participating MCData function, if exists, otherwise the terminating MCData client, according to the rules and procedures as described in IETF RFC 4975 [11];\n2.\tshall act as an MSRP client to send MSRP SEND requests according to the rules and procedures described in IETF RFC 6135 [12];\n3.\tshall act according to IETF RFC 6135 [12], as:\na.\tan \"active\" endpoint, if a=setup attribute in the received SDP answer is set to \"passive\"; and\nb.\tan \"passive\" endpoint, if a=setup attribute in the received SDP answer is set to \"active\";\n4.\tshall establish the MSRP connection with each terminating MCData client identified in the 3GPP TS 24.282 [8], according to the rules and procedures described in IETF RFC 6135 [12]; and\n5.\tif acting as an \"active\" endpoint, shall send an empty MSRP SEND request on each established MSRP connection, to bind the MSRP connection to the MSRP session according to the rules and procedures of IETF RFC 4975 [11] and IETF RFC 6135 [12].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.3\tHandling of received MSRP messages",
                            "text_content": "Upon receiving a MSRP SEND request from the originating participating MCData function, the Controlling function:\n1.\tshall generate and send a MSRP 200 (OK) response for the received MSRP SEND requests to the originating participating MCData function, according to the rules and procedures of IETF RFC 4975 [11]; and\n2.\tshall forward the received MSRP SEND requests to each terminating MCData client with which a successful MSRP connection was established, according to the rules and procedures of IETF RFC 4975 [11]. Following clarifications apply to the generated MSRP SEND request:\na.\tshall modify the To-Path header according to the MSRP URI received in the answer SDP from the MCData client in accordance with rules and procedures of IETF RFC 4975 [11]; and\nb.\tshall modify the From-Path header to the controlling MCData function's own MSRP URI, according to the rules and procedures of IETF RFC 4975 [11].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.4\tFD using MBMS delivery via MB2 interface",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.4.1\tGeneral Description",
                            "text_content": "The procedures for group FD using MBMS delivery via the MB2 interface can be seen as extensions of the procedures for group FD media delivery using unicast. The procedures of the originating client, originating participating function and controling function are those used for unicast session delivery for group FD. Only the terminating participating function and the terminating client are involved in MBMS delivery over MB2 interface functionality for group FD.\nThe procedures assume that consistent with 3GPP TS 24.282 [8], an MSRP session has already been established and the originating and terminating MCData clients have already completed successfully the SDP offer/answer negotiation. It is further assumed that the terminating MCData participating function has already sent an MBMS bearer announcement message providing information about the MBMS bearer and subchannel intended for MBMS delivery and that the terminating MCData client has received and processed the MBMS bearer announcement message, as described in 3GPP TS 24.282 [8].\nDuring the session, the terminating MCData participating function intercepts MSRP SEND messages arriving from the originating side, and, after eliminating duplicates, encapsulates them unchanged as payload in (S)RTP/UDP/IP (see IETF RFC 3711 [17]) packets and transmits them on an MBMS bearer towards the terminating MCData client. Upon reception, the terminating MCData client decapsulates the payload and processes it as an MSRP SEND message within the MSRP session, arriving from the originating side.\nNOTE 1:\tSince MSRP chunking is supported for unicast delivery, it is also supported for MBMS delivery.\nNOTE 2:\tIf SRTP (see IETF RFC 3711 [17]), rather than RTP, is used to securely protect packets sent on MBMS bearer, MuSiK (see 3GPP TS 24.282 [8] and 3GPP TS 33.180 [15]) may be employed to provide protection in addition to the security mechanisms that protect the unicast MSRP traffic.\nNOTE 3:\tThe terminating participating function, which can use listening status reports from the MCData clients, the presence, absence or content of the FILE DOWNLOAD COMPLETED report, as well as other information, decides whether to use unicast or MBMS delivery on an individual MCData client and file basis. At any time during a session, the terminating participating server can toggle between unicast and MBMS delivery.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.4.2\tProcedures for the terminating MCData client",
                            "text_content": "The terminating MCData client shall execute the procedure for MSRP connection establishment described in clause 7.1.3.1.\nWhile MBMS delivery is expected, the terminating MCData client shall monitor the general purpose MBMS subchannel.\nWhen receiving a Map Group To Bearer message over the general purpose MBMS subchannel, the MBMS interface in the MCData client:\n1)\tshall associate the TMGI in the TMGI field, the MBMS subchannel for media with the MCData group identity in the MCData Group ID field; and\n2)\tshall start or continue the procedure described in clause 7.4.2.3.\nWhen receiving the Unmap Group To Bearer message referring to the current communication over a MBMS subchannel, the MBMS interface in the MCData client:\n1)\tshall remove the association between the TMGI, the MBMS subchannel for media in the group session identified by the MCData Group ID field, if such an association exists; and\n2)\tshall cease monitoring the associated MBMS bearer and subchannel for media and, if the MSRP session is still ongoing, shall resume or continue file delivery via media plane over unicast.\nThe terminating MCData client shall:\n1.\twhile MBMS delivery is expected, monitor the MBMS bearer and subchannel indicated by the Map Group To Bearer message; and\n2.\tfor each received (S)RTP media packet, until a SIP BYE is received or until an implementation dependent timeout occurs:\na.\tdecapsulate the payload out of the (S)RTP packet and, if SRTP rather than RTP is used (see IETF RFC 3711 [17]), decrypt and validate the payload;\nb.\tif the media packet was received via an MBMS bearer with the TMGI associated to the group, accept the payload as correctly destined for the terminating MCData client, regardless of whether or not the To-Path header of the MSRP SEND message in the payload matches the terminating MCData client's MSRP URI (i.e. the MSRP URI provided in the answer SDP to the controlling function during the MSRP session establishment, in accordance with rules and procedures of IETF RFC 4975 [11]); and\nc.\tprocess the payload as a received MSRP SEND message during the established MSRP session, according to clause 7.1.3.1, in the context of the media flow formed by previously received MSRP SEND messages, whether delivered via unicast or via MBMS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.4.3\tProcedures for the terminating MCData participating function",
                            "text_content": "The terminating MCData participating function:\n1.\tshall establish an MSRP session with the controlling MCData function according to clause 7.2.5.1; and\n2.\tshall establish an MSRP session with the terminating MCData client according to clause 7.2.5.2.\nThe terminating MCData participating function:\n1.\tshall build a Map Group To Bearer message (see clause 11.2.4) to include:\na.\tthe TMGI of the MBMS bearer to carry the traffic;\nb.\tthe identifier of the media stream; and\nc.\tthe MCData Group identifier field; and\n2.\tshall send (repetitively, at short, implementation dependent time intervals) the Map Group To Bearer message over the general purpose MBMS subchannel.\nWhen the MSRP session with the terminating MCData client (see clause 7.4.3.1) ends, the terminating MCData participating function shall build the corresponding Unmap Group To Bearer message (see clause 11.2.5) and shall send it over the general purpose MBMS subchannel.\nWhen receiving an MSRP SEND message that the terminating participating function considers qualified for MBMS delivery and is destined to one of the MCData clients listening to the MBMS subchannel, the terminating participating MCData function:\nNOTE 1:\tAn MSRP SEND message that does not qualify for MBMS delivery or is not destined to an MCData client listening to the MBMS subchannel is handled as an MSRP SEND message to be delivered over unicast (see clause 7.2.5.3).\n1.\tshall generate and send an MSRP 200 (OK) response for the received MSRP SEND message to the controlling MCData function, according to the rules and procedures of IETF RFC 4975 [11];\n2.\tshall check if the media packet that encapsulates the MSRP SEND message is already sent over the MBMS subchannel or not;\n3.\tif the media packet is already sent over the MBMS subchannel, shall discard the MSRP SEND message; and\n4.\totherwise:\na.\tshall build an (S)RTP/UDP/IP (see IETF RFC 3711 [17]) media packet with the IP address and UDP port number indicated in the sent Map Group To Bearer message and with the received MSRP SEND message as payload, security protected if SRTP is used, per IETF RFC 3711 [17] and 3GPP TS 33.180 [15]; and\nb.\tshall transmit the built (S)RTP/UDP/IP packet on the MBMS bearer identified by the TMGI indicated in the sent Map Group To Bearer message.\nNOTE 2:\tTo save over-the air resources, the terminating MCData participating function releases or reduces the bandwidth of the unicast downlink bearers used for unicast file delivery. However, to enable the ability of rapid switching between unicast and MBMS delivery, the terminating MCData participating function can keep the unicast bearers intact.\nUpon receiving error MSRP responses (see IETF RFC 4975 [11]) from the terminating MCData client, the terminating MCData participating function shall forward the error MSRP responses towards the originating MCData client.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.5\tFD using MBS delivery via MCData-FD interface",
                    "description": "",
                    "summary": "",
                    "text_content": "All steps of clause 7.4 apply also for MBS except different interfaces, with the clarification that terminology mapping specified in annex X applies.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "8\tCommunication release media plane procedures",
            "description": "When communication is released by the MCData client or by the MCData server, as specified in 3GPP TS 24.282 [8], for an SDS or FD session which uses the media plane, the related MSRP session and the TCP or TLS connections used for this MSRP session shall also be released.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "9\tCoding",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "9.1\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "SDS and FD over media plane messages are coded according to MSRP as specified in RFC 4975 [11] both for short data and disposition notification. The body of an MSRP message includes SDS specific messages of a file.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "9.2\tSDS specific messages",
                    "description": "",
                    "summary": "",
                    "text_content": "SDS specific messages used for on-network SDS using media plane are SDS SIGNALLING PAYLOAD message, DATA PAYLOAD message and SDS NOTIFICATION message. The message structures and the format of the information elements are specified in clause 15 of 3GPP TS 24.282 [8]\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "10\tMedia plane security aspects",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "10.1\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "Media plane security provides integrity and confidentiality protection for the MCData media information and media plane control information transmitted using media plane. Media plane security also provides the authentication of MCData media information.\nThe media plane security is based on 3GPP MCData security solution including key management as defined in 3GPP TS 33.180 [15].\nNOTE:\tIn 3GPP TS 33.180 [15] media information is denoted as MCData Data Payload and media plane control information is denoted as MCData Data signalling Payload.\nVarious keys and associated key identifiers protect the media information and media plane control information carried in the body of an MSRP SEND message.\nThe media plane control information may be:\n1.\tSDS SIGNALLING PAYLOAD; or\n2.\tSDS NOTIFICATION.\nThe media information may be:\n1.\tDATA PAYLOAD; or\n2.\tFile or file portion.\nIn an on-network MCData communication for an MCData group, if protection of media is negotiated, the GMK and the GMK-ID of the MCData group shall be used for protecting the media sent and received by MCData clients.\nIn an on-network one-to-one MCData communication, if protection of media is negotiated, the PCK and the PCK-ID shall be used for protecting the media sent and received by MCData clients.\nIf protection of media control information sent using unicast between the MCData client and the participating MCData function serving the the MCData client is negotiated, the CSK and the CSK-ID shall be used for protecting the media control information sent and received using unicast by the MCData client and by a participating MCData function.\nIf protection of media control information between the participating MCData function and the controlling MCData function is configured, the SPK and the SPK-ID shall be used for protecting the media control information sent and received between the participating MCData function and the controlling MCData function.\nThe GMK and the GMK-ID are distributed to the MCData clients using the group document subscription and notification procedure specified in 3GPP TS 24.481 [4].\nThe PCK and the PCK-ID are generated by the MCData client initiating the standalone one-to-one SDS using media plane or one-to-one SDS session or one-to-one FD using media plane and provided to the MCData client receiving the SIP signalling according to 3GPP TS 24.282 [8].\nThe CSK and the CSK-ID are generated by the MCData client and provided to the participating MCData function serving the MCData client using SIP signalling according to 3GPP TS 24.282 [8].\nThe SPK and the SPK-ID are configured in the participating MCData function and the controlling MCData function.\nThe key material for creating and verifying the authentication signature (SSK, PVT and KPAK) is provisioned to the MCData clients by the KMS as specified in 3GPP TS 33.180 [15].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "10.2\tDerivation of master keys for media and media control",
                    "description": "",
                    "summary": "",
                    "text_content": "Each MCData Payload Protection Key (DPPK) (i.e. GMK, PCK, CSK, SPK) and its associated key identifier DPPK-ID (i.e. GMK-ID, PCK-ID, CSK-ID, SPK -ID) described in clause 10.1 shall be used to derive a MCData Payload Cipher Key (DPCK) and its associated DPCK-ID as specified in 3GPP TS 33.180 [15].\nDPCK and DPCK-ID shall be used in the protection of media or media plane control information as specified in 3GPP TS 33.180 [15].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "10.3\tProtection of media and media control and authentication of media",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "10.3.1\tGeneral",
                            "text_content": "The media information may be protected. Protection shall be applied as specified in clause 8.5.4 in 3GPP TS 33.180 [15].\nThe media control information may be protected. Protection shall be applied as specified in clause 8.5.4 in 3GPP TS 33.180 [15].\nMCData media information or protected MCData media information may also be authenticated as specified in clause 8.5.5 in 3GPP TS 33.180 [15].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.3.2\tThe MCData client",
                            "text_content": "A MCData client transmitting media information shall protect the media information using the related DPPK and DPPK-ID according to the negotiatd protection method. For one-to-one communication PCK and PCK-ID shall be used as DPPK and DPPK-ID. For group communication GMK and GMK-ID shall be used as DPPK and DPPK-ID.\nA MCData client transmitting media information or protected media information shall use the key material provisioned by the KMS when generating the authentication signature.\nA MCData client which receives protected media information shall decrypt and check the integrity of the protected media using the related DPPK and DPPK-ID according to the negotiated protection method.\nA MCData client which receives signed media information or signed and protected media information shall verify the signature by using the signature, the identity of the originating MCData client and the KPAK provisioned by the KMS.\nA MCData client transmitting media control information shall protect the media control information using CPK and CPK-ID if media control information protection is negotiated.\nA MCData client which receives protected media control information shall decrypt and check the integrity of the protected media control information using CPK and CPK-ID.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.3.3\tThe participating MCData function",
                            "text_content": "A participating MCData function which receives protected media information shall forward it to the next entity without any additional action related to the security framework.\nA participating MCData function, when receiving a protected media control information from a MCData client shall decrypt and integrity check the protected media control using the CSK and CSK-ID negotiated with the MCData client which has sent the media control. Then, the participating MCData function shall forward the media control information to the controlling MCData function by protecting the media control information using SPK and SPK-ID, if protection is configured between the participating MCData function and the controlling MCData function.\nA participating MCData function, when receiving a protected media control information from the controlling MCData function shall decrypt and integrity check the protected media control information using the SPK and SPK-ID configured between the participating MCData function and the controlling MCData function. Then, the participating MCData function shall forward the media control information to the destination MCData client by protecting the media control information using the CSK and CSK-ID if protection is negotiated between the participating MCData function and the MCData client.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.3.4\tThe controlling MCData function",
                            "text_content": "A controlling MCData function which receives protected media information shall forward it to the next entity without any additional action related to the security framework.\nA controlling MCData function, when receiving a protected media control information from a participating MCData function shall decrypt and integrity check the protected media control information using the SPK and SPK-ID configured between the participating MCData function and the controlling MCData function. Then, the controlling MCData function shall forward the media control information to the participating MCData function serving the destination MCData client by protecting the media control information using SPK and SPK-ID, if protection is configured between the participating MCData function and the controlling MCData function.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "11\tCommunication using MBMS",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "11.1\tControl messages sent over MBMS bearers",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "11.1.1\tGeneral",
                            "text_content": "The control messages sent over MBMS bearers by MCData participating function and specified in the present document are based on the (S)RTCP Application Packets (SRTCP: APP), as defined in IETF RFC 3550 [16] and IETF RFC 3711 [17], but the control messages do not conform to the rules for compound RTCP packets or RTCP packet transmission.\nEach MBMS control message is one (S)RTCP: APP packet. These RTCP: APP packets are not to be sent in compound RTCP packets, but more than one MBMS control message can be sent in a single IP packet.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.1.2\tSRTCP: APP format for control messages sent over MBMS bearers",
                            "text_content": "The definition of the fields in the SRTCP APP packet is found in IETF RFC 3550 [16] and IETF RFC 3711 [17].\nTable 11.1.2-1 shows the RTCP APP packet format used for control messages sent over MBMS bearers.\nTable 11.1.2-1: MBMS control message format\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P| Subtype |   PT=APP=204  |            length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           SSRC                                |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          name (ASCII)                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                 application-dependent data                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    Secure RTCP message part                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nP\nThe padding bit P is set to '0'.\nSubtype:\nThe Subtype values in use by MCData are defined in table 11.2.2-1.\nlength\nThe length field in the RTCP header is the length of the packet in 32-bit words, not counting the first 32-bit word in which the length field resides.\nNOTE:\tThe length field can indicate message size longer than specified in this version of the protocol. This can be the case e.g., if message is of later version of this protocol.\nSSRC\nThe content of this field is described for each MBMS control message separately.\nName\nThe 4-byte ASCII string in the RTCP header is used to define the set of MBMS control messages for MCData, to be unique with respect to other APP packets that may be sent over the MBMS bearer. For MCData, the name string is \"MCDM\" (Mission Critical Data over MBMS).\nApplication-dependent data\nThe application-dependent data contains zero or more application specific data fields. The format for these fields is described in clause 11.1.3.\nThis part is encrypted if SRTCP is used.\nSecure RTCP message part\nThe content of the secure RTCP message part is the \"tail\" appended to the RTCP packet per IETF RFC 3711 [17].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.1.3\tApplication specific data field",
                            "text_content": "Each application specific data field is composed of:\n1.\ta field ID which is one octet long;\n2.\ta length value which is:\n-\tone octet long, if the field ID is less than 192; and\n-\ttwo octets long, if the field ID is equal to or greater than 192;\n3.\ta field value. The length in octets of the field value is indicated in the length value; and\n4.\ta padding. The padding is zero, one, two, or three octets long. The value of the padding octet(s) is set to zero by sender and ignored by receiver.\nAn application specific data field is always a multiple of 4 octets long.\nTable 11.1.3-1 shows the application dependent data field structure when the field ID is less than 192. Table 11.1.3-2 shows the application dependent data field structure when the field ID is equal to or greater than 192.\nTable 11.1.3.-1: Application specific data field structure when the field ID is less than 192\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Field ID    | Length value  |                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n:                      <    F i e l d  v a l u e   >            :\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nTable 11.1.3.-2: Application specific data field structure when the field ID is equal to or greater than 192\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Field ID    |       Length value            |               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               +\n:                      <    F i e l d  v a l u e   >            :\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "11.2\tMBMS Subchannel Control",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "11.2.1\tGeneral",
                            "text_content": "The MBMS subchannel control messages shall be coded as described in clause 11.1.2.\nFor the MBMS subchannel control protocol used for MCData the ASCII name string shall be: \"MCDM\".\nThe list of MBMS subchannel control messages can be found in the clause 11.2.2.\nThe MBMS subchannel control specific fields are specified in clause 11.2.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.2.2\tMBMS subchannel control messages",
                            "text_content": "Table 11.2.2-1 provides a list of MBMS subchannel control protocol messages.\nTable 11.2.2-1: MBMS subchannel control protocol messages\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.2.2-1: MBMS subchannel control protocol messages",
                                    "table number": 1,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.2.3\tMBMS subchannel control specific fields",
                            "text_content": "This clause describes the MBMS subchannel control specific data fields.\nThe MBMS subchannel control specific data fields are contained in the application-dependent data of the MBMS subchannel control message. The MBMS subchannel control specific data fields follow the syntax specified in clause 11.1.3.\nTable 11.2.3.1-1 lists the available fields including the assigned Field ID.\nTable 11.2.3.1-1: MBMS subchannel control specific data fields\n\nThe MCData Group ID field contains a SIP URI identifying the MCData group to which the MBMS subchannel control messages applies.\nTable 11.2.3.2-1 describes the coding of the MCData Group Identity field.\nTable 11.2.3.2-1: MCData Group Identity field coding\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|MCData Group   |MCData Group   |MCData Group Identity          |\n|Identity field |Identity field |                               |\n|ID             |length         |                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               :\n:                                            (Padding)          :\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nThe <MCData Group Identity field ID> value is a binary value and shall be set according to table 11.2.3.1-1.\nThe <MCData Group Identity length> value is a binary value indicating the length in octets of the <MCData Group Identity> value item except padding.\n<MCData Group Identity> value contains the MCData group identity as defined in 3GPP TS 24.282 [8] and is in URI format (ASCII string).\nIf the length of the <MCData Group Identity> value is not (2 + multiple of 4) bytes, the <MCData Group Identity> value shall be padded to (2 + multiple of 4) bytes. The value of the padding bytes should be set to zero. The padding bytes shall be ignored.\nThe MBMS Subchannel field identifies the MBMS subchannel to use.\nTable 11.2.3.3-1 describes the coding of the MBMS Subchannel field.\nTable 11.2.3.3-1: MBMS Subchannel field coding\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|MBMS Subchannel|MBMS Subchannel|Appl.  |reser- |IP     | spare |\n|field ID value |length value   |m-line |ved    |Version|       |\n|               |               |Number |       |       |       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Media Port Number                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n:                        IP Address                             :\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nThe <MBMS Subchannel field ID> value is a binary value and shall be set according to table 11.2.3.1-1.\nThe <MBMS Subchannel length> value is a binary value indicating the total length in octets of the <Appl. m-line Number> value, reserved, <IP Version> value, spare, <Media Port Number> value and <IP address> items.\nThe <Appl. m-line Number> value shall consist of 4 bit parameter giving the number of the \"m=application\" m-line in the SIP MESSAGE request announcing the MBMS bearer described in 3GPP TS 24.282 [8].\nThe \"reserved\" 4 bits shall be set to \"0000\".\nThe <IP version> value indicates the IP version:\n'0'\tIP version 4\n'1'\tIP version 6\nAll other values are reserved for future use.\nThe \"spare\" 4 bits shall be set to \"0000\".\nThe <Port Number> value is a 32-bit binary value giving the port to be used. The <Media Port Number> value is always present in the MBMS Subchannel field.\nThe <IP Address> value is:\n1.\ta 32 bit binary value containing the IP v4 address if the <IP version> indicates that the <IP Address> value is a IP v4 Address; or\n2.\tfour 32-bit words that together forms a 128 bit binary value representing the IP v6 address, if the <IP version> indicates that the <IP Address> value is a IP v6 Address.\nTable 11.2.3.4-1 describes the coding of the TMGI field.\nTable 11.2.3.4-1: TMGI field coding\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|TMGI           |TMGI           |TMGI                           |\n|ID             |length         |                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               :\n:                                            (Padding)          :\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nThe <TMGI field ID> value is a binary value and shall be set according to table 11.2.3.1-1.\nThe <TMGI length> value is a binary value indicating the length in octets of the <TMGI> value item except padding.\nThe <TMGI> value is coded as described in 3GPP TS 24.008 [18] clause 10.5.6.13 excluding the Temporary Mobile Group Identity IEI and Length of Temporary Mobile Group Identity contents (octet 1 and octet 2 in 3GPP TS 24.008 [18] clause 10.5.6.13).\nIf the length of the <TMGI> value is not (2 + multiple of 4) bytes, the <TMGI> value shall be padded to (2 + multiple of 4) bytes. The value of the padding bytes should be set to zero. The padding bytes shall be ignored.\nTable 11.2.3.5-1 describes the coding of the Monitoring State field.\nTable 11.2.3.5-1: Monitoring State field coding\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|Monitoring     |Monitoring   |Monitoring     |Spare            |\n|State ID       |length=1     | State         |                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nThe <Monitoring State ID> value is a binary value and shall be set according to table 11.2.3.1-1.\nThe <Monitoring State length> value is a binary value indicating the length in octets of the <Monitoring State> value item. The field is set to 1.\nThe <Monitoring State> value is a binary value where the following values are defined:\n'0'\tMonitoring is inactive\n'1'\tMonitoring is active\nAll other values are reserved for future use.\nThe \"spare\" bits are set to zero.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.2.3.1-1: MBMS subchannel control specific data fields",
                                    "table number": 2,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.2.4\tMap Group To Bearer message",
                            "text_content": "The Map Group To Bearer message is sent by the participating function when the media associated with the group starts being transmitted on the MBMS bearer and, potentially, multiple times while the transmission is ongoing.\nTable 11.2.4-1 shows the content of the Map Group To Bearer message.\nTable 11.2.4-1: Map Group To Bearer message\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P| Subtype|   PT=APP=204  |          length                |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               SSRC of participating MCData function           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          name=MCDM                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       MCData Group ID field                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           TMGI field                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        MBMS Subchannel field                  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nWith the exception of the three first 32-bit words, the order of the fields are irrelevant.\nSubtype:\nThe Subtype shall be set according to table 11.2.3.1-1.\nlength:\nThe length shall be set to the total number of 32-bit words in the message minus one.\nSSRC:\nThe SSRC field shall carry the SSRC of the participating MCData function.\nThe SSRC field shall be coded as specified in IETF RFC 3550 [16].\nMCData Group ID:\nThe MCData Group ID field is coded as described in clause 11.2.3.2.\nTMGI:\nThe TMGI field is coded as described in clause 11.2.3.4.\nMBMS Subchannel:\nThe MBMS Subchannel field is coded as described in clause 11.2.3.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.2.5\tUnmap Group To Bearer message",
                            "text_content": "The Unmap Group To Bearer message is sent by the participating function when media associated with the group stops being sended on the bearer. The message may be repeated several times immediately after.\nTable 11.2.5-1 shows the content of the Unmap Group To Bearer message.\nTable 11.2.5-1: Unmap Group To Bearer message\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P| Subtype |   PT=APP=204  |          length               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               SSRC of participating MCData function           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          name=MCDM                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       MCData Group ID field                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           TMGI field                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        MBMS Subchannel field                  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nWith the exception of the three first 32-bit words, the order of the fields are irrelevant. MCData Group ID field is mandatory. Including the TMGI field and the MBMS Subchannel field is optional, but if one of those fields is included the other one also needs to be included.\nSubtype:\nThe Subtype shall be coded according to table 11.2.3.1-1.\nlength:\nThe length shall be set to the total number of 32-bit words in the message minus one.\nSSRC:\nThe SSRC field shall carry the SSRC of the participating MCData function.\nThe SSRC field shall be coded as specified in IETF RFC 3550 [16].\nMCData Group ID:\nThe MCData Group ID field is coded as described in clause 11.2.3.2.\nTMGI:\nThe TMGI field is coded as described in clause 11.2.3.4.\nMBMS Subchannel:\nThe MBMS Subchannel field is coded as described in clause 11.2.3.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.2.6\tApplication Paging message",
                            "text_content": "The Application Paging message is sent by the participating function when an existing media transmission is to be switched to unicast bearers or when a new media transmission is to be started on unicast bearers.\nTable 11.2.6-1 shows the content of the Application Paging message.\nTable 11.2.6-1: Application Paging message\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P| Subtype |   PT=APP=204  |          length               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               SSRC of participating MCData function           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          name=MCDM                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       MCData Group ID                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nWith the exception of the three first 32-bit words, the order of the fields is irrelevant.\nSubtype:\nThe Subtype shall be coded according to table 11.2.2-1.\nlength:\nThe length shall be set to the total number of 32-bit words in the message minus one.\nSSRC:\nThe SSRC field shall carry the SSRC of the participating MCData function.\nThe SSRC field shall be coded as specified in IETF RFC 3550 [16].\nMCData Group ID:\nThe MCData Group ID field is coded as described in clause 11.2.3.2.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.2.7\tBearer Announcement message",
                            "text_content": "The Bearer Announcement message is sent by the participating function on an MBMS bearer for application control messages. It may be sent by the participating function in order to achieve a faster setup of the MBMS bearer.\nTable 11.2.7-1 shows the content of the Bearer Announcement message.\nTable 11.2.7-1: Bearer Announcement message\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P| Subtype |   PT=APP=204  |          length               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          name=MCDM                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                              TMGI                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    Alternative TMGI fields                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       Monitoring State                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nWith the exception of the three first 32-bit words and the internal order of the TMGI field and the Alternative TMGI fields, the order of the fields is irrelevant.\nSubtype:\nThe subtype shall be coded according to table 11.2.3.1-1.\nlength:\nThe length shall be set to the total number of 32-bit words in the message minus one.\nTMGI:\nThe TMGI field is coded as described in clause 11.2.3.4. This field is mandatory.\nAlternative TMGI:\nZero or more alternative TMGI fields are coded as described in clause 11.2.3.4. This field is coded immediately after the TMGI field.\nMonitoring State:\nThe monitoring state field is coded as described in clause 11.2.3.5.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.2.8\tHandling of unknown messages and fields",
                            "text_content": "When an RTCP APP message is received, the receiver shall:\n1)\tignore the whole message, if the combination of name and subtype is unknown;\n2)\tignore the whole message if it is too short or has errors in the mandatory fields;\n3)\tignore the unspecified fields in the message (e.g. specified in future version of the protocol); and\n4)\tignore the syntactically incorrect optional fields.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "11A\tCommunication using MBS",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "11A.1\tControl messages sent over MBS session",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "11A.1.1\tGeneral",
                            "text_content": "Clause 11.1.1 apply also for MBS, with the clarification that terminology mapping specified that references to 4G MBMS corresponds to be references to 5G MBS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11A.1.2\tSRTCP: APP format for control messages sent over MBS sessions",
                            "text_content": "The definition of the fields in the SRTCP APP packet is found in IETF RFC 3550 [16] and IETF RFC 3711 [17].\nTable 11A.1.2-1 shows the RTCP APP packet format used for control messages sent over MBS sessions.\nTable 11A.1.2-1: MBS control message format\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P| Subtype |   PT=APP=204  |            length             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           SSRC                                |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          name (ASCII)                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                 application-dependent data                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    Secure RTCP message part                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nP\nThe padding bit P is set to '0'.\nSubtype:\nThe Subtype values in use by MCData are defined in table 11A.2.2-1.\nlength\nThe length field in the RTCP header is the length of the packet in 32-bit words, not counting the first 32-bit word in which the length field resides.\nNOTE:\tThe length field can indicate message size longer than specified in this version of the protocol. This can be the case e.g., if message is of later version of this protocol.\nSSRC\nThe content of this field is described for each MBS control message separately.\nName\nThe 4-byte ASCII string in the RTCP header is used to define the set of MBS control messages for MCData, to be unique with respect to other APP packets that may be sent over the MBS session. For MCData, the name string is \"MCDS\" (Mission Critical Data over MBS).\nApplication-dependent data\nThe application-dependent data contains zero or more application specific data fields. The format for these fields is described in clause 11A.1.3.\nThis part is encrypted if SRTCP is used.\nSecure RTCP message part\nThe content of the secure RTCP message part is the \"tail\" appended to the RTCP packet per IETF RFC 3711 [17].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11A.1.3\tApplication specific data field",
                            "text_content": "Clause 11.1.3 apply also for MBS.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "11.2A\tMBS Subchannel Control",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "11A.2.1\tGeneral",
                            "text_content": "The MBS subchannel control messages shall be coded as described in clause 11A.1.2.\nFor the MBS subchannel control protocol used for MCData the ASCII name string shall be: \"MCDS\".\nThe list of MBS subchannel control messages can be found in the clause 11A.2.2.\nThe MBS subchannel control specific fields are specified in clause 11A.2.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11A.2.2\tMBS subchannel control messages",
                            "text_content": "Table 11A.2.2-1 provides a list of MBS subchannel control protocol messages.\nTable 11A.2.2-1: MBS subchannel control protocol messages\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11A.2.2-1: MBS subchannel control protocol messages",
                                    "table number": 3,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11A.2.3\tMBS subchannel control specific fields",
                            "text_content": "This clause describes the MBS subchannel control specific data fields.\nThe MBS subchannel control specific data fields are contained in the application-dependent data of the MBS subchannel control message. The MBS subchannel control specific data fields follow the syntax specified in clause 11A.1.3.\nTable 11A.2.3.1-1 lists the available fields including the assigned Field ID.\nTable 11A.2.3.1-1: MBS subchannel control specific data fields\n\nThe MCData Group ID field contains a SIP URI identifying the MCData group to which the MBS subchannel control messages applies.\nTable 11A.2.3.2-1 describes the coding of the MCData Group Identity field.\nTable 11A.2.3.2-1: MCData Group Identity field coding\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|MCData Group   |MCData Group   |MCData Group Identity          |\n|Identity field |Identity       |                               |\n|ID             |length         |                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               :\n:                                            (Padding)          :\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nThe <MCData Group Identity field ID> value is a binary value and shall be set according to table 11A.2.3.1-1.\nThe <MCData Group Identity length> value is a binary value indicating the length in octets of the <MCData Group Identity> value item except padding.\n<MCData Group Identity> value contains the MCData group identity as defined in 3GPP TS 24.282 [8] and is in URI format (ASCII string).\nIf the length of the <MCData Group Identity> value is not (2 + multiple of 4) bytes, the <MCData Group Identity> value shall be padded to (2 + multiple of 4) bytes. The value of the padding bytes should be set to zero. The padding bytes shall be ignored.\nThe MBS Subchannel field identifies the MBS subchannel to use.\nTable 11A.2.3.3-1 describes the coding of the MBS Subchannel field.\nTable 11A.2.3.3-1: MBS Subchannel field coding\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|MBS Subchannel|MBS Subchannel|Appl.  |reser-   |IP     | spare |\n|field ID     |length         |m-line  |ved     |Version |      |\n|               |               |Number |       |       |       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Media Port Number                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n:                        IP Address                             :\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nThe <MBS Subchannel field ID> value is a binary value and shall be set according to table 11A.2.3.1-1.\nThe <MBS Subchannel length> value is a binary value indicating the total length in octets of the <Appl. m-line Number> value, reserved, <IP Version> value, spare, <Media Port Number> value and <IP address> items.\nThe <Appl. m-line Number> value shall consist of 4 bit parameter giving the number of the \"m=application\" m-line in the SIP MESSAGE request announcing the MBS session described in 3GPP TS 24.282 [8].\nThe \"reserved\" 4 bits shall be set to \"0000\".\nThe <IP version> value indicates the IP version:\n'0'\tIP version 4\n'1'\tIP version 6\nAll other values are reserved for future use.\nThe \"spare\" 4 bits shall be set to \"0000\".\nThe <Port Number> value is a 32-bit binary value giving the port to be used. The <Media Port Number> value is always present in the MBS Subchannel field.\nThe <IP Address> value is:\n1.\ta 32 bit binary value containing the IP v4 address if the <IP version> indicates that the <IP Address> value is a IP v4 Address; or\n2.\tfour 32-bit words that together forms a 128 bit binary value representing the IP v6 address, if the <IP version> indicates that the <IP Address> value is a IP v6 Address.\nTable 11A.2.3.4-1 describes the coding of the MBS Session ID field.\nTable 11A.2.3.4-1: MBS Session ID field coding\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|MBS Session ID |MBS Session ID |MBS Session ID                 |\n|field ID       |length         |                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               :\n:                                            (Padding)          :\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nThe <MBS Session ID field ID> value is a binary value and shall be set according to table 11A.2.3.1-1.\nThe <MBS Session ID length> value is a binary value indicating the length in octets of the <MBS Session ID> value item except padding.\nThe <MBS Session ID> value is coded as described in 3GPP TS 24.501 [24] clause 10.5.6.1 figure 9.11.4.30.2.\nIf the length of the <MBS Session ID> value is not (2 + multiple of 4) bytes, the <MBS Session ID> value shall be padded to (2 + multiple of 4) bytes. The value of the padding bytes should be set to zero. The padding bytes shall be ignored.\nClause 11.2.3.5 apply also for MBS.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11A.2.3.1-1: MBS subchannel control specific data fields",
                                    "table number": 4,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11A.2.4\tMapGroupToSessionStream message",
                            "text_content": "The MapGroupToSessionStream message is sent by the participating function when the media associated with the group starts being transmitted on the MBS session and, potentially, multiple times while the transmission is ongoing.\nTable 11A.2.4-1 shows the content of the MapGroupToSessionStream message.\nTable 11A.2.4-1: MapGroupToSessionStream message\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P| Subtype|   PT=APP=204  |          length                |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               SSRC of participating MCData function           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          name=MCDS                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       MCData Group ID field                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        MBS Session ID field                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        MBS Subchannel field                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nWith the exception of the three first 32-bit words, the order of the fields are irrelevant.\nSubtype:\nThe Subtype shall be set according to table 11A.2.3.1-1.\nlength:\nThe length shall be set to the total number of 32-bit words in the message minus one.\nSSRC:\nThe SSRC field shall carry the SSRC of the participating MCData function.\nThe SSRC field shall be coded as specified in IETF RFC 3550 [16].\nMCData Group ID:\nThe MCData Group ID field is coded as described in clause 11A.2.3.2.\nMBS Session ID:\nThe MBS Session ID field is coded as described in clause 11A.2.3.4.\nMBS Subchannel:\nThe MBS Subchannel field is coded as described in clause 11A.2.3.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11A.2.5\tUnMapGroupFromSessionStream message",
                            "text_content": "The UnMapGroupFromSessionStream message is sent by the participating function when media associated with the group stops being sended on the session. The message may be repeated several times immediately after.\nTable 11A.2.5-1 shows the content of the UnMapGroupFromSessionStream message.\nTable 11A.2.5-1: UnMapGroupFromSessionStream message\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P| Subtype |   PT=APP=204  |          length               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               SSRC of participating MCData function           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          name=MCDS                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       MCData Group ID field                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      MBS Session ID field                     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        MBS Subchannel field                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nWith the exception of the three first 32-bit words, the order of the fields are irrelevant. MCData Group ID field is mandatory. Including the MBS Session ID field and the MBS Subchannel field is optional, but if one of those fields is included the other one also needs to be included.\nSubtype:\nThe Subtype shall be coded according to table 11A.2.3.1-1.\nlength:\nThe length shall be set to the total number of 32-bit words in the message minus one.\nSSRC:\nThe SSRC field shall carry the SSRC of the participating MCData function.\nThe SSRC field shall be coded as specified in IETF RFC 3550 [16].\nMCData Group ID:\nThe MCData Group ID field is coded as described in clause 11A.2.3.2.\nMBS Session ID:\nThe MBS Session ID field is coded as described in clause 11A.2.3.4.\nMBS Subchannel:\nThe MBS Subchannel field is coded as described in clause 11A.2.3.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11A.2.6\tMBS Application Paging message",
                            "text_content": "The MBS Application Paging message is sent by the participating function when an existing media transmission is to be switched to unicast sessions or when a new media transmission is to be started on unicast sessions.\nTable 11A.2.6-1 shows the content of the MBS Application Paging message.\nTable 11A.2.6-1: MBS Application Paging message\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P| Subtype |   PT=APP=204  |          length               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|               SSRC of participating MCData function           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          name=MCDS                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       MCData Group ID                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nWith the exception of the three first 32-bit words, the order of the fields is irrelevant.\nSubtype:\nThe Subtype shall be coded according to table 11A.2.2-1.\nlength:\nThe length shall be set to the total number of 32-bit words in the message minus one.\nSSRC:\nThe SSRC field shall carry the SSRC of the participating MCData function.\nThe SSRC field shall be coded as specified in IETF RFC 3550 [16].\nMCData Group ID:\nThe MCData Group ID field is coded as described in clause 11A.2.3.2.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11A.2.7\tSessionAnnouncement message",
                            "text_content": "The Session Announcement message is sent by the participating function on an MBS session for application control messages. It may be sent by the participating function in order to achieve a faster setup of the MBS session.\nTable 11A.2.7-1 shows the content of the Session Announcement message.\nTable 11A.2.7-1: Session Announcement message\n0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|V=2|P| Subtype |   PT=APP=204  |          length               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          name=MCDS                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                         MBS Session ID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                              TMGI                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    Alternative TMGI fields                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       Monitoring State                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nWith the exception of the three first 32-bit words and the internal order of the MBS Session ID field and the Alternative MBS Session ID fields, the order of the fields is irrelevant.\nSubtype:\nThe subtype shall be coded according to table 11A.2.3.1-1.\nlength:\nThe length shall be set to the total number of 32-bit words in the message minus one.\nMBS Session ID:\nThe MBS Session ID field is coded as described in clause 11A.2.3.4. This field is mandatory.\nTMGI:\nThe TMGI field is coded as described in clause 11.2.3.4. This field is mandatory.\nAlternative TMGI:\nZero or more alternative TMGI fields are coded as described in clause 11.2.3.4. This field is coded immediately after the TMGI field.\nMonitoring State:\nThe monitoring state field is coded as described in clause 11A.2.3.5.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11A.2.8\tHandling of unknown messages and fields",
                            "text_content": "When an RTCP APP message is received, the receiver shall:\n1)\tignore the whole message, if the combination of name and subtype is unknown;\n2)\tignore the whole message if it is too short or has errors in the mandatory fields;\n3)\tignore the unspecified fields in the message (e.g. specified in future version of the protocol); and\n4)\tignore the syntactically incorrect optional fields.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "12\tPre-established session media plane procedures",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "12.1\tMCData client procedure",
                    "description": "",
                    "summary": "",
                    "text_content": "Upon establishing one-to-one or group SDS using media plane or one-to-one or group SDS session using pre-established call, the MCData client shall follow procedures as descried in clause 6.1.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "12.2\tParticipating MCData function procedure",
                    "description": "",
                    "summary": "",
                    "text_content": "Upon establishing one-to-one or group SDS using media plane or one-to-one or group SDS session using pre-established call, the participating MCData function shall follow the procedure as described in clause 6.2.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "13\tIP Connectivity media plane procedures",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "13.1\tIP Connectivity client procedures",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "13.1.1\tGeneral",
                            "text_content": "For IP Connectivity the endpoint of the media plane is an IP application that can send and receive any kind of IP messages. The IP application may reside on an external non-3GPP host connected via an IP interface to the MCData UE that incorporates the MCData client, or it may be running on the MCData UE. If the IP application resides on an external non-3GPP host, the MCData UE that incorporates the MCData client provides a second IP interface with an IP address independent of the 3GPP system for communication with the external non 3GPP host. The IP interface between the IP application  the MCData UE and the MCData client is implementation specific.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "13.1.2\tOriginating MCData client procedures",
                            "text_content": "Upon receiving a request by an MCData user, or an IP packet from an IP application, the MCData client shall follow the procedure in 20.2.1 in 3GPP TS 24.282 [8]. The IP address and port number received in the SDP payload of the 200 OK response in this procedure shall be used to establish an IP tunnel. The IP tunnel shall be based on GRE-in-UDP Encapsulation as specified in IETF RFC 8086 [23], and as specified in clause 13.4. Generic Routing Encapsulation (GRE) as specified in IETF RFC 2784 [19] is used as a basis of GRE-in-UDP Encapsulation.\nThe MCData client shall perform encapsulation and decapsulation according to clause 13.4.\nThe MCData client acts as an IP relay for IP traffic between the IP application and the IP tunnel to the far endpoint. Once the IP tunnel is established, the IP applications can exchange IP data. The MCData client that receives the IP packets from the IP application shall perform encapsulation to the tunnelling protocol adding a GRE header and a UDP header to the IP packet, and send the outgoing UDP traffic to the IP address and port present in the SDP answer. When the originating MCData client receives IP packets from the IP tunnel it shall perform de-capsulation from the tunnelling protocol, removing the UDP header and the GRE header from the received packet, before passing the IP data to the IP application.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "13.1.3\tTerminating MCData client procedures",
                            "text_content": "The successful outcome of the procedure 20.2.2 in 3GPP TS 24.282 [8] shall be the trigger to start the establishment of the IP tunnel. The IP tunnel is based on GRE-in-UDP Encapsulation as specified in IETF RFC 8086 [23], and as specified in clause 13.4.\nThe MCData client shall perform encapsulation and decapsulation in accordance with clause 13.4.\nThe MCData client acts as an IP relay for IP traffic between the IP tunnel and the IP application. Once the IP tunnel is established, the IP applications can exchange IP data. The client that receives IP packets from the IP tunnel shall perform de-capsulation from the tunnelling protocol, removing the UDP header and the GRE header from the received packet, before passing the IP data to the IP application. When the terminating MCData client receives an IP packet from the IP application, it shall perform encapsulation to the tunnelling protocol adding a GRE header and a UDP header to the IP packet, and send the outgoing UDP traffic to the IP address and port present in the SDP offer.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "13.2\tParticipating MCData function procedures",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "13.2.1\tOriginating procedures",
                            "text_content": "If the originating participating MCData function is in the path of the data exchange between the MCData clients, it shall provide an endpoint for the UDP based communication towards the originating MCData client, and a second endpoint for UDP based communication towards the next hop of the UDP based communication in the direction of the terminating MCData client. The originating participating MCData function shall act as a relay for the UDP traffic between these two adjacent UDP communication endpoints using the IP addresses and UDP ports exchanged in the SDP offers/answers.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "13.2.2\tTerminating procedures",
                            "text_content": "If the terminating participating MCData function is in the path of the data exchange between the MCData clients, it shall provide an endpoint for the UDP based communication towards the terminating MCData client, and a second endpoint for UDP based communication towards the next hop of the UDP based communication in the direction of the originating MCData client. The terminating participating MCData function shall act as a relay for the UDP traffic between these two adjacent UDP communication endpoints using the IP addresses and UDP ports exchanged in the SDP offers/answers.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "13.3\tControlling MCData function procedures",
                    "description": "",
                    "summary": "",
                    "text_content": "If the controlling MCData function is in the path of the data exchange between the MCData clients, it shall provide an endpoint for the UDP based communication towards the next hop of the UDP based communication in the direction of the originating MCData client, and a second endpoint for the UDP based communication towards the next hop of the UDP based communication in the direction of the terminating MCData client. The controlling MCData function shall act as a relay for the UDP traffic between these two adjacent UDP Communication endpoints using the IP addresses and UDP ports exchanged in the SDP offers/answers.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "13.4\tEncapsulation of the user data in the GRE-in-UDP tunnel",
                    "description": "",
                    "summary": "",
                    "text_content": "The Encapsulation of the user data in the GRE-in-UDP tunnel shall be performed as defined in IETF RFC 8086 [23] with the following clarifications:\n1.)\tUDP checksum shall be used when encapsulating in both IPv4 and IPv6;\n2.) The UDP ports can be freely chosen. The port information is exchanged via SDP; and\n3.)\tGRE keys shall not be used.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "13.5\tMedia plane details",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "13.5.1\tGeneral",
                            "text_content": "The media plane is used for transport of data via the GRE-in-UDP tunnel as specified in the present clause.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "13.5.2\tEstablishing a media plane for a GRE-in-UDP tunnel",
                            "text_content": "The MCData client and the MCData server use the SDP offer/answer mechanism in order to negotiate the establishment of the media plane for a GRE-in-UDP tunnel.\nThe media description (\"m=\" line) associated with the media plane of the GRE-in-UDP tunnel shall have the values as described in table 13.5.2.1-1.\nTable 13.5.2.1-1: GRE-in-UDP tunnel media description\n\nThe format of the optional SDP fmtp attribute, when associated with the GRE-in-UDP ports, is described in clause 13.6.\nThe example below shows an SDP media description for MCData IP Connectivity media plane\nm=application 20032 udp MCDATA\na=fmtp:MCDATA mcdata-ipconn\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 13.5.2.1-1: GRE-in-UDP tunnel media description",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "13.6\tSession description types defined within the present document",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "13.6.1\tGeneral",
                            "text_content": "This clause contains definitions for SDP parameters that are specific to SDP usage with MCData IP connectivity and therefore are not described in an IETF RFC.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "13.6.2\tSDP \"fmtp\" attribute for MCData IP connectivity",
                            "text_content": "This clause defines the structure and syntax of the SDP \"fmtp\" attribute, when used to negotiate the ports used for GRE-in-UDP tunnel establishment.\nIn an SDP offer and answer, the \"mcdata-ipconn-sport\" fmtp attribute is used to indicate the UDP source port of the GRE-in-UDP tunnel.\nTable 13.6.2.3-1: SDP \"fmtp\" attribute for the MCData IP connectivity\n\nfmtp-attr-ipconn      =  \"a=fmtp:\" \"MCDATA\" SP attr-param\nattr-param            =  mcdata-ipconn-s-port\nmcdata-ipconn-sport   =  \"mcdata-ipconn-s-port=1*(DIGIT)\"\n\n\nIn the EPS, using the MBMS procedures, in the 5GS or MBMS and 5G MBS co- existence, using the MBS procedures;\n-\tin the MBS procedures, references to 4G \"MBMS\" is understood to be references to 5G \"MBS\";\n-\tin the MBS procedures, \"MBS session ID\" corresponds to the \"TMGI\" in MBMS;\n-\tin the MBS procedures, \"Map Group To Session Stream\" corresponds to the \"Map Group To Bearer\" in MBMS; and\n-\tin the MBS procedures, \"UnMap Group From Session Stream\" corresponds to the \"UnMap Group To Bearer\" in MBMS.\n\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}