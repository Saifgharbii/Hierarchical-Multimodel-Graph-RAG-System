{
    "document_name": "29675-i30.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Specification has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\nY\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\nIn the present document, certain modal verbs have the following meanings:\nshall\t\tindicates a mandatory requirement to do something\nshall not\tindicates an interdiction (prohibition) to do something\nNOTE 1:\tThe constructions \"shall\" and \"shall not\" are confined to the context of normative provisions, and do not appear in Technical Reports.\nNOTE 2:\tThe constructions \"must\" and \"must not\" are not used as substitutes for \"shall\" and \"shall not\". Their use is avoided insofar as possible, and they are not used in a normative context except in a direct citation from an external, referenced, non-3GPP document, or so as to maintain continuity of style when extending or modifying the provisions of such a referenced document.\nShould\t\tindicates a recommendation to do something\nshould not\tindicates a recommendation not to do something\nmay\t\tindicates permission to do something\nneed not\tindicates permission not to do something\nNOTE 3:\tThe construction \"may not\" is ambiguous and is not used in normative elements. The unambiguous constructions \"might not\" or \"shall not\" are used instead, depending upon the meaning intended.\nCan\t\tindicates that something is possible\ncannot\t\tindicates that something is impossible\nNOTE 4:\tThe constructions \"can\" and \"cannot\" shall not to be used as substitutes for \"may\" and \"need not\".\nWill\t\tindicates that something is certain or expected to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nwill not\t\tindicates that something is certain or expected not to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nmight\tindicates a likelihood that something will happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nmight not\tindicates a likelihood that something will not happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nIn addition:\nis\t(or any other verb in the indicative mood) indicates a statement of fact\nis not\t(or any other negative verb in the indicative mood) indicates a statement of fact\nNOTE 5:\tThe constructions \"is\" and \"is not\" do not indicate requirements.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document specifies the stage 3 protocol and data model for the Nucmf Service Based Interface. It provides stage 3 protocol definitions and message flows, and specifies the API for each service offered by the UCMF.\nThe 5G System stage 2 architecture and procedures are specified in 3GPP TS 23.501 [2] and 3GPP TS 23.502 [3].\nThe Technical Realization of the Service Based Architecture and the Principles and Guidelines for Services Definition are specified in 3GPP TS 29.500 [4] and 3GPP TS 29.501 [5].\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 23.501: \"System Architecture for the 5G System; Stage 2\".\n[3]\t3GPP TS 23.502: \"Procedures for the 5G System; Stage 2\".\n[4]\t3GPP TS 29.500: \"5G System; Technical Realization of Service Based Architecture; Stage 3\".\n[5]\t3GPP TS 29.501: \"5G System; Principles and Guidelines for Services Definition; Stage 3\".\n[6]\tOpenAPI: \"OpenAPI Specification Version 3.0.0\", .\n[7]\t3GPP TR 21.900: \"Technical Specification Group working methods\".\n[8]\t3GPP TS 33.501: \"Security architecture and procedures for 5G system\".\n[9]\tIETF RFC 6749: \"The Oauth 2.0 Authorization Framework\".\n[10]\t3GPP TS 29.510: \"5G System; Network Function Repository Services; Stage 3\".\n[11]\tIETF RFC 9113: \"Hypertext Transfer Protocol Version 2 (HTTP/2)\".\n[12]\tIETF RFC 8259: \"The JavaScript Object Notation (JSON) Data Interchange Format\".\n[13]\tIETF RFC 9457: \"Problem Details for HTTP APIs\".\n[14]\tIETF RFC 3986: \"Uniform Resource Identifier (URI): Generic Syntax\".\n[15]\t3GPP TS 29.122: \"T8 reference point for northbound Application Programming Interfaces (APIs)\".\n[16]\tIETF RFC 7396: \"JSON Merge Patch\".\n[17]\t3GPP TS 29.571: \"5G System; Common Data Types for Service Based Interfaces; Stage 3\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions, symbols and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tDefinitions",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms and definitions given in 3GPP TR 21.905 [1] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in 3GPP TR 21.905 [1].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tSymbols",
                    "description": "",
                    "summary": "",
                    "text_content": "No symbol is defined in the present document.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.3\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in 3GPP TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in 3GPP TR 21.905 [1].\nAF\tApplication Function\nIMEI-TAC\tType Allocation Code part of an IMEI\nNEF\tNetwork Exposure Function\nNF\tNetwork Function\nRACS\tRadio Capabilities Signalling optimisation\nUCMF\tUE radio Capability Management Function\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tUE Radio Capability Provisioning Service",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "4.1\tService Description",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.1.1\tOverview",
                            "text_content": "The UE radio capability provisioning service, as defined in 3GPP TS 23.502 [3], is provided by the UE radio Capability Management Function (UCMF).\nThis service:\n-\tallows NF service consumers to create, update and delete UCMF dictionary entries for Manufacturer-assigned UE Radio Capability IDs.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.1.2\tService Architecture",
                            "text_content": "The Service Architecture is defined in 3GPP TS 23.501 [2].\nThe UE radio capability provisioning service (Nucmf_Provisioning) is part of the Nucmf service-based interface exhibited by the UCMF.\nThe known NF service consumers of the Nucmf_Provisioning service are:\n-\tNetwork Exposure Function (NEF); and\n-\tApplication Function (AF).\nThe Nucmf_Provisioning service is provided by the UCMF and consumed by the NEF and the AF, as shown in figure 4.1.2-1 for the SBI representation model and in figure 4.1.2-2 for reference point representation model.\nThe Nucmf_Provisioning service architecture, as depicted in Figure 4.1.2-1, illustrates the service's design and components. The service is designed to provide a secure and efficient way for network operators to provision Nucmf services. Key components include the Nucmf_Provisioning service, the Nucmf_Service, and the Nucmf_Service_Provider. The service is designed to be scalable and flexible, allowing for easy addition or removal of services. The architecture is designed to be modular and modular, allowing for easy integration with other services and components.\nFigure 4.1.2-1: Nucmf_Provisioning service Architecture, SBI representation\nThe figure depicts the architecture of the Nucmf_Provisioning service, illustrating its reference point representation. It includes a reference point (RP) for each service instance, which is a key component in the service's design. The RP is used to store the service's configuration and metadata, ensuring that the service can be easily accessed and managed. The figure also shows the service's communication paths, including the network interface (NI) and the service instance (SI), which are essential for the service's operation.\nFigure 4.1.2-2: Nucmf_Provisioning service Architecture, reference point representation\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.1.3\tNetwork Functions",
                            "text_content": "The UCMF is a functional element that provides service to the NF service consumer.\nIt allows NF consumers to provision (create, update and delete) UCMF dictionary entries for Manufacturer-assigned UE Radio Capability IDs.\nThe Network Exposure Function (NEF):\n-\tProvision (create, update and delete) UCMF dictionary entries for Manufacturer-assigned UE Radio Capability IDs to the UCMF, if it receives the UE Radio Capability information from the untrusted AF.\nThe Application Function (AF):\n-\tAs the trusted AF, provision (create, update and delete) UCMF dictionary entries for Manufacturer-assigned UE Radio Capability IDs to the UCMF.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.2\tService Operations",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.2.1\tIntroduction",
                            "text_content": "Service operations defined for the Nucmf_Provisioning Service are shown in table 4.2.1-1.\nTable 4.2.1-1: Nucmf_Provisioning Service Operations\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 4.2.1-1: Nucmf_Provisioning Service Operations",
                                    "table number": 1,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "4.2.2\tNucmf_Provisioning_Create service operation",
                            "text_content": "This service operation is used by an NF service consumer to create UE radio capability provisioning resource for Manufacturer-assigned UE Radio Capability IDs.\nThe following procedure using the Nucmf_Provisioning_Create service operation is supported:\n-\tcreating a UE radio capability provisioning resource.\nThis procedure is used by the NF service consumer (e.g. NEF) to create a UE radio capability provisioning resource containing UCMF dictionary entries for Manufacturer-assigned UE Radio Capability IDs, as defined in 3GPP TS 23.501 [2] and 3GPP TS 23.502 [3].\nThe figure depicts a schematic of a radio resource provisioning system, specifically focusing on the creation of new radio capabilities for UE (User Equipment) radio. The system includes various components such as radio resources, radio access network (RAN), and radio network (RAN). The figure illustrates the process of creating new radio capabilities, which can be used to enhance the performance of the radio network.\nFigure 4.2.2.2-1: Creating new UE radio capability provisioning resource\nTo create a UE radio capability provisioning resource, the NF service consumer shall send an HTTP POST request to the UCMF with: \"{apiRoot}/nucmf-provisioning/<apiVersion>/provisionings\" as request URI as shown in step 1 of figure 4.2.2.2-1, and the \"RacsData\" data structure as request body. The \"RacsData\" data type shall contain one or more RACS configurations in the \"racsConfigs\" attribute which include:\n-\ta RACS ID in the \"racsId\" attribute;\n-\tUE radio capability information in the \"racsParamEps\" and/or \"racsParam5Gs\" attributes; and\n-\tthe related UE model(s) IMEI-TAC value(s) in the \"imeiTacs\" attribute.\nUpon reception of the HTTP POST message from the NF service consumer requesting to create UCMF dictionary entries, the UCMF shall, for each requested RACS ID, check if there is any existing dictionary entry having the same RACS ID. If yes, the UCMF shall indicate \"RACS_ID_DUPLICATED\" in the \"result\" attribute for the requested RACS ID; otherwise if there is no other error the UCMF shall create a UCMF dictionary entry.\nAfter processing all requested RACS IDs, if at least one UCMF dictionary entry is successfully provisioned, the UCMF shall create the resource \"Individual UE radio capability provisioning\" and respond \"201 Created\" as shown in step 2 of figure 4.2.2.2-1 with the successfully provisioned RACS information, the UCMF may include RACS report(s) within attribute \"racsReports\" with a list of RACS ID(s) and the corresponding failure code for which the provisioning has failed as specified in table 5.16.2.2.3-1 of 3GPP TS 29.122 [15] in the body of the HTTP response; otherwise the UCMF shall respond \"500 Internal Server Error\" and may include the RACS report(s) to indicate failure details.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.2.3\tNucmf_Provisioning_Update service operation",
                            "text_content": "This service operation is used by an NF service consumer to modify UE radio capability provisioning resource for Manufacturer-assigned UE Radio Capability IDs.\nThe following procedure using the Nucmf_Provisioning_Update service operation is supported:\n-\tmodifying an existing UE radio capability provisioning resource.\nThe figure depicts a UE radio capability provisioning resource, which is a crucial component in 5G networks. It shows the various radio capabilities that can be modified, such as the number of antennas, power levels, and modulation schemes. This resource provisioning is essential for ensuring efficient and reliable communication in 5G networks.\nFigure 4.2.3.2-1: Modifying a UE radio capability provisioning resource\nIn order to modify a UE radio capability provisioning resource, i.e. add new UCMF dictionary entries, update and/or remove the existing UCMF dictionary entries for one or more RACS ID(s), the NF service consumer shall send an HTTP PUT or PATCH request to the UCMF with: \"{apiRoot}/nucmf-provisioning/<apiVersion>/provisionings/{provisioningId}\" as request URI as shown in step 1 of figure 4.2.3.2-1, and the \"RacsData\" or \"RacsDataPatch\" data structure as request body, correspondingly. The \"RacsData\" or \"RacsDataPatch\" data type shall contain one or more RACS configurations in the \"racsConfigs\" attribute which include:\n-\ta RACS ID in the \"racsId\" attribute;\n-\tUE radio capability information in the \"racsParamEps\" and/or \"racsParam5Gs\" attributes; and\n-\tthe related UE model(s) IMEI-TAC value(s) in the \"imeiTacs\" attribute.\nUpon reception of the HTTP PUT message from the NF service consumer, the UCMF shall start replacing the existing UE radio capability provisioning resource and update the corresponding UCMF dictionary entr(ies).\nUpon reception of the HTTP PATCH message from the NF service consumer, the UCMF shall start modifying the existing UE radio capability provisioning resource:\n-\tremove RACS ID and its UE radio capability information with a NULL map key value, and the corresponding UCMF dictionary entry;\n-\treplace the UE radio capability information for any existing RACS ID in the resource, and the corresponding UCMF dictionary entry; and/or\n-\tcreate a UCMF dictionary entry for any new RACS ID if there is no ID conflict with other existing resources.\nAfter processing all requested RACS IDs, if at least one UCMF dictionary entry is successfully provisioned, the UCMF shall respond \"200 OK\" as shown in step 2 of figure 4.2.3.2-1 with the successfully provisioned RACS information, the UCMF may include RACS report(s) within attribute \"racsReports\" with a list of RACS ID(s) and the corresponding failure code for which the provisioning has failed as specified in table 5.16.2.2.3-1 of 3GPP TS 29.122 [15] in the body of the HTTP response; otherwise the UCMF shall respond \"500 Internal Server Error\" and may include the RACS report(s) to indicate failure details.\nIf the feature \"ES3XX\" is supported, and the UCMF determines the received HTTP PUT or PATCH request needs to be redirected, the UCMF shall send an HTTP redirect response as specified in clause 6.10.9 of 3GPP TS 29.500 [4].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.2.4\tNucmf_Provisioning_Delete service operation",
                            "text_content": "This service operation is used by an NF service consumer to remove UE radio capability provisioning resource for Manufacturer-assigned UE Radio Capability IDs.\nThe following procedure using the Nucmf_Provisioning_Delete service operation is supported:\n-\tremoving an existing UE radio capability provisioning resource.\nThe figure depicts a scenario where a UE radio capability is removed, resulting in a resource provisioning issue. This is important for ensuring the proper functioning of the network, as it affects the ability of the network to provide services to its users.\nFigure 4.2.4.2-1: Removing a UE radio capability provisioning resource\nIn order to remove a UE radio capability provisioning resource, the NF service consumer shall send an HTTP DELETE request to the UCMF with: \"{apiRoot}/nucmf-provisioning/<apiVersion>/provisionings/{provisioningId}\" as request URI as shown in step 1 of figure 4.2.4.2-1.\nUpon successful reception of the HTTP DELETE, the UCMF shall remove the corresponding resource and the corresponding UCMF dictionary entries, and send an HTTP \"204 No Content\" response as shown in step 2 of figure 4.2.4.2-1.\nIf the UCMF cannot successfully fulfil the received HTTP DELETE request due to the internal error or the error in the HTTP DELETE request, the UCMF shall send the HTTP error response as specified in clause 5.7.\nIf the feature \"ES3XX\" is supported, and the UCMF determines the received HTTP DELETE request needs to be redirected, the UCMF shall send an HTTP redirect response as specified in clause 6.10.9 of 3GPP TS 29.500 [4].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "5\tNucmf_Provisioning Service API",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tIntroduction",
                    "description": "",
                    "summary": "",
                    "text_content": "The UE radio capability provisioning service shall use the Nucmf_Provisioning API.\nThe API URI of the Nucmf_Provisioning API shall be:\n{apiRoot}/<apiName>/<apiVersion>\nThe request URIs used in HTTP requests from the NF service consumer towards the NF service producer shall have the Resource URI structure defined in clause 4.4.1 of 3GPP TS 29.501 [5], i.e.:\n{apiRoot}/<apiName>/<apiVersion>/<apiSpecificResourceUriPart>\nwith the following components:\n-\tThe {apiRoot} shall be set as described in 3GPP TS 29.501 [5].\n-\tThe <apiName> shall be \"nucmf-provisioning\".\n-\tThe <apiVersion> shall be \"v1\".\n-\tThe <apiSpecificResourceUriPart> shall be set as described in clause 5.3.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.2\tUsage of HTTP",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.2.1\tGeneral",
                            "text_content": "HTTP/2, IETF RFC 9113 [11], shall be used as specified in clause 5.2 of 3GPP TS 29.500 [4].\nHTTP/2 shall be transported as specified in clause 5.3 of 3GPP TS 29.500 [4].\nThe OpenAPI [6] specification of HTTP messages and content bodies for the Nucmf_Provisioning API is contained in Annex A.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.2\tHTTP standard headers",
                            "text_content": "See clause 5.2.2 of 3GPP TS 29.500 [4] for the usage of HTTP standard headers.\nJSON, IETF RFC 8259 [12], shall be used as content type of the HTTP bodies specified in the present specification as specified in clause 5.4 of 3GPP TS 29.500 [4]. The use of the JSON format shall be signalled by the content type \"application/json\".\nJSON object used in the HTTP PATCH request shall be encoded according to \"JSON Merge Patch\" and shall be signalled by the content type \"application/merge-patch+json\", as defined in IETF RFC 7396 [16].\n\"Problem Details\" JSON object shall be used to indicate additional details of the error in a HTTP response body and shall be signalled by the content type \"application/problem+json\", as defined in IETF RFC 9457 [13].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.3\tHTTP custom headers",
                            "text_content": "The mandatory HTTP custom header fields specified in clause 5.2.3.2 of 3GPP TS 29.500 [4] shall be supported, and the optional HTTP custom header fields specified in clause 5.2.3.3 of 3GPP TS 29.500 [4] may be supported.\nIn this Release of the specification, no specific custom headers are defined for the Nucmf_Provisioning API.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.3\tResources",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.3.1\tOverview",
                            "text_content": "This clause describes the structure for the Resource URIs and the resources and methods used for the service.\nFigure 5.3.1-1 depicts the resource URIs structure for the Nucmf_Provisioning API.\nThe figure depicts the resource URI structure of the Nucmf_Provisioning API, which is used to manage and provision resources in a network. The structure includes a base URI, a resource URI, and a resource URI for the resource itself. The base URI is used to access the API, while the resource URI for the resource is used to specify the specific resource to be provisioned. The resource URI for the resource itself is used to specify the resource's properties, such as its type, size, and location.\nFigure 5.3.1-1: Resource URI structure of the Nucmf_Provisioning API\nTable 5.3.1-1 provides an overview of the resources and applicable HTTP methods.\nTable 5.3.1-1: Resources and methods overview\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.3.1-1: Resources and methods overview",
                                    "table number": 2,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.3.2\tResource: UE radio capability provisionings (Collection)",
                            "text_content": "The UE radio capability provisionings resource represents all the provisionings that exist in the UE radio capability provisioning service at a given UCMF instance.\nResource URI: {apiRoot}/nucmf-provisioning/<apiVersion>/provisionings\nThis resource shall support the resource URI variables defined in table 5.3.2.2-1.\nTable 5.3.2.2-1: Resource URI variables for this resource\n\nThis method shall support the URI query parameters specified in table 5.3.2.3.1-1.\nTable 5.3.2.3.1-1: URI query parameters supported by the POST method on this resource\n\nThis method shall support the request data structures specified in table 5.3.2.3.1-2 and the response data structures and response codes specified in table 5.3.2.3.1-3.\nTable 5.3.2.3.1-2: Data structures supported by the POST Request Body on this resource\n\nTable 5.3.2.3.1-3: Data structures supported by the POST Response Body on this resource\n\nTable 5.3.2.3.1-4: Headers supported by the 201 Response Code on this resource\n\nNone.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.3.2.2-1: Resource URI variables for this resource",
                                    "table number": 3,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.2.3.1-1: URI query parameters supported by the POST method on this resource",
                                    "table number": 4,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.2.3.1-2: Data structures supported by the POST Request Body on this resource",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.2.3.1-3: Data structures supported by the POST Response Body on this resource",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.2.3.1-4: Headers supported by the 201 Response Code on this resource",
                                    "table number": 7,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.3.3\tResource: Individual UE radio capability provisioning (Document)",
                            "text_content": "The Individual UE radio capability provisioning resource represents a single provisioning that exist in the UE radio capability provisioning service at a given UCMF instance.\nResource URI: {apiRoot}/nucmf-provisioning/<apiVersion>/provisionings/{provisioningId}\nThis resource shall support the resource URI variables defined in table 5.3.3.2-1.\nTable 5.3.3.2-1: Resource URI variables for this resource\n\nThis method shall support the URI query parameters specified in table 5.3.3.3.1-1.\nTable 5.3.3.3.1-1: URI query parameters supported by the GET method on this resource\n\nThis method shall support the request data structures specified in table 5.3.3.3.1-2 and the response data structures and response codes specified in table 5.3.3.3.1-3.\nTable 5.3.3.3.1-2: Data structures supported by the GET Request Body on this resource\n\nTable 5.3.3.3.1-3: Data structures supported by the GET Response Body on this resource\n\nTable 5.3.3.3.1-4: Headers supported by the 307 Response Code on this resource\n\nTable 5.3.3.3.1-5: Headers supported by the 308 Response Code on this resource\n\nThis method shall support the URI query parameters specified in table 5.3.3.3.2-1.\nTable 5.3.3.3.2-1: URI query parameters supported by the PUT method on this resource\n\nThis method shall support the request data structures specified in table 5.3.3.3.2-2 and the response data structures and response codes specified in table 5.3.3.3.2-3.\nTable 5.3.3.3.2-2: Data structures supported by the PUT Request Body on this resource\n\nTable 5.3.3.3.2-3: Data structures supported by the PUT Response Body on this resource\n\nTable 5.3.3.3.2-4: Headers supported by the 307 Response Code on this resource\n\nTable 5.3.3.3.2-5: Headers supported by the 308 Response Code on this resource\n\nThis method shall support the URI query parameters specified in table 5.3.3.3.3-1.\nTable 5.3.3.3.2-1: URI query parameters supported by the PATCH method on this resource\n\nThis method shall support the request data structures specified in table 5.3.3.3.3-2 and the response data structures and response codes specified in table 5.3.3.3.3-3.\nTable 5.3.3.3.3-2: Data structures supported by the PATCH Request Body on this resource\n\nTable 5.3.3.3.3-3: Data structures supported by the PATCH Response Body on this resource\n\nTable 5.3.3.3.3-4: Headers supported by the 307 Response Code on this resource\n\nTable 5.3.3.3.3-5: Headers supported by the 308 Response Code on this resource\n\nThis method shall support the URI query parameters specified in table 5.3.3.3.4-1.\nTable 5.3.3.3.4-1: URI query parameters supported by the DELETE method on this resource\n\nThis method shall support the request data structures specified in table 5.3.3.3.4-2 and the response data structures and response codes specified in table 5.3.3.3.4-3.\nTable 5.3.3.3.4-2: Data structures supported by the DELETE Request Body on this resource\n\nTable 5.3.3.3.4-3: Data structures supported by the DELETE Response Body on this resource\n\nTable 5.3.3.3.4-4: Headers supported by the 307 Response Code on this resource\n\nTable 5.3.3.3.4-5: Headers supported by the 308 Response Code on this resource\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.3.3.2-1: Resource URI variables for this resource",
                                    "table number": 8,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.1-1: URI query parameters supported by the GET method on this resource",
                                    "table number": 9,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.1-2: Data structures supported by the GET Request Body on this resource",
                                    "table number": 10,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.1-3: Data structures supported by the GET Response Body on this resource",
                                    "table number": 11,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.1-4: Headers supported by the 307 Response Code on this resource",
                                    "table number": 12,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.1-5: Headers supported by the 308 Response Code on this resource",
                                    "table number": 13,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.2-1: URI query parameters supported by the PUT method on this resource",
                                    "table number": 14,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.2-2: Data structures supported by the PUT Request Body on this resource",
                                    "table number": 15,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.2-3: Data structures supported by the PUT Response Body on this resource",
                                    "table number": 16,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.2-4: Headers supported by the 307 Response Code on this resource",
                                    "table number": 17,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.2-5: Headers supported by the 308 Response Code on this resource",
                                    "table number": 18,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.2-1: URI query parameters supported by the PATCH method on this resource",
                                    "table number": 19,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.3-2: Data structures supported by the PATCH Request Body on this resource",
                                    "table number": 20,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.3-3: Data structures supported by the PATCH Response Body on this resource",
                                    "table number": 21,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.3-4: Headers supported by the 307 Response Code on this resource",
                                    "table number": 22,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.3-5: Headers supported by the 308 Response Code on this resource",
                                    "table number": 23,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.4-1: URI query parameters supported by the DELETE method on this resource",
                                    "table number": 24,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.4-2: Data structures supported by the DELETE Request Body on this resource",
                                    "table number": 25,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.4-3: Data structures supported by the DELETE Response Body on this resource",
                                    "table number": 26,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.4-4: Headers supported by the 307 Response Code on this resource",
                                    "table number": 27,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.3.3.3.4-5: Headers supported by the 308 Response Code on this resource",
                                    "table number": 28,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "5.4\tCustom Operations without associated resources",
                    "description": "",
                    "summary": "",
                    "text_content": "No custom operation is defined in this Release of the specification.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.5\tNotifications",
                    "description": "",
                    "summary": "",
                    "text_content": "Notifications are not applicable for the current Release.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.6\tData Model",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.6.1\tGeneral",
                            "text_content": "This clause specifies the application data model supported by the API.\nTable 5.6-1 specifies the data types defined for the Nucmf_Provisioning service based interface protocol.\nTable 5.6-1: Nucmf_Provisioning specific Data Types\n\nTable 5.6-2 specifies data types re-used by the Nucmf_Provisioning service based interface protocol from other specifications, including a reference to their respective specifications and when needed, a short description of their use within the Nucmf_Provisioning service based interface.\nTable 5.6-2: Nucmf_Provisioning re-used Data Types\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.6-1: Nucmf_Provisioning specific Data Types",
                                    "table number": 29,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.6-2: Nucmf_Provisioning re-used Data Types",
                                    "table number": 30,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.6.2\tStructured data types",
                            "text_content": "This clause defines the structures to be used in resource representations.\nThis type represents a UE radio capability data provided by the NF service consumer to the UCMF.\nTable 5.6.2.2-1: Definition of type RacsData\n\nThis type represents a UE radio capability data provided by the NF service consumer to the UCMF.\nTable 5.6.2.3-1: Definition of type RacsDataPatch\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.6.2.2-1: Definition of type RacsData",
                                    "table number": 31,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.6.2.3-1: Definition of type RacsDataPatch",
                                    "table number": 32,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.6.3\tSimple data types and enumerations",
                            "text_content": "This clause defines simple data types and enumerations that can be referenced from data structures defined in the previous clauses.\nThe simple data types defined in table 5.6.3.2-1 shall be supported.\nTable 5.6.3.2-1: Simple data types\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.6.3.2-1: Simple data types",
                                    "table number": 33,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "5.7\tError Handling",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.7.1\tGeneral",
                            "text_content": "For the Nucmf_Provisioning API, HTTP error responses shall be supported as specified in clause 4.8 of 3GPP TS 29.501 [5]. Protocol errors and application errors specified in table 5.2.7.2-1 of 3GPP TS 29.500 [4] shall be supported for an HTTP method if the corresponding HTTP status codes are specified as mandatory for that HTTP method in table 5.2.7.1-1 of 3GPP TS 29.500 [4].\nIn addition, the requirements in the following clauses are applicable for the Nucmf_Provisioning API.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.7.2\tProtocol Errors",
                            "text_content": "No specific procedures for the Nucmf_Provisioning service are specified.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.7.3\tApplication Errors",
                            "text_content": "The application errors defined for the Nucmf_Provisioning service are listed in table 5.7.3-1.\nTable 5.7.3-1: Application errors\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.7.3-1: Application errors",
                                    "table number": 34,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "5.8\tFeature negotiation",
                    "description": "",
                    "summary": "",
                    "text_content": "The optional features in table 5.8-1 are defined for the Nucmf_Provisioning API. They shall be negotiated using the extensibility mechanism defined in clause 6.6.2 of 3GPP TS 29.500 [4].\nTable 5.8-1: Supported Features\n\n",
                    "tables": [
                        {
                            "description": "Table 5.8-1: Supported Features",
                            "table number": 35,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.9\tSecurity",
                    "description": "",
                    "summary": "",
                    "text_content": "As indicated in 3GPP TS 33.501 [8] and 3GPP TS 29.500 [4], the access to the Nucmf_Provisioning API may be authorized by means of the Oauth2 protocol (see IETF RFC 6749 [9]), based on local configuration, using the \"Client Credentials\" authorization grant, where the NRF (see 3GPP TS 29.510 [10]) plays the role of the authorization server.\nIf Oauth2 is used, an NF service consumer, prior to consuming services offered by the Nucmf_Provisioning API, shall obtain a \"token\" from the authorization server, by invoking the Access Token Request service, as described in 3GPP TS 29.510 [10], clause 5.4.2.2.\nNOTE:\tWhen multiple NRFs are deployed in a network, the NRF used as authorization server is the same NRF that the NF service consumer used for discovering the Nucmf_Provisioning service.\nThe Nucmf_Provisioning API defines a single scope \"nucmf-provisioning\" for the entire service, and it does not define any additional scopes at resource or operation level.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "A.1\tGeneral",
            "description": "This Annex specifies the formal definition of the API(s) defined in the present specification. It consists of OpenAPI 3.0.0 specifications in YAML format.\nThis Annex takes precedence when being discrepant to other parts of the specification with respect to the encoding of information elements and methods within the API(s).\nNOTE:\tThe semantics and procedures, as well as conditions, e.g. for the applicability and allowed combinations of attributes or values, not expressed in the OpenAPI definitions but defined in other parts of the specification also apply.\nInformative copies of the OpenAPI specification files contained in this 3GPP Technical Specification are available on a Git-based repository that uses the GitLab software version control system (see clause 5B of the 3GPP TR 21.900 [7] for further information) and clause 5.3.1 of the 3GPP TS 29.501 [5].\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.2\tNucmf_Provisioning API",
            "description": "openapi: 3.0.0\ninfo:\ntitle: Nucmf_Provisioning\nversion: 1.2.0-alpha.3\ndescription: |\nUCMF_Provisioning Service.\n© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).\nAll rights reserved.\nexternalDocs:\ndescription: >\n3GPP TS 29.675 V18.3.0; User Equipment (UE) radio capability provisioning service; Stage 3.\nurl: https://www.3gpp.org/ftp/Specs/archive/29_series/29.675/\nservers:\n- url: '{apiRoot}/nucmf-provisioning/v1'\nvariables:\napiRoot:\ndefault: https://example.com\ndescription: apiRoot as defined in clause 4.4 of 3GPP TS 29.501\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nucmf-provisioning\npaths:\n/provisionings:\npost:\nsummary: Create an Individual UE radio capability provisioning\noperationId: CreateProvisioning\ntags:\n- UE radio capability provisionings (Collection)\nrequestBody:\ndescription: Create new provisionings for a given SCS/AS.\nrequired: true\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/RacsData'\nresponses:\n'201':\ndescription: >\nCreated. The creation of an Individual UE radio capability provisioning\nresource is confirmed and a representation of that resource is returned.\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/RacsData'\nheaders:\nLocation:\ndescription: Contains the URI of the newly created resource.\nrequired: true\nschema:\ntype: string\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\ndescription: The RACS data for all RACS IDs were not provisioned successfully.\ncontent:\napplication/json:\nschema:\ntype: array\nitems:\n$ref: 'TS29122_RacsParameterProvisioning.yaml#/components/schemas/RacsFailureReport'\nminItems: 1\napplication/problem+json:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n/provisionings/{provisioningId}:\nparameters:\n- name: provisioningId\nin: path\ndescription: Provisioning ID\nrequired: true\nschema:\ntype: string\nget:\nsummary: Get an Individual UE radio capability provisioning\noperationId: GetProvisioning\ntags:\n- Individual UE radio capability provisioning (Document)\nresponses:\n'200':\ndescription: OK. The provisioning information related to the request URI is returned.\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/RacsData'\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'406':\n$ref: 'TS29571_CommonData.yaml#/components/responses/406'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\npatch:\nsummary: Update (PATCH) an Individual UE radio capability provisioning\noperationId: UpdateProvisioning\ntags:\n- Individual UE radio capability provisioning (Document)\nrequestBody:\ndescription: Update an existing parameter provisioning.\nrequired: true\ncontent:\napplication/merge-patch+json:\nschema:\n$ref: '#/components/schemas/RacsDataPatch'\nresponses:\n'200':\ndescription: >\nOK. The Individual UE radio capability provisioning resource is modified\nand a representation of that resource is returned.\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/RacsData'\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\ndescription: The RACS data for all RACS IDs were not provisioned successfully.\ncontent:\napplication/json:\nschema:\ntype: array\nitems:\n$ref: 'TS29122_RacsParameterProvisioning.yaml#/components/schemas/RacsFailureReport'\nminItems: 1\napplication/problem+json:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\nput:\nsummary: Replace (PUT) an Individual UE radio capability provisioning\noperationId: ReplaceProvisioning\ntags:\n- Individual UE radio capability provisioning (Document)\nrequestBody:\ndescription: Update an existing parameter provisioning.\nrequired: true\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/RacsData'\nresponses:\n'200':\ndescription: >\nOK. The Individual UE radio capability provisioning resource is modified and a\nrepresentation of that resource is returned.\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/RacsData'\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\ndescription: The RACS data for all RACS IDs were not provisioned successfully.\ncontent:\napplication/json:\nschema:\ntype: array\nitems:\n$ref: 'TS29122_RacsParameterProvisioning.yaml#/components/schemas/RacsFailureReport'\nminItems: 1\napplication/problem+json:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\ndelete:\nsummary: Remove an Individual UE radio capability provisioning\noperationId: RemoveProvisioning\ntags:\n- Individual UE radio capability provisioning (Document)\nresponses:\n'204':\ndescription: >\nNo Content. The Individual UE radio capability resource was successfully removed.\nThe content shall be empty.\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\ncomponents:\nsecuritySchemes:\noAuth2ClientCredentials:\ntype: oauth2\nflows:\nclientCredentials:\ntokenUrl: '{tokenUrl}'\nscopes:\nnucmf-provisioning: Access to the Nucmf_Provisioning API\nschemas:\nRacsData:\ndescription: Represents a UE radio capability data provided by the NF service consumer.\ntype: object\nproperties:\nsuppFeat:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nracsConfigs:\ntype: object\nadditionalProperties:\n$ref: 'TS29122_RacsParameterProvisioning.yaml#/components/schemas/RacsConfiguration'\nminProperties: 1\ndescription: >\nIdentifies the configuration related to manufacturer specific UE radio capability.\nEach element uniquely identifies an RACS configuration for an RACS ID and is\nidentified in the map via the RACS ID as key. The response shall include\nsuccessfully provisioned RACS data.\nracsReports:\ntype: object\nadditionalProperties:\n$ref: 'TS29122_RacsParameterProvisioning.yaml#/components/schemas/RacsFailureReport'\nminProperties: 1\ndescription: >\nContains the RACS IDs for which the RACS data are not provisioned successfully. The\nfailure reason is also included. Any string value can be used as a key of the map.\nreadOnly: true\nrequired:\n- racsConfigs\nRacsDataPatch:\ndescription: >\nRepresents a modification of a UE radio capability data provided by the NF service\nconsumer.\ntype: object\nproperties:\nracsConfigs:\ntype: object\nadditionalProperties:\n$ref: 'TS29122_RacsParameterProvisioning.yaml#/components/schemas/RacsConfigurationRm'\nminProperties: 1\ndescription: >\nIdentifies the configuration related to manufacturer specific UE radio\ncapability. Each element uniquely identifies an RACS configuration for an RACS ID\nand is identified in the map via the RACS ID as key.\n\n",
            "summary": "",
            "tables": [
                {
                    "description": "",
                    "table number": 36,
                    "summary": "",
                    "name": ""
                }
            ],
            "figures_meta_data": [],
            "subsections": []
        }
    ]
}