{
    "document_name": "29536-i40.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Specification has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\nIn the present document, modal verbs have the following meanings:\nshall\tindicates a mandatory requirement to do something\nshall not\tindicates an interdiction (prohibition) to do something\nThe constructions \"shall\" and \"shall not\" are confined to the context of normative provisions, and do not appear in Technical Reports.\nThe constructions \"must\" and \"must not\" are not used as substitutes for \"shall\" and \"shall not\". Their use is avoided insofar as possible, and they are not used in a normative context except in a direct citation from an external, referenced, non-3GPP document, or so as to maintain continuity of style when extending or modifying the provisions of such a referenced document.\nshould\tindicates a recommendation to do something\nshould not\tindicates a recommendation not to do something\nmay\tindicates permission to do something\nneed not\tindicates permission not to do something\nThe construction \"may not\" is ambiguous and is not used in normative elements. The unambiguous constructions \"might not\" or \"shall not\" are used instead, depending upon the meaning intended.\ncan\tindicates that something is possible\ncannot\tindicates that something is impossible\nThe constructions \"can\" and \"cannot\" are not substitutes for \"may\" and \"need not\".\nwill\tindicates that something is certain or expected to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nwill not\tindicates that something is certain or expected not to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nmight\tindicates a likelihood that something will happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nmight not\tindicates a likelihood that something will not happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nIn addition:\nis\t(or any other verb in the indicative mood) indicates a statement of fact\nis not\t(or any other negative verb in the indicative mood) indicates a statement of fact\nThe constructions \"is\" and \"is not\" do not indicate requirements.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document specifies the stage 3 protocol and data model for the Nnsacf Service Based Interface. It provides stage 3 protocol definitions and message flows, and specifies the API for each service offered by the NSACF.\nThe 5G System stage 2 architecture and procedures are specified in 3GPP TS 23.501 [2] and 3GPP TS 23.502 [3].\nThe Technical Realization of the Service Based Architecture and the Principles and Guidelines for Services Definition are specified in 3GPP TS 29.500 [4] and 3GPP TS 29.501 [5].\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 23.501: \"System Architecture for the 5G System; Stage 2\".\n[3]\t3GPP TS 23.502: \"Procedures for the 5G System; Stage 2\".\n[4]\t3GPP TS 29.500: \"5G System; Technical Realization of Service Based Architecture; Stage 3\".\n[5]\t3GPP TS 29.501: \"5G System; Principles and Guidelines for Services Definition; Stage 3\".\n[6]\tOpenAPI: \"OpenAPI Specification Version 3.0.0\", .\n[7]\t3GPP TR 21.900: \"Technical Specification Group working methods\".\n[8]\t3GPP TS 33.501: \"Security architecture and procedures for 5G system\".\n[9]\tIETF RFC 6749: \"The OAuth 2.0 Authorization Framework\".\n[10]\t3GPP TS 29.510: \"5G System; Network Function Repository Services; Stage 3\".\n[11]\tIETF RFC 9113: \"HTTP/2\".\n[12]\tIETF RFC 8259: \"The JavaScript Object Notation (JSON) Data Interchange Format\".\n[13]\tIETF RFC 9457: \"Problem Details for HTTP APIs\".\n[14]\tIETF RFC 6902: \"JavaScript Object Notation (JSON) Patch\".\n[15]\t3GPP TS 29.518: \"5G System; Access and Mobility Management Service; Stage 3\".\n[16]\t3GPP TS 29.571: \"5G System; Common Data Types for Service Based Interfaces Stage 3\".\n[17]\t3GPP TS 29.510: \"5G System; Network Function Repository Services; Stage 3\".\n[18]\t3GPP TS 23.288: \"Architecture enhancements for 5G System (5GS) to support network data analytics services\".\n\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions, abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tDefinitions",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms and definitions given in 3GPP TR 21.905 [1] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in 3GPP TR 21.905 [1].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in 3GPP TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in 3GPP TR 21.905 [1].\nAF\tApplication Function\n5GC\t5G Core Network\nAMF\tAccess Management Function\nDCCF\tData Collection Coordination Function\nEAC\tEarly Admission Control\nMCX\tMission Critical Service\nMPS\tMultimedia Priority Service\nNEF\tNetwork Exposure Function\nNSAC\tNetwork Slice Admission Control\nNSACF\tNetwork Slice Admission Control Function\nNWDAF\tNetwork Data Analytics Function\nSMF\tSession Management Function\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tOverview",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "4.1\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "Within the 5GC, the NSACF offers services to the AMF, SMF (or combined SMF+PGW-C), NWDAF, NEF, DCCF and NSACF via the Nnsacf service based interface (see 3GPP TS 23.501 [2] and 3GPP TS 23.502 [3]).\nFigures 4.1 provides the reference model (in service based interface representation and in reference point representation), with focus on the NSACF and the scope of the present specification.\nThe figure depicts a reference model for the NSACF (Non-Symmetric Acoustic Coupling Factor) in a 5G network, illustrating the acoustic coupling between different frequency bands. The model includes various components such as the base station (gNB), user equipment (UE), and scatterers, which are essential for understanding the signal propagation in a 5G network. The figure highlights the importance of beamforming techniques to mitigate interference and ensure reliable communication.\nFigure 4-1: Reference model – NSACF\nThe functionalities supported by the NSACF are listed in clause 6.2.28 of 3GPP TS 23.501 [2].\nThe services and service operations provided by the Nnsacf interface are listed in clause 5.2.21 of 3GPP TS 23.502 [3].\nWhen the UE connects to EPS and EPS counting is required, it is the combined SMF+PGW-C invokes NSACF services to perform network slice admission control, during PDN connection establishment procedure and PDN connection release procedure, as specified in clause 5.15.11.5 of 3GPP TS 23.501 [2].\nNOTE:\tA trusted AF can access NSACF services either via NEF to NSACF or directly to NSACF. An untrusted AF shall only be allowed to access NSACF services via NEF. If multiple NSACFs are deployed in the network and the trusted AF is interested in the aggregated report, then the trusted AF collects the report from NEF, instead of contacting multiple NSACFs directly.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.1A\tNSAC Architecture Options",
                    "description": "",
                    "summary": "",
                    "text_content": "If the network is configured with a single NSAC service area, there is a single NSACF deployed to handle the admissions for an S-NSSAI.\nIf the network is configured with multiple NSAC service areas, one of the three NSAC architecture options, i.e. non-hierarchical NSAC architecture, centralized NSAC architecture and hierarchical NSAC architecture (as specified in clause 5.15.11.0 of 3GPP TS 23.501 [2]), may be selected to handle the admissions for an S-NSSAI based on operator’s policy.\nIn different NSAC architectures, there are different roles of NSACFs as:\n-\tindependent NSACFs are deployed in each NSAC service area in non-hierarchical NSAC architecture;\n-\ta single centralized NSACF is deployed in the whole network in centralized NSAC architecture; and\n-\ta primary NSACF and several distributed NSACFs are deployed in hierarchical NSAC architecture.\nFor the hierarchical NSAC architecture, the NSACF role (i.e. primary NSACF or distributed NSACF) is configured in the NSACF per S-NSSAI (e.g. a NSACF may act as primary NSACF for a first S-NSSAI and as a distributed NSACF for a second S-NSSAI). For the same S-NSSAI, the role of primary and distributed NSACFs can be co-located at the same NSACF instance. A NSACF acting as a Primary NSACF for a given S-NSSAI handles overall NSAC for the S-NSSAI at the global level (i.e. it is ultimately responsible for the NSAC for an S-NSSAI). See clause 5.15.11 of 3GPP TS 23.501 [2].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.2\tNSAC support in roaming",
                    "description": "",
                    "summary": "",
                    "text_content": "In the roaming scenario, depending on operator's policy and roaming agreement, a specific NSAC admission mode (i.e. VPLMN NSAC admission, VPLMN with HPLMN assistance admission or HPLMN NSAC admission) is determined for the NSAC procedure for roaming UEs (see clause 5.15.11.3 of 3GPP TS 23.501 [2]).\nFor roaming UEs with LBO PDU session:\n-\tif VPLMN NSAC admission (with or without HPLMN assistance) is determined, the vNSACF offers service to the NF in the VPLMN (e.g. AMF and SMF in VPLMN);\n-\tif HPLMN NSAC admission is determined, the hNSACF offers service to the NF in the VPLMN (e.g. AMF and SMF in VPLMN). The AMF and SMF in VPLMN interact with hNSACF to perform NSAC procedure.\nFor roaming UEs with HR PDU session:\n-\tthe hNSACF offers service to the SMF in the HPLMN;\n-\tif HPLMN NSAC admission is determined, the hNSACF offers service to the AMF in the VPLMN. Otherwise, the vNSACF offers services to the AMF in the VPLMN.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.3\tInteraction between NSACFs",
                    "description": "",
                    "summary": "",
                    "text_content": "NSACF interactions may exist in the following cases:\n-\tfor roaming case, if VPLMN with HPLMN assistance NSAC admission mode is determined, the NSACF in VPLMN may interact with the NSACF in HPLMN to fetch the quota for number of UEs or number of PDU sessions, and the NSACF in HPLMN may interact with the NSACF in VPLMN to provide the updated number of UEs or number of PDU sessions;\n-\tfor roaming case, if VPLMN NSAC admission mode is determined, the NSACF in VPLMN may interact with the NSACF in HPLMN to fetch the maximum number of registered UEs to be enforced and the maximum number of LBO PDU sessions to be enforced;\n-\tin hierarchical NSAC architecture, a distributed NSACF may interact with the primary NSACF to fetch the quota for number of UEs or number of PDU sessions, and the primary NSACF may interact with the distributed NSACF to provide the updated number of UEs or number of PDU sessions, as specified in clause 5.15.11 of 3GPP TS 23.501 [2].\n\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "5\tServices offered by the NSACF",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tIntroduction",
                    "description": "",
                    "summary": "",
                    "text_content": "The NSACF supports the following services.\nTable 5.1-1: NF Services provided by NSACF\n\nTable 5.1-2 summarizes the corresponding APIs defined for this specification.\nTable 5.1-2: API Descriptions\n\n",
                    "tables": [
                        {
                            "description": "Table 5.1-1: NF Services provided by NSACF",
                            "table number": 3,
                            "summary": "",
                            "name": ""
                        },
                        {
                            "description": "Table 5.1-2: API Descriptions",
                            "table number": 4,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.2\tNnsacf_NSAC Service",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.2.1\tService Description",
                            "text_content": "The Nnsacf_NSAC service provides the service capability for the NF Service Consumer (e.g. AMF, SMF or primary NSACF) to request admission control for UEs accessing a specific network slice, or for PDU sessions to be established to a specific network slice. The following are the key functionalities of this NF service:\n-\tRequest the NSACF to control the number of UEs registered to a specific network slice, e.g. perform availability check and update the number of UEs registered to a specific network slice;\n-\tRequest the NSACF to control the number of PDU session established to a specific network slice, e.g. perform availability check and update the number of PDU sessions established to a specific network slice;\n-\tRequest the NSACF to control the number of UEs with at least one PDU session/PDN Connection established on a network slice if EPS counting is required;\n-\tNotify the NF Service Consumer (e.g. AMF) of the activation/deactivation of EAC (Early Admission Control) mode for NSAC procedure;\n-\tRequest the NSACF to configure or update the local maximum number of registered UEs and/or number of PDU sessions of the network slice at a distributed NSACF, in hierarchical NSAC architecture.\n-\tRequest the NSACF in HPLMN to provide slice roaming quotas (i.e. the maximum number of UEs / PDU session in NSACF in VPLMN), in roaming scenario.\nThe Nnsacf_NSAC service supports the following service operations.\nTable 5.2.1-1: Service operations supported by the Nnsacf_NSAC service\n\nWhen the UE connects to EPS and EPS counting is required for the S-NSSAI subjected to NSAC, only one of the configurations shall be applied as specified in clause 5.15.11.5 of 3GPP TS 23.501 [2]:\n-\tMaximum number of registered UEs and/or maximum number of PDU session. In that case the combined SMF+PGW-C shall invoke the NumOfUEsUpdate and NumOfPDUsUpdate service operations in sequence. If the NumOfUEsUpdate returns failure, the combined SMF+PGW-C shall not continue invoking the NumOfPDUsUpdate. If the NumOfPDUsUpate returns failure then the combined SMF+PGW-C shall invoke the NumOfUEUpdate to decrease the UE count. Or,\n-\tMaximum number of UEs with at least one PDU session/PDN Connection and/or maximum number of PDU session. In that case the combined SMF+PGW-C shall be configured with option 1 and shall invoke the NumOfUEsUpdate service operation or with option 2 and shall invoke NumOfPDUsUpdate service operation to NSACF to perform admission control for the number of UEs with at least one PDU session/PDN connection and/or maximum number of PDU session as specified in clause 5.15.11.5a of 3GPP TS 23.501 [2].\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.2.1-1: Service operations supported by the Nnsacf_NSAC service",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.2.2\tService Operations",
                            "text_content": "This clause introduces the related procedures using Nnsacf_NSAC service operations to request the NSACF to control the number of UEs registered to a specific network slice.\nThe NumOfUEsUpdate service operation shall be used by the NF Service Consumer (e.g. AMF, combined SMF+PGW-C, or NSACF) to request the NSACF to control the number of UEs registered to a specific network slice, e.g. perform availability check and update the number of UEs registered to a network slice. It is used in the following procedures:\n-\tAMF initiated network slice admission control procedure related to control the number of UEs registered to a network slice (see clause 4.2.11.2 of 3GPP TS 23.502 [3]).\n-\tAMF initiated network slice admission control procedure related to control the number of roaming UEs registered to a network slice (see clauses 4.2.11.5.1 and 4.2.11.5.2.3 of 3GPP TS 23.502 [3]).\n-\tCombined SMF+PGW-C initiated network slice admission control procedure related to control the number of UEs registered to a network slice, in the case of EPS interworking (see clause 5.15.11.5 of 3GPP TS 23.501 [2]).\n-\tCombined SMF+PGW-C initiated network slice admission control procedure related to control the number of UEs with at least one PDU session/PDN connection (see clause 5.15.11.5a of 3GPP TS 23.501 [2]).\n-\tHierarchical NSACF-based network slice admission control procedure related to control the number of UEs registered to a network slice (see clause 4.2.11.2a of 3GPP TS 23.502 [3]).\nThe operation may also be used to update the number of existing registered UEs in the NSACF when NSAC is enabled or disabled for a slice which is already live in the network.\nThe NF Service Consumer (e.g. AMF, combined SMF+PGW-C) shall invoke the NumOfUEsUpdate service operation to request the NSACF to perform network slice admission control procedure related to the number of UEs, by using the HTTP POST method as shown in Figure 5.2.2.2.2-1.\nThe figure depicts a simplified schematic of the NSAC procedure for controlling the number of UEs in a 5G network. It illustrates the steps involved in managing the network's capacity, including the allocation of resources to different types of users (e.g., mobile, fixed, and IoT). The figure also highlights the use of a priority queue to prioritize the allocation of resources, ensuring that the most critical users are prioritized. The NSAC procedure is an essential component of 5G network management, ensuring that the network operates efficiently and effectively.\nFigure 5.2.2.2.2-1: NSAC procedure for controlling the number of UEs\n1.\tThe NF Service Consumer (e.g. AMF, combined SMF+PGW-C) shall send a POST request to the resource representing the network slice admission control related to the number of UEs (i.e. …/slices/ues) in the NSACF.\nThe content of the POST request shall contain the input data structure (i.e. UeACRequestData) for network slice admission control, which shall contain the following information:\n-\tthe SUPI(s) of the UE(s);\n-\tthe access type, over which the UE registers to the network or deregisters from the network;\n-\ta list of S-NSSAIs which are subject to NSAC, and for each S-NSSAI an update flag indicates the operation to that S-NSSAI;\n-\tthe NF Instance ID, identifying the requester NF.\n-\tthe NSAC Service Area of the NF consumer, if it is configured in the NF consumer.\n-\tthe NSAC admission mode of each S-NSSAI for inbound roamer, i.e. VPLMN NSAC admission mode or VPLMN with HPLMN assistance NSAC admission mode;\n-\tthe serving PLMN ID of the inbound roamer.\nIn addition, the POST request may also contain:\n-\tthe EAC notification callback URI. The AMF may provide the EAC notification callback URI at the first interaction with the NSACF, or may provide an updated one in later interactions when it changes. If the EAC notification callback URI is set to null value by the AMF in later interactions, it means the AMF unsubscribes the EAC notification from the NSACF;\n-\tthe additional access type, if the UE deregisters from the network over both 3GPP access and Non-3GPP access.\nThe update flag shall be set to \"INCREASE\" for a UE to be registered to a specific slice, and shall be set to \"DECREASE\" for a UE to be deregistered from a specific slice.\nFor NSAC of roaming UEs with VPLMN NSAC admission with or without HPLMN assistance, the NF Service Consumer (e.g. AMF) shall provide the S-NSSAI in serving PLMN, and the corresponding mapped S-NSSAI in home PLMN to the NSACF in serving PLMN. For NSAC of roaming UEs with HPLMN NSAC admission, the NF Service Consumer (e.g. AMF) shall provide the S-NSSAI in home PLMN to the NSACF in home PLMN (corresponding to the S-NSSAI in the VPLMN).\nNOTE 1:\tWhen multiple S-NSSAIs are supported by a NSACF and multiple S-NSSAIs are required for NSAC for a given UE where EAC mode is active for at least one S-NSSAI, how the AMF triggers NSAC procedure to this NSACF is implementation specific, e.g. the AMF triggers NSAC procedure for all these supported S-NSSAIs before the Registration Accept message or the UE Configuration Update message.\n2a.\tFor each S-NSSAI included in UeACRequestData, the NSACF shall perform the following actions:\n-\tif the update flag is set to \"INCREASE\", the NSACF shall check whether the UE is already in the UE registration list stored in the NSACF and whether the total number of UEs to this slice will exceed the maximum number of UEs allowed to be registered to this slice:\n-\tif the UE ID is already recorded in the UE registration list but the requester NF is not recorded in the UE registration list, the NSACF shall create a new entry for the UE registration associated with the requester NF and shall also maintain the existing UE registration entries. The total number of UEs registered to this slice is not updated;\n-\tif the UE ID is not recorded in the UE registration list and the total number of UEs (including the UEs indicated in the request and the UEs already stored in the NSACF) does not exceed the maximum number of UEs allowed to be registered to this slice, the NSACF records the indicated UEs to the UE registration list stored in the NSACF, and updates the total number of UEs registered to this slice accordingly;\n-\tif the UE ID is not recorded in the UE registration list and if the total number of UEs will exceed the maximum number of UEs allowed to be registered to this slice, the NSACF shall not record the UE into the UE registration list stored in the NSACF, and shall not update the total number of UEs. Instead, the NSACF shall record this S-NSSAI in the failed list of S-NSSAI in the response message, together with an appropriate value of AcuFailureReason (e.g. \"EXCEED_MAX_UE_NUM\" as specified in clause 6.1.6.3.5);\n-\tif the update flag is set to \"DECREASE\" and if the UE is recorded in the UE registration list, the NSACF shall remove the indicated UEs from the UE registration list stored in the NSACF. If there are two or more UE registration entries associated with the UE ID, the NSACF shall only remove the entry associated with the requester NF. After removal, if a UE is no longer recorded in the UE registration list, the NSACF shall decrease the total number of UEs registered to this slice.\n-\tIf the update flag is set to \"DECREASE\" and if the UE is not recorded in the UE registration list, the NSACF shall not decrease the total number of UEs registered to this slice and shall return successful handling for this UE registration.\nThe NSACF may be configured to perform per access type network slice admission control. In this case, the NSACF shall check whether the access type provided by the NF Service Consumer is configured for NSAC for the indicated S-NSSAI to control the number of UEs. If the access type is not configured for NSAC for the indicated S-NSSAI, the NSACF shall skip the above handling for increasing/decreasing the number of UEs and return successful for this S-NSSAI. If the access type is configured for NSAC for the indicated S-NSSAI, the NSACF shall perform the above handling taking the access type into account and record/remove the UE registration associated with the access type. If the total number of UEs will exceed the maximum number of UEs allowed to be registered to this slice, the NSACF shall record this S-NSSAI in the failed list of S-NSSAI in the response message, together with an appropriate value of AcuFailureReason (e.g. \"EXCEED_MAX_UE_NUM\" as specified in clause 6.1.6.3.5).\nIf the NSACF is not configured to perform per access type network slice admission control, the NSACF may perform network slice admission control without taking access type into account. For example, the NSACF is configured with a total quota for the PLMN, but the network slice admission control is not specific to one access type. The NSACF shall record the access type(s) associated with the UE registration. The NSACF shall remove the corresponding UE registration entry when the UE deregisters from all access types.\nNOTE 2:\tFor each S-NSSAI that is applicable for NSAC, the NSACF is configured with a total quota for the PLMN. However, the network slice admission control may be configured to apply for one specific access type or both access types.\nIf in above NSACF handling not all S-NSSAIs are successful, \"200 OK\" shall be returned, with necessary response data indicating the failed S-NSSAI and the failure reason, e.g. \"EXCEED_MAX_UE_NUM\".\nIf in above NSACF handling all S-NSSAIs are successful, \"204 No Content\" shall be returned which could represent the maximum number of UEs for the S-NSSAI not reached.\nIf the NSACF is configured with multiple NSAC Service Areas is configured to perform NSAC admission on a per NSAC service area granularity, the NSACF shall perform the NSAC admission against the received NSAC service area in the request.\nNOTE 3:\tIf the PLMN has multiple NSAC service areas and there are multiple NSACFs deployed for the network slice, each NSACF may be configured with the maximum number of UEs of the network slice within its service area, e.g. as per operator policy. If hierarchical NSAC architecture is deployed, how to synchronize the threshold among the primary NSACF and distributed NSACFs is specified in clause 5.2.2.2.3 and clause 5.2.2.5.2. Otherwise, how to split or synchronize the threshold in multiple NSACFs is left to implementation, and how to guarantee session continuity when a UE moves to new NSAC service area with a different NSACF is also left to implementation.\nNOTE 4:\tIf the NF Service Consumer is AMF, the NSACF may subscribe to AMF Status Change Notifications (e.g. AMF unavailability) via the NRF and update the NF ID accordingly, as described in clause 4.2.11.2 of 3GPP TS 23.502 [3].\nWhen the NF Service Consumer subscribes to the EAC Notification for the first time, the NSACF shall immediately send an EAC notification (see clause 5.2.2.3.2) towards the NF consumer including the most recent EAC Modes for the subscribed S-NSSAIs.\n2b.\tOn failure, the appropriate HTTP status code (e.g. \"403 Forbidden\") indicating the error shall be returned.\nA ProblemDetails IE shall be included in the content of POST response, with the \"cause\" attribute of ProblemDetails set to application error codes specified in table 6.1.3.2.3.1-1.\nNOTE 5:\tIf the NF Service Consumer provided the EAC notification callback URI, the NSACF can handle the EAC notification implicit subscription independently of the result of the UE NSAC activities, i.e. even the NSAC actions for all the S-NSSAIs are failed for the UE(s) and negative response is sent to the AMF, the NSACF can still store the EAC notification subscription and send EAC notification(s) to the AMF.\n2c.\tOn redirection, \"307 Temporary Redirect\" or \"308 Permanent Redirect\" shall be returned. A RedirectResponse IE shall be included in the content of POST response.\nWhen the procedure is used to perform admission control for a number of UEs, when e.g. NSAC is enabled or disabled for an already live slice, then based on operator policy AMF may allow or disallow sessions for which NSACF returned a reject.\nWhen the hierarchical NSACF architecture is deployed in the network, the NF Service Consumer (e.g. AMF, combined SMF+PGW-C) shall invoke the NumOfUEsUpdate service operation to request the NSACF to perform network slice admission control procedure based on UE admission quota or UE admission threshold to control the number of UEs. In this procedure, the NSACF may delegate the request to the primary NSACF for further processing in specific cases.\nThe figure depicts a hierarchical NSACF (Network Slicing and Aggregation Control) architecture, illustrating the steps involved in controlling the number of UEs in a network. The figure includes a diagram of the network slicing and aggregation control process, with key components such as the network slicing controller (NSAC), the network slicing policy (NSAP), and the network slicing policy manager (NSPM). The figure also includes a flowchart to illustrate the process, with arrows indicating the flow of data and control between the different components. The NSAC procedure is shown in detail, with steps such as selecting the number of UEs, configuring the NSAP, and managing the NSPM. The figure provides a clear and concise representation of the NSACF architecture, making it easy to understand and follow.\nFigure 5.2.2.2.3-1: NSAC procedure for controlling the number of UEs in hierarchical NSACF architecture\n1.\tSame as step 1 of Figure 5.2.2.2.2-1, with the following modifications.\nThe POST request may contain:\n-\tthe UE already registered indication, if the UE has been registered with the associated S-NSSAI  in another NSAC service area before.\nNOTE:\tDuring inter-AMF mobility or EPS to 5GS mobility, the target AMF determines the UE already registered indication based on the allowed NSSAI information received from the source AMF or the combined SMF+PGW-C, as specified in clause 5.15.11.1.2 of 3GPP TS 23.501 [2].\n2a.\tFor each S-NSSAI included in UeACRequestData, the NSACF shall perform the actions to control the number of UEs.\n-\tif the update flag is set to \"INCREASE\" or \"DECREASE\", the NSACF shall behave as described in clause 5.15.11.1.2 of 3GPP TS 23.501 [2] and clause 4.2.11.2a of 3GPP TS 23.502 [3].\n2b and 2c.\tSame as step 2b and 2c of Figure 5.2.2.2.2-1.\n3.\tIf the NSAC processing involves the primary NSACF based on the mechanism defined in clause 4.2.11.2a of 3GPP TS 23.502 [3], the NF Service Consumer (e.g. NSACF) shall send a POST request to the resource representing the network slice admission control related to the number of UEs (i.e. …/slices/ues) in the primary NSACF. If the primary NSACF is not discovered, the NSACF shall discover the primary NSACF according to clause 6.3.22 of 3GPP TS 23.501 [2].\nThe content of the POST request shall contain the input data structure (i.e. UeACRequestData) for network slice admission control, which shall contain the information received in step 1. The UE already registered indication may be included if it is received in step 1 and the UE admission type is quota-based.\n4a.\tFor each S-NSSAI included in UeACRequestData, the primary NSACF shall check the global maximum number of UEs and determines whether to accept or reject the request to update the local maximum number of UEs  and/or the UE admission threshold configurations of NSACF.\n-\tif the update flag is set to \"INCREASE\" or \"DECREASE\", the primary NSACF shall behave as described in clause 5.15.11.1.2 of 3GPP TS 23.501 [2] and clause 4.2.11.2a of 3GPP TS 23.502 [3].If in above primary NSACF handling not all S-NSSAIs are successful, \"200 OK\" shall be returned, with necessary response data indicating the failed S-NSSAI and the failure reason, e.g. \"EXCEED_MAX_UE_NUM\".\nIf in above primary NSACF handling all S-NSSAIs are successful, \"204 No Content\" shall be returned which could represent the maximum number of UEs for the S-NSSAI not reached.\n4b.\tOn failure, the appropriate HTTP status code (e.g. \"403 Forbidden\") indicating the error shall be returned.\nA ProblemDetails IE shall be included in the content of POST response, with the \"cause\" attribute of ProblemDetails set to application error codes specified in table 6.1.3.2.3.1-3.\n4c.\tOn redirection, \"307 Temporary Redirect\" or \"308 Permanent Redirect\" shall be returned. A RedirectResponse IE shall be included in the content of POST response.\n5a.\tIf the response message includes the updated local maximum number of UEs and/or the updated UE admission threshold, the NSACF shall replaces the local maximum number of UEs and/or the local UE admission threshold with the received updated values respectively. The NSACF shall execute the same action as step 2a of Figure 5.2.2.2.2-1 based on the updated values;\nIf the response does not include the updated local maximum number of UEs and/or the updated UE admission threshold, the NSACF shall returns the response to NF service consumer based on the received NSAC response from Primary NSACF.\n5b and 5c.\tSame as step 2b and 2c of Figure 5.2.2.2.2-1.\nThe NumOfUEsUpdate service operation may be invoked to control the number of UEs with at least one PDU session/PDN connection, by a combined SMF+PGW-C under the following conditions:\n-\tEPS interworking is supported;\n-\tEPS counting is required for the network slice identified by an S-NSSAI;\n-\tthe network (i.e., combined SMF+PGW-C, NSACF) is configured to perform NSAC for the number of UEs with at least one PDU session/PDN Connection.\nThe combined SMF+PGW-C shall only invoke the NumOfUEsUpdate in the following cases:\n-\twhen the UE establishes the first PDU session/PDN connection associated with the network slice in the combined SMF+PGW-C;\n-\twhen the last PDU session/PDN connection associated with the network slice is released.\nThe procedure specified in clause 5.2.2.2.2 is applied, with the following difference:\n- Step 2a:\n-\tfor each S-NSSAI, the NSACF checks if the S-NSSAI is subject to counting the number of UEs with at least one PDU session/PDN connection. If no, the NSACF shall perform the existing NSAC handling as per clause 5.2.2.2.2. Otherwise, the NSACF shall perform the following steps:\n-\tif the update flag is set to \"INCREASE\"/\"DECREASE\", perform \"INCREASE\"/\"DECREASE\" operation similarly as clause 5.2.2.2.2, by replacing the number of UEs to the number of UEs with at least one PDU session/PDN connection.\n-\tif the update flag is set to \"INCREASE\" and the counted UE number exceeds the configured maximum number of UEs with at least one PDU session/PDN connection, the NSACF shall record this S-NSSAI in the failed list of S-NSSAI in the response message, together with an appropriate value of AcuFailureReason (e.g. \"EXCEED_MAX_UE_NUM \" as specified in clause 6.1.6.3.5).\n-\tif the update flag is set to \"UPDATE\", behave as described in clause 4.11.5.9a of 3GPP TS 23.502 [3].\n-\tFor the hierarchical NSAC architecture, the NSACF shall behave as specified in clause 5.2.2.2.3.\n-\tIf the local maximum number or local threshold is reached, the NSACF may interact with the Primary NSACF before it returns the response back to the SMF+PGW-C. For more details on handling between the NSACF and Primary NSACF see clause 4.2.11.2a of 3GPP TS 23.502 [3].\nThe EAC mode shall not be applicable for the NSAC for controlling the number of UEs with at least one PDU session/PDN connection option 1 and option 2.\nFor controlling of maximum number of UEs in roaming case, the NF Service Consumer (e.g. AMF, vNSACF in Hierarchical NSAC architecture) shall invoke the NumOfUEsUpdate service operation to request the NSACF in Serving PLMN (e.g. Central or Primary NSACF in VPLMN) to perform network slice admission control procedure based on UE admission quota or UE admission threshold to control the number of UEs. In this procedure, the NSACF in Serving PLMN shall delegate the request to the NSACF in HPLMN for further processing in specific cases.\nThe figure depicts a delegated NSAC procedure for controlling the number of UEs in a 5G network. It illustrates the steps involved in assigning a specific number of UEs to each base station (gNB) and user equipment (UE) to ensure efficient resource allocation and network performance. The figure also highlights the importance of network slicing and network slicing controller (NSAC) in managing the number of UEs and ensuring network stability.\nFigure 5.2.2.2.5-1: HPLMN Delegated NSAC procedure for controlling the number of UEs\n1.\tSame as step 1 of Figure 5.2.2.2.2-1, with the value of NSAC admission mode set to VPLMN with HPLMN assistance NSAC admission mode.\n2a.\tFor each S-NSSAI included in UeACRequestData, the NSACF in serving PLMN shall perform the actions to control the number of UEs.\n-\tif centralized NSAC architecture is deployed in the VPLMN, same as step 2a of Figure 5.2.2.2.2-1; or\n-\tif Hierarchical NSAC architecture is deployed in the VPLMN, same as step 4a of Figure 5.2.2.2.3-1.\n2b and 2c.\tSame as step 2b and 2c of Figure 5.2.2.2.2-1.\n3.\tIf there is no allocated maximum number of UEs from HPLMN or the allocated maximum number of registered UEs has been reached, the NSACF in serving PLMN shall send a POST request to the resource representing the network slice admission control related to the number of UEs (i.e. …/slices/ues) in the NSACF in HPLMN.\nThe content of the POST request shall contain the input data structure (i.e. UeACRequestData) for network slice admission control, which shall contain the information received in step 1.\n4a.\tFor each S-NSSAI included in UeACRequestData, the NSACF in HPLMN shall check the global maximum number of UEs and determines whether to accept or reject the request to update the local maximum number of UEs and/or the UE admission threshold configurations of NSACF in serving PLMN.\nThe NSACF in HPLMN shall send allocated maximum number or admission threshold of registered UEs for the mapped S-NSSAI in HPLMN for inbound roamers as described in clause 4.2.11.5.2.3 of 3GPP TS 23.502 [3]. If in above NSACF in HPLMN handling not all S-NSSAIs are successful, \"200 OK\" shall be returned, with necessary response data indicating the failed S-NSSAI and the failure reason, e.g. \"EXCEED_MAX_UE_NUM\".\n4b.\tOn failure, the appropriate HTTP status code (e.g. \"403 Forbidden\") indicating the error shall be returned.\nA ProblemDetails IE shall be included in the content of POST response, with the \"cause\" attribute of ProblemDetails set to application error codes specified in table 6.1.3.2.3.1-3.\n4c.\tOn redirection, \"307 Temporary Redirect\" or \"308 Permanent Redirect\" shall be returned. A RedirectResponse IE shall be included in the content of POST response.\n5a.\tIf the response message includes the allocated maximum number of UEs and/or UE admission threshold for the mapped S-NSSAI in HPLMN for inbound roamers, the NSACF in serving PLMN shall replaces the local maximum number of UEs and/or the local UE admission threshold with the received updated values respectively. The NSACF in serving PLMN shall execute the same action as step 2a of this procedure based on the updated values;\nIf the response does not include the allocated maximum number of UEs and/or UE admission threshold, the NSACF in serving PLMN shall return the response to NF service consumer based on the received NSAC response from NSACF in HPLMN.\n5b and 5c.\tSame as step 2b and 2c of Figure 5.2.2.2.2-1.\nThe EACNotify service operation shall be used by the NSACF to inform the NF Service Consumer (e.g. AMF) of the activation/deactivation of EAC mode. It is used in the following procedures:\n-\tNSACF initiated configuration on EAC mode procedure (see clause 4.2.11.3 of 3GPP TS 23.502 [3]).\nThe EACNotify service operation shall be used by the NSACF to configure the EAC mode(s) for S-NSSAI(s) to the NF Service Consumer (e.g. AMF). The EACNotify service operation shall be triggered when the NSACF decides to set the EAC mode for an S-NSSAI to \"ACTIVE\" if the number of UEs registered to an S-NSSAI is above certain threshold, or set the EAC mode for an S-NSSAI to \"DEACTIVE\" if the number of UEs registered to an S-NSSAI is below certain threshold. The activation threshold and the deactivation threshold may be same or different.\nIf NF Service Consumer has implicitly subscribed to receive EAC notification, the NSACF shall notify the NF Service Consumer (e.g. AMF) to configure the EAC mode by using the HTTP POST method as shown in Figure 5.2.2.2.3-1.\nThe figure depicts a step-by-step procedure for initiating the Enhanced Access Control (EAC) mode in a network security control (NSACF) system. The NSACF is a key component in network security, responsible for managing access to network resources. The figure illustrates the various steps involved in configuring the EAC mode, including selecting the appropriate access control list (ACL), configuring the EAC mode, and setting up the necessary security policies. The figure provides a clear and concise visual representation of the complex process, making it easier for network administrators to understand and implement the EAC mode in their NSACF system.\nFigure 5.2.2.3.2-1: NSACF initiated EAC mode configuration procedure\n1.\tThe NSACF shall send a POST request to the EAC Notification callback URI provided by the NF Service Consumer (e.g. AMF).\nThe content of the POST request shall contain the notification content (i.e. EACNotification), which shall contain the following information:\n-\tS-NSSAI(s);\n-\tthe EAC mode for each S-NSSAI.\nThe callback URI may be provided by the AMF in the first interaction with the NSACF, or in later interactions when the callback URI is changed.\n2a.\tOn success, \"204 No Content\" shall be returned and the content of the POST response shall be empty.\n2b.\tOn failure, one of the HTTP status code listed in Table 6.1.5.2.3.1-2 shall be returned. For a 4xx/5xx response, the message body shall contain a ProblemDetails structure with the \"cause\" attribute set to one of the application error listed in Table 6.1.7.3-1.\n2c.\tOn redirection, \"307 Temporary Redirect\" or \"308 Permanent Redirect\" shall be returned. A RedirectResponse IE shall be included in the content of POST response.\nThe NSACF may try several times to send EAC notification to the AMF, if no response is received from the AMF e.g. AMF is out of service. If the subsequent try still fails, the NSACF should stop sending EAC notification, unless the AMF becomes available.\nThe NumOfPDUsUpdate service operation shall be used by the NF Service Consumer (e.g. SMF or NSACF) to request the NSACF to control the number of PDU sessions registered to a specific slice, e.g. perform availability check and update the number of PDU sessions registered to a slice. It is used in the following procedures:\n-\tSMF initiated network slice admission control procedure for controlling the number of PDU sessions registered to a network slice (see clause 4.2.11.4 of 3GPP TS 23.502 [3]).\n-\tSMF initiated network slice admission control procedure for controlling the number of LBO PDU sessions registered to a network slice (see clauses 4.2.11.5.1 and 4.2.11.5.2.4 of 3GPP TS 23.502 [3]).\n-\tCombined SMF+PGW-C initiated network slice admission control procedure for controlling the number of PDU sessions registered to a network slice, in the case of EPS interworking (see clause 5.15.11.5 of 3GPP TS 23.501 [2], and clause 4.2.11.4 of 3GPP TS 23.502 [3]).\n-\tCombined SMF+PGW-C initiated network slice admission control procedure related to control the number of UEs with at least one PDU session/PDN connection (see clause 5.15.11.5a of 3GPP TS 23.501 [2]).\n-\tHierarchical NSAC-based network slice admission control procedure for controlling the number of PDU sessions registered to a network slice (see clause 4.2.11.4a of 3GPP TS 23.502 [3]).\nThe operation may also be used to update the number of existing PDU Sessions in the NSACF when NSAC is enabled or disabled for a slice which is already live in the network.\nThe NF Service Consumer (e.g. SMF, combined SMF+PGW-C) shall invoke the NumOfPDUsUpdate service operation to request the NSACF to perform network slice admission control procedure related to the number of PDU sessions, by using the HTTP POST method as shown in Figure 5.2.2.4.2-1.\nThe figure depicts a simplified schematic of the NSAC (Network Service Access Control) procedure, which is used to control the number of PDU (Physical Data Unit) sessions in a network. The figure shows the various components involved in the NSAC process, including the PDU, the network service, and the access control system. The figure is a visual representation of the complex process, making it easier to understand and interpret.\nFigure 5.2.2.4.2-1: NSAC procedure for controlling the number of PDU sessions\n1.\tThe NF Service Consumer (e.g. SMF) shall send a POST request to the resource representing the network slice admission control related to the number of PDU sessions (i.e. …/slices/pdus) in the NSACF.\nThe content of the POST request shall contain the input data structure (i.e. PduACRequestData) for network slice admission control, which shall contain the following information:\n-\tthe SUPI of the UE;\n-\tthe access type, over which the PDU session is to be established or released;\n-\tthe PDU session ID(s);\n-\ta list of S-NSSAIs which are subject to NSAC, and for each S-NSSAI an update flag indicates the operation to that S-NSSAI.\n-\tthe NSAC Service Area of the NF consumer, if it is configured in the NF consumer.\n-\tthe NSAC admission mode of each S-NSSAI for inbound roamer, i.e. VPLMN NSAC admission mode or VPLMN with HPLMN assistance NSAC admission mode;\n-\tthe serving PLMN ID of the inbound roamer.\nIn addition, the POST request may also contain:\n-\tthe NF Instance ID of the requester NF (i.e. SMF);\n-\tthe PGW-C FQDN, if the request is sent by a combined SMF+PGW-C in EPS interworking case.\n-\tthe additional access type, for an Multi-Access PDU session, if the PDU session is to be established over both 3GPP access and Non-3GPP access, or if the PDU session is to be released from both 3GPP access and Non-3GPP access.\nThe update flag within the PduACRequestData shall be set to the value as following:\n-\t\"INCREASE\" for a Single-Access PDU session which is to be established, or for an Multi-Access PDU session when new access leg(s) is to be established;\n-\t\"DECREASE\" for a Single-Access PDU session which is to be released, or for an Multi-Access PDU session when existing access leg(s) is to be removed;\n-\t\"UPDATE\" for a Single-Access PDU session when the access type is to be replaced with a new access type during inter access mobility.\nFor LBO cases with VPLMN NSAC admission with or without HPLMN assistance, the NF Service Consumer in serving PLMN (e.g. vSMF) shall provide the S-NSSAI in serving PLMN, and the corresponding mapped S-NSSAI in home PLMN to the NSACF in serving PLMN. For LBO cases with HPLMN NSAC admission, the NF Service Consumer in serving PLMN (e.g. vSMF) shall provide the S-NSSAI in home PLMN (corresponding to the S-NSSAI in the VPLMN) to the NSACF in home PLMN. For PDU sessions in the home-routed roaming case, the NF Service Consumer in home PLMN (e.g. hSMF) shall provide S-NSSAI(s) in home PLMN to the NSACF in the home PLMN.\n2a.\tFor each S-NSSAI included in PduACRequestData, the NSACF shall perform the following actions:\n-\tif the update flag is set to \"INCREASE\", the NSACF shall check whether the PDU session is already recorded in the PDU registration list in the NSACF and whether the total number of PDU sessions to this slice will exceed the maximum number of PDU sessions allowed to be registered to this slice:\n-\tif the PDU session (identified by the UE ID and the PDU session ID) is already recorded in the PDU registration list, the NSACF shall skip recording this PDU session and shall not increase the total number of PDU sessions established to this network slice;\n-\tif the PDU session is not recorded in the PDU registration list and the total number of PDU sessions (including the PDU session indicated in the request and the PDU sessions already stored in the NSACF) does not exceed the maximum number of PDU sessions allowed to be registered to this slice, the NSACF records the PDU session to the PDU registration list stored in the NSACF, and updates the total number of PDU sessions registered to this slice accordingly;\n-\tif the PDU session is not recorded in the PDU registration list and if the total number of PDU sessions will exceed the maximum number of PDU sessions allowed to be registered to this slice, the NSACF shall not record the PDU session into the PDU registration list stored in the NSACF, and shall not update the total number of PDU sessions. Instead, the NSACF shall record this S-NSSAI in the failed list of S-NSSAI in the response message, together with an appropriate value of AcuFailureReason (e.g. \"EXCEED_MAX_PDU_NUM\" as specified in clause 6.1.6.3.5);\n-\tif the update flag is set to \"DECREASE\" and if the PDU session is recorded in the PDU registration list, the NSACF decreases the total number of PDU sessions registered to this slice, and removes the indicated PDU session from the PDU registration list stored in the NSACF.\n-\tIf the update flag is set to \"DECREASE\" and if the PDU session is not recorded in the PDU registration list, the NSACF shall not decrease the total number of PDU sessions registered to this slice and shall return successful handling for this PDU registration.\n-\tIf the update flag is set to \"UPDATE\", the NSACF shall locate the existing entry in the PDU registration list and update the access type associated to the PDU session to which indicated in the request message.\nThe NSACF may be configured to perform per access type network slice admission control. In this case, the NSACF shall check whether the access type provided by the NF Service Consumer is configured for NSAC for the indicated S-NSSAI to control the number of PDU sessions. If the access type is not configured for NSAC for the indicated S-NSSAI, the NSACF shall skip the above handling for increasing/decreasing the number of PDU sessions and shall return successful for this S-NSSAI. If the access type is configured for NSAC for the indicated S-NSSAI, the NSACF shall perform the above handling taking the access type into account. If the update flag is set to \"UPDATE\", the NSACF shall first increase the number of PDU sessions for the new access type, and if successful then decrease the number of PDU sessions for the old access type. If the total number of PDU sessions will exceed the maximum number of PDU sessions allowed to be registered to this slice, the AcuFailureReason shall indicate the applied access type (e.g. \"EXCEED_MAX_PDU_NUM_3GPP\" or \"EXCEED_MAX_PDU_NUM_N3GPP\" as specified in clause 6.1.6.3.5).\nIf the NSACF is not configured to perform per access type network slice admission control, the NSACF may perform network slice admission control without taking access type into account. For example, the NSACF is configured with a total quota for the PLMN, but the network slice admission control is not specific to one access type. The NSACF shall record the access type(s) associated with the PDU registration. The NSACF shall remove the PDU registration entry when the PDU session is released from all access types.\nNOTE 1:\tFor each S-NSSAI that is applicable for NSAC, the NSACF is configured with a total quota for the PLMN. However, the network slice admission control may be configured to apply for one specific access type or both access types.\nIf in above NSACF handling not all S-NSSAIs are successful, \"200 OK\" shall be returned, with necessary response data, e.g. indicating the failed S-NSSAI(s).\nIf in above NSACF handling all S-NSSAIS are successful, \"204 No Content\" shall be returned.\nIf the NSACF is configured with multiple NSAC Service Areas and is configured to perform NSAC admission on a per NSAC service area granularity, the NSACF shall perform the NSAC admission against the received NSAC service area in the request.\nNOTE 2:\tIf the PLMN has NSAC multiple service areas and there are multiple NSACFs deployed for the network slice, each NSACF may be configured with the maximum number of PDU Sessions of the network slice within its service area, e.g. as per operator policy. If hierarchical NSAC architecture is deployed, how to synchronize the threshold among the primary NSACF and distributed NSACFs is specified in clause 5.2.2.2.3 and clause 5.2.2.5.2. Otherwise, how to split or synchronize the threshold in multiple NSACFs is left to implementation, and how to guarantee session continuity when a UE moves to new NSAC service area with a different NSACF is also left to implementation.\n2b.\tOn failure, the appropriate HTTP status code (e.g. \"403 Forbidden\") indicating the error shall be returned.\nA ProblemDetails IE shall be included in the content of POST response, with the \"cause\" attribute of ProblemDetails set to application error codes specified in table 6.1.3.3.3.1-3.\n2c.\tOn redirection, \"307 Temporary Redirect\" or \"308 Permanent Redirect\" shall be returned. A RedirectResponse shall be included in the content of POST response.\nWhen the procedure is used to perform admission control for a number of UEs, when e.g. NSAC is enabled or disabled for an already live slice, then based on operator policy, SMF may allow or disallow sessions for which NSACF returned a reject.\nWhen hierarchical NSACF architecture is deployed in the network, the NF Service Consumer (e.g. SMF, combined SMF+PGW-C) shall invoke the NumOfPDUsUpdate service operation to request the NSACF to perform network slice admission control procedure related to the number of PDU sessions. In this procedure, the NSACF may delegate the request to the primary NSACF for further processing.\nThe figure depicts a hierarchical NSACF (Network Service Access Control) architecture, illustrating the process of controlling the number of PDU (Physical Data Unit) sessions in a network. The figure shows the various components and their connections, including the network service access control (NSAC) procedure, the number of PDU sessions, and the hierarchical structure. This figure is crucial for understanding the network's control and management capabilities.\nFigure 5.2.2.4.3-1: NSAC procedure for controlling the number of PDU sessions in hierarchical NSACF architecture\n1.\tSame as step 1 of Figure 5.2.2.4.2-1.\n2a.\tFor each S-NSSAI included in PduACRequestData, the NSACF shall perform action to control the number of PDU session.\nIf the local maximum number of PDU sessions is reached, the NSACF may interact with the Primary NSACF to request an update of the local maximum number of PDU sessions before it returns a response to the NF Service Consumer.\n2b and 2c.\tSame as step 2b and 2c of Figure 5.2.2.4.2-1.\n3.\tIf the NSAC processing involves the primary NSACF based on the mechanism defined in clause 4.2.11.4a of 3GPP TS 23.502 [3], the NF Service Consumer (e.g. NSACF) shall send a POST request to the resource representing the network slice admission control related to the number of PDU sessions (i.e. …/slices/pdus) in the primary NSACF. If the primary NSACF is not discovered, the NSACF shall discover the primary NSACF according to clause 6.3.22 of 3GPP TS 23.501 [2].\nThe content of the POST request shall contain the input data structure (i.e. PduACRequestData) for network slice admission control, which shall contain the information received in step 1.\n4a.\tFor each S-NSSAI included in PduACRequestData, the primary NSACF shall check the global maximum PDU session number and determines whether to accept or reject the request to update the local maximum PDU session number from NSACF.\nThe primary NSACF shall include the S-NSSAI in the failed list of S-NSSAI in the response message, together with an appropriate value of AcuFailureReason (e.g. \"EXCEED_MAX_PDU_NUM\" as specified in clause 6.1.6.3.5), if the request to update the local maximum PDU session number is rejected.\nThe primary NSACF shall include a new allocated local maximum PDU sessions number in the response message, if the request to update the local maximum PDU session number is accepted.\n4b.\tOn failure, the appropriate HTTP status code (e.g. \"403 Forbidden\") indicating the error shall be returned.\nA ProblemDetails IE shall be included in the content of POST response, with the \"cause\" attribute of ProblemDetails set to application error codes specified in table 6.1.3.3.3.1-3.\n4c.\tOn redirection, \"307 Temporary Redirect\" or \"308 Permanent Redirect\" shall be returned. A RedirectResponse shall be included in the content of POST response.\n5a.\tIf the response message includes the updated the local maximum number, the NSACF shall replaces the existing local maximum number with the received updated value, and the NSACF shall execute the same action as step 2a of Figure 5.2.2.4.2-1 based on the updated value;\nIf the response does not include the updated local maximum number, the NSACF shall returns the response to NF service consumer based on the received NSAC response from Primary NSACF.\n5b and 5c.\tSame as step 2b and 2c of Figure 5.2.2.4.2-1.\nThe NumOfPDUsUpdate service operation may be invoked to control the number of UEs with at least one PDU session/PDN connection, by the combined SMF+PGW-C under the following conditions:\n-\tEPS interworking is supported;\n-\tEPS counting is required for the network slice identified by an S-NSSAI;\n-\tthe network (e.g. combined SMF+PGW-C, NSACF) is configured to perform NSAC for the number of UEs with at least one PDU Session/PDN Connection.\nThe combined SMF+PGW-C shall invoke the NumOfPDUsUpdate in the following cases:\n-\twhen the UE establishes PDU session/PDN connection associated with the network slice in the combined SMF+PGW-C;\n-\twhen the PDU session/PDN connection associated with the network slice is released.\nWhen invoking NumOfPDUsUpdate, the procedure specified in clause 5.2.2.4.2 is applied, with the following differences:\n- Step 2a:\n-\tfor each S-NSSAI, the NSACF checks if the S-NSSAI is subject to counting the number of UEs with at least one PDU session/PDN connection. If no, the NSACF shall perform the existing NSAC handling as per clause 5.2.2.4.2. Otherwise, the NSACF shall perform the following steps:\n-\tif the update flag is set to \"INCREASE\", the NSACF, shall behave as specified in clause 5.15.11.5a of 3GPP TS 23.501 [2] and clause 4.11.5.9a of 3GPP TS 23.502  [3].\n-\tif the counted UE number exceeds the configured maximum number of UEs with at least one PDU session/PDN connection, the NSACF shall record this S-NSSAI in the failed list of S-NSSAI in the response message, together with an appropriate value of AcuFailureReason (e.g. \"EXCEED_MAX_UE_NUM\" as specified in clause 6.1.6.3.5).\n-\tif the update flag is set to \"UPDATE\", the NSACF performs necessary check and updates the stored information in the UE entry (e.g. access type), as specified in clause 4.11.5.9a of 3GPP TS 23.502 [3].\n-\tif the update flag is set to \"DECREASE\", the NSACF shall behave as specified in clause 5.15.11.5a of 3GPP TS 23.501 [2] and clause 4.11.5.9a of 3GPP TS 23.502  [3].\n-\tFor the hierarchical NSAC architecture, the NSACF shall behave as specified in clause 5.2.2.4.3.\n-\tIf the local maximum number or local threshold is reached, the NSACF may interact with the Primary NSACF before it returns the response back to the SMF+PGW-C. For more details on handling between the NSACF and Primary NSACF see clause 4.2.11.4a of 3GPP TS 23.502 [3].\nFor controlling of maximum number of LBO PDU Sessions for inbound roamers, the NF Service Consumer (e.g. SMF, vNSACF in Hierarchical NSAC architecture) shall invoke the NumOfPDUsUpdate service operation to request the NSACF in Serving PLMN (e.g. Central or Primary NSACF in VPLMN) to perform network slice admission control procedure related to the number of LBO PDU sessions. In this procedure, the NSACF in Serving PLMN shall delegate the request to the NSACF in HPLMN for further processing in specific cases.\nThe figure depicts a delegated NSAC procedure for controlling the number of LBO PDU sessions in a 5G network. It illustrates the steps involved in managing the number of sessions, including the delegation of control to the NSAC, the selection of the LBO PDU, and the execution of the procedure. The figure is crucial for ensuring efficient network management and maintaining network performance.\nFigure 5.2.2.4.5-1: HPLMN Delegated NSAC procedure for controlling the number of LBO PDU sessions\n1.\tSame as step 1 of Figure 5.2.2.4.2-1, with the value of NSAC admission mode set to VPLMN with HPLMN assistance NSAC admission mode.\n2a.\tFor each S-NSSAI included in PduACRequestData, the NSACF in serving PLMN shall perform actions to control the number of PDU session.\n-\tif centralized NSAC architecture is deployed in the VPLMN, same as step 2a of Figure 5.2.2.4.2-1; or\n-\tif Hierarchical NSAC architecture is deployed in the VPLMN, same as step 4a of Figure 5.2.2.4.3-1.\n2b and 2c.\tSame as step 2b and 2c of Figure 5.2.2.4.2-1.\n3.\tIf the maximum number of PDU Session is not available or the maximum number of PDU Sessions has been reached at the NSACF in serving PLMN, the NSACF in serving PLMN shall send a POST request to the resource representing the network slice admission control related to the number of PDU sessions (i.e. …/slices/pdus) in the NSACF in HPLMN.\nThe content of the POST request shall contain the input data structure (i.e. PduACRequestData) for network slice admission control, which shall contain the information received in step 1.\n4a.\tFor each S-NSSAI included in PduACRequestData, the NSACF in HPLMN shall check the global maximum PDU session number and determines whether to accept or reject the request to update the local maximum PDU session number configurations of NSACF in serving PLMN.\nThe NSACF in HPLMN shall include the S-NSSAI in the failed list of S-NSSAI in the response message, together with an appropriate value of AcuFailureReason (e.g. \"EXCEED_MAX_PDU_NUM\" as specified in clause 6.1.6.3.5), if the request is rejected.\nThe NSACF in HPLMN shall send allocated maximum number of LBO PDU Sessions for the mapped S-NSSAI in HPLMN for inbound roamers in the response message, if the request to update the local maximum PDU session number is accepted, as described in clause 4.2.11.5.2.4 of 3GPP TS 23.502 [3].\n4b.\tOn failure, the appropriate HTTP status code (e.g. \"403 Forbidden\") indicating the error shall be returned.\nA ProblemDetails IE shall be included in the content of POST response, with the \"cause\" attribute of ProblemDetails set to application error codes specified in table 6.1.3.3.3.1-3.\n4c.\tOn redirection, \"307 Temporary Redirect\" or \"308 Permanent Redirect\" shall be returned. A RedirectResponse shall be included in the content of POST response.\n5a.\tIf the response message includes the allocated maximum number of LBO PDU Sessions, the NSACF in serving PLMN shall replaces the existing local maximum number with the received updated value, and the NSACF in serving PLMN shall execute the same action as step 2a of this procedure based on the updated value;\nIf the response does not include the allocated maximum number of LBO PDU Sessions, the NSACF in serving PLMN shall return the response to NF service consumer based on the received NSAC response from NSACF in HPLMN.\n5b and 5c.\tSame as step 2b and 2c of Figure 5.2.2.4.2-1.\nThe LocalNumberUpdate service operation shall be used by the NF service consumer (e.g., primary NSACF) to update the local maximum number of registered UEs and/or PDU sessions of a network slice at the NSACF. It is used in the following procedures:\n-\tUpdate of local maximum number in Hierarchical NSAC Architecture (see clause 4.2.11.6 of 3GPP TS 23.502 [3]).\nThe LocalNumberUpdate service operation shall also be used by the NF service consumer (e.g. primary or central NSACF in HPLMN) to update the local maximum number of registered roaming UEs and/or LBO PDU sessions of a network slice at the primary or central NSACF in VPLMN. It is used in the following procedures:\n-\tVPLMN with HPLMN assistance NSAC Admission mode for number of registered roaming UEs and number of LBO PDU sessions (see clause 4.2.11.5.2.2 of 3GPP TS 23.502 [3]).\nThe LocalNumberUpdate service operation shall be used by the NF service consumer to update the local maximum number of registered UEs and/or PDU sessions of the network slice at the NSACF by using the HTTP POST method as shown in Figure 5.2.2.5.2-1.\nThe figure depicts a simplified schematic of the NSAC procedure for updating the numbers of UEs and/or PDU sessions in a 5G network. It illustrates the steps involved in managing the network's capacity and ensuring efficient resource allocation. The figure includes key components such as the network slicing, network slicing controller (NSAC), and network slicing service (NSS), which are essential for managing the network's capacity and ensuring efficient resource allocation. The figure also highlights the importance of network slicing in enabling flexible and efficient resource allocation in a 5G network.\nFigure 5.2.2.5.2-1: NSAC procedure for updating the numbers of UEs and/or PDU sessions\n1.\tThe NF Service Consumer (i.e., primary NSACF or central NSACF) shall send a POST request to the resource representing the network slice admission control configurations (i.e., …/slices/local-configs-update) in the NSACF.\nThe content of the POST request shall contain the input data structure (i.e., ACUpdateData), which shall contain the following information to update the local maximum number of registered UEs and/or (LBO) PDU sessions in the Hierarchical NSAC Architecture:\n-\tthe S-NSSAIs subject to NSAC for which an updated number of maximum number of UEs or PDU sessions needs to be provided;\n-\tthe updated local maximum number of registered UEs, if this information is changed; and\n-\tthe updated local maximum number of PDU sessions if this information is changed.\nOr it shall contain the following information in VPLMN with HPLMN assistance NSAC Admission mode:\n-\tthe S-NSSAIs mapped in HPLMN subject to NSAC for which an update of the maximum number of registered roaming UEs or LBO PDU sessions needs to be provided;\n-\tthe updated local maximum number of registered roaming UEs, if this information is changed; and\n-\tthe updated local maximum number of LBO PDU sessions if this information is changed.\n2a.\tOn success, \"204 No Content\" shall be returned and the content of the POST response shall be empty. The updated values of the local maximum number of registered UEs and/or PDU sessions may directly apply to current NSAC pending requests in NSACF and they shall be used for all future requests as specified in clause 5.15.11.1.2 of 3GPP TS 23.501 [2].\n2b.\tOn failure, one of the HTTP status codes listed in Table 6.1.3.4.3.1-3 shall be returned.\n\nThe QuotaUpdate service operation shall be used to request the primary or central NSACF at HPLMN to return the maximum number of registered UEs and/or the maximum number of LBO PDU sessions of a network slice to the primary or central NSACF of VPLMN for inbound roamers when the VPLMN NSAC admission mode is determined.\nIt is used in the following procedures:\n-\tNetwork Slice Admission Control Support for Roaming by VPLMN (see clause 4.2.11.5.1 of 3GPP TS 23.502 [3]).\nThe QuotaUpdate service operation shall be used by the NF service consumer to fetch the maximum number of registered UEs and/or the maximum number of LBO PDU sessions of a network slice at the primary or central NSACF at HPLMN for inbound roamers by using the HTTP POST method as shown in Figure 5.2.2.6.2-1.\nThe figure depicts the NSAC procedure for fetching the quota of the number of UEs and/or LBO PDU sessions at the HPLMN NSACF for inbound roamers. It illustrates the steps involved in determining the quota for UEs and LBO PDU sessions, as well as the process for obtaining these quotas from the HPLMN NSACF.\nFigure 5.2.2.6.2-1: NSAC procedure for fetching the quota of the number of UEs and/or LBO PDU sessions at the HPLMN NSACF for inbound roamers\n1.\tThe NF Service Consumer (i.e., primary or central NSACF at VPLMN) shall send a POST request to the resource representing the network slice admission control related to the quota update (i.e., …/slice/roaming-quotas/query) in the primary or central HPLMN NSACF.\nThe content of the POST request shall contain the input data structure (i.e., QuotaUpdateRequestData), which shall contain the following information:\n-\tthe S-NSSAI mapped in HPLMN subject to NSAC for which the available quota for the maximum number of inbound roaming UEs and/or LBO PDU sessions needs to be provided;\n-\tthe serving PLMN ID of the UE for which quotas are requested; and\n-\tthe requested quota type indicating if the requested quota is for the maximum number of registered inbound roaming UEs and/or the maximum number of LBO PDU sessions.\n2a.\tOn success, \"200 OK\" shall be returned and the content of the POST response shall contain input data structure (i.e., QuotaUpdateResponseData), which shall contain the following information:\n-\tThe updated maximum number of registered inbound roaming UEs and/or the maximum number of LBO PDU sessions.\n2b.\tOn failure, one of the HTTP status codes listed in Table 6.1.3.5.4.2.2-2 shall be returned.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.3\tNnsacf_SliceEventExposure Service",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.3.1\tService Description",
                            "text_content": "The Nnsacf_SliceEventExposure services provide event based notifications to the consumer NF (e.g. to NEF, AF, DCCF or NWDAF) related to the number of UEs registered to a network slice or the number of PDU Sessions established to a network slice.\nIf, in accordance with operator policy and national/regional regulations, the NF Service Consumer (i.e. the AMF or the SMF) needs to exempt UEs/PDU Sessions that are used for emergency, mission critical and/or priority services (e.g. MCS, MPS) from NSAC, then the NF service consumer may send a request to NSACF and ignore the NSACF response. Therefore, if a UE/PDU session is rejected by NSACF, then the reports generated by the NSACF would not have counts of those UEs/PDU-Sessions, despite the UEs accessing the corresponding slice(s). Alternatively, the NF Service Consumer (i.e. the AMF or the SMF) may not invoke the corresponding NSAC procedure for the exempted UE/PDU Session, i.e. those UEs/PDU Sessions are not counted towards the maximum number of UEs/PDU Sessions (see clause 5.15.11.0 of 3GPP TS 23.501 [2]).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.3.2\tService Operations",
                            "text_content": "For the Nnsacf_SliceEventExposure service the following service operations are defined:\n-\tSubscribe, including creation or modification of a subscription;\n-\tUnsubscribe;\n-\tNotify.\nThis service operation is used by the consumer NF (e.g. NEF, AF, DCCF, NSACF or NWDAF) to subscribe or modify a subscription with the NSACF for event based notifications for: the number of UEs registered to a network slice, or the number of PDU Sessions established to a network slice.\nNOTE:\tIn notifications reporting the number of UEs registered to a network slice, the NSACF can indicate whether the reported number of UEs correspond to UEs with at least one PDU session/PDN connection. See clause 5.3.2.4.1.\nThe Subscribe service operation is invoked by a NF Service Consumer (e.g. NEF, AF, DCCF or NWDAF) towards the NSACF, when it needs to create a subscription to monitor the event relevant to the NSACF.\nThe NF Service Consumer shall request to create a new subscription by using HTTP method POST with URI of the subscriptions collection, see clause 6.2.3.1.\nThe NF Service Consumer shall include the following information in the HTTP message body:\n-\tNF ID, indicates the identity of the network function instance initiating the subscription;\n-\tNotification URI, indicates the address to deliver the event notifications generated by the subscription;\n-\tNotification Correlation ID, indicates the correlation identity to be carried in the event notifications, the value of this IE shall be unique per subscription for a given NF service consumer receiving the notification;\n-\tSAC Event Type, defines which type of events to notify (e.g. the number of UEs registered to a network slice, or the number of PDU Sessions established on a network slice);\n-\tEvent Filter, indicate the S-NSSAI(s) in serving PLMN and/or mapped S-NSSAI(s) in home PLMN to be monitored and reported.\n-\tSAC Event Report Triggers, defines whether the notification is threshold triggered (e.g. the notification is triggered when the current number of UEs or PDU Sessions with a network slice reaches a defined threshold value) or the notification is periodic triggered (e.g. the notification is triggered at expiry of a periodic timer).\n-\tNotification threshold if the SAC Event Report Triggers is threshold triggered, defines a numeric value or a percentage of the maximum number of the UEs or PDU Sessions per network slice;\n-\tNotification periodicity if the SAC Event Report Triggers is periodic triggered, defines the time between the notification periodicity;\n-\ta notification flag as \"notifFlag\" attribute if the EEMM feature is supported; and/or\n-\tMuting Exception Instructions, which specify instructions to apply to the subscription and the stored events when an exception occurs at the NSACF while the event is muted (e.g. the buffer of stored event reports is full, or the number of stored event reports exceeds a certain number), if the EEMM feature is supported (see clause 6.2.8).\nFigure 5 illustrates the process of subscribing for creation in the 4.2.2.2-1 network. The figure depicts a user interface with a list of available subscriptions, each with a unique identifier and a description of the subscription type. Users can select a subscription based on their needs, such as the type of service they wish to subscribe for, the duration of the subscription, and the cost. The figure also includes a button to create a new subscription, allowing users to easily add new services to their account.\nFigure 5.4.2.2.2-1 Subscribe for Creation\n1.\tThe NF Service Consumer (e.g. NEF, AF, DCCF or NWDAF) shall send a POST request to create a subscription resource in the NSACF. The content of the POST request shall contain a representation of the individual subscription resource to be created. The request may contain an expiry time, suggested by the NF Service Consumer, representing the time up to which the subscription is desired to be kept active and the time after which the subscribed event(s) shall stop generating report.\n2a.\tOn success, the request is accepted, the NSACF shall include a HTTP Location header to provide the location of a newly created resource (subscription) together with the status code 201 indicating the requested resource is created in the response message.\nThe response, based on operator policy and taking into account the expiry time included in the request, may contain the expiry time, as determined by the NSACF, after which the subscription becomes invalid. Once the subscription expires, if the NF Service Consumer wants to keep receiving notifications, it shall create a new subscription in the NSACF. The NSACF shall not provide the same expiry time for many subscriptions in order to avoid all of them expiring and recreating the subscription at the same time. If the expiry time is not included in the response, the NF Service Consumer shall consider the subscription to be valid without an expiry time.\nIf the immediateFlag attribute is set to \"true\" in the request message, the NSACF shall include the current number of UEs or PDU Sessions per network slice in the response immediately.\nIf the NSACF supports the EEMM feature and the \"notifFlag\" attribute is included and set to \"DEACTIVATE\" in the request by e.g. the NWDAF or DCCF, the NSACF shall mute the event notification and store the available events. Additionally, if the NF service consumer also included event muting instructions in the request, the NSACF should evaluate the received event muting instructions against to local actions (if configured) and, if the subscription creation request is accepted, the NSACF may indicate the following information to the NF service consumer in the response:\n-\tthe maximum number of notifications that the NSACF expects to be able to store for the subscription;\n-\tan estimate of the duration for which notifications can be buffered.\n2b.\tOn failure, the appropriate HTTP status code (e.g. \"403 Forbidden\") shall be returned.\nA ProblemDetails IE shall be included in the content of POST response, with the \"cause\" attribute of ProblemDetails set to application error codes specified in table 6.2.3.2.3.1-3.\n2c.\tOn redirection, \"307 Temporary Redirect\" or \"308 Permanent Redirect\" shall be returned. A RedirectResponse IE shall be included in the content of POST response.\nIf the NSACF supports the EEMM features (see clause 6.2.8), the NF service consumer sets the \"notifFlag\" attribute to \"DEACTIVATE\" and event muting instructions in the request, but the NSACF cannot accept the received instructions, the NSACF may reject the request with a 403 Forbidden response and the application error \"MUTING_EXC_INSTR_NOT_ACCEPTED\".\nThe Subscribe service operation is invoked by a NF Service Consumer (e.g. NEF, AF, DCCF or NWDAF) towards the NSACF, when it needs to modify an existing subscription previously created by itself at the NSACF.\nWhen the subscription is to be expired, the NF service consumer may request the NSACF to update the subscription by indicating a new expiry time. The NSACF may return a new expiry time based on local policy, taking into account of the NF service consumer provided expiry time.\nTo perform a partial update of the subscription of a given subscription Id, the NF Service Consumer shall issue an HTTP PATCH request, as shown in Figure 5.3.2.2.3-1. This partial update shall be used to add, delete and/or replace individual parameters of the subscription.\nFigure 5.3.2.2.3-1 Subscription partial modification\n1.\tThe NF Service Consumer (e.g. NEF, AF, DCCF or NWDAF) shall send a PATCH request to the resource URI representing the individual subscription, identified by the {subscriptionId}. The content of the PATCH request shall contain the list of operations (add/delete/replace) to be applied to parameters in the individual subscription.\n2a.\tOn success, the request is accepted, the NSACF shall return the representation of the updated subscription resource with the status code \"200 OK\", or \"204 No Content\" shall be returned.\n\"204 No Content\" may be returned, if the NF Service Producer accepts entirely the resource representation provided by the NF Service Consumer in the request. For example, the request contained a proposed expiry time and it is accepted by the NF Service Producer as the expiration time for the subscription, or the request did not contain a proposed expiry time and no expiration time is set by the NF Service Producer for the subscription.\n2b.\tOn failure, the appropriate HTTP status code (e.g. \"403 Forbidden\") shall be returned.\nA ProblemDetails IE shall be included in the content of PATCH response, with the \"cause\" attribute of ProblemDetails set to application error codes specified in table 6.2.3.3.3.1-3.\n2c.\tOn redirection, \"307 Temporary Redirect\" or \"308 Permanent Redirect\" shall be returned. A RedirectResponse IE shall be included in the content of PATCH response.\nTo perform a complete replacement of the subscription of a given subscription Id, the NF Service Consumer shall issue an HTTP PUT request, as shown in Figure 5.3.2.2.3-2:\nThe figure depicts a subscription completion replacement process, showing the steps involved in completing a subscription and replacing it with a new one. The process includes obtaining the necessary information, verifying the subscription, and initiating the replacement. The figure illustrates the steps with arrows and labels, making it easy to understand the flow of the process.\nFigure 5.3.2.2.3-2 Subscription Complete Replacement\n1.\tThe NF service consumer (e.g. NEF, AF, DCCF or NWDAF) shall send a PUT request to the resource URI representing the individual subscription, identified by the {subscriptionId}. The content of the PUT request shall contain a representation of the individual subscription to be completely replaced in the NSACF.\n2a.\tOn success, the request is accepted, the NSACF shall include the resource (subscription) after replacement together with the status code \"200 OK\" indicating the requested resource is updated in the response message.\nThe response, based on operator policy and taking into account the expiry time included in the request if any, may contain the expiry time as defined in 5.3.2.2.2.\nIf the immediateFlag attribute is set to \"true\" in the request message, the NSACF shall include the current number of UEs or PDU sessions per network slice in the response immediately.\n2b.\tOn failure, the appropriate HTTP status code (e.g. \"403 Forbidden\") shall be returned.\nA ProblemDetails IE shall be included in the content of PUT response, with the \"cause\" attribute of ProblemDetails set to application error codes specified in table 6.2.3.3.3.2-3.\n2c.\tOn redirection, \"307 Temporary Redirect\" or \"308 Permanent Redirect\" shall be returned. A RedirectResponse IE shall be included in the content of PUT response.\nThe NF Service Consumer (e.g. NEF, AF, DCCF or NWDAF) may request the NSACF to immediately provide the current network slice status information (e.g. the number of UEs registered to a network slice, the current number of PDU Sessions established to a network slice). In this case, the NF Service Consumer (e.g. NEF, AF, DCCF or NWDAF) shall request the NSACF to create a temporary subscription and response with immediate report, as follows.\n1.\tThe NF Service Consumer shall send a POST request as specified in step 1 of clause 5.3.2.2.2, with the following additional information:\n-\tthe maxReports attribute set to 1 and the immediateFlag attribute set to \"true\".\n2a.\tThe NSACF shall send a POST response as specified in step 2a of clause 5.3.2.2.2, with the following additional information:\n-\tthe NSACF shall include the current number of UEs or PDU Sessions per network slice in the response immediately and shall terminate the subscription of the event.\nThe NSACF shall terminate the subscription of the event after sending response to the NF Service Consumer.\n2b.\tSame as step 2b of figure 5.3.2.2.2-1.\n2c.\tSame as step 2c of figure 5.3.2.2.2-1.\nThis service operation is used by the consumer NF (e.g. NEF, AF, DCCF or NWDAF) to unsubscribe from the event notification.\nThe NF Service Consumer (e.g. NEF, AF, DCCF or NWDAF) shall unsubscribe to the subscription by using HTTP method DELETE.\nFigure 5 illustrates the process of unsubscribing from a subscription in a telecommunications system. The figure shows a user interface with various options for unsubscribing, such as \"Cancel Subscription,\" \"Delete Subscription,\" and \"Delete Subscription.\" The user can choose to cancel, delete, or delete the subscription, depending on their needs.\nFigure 5.3.2.3.1-1: Unsubscribe a subscription\n1.\tThe NF Service Consumer (e.g. NEF, AF, DCCF or NWDAF) shall send a DELETE request to delete an existing subscription resource in the NSACF.\n2a.\tOn success, the request is accepted, the NSACF shall reply with the status code 204 indicating the resource identified by subscription ID is successfully deleted in the response message.\n2b.\tOn failure, the appropriate HTTP status code (e.g. \"403 Forbidden\") shall be returned.\nA ProblemDetails IE shall be included in the content of DELETE response, with the \"cause\" attribute of ProblemDetails set to application error codes specified in table 6.2.3.3.3.3-3.\n2c.\tOn redirection, \"307 Temporary Redirect\" or \"308 Permanent Redirect\" shall be returned. A RedirectResponse IE shall be included in the content of DELETE response.\nThis service operation is used by the NSACF to report the current status of certain network slice (e.g. the number of UEs registered to a network slice, or the current number of PDU Sessions established on a network slice in numbers or in percentage from the maximum allowed numbers).\nWhile counting the number of UEs registered to a network slice, or counting the number of UEs registered to a network slice with at least one PDU session/PDN connection, the NSACF shall not count twice the UE Ids stored temporarily due to the AMF mobility scenario.\nWhen reporting the number of UEs registered to a network slice, the NSACF may indicate whether the reported number of UEs correspond to UEs with at least one PDU session/PDN connection.\nFigure 5 illustrates the 3GPP 3.2.4.1 protocol for notification, which is a crucial component of the 3GPP Release 14 standard for mobile network signaling. The figure shows the signaling structure, including the sender, receiver, and the message being sent. The sender sends a message to the receiver, and the receiver acknowledges the message. This protocol is used to ensure that the network is functioning correctly and to provide a clear communication path for the sender and receiver.\nFigure 5.3.2.4.1-1: Notify\n1.\tThe NSACF shall send a POST request to send a notification.\nIf the notification is threshold triggered, the NSACF shall send the notification every time if there is a change from being below the threshold to reach the threshold, or from reaching the threshold to coming down below the threshold (see clause 4.15.3.2.10 of 3GPP TS 23.502 [3]). When a subscription is created and the current number of UEs or number of PDU sessions reaches the threshold, the NSACF shall send the notification immediately.\nEXAMPLE:\nIf the threshold for the reporting of the number of registered UEs is 100, the behaviour of the NSACF as below:\n-\tthe current number of registered UEs is 100 when the subscription is created, the NSACF shall send a notification to the NF service consumer, then\n-\tthe current number of registered UEs is changed to 99, the NSACF shall send a notification to the NF service consumer, then\n-\tthe current number of registered UEs is changed to 90, the NSACF shall not send notification, then\n-\tthe current number of registered UEs is changed to 100, the NSACF shall send a notification to the NF service consumer, then\n-\tthe current number of registered UEs is changed to 110, the NSACF shall not send notification.\nFor periodic reporting, the NSACF shall contain the current number of registered UEs in the concerned network slice or the current number of established PDU sessions in the concerned network slice expressed in percentage and in numerical to the NF Service Consumer.\n2a.\tOn success, \"204 No content\" shall be returned by the NF Service Consumer (e.g. NEF, AF, DCCF or NWDAF).\n2b.\tOn failure, the appropriate HTTP status code (e.g. \"404 Not Found\") shall be returned and appropriate additional information should be returned.\nA ProblemDetails IE shall be included in the content of POST response, with the \"cause\" attribute of ProblemDetails set to application error codes specified in table 6.2.5.2.2.1-3.\n2c.\tOn redirection, \"307 Temporary Redirect\" or \"308 Permanent Redirect\" shall be returned. A RedirectResponse IE shall be included in the content of POST response.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "6\tAPI Definitions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.1\tNnsacf_NSAC Service API",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.1.1\tIntroduction",
                            "text_content": "The Nnsacf_NSAC shall use the Nnsacf_NSAC API.\nThe API URI of the Nnsacf_NSAC API shall be:\n{apiRoot}/<apiName>/<apiVersion>\nThe request URIs used in HTTP requests from the NF service consumer towards the NF service producer shall have the Resource URI structure defined in clause 4.4.1 of 3GPP TS 29.501 [5], i.e.:\n{apiRoot}/<apiName>/<apiVersion>/<apiSpecificResourceUriPart>\nwith the following components:\n-\tThe {apiRoot} shall be set as described in 3GPP TS 29.501 [5].\n-\tThe <apiName> shall be \"nnsacf-nsac\".\n-\tThe <apiVersion> shall be \"v1\".\n-\tThe <apiSpecificResourceUriPart> shall be set as described in clause 5.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.2\tUsage of HTTP",
                            "text_content": "HTTP/2, IETF RFC 7540 [11], shall be used as specified in clause 5 of 3GPP TS 29.500 [4].\nHTTP/2 shall be transported as specified in clause 5.3 of 3GPP TS 29.500 [4].\nThe OpenAPI [6] specification of HTTP messages and content bodies for the Nnsacf_NSAC API is contained in Annex A.\nSee clause 5.2.2 of 3GPP TS 29.500 [4] for the usage of HTTP standard headers.\nJSON, IETF RFC 8259 [12], shall be used as content type of the HTTP bodies specified in the present specification as specified in clause 5.4 of 3GPP TS 29.500 [4]. The use of the JSON format shall be signalled by the content type \"application/json\".\n\"Problem Details\" JSON object shall be used to indicate additional details of the error in a HTTP response body and shall be signalled by the content type \"application/problem+json\", as defined in IETF RFC 9457 [13].\nThe mandatory HTTP custom header fields specified in clause 5.2.3.2 of 3GPP TS 29.500 [4] shall be supported, and the optional HTTP custom header fields specified in clause 5.2.3.3 of 3GPP TS 29.500 [4] may be supported.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.3\tResources",
                            "text_content": "This clause describes the structure for the Resource URIs and the resources and methods used for the service.\nThe figure 6.1.3.1-1 describes the resource URI structure of the Nnsacf-NSAC API.\nThe figure depicts the resource URI structure of the Nnsacf_NSAC API, which is used to access the NSAC (Network Service Access Control) API. The structure includes the URI for the NSAC service, the URI for the NSAC resource, and the URI for the NSAC resource type. The figure provides a clear and concise representation of the API's structure, making it easier for developers to understand and use the API.\nFigure 6.1.3.1-1: Resource URI structure of the Nnsacf_NSAC API\nTable 6.1.3.1-1 provides an overview of the resources and applicable HTTP methods.\nTable 6.1.3.1-1: Resources and methods overview\n\nThis resource represents the collection of slice subject to NSAC for UEs.\nThis resource is modelled with the Store resource archetype (see clause C.2 of 3GPP TS 29.501 [5]).\nResource URI: {apiRoot}/<apiName>/<apiVersion>/slices/ues\nThis resource shall support the resource URI variables defined in table 6.1.3.2.2-1.\nTable 6.1.3.2.2-1: Resource URI variables for this resource\n\n6.1.3.2.3.1\tPOST\nThis method shall support the URI query parameters specified in table 6.1.3.2.3.1-1.\nTable 6.1.3.2.3.1-1: URI query parameters supported by the POST method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.2.3.1-2 and the response data structures and response codes specified in table 6.1.3.2.3.1-3.\nTable 6.1.3.2.3.1-2: Data structures supported by the POST Request Body on this resource\n\nTable 6.1.3.2.3.1-3: Data structures supported by the POST Response Body on this resource\n\nTable 6.1.3.2.3.1-4: Headers supported by the 307 Response Code on this resource\n\nTable 6.1.3.2.3.1-5: Headers supported by the 308 Response Code on this resource\n\nIn this release of this specification, no custom operations associated to this resource is defined.\nThis resource represents the collection of slice subject to NSAC for PDU sessions.\nThis resource is modelled with the Store resource archetype (see clause C.2 of 3GPP TS 29.501 [5]).\nResource URI: {apiRoot}/<apiName>/<apiVersion>/slices/pdus\nThis resource shall support the resource URI variables defined in table 6.1.3.3.2-1.\nTable 6.1.3.3.2-1: Resource URI variables for this resource\n\n6.1.3.3.3.1\tPOST\nThis method shall support the URI query parameters specified in table 6.1.3.3.3.1-1.\nTable 6.1.3.3.3.1-1: URI query parameters supported by the POST method on this resource\n\nThis method shall support the request data structures specified in table 6.1.3.3.3.1-2 and the response data structures and response codes specified in table 6.1.3.3.3.1-3.\nTable 6.1.3.3.3.1-2: Data structures supported by the POST Request Body on this resource\n\nTable 6.1.3.3.3.1-3: Data structures supported by the POST Response Body on this resource\n\nTable 6.1.3.3.3.1-4: Headers supported by the 307 Response Code on this resource\n\nTable 6.1.3.3.3.1-5: Headers supported by the 308 Response Code on this resource\n\nIn this release of this specification, no custom operations associated to this resource is defined.\nThis resource represents the Slice Collection configurations, i.e. local configurations of the maximum number of registered UEs and/or maximum number of PDU sessions established at a network slice.\nResource URI: {apiRoot}/<apiName>/<apiVersion>/slices/configs\nThis resource shall support the resource URI variables defined in table 6.1.3.w.2-1.\nTable 6.1.3.4.2-1: Resource URI variables for this resource\n\nIn this release of this specification, no standard operations associated to this resource is defined.\n6.1.3.4.4.1\tOverview\nTable 6.1.3.4.4.1-1: Custom operations\n\n6.1.3.4.4.2\tOperation: update (POST)\nThis custom operation is used to update the Slice Collection configurations, i.e. local configurations of the maximum number of registered UEs and/or maximum number of PDU sessions established at a network slice.\nThis operation shall support the request data structures specified in table 6.1.3.4.4.2.2-1 and the response data structure and response codes specified in table 6.1.3.4.4.2.2-2.\nTable 6.1.3.4.4.2.2-1: Data structures supported by the POST Request Body on this resource\n\nTable 6.1.3.4.4.2.2-2: Data structures supported by the POST Response Body on this resource\n\nTable 6.1.3.4.4.2.2-3: Headers supported by the 307 Response Code on this resource\n\nTable 6.1.3.4.4.2.2-4: Headers supported by the 308 Response Code on this resource\n\nThis resource represents the Slice Collection subject to roaming quotas update, i.e. quota update of the maximum number of registered UEs and/or maximum number of PDU sessions established at a network slice in a primary or central VPLMN NSACF for inbound roamers for VPLMN NSAC admission mode.\nResource URI: {apiRoot}/<apiName>/<apiVersion>/slices/roaming-quotas\nThis resource shall support the resource URI variables defined in table 6.1.3.5.2-1.\nTable 6.1.3.5.2-1: Resource URI variables for this resource\n\nNone.\n6.1.3.5.4.1\tOverview\nTable 6.1.3.5.4.1-1: Custom operations\n\n6.1.3.5.4.2\tOperation: query\nThis custom operation is used to request the central or primary NSACF at HPLMN to update the maximum number of registered UEs and/or number of LBO PDU sessions of the network slice at the central or primary NSACF at VPLMN for inbound roamers for VPLMN NSAC admission mode.\nThis operation shall support the request data structures specified in table 6.1.3.5.4.2.2-1 and the response data structure and response codes specified in table 6.1.3.5.4.2.2-2.\nTable 6.1.3.5.4.2.2-1: Data structures supported by the POST Request Body on this resource\n\nTable 6.1.3.5.4.2.2-2: Data structures supported by the POST Response Body on this resource\n\nTable 6.1.3.5.4.2.2-3: Headers supported by the 307 Response Code on this resource\n\nTable 6.1.3.5.4.2.2-4: Headers supported by the 308 Response Code on this resource\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.3.1-1: Resources and methods overview",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.2-1: Resource URI variables for this resource",
                                    "table number": 7,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.3.1-1: URI query parameters supported by the POST method on this resource",
                                    "table number": 8,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.3.1-2: Data structures supported by the POST Request Body on this resource",
                                    "table number": 9,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.3.1-3: Data structures supported by the POST Response Body on this resource",
                                    "table number": 10,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.3.1-4: Headers supported by the 307 Response Code on this resource",
                                    "table number": 11,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.2.3.1-5: Headers supported by the 308 Response Code on this resource",
                                    "table number": 12,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.2-1: Resource URI variables for this resource",
                                    "table number": 13,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.3.1-1: URI query parameters supported by the POST method on this resource",
                                    "table number": 14,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.3.1-2: Data structures supported by the POST Request Body on this resource",
                                    "table number": 15,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.3.1-3: Data structures supported by the POST Response Body on this resource",
                                    "table number": 16,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.3.1-4: Headers supported by the 307 Response Code on this resource",
                                    "table number": 17,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.3.3.1-5: Headers supported by the 308 Response Code on this resource",
                                    "table number": 18,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.4.2-1: Resource URI variables for this resource",
                                    "table number": 19,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.4.4.1-1: Custom operations",
                                    "table number": 20,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.4.4.2.2-1: Data structures supported by the POST Request Body on this resource",
                                    "table number": 21,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.4.4.2.2-2: Data structures supported by the POST Response Body on this resource",
                                    "table number": 22,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.4.4.2.2-3: Headers supported by the 307 Response Code on this resource",
                                    "table number": 23,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.4.4.2.2-4: Headers supported by the 308 Response Code on this resource",
                                    "table number": 24,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.5.2-1: Resource URI variables for this resource",
                                    "table number": 25,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.5.4.1-1: Custom operations",
                                    "table number": 26,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.5.4.2.2-1: Data structures supported by the POST Request Body on this resource",
                                    "table number": 27,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.5.4.2.2-2: Data structures supported by the POST Response Body on this resource",
                                    "table number": 28,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.5.4.2.2-3: Headers supported by the 307 Response Code on this resource",
                                    "table number": 29,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.3.5.4.2.2-4: Headers supported by the 308 Response Code on this resource",
                                    "table number": 30,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.4\tCustom Operations without associated resources",
                            "text_content": "In this release of this specification, no custom operations without associated resources are defined.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.5\tNotifications",
                            "text_content": "Notifications shall comply to clause 6.2 of 3GPP TS 29.500 [4] and clause 4.6.2.3 of 3GPP TS 29.501 [5].\nTable 6.1.5.1-1: Notifications overview\n\nThe EAC Mode Notification is used by the NSACF to inform the NF Service Consumer (e.g. AMF) of the activation/deactivation of EAC mode.\nThe Callback URI \"{EACNotificationUri}\" shall be used with the callback URI variables defined in table 6.1.5.2.2-1.\nTable 6.1.5.2.2-1: Callback URI variables\n\n6.1.5.2.3.1\tPOST\nThis method shall support the request data structures specified in table 6.1.5.2.3.1-1 and the response data structures and response codes specified in table 6.1.5.2.3.1-1.\nTable 6.1.5.2.3.1-1: Data structures supported by the POST Request Body\n\nTable 6.1.5.2.3.1-2: Data structures supported by the POST Response Body\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.5.1-1: Notifications overview",
                                    "table number": 31,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.5.2.2-1: Callback URI variables",
                                    "table number": 32,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.5.2.3.1-1: Data structures supported by the POST Request Body",
                                    "table number": 33,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.5.2.3.1-2: Data structures supported by the POST Response Body",
                                    "table number": 34,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.6\tData Model",
                            "text_content": "This clause specifies the application data model supported by the API.\nTable 6.1.6.1-1 specifies the data types defined for the Nnsacf_NSAC service based interface protocol.\nTable 6.1.6.1-1: Nnsacf_NSAC specific Data Types\n\nTable 6.1.6.1-2 specifies data types re-used by the Nnsacf_NSAC service based interface protocol from other specifications, including a reference to their respective specifications and when needed, a short description of their use within the Nnsacf_NSAC service based interface.\nTable 6.1.6.1-2: Nnsacf_NSAC re-used Data Types\n\nThis clause defines the structures to be used in resource representations.\nTable 6.1.6.2.2-1: Definition of type UeACRequestData\n\nTable 6.1.6.2.3-1: Definition of type UeACResponseData\n\nTable 6.1.6.2.4-1: Definition of type EACNotification\n\nTable 6.1.6.2.5-1: Definition of type AcuOperationItem\n\nTable 6.1.6.2.6-1: Definition of type AcuFailureItem\n\nTable 6.1.6.2.7-1: Definition of type PduACRequestData\n\nTable 6.1.6.2.8-1: Definition of type PduACResponseData\n\nTable 6.1.6.2.9-1: Definition of type UeACRequestInfo\n\nTable 6.1.6.2.7-1: Definition of type PduACRequestData\n\nTable 6.1.6.2.11-1: Definition of type UeAdmissionValue\n\nTable 6.1.6.2.12-1: Definition of type PduAdmissionValue\n\nTable 6.1.6.2.13-1: Definition of type ACUpdateData\n\nTable 6.1.6.2.14-1: Definition of type QuotaUpdateRequestData\n\nTable 6.1.6.2.15-1: Definition of type QuotaUpdateResponseData\n\nThis clause defines simple data types and enumerations that can be referenced from data structures defined in the previous clauses.\nThe simple data types defined in table 6.1.6.3.2-1 shall be supported.\nTable 6.1.6.3.2-1: Simple data types\n\nThe enumeration EACMode represents the mode of Early Admission Control. It shall comply with the provisions defined in table 6.1.6.3.3-1.\nTable 6.1.6.3.3-1: Enumeration EACMode\n\nThe enumeration AcuFlag indicates the operation (i.e. increase or decrease) applied to a list of S-NSSAI during the NSAC procedure. It shall comply with the provisions defined in table 6.1.6.3.4-1.\nTable 6.1.6.3.4-1: Enumeration AcuFlag\n\nThe enumerationAcuFailureReason indicates the operation result of the NSAC procedure for an individual S-NSSAI. It shall comply with the provisions defined in table 6.1.6.3.5-1.\nTable 6.1.6.3.5-1: Enumeration AcuFailureReason\n\nThe enumeration SliceQuotaType indicates the type of the quota (i.e. maximum number of registered UEs and/or maximum number of PDU sessions) for an S-NSSAI for which the fetching of the available quota is performed during the NSAC procedure. It shall comply with the provisions defined in table 6.1.6.3.6-1.\nTable 6.1.6.3.6-1: Enumeration SliceQuotaType\n\nThe enumeration NsacAdmissionMode indicates the mode (i.e. VPLMN NSAC admission mode or VPLMN with HPLMN assistance NSAC admission mode) applied to an S-NSSAI during the NSAC procedure. It shall comply with the provisions defined in table 6.1.6.3.7-1.\nTable 6.1.6.3.7-1: Enumeration NsacAdmissionMode\n\nIn this release, no alternative data types or combinations of data types are defined in this specification.\nIn this release, no binary data types are defined in this specification.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.6.1-1: Nnsacf_NSAC specific Data Types",
                                    "table number": 35,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.1-2: Nnsacf_NSAC re-used Data Types",
                                    "table number": 36,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.2-1: Definition of type UeACRequestData",
                                    "table number": 37,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.3-1: Definition of type UeACResponseData",
                                    "table number": 38,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.4-1: Definition of type EACNotification",
                                    "table number": 39,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.5-1: Definition of type AcuOperationItem",
                                    "table number": 40,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.6-1: Definition of type AcuFailureItem",
                                    "table number": 41,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.7-1: Definition of type PduACRequestData",
                                    "table number": 42,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.8-1: Definition of type PduACResponseData",
                                    "table number": 43,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.9-1: Definition of type UeACRequestInfo",
                                    "table number": 44,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.7-1: Definition of type PduACRequestData",
                                    "table number": 45,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.11-1: Definition of type UeAdmissionValue",
                                    "table number": 46,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.12-1: Definition of type PduAdmissionValue",
                                    "table number": 47,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.13-1: Definition of type ACUpdateData",
                                    "table number": 48,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.14-1: Definition of type QuotaUpdateRequestData",
                                    "table number": 49,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.2.15-1: Definition of type QuotaUpdateResponseData",
                                    "table number": 50,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.2-1: Simple data types",
                                    "table number": 51,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.3-1: Enumeration EACMode",
                                    "table number": 52,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.4-1: Enumeration AcuFlag",
                                    "table number": 53,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.5-1: Enumeration AcuFailureReason",
                                    "table number": 54,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.6-1: Enumeration SliceQuotaType",
                                    "table number": 55,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.1.6.3.7-1: Enumeration NsacAdmissionMode",
                                    "table number": 56,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.7\tError Handling",
                            "text_content": "For the Nnsacf_NSAC API, HTTP error responses shall be supported as specified in clause 4.8 of 3GPP TS 29.501 [5]. Protocol errors and application errors specified in table 5.2.7.2-1 of 3GPP TS 29.500 [4] shall be supported for an HTTP method if the corresponding HTTP status codes are specified as mandatory for that HTTP method in table 5.2.7.1-1 of 3GPP TS 29.500 [4].\nIn addition, the requirements in the following clauses are applicable for the Nnsacf_NSAC API.\nNo specific procedures for the Nnsacf_NSAC service are specified.\nThe application errors defined for the Nnsacf_NSAC service are listed in Table 6.1.7.3-1.\nTable 6.1.7.3-1: Application errors\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.7.3-1: Application errors",
                                    "table number": 57,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.8\tFeature negotiation",
                            "text_content": "The optional features in table 6.1.8-1 are defined for the Nnsacf_NSAC API. They shall be negotiated using the extensibility mechanism defined in clause 6.6 of 3GPP TS 29.500 [4].\nThe syntax of the supportedFeatures attribute is defined in clause 5.2.2 of 3GPP TS 29.571 [16].\nThe following features are defined for the Nnsacf_NSAC service.\nTable 6.1.8-1: Supported Features\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.8-1: Supported Features",
                                    "table number": 58,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.9\tSecurity",
                            "text_content": "As indicated in 3GPP TS 33.501 [8] and 3GPP TS 29.500 [4], the access to the Nnsacf_NSAC API may be authorized by means of the OAuth2 protocol (see IETF RFC 6749 [9]), based on local configuration, using the \"Client Credentials\" authorization grant, where the NRF (see 3GPP TS 29.510 [10]) plays the role of the authorization server.\nIf OAuth2 is used, an NF Service Consumer, prior to consuming services offered by the Nnsacf_NSAC API, shall obtain a \"token\" from the authorization server, by invoking the Access Token Request service, as described in 3GPP TS 29.510 [10], clause 5.4.2.2.\nNOTE:\tWhen multiple NRFs are deployed in a network, the NRF used as authorization server is the same NRF that the NF Service Consumer used for discovering the Nnsacf_NSAC service.\nThe Nnsacf_NSAC API defines the following scopes for Oauth2 authorization:\nTable 6.1.9-X: OAuth2 scopes defined in Nnsacf_NSAC API\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1.9-X: OAuth2 scopes defined in Nnsacf_NSAC API",
                                    "table number": 59,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.1.10\tHTTP redirection",
                            "text_content": "An HTTP request may be redirected to a different NSACF service instance within the same NSACF, or to a different NSACF of an NSACF set, when using direct or indirect communications (see 3GPP TS 29.500 [4]).\nAn SCP that reselects a different NSACF producer instance will return the NF Instance ID of the new NSACF producer instance in the 3gpp-Sbi-Producer-Id header, as specified in clause 6.10.3.4 of 3GPP TS 29.500 [4].\nIf an NSACF redirects a service request to a different NSACF using an 307 Temporary Redirect or 308 Permanent Redirect status code, the identity of the new NSACF towards which the service request is redirected shall be indicated in the 3gpp-Sbi-Target-Nf-Id header of the 307 Temporary Redirect or 308 Permanent Redirect response as specified in clause 6.10.9.1 of 3GPP TS 29.500 [4].\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.2\tNnsacf_SliceEventExposure Service API",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.2.1\tIntroduction",
                            "text_content": "The Nnsacf_SliceEventExposure shall use the Nnsacf_SliceEventExposure API.\nThe API URI of the Nnsacf_SliceEventExposure API shall be:\n{apiRoot}/<apiName>/<apiVersion>\nThe request URIs used in HTTP requests from the NF service consumer towards the NF service producer shall have the Resource URI structure defined in clause 4.4.1 of 3GPP TS 29.501 [5], i.e.:\n{apiRoot}/<apiName>/<apiVersion>/<apiSpecificResourceUriPart>\nwith the following components:\n-\tThe {apiRoot} shall be set as described in 3GPP TS 29.501 [5].\n-\tThe <apiName> shall be \"nnsacf-slice-ee\".\n-\tThe <apiVersion> shall be \"v1\".\n-\tThe <apiSpecificResourceUriPart> shall be set as described in clause 6.2.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.2\tUsage of HTTP",
                            "text_content": "HTTP/2, IETF RFC 7540 [11], shall be used as specified in clause 5 of 3GPP TS 29.500 [4].\nHTTP/2 shall be transported as specified in clause 5.3 of 3GPP TS 29.500 [4].\nThe OpenAPI [6] specification of HTTP messages and content bodies for the Nnsacf_SliceEventExposure API is contained in Annex A.\nSee clause 5.2.2 of 3GPP TS 29.500 [4] for the usage of HTTP standard headers.\nJSON, IETF RFC 8259 [12], shall be used as content type of the HTTP bodies specified in the present specification as specified in clause 5.4 of 3GPP TS 29.500 [4]. The use of the JSON format shall be signalled by the content type \"application/json\".\n\"Problem Details\" JSON object shall be used to indicate additional details of the error in a HTTP response body and shall be signalled by the content type \"application/problem+json\", as defined in IETF RFC 9457 [13].\nThe mandatory HTTP custom header fields specified in clause 5.2.3.2 of 3GPP TS 29.500 [4] shall be supported, and the optional HTTP custom header fields specified in clause 5.2.3.3 of 3GPP TS 29.500 [4] may be supported.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.3\tResources",
                            "text_content": "The figure 6.2.3.1-1 describes the resource URI structure of the Nnsacf_SliceEventExposure API.\nThe figure depicts a resource URI structure of the Nnsacf_SliceEventExposure API, illustrating the various components and their relationships. The structure includes a base URI, a resource URI, and a resource URI for the slice event exposure. The figure provides a clear and concise representation of the API's structure, making it easier to understand and navigate.\nFigure 6.2.3.1-1: Resource URI structure of the Nnsacf_SliceEventExposure API\nTable 6.2.3.1-1 provides an overview of the resources and applicable HTTP methods.\nTable 6.2.3.1-1: Resources and methods overview\n\nThis resource represents a collection of subscriptions created by NF service consumers of Nnsacf_SliceEventExposure service.\nThis resource is modelled as the Collection resource archetype (see clause C.2 of 3GPP TS 29.501 [5]).\nResource URI: {apiRoot}/nnsacf-slice-ee/<apiVersion>/subscriptions\nThis resource shall support the resource URI variables defined in table 6.2.3.2.2-1.\nTable 6.2.3.2.2-1: Resource URI variables for this resource\n\n6.2.3.2.3.1\tPOST\nThis method shall support the URI query parameters specified in table 6.2.3.2.3.1-1.\nTable 6.2.3.2.3.1-1: URI query parameters supported by the POST method on this resource\n\nThis method shall support the request data structures specified in table 6.2.3.2.3.1-2 and the response data structures and response codes specified in table 6.2.3.2.3.1-3.\nTable 6.2.3.2.3.1-2: Data structures supported by the POST Request Body on this resource\n\nTable 6.2.3.2.3.1-3: Data structures supported by the POST Response Body on this resource\n\nTable 6.2.3.2.3.1-4: Headers supported by the 201 Response Code on this resource\n\nTable 6.2.3.2.3.1-5: Headers supported by the 307 Response Code on this resource\n\nTable 6.2.3.2.3.1-6: Headers supported by the 308 Response Code on this resource\n\nIn this release of this specification, no custom operations associated to this resource is defined.\nThis resource represents an individual of subscription created by NF service consumers of Nnsacf_SliceEventExposure service.\nThis resource is modelled as the Document resource archetype (see clause C.1 of 3GPP TS 29.501 [5]).\nResource URI: {apiRoot}/nnsacf-slice-ee/<apiVersion>/subscriptions/{subscriptionId}\nThis resource shall support the resource URI variables defined in table 6.2.3.3.2-1.\nTable 6.2.3.3.2-1: Resource URI variables for this resource\n\n6.2.3.3.3.1\tPATCH\nThis method shall support the URI query parameters specified in table 6.2.3.3.3.1-1.\nTable 6.2.3.3.3.1-1: URI query parameters supported by the PATCH method on this resource\n\nThis method shall support the request data structures specified in table 6.2.3.3.3.1-2 and the response data structures and response codes specified in table 6.2.3.3.3.1-3.\nTable 6.2.3.3.3.1-2: Data structures supported by the PATCH Request Body on this resource\n\nTable 6.2.3.3.3.1-3: Data structures supported by the PATCH Response Body on this resource\n\nTable 6.2.3.3.3.1-4: Headers supported by the 307 Response Code on this resource\n\nTable 6.2.3.3.3.1-5: Headers supported by the 308 Response Code on this resource\n\n6.2.3.3.3.2\tPUT\nThis method shall support the URI query parameters specified in table 6.2.3.3.3.2-1.\nTable 6.2.3.3.3.2-1: URI query parameters supported by the PUT method on this resource\n\nThis method shall support the request data structures specified in table 6.2.3.3.3.2-2 and the response data structures and response codes specified in table 6.2.3.3.3.2-3.\nTable 6.2.3.3.3.2-2: Data structures supported by the PUT Request Body on this resource\n\nTable 6.2.3.3.3.2-3: Data structures supported by the PUT Response Body on this resource\n\nTable 6.2.3.3.3.2-4: Headers supported by the 307 Response Code on this resource\n\nTable 6.2.3.3.3.2-5: Headers supported by the 308 Response Code on this resource\n\n6.2.3.3.3.3\tDELETE\nThis method shall support the URI query parameters specified in table 6.2.3.3.3.3-1.\nTable 6.2.3.3.3.3-1: URI query parameters supported by the DELETE method on this resource\n\nThis method shall support the request data structures specified in table 6.2.3.3.3.3-2 and the response data structures and response codes specified in table 6.2.3.3.3.3-3.\nTable 6.2.3.3.3.3-2: Data structures supported by the DELETE Request Body on this resource\n\nTable 6.2.3.3.3.3-3: Data structures supported by the DELETE Response Body on this resource\n\nTable 6.2.3.3.3.3-4: Headers supported by the 307 Response Code on this resource\n\nTable 6.2.3.3.3.3-5: Headers supported by the 308 Response Code on this resource\n\nIn this release of this specification, no custom operations associated to this resource is defined.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.3.1-1: Resources and methods overview",
                                    "table number": 60,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.2.2-1: Resource URI variables for this resource",
                                    "table number": 61,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.2.3.1-1: URI query parameters supported by the POST method on this resource",
                                    "table number": 62,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.2.3.1-2: Data structures supported by the POST Request Body on this resource",
                                    "table number": 63,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.2.3.1-3: Data structures supported by the POST Response Body on this resource",
                                    "table number": 64,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.2.3.1-4: Headers supported by the 201 Response Code on this resource",
                                    "table number": 65,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.2.3.1-5: Headers supported by the 307 Response Code on this resource",
                                    "table number": 66,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.2.3.1-6: Headers supported by the 308 Response Code on this resource",
                                    "table number": 67,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.2-1: Resource URI variables for this resource",
                                    "table number": 68,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.1-1: URI query parameters supported by the PATCH method on this resource",
                                    "table number": 69,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.1-2: Data structures supported by the PATCH Request Body on this resource",
                                    "table number": 70,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.1-3: Data structures supported by the PATCH Response Body on this resource",
                                    "table number": 71,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.1-4: Headers supported by the 307 Response Code on this resource",
                                    "table number": 72,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.1-5: Headers supported by the 308 Response Code on this resource",
                                    "table number": 73,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.2-1: URI query parameters supported by the PUT method on this resource",
                                    "table number": 74,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.2-2: Data structures supported by the PUT Request Body on this resource",
                                    "table number": 75,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.2-3: Data structures supported by the PUT Response Body on this resource",
                                    "table number": 76,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.2-4: Headers supported by the 307 Response Code on this resource",
                                    "table number": 77,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.2-5: Headers supported by the 308 Response Code on this resource",
                                    "table number": 78,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.3-1: URI query parameters supported by the DELETE method on this resource",
                                    "table number": 79,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.3-2: Data structures supported by the DELETE Request Body on this resource",
                                    "table number": 80,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.3-3: Data structures supported by the DELETE Response Body on this resource",
                                    "table number": 81,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.3-4: Headers supported by the 307 Response Code on this resource",
                                    "table number": 82,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.3.3.3.3-5: Headers supported by the 308 Response Code on this resource",
                                    "table number": 83,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.4\tCustom Operations without associated resources",
                            "text_content": "In this release of this specification, no custom operations without associated resources are defined.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.5\tNotifications",
                            "text_content": "This clause specifies the notifications provided by the Nnsacf_SliceEventExposure service.\nTable 6.2.5.1-1: Notifications overview\n\nIf a NF service consumer has subscribed to an event(s) supported by Nnsacf_SliceEventExposure service, when NSACF aware of a state change of the event, NSACF shall create a notification including the event state report, and shall deliver the notification to the call-back URI, following Subscribe/Notify mechanism defined in 3GPP TS 29.501 [5].\nCall-back URI: {callbackUri}\nCall-back URI is \"eventNotifyUri\" provided by NF Service Consumer during creation of the subscription.\n6.2.5.2.2.1\tPOST\nThis method shall support the request data structures specified in table 6.2.5.2.2.1-1 and the response data structures and response codes specified in table 6.2.5.2.2.1-2.\nTable 6.2.5.2.2.1-2: Data structures supported by the POST Request Body\n\nTable 6.2.5.2.2.1-3: Data structures supported by the POST Response Body\n\nTable 6.2.5.2.2.1-4: Headers supported by the 307 Response Code on this resource\n\nTable 6.2.5.2.2.1-5: Headers supported by the 308 Response Code on this resource\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.5.1-1: Notifications overview",
                                    "table number": 84,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.5.2.2.1-2: Data structures supported by the POST Request Body",
                                    "table number": 85,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.5.2.2.1-3: Data structures supported by the POST Response Body",
                                    "table number": 86,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.5.2.2.1-4: Headers supported by the 307 Response Code on this resource",
                                    "table number": 87,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.5.2.2.1-5: Headers supported by the 308 Response Code on this resource",
                                    "table number": 88,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.6\tData Model",
                            "text_content": "This clause specifies the application data model supported by the API.\nTable 6.2.6.1-1 specifies the data types defined for the Nnsacf_SliceEventExposure service based interface protocol.\nTable 6.2.6.1-1: Nnsacf_SliceEventExposure specific Data Types\n\nTable 6.2.6.1-2 specifies data types re-used by the Nnsacf_SliceEventExposure service based interface protocol from other specifications, including a reference to their respective specifications and when needed, a short description of their use within the Nnsacf_SliceEventExposure service based interface.\nTable 6.2.6.1-2: Nnsacf_SliceEventExposure re-used Data Types\n\nThis clause defines the structures to be used in resource representations.\nTable 6.2.6.2.2-1: Definition of type SACEventSubscription\n\nTable 6.2.6.2.3-1: Definition of type CreatedSACEventSubscription\n\nTable 6.2.6.2.4-1: Definition of type SACEventReport\n\nTable 6.2.6.2.5-1: Definition of type SACEvent\n\nTable 6.2.6.2.6-1: Definition of type SACEventReportItem\n\nTable 6.2.6.2.7-1: Definition of type SACEventState\n\nThis clause defines simple data types and enumerations that can be referenced from data structures defined in the previous clauses.\nThe simple data types defined in table 6.2.6.3.2-1 shall be supported.\nTable 6.2.6.3.2-1: Simple data types\n\nTable 6.2.6.3.3-1: Enumeration SACEventType\n\nTable 6.2.6.3.4-1: Enumeration SACEventTrigger\n\nIn this release, no alternative data types or combinations of data types are defined in this specification.\nIn this release, no binary data types are defined in this specification.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.6.1-1: Nnsacf_SliceEventExposure specific Data Types",
                                    "table number": 89,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.1-2: Nnsacf_SliceEventExposure re-used Data Types",
                                    "table number": 90,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.2.2-1: Definition of type SACEventSubscription",
                                    "table number": 91,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.2.3-1: Definition of type CreatedSACEventSubscription",
                                    "table number": 92,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.2.4-1: Definition of type SACEventReport",
                                    "table number": 93,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.2.5-1: Definition of type SACEvent",
                                    "table number": 94,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.2.6-1: Definition of type SACEventReportItem",
                                    "table number": 95,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.2.7-1: Definition of type SACEventState",
                                    "table number": 96,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.3.2-1: Simple data types",
                                    "table number": 97,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.3.3-1: Enumeration SACEventType",
                                    "table number": 98,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.2.6.3.4-1: Enumeration SACEventTrigger",
                                    "table number": 99,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.7\tError Handling",
                            "text_content": "For the Nnsacf_SliceEventExposure API, HTTP error responses shall be supported as specified in clause 4.8 of 3GPP TS 29.501 [5]. Protocol errors and application errors specified in table 5.2.7.2-1 of 3GPP TS 29.500 [4] shall be supported for an HTTP method if the corresponding HTTP status codes are specified as mandatory for that HTTP method in table 5.2.7.1-1 of 3GPP TS 29.500 [4].\nIn addition, the requirements in the following clauses are applicable for the Nnsacf_SliceEventExposure API.\nNo specific procedures for the Nnsacf_SliceEventExposure service are specified.\nThe application errors defined for the Nnsacf_SliceEventExposure service are listed in Table 6.2.7.3-1.\nTable 6.2.7.3-1: Application errors\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.7.3-1: Application errors",
                                    "table number": 100,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.8\tFeature negotiation",
                            "text_content": "The optional features in table 6.3.8-1 are defined for the Nnsacf_SliceEventExposure API. They shall be negotiated using the extensibility mechanism defined in clause 6.6 of 3GPP TS 29.500 [4].\nTable 6.2.8-1: Supported Features\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2.8-1: Supported Features",
                                    "table number": 101,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.9\tSecurity",
                            "text_content": "As indicated in 3GPP TS 33.501 [8] and 3GPP TS 29.500 [4], the access to the Nnsacf_SliceEventExposure API may be authorized by means of the OAuth2 protocol (see IETF RFC 6749 [9]), based on local configuration, using the \"Client Credentials\" authorization grant, where the NRF (see 3GPP TS 29.510 [10]) plays the role of the authorization server.\nIf OAuth2 is used, an NF Service Consumer, prior to consuming services offered by the Nnsacf_SliceEventExposure API, shall obtain a \"token\" from the authorization server, by invoking the Access Token Request service, as described in 3GPP TS 29.510 [10], clause 5.4.2.2.\nNOTE:\tWhen multiple NRFs are deployed in a network, the NRF used as authorization server is the same NRF that the NF Service Consumer used for discovering the Nnsacf_SliceEventExposure service.\nThe Nnsacf_SliceEventExposure API defines a single scope \"nnsacf-slice-ee\" for the entire service, and it does not define any additional scopes at resource or operation level.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.10\tHTTP redirection",
                            "text_content": "An HTTP request may be redirected to a different NSACF service instance within the same NSACF, or to a different NSACF of an NSACF set, when using direct or indirect communications (see 3GPP TS 29.500 [4]).\nAn SCP that reselects a different NSACF producer instance will return the NF Instance ID of the new NSACF producer instance in the 3gpp-Sbi-Producer-Id header, as specified in clause 6.10.3.4 of 3GPP TS 29.500 [4].\nIf an NSACF redirects a service request to a different NSACF using an 307 Temporary Redirect or 308 Permanent Redirect status code, the identity of the new NSACF towards which the service request is redirected shall be indicated in the 3gpp-Sbi-Target-Nf-Id header of the 307 Temporary Redirect or 308 Permanent Redirect response as specified in clause 6.10.9.1 of 3GPP TS 29.500 [4].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "A.1\tGeneral",
            "description": "This Annex specifies the formal definition of the API(s) defined in the present specification. It consists of OpenAPI  specifications in YAML format.\nThis Annex takes precedence when being discrepant to other parts of the specification with respect to the encoding of information elements and methods within the API(s).\nNOTE 1:\tThe semantics and procedures, as well as conditions, e.g. for the applicability and allowed combinations of attributes or values, not expressed in the OpenAPI definitions but defined in other parts of the specification also apply.\nInformative copies of the OpenAPI specification files contained in this 3GPP Technical Specification are available on a Git-based repository that uses the GitLab software version control system (see 3GPP TS 29.501 [5] clause 5.3.1 and 3GPP TR 21.900 [7] clause 5B).\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.2\tNnsacf_NSAC API",
            "description": "openapi: 3.0.0\n\ninfo:\ntitle: Nnsacf_NSAC\nversion: 1.1.0-alpha.4\ndescription: |\nNnsacf_NSAC Service.\n© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).\nAll rights reserved.\n\nexternalDocs:\ndescription: 3GPP TS 29.536 V18.4.0; 5G System; Network Slice Admission Control Services; Stage 3.\nurl: https://www.3gpp.org/ftp/Specs/archive/29_series/29.536/\n\nservers:\n- url: '{apiRoot}/nnsacf-nsac/v1'\nvariables:\napiRoot:\ndefault: https://example.com\ndescription: apiRoot as defined in clause 4.4 of 3GPP TS 29.501\n\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nnsacf-nsac\n\npaths:\n/slices/ues:\npost:\nsummary: Network Slice Admission Control on the Number of UEs\noperationId: NumOfUEsUpdate\ntags:\n- slice collection\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nnsacf-nsac\n- oAuth2ClientCredentials:\n- nnsacf-nsac\n- nnsacf-nsac:slice-ues\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/UeACRequestData'\nrequired: true\nresponses:\n'200':\ndescription: Partial successful ACU operation\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/UeACResponseData'\n'204':\ndescription: Successful ACU operation\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\ndescription: Unsucessful ACU operation - Bad Request\ncontent:\napplication/problem+json:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\ndescription: Unsuccessful ACU operation – Slice Not Subject to NSAC\ncontent:\napplication/problem+json:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'\n'404':\ndescription: Unsuccessful ACU operation – Slice Not Found\ncontent:\napplication/problem+json:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\n'504':\n$ref: 'TS29571_CommonData.yaml#/components/responses/504'\ncallbacks:\neacNotification:\n'{request.body#/eacNotificationUri}':\npost:\nrequestBody:\nrequired: true\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/EacNotification'\nresponses:\n'204':\ndescription: slice re-authentication notification response\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\ndescription: Unexpected error\n\n/slices/pdus:\npost:\nsummary: Network Slice Admission Control on the number of PDU Sessions\noperationId: NumOfPDUsUpdate\ntags:\n- slice collection\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nnsacf-nsac\n- oAuth2ClientCredentials:\n- nnsacf-nsac\n- nnsacf-nsac:slice-pdus\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/PduACRequestData'\nrequired: true\nresponses:\n'200':\ndescription: Partial successful ACU operation\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/PduACResponseData'\n'204':\ndescription: Successful ACU operation\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\ndescription: Unsucessful ACU operation - Bad Request\ncontent:\napplication/problem+json:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\ndescription: Unsuccessful ACU operation – Slice Not Subject to NSAC\ncontent:\napplication/problem+json:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'\n'404':\ndescription: Unsuccessful ACU operation – Slice Not Found\ncontent:\napplication/problem+json:\nschema:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/ProblemDetails'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\n'504':\n$ref: 'TS29571_CommonData.yaml#/components/responses/504'\n\n/slices/local-configs/update:\npost:\nsummary: >\nNetwork Slice Admission Control update of the local maximum number of registered UEs and/or\nPDU sessions of the network slice at NSACF.\noperationId: LocalNumberUpdate\ntags:\n- slice collection\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nnsacf-nsac\n- oAuth2ClientCredentials:\n- nnsacf-nsac\n- nnsacf-nsac:local-configs-update\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/ACUpdateData'\nrequired: true\nresponses:\n'204':\ndescription: Successful ACU operation\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\n'504':\n$ref: 'TS29571_CommonData.yaml#/components/responses/504'\n\n/slices/roaming-quotas/query:\npost:\nsummary: >\nNetwork Slice Admission Control fetching of the maximum number of registered UEs and/or\nnumber of PDU sessions of the network slice at NSACF.\noperationId: QuotaUpdate\ntags:\n- slice collection\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nnsacf-nsac\n- oAuth2ClientCredentials:\n- nnsacf-nsac\n- nnsacf-nsac:roaming-quotas-query\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/QuotaUpdateRequestData'\nrequired: true\nresponses:\n'200':\ndescription: Successful operation\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/QuotaUpdateResponseData'\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\n'504':\n$ref: 'TS29571_CommonData.yaml#/components/responses/504'\n\n\ncomponents:\n\nsecuritySchemes:\noAuth2ClientCredentials:\ntype: oauth2\nflows:\nclientCredentials:\ntokenUrl: '{nrfApiRoot}/oauth2/token'\nscopes:\nnnsacf-nsac: Access to the Nnsacf_NSAC API\nnnsacf-nsac:slice-ues: >\nAccess to service operations applying to the collection of slice subject to NSAC for\nUEs\nnnsacf-nsac:slice-pdus: >\nAccess to service operations applying to the collection of slice subject to NSAC for\nPDU sessions\nnnsacf-nsac:local-configs-update: >\nAccess to the NSAC update of the local maximum number of registered UEs and/or\nPDU sessions of the network slice at NSACF\n\nschemas:\n\n#\n# STRUCTURED DATA TYPES:\n#\n\nUeACRequestData:\ntype: object\nproperties:\nueACRequestInfo:\ntype: array\nitems:\n$ref: '#/components/schemas/UeACRequestInfo'\nminItems: 1\nnfId:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/NfInstanceId'\nnfType:\n$ref: 'TS29510_Nnrf_NFManagement.yaml#/components/schemas/NFType'\neacNotificationUri:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uri'\nnsacServiceArea:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/NsacSai'\nsupportedFeatures:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nrequired:\n- ueACRequestInfo\n- nfId\n\nUeACRequestInfo:\ntype: object\nproperties:\nsupi:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Supi'\nanType:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/AccessType'\nacuOperationList:\ntype: array\nitems:\n$ref: '#/components/schemas/AcuOperationItem'\nminItems: 1\nadditionalAnType:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/AccessType'\nrequired:\n- supi\n- anType\n- acuOperationList\n\nUeACResponseData:\ntype: object\nproperties:\nacuFailureList:\ndescription: A map (list of key-value pairs) where the key of the map shall be UE's supi\ntype: object\nadditionalProperties:\ntype: array\nitems:\n$ref: '#/components/schemas/AcuFailureItem'\nminItems: 1\nminProperties: 1\nueAdmissionList:\ntype: array\nitems:\n$ref: '#/components/schemas/UeAdmissionValue'\nminItems: 1\nsupportedFeatures:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\n\nAcuOperationItem:\ntype: object\nproperties:\nupdateFlag:\n$ref: '#/components/schemas/AcuFlag'\nsnssai:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'\nplmnId:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PlmnId'\nueRegInd:\ntype: boolean\nenum:\n- true\nservingPlmnId:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PlmnId'\nnsacMode:\n$ref: '#/components/schemas/NsacAdmissionMode'\nrequired:\n- updateFlag\n- snssai\n\nAcuFailureItem:\ntype: object\nproperties:\nsnssai:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'\nreason:\n$ref: '#/components/schemas/AcuFailureReason'\nplmnId:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PlmnId'\npduSessionId:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PduSessionId'\nrequired:\n- snssai\n\nEacNotification:\ndescription: A map (list of key-value pairs) where Snssai converted to a string serves as key\ntype: object\nadditionalProperties:\n$ref: '#/components/schemas/EACMode'\nminProperties: 1\n\nPduACRequestData:\ntype: object\nproperties:\npduACRequestInfo:\ntype: array\nitems:\n$ref: '#/components/schemas/PduACRequestInfo'\nminItems: 1\nnfId:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/NfInstanceId'\npgwFqdn:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Fqdn'\nnsacServiceArea:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/NsacSai'\nsupportedFeatures:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nrequired:\n- pduACRequestInfo\n\nPduACRequestInfo:\ntype: object\nproperties:\nsupi:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Supi'\nanType:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/AccessType'\npduSessionId:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PduSessionId'\nacuOperationList:\ntype: array\nitems:\n$ref: '#/components/schemas/AcuOperationItem'\nminItems: 1\nmaxItems: 2\nadditionalAnType:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/AccessType'\nrequired:\n- supi\n- anType\n- pduSessionId\n- acuOperationList\n\nPduACResponseData:\ntype: object\nproperties:\nacuFailureList:\ndescription: A map (list of key-value pairs) where the key of the map shall be UE's supi\ntype: object\nadditionalProperties:\ntype: array\nitems:\n$ref: '#/components/schemas/AcuFailureItem'\nminItems: 1\nmaxItems: 2\nminProperties: 1\npduAdmissionList:\ntype: array\nitems:\n$ref: '#/components/schemas/PduAdmissionValue'\nminItems: 1\nsupportedFeatures:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\n\nUeAdmissionValue:\ntype: object\nproperties:\nsnssai:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'\nmaxNumUes:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uinteger'\nueAdmissionThreshold:\ntype: integer\nminimum: 0\nmaximum: 100\nrequired:\n- snssai\n\nPduAdmissionValue:\ntype: object\nproperties:\nsnssai:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'\nmaxNumPdus:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uinteger'\nrequired:\n- snssai\n- maxNumPdus\n\nACUpdateData:\ntype: object\nproperties:\nsnssai:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'\nmaxUesNumber:\ntype: integer\nmaxPdusNumber:\ntype: integer\nrequired:\n- snssai\n\nQuotaUpdateRequestData:\ntype: object\nproperties:\nsnssai:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'\nplmnId:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PlmnId'\nquotaType:\nitems:\n$ref: '#/components/schemas/SliceQuotaType'\nrequired:\n- snssai\n- plmnId\n- quotaType\n\nQuotaUpdateResponseData:\ntype: object\nproperties:\nsnssai:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'\nmaxUesNumber:\ntype: integer\nmaxPdusNumber:\ntype: integer\nrequired:\n- snssai\n\n\n#\n# SIMPLE DATA TYPES\n#\n\n\n#\n# ENUMERATIONS\n#\n\nEACMode:\nanyOf:\n- type: string\nenum:\n- ACTIVE\n- DEACTIVE\n- type: string\ndescription: >\nThis string provides forward-compatibility with future\nextensions to the enumeration but is not used to encode\ncontent defined in the present version of this API.\ndescription: >\nEAC mode. Possible values are\n- ACTIVE\n- DEACTIVE\n\nAcuFlag:\nanyOf:\n- type: string\nenum:\n- INCREASE\n- DECREASE\n- UPDATE\n- type: string\ndescription: >\nThis string provides forward-compatibility with future\nextensions to the enumeration but is not used to encode\ncontent defined in the present version of this API.\ndescription: >\nUpdate Flag of ACU operation. Possible values are\n- INCREASE\n- DECREASE\n- UPDATE\n\nAcuFailureReason:\nanyOf:\n- type: string\nenum:\n- SLICE_NOT_FOUND\n- EXCEED_MAX_UE_NUM\n- EXCEED_MAX_UE_NUM_3GPP\n- EXCEED_MAX_UE_NUM_N3GPP\n- EXCEED_MAX_PDU_NUM\n- EXCEED_MAX_PDU_NUM_3GPP\n- EXCEED_MAX_PDU_NUM_N3GPP\n- type: string\ndescription: >\nThis string provides forward-compatibility with future\nextensions to the enumeration but is not used to encode\ncontent defined in the present version of this API.\ndescription: >\nFailure Reason of ACU operation to an S-NSSAI. Possible values are\n- SLICE_NOT_FOUND\n- EXCEED_MAX_UE_NUM\n- EXCEED_MAX_UE_NUM_3GPP\n- EXCEED_MAX_UE_NUM_N3GPP\n- EXCEED_MAX_PDU_NUM\n- EXCEED_MAX_PDU_NUM_3GPP\n- EXCEED_MAX_PDU_NUM_N3GPP\n\nSliceQuotaType:\nanyOf:\n- type: string\nenum:\n- MAX_UE_NUM\n- MAX_PDU_NUM\n- BOTH\n- type: string\ndescription: >\nThis string provides forward-compatibility with future\nextensions to the enumeration but is not used to encode\ncontent defined in the present version of this API.\ndescription: >\nSlice quota type. Possible values are\n- MAX_UE_NUM\n- MAX_PDU_NUM\n- BOTH\n\nNsacAdmissionMode:\ndescription: >\nIndicates the NSAC admission mode applied in roaming case.\nanyOf:\n- type: string\nenum:\n- VPLMN_ADMISSION\n- VPLMN_WITH_HPLMN_ASSISTANCE\n- type: string\ndescription: >\nThis string provides forward-compatibility with future\nextensions to the enumeration but is not used to encode\ncontent defined in the present version of this API.\n- VPLMN_ADMISSION\n- VPLMN_WITH_HPLMN_ASSISTANCE\n\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.3\tNnsacf_SliceEventExposure API",
            "description": "openapi: 3.0.0\n\ninfo:\ntitle: Nnsacf_SliceEventExposure\nversion: 1.1.0-alpha.4\ndescription: |\nNnsacf_SliceEventExposure Service.\n© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).\nAll rights reserved.\n\nexternalDocs:\ndescription: 3GPP TS 29.536 V18.4.0; 5G System; Network Slice Admission Control Services; Stage 3.\nurl: https://www.3gpp.org/ftp/Specs/archive/29_series/29.536/\n\nservers:\n- url: '{apiRoot}/nnsacf-slice-ee/v1'\nvariables:\napiRoot:\ndefault: https://example.com\ndescription: apiRoot as defined in clause 4.4 of 3GPP TS 29.501\n\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- nnsacf-slice-ee\n\npaths:\n/subscriptions:\npost:\nsummary: Nnsacf_SliceEventExposure Subscribe service Operation\ntags:\n- Subscriptions collection (Collection)\noperationId: CreateSubscription\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/SACEventSubscription'\nrequired: true\nresponses:\n'201':\ndescription: Subsription Created\nheaders:\nLocation:\ndescription: 'Contains the URI of the newly created resource, according to the structure: {apiRoot}/nnsacf-slice-ee/<apiVersion>/subscriptions/{subscriptionId}'\nrequired: true\nschema:\ntype: string\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/CreatedSACEventSubscription'\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\ndescription: Unexpected error\ncallbacks:\neventReport:\n'{$request.body#/subscription/eventNotifyUri}':\npost:\nsummary: Event Notificaiton Delivery\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/SACEventReport'\nrequired: true\nresponses:\n'204':\ndescription: Successful acknowledgement\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\ndescription: Unexpected error\n\n/subscriptions/{subscriptionId}:\npatch:\nsummary: Nnsacf_SliceEventExposure Subscribe partial modify service Operation\ntags:\n- Individual subscription (Document)\noperationId: PartialModifySubscription\nparameters:\n- name: subscriptionId\nin: path\nrequired: true\ndescription: Unique ID of the subscription to be modified\nschema:\ntype: string\nrequestBody:\ncontent:\napplication/json-patch+json:\nschema:\ntype: array\nitems:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/PatchItem'\nminItems: 1\nrequired: true\nresponses:\n'200':\ndescription: Subsription modified successfully\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/CreatedSACEventSubscription'\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\ndescription: Unexpected error\nput:\nsummary: Nnsacf_SliceEventExposure Subscribe complete modify service Operation\ntags:\n- Individual subscription (Document)\noperationId: CompleteModifySubscription\nparameters:\n- name: subscriptionId\nin: path\nrequired: true\ndescription: Unique ID of the subscription to be modified\nschema:\ntype: string\nrequestBody:\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/SACEventSubscription'\nrequired: true\nresponses:\n'200':\ndescription: Subsription modified successfully\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/CreatedSACEventSubscription'\n'204':\ndescription: Events subscription modification is accepted entirely\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\ndescription: Unexpected error\ndelete:\nsummary: Nnsacf_SliceEventExposure Unsubscribe service Operation\ntags:\n- Individual subscription (Document)\noperationId: DeleteSubscription\nparameters:\n- name: subscriptionId\nin: path\nrequired: true\ndescription: Unique ID of the subscription to be deleted\nschema:\ntype: string\nresponses:\n'204':\ndescription: Subsription deleted successfully\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\ndescription: Unexpected error\n\ncomponents:\n\nsecuritySchemes:\noAuth2ClientCredentials:\ntype: oauth2\nflows:\nclientCredentials:\ntokenUrl: '{nrfApiRoot}/oauth2/token'\nscopes:\nnnsacf-slice-ee: Access to the Nnsacf_SliceEventExposure API\n\nschemas:\n\n#\n# STRUCTURED DATA TYPES\n#\n\nSACEventSubscription:\ndescription: Request data to create the event subscription\ntype: object\nrequired:\n- event\n- eventNotifyUri\n- nfId\nproperties:\nevent:\n$ref: '#/components/schemas/SACEvent'\neventNotifyUri:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Uri'\nnfId:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/NfInstanceId'\nnotifyCorrelationId:\ntype: string\nmaxReports:\ntype: integer\nexpiry:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/DateTime'\nnotifFlag:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/NotificationFlag'\nmutingExcInstructions:\nwriteOnly: true\nallOf:\n- $ref: 'TS29571_CommonData.yaml#/components/schemas/MutingExceptionInstructions'\nmutingNotSettings:\nreadOnly: true\nallOf:\n- $ref: 'TS29571_CommonData.yaml#/components/schemas/MutingNotificationsSettings'\nsupportedFeatures:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\n\nCreatedSACEventSubscription:\ndescription: Response data on created event subscription\ntype: object\nrequired:\n- subscription\n- subscriptionId\nproperties:\nsubscription:\n$ref: '#/components/schemas/SACEventSubscription'\nsubscriptionId:\ntype: string\nreport:\n$ref: '#/components/schemas/SACEventReportItem'\nsupportedFeatures:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\n\nSACEventReport:\ndescription: Event notification\ntype: object\nrequired:\n- report\nproperties:\nreport:\n$ref: '#/components/schemas/SACEventReportItem'\nnotifyCorrelationId:\ntype: string\n\nSACEvent:\ndescription: Describes an event to be subscribed\ntype: object\nrequired:\n- eventType\n- eventFilter\nproperties:\neventType:\n$ref: '#/components/schemas/SACEventType'\neventTrigger:\n$ref: '#/components/schemas/SACEventTrigger'\neventFilter:\ntype: array\nitems:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'\nminItems: 1\nnotificationPeriod:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/DurationSec'\nnotifThreshold:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SACInfo'\nimmediateFlag:\ntype: boolean\ndefault: false\nvarRepPeriodInfo:\ntype: array\nitems:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/VarRepPeriod'\nminItems: 1\n\nSACEventReportItem:\ndescription: Represents a report triggered by a subscribed event type\ntype: object\nrequired:\n- eventType\n- eventState\n- timeStamp\n- eventFilter\nproperties:\neventType:\n$ref: '#/components/schemas/SACEventType'\neventState:\n$ref: '#/components/schemas/SACEventState'\ntimeStamp:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/DateTime'\neventFilter:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Snssai'\nsliceStautsInfo:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SACEventStatus'\n\nSACEventState:\ndescription: Represents the state of a subscribed event\ntype: object\nrequired:\n- active\nproperties:\nactive:\ntype: boolean\nremainReports:\ntype: integer\nremainDuration:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/DurationSec'\n\n#\n# SIMPLE DATA TYPES\n#\n\n\n#\n# ENUMERATIONS\n#\n\nSACEventType:\ndescription: Describes the supported event types\nanyOf:\n- type: string\nenum:\n- NUM_OF_REGD_UES\n- NUM_OF_ESTD_PDU_SESSIONS\n- type: string\n\nSACEventTrigger:\ndescription: Describes how NSACF should generate the report for the event\nanyOf:\n- type: string\nenum:\n- THRESHOLD\n- PERIODIC\n- type: string\n\n\n\n",
            "summary": "",
            "tables": [
                {
                    "description": "",
                    "table number": 102,
                    "summary": "",
                    "name": ""
                }
            ],
            "figures_meta_data": [],
            "subsections": []
        }
    ]
}