{
    "document_name": "29535-i30.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Specification has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\nIn the present document, modal verbs have the following meanings:\nshall\tindicates a mandatory requirement to do something\nshall not\tindicates an interdiction (prohibition) to do something\nThe constructions \"shall\" and \"shall not\" are confined to the context of normative provisions, and do not appear in Technical Reports.\nThe constructions \"must\" and \"must not\" are not used as substitutes for \"shall\" and \"shall not\". Their use is avoided insofar as possible, and they are not used in a normative context except in a direct citation from an external, referenced, non-3GPP document, or so as to maintain continuity of style when extending or modifying the provisions of such a referenced document.\nshould\tindicates a recommendation to do something\nshould not\tindicates a recommendation not to do something\nmay\tindicates permission to do something\nneed not\tindicates permission not to do something\nThe construction \"may not\" is ambiguous and is not used in normative elements. The unambiguous constructions \"might not\" or \"shall not\" are used instead, depending upon the meaning intended.\ncan\tindicates that something is possible\ncannot\tindicates that something is impossible\nThe constructions \"can\" and \"cannot\" are not substitutes for \"may\" and \"need not\".\nwill\tindicates that something is certain or expected to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nwill not\tindicates that something is certain or expected not to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nmight\tindicates a likelihood that something will happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nmight not\tindicates a likelihood that something will not happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nIn addition:\nis\t(or any other verb in the indicative mood) indicates a statement of fact\nis not\t(or any other negative verb in the indicative mood) indicates a statement of fact\nThe constructions \"is\" and \"is not\" do not indicate requirements.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document specifies the stage 3 protocol and data model for the AAnF Service Based Interface. It provides stage 3 protocol definitions and message flows, and specifies the API for each service offered by the AAnF.\nThe 5G System stage 2 architecture and procedures are specified in 3GPP TS 23.501 [2],  3GPP TS 23.502 [3] and 3GPP TS 33.535 [14].\nThe Technical Realization of the Service Based Architecture and the Principles and Guidelines for Services Definition are specified in 3GPP TS 29.500 [4] and 3GPP TS 29.501 [5].\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 23.501: \"System Architecture for the 5G System; Stage 2\".\n[3]\t3GPP TS 23.502: \"Procedures for the 5G System; Stage 2\".\n[4]\t3GPP TS 29.500: \"5G System; Technical Realization of Service Based Architecture; Stage 3\".\n[5]\t3GPP TS 29.501: \"5G System; Principles and Guidelines for Services Definition; Stage 3\".\n[6]\tOpenAPI: \"OpenAPI Specification Version 3.0.0\", https://spec.openapis.org/oas/v3.0.0.\n[7]\t3GPP TR 21.900: \"Technical Specification Group working methods\".\n[8]\t3GPP TS 33.501: \"Security architecture and procedures for 5G system\".\n[9]\tIETF RFC 6749: \"The OAuth 2.0 Authorization Framework\".\n[10]\t3GPP TS 29.510: \"5G System; Network Function Repository Services; Stage 3\".\n[11]\tIETF RFC 9113: \"HTTP/2\".\n[12]\tIETF RFC 8259: \"The JavaScript Object Notation (JSON) Data Interchange Format\".\n[13]\tIETF RFC 9457: \"Problem Details for HTTP APIs\".\n[14]\t3GPP TS 33.535: \"Authentication and Key Management for Applications (AKMA) based on 3GPP credentials in the 5G System (5GS)\".\n[15]\t3GPP TS 29.571: \"5G System; Common Data Types for Service Based Interfaces; Stage 3\".\n[16]\t3GPP TS 29.522: \"5G System; Network Exposure Function Northbound APIs; Stage 3\".\n[17]\t3GPP TS 29.503: \"5G System; Network Exposure Function Northbound APIs; Stage 3\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions, symbols and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tDefinitions",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms and definitions given in 3GPP TR 21.905 [1] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in 3GPP TR 21.905 [1].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tSymbols",
                    "description": "",
                    "summary": "",
                    "text_content": "No symbol applies in this release of the specification.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.3\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in 3GPP TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in 3GPP TR 21.905 [1].\nAAnF\tAKMA Anchor Function\nAF\tApplication Function\nAKMA\tAuthentication and Key Management for Applications\nA-KID\tAKMA Key IDentifier\nAUSF\tAUthentication Server Function\nNEF\tNetwork Exposure Function\nGPSI\tGeneric Public Subscription Identifier\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tServices offered by the AAnF",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "4.1\tIntroduction",
                    "description": "",
                    "summary": "",
                    "text_content": "The AKMA Anchor Service is used for the AAnF to store AKMA related key material and provide AKMA Application Key information. The AAnF offers to other NFs the following service:\n-\tNaanf_AKMA.\nTable 4.1-1: Service provided by AAnF\n\nTable 4.1-2 summarizes the corresponding APIs defined for this specification.\nTable 4.1-2: API Descriptions\n\n",
                    "tables": [
                        {
                            "description": "Table 4.1-1: Service provided by AAnF",
                            "table number": 3,
                            "summary": "",
                            "name": ""
                        },
                        {
                            "description": "Table 4.1-2: API Descriptions",
                            "table number": 4,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.2\tNaanf_AKMA Service",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.2.1\tService Description",
                            "text_content": "The Naanf_AKMA, as defined in 3GPP TS 33.535 [14] is provided by the AKMA Anchor Function (AAnF).\nThis service:\n-\tallows consumer NFs to store the AKMA related key material.\n-\tallows consumer NFs and the AFs to request the AKMA Application Key information for the UE.\nThe 5G System Architecture is defined in 3GPP TS 23.501 [2]. The Authentication and Key Management for Applications architecture is defined in 3GPP TS 33.535 [14].\nThe Naanf_AKMA service is part of the Naanf service-based interface exhibited by the AAnF.\nKnown consumers of the Naanf_AKMA service are:\n-\tAUthentication Server Function (AUSF)\n-\tApplication Function (AF)\n-\tNetwork Exposure Function (NEF)\nThe figure depicts a reference architecture for the Naanf_AKMA service, illustrating the various components and their interconnections. The SBI representation highlights the key elements such as the SBC, SBC-B, SBC-C, and SBC-D, as well as the SBC-E, SBC-F, and SBC-G. The figure also includes the SBC-H, SBC-I, and SBC-J, which are responsible for the communication between the SBC and the SBC-E. The SBC-K, SBC-L, and SBC-M are responsible for the communication between the SBC-E and the SBC-F. The SBC-N, SBC-O, and SBC-P are responsible for the communication between the SBC-F and the SBC-G. The SBC-Q, SBC-R, and SBC-T are responsible for the communication between the SBC-G and the SBC-H. The SBC-U, SBC-V, and SBC-W are responsible for the communication between the SBC-H and the SBC-I. The SBC-X, S\nFigure 4.2.1.2-1: Reference Architecture for the Naanf_AKMA Service; SBI representation\nThe figure depicts a reference architecture for the Naanf_AKMA service, illustrating the reference point representation used in the service. The architecture includes various components such as the reference point, reference point representation, and reference point management. This figure is crucial for understanding the service's design and functionality.\nFigure 4.2.1.2-2: Reference Architecture for the Naanf_AKMA Service; reference point representation\nThe AKMA Anchor Function (AAnF) is a functional element that stores the AKMA Anchor Key (KAKMA), A-KID for AKMA service, which is received from the AUSF after the UE completes a successful 5G primary authentication. The AAnF also generates the key material to be used between the UE and the Application Function (AF) and maintains the UE AKMA context as defined in 3GPP TS 33.535 [14].\nThe known NF service consumers are as follows:\nThe AUthentication Server Function (AUSF):\n-\tprovides the AKMA key material of the UE to the AAnF.\nThe Network Exposure Function (NEF):\n-\tenables and authorizes the external AF accessing AKMA service and forwards the request towards the AAnF;\n-\tperforms the AAnF selection.\nThe Application Function (AF):\n-\trequests for AKMA Application Key from the AAnF;\n-\tshall be authenticated and authorized by the operator network before receiving the KAF from the AAnF;\n-\tperforms the AAnF selection if the AF located inside the operator's network.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.2.2\tService Operations",
                            "text_content": "Table 4.2.2.1-1: Operations of the Naanf_AKMA Service\n\nThe procedures support:\n-\tstore the AKMA related key material by the NF service consumer to the AAnF as described in 3GPP TS 33.535 [14];\nFigure 4.2.2.2.2-1 illustrates the registration of AKMA related key material at the AAnF.\nThe figure depicts a registration process for AKMA related key material, with detailed steps and visual elements to illustrate the process.\nFigure 4.2.2.2.2-1: Registration of AKMA related key material\nIn order to store the AKMA related key material, the NF service consumer shall send an HTTP POST request message to the resource URI \"{apiRoot}/naanf-akma/<apiVersion>/register-anchorkey\" as shown in step 1 of figure 4.2.2.2.2-1, and the AkmaKeyInfo data structure as request body.\nThe AkmaKeyInfo data structure shall include:\n-\tSUPI as \"supi\" attribute;\n-\tA-KID as \"aKId\" attribute; and\n-\tKAKMA as \"kAkma\" attribute.\nIf the AAnF cannot successfully fulfil the received HTTP POST request due to an internal error or an error in the HTTP POST request, the AAnF shall send an HTTP error response as specified in clause 5.1.7.\nIf the AAnF determines the received HTTP POST request needs to be redirected, the AAnF shall send an HTTP redirect response as specified in clause 6.10.9 of 3GPP TS 29.500 [4].\nUpon successful reception of an HTTP POST request, the AAnF shall store the key material information and respond to the NF service consumer with a 200 OK status code, including the AkmaKeyInfo data structure as response body.\nThe Naanf_AKMA_ApplicationKey_Get service operation is used by an NF service consumer to request the AKMA Application Key information for the UE.\nFigure 4.2.2.3.2-1 shows a scenario where the NF service consumer sends a request to the AAnF to request and get the AKMA Application Key information for the UE (as shown in 3GPP TS 33.535 [14]).\nThe figure depicts a NF service consumer retrieving AKMA Application Key information, illustrating the process of obtaining the necessary data for the application. The NF service consumer is a key component in the NF service, responsible for managing the application's key information. The figure shows the consumer's interface, which includes a user interface (UI) and a command line interface (CLI). The UI allows the consumer to interact with the application, while the CLI provides the command-line interface for the application's management. The figure also includes a diagram of the application's key information, which is crucial for the consumer to retrieve and use.\nFigure 4.2.2.3.2-1: NF service consumer retrieve AKMA Application Key information\nThe NF service consumer shall invoke the Naanf_AKMA_ApplicationKey_Get service operation to retrieve the AKMA Application Key information. The NF service consumer shall send for this purpose an HTTP POST request with \"{apiRoot}/naanf-akma/<apiVersion>/retrieve-applicationkey\" as Resource URI, as shown in step 1 of figure 4.2.2.3.2-1, and the request body containing the AkmaAfKeyRequest data structure.\nIf the request corresponds to a Naanf_AKMA_ApplicationKey_AnonUser_Get request, then the AkmaAfKeyRequest shall contain the \"anonInd\" attribute set to \"true\".\nIf the AAnF determines the received HTTP POST request needs to be redirected, the AAnF shall send an HTTP redirect response as specified in clause 6.10.9 of 3GPP TS 29.500 [4].\nIf the AAnF cannot successfully fulfil the received HTTP POST request due to an internal error or an error in the HTTP POST request, the AAnF shall send an HTTP error response as specified in clause 5.1.7.\nThe AAnF shall also verify the presence of the UE specific KAKMA key identified by the A-KID.\n-\tIf KAKMA is not present in the AAnF, the AAnF shall reply with an HTTP \"403 Forbidden\" status code and the response message body including a ProblemDetails data structure with the \"cause\" attribute set to the \"K_AKMA_NOT_PRESENT\" application error specified in table 5.1.7.3-1.\n-\tIf KAKMA is present in the AAnF, the AAnF shall continue and process the request as specified below.\nUpon the reception of the HTTP POST request, the AAnF shall respond with an HTTP \"200 OK\" status code and the response message body containing the AkmaAfKeyData data structure which shall include:\n-\tKAF as \"kaf\" attribute;\n-\tKAF expiration time as \"expiry\" attribute; and\n-\tif the \"anonInd\" attribute was not present in the request or it was present and set to \"false\", the SUPI within the \"supi\" attribute or, if the \"AKMA_GPSI_Support\" feature is supported, either the SUPI within the \"supi\" attribute or the GPSI within the \"gpsi\" attribute.\nIf the requested AKMA Application Key information for the UE does not exist, the AAnF shall respond with \"204 No Content\".\nIf the NF service consumer is an NEF, and if UE identifier is required to relay to the AF based on local policy, the NEF invokes the Nudm_SubscriberDataManagement service defined in 3GPP TS 29.503 [17] to translate the SUPI to a GPSI (External Id), and then invoke the AKMA API to include the GPSI (External Id) in the response to the AF as defined in 3GPP TS 29.522 [16]. The NEF shall not send the SUPI to the AF.\nThe Naanf_AKMA_ContextRemove service operation is used by an NF service consumer to request the AAnF to remove the AKMA related key material.\nFigure 4.2.2.4.2-1 shows a scenario where the NF service consumer sends a request to the AAnF to delete the AKMA related key material (as shown in 3GPP TS 33.535 [14]).\nThe figure depicts a NF service consumer request to remove the AKMA related key material, highlighting the importance of key material management in network security.\nFigure 4.2.2.4.2-1: NF service consumer request to remove the AKMA related key material\nThe NF service consumer shall invoke the Naanf_AKMA_ContextRemove service operation to request the AAnF to remove the AKMA related key material. The NF service consumer shall send an HTTP POST request with \"{apiRoot}/naanf-akma/<apiVersion>/remove-context\" as Resource URI, as shown in figure 4.2.2.4.2-1, step 1, to request to remove AKMA related key material according to the value of the \"CtxRemove\" data type in the request body.\nIf errors occur when processing the HTTP POST request, the AAnF shall send an HTTP error response as specified in clause 5.1.7.\nIf the AAnF determines the received HTTP POST request needs to be redirected, the AAnF shall send an HTTP redirect response as specified in clause 6.10.9 of 3GPP TS 29.500 [4].\nUpon the reception of the HTTP POST request, if the AKMA context (e.g. A-KID, KAKMA) for the UE has been removed successfully, the AAnF shall send an HTTP \"204 No Content\" response.\nIf the AKMA Context resource does not exist, the AAnF shall respond with \"404 Not Found\" and the \"cause\" attribute of the \"ProblemDetails\" data structure set to \"AKMA_CONTEXT_NOT_FOUND\".\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 4.2.2.1-1: Operations of the Naanf_AKMA Service",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "title": "5\tAPI Definitions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tNaanf_AKMA Service API",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.1.1\tIntroduction",
                            "text_content": "The Naanf_AKMA service shall use the Naanf_AKMA API.\nThe API URI of the Naanf_AKMA API shall be:\n{apiRoot}/<apiName>/<apiVersion>\nThe request URIs used in HTTP requests from the NF service consumer towards the NF service producer shall have the Resource URI structure defined in clause 4.4.1 of 3GPP TS 29.501 [5], i.e.:\n{apiRoot}/<apiName>/<apiVersion>/<apiSpecificResourceUriPart>\nwith the following components:\n-\tThe {apiRoot} shall be set as described in 3GPP TS 29.501 [5].\n-\tThe <apiName> shall be \"naanf-akma\".\n-\tThe <apiVersion> shall be \"v1\".\n-\tThe <apiSpecificResourceUriPart> shall be set as described in clause 5.1.3 and 5.1.4.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.2\tUsage of HTTP",
                            "text_content": "HTTP/2, IETF RFC 9113 [11], shall be used as specified in clause 5 of 3GPP TS 29.500 [4].\nHTTP/2 shall be transported as specified in clause 5.3 of 3GPP TS 29.500 [4].\nThe OpenAPI [6] specification of HTTP messages and content bodies for the Naanf_AKMA API is contained in Annex A.\nSee clause 5.2.2 of 3GPP TS 29.500 [4] for the usage of HTTP standard headers.\nJSON, IETF RFC 8259 [12], shall be used as content type of the HTTP bodies specified in the present specification as specified in clause 5.4 of 3GPP TS 29.500 [4]. The use of the JSON format shall be signalled by the content type \"application/json\".\n\"Problem Details\" JSON object shall be used to indicate additional details of the error in a HTTP response body and shall be signalled by the content type \"application/problem+json\", as defined in IETF RFC 9457 [13].\nThe mandatory HTTP custom header fields specified in clause 5.2.3.2 of 3GPP TS 29.500 [4] shall be supported, and the optional HTTP custom header fields specified in clause 5.2.3.3 of 3GPP TS 29.500 [4] may be supported.\nIn this release of the specification, no specific custom headers are defined for the Naanf_AKMA Service API.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.3\tResources",
                            "text_content": "There are no resources defined for this API in this release of the specification.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.4\tCustom Operations without associated resources",
                            "text_content": "The structure of the custom operation URIs of the Naanf_AKMA API is shown in figure 5.1.4.1-1.\nThe given telecommunication figure depicts a custom operation URI structure of the Naanf_AKMA API, which is used for managing the API operations. The figure shows the structure of the API, including the URI, parameters, and endpoints. This information is crucial for developers to understand how to interact with the API and to ensure that the API is functioning correctly.\nFigure 5.1.4.1-1: Custom operation URI structure of the Naanf_AKMA API\nTable 5.1.4.1-1 provides an overview of the custom operations and applicable HTTP methods defined for the Naanf_AKMA API.\nTable 5.1.4.1-1: Custom operations without associated resources\n\nThe custom operation allows a NF service consumer to store AKMA related key material in the AAnF.\nThis operation shall support the response data structures and response codes specified in tables 5.1.4.2.2-1 and 5.1.4.2.2-2.\nTable 5.1.4.2.2-1: Data structures supported by the POST Request Body on this resource\n\nTable 5.1.4.2.2-2: Data structures supported by the POST Response Body on this resource\n\nTable 5.1.4.2.2-3: Headers supported by the 307 Response Code on this resource\n\nTable 5.1.4.2.2-4: Headers supported by the 308 Response Code on this resource\n\nThe custom operation allows a NF service consumer to retrieve AKMA Application Key information for the UE.\nThis operation shall support the response data structures and response codes specified in tables 5.1.4.3.2-1 and 5.1.4.3.2-2.\nTable 5.1.4.3.2-1: Data structures supported by the POST Request Body on this resource\n\nTable 5.1.4.3.2-2: Data structures supported by the POST Response Body on this resource\n\nTable 5.1.4.3.2-3: Headers supported by the 307 Response Code on this resource\n\nTable 5.1.4.3.2-4: Headers supported by the 308 Response Code on this resource\n\nThe custom operation allows a NF service consumer to delete the AKMA context for the UE.\nThis operation shall support the response data structures and response codes specified in tables 5.1.4.4.2-1 and 5.1.4.4.2-2.\nTable 5.1.4.4.2-1: Data structures supported by the POST Request Body on this resource\n\nTable 5.1.4.4.2-2: Data structures supported by the POST Response Body on this resource\n\nTable 5.1.4.4.2-3: Headers supported by the 307 Response Code on this resource\n\nTable 5.1.4.4.2-4: Headers supported by the 308 Response Code on this resource\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.1.4.1-1: Custom operations without associated resources",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.4.2.2-1: Data structures supported by the POST Request Body on this resource",
                                    "table number": 7,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.4.2.2-2: Data structures supported by the POST Response Body on this resource",
                                    "table number": 8,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.4.2.2-3: Headers supported by the 307 Response Code on this resource",
                                    "table number": 9,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.4.2.2-4: Headers supported by the 308 Response Code on this resource",
                                    "table number": 10,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.4.3.2-1: Data structures supported by the POST Request Body on this resource",
                                    "table number": 11,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.4.3.2-2: Data structures supported by the POST Response Body on this resource",
                                    "table number": 12,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.4.3.2-3: Headers supported by the 307 Response Code on this resource",
                                    "table number": 13,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.4.3.2-4: Headers supported by the 308 Response Code on this resource",
                                    "table number": 14,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.4.4.2-1: Data structures supported by the POST Request Body on this resource",
                                    "table number": 15,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.4.4.2-2: Data structures supported by the POST Response Body on this resource",
                                    "table number": 16,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.4.4.2-3: Headers supported by the 307 Response Code on this resource",
                                    "table number": 17,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.4.4.2-4: Headers supported by the 308 Response Code on this resource",
                                    "table number": 18,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.1.5\tNotifications",
                            "text_content": "Notifications are not applicable to this API.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.6\tData Model",
                            "text_content": "This clause specifies the application data model supported by the Naanf_AKMA API.\nTable 5.1.6.1-1 specifies the data types defined for the Naanf_AKMA service based interface protocol.\n\nTable 5.1.6.1-1: Naanf_AKMA specific Data Types\n\nTable 5.1.6.1-2 specifies data types re-used by the Naanf_AKMA service based interface protocol from other specifications, including a reference to their respective specifications and when needed, a short description of their use within the Naanf_AKMA service based interface.\nTable 5.1.6.1-2: Naanf_AKMA re-used Data Types\n\nThis clause defines the structures to be used in resource representations.\nTable 5.1.6.2.2-1: Definition of type AkmaKeyInfo\n\nTable 5.1.6.2.3-1: Definition of type CtxRemove\n\nThis clause defines simple data types and enumerations that can be referenced from data structures defined in the previous clauses.\nNone in this release of the specification.\nNone in this release of the specification.\nNone in this release of the specification.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.1.6.1-1: Naanf_AKMA specific Data Types",
                                    "table number": 19,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.6.1-2: Naanf_AKMA re-used Data Types",
                                    "table number": 20,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.6.2.2-1: Definition of type AkmaKeyInfo",
                                    "table number": 21,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.6.2.3-1: Definition of type CtxRemove",
                                    "table number": 22,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.1.7\tError Handling",
                            "text_content": "For the Naanf_AKMA API, HTTP error responses shall be supported as specified in clause 4.8 of 3GPP TS 29.501 [5]. Protocol errors and application errors specified in table 5.2.7.2-1 of 3GPP TS 29.500 [4] shall be supported for an HTTP method if the corresponding HTTP status codes are specified as mandatory for that HTTP method in table 5.2.7.1-1 of 3GPP TS 29.500 [4].\nIn addition, the requirements in the following clauses are applicable for the Naanf_AKMA API.\nNo specific procedures for the Naanf_AKMA service are specified.\nThe application errors defined for the Naanf_AKMA service are listed in Table 5.1.7.3-1.\nTable 5.1.7.3-1: Application errors\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.1.7.3-1: Application errors",
                                    "table number": 23,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.1.8\tFeature negotiation",
                            "text_content": "The optional features in table 5.1.8-1 are defined for the Naanf_AKMA API. They shall be negotiated using the extensibility mechanism defined in clause 6.6 of 3GPP TS 29.500 [4].\nTable 5.1.8-1: Supported Features\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.1.8-1: Supported Features",
                                    "table number": 24,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.1.9\tSecurity",
                            "text_content": "As indicated in 3GPP TS 33.501 [8] and 3GPP TS 29.500 [4], the access to the Naanf_AKMA API may be authorized by means of the OAuth2 protocol (see IETF RFC 6749 [9]), based on local configuration, using the \"Client Credentials\" authorization grant, where the NRF (see 3GPP TS 29.510 [10]) plays the role of the authorization server.\nIf OAuth2 is used, an NF Service Consumer, prior to consuming services offered by the Naanf_AKMA API, shall obtain a \"token\" from the authorization server, by invoking the Access Token Request service, as described in 3GPP TS 29.510 [10], clause 5.4.2.2.\nNOTE:\tWhen multiple NRFs are deployed in a network, the NRF used as authorization server is the same NRF that the NF Service Consumer used for discovering the Naanf_AKMA service.\nThe Naanf_AKMA API defines the following scopes for OAuth2 authorization as described in clause 4.10 of 3GPP TS 29.501 [5].\nTable 5.1.9-1: OAuth2 scopes defined in Naanf_AKMA API\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.1.9-1: OAuth2 scopes defined in Naanf_AKMA API",
                                    "table number": 25,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "title": "A.1\tGeneral",
            "description": "This Annex specifies the formal definition of the API(s) defined in the present specification. It consists of OpenAPI 3.0.0 specifications in YAML format.\nThis Annex takes precedence when being discrepant to other parts of the specification with respect to the encoding of information elements and methods within the API(s).\nNOTE:\tThe semantics and procedures, as well as conditions, e.g. for the applicability and allowed combinations of attributes or values, not expressed in the OpenAPI definitions but defined in other parts of the specification also apply.\nInformative copies of the OpenAPI specification files contained in this 3GPP Technical Specification are available on a Git-based repository that uses the GitLab software version control system (see 3GPP TS 29.501 [5] clause 5.3.1 and 3GPP TR 21.900 [7] clause 5B).\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.2\tNaanf_AKMA API",
            "description": "openapi: 3.0.0\ninfo:\ntitle: 3gpp-akma\nversion: 1.1.0-alpha.4\ndescription: |\nAPI for Naanf_AKMA.\n© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).\nAll rights reserved.\n\nexternalDocs:\ndescription: 3GPP TS 29.535 V18.3.0; 5G System; AKMA Anchor Services.\nurl: 'https://www.3gpp.org/ftp/Specs/archive/29_series/29.535/'\n\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- naanf-akma\nservers:\n- url: '{apiRoot}/naanf-akma/v1'\nvariables:\napiRoot:\ndefault: https://example.com\ndescription: apiRoot as defined in clause 4.4 of 3GPP TS 29.501.\n\n\npaths:\n/register-anchorkey:\npost:\nsummary: Store AKMA related key material.\noperationId: RegisterAKMAKey\ntags:\n- Register the AKMA related key material\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- naanf-akma\n- oAuth2ClientCredentials:\n- naanf-akma\n- naanf-akma:anchorkey\nrequestBody:\nrequired: true\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/AkmaKeyInfo'\nresponses:\n'200':\ndescription: The requested information was returned successfully.\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/AkmaKeyInfo'\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\n/retrieve-applicationkey:\npost:\nsummary: Request to retrieve AKMA Application Key information.\noperationId: GetAKMAAPPKeyMaterial\ntags:\n- Retrieve the AKMA Application key material (Collection)\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- naanf-akma\n- oAuth2ClientCredentials:\n- naanf-akma\n- naanf-akma:applicationkeyget\nrequestBody:\nrequired: true\ncontent:\napplication/json:\nschema:\n$ref: 'TS29522_AKMA.yaml#/components/schemas/AkmaAfKeyRequest'\nresponses:\n'200':\ndescription: The requested information was returned successfully.\ncontent:\napplication/json:\nschema:\n$ref: 'TS29522_AKMA.yaml#/components/schemas/AkmaAfKeyData'\n'204':\ndescription: No Content (The requested AKMA Application material does not exist.)\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\n/remove-context:\npost:\nsummary: Request to remove the AKMA related key material.\noperationId: RemoveContext\ntags:\n- Remove the AKMA Application key material (deletion)\nsecurity:\n- {}\n- oAuth2ClientCredentials:\n- naanf-akma\n- oAuth2ClientCredentials:\n- naanf-akma\n- naanf-akma:anchorkey\nrequestBody:\nrequired: true\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/CtxRemove'\nresponses:\n'204':\ndescription: No Content (The AKMA context for the UE has been removed successfully.)\n'307':\n$ref: 'TS29571_CommonData.yaml#/components/responses/307'\n'308':\n$ref: 'TS29571_CommonData.yaml#/components/responses/308'\n'400':\n$ref: 'TS29571_CommonData.yaml#/components/responses/400'\n'401':\n$ref: 'TS29571_CommonData.yaml#/components/responses/401'\n'403':\n$ref: 'TS29571_CommonData.yaml#/components/responses/403'\n'404':\n$ref: 'TS29571_CommonData.yaml#/components/responses/404'\n'411':\n$ref: 'TS29571_CommonData.yaml#/components/responses/411'\n'413':\n$ref: 'TS29571_CommonData.yaml#/components/responses/413'\n'415':\n$ref: 'TS29571_CommonData.yaml#/components/responses/415'\n'429':\n$ref: 'TS29571_CommonData.yaml#/components/responses/429'\n'500':\n$ref: 'TS29571_CommonData.yaml#/components/responses/500'\n'502':\n$ref: 'TS29571_CommonData.yaml#/components/responses/502'\n'503':\n$ref: 'TS29571_CommonData.yaml#/components/responses/503'\ndefault:\n$ref: 'TS29571_CommonData.yaml#/components/responses/default'\n\n\ncomponents:\nsecuritySchemes:\noAuth2ClientCredentials:\ntype: oauth2\nflows:\nclientCredentials:\ntokenUrl: '{nrfApiRoot}/oauth2/token'\nscopes:\nnaanf_akma: Access to the Naanf_AKMA API\nnaanf_akma:anchorkey: >\nAccess to service operations applying to store or remove the AKMA related key\nmaterial.\nnaanf_akma:applicationkeyget: >\nAccess to service operations applying to request the AKMA Application Key information\nfor the UE.\nnaanf-akma:applicationkeyget:supi-access: >\nReturn SUPI in the AKMA Application Key information for the UE.\n\nschemas:\nAkmaKeyInfo:\ndescription: Represents AKMA related key material.\ntype: object\nproperties:\nsuppFeat:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/SupportedFeatures'\nsupi:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Supi'\ngpsi:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Gpsi'\naKId:\n$ref: 'TS29522_AKMA.yaml#/components/schemas/AKId'\nkAkma:\ntype: string\nrequired:\n- aKId\n- kAkma\noneOf:\n- required: [supi]\n- required: [gpsi]\n\nCtxRemove:\ndescription: >\nParameters to request to delete the AKMA context for the UE, the \"supi\" attribute shall be\nincluded.\ntype: object\nproperties:\nsupi:\n$ref: 'TS29571_CommonData.yaml#/components/schemas/Supi'\n\n\n",
            "summary": "",
            "tables": [
                {
                    "description": "",
                    "table number": 26,
                    "summary": "",
                    "name": ""
                }
            ],
            "figures_meta_data": [],
            "subsections": []
        }
    ]
}