{
    "document_name": "28912-i01.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Report has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\nIn the present document, modal verbs have the following meanings:\nshall\t\tindicates a mandatory requirement to do something\nshall not\tindicates an interdiction (prohibition) to do something\nThe constructions \"shall\" and \"shall not\" are confined to the context of normative provisions, and do not appear in Technical Reports.\nThe constructions \"must\" and \"must not\" are not used as substitutes for \"shall\" and \"shall not\". Their use is avoided insofar as possible, and they are not used in a normative context except in a direct citation from an external, referenced, non-3GPP document, or so as to maintain continuity of style when extending or modifying the provisions of such a referenced document.\nshould\t\tindicates a recommendation to do something\nshould not\tindicates a recommendation not to do something\nmay\t\tindicates permission to do something\nneed not\tindicates permission not to do something\nThe construction \"may not\" is ambiguous and is not used in normative elements. The unambiguous constructions \"might not\" or \"shall not\" are used instead, depending upon the meaning intended.\ncan\t\tindicates that something is possible\ncannot\t\tindicates that something is impossible\nThe constructions \"can\" and \"cannot\" are not substitutes for \"may\" and \"need not\".\nwill\t\tindicates that something is certain or expected to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nwill not\t\tindicates that something is certain or expected not to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nmight\tindicates a likelihood that something will happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nmight not\tindicates a likelihood that something will not happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nIn addition:\nis\t(or any other verb in the indicative mood) indicates a statement of fact\nis not\t(or any other negative verb in the indicative mood) indicates a statement of fact\nThe constructions \"is\" and \"is not\" do not indicate requirements.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document investigates new areas for enhancing the intent driven management services of 5G network. It identifies and documents key issues and evaluates potential solutions, and provides recommendations for the normative work.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 28.312: \"Management and orchestration; Intent driven management services for mobile networks\"\n[3]\t3GPP TS 28.541: \"Management and orchestration; 5G Network Resource Model (NRM); Stage 2 and stage 3\".\n[4]\t3GPP TS 28.554: \"Management and orchestration; 5G end to end Key Performance Indicators (KPI)\".\n[5]\t3GPP TS 28.535: \"Management and orchestration; Management services for communication service assurance; Requirements\"\n[6]\t3GPP TR 28.908: \"Study on Artificial Intelligence/Machine Learning (AI/ ML) management\".\n[7]\t3GPP TS 28.104: \"Management and orchestration; Management Data Analytics (MDA)\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions of terms, symbols and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tTerms",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms given in TR 21.905 [1] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in TR 21.905 [1].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tSymbols",
                    "description": "",
                    "summary": "",
                    "text_content": "Void.\n\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.3\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in TR 21.905 [1].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tIssue investigations and potential solutions for new capabilities",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "4.1\tIssue#4.1: intent driven approach for RAN energy saving",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.1.1\tDescription",
                            "text_content": "Operators are aiming at decreasing power consumption in 5G networks to lower their operational expense with energy saving management solutions. Energy saving is achieved by executing the energy saving actions with suitable parameter configurations, e.g. energy saving state switch, start time and end time, the energy saving thresholds. However, the various combinations of energy saving actions can lead to conflicts. For example, different energy saving actions may be contradictory, or the energy saving actions may conflict with other activities (e.g. network optimization actions). Moreover, it is not straightforward to evaluate the influence on service experience (e.g. UL/DL RAN UE throughput, latency) of energy saving actions beforehand, which makes it difficult to balance the energy saving effect and service experience, for example the energy saving actions may deteriorate the service experience. To avoid affecting the service experience, MnS consumer may express energy saving target with the maximum value of RAN energy consumption in intent expectation, and MnS producer is able to choose an optimal value of RAN energy consumption to save energy as much as possible in the context to satisfy the service experience.\nAs TS 28.312 [2] described, an intent focuses more on describing the \"What\" needs to be achieved but less on \"How\" that outcomes should be achieved, which not only relieves the burden of the consumer knowing implementation details but also leaves room to allow the producer to explore alternative options and find optimal solutions. So, introducing the intent approach for energy saving, which can enable the 3GPP management system to analyse and select the optimal balance between the energy saving effect and service experience by utilizing some intelligence mechanisms. In intent driven approach, a MnS consumer expresses intent expectation for RAN energy saving in the specified area to a MnS producer, which may include the RAN energy saving target (e.g. the maximum value of target RAN energy consumption, reduction radio of energy consumption) and service experience (e.g. RAN UE throughput, latency), as well as the frequencies and RATs to be considered for energy saving. MnS producer analyses and determines the optimal RAN energy saving solution (i.e. a set of energy saving actions) to satisfy MnS consumer's intent expectation for RAN energy saving.\nIt is important to investigate the model for intent expectation for RAN energy saving based on the generic intent model and radio network expectation defined in TS 28.312 [2].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.1.2\tPotential requirements",
                            "text_content": "REQ-Intent_RAN_EnergySaving: The intent driven MnS shall have capability enabling MnS consumer to express intent containing an expectation on RAN energy saving for the specified area to MnS producer.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.1.3\tPotential solutions",
                            "text_content": "The RadioNetworkExpectation can be reused for expectation on RAN energy saving with some extension.\n-\tFollowing attributes defined in RadioNetworkExpectation in TS 28.312 [2] can be reused.\n-\tThe attribute \"coverageAreaPolygonContext\", \"coverageTACContext\" and \"pLMNContext\" can be used by MnS consumer to specify the area that the intent expectation for RAN energy saving applied.\n-\tThe attribute \"nRFqBandContext\" and \"rATContext\" can be used by MnS consumer to specify the frequencies and RATs to be considered for energy saving.\n-\tThe attribute \"aveULRANUEThptTarget\", \"aveDLRANUEthptTarget\", \"lowULRANUEThptRatioTarget\" and \"lowDLRANUEThptRatioTarget\" can be used by MnS consumer to specify the service experience to be assured when achieving the energy saving target.\n-\tFollowing attributes need to be defined in RadioNetworkExpectation for the expectation on radio network energy saving.\n-\tAttribute \"RanEnergyConsumptionTarget\" describes the energy consumption that the intent expectation is applied, which including attributes: targetName, targetCondition and targetValueRange. The concrete targetValueRange see corresponding KPI \"ECNG-RAN\" definition in clause 6.7.3.4.1 in TS 28.554 [4].\n-\tAttribute \"RanEnergyEfficiencyTarget\" describes the energy efficiency that the intent expectation is applied, which including attributes: targetName, targetCondition and targetValueRange. The concrete targetValueRange see corresponding KPI \"EEMN,DV\" definition in clause 6.7.1.1 in TS 28.554 [4].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.2\tIssue#4.2:\tIntent conflicts",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.2.1\tDescription",
                            "text_content": "The MnS consumer may create an intent containing two or more intent expectations, and each intent expectation may contain multiple expectation targets. For example, a Radio Network related intent may express an intent with targets on radio network parameters (e.g., downlink transmit power, remote electrical tilt) or on KPIs (e.g., DL UE throughput target, average RSRP target, coverage area). On receiving and after analysing the intent, the MnS producer may realize that the intent expectations or expectation targets in one intent are contradicted, i.e. the MnS producer may detect conflicts in the intent. Also, an intent is considered to have conflict with other intents if the requirements (includes intent expectation and corresponding expectation targets) stated in one intent is conflicted with the requirements (includes intent expectation and corresponding expectation targets) stated in another intent. Following are the intent related conflict scenarios:\n-\tTarget conflict, which represents the conflict between two or more expectation targets within the same intent expectation.\n-\tExpectation conflict, which represents the conflict between two or more intent expectations with the same intent\n-\tIntent conflict, which represents the conflict between two or more different intents.\nFor example, consider two targets target_1=: throughput > threshold_1 and target_2=: interference < threshold_2, and while trying to achieve target_1, target_2 gets degraded, so the producer will see that the targets are conflicting. There is intent conflict between them if they are in different intents, but there is expectation conflict or target conflict between them if they are in the same intent.\nConflicts related to the above intents can also be classified according to the following principles. Subsequently, different solutions can be customized based on different classifications of conflicts to solve the same kind of intent related conflicts.\n-\tExplicit conflict, which represents the conflict between two intents can be identified by the intent model information. For example, for target_3 and target_4, they have different requirements for latency indicators. By analysing the intent model description information, it can be identified that these two targets have target conflicts.\n-\tImplicit conflict, which represents the conflict between two intents cannot be identified by the intent model information. Conflicts will appear only in the process of intent operation. For example, one intent is to increase throughput, and the other intent is to reduce the resource consumption of virtual machines. From the perspective of intent model, the conflict between the two intents cannot be identified by definition. But in the process of intent operation, increasing throughput may increase the utilization of virtual machine resources. At this time, it will conflict with the intent to reduce virtual machine resources.\nFor the intent conflict, the two or more intents may be proposed by the same MnS consumer, or may be proposed by different MnS consumers. An example of the latter is that the MnS producer cannot satisfy the intents of two MnS consumers simultaneously. From the perspective of intent creation time, conflicting intentions may be proposed at different time, so a newer intent may be in conflict with an intent that is being executed but has not yet been fulfilled. The MnS producer may terminate the intent execution task(s) to avoid the conflicted intents are executed simultaneously until the intent conflict is solved.\nWhen such conflicts are detected, the MnS producer needs to notify the MnS consumer about the conflict, indicating the intent, intent expectations or expectation targets which give rise to the conflict. Additionally, the MnS producer may also notify the MnS consumer about the additional information (e.g. the impact for other expectation targets when fulfil the specified expectation targets in the same or different intent) for the conflict. The MnS producer can also provide solutions regarding intent conflicts, such as termination of the whole intent, recommended intent (e.g. recommended expectations or targets, or termination of part of intent), or updating the execution time of the intent.\nThereby, the MnS consumer may take actions (e.g. modify and delete the intent or intent expectation or expectation targets,) to address such intent conflict or MnS consumer may give some intent conflict handling guidelines (e.g. assign priority for such intent or intent expectation or expectation targets) to MnS producer to solve such intent conflict or eliminate the terminated state which is caused by the reason of conflict detected.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.2.2\tPotential requirements",
                            "text_content": "REQ-Intent_conflict-CON-1: The intent driven MnS should have the capability to inform the authorized MnS consumer about intent related conflicts (both explicit and implicit conflicts) as soon as they are identified (either during creation or operation), including intent conflict, expectation conflict and target conflict.\nREQ-Intent_conflict-CON-2: The intent driven MnS should have the capability to allow the authorized MnS consumer to give intent conflict handling guidelines to MnS producer to solve such intent conflict and potentially affect the terminated state which is caused by the reason of conflict detected.\nREQ-Intent_conflict-CON-3: The intent driven MnS should have the capability to inform the authorized MnS consumer about possible solutions related conflicts, including suggesting to terminate intent instances, recommended intent instances, or recommended execution time of the intent instances.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.2.3\tPotential Solution",
                            "text_content": "When the MnS producer detects a conflict on an intent, an intent expectation or an expectation target, following activities will be taken by MnS producer:\n-\tThe MnS producer should notify the MnS consumer whenever such a conflict is detected with intent, intent expectations or expectation targets specified which give rise to the conflict.\n-\tThe MnS producer may execute one of the following options to handle the conflict based on the intent conflict handling guidelines configured by MnS consumer:\n1. The MnS producer rejects the intent and sends the notification of the rejection message to MnS consumer providing the cause for rejection as the conflict. Additionally, the intent progress status should be marked as terminated with the reason as conflict detected.\n2. The MnS producer continues to execute the intent and selects the best alternative targets that can be satisfied.\n3. The MnS producer provides to the MnS consumer an indication of the best alternative targets can be satisfied and asks the MnS consumer to either approve or reject the alternative targets.\n4 The MnS producer provides to the MnS consumer a recommended context (e.g. execution time as context) of the intent instance and asks the MnS consumer to either accept or reject the alternative context information.\n5. The MnS producer determines the intent to terminate or suspend based on priority attribute and preemption attribute such as intent preemption capability and intent preemption protect. And then, the MnS producer asks the MnS consumer to approve the determination of the MnS producer.\nMultiple methods may be available on how to derive best alternative targets can be satisfied. As an example, each Intent, intent expectation or expectation target may be characterized by a priority and the guideline from the MnS consumer may be to apply the highest priority intent, intent expectation or expectation target. The MnS producer can preliminarily obtain an overall optimal solution then applies this guideline to accept one of the Intent, intent expectation or expectation targets. The others are rejected providing a notification with the reason as conflict and potentially affect terminated state which is caused by the reason of conflict detected. Another example is such best alternative targets can be derived based on compromise derived from information given by the MnS consumers whose Intents, intent expectations or expectation targets are conflicting. Example information to derive such a compromise may be the relative priorities of the intent, intent expectations and expectation targets or their relative utilities.\nNote that the computation: of the compromised value may depend and vary based on the specified target(s). For example, consider the two intents: (i) intent 1 {target: TTT = t1} and (ii) intent 2 {target: TTT = t2}. In this case, the compromised value of TTT can be calculated as (t1 + t2)/2.\nHowever, if the contradiction example is considered in Expectation conflict of 4.2.1 (target_1=: throughput > threshold_1 and target_2=: interference < threshold_2), in this case MnS producer has to determine the common factor(s) such as the specific network parameters because of which these two targets cannot be satisfied simultaneously. After that, MnS producer may average the values of the common factor(s) which are needed to satisfy target_1 and target_2.\nThe proposed solution options are feasible for all the possible intent related conflicts. The options are not mutually exclusive but can be combined by the MnS consumer as needed.\nFor example, given 4 intent instances resulting in conflicts, the MnS producer may select that: the expectation of intent instance 1 can be modified to expectation 1; expectation 2, and the targets of intent instance 2 can be modified to target 1, target 2, and intent instance 3 is recommended to be cancelled, while intent instance 4 is recommended to be executed at some other time. Then the notified MnS consumer can update or cancel its intent instance according to the solution information provided by the MnS producer.\nThe proposed solution options have the potential to reject one of the intents that caused the intent conflicts. The rejected intent should not be re-executed until the ongoing intent is completed because the same intent conflict may occur if the intent is re-executed until the ongoing intent is not completed.\nIntent priority level and preemption: If executed intent and new intent are in conflict and terminating executed intent will solve, MnS producer may use priority level, preemption capability and preemption protect. MnS producer may terminate executed intent if same priority level intent conflicts, executed intent preemption capability is preemptable and new intent preemption capability is preemption.\nExtend the Intent <<IOC>> with the following attribute:\n-\tThe attribute \"intent priority level\" can be used by MnS consumer to specify the priority of the intent.\nThe following two attributes are used for intent management:\n-\tThe attribute \"intent preemption capability\" can be used by MnS consumer to specify the preemption capability, whether it will triggered, or will not be triggered,\n-\tThe attribute \"intent preemption protection\" can be used by MnS consumer to specify the preemption protection, whether it is not preemptable, or preemptable.\nWhen new intent is created, MnS producer detects new intent and existing intent are in conflict. MnS producer can handle as follows:\nStep 1. check intent priority level of intents which are in conflict.\nStep 2.\n-\tIn case intent priority level are different, MnS producer prioritize higher priority level intent, if the new intent is prioritized, go to step 4\n-\tIn case intent priority level are same, MnS producer check the intent preemption capability of new intent and intent preemption protection of existing one, and handle as Step3.\nStep 3.\n-\tIf intent preemption protection of existing intent is not preemptable, MnS producer prioritize existing intent (cannot proceed new intent)\n-\tIf intent preemption protection of existing intent is preemptable and intent preemption capability of new intent triggers, MnS producer prioritizes the new intent over the existing intent. (go to step 4)\n-\tIf intent preemption protect of existing intent is preemptable and intent preemption capability of new intent do not trigger, MnS producer prioritizes the existing intent (cannot proceed new intent)\nStep 4.\nWhen the new intent is prioritized over the existing intent which has conflict with the new intent, the MnS producer can take the following actions (Either A or B)\nA. Terminate or suspend the existing intent and send notification to the MnS consumer (for example, in the case of emergency etc.)\nB. Notify the conflict and ask for approval of termination or suspension.\nFigure 4.2.3-1 illustrates a telecommunication network, specifically focusing on the signal transmission and reception process. The figure showcases the interaction between the transmitter, which is represented by the 'TX' symbol, and the receiver, denoted by the 'RX' symbol. The signal is depicted as a wave, with the transmitter emitting the signal and the receiver receiving it. The wave travels through various components of the network, including the antenna, which is responsible for transmitting the signal into the air, and the receiver, which is responsible for capturing the signal and converting it into a usable format. The figure also includes a depiction of the signal's path, with various lines and arrows indicating the direction and strength of the signal. The figure provides a clear and concise representation of the telecommunication process, highlighting the importance of each component in the transmission and reception of signals.\nFigure 4.2.3-1\nThe solutions are feasible and should be expanded in the normative phase.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.3\tIssue#4.3: Enhancement of radio network intent expectation",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.3.1\tDescription",
                            "text_content": "In TS 28.312 [2], the radio network expectation is defined in clause 6.2.2.1.1, which is used to support the use case and requirements for clause 5.1.1 Intent containing an expectation for delivering radio network, clause 5.1.4 Intent containing an expectation on coverage performance to be assured and clause 5.1.5 Intent containing an expectation on RAN UE throughput performance to be assured. Following aspects for radio network expectation need to be enhanced:\n-\tEnhancement Aspect1: In existing radio network expectation, only Polygon Area and TAC are specified to represent the coverage area. However, in some scenarios, the MnS consumer may express the radio network expectation targets for the coverage area which is represented by a list of Cell (e.g. CGI).\n-\tEnhancement Aspect2: In clause 5.1.5 Intent containing an expectation on RAN UE throughput performance to be assured, the sentence \"optional performance scope (e.g. specific service type, specific UE groups)\" is described, which means MnS consumer may express the radio network expectation targets for the specific service type or UE groups instead of the whole radio network.\n-\tEnhancement Aspect3: In existing radio network expectation, only coverage and RAN UE throughput related expectation targets are defined to support coverage performance and RAN UE throughput performance assurance use case. The capacity performance is important for radio network delivering and assurance, so the corresponding radio network capacity performance requirements need to be defined in Radio network expectation.\n-\tEnhancement Aspect4: In clause 5.1.1 Intent containing an expectation for delivering radio network use case, transport setting parameters (including OM transport information and NG transport information) are described in the MnS consumer's expectation for delivering a radio network. It means when the MnS consumer expresses its intent expectation to the MnS producer for delivering a radio network, MnS consumer needs to specify the expected transport information for the radio network to be delivered to support the connection with other network parts (including 5GC network node, transport network node and management system).\n-\tEnhancement Aspect5: Radio network may have different distributions of users in different time periods, and these differences have certain periodic characteristics in time and space. For example, in the university area, users are mainly in teaching buildings during the day, and users are mainly in dormitory buildings at night. In this case, during the day, teaching buildings are busy while at night, they are idle. Therefore, in view of the difference in the distribution of users in different time periods in same area, it is necessary to defined different time periods as contexts.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.3.2\tPotential solutions",
                            "text_content": "Regarding the Enhancement Aspect 1, it proposes to add attribute \"cellContext\" in ObjectContext for RadioNetworkExpectation in Clause 6.2.2.1.1.2 to represent the coverage area.\nRegarding the Enhancement Aspect 2, it proposes to add attribute \"targetedScopeContext\" in ObjectContext for RadioNetworkExpectation in Clause 6.2.2.1.1.2. The contextValueRange of \"targetedScopeContext\" is dataType modelled as tuple [SNSSAI, 5QI]. If MnS consumer only expresses the expectation targets for specific SNSSAI, then the 5QI of the tuple should be absent. If MnS consumer only expresses targets for specific 5QI, then the SNSSAI of the tuple should be absent. If MnS consumer expresses the expectation targets for specific combination of SNSSAI and 5QI, both SNSSAI and 5QI needs to be present.\nRegarding the Enhancement Aspect 3, it proposes to add radio network capacity related expectation targets in ExpectationTargets for RadioNetworkExpectation, the radio network capacity related expectation targets can be highUlPrbLoadRatioTarget, highDlPrbLoadRatioTarget, maxNumberofUETarget (specifies the maximum number of UEs may access the network) and activityFactorTarget (specifies the percentage value of the amount of simultaneous active UEs to the total number of UEs). In case of radio network delivering scenario, the radio network capacity related expectation targets can be maxNumberofUETarget and activityFactorTarget. In case of radio network assurance, the radio network capacity related expectation targets are highUlPrbLoadRatioTarget and highDlPrbLoadRatioTarget.\nRegarding the Enhancement Aspect 4, it proposes to add transport related contexts (including NgInterfaceContext, OMInterfaceContext and NextHopContext) in ObjectContexts for RadioNetworkExpectation in Clause 6.2.2.1.1.2. NgInterfaceContext represents the context of transport connection to 5GC, which includes a list NGlocalIPaddress and NGremoteIPaddress. OMInterfaceContext represents the context of transport connection to the management system, which includes a list of OMlocalIPaddress and OMremoteIPaddress. The NextHopContext provides information to identify ingress node (s) which are part of a transport network and the attachment circuit between the radio network and the transport network, which includes a list of nextHopInfo defined in TS 28.541[3].\nRegarding the Enhancement Aspect 5, it proposes to add attribute \"timeContext\" in ObjectContext for RadioNetworkExpectation in TS 28.312 [2] Clause 6.2.2.1.1.2 to represent the expectation is expressed for specific time periods.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.4\tIssue#4.4: 5GC related intent expectation",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.4.1\t\tDescription",
                            "text_content": "TS 28.312 [2] describes the generic requirements of intent-driven MnS in clause 5.2. The generic information model definition and scenario specific IntentExpectation definition are given in clause 6.2 in TS 28.312 [2].\nIntent driven management may affect management scenarios of 5G Core network which include 5G Core NF provisioning, 5G Core network performance management, 5G Core network fault management and 5G Core network optimization. In this key issue, this study should investigate the potential solution(s) of intent expression of 5G Core network intent expectation.\nThe 5GC intent expectation may include the specific Expectation Targets related to 5GC subnetwork management and Expectation Targets of 5GC NF management. Intent driven management may affect various management scenarios of 5G Core network. This study is to investigate potential solution(s) for intent expression, including defining expectations for a specific set of these scenarios.\nThe 5GC intent expectation should investigate the potential solution(s) to extend the generic information model of intent IOC to support 5GC specific intent expectation.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.4.2\tPotential requirements",
                            "text_content": "REQ-Intent_GEN_CON_01: The Intent driven MnS shall have the capability to allow MnS producer provide the results of the intent fulfilment to MnS Consumers.\nREQ-Intent_Deploy_NF_CON_01: The intent driven MnS for 5GC shall have capability to allow MnS consumer to express Intent expectation for deployment of 5GC NFs or subnetwork.\nREQ-Intent_Opt_5GC_CON_01: The intent driven MnS for 5GC shall have capability to allow MnS consumer to express Intent expectation for 5GC performance assurance.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.4.3\t\tPotential solutions",
                            "text_content": "The generic information model for intent should be used to provide specific IntentExpectation related to 5GC management.\nThe IntentExpectation for core network is used to represent MnS consumer's expectation for 5GC subnetwork or 5GC NF. The ExpectationObject should indicate the 5GC subnetwork or 5GC NF:\n-\tIn case of the intent expectation is not for a specific instance or MnS consumer has no knowledge of the DN of the instance, the attribute of objecttype need to be specified as 5GC subnetwork or the type of 5GC NF.\n-\tIn case of intent expectation is for a specific instance and MnS consumer has the knowledge of the DN of the instance, the attribute of objectInstance needs to be specified.\nWhen IntentExpectation represents an Intent to deliver 5GC subnetwork 5GC related ExpectationTargets.\nIt should be provided to describe the information of 5GC subnetwork, such as network scale, network coverage, etc.\nWhen IntentExpectation represents an Intent to deliver 5GC NF, 5GC related ExpectationTargets should be provided, such as supported features of 5GC NF, and related end point interfaces information.\nWhen IntentExpectation represents an Intent for 5GC performance assurance, the performance KPIs for 5GC subnetwork or NF are considered as network characteristics, so the performance assurance KPI name and value can be included as values of ExpectationTargets for IntentExpectation. The IntentExpectations in service assurance IntentExpectation diverse and depend on management scenarios. The examples of the performance KPIs related to 5GC which can be used as ExpectationTargets are Established PDU session number, maximum registered subscribers and the inter-AMF handover number for 5GC subnetwork.\nThe IntentExpectation for core network is used to represent MnS consumer's expectation for 5GC.\nThe intent driven management for 5GC fault management can use intent expectation to express the intent of the fault detection and recovery intent for 5GC. When IntentExpectation represents an Intent for 5GC fault management, 5GC related ObjectContext should be provided, such as the information of 5GC NF.\nThe name and value of ExpectationTargets can be used to provide particular inputs of fault detection and recovery. The alarm notification of particular events and fault types are set to be reported. The expectation target for input requirements of fault detection related to 5GC can be set to support the alarm notification by particular periodic time.\nNOTE: \tThe intent expectation can be enhanced to support the fault recovery expectations. One example is that the intent of fault recovery expectation can be expressed to move the traffic to new 5GC NFs which are collocated.\nThe intent expectation may contain the information related to the 5GC NF or 5GC subnetwork, so the scope the intent expectation applied are provided in intentExpectation field and fulfilment report.\nAs an example, in case that the intent driven MnS consumer is to express the intent expectation for 5GC fault management, the following attributes to intent driven management of 5GC fault management:\n-\tThe new \"expectationTargets\" for 5GC fault management could be added in intentExpectation.\n-\tAttribute \"recoveryResponseTimeTarget\" represents MnS consumer's requirements for reducing recovery response time to a certain value, which is a Integer value.\n-\tAttribute \"failureTimeTarget\" represents MnS consumer's requirements for reducing network and service failure time to a certain value within a period time.\n-\tThe intent expectation may contain the information related to the 5GC NF or 5GC subnetwork, so the scope the intent expectation applied are provided in intentExpectation field and fulfilment report. The objectContexts can be enhanced to contain that information related to the 5GC NFs and 5GC subnetwork.\n-\tAttribute\"plMNInfoContext\"describes the PLMN(s) supported by the 5GC NF or 5GC subnetwork that the intent expectation is applied, the ObjectContext include attributes: contextAttribute, contextCondition and contextValueRange. The targetValueRange see corresponding attribute \" plMNInfoList\" in TS 28.541 [3].\nThe IntentExpectation for core network is used to represent MnS consumer's expectation for 5GC.\nThe 5GC optimization is a fundamental solution that can support to optimize and keep particular one or more than one 5GC performance KPI(s) of 5GC, so some scenarios of 5GC optimization can be also used to support 5GC service assurance. For example, the core network may be set to increase energy efficiency of 5GC during period of time. Another example is that increasing a particular usage ratio of virtual resource consumption is set to core network according to the service request during a period of time, so this optimization intent expectation can be addressed by invoking provisioning MnS to update the 5GC NFs.\nWhen IntentExpectation represents an Intent for 5GC optimization, 5GC related ObjectContext should be provided.\nThe particular name and value of performance KPI related to 5GC can be set as value of ExpectationTargets for IntentExpectation. Optionally, the value of TargetContexts can be included to show the information of network context of this ExpectationTarget when necessary.\nAs an example, in case that the intent driven MnS consumer is to express the intent expectation for 5GC energy saving optimization, the following enhancements to intent driven management of 5GC optimization can be added:\n-\tThe new expectationTargets for 5GC energy efficiency could be added in intentExpectation. The example of 5GC energy efficiency could be set to reduce the energy consumption by N percentage (e.g., 5 %). The period of time should be added as an input in expectationContexts field in intentExpectation when applicable.\n-\tThe intent expectation may contain the information related to the 5GC NF or 5GC subnetwork, so the scope the intent expectation applied are provided in intentExpectation field and fulfilment report. The objectContexts can be enhanced to contain that information related to the 5GC NFs and 5GC subnetwork.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.5\tIssue#4.5: Intent Report",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.5.1\tDescription",
                            "text_content": "In TS 28.312 [2], the Fulfilment information (including the intentFulfilmentInfo, expectationFulfilmentInfo and targetFulfilmentInfo) are defined for the MnS consumer to monitor the intent fulfilment information. The intent report also can contain the current and optional predicted value for performance indicated by corresponding expectation targets (e.g. WeakRSRPRatio for the weakRSRPRatioTarget, Average UL RAN UE Throughput for aveULRANUEThptTarget), which can be used by MnS consumer to validate whether the intent is really fulfilled and to evaluate whether the intent (especially for expectation targets) needs to be updated if needed (improve the target value when corresponding target is fulfilled or reduce the target value when corresponding target is not fulfilled or not fulfilled with the reason of target confliction). Besides, intent conflict information and intent fulfilment feasibility check information which send by MnS producer to MnS consumer is another type of intent report information. So, following are the three types of information needs to be monitored by MnS consumer:\n-\tIntent Fulfilment information, which represents the properties of a specific fulfilment information for an aspect of the intent (i.e. either an expectation, a target or the whole intent). The detailed information see clause 6.2.1.3.5 in TS 28.312 [2].\n-\tAchieved values for targets, which represent current performance values for corresponding expectation targets.\n-\tIntent conflict information, which represents conflict type (i.e. intent conflict, expectation conflict and target conflict) and possible solution recommendation to address the conflicts.\n-\tIntent fulfilment feasibility check information, which indicates that the intent is feasible or infeasible. Intent fulfilment feasibility check information is provided after MnS producer automatically performs feasibility check when receive the intent creation and modification request from MnS consumer.\nDifferent MnS consumer may have different requirements for intent report (e.g. Some MnS consumer may want to have corresponding performance value information while others do not want. Different MnS consumer may want to calculate or monitor the performance value in different period).\nWhile the report (with the current performance values for corresponding expectation targets) is provided at the end of each observation period, the consumer may also wish to know whether the fulfilment info was consistent for the entire observation period. For example, the intent expectation may be reported FULFILLED at the end of observation period. However, it may be possible that within observation period the intent expectation was NOTFULFILLED. The consumer may wish to know this information. This information can be important for the MnS consumer to understand whether the observation period they specified need an update (e.g. shortened) or not. Moreover, it helps the MnS consumer to understand whether their expectation is fulfilled during the entire observation period which also gives transparency to the MnS consumer to update their observation period and/or expectations targets specified in the intent.\nMnS consumer can also require different intent reports to be generated in different situations. Based on the content selection criteria, MnS consumer can obtain reports of different content according to different conditions. For example, possible to ask for a report about all elements of the intent when the system is getting degraded. If the system complies again, a shorter report might be sufficient.\nReports also can be generated and sent based on events. Events describe significant situations in the operation of intent, and indicate that the intent has reached a particular state. For example, these events can include intent being accepted, intent being rejected, or intent being degraded, etc. The intent driven MnS should allow MnS consumers to require for which events, a report is generated by MnS producer. Moreover, MnS consumers can propose other customized requirements for intent report, such as combining complex requirements for frequency, triggering events, and content selection.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.5.2\tPotential requirements",
                            "text_content": "REQ-Intent_Driven_MnS_Report-1: The intent driven MnS should have the capability to enable the MnS consumer to request intent report information.\nREQ-Intent_Driven_MnS_Report-2: The intent driven MnS should have the capability to enable the MnS consumer to obtain intent report information with current performance value for corresponding expectation targets.\nREQ-Intent_Driven_MnS_Report-3: The intent driven MnS should have the capability to enable the MnS consumer to obtain intent report information with intent fulfilment information.\nREQ-Intent_Driven_MnS_Report-4: The intent driven MnS should have the capability to enable the MnS consumer to obtain intent report information with intent conflict information.\nREQ-Intent_Driven_MnS_Report-5: The intent driven MnS should have the capability to enable the MnS consumer to obtain intent report information with intent fulfilment feasibility check information.\nREQ-Intent_Driven_MnS_Report-6: The intent driven MnS should have capability enabling MnS consumer to specify the content of the report.\nREQ-Intent_Driven_MnS_Report-7: The intent driven MnS should have capability enabling MnS consumer to configure the frequency of the intent reporting.\nREQ-Intent_Driven_MnS_Report-8: The intent driven MnS should allow MnS consumers to receive reports, with different content and intervals according to its specified requirements.\nREQ-Intent_Driven_MnS_Report-9: The intent driven MnS should allow MnS consumer to obtain reports with current values for specified expectation targets.\nREQ-Intent_Driven_MnS_Report-10: The intent driven MnS should have capability enabling MnS consumer to obtain intent report information with current context information for corresponding expectation targets.\nREQ-Intent_Driven_MnS_Report-11: The intent driven MnS should allow reports to contain information on whether the fulfilment info was consistent throughout the observation period.\nREQ-Intent_Driven_MnS_Report_12: The intent driven MnS should have capability enabling MnS consumer to specify the content selection criteria of the report.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.5.3\tPotential solutions",
                            "text_content": "This solution extends the existing model in TS 28.312 [2] by adding new attributes to the Intent IOC to indicate what is to be observed, and a new IntentReport IOC to enable the MnS consumer to obtain the intent report information.\nThe following specific changes would be made:\n-\tExtend the Intent <<IOC>> with the following attributes:\n-\t\"reportingPeriod\", represents MnS consumer's requirements for the reporting period. The performance value for corresponding Expectation Targets will be reported at the end of each period.\n-\tIntroduce the IntentReport <<IOC>> to represent the intent fulfilment information, intent conflict information intent fulfilment feasibility check information and current performance values for the Expectation Targets in the associated Intent. The MnS consumer can use the \"getMOIAttributeValue\" operation to query the IntentReport <<IOC>> to obtain the intent report information and/or subscribe the \"notifyMOIAttributeValueChanges\" notification to obtain the intent report information The IntentReport <<IOC>> includes the following attributes:\n-\t\"intentReference\", to reference (DN) the associated Intent instance.\n-\t\"reportIndicator\", to enable/disable (Boolean) reporting for associated Intent instance.\n-\t\"intentFulfimentInfo\", to represent the fulfilment information for intent, intent expectation and expectation targets. For detailed information see clause 6.2.1.3.5 in TS 28.312[2].\n-\t\"intentConflictInfo\", to represent the intent conflict information that should be informed to the MnS consumer. For detailed intent conflict information see clause 4.2.3.\n-\t\"intentFeasibilityCheckInfo\", to represent the intent fulfilment feasibility check information that should be informed to the MnS consumer.\n-\t\"targetAchieveValues\", to represent the current performance value for the ExpectationTargets.\n-\t\"lastUpdated\", timestamp (DateTime) of latest update.\nThis could result in NRM for Intent Reporting as follows:\nFigure 4.5.3.1-1 illustrates a telecommunication network, specifically focusing on the signal transmission and reception process within a 3GPP Long Term Evolution (LTE) network. The figure showcases the various components involved, including the base station (eNodeB), mobile station (UE), and the signal transmission path. The signal starts at the eNodeB, is transmitted through the air, and then received by the UE. The figure also highlights the role of the radio access network (RAN) in facilitating this process. The visual representation provides a clear understanding of the signal flow and the importance of the RAN in ensuring efficient communication between the eNodeB and the UE.\nFigure 4.5.3.1-1\nObservations on this approach:\n-\tDifferent MnS consumers can query different attributes of IntentReport to obtain corresponding Intent instance report information.\n-\tDifferent MnS consumers can subscribe to attribute value change notifications for IntentReport <<IOC>> to obtain the notification for different intent report information.\nSeveral benefits are listed below for the solution:\n-\tSeparates the intent expectation information (generated by MnS consumer) and intent monitor information (generated by MnS producer).\n-\tMnS consumer can manage Intent instance and IntentReport instances separately.\n-\tIntent <<IOC>> is aligned with intent definition (expectations including requirements, goals and constraints given to a 3GPP system).\nThis solution extends the existing model in TS 28.312 [2] by adding new attributes to the Intent IOC to indicate what is to be observed, and a new IntentReport IOC to report the achieved values.\nThe following specific changes could be made:\n-\tExtend the IntentExpectation <<dataType>> with the following attribute:\n-\t\"observationTime\", represents MnS consumer's requirements for the observation period of performance value for corresponding Expectation Targets. The performance value for corresponding Expectation Targets will be observed from the start of each observation period, then at the end of each observation period, the value will be derived and configured.\n-\tIntroduce the \"achieveValue\" attribute in the ExpectationTarget to represent the performance value for the ExpectationTarget. Then the MnS consumer can use the \"getMOIAttributeValue\" operation to query the Intent <<IOC>> to obtain the achieveValue for a given ExpectationTarget.\nThis could result in NRM for Intent Reporting as follows:\nFigure 4.5.3.2-1 presents a detailed schematic of a telecommunication network, specifically focusing on the signal transmission and reception process within a 3GPP Long Term Evolution (LTE) network. The figure illustrates the various components involved in the signal path, including the base station (BS), mobile station (MS), and the core network elements such as the Evolved Packet Core (EPC). The signal is shown as a series of waves, representing the radio frequency (RF) signals that are transmitted and received by the MS. The figure also highlights the role of the EPC in managing the data traffic and ensuring efficient communication between the BS and the MS. Additionally, the figure includes a depiction of the macro and small cells, which are used to enhance coverage and capacity in the network. Overall, the figure provides a comprehensive overview of the signal transmission process in a 3GPP LTE network, showcasing the complex interplay of hardware and software elements that work together to enable seamless communication.\nFigure 4.5.3.2-1\nThe above solution would require, per Intent, that:\n-\tMnS Consumer configures each IntentExpectation to be reported with \"observationTime=N\".\n-\tFor each period N, MnS Producer reports the achieveValue.\n-\tFor every period N, MnS Producer updates the achieveValue of each expectation target.\n-\tMnS Consumer queries achieveValue of interested targets.\nNote: \tIt would \"achieveValue\" be current value (per Solution #1, as available in NRM at time of reporting), or some other computed value for the interval is not addressed in the present document. If computed, the definition and format could vary based on which attribute(s) are included.\nObservations on this approach:\n-\tIt Should avoid mix-and-match of observability.\n-\tFor attributes defined in NRM, existing subscription mechanism can be used to monitor updates. E.g. \"achieveValue\" proposed in this solution.\n-\tFor content not defined in NRM, new notifications would need to be defined for the intent content to be reported. E.g. associated PM/KPI.\n-\tThe configuration of the report output is contained in the Intent itself.\n-\tMnS Consumer would need to query (i.e. polling). Notifications would be preferred.\n-\tSince the observationTime of each IntentExpectation is configured separately, MnS Consumer would need to be aware of how relatively up-to-date each value is.\n-\tIt Should use of the term \"report\" which can be misleading, as there is no 'report' object (e.g. NRM, file, stream). This solution is completely notification based.\nThis solution would not modify the existing model in TS 28.312 [2]. A separate IntentReportCtrl IOC is proposed. The IntentReport IOC is used to contain the output of the expectation targets, as well as other status information currently contained in Intent. The latter would be removed to further separate the configuration of the Intent, from the monitoring/reporting of it throughout its lifecycle.\nFigure 4.5.3-1 illustrates a telecommunication network, specifically focusing on the signal transmission and reception process. The figure showcases the interaction between the transmitter, the signal, and the receiver, highlighting the various stages of signal processing. Key components include the transmitter, which generates the signal, and the receiver, which processes and decodes the received signal. The figure also depicts the use of repeaters and amplifiers to extend the signal's range and improve its quality. The layout and components in the figure are essential for understanding the telecommunication network's functionality and performance.\nFigure 4.5.3.3-1\nThe above solution would require, per Intent, that:\n-\tMnS Consumer configures each IntentReportCtrl with \"reportingPeriod=N\", and reference \"intentReference\" to the Intent instance for which the report is to be produced.\n-\tFor each period N, MnS Producer generates an IntentReport instance.\n-\tFor every period N, MnS Producer \"snapshots\" the Intent values.\n-\tMnS Consumer receives notification of the new IntentReport instance.\nObservations on this approach:\n-\tThe configuration of the report output is external to the Intent itself, and supports ability to configure different reports per Intent. The content (i.e. attributes) and reporting intervals can be different for each report generated.\n-\tEach report is a complete \" snapshot\" of the Intent at time of generation, available in NRM.\n-\tMnS Consumer does not need to handle different \"observationIntervals\" per attribute within same Intent.\nThis solution does not modify the existing model in TS 28.312 [2]. A separate IntentReportJob IOC is proposed, along with a file/stream based Intent report similar to other performance reporting.\nFigure 4.5.3.4-1 presents a detailed layout of a telecommunication network, illustrating the intricate infrastructure that supports data transmission. The figure showcases a network consisting of multiple nodes, each representing a crucial component in the overall system. These nodes are interconnected through a series of lines, symbolizing the various pathways through which information travels. The arrangement of these nodes and lines suggests a highly organized and efficient network design, optimized for rapid data transfer and minimal latency. The figure emphasizes the importance of each node in the network, highlighting their role in maintaining the smooth operation of the system. The visual representation of the network layout provides valuable insights into the network's architecture and its potential for scalability and adaptability to changing demands.\nFigure 4.5.3.4-1\n\nThe above solution would require, per Intent, that:\n-\tMnS Consumer configures each IntentReportJob control for file or streaming output, and a reference \"intentReference\" to the Intent instance for which the report is to be produced.\n-\tFor every period N, MnS Producer outputs the report content as configured in the job.\n-\tfor file based, MnS Consumer receives notification of the new Intent report file.\n-\tfor stream, MnS Consumer receives streaming content.\nObservations on this approach:\n-\tThis approach is consistent with other performance related reporting.\n-\tEach report should be complete and self-describing, and suitable for offline processing and/or archival.\n-\tA schema will need to be agreed, perhaps based on the existing PM/KPI formats.\nThis solution would modify the existing model in TS 28.312 [2] to add configuration of notifications of achieved values. The values to be notified are defined directly in the Intent.\nFigure 4.5.3.5-1 presents a detailed layout of a telecommunication network, specifically focusing on the signal transmission and reception process within a 3.5 GHz frequency band. The figure illustrates the various components involved, including the base station (gNB), user equipment (UE), and the signal's path through the air and potential reflections off obstacles. The diagram emphasizes the importance of signal processing techniques such as beamforming and precoding to ensure efficient and reliable communication. The visual representation of the signal's journey from the gNB to the UE provides a comprehensive understanding of the underlying technology that enables modern telecommunication services.\nFigure 4.5.3.5-1\n-\tMnS Consumer configures each Intent with 'reportIndicator=True' for values to be monitored.\n-\tMnS Consumer subscribes to the \"achieveValues\" in IntentExpection.\n-\tMnS Consumer receives notifications each time a new value is available.\nObservations on this approach:\n-\tThe configuration of the report output is contained in the Intent itself, and is a Boolean. This effectively limits the content of the report to a single report per Intent.\n-\tThis approach is different than subscribing to attribute notifications.\n-\tThe notifications required, and how they represent values in NRM and/or derived values not in the NRM, needs to be defined.\n-\tThere would be no \"report\" objects with this approach.\nFollowing table give overview of comparison of potential solutions for intent report.\nTable 4.5.3.6-1: Comparison and analysis of potential solutions for intent report\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 4.5.3.6-1: Comparison and analysis of potential solutions for intent report",
                                    "table number": 3,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "4.6\tIssue#4.6: Intent-driven Closed Loop control",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.6.1\t\tDescription",
                            "text_content": "A Closed Loop (CL) is an entity that implements the capabilities to get data, analyse it, generate decision and execute those decision on the network in general. It is implemented in four stages (i.e. monitor, analyse, decide and execute) and one or multiple stages may be implemented by a specific component (i.e. MnF). The detailed definition and concept for closed loop see TS 28.535 [5]. MnS producer of CL management services may implement a Closed-loop Control (CC) to support control capabilities for managing or controlling the closed loop.\nFigure 4.6.1-1 illustrates a closed loop system with various components, including a transmitter, receiver, and multiple intermediate nodes. The figure demonstrates the flow of information through the system, with signal transmission and reception occurring at different points. The transmitter sends a signal, which is received by the receiver after passing through the intermediate nodes. The closed loop design ensures that the signal is continuously transmitted and received, allowing for efficient communication within the system. The figure also highlights the importance of signal processing and error correction techniques in maintaining the integrity of the transmitted data.\nFigure 4.6.1-1: Example relations among closed loop components\nGiven a set of deployed network functions and/or management functions, the Closed-Loop Control may configure different network and management functions to achieve the desired closed loop goals based on intents with the input \"context\" (e.g. capabilities, control or use case) provided by the operator, as illustrated by Figure 4.6.1-2. Within the intent driven system, the MnS producer for intent driven MnS may play the role of closed loop control to implement the intent driven closed loop or interact with closed loop control to control the closed loop.\nFigure 4.6.1-2 illustrates the utilization of intents towards closed-loop control to automate the management and control of closed loops. The figure showcases the integration of various components, including the intent engine, service orchestrator, and application components, working in tandem to facilitate seamless communication and coordination. The visual representation emphasizes the importance of real-time data exchange and decision-making processes, highlighting the efficiency and effectiveness of the automated system in maintaining optimal performance and reliability.\nFigure 4.6.1-2: Using Intents towards Closed-Loop Control to automate closed loops management and control\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.6.2\tPotential requirements",
                            "text_content": "REQ-Intent_GEN_CON_01: The 3GPP management systems shall support a capability to allow a consumer (e.g. an operator) to express an intent to enable the provider of CL management to configure a CL based on an intent that expresses the intent expectations as closed loop goals, KPI, SLS, SLA targets, input-output pairs or capabilities\nREQ-Intent_GEN_CON_02: The 3GPP management systems shall support a capability to allow a consumer (e.g. an operator) to express an intent to enable the provider of CL management to configure its constituent management functions and goals to achieve the expectations of the intent.\nREQ-Intent_GEN_CON_03: The 3GPP management systems shall support a capability to inform an authorized consumer (e.g. an operator) about closed loops and management functions serving the intent.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.6.3\t\tPotential solutions",
                            "text_content": "Introduce an expectation with targets which capture the objectives for an entity that undertakes optimization. The expectation may be termed as network optimization expectation. The network optimization expectation may be expressed for a network slice or a network slice subnet i.e. the expectation object may be a network slice or a network slice subnet. This enables the MnS Producer to take steps, e.g., configure closed loops or the goals thereof intended to deliver on those targets.\nThe network optimization expectation targets may express the desired optimization outcomes. Depending on the stated targets, the MnS producer may as such configure one or more closed loops or optimization functions to achieve the desired targets. The network optimization expectation targets may for example be KPI targets that the optimization is required to achieve.\nThe network optimization expectation may include relative prioritizations of the different targets which indicate the relative interests of the intent MnS consumer on the different optimization targets.\nIntroduce the list of Closed loop Identifiers (e.g., DN of AssuranceClosedControlLoop) in IntentReport IOC to represent the closed loop instance(s) used to satisfy the intent.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.7\tIssue#4.7:\tMonitoring intent fulfilment information",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.7.1\t\tDescription",
                            "text_content": "In TS 28.312 [2], MnS Producer can deploy or configure corresponding managed entities to satisfy the intent. During the execution of intention, MnS producer continuously monitors intent fulfilment information. One scenario is that an intent may take a long period of policies execution to be satisfied. During the execution of the intent, something may happen, such as a new intent coming, a change in the execution environment. The MnS producer needs to monitor the intent fulfilment information so that policies can be adjusted in time. Another scenario is that the intent contains temporal information, such as how long the consumer could wait before the intent is initially satisfied, which refers to maximum duration. For example, MnS consumer can express the expectation that the coverage targets for certain radio network needs to be ensured in one hour, which means MnS producer have one hour to take/adjust actions to ensure the expected coverage targets for radio network. When the maximum unfulfilled duration is specified, the MnS producer may optimize its intent fulfilment plan, e.g., to decide different actions to be applied on the managed entities or to use different managed services, so that the intent can be fulfilled within the duration. The MnS producer needs to response the intent fulfilment information to the MnS consumer at the beginning and during the execution of the intent.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.7.2\tPotential requirements",
                            "text_content": "REQ-Intent_execution_monitoring-CON-1: The intent driven MnS Producer should have the capability to allow the authorized MnS consumer to request intent fulfilment information periodically or event-triggered.\nREQ-Intent_execution_monitoring-CON-2: The intent driven MnS Producer should have the capability to inform the authorized MnS consumer about intent fulfilment information periodically or event-triggered.\nREQ-Intent_execution_monitoring-CON-3: The intent driven MnS Producer should have the capability to allow the authorized MnS Consumer to provide the deadline expressing the maximum duration before the intent is initially satisfied or the latest time point by which the intent should be satisfied.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.7.3\t\tPotential solutions",
                            "text_content": "See clause 4.5.3, intent fulfilment information is one kind of intent report information.\nTo support REQ-Intent_execution_monitoring-CON-3, an attribute \"fulfilmentDeadline\" needs to be introduced in Intent IOC to represent MnS's requirements for the maximum unfulfilled duration before the intent is initially satisfied.\nThe fulfilmentDeadline may be an attribute of the whole intent or one of the expectations of the intent.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.8 \tIssue#4.8:\tEnablers for Intent Fulfilment",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.8.1\tDescription",
                            "text_content": "Management Functions such as SON functions and MDA functions may use AIML capabilities (either of a decision-making capability or an analysis capability) as defined in TR 28.908 [6]). In RAN, there is a complex inter-dependency among the control parameters (e.g., Transmit power, Antenna tilt) and the KPIs (e.g., throughput, load, handover) which inter-dependency also varies with time and several other real-life factors. For an operator to simultaneously manage multiple control parameters and KPIs, the operator has to learn the complex inter-dependency and its variations. Yet specific optimizations can be done using SON Functions and non-SON AI/ML enabled functions, which focus on optimizing specific targets through specific control parameters.\nIntent driven management may rely on these SON or MDA and AI/ML capabilities to accomplish the desired automation. Such Intent driven management may rely on ML-based solutions with or those without an entity that orchestrates the ML solutions (so called ML orchestration).\nCorrespondingly, the 3GPP management system should support these and other enablers are needed to realize or support the fulfilment of intents.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.8.2\tUse cases",
                            "text_content": "By focussing more on \"What\" needs to be achieved and less on \"How\" that outcome should be achieved, intents require that the intent-driven MnS consumer lets the intent-driven MnS producer make crucial decisions needed to achieve the \"What\". In this way, the intent-driven MnS producer takes away the important network management control away from the MnS consumer. However, before such important control can be given away, MnS consumer needs to be sure that the intent-driven MnS producer works in an expected manner, i.e. that the outcomes of the intent-driven MnS producer matches with the MnS consumer's expectations.\nTo rely on AI/ML for execution, a consumer my need to request the intent driven management service producer to return which AI/ML capabilities can be applied to specific intent management requirements (e.g., the enablers for satisfying the type of intent target). For this, the intent driven management service producer should be able to inform the consumer of the set of ML Entities that together achieve the consumer's intent management requirements.\nFor intents specifically, the complexity of the stated intents may significantly vary - from simple intents which may be fulfilled with a call to a single ML Entity to complex intents that may require an intricate orchestration of multiple ML Entities. For simple intents, it may be easy to employ the one or multiple ML Entities. For complex intents, it may be required to employ multiple ML Entities along with a corresponding functionality that manages their inter-related execution. The usage of the ML Entities requires the awareness of the AI/ML capabilities and interrelations to each other and to the desired intent management requirements.\nFigure 4.8.2.2-1 illustrates the mapping of intent management requirements to AI/ML capabilities, showcasing the integration of machine learning algorithms in telecommunications. The figure presents a flowchart with various stages, including data collection, feature extraction, model training, and prediction. Key elements include input data, ML models, and output predictions, emphasizing the role of AI in enhancing network performance and user experience.\nFigure 4.8.2.2-1: Mapping intent management requirements to AI/ML Capabilities\nGiven the knowledge of available AI/ML capabilities and their relation to automation requirements, the consumer may wish to request an intent to be fulfilled using specific AI/ML capabilities. The Intent driven management should enable allow the consumer to make such a request and to fulfil the intent for the consumer as requested.\nFigure 4.8.2.2-2 illustrates the process of request intent fulfilment within information for using/excluding AI/ML capabilities. The figure depicts a flowchart with various decision points, where the user's intent is analyzed and AI/ML capabilities are either enabled or disabled based on the context. The flowchart begins with the user's request, which is then processed through a series of steps involving data analysis, decision-making, and action execution. The figure emphasizes the integration of AI/ML in enhancing the user experience and optimizing resource allocation.\nFigure 4.8.2.2-2: Request intent fulfilment within information for using/excluding AI/ML capabilities\nAlthough SON focusses on the optimization of parameters based on operator stated targets, even when using SON to manage the radio parameters and KPIs, the complex interactions do remain critical. In TS 28.312 [2], an intent focuses more on describing the \"What\" needs to be achieved but less on \"How\" that outcome should be achieved. As such, intent-driven MnS can work as the interface between Operator and SON. Using that interface the Operator can specify the customization the Operator wants on certain radio parameters and/or KPIs, and the intent-driven MnS can generate appropriate commands to be executed by SON to achieve those targets. For example, the operator may state requirements for specific SON functions (SFs) that are responsible for optimizing the KPIs and/or control parameters specified within the intent. Such customizations may include specific values expected as outcomes on certain parameters or metrics.\nAs described in TS 28.104 [7], multiple MDA capabilities have been defined for different analysis purposes. Within one MDARequest, it is allowed for a consumer to indicate more than one MDA capabilities that the consumer may be interested in. In addition, an intent may also include multiple ExpectationTargets with different aspects. As such, intent-driven MnS can work as the interface between the Operator and MDA function. Using that interface the consumer can specify what the consumer wants for a specific subnetwork or network function in an intent, and the intent-driven MnS can initiate appropriate request to MDA function asking for analysis and feedback that help the intent-driven MnS to achieve those targets in the intent. For example, an operator may state requirements for the performance behaviours of a network slice specified within the intent, the requirements may include SLS requirement together with the requirement related to energy consumption, the intent-driven MnS then request analysis to specific MDA functions capable for SLS analysis and energy saving analysis. The intent MnS may decide how to handle intent based on the analysis report from MDA functions.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.8.3\tPotential requirements",
                            "text_content": "REQ-Intent_TEST_1: The intent-driven MnS shall have the capability to enable an authorized MnS consumer to request for the testing of intent-driven capabilities provided by an MnS producer.\nREQ-MLCAPTEST-1 The intent driven MnS should have a capability to enable an authorized consumer to request the MnS producer to return capabilities of one or more ML Entities to support specified intent management requirements.\nREQ-MLCAPTEST-2 The intent driven MnS should have a capability to enable an authorized consumer to request the MnS producer to fulfil an intent by using or excluding specific AI/ML capabilities\nREQ-Intent_SON_1: The intent driven MnS shall have the capability to enable a consumer to state an intent requesting for the SON Functions (SFs) responsible for optimizing the KPIs and/or control parameters specified in the intent.\nREQ-Intent_SON_2: The intent driven MnS shall have the capability to enable a consumer to state an intent requesting to execute SON functions needed optimize the KPIs and/or control parameters specified in the intent.\nREQ-Intent_MDAS_1: The intent driven MnS shall have the capability to enable a MnS consumer to state an intent requesting for MDA function to do analysis related to one or more MDA capabilities specified in the intent.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.8.4\tPossible solutions",
                            "text_content": "The intent-driven MnS consumer should be able to test the intent-driven MnS at any point of time. For the test, there may be some intents already available to the MnS consumer. Alternatively, MnS consumer can also use new, customized intents.\nMain purpose of the test is to check if the intent-driven MnS behaves the way MnS consumer expects it to behave. To achieve that, MnS consumer specifies the expected outcome from executing an intent beforehand. For already available intents, these outcomes may already have been defined. For new intents, the MnS consumer may list the expected outcomes and indicate that the intent is an intent under test. The intent IOC should be extended to indicate whether an intent is an intent under test or not. After the intent is executed, the MnS producer may send a detailed report to MnS consumer that contains all the information related to the outcome of the intent execution. The present document may be used by MnS consumer to check if the expectations are fulfilled. Alternatively, the MnS consumer may already send the list of expectation(s) to MnS producer beforehand. The MnS producer may use this list to compare the outcome(s) and send a report to MnS consumer about the intent expectation fulfilment. The intent fulfilment or intent report should be extended to information on whether the test has been successful or not.\nThis solution outline is feasible for enabling intent MnS consumers to test the appropriateness of intent MnS producers for the desired intents or classes of intents. This solution may be expanded in the normative phase.\nThe intent driven MnS producer may rely on available AI/ML capabilities to accomplish the desired intent. Such available AI/ML capabilities may need to be discovered by the consumers as a first step before consumer can request for those AI/ML capabilities to be applied for the intent. Furthermore, the mapping of the discovered AI/ML capabilities to intents needs to be performed. Finally, the according configuration and instructions for execution based on the available AI/ML capabilities is needed in order to achieve desired outcome. For example, in the case of intent fulfilment system leveraging on AI/ML capabilities, the discovered available AI/ML capabilities may be to the extent possible, mapped to incoming user or operators' intents.\nThe solution requires to:\n-\tIntroduce the AIML_capability_mapping_report <<datatype>>, which is generated by intent driven MnS producer\n-\tWhen an intent driven MnS Producer receives the desired intent management requirements from intent driven MnS Consumer e.g., network operator with a request for a mapping to available AI/ML Entities and their capabilities, the intent driven MnS Producer provides such a mapping of the MLEntities and capabilities e.g. as an AIML_capability_mapping_report to the intent driven MnS consumer to satisfy the received request. The AIML_capability_mapping_report <<datatype>> include the AI/ML capabilities information defined in TR 28.908 [6].\n-\tSupport intent creation with specific AI/ML Entities to be used or excluded to fulfil the intent as context information.\n-\tWhen subsequently, the MnS Producer receives the desired intent targets with the context for the specific AI/ML Entities to be used or excluded, the MnS Producer derives the configuration or execution instructions for the selected AI/ML Entities according to the received intent targets and the context for the specific AI/ML Entities, and provides such configuration or execution instructions to AI/ML Entities\nFigure 4.8.4.2-1 illustrates the utilization of machine learning (ML) capabilities for intent fulfillment in a telecommunications system. The figure depicts the process of intent detection, where ML algorithms analyze user behavior and context to identify their needs. This is followed by intent fulfillment, where the system uses ML-driven decision-making to route calls, messages, or data to the appropriate service or resource. The figure emphasizes the role of ML in enhancing user experience and optimizing resource allocation in a dynamic and complex telecommunications environment.\nFigure 4.8.4.2-1: Discovery and use of ML capabilities for Intent fulfilment\nThe solution described in clause 4.8.4 adopts the NRM-based approach, which reuses the existing provisioning MnS operations and notifications. Introducing the AIML_capability_mapping_report <<datatype>> the intent driven MnS Producer can inform its potential intent driven MnS consumers about the AI/ML capabilities it relies on to accomplish intent fulfilment. The intent driven MnS consumers can then request for specific capabilities to be applied for their intents. Therefore, the solution described in clause 4.8.4.1 is a feasible solution.\nFor an intent to be fulfilled via SON orchestration, the intent needs to relate to network control parameter or to network KPIs. Relatedly, the intent driven SON orchestrator needs to characterize the received into one of three categories represented by table 4.8.4.3-1\nTable 4.8.4.3-1\n\nAccordingly, given this evaluation within the MnS producer, if the intent does not relate to any of the three categories above, the Intent-driven SON orchestration should inform the intent consumer that the intent cannot be executed via SON orchestration. For this, an attribute may be added in the fulfilmentInfo or intent report for the failure or success of SON orchestration for intent fulfilment. Similarly, an attribute may be added in the FulfilmentInfo <<datatype>> or intent report for indicating when the intent is not in the scope of SON orchestration.\nMoreover, when executing via SON, the Intent-driven SON orchestration may observe contradictions in the intent – i.e. cases where targets on different expectation are in conflict. The Intent-driven SON orchestration should inform the intent MnS consumer of such contradictions which occur in the SON orchestration but not necessarily in the intent. For this, an attribute may be added in the FulfilmentInfo <<datatype>> or intent report for a contradiction detected in the SON orchestration.\nThe related sequence of actions is highlighted by the figure 4.8.4.3-1.\nFigure 4.8.4.3-1 illustrates the orchestration of Self-Organizing Networks (SON) through an intent-driven approach. The figure showcases the network nodes and their interactions, highlighting the role of the Network Management System (NMS) in managing and optimizing the network. The figure emphasizes the importance of automation and intelligence in network management, enabling efficient resource allocation and improving overall network performance.\nFigure 4.8.4.3-1: Intent-driven SON orchestration\nFor an intent, whether it can be fulfilled or not, the intent ExpectationTarget, e.g. the network or network function KPIs, can be analysed by MDA function(s). In this solution, when intent MnS producer receives an intent, it needs to check whether the ExpectationTarget contained in the intent is in scope of the supportedMDACapabilities of the correlated MDA function(s). For example, in the service support expectation scenario as described in TS 28.312 [2], if the included ExpectationTarget contains dLLatencyTarget or uLLatencyTarget, the correlated MDA function needs to have latency analysis capability.\nIf the correlated MDA function does not support the capability to fulfil the ExpectationTarget contained in the intent, the intent MnS producer should inform the intent consumer that the intent cannot be fulfilled because of lack of capability of MDA function. Similar method as described in clause 4.8.4.3 could be used that an attribute may be added in the fulfilmentInfo <<datatype>> or intent report for indicating when the intent is not in the scope of the supportedMDACapabilities of the correlated MDA function.\nIf the correlated MDA function supports the capability to fulfil the ExpectationTarget contained in the intent, the intent MnS producer should request the MDA report of the expectation targets (createMOI of MDARequest).\nNOTE:\tThe information included in the MDArequest is based on the intent has received and implementation, e.g. the value of requestedMDAOutputs can base on the expectationTargets described in the intent, the value of analyticsScope can base on the expectationObject described in the intent, other attributes included in MDArequest can base on context information included in the intent.\nThe related sequence of actions is highlighted by the figure 4.8.4.4-1.\nFigure 4.8.4.4-1 illustrates the network topology of a large-scale enterprise, showcasing the interconnectedness of various departments and branches. The figure displays a hierarchical structure, with the main headquarters at the center, connected to regional offices and finally to the individual workstations. The use of multiple layers and color-coded lines emphasizes the complex network infrastructure, while the labels and annotations provide a clear understanding of the communication paths and data flow. This visual representation is crucial for network administrators to optimize resource allocation, troubleshoot issues, and ensure efficient communication within the organization.\nFigure 4.8.4.4-1\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 4.8.4.3-1",
                                    "table number": 4,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "4.9\tIssue#4.9: Intent fulfilment feasibility check",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.9.1\tDescription",
                            "text_content": "The option for MnS producer automatically feasibility check when receive the intent creation and modification request from MnS consumer is described in TS 28.312 [2]. However, the intent fulfilment feasibility check capability which can be used by MnS consumer to request intent-driven MnS producer to check the feasibility for intent fulfilment before intent creation is missing. This functionality can be used to assist MnS consumer to generate the suitable intent information.\nWhen intent-driven MnS producer receiving the request, the intent fulfilment feasibility check may be performed to determine which intents are feasible, including check the satisfaction of intent fulfilment and potential conflicts between one or more intents.\nWhen the intent fulfilment feasibility check is accomplished, MnS producer needs to notify the MnS consumer about the result of feasibility check, indicates that the intent is feasible or infeasible. In addition, the MnS producer may also notify the MnS consumer about the reason why the intent is infeasible (e.g. the intent conflict, the satisfaction of intent fulfilment lowering than threshold).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.9.2\tPotential requirements",
                            "text_content": "REQ-Intent_Driven_MnS: The intent-driven MnS producer shall have capability enabling MnS consumer to request to check the feasibility for intent fulfilment.\nREQ-Intent_Driven_MnS: The intent-driven MnS producer shall have capability to inform the authorized MnS consumer about the result of intent fulfilment feasibility check, including feasible and infeasible.\nREQ-Intent_Driven_MnS: The intent-driven MnS producer shall have capability to inform the authorized MnS consumer about the infeasible reason if intent fulfilment feasibility check result is infeasible.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.9.3\tPotential solutions",
                            "text_content": "The MnS producer may inform the intent fulfilment feasibility check result and the infeasible reason to MnS consumer when the intent fulfilment feasibility check is finished. Following activities will be taken by MnS consumer:\n-\t If the intent fulfilment feasibility check result is indicating the request as feasible, MnS consumer will carry on to request creation of or modification to the intent instance (as described in TS 28.312 [2] Clause 6.3.2).\n-\tIn case the intent fulfilment feasibility check result is infeasible, MnS consumer may update the intent information based on infeasible reason and may trigger the intent fulfilment feasibility check again.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.10\tIssue#4.10: Intent handling capability obtaining",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.10.1\tDescription",
                            "text_content": "In TS 28.312 [2], clause 4.2.2 described that Intent-driven MnS producer (which can be intent handling MnF) have the following capabilities: validate the intent, translate the received intent to executable actions and evaluate the result/information about the intent fulfilment, and clause 6.2.2 defined different scenario specific intent expectations with different ExpectationObjects and ExpectationTargets to support different use cases. In network, multiple intent handling functions maybe deployed to support different kinds of intents. Different intent handling functions maybe deployed to support different intent expectation object domains, e.g. intent handling function A is deployed to handle the radio network related intents, intent handling function B is deployed to handle the 5GC network related intents, while intent handling function C is deployed to handle the service related intents. Or different intent handling functions are deployed to support different areas of the same intent expectation object domain, e.g. intent handling function D is deployed to support to handle the intent for radio network in Area#1, while intent handling function E is deployed to support to handle the intent for radio network in Area#2.\nBefore MnS consumer expresses the intent expectation targets and expectation objects to MnS producer (i.e. intent handling MnF), MnS consumer may want to know what expectation targets and expectation objects can be supported by MnS producer. Based on such supported expectation targets information and expectation objects information, the MnS consumer may use such information to select the proper intent handling MnF to express the intent.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.10.2\tPotential solutions",
                            "text_content": "Following are the proposed solution based on generic intent information model defined in TS 28.312 [2]:\nThe new IntentHandlingFunction <<IOC>> contained by ManagedEntity <<proxyClass>> is introduced, and change the Intent <<IOC>> to be contained by IntentHandlingFunction <<IOC>>. The IntentHandlingFunction <<IOC>> includes a list of supportedIntentHandlingCapability <<datatype>> which represent intent handling function's capabilities in support of intent handling. The supportedIntentHandlingCapability <<datatype>> includes attribute \"supportedExpectationObjects\" and/or attribute \"supportedExpectationTargets\".\nFigure 4.10.2-1 illustrates the enhancement of the generic intent information model, focusing on the red highlighted box. This figure demonstrates the addition of new attributes and relationships to improve the model's ability to represent complex telecommunication processes. The enhanced model includes updated data types and improved data flow, enabling more accurate and efficient communication between different components in the telecommunication system.\nFigure 4.10.2-1: Enhancement of generic intent information model (The red highlighted box are the enhanced part)\nBased on the enhancement of generic intent information model, MnS consumer can query the IntentHandlingFunction <<IOC>> to obtain the intent handling capability information, and express the intent for a specific intent handling function. An authorized MnS consumer also can use the DN of IntentHandlingFunction instance to query all Intent instances handled by corresponding intent handling function.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.11\tIssue#4.11: Enhancement of generic Information model definition",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.11.1\tDescription",
                            "text_content": "In TS 28.312 [2], the generic intent information model (including the Intent, IntentExpectation, ExpectationObject, ExpectationTarget, Context and Fulfilment) are defined. Following aspects for generic intent information model need to be enhanced:\n-\tEnhancement Aspect 1: the intent activate/de-activate intent management capabilities are described in clause 4.2.2 in TS 28.312 [2], which enable the MnS consumer to request to suspend an intent on the MnS producer side or cancel the suspension for a suspended intent on the MnS producer side. The intent is suspended represents the state that the intent is not be considered for fulfilment. However, currently there is no mechanism defined to enable the MnS consumer to request to suspend an intent on the MnS producer or cancel the suspension for a suspended intent on the MnS producer.\n-\tEnhancement Aspect 2: the attribute \"fulfilmentStatus\" is defined to indicate whether the intent is fulfilled or not fulfilled. However, the observation period for the intent fulfilment evaluation is not defined.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.11.2\tPotential solutions",
                            "text_content": "Regarding the Enhancement Aspect 1, it proposes to add attribute \"intentAdminState\" in Intent <<IOC>>, the allowed value can be \"ACTIVATED\" and \"DE-ACTIVATED\". In case MnS consumer want to suspend an intent, MnS consumer can request MnS producer to configure attribute \"intentAdminState\" with value \"De-ACTIVATED\". In case MnS consumer want to resume an intent on the MnS producer side when the intent is suspended, MnS consumer can request MnS producer to configure attribute \"intentAdminState\" with value \"ACTIVATED\".\nRegarding the Enhancement Aspect 2, it proposes to reuse attribute \"observationTime\" defined in clause 4.5.1 to represent the period for evaluating the fulfilment information for corresponding Expectation Targets, IntentExpectation and Intent. The fulfilment information will be observed from the start of each observation period, then evaluated and derived at the end of each observation period. MnS producer configures the attributes related to intent fulfilment information at the end of each observation period also.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "5\tIssue investigations and potential solutions for the requirements documented in TS 28.312",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tIssue# 5.1: Solution for radio service intent expectation",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.1.1\tDescription",
                            "text_content": "In TS 28.312 [2], the use case and requirements for intent containing an expectation for delivering a radio service is described in clause 5.1.2. However, corresponding radio service intentExpectation is missing in clause 6.2.2 Scenario specific IntentExpectation definition. The intentExpectation for radio service needs to be defined by utilizing the construct of the generic IntentExpectation <<dataType>> with set of allowed values and concrete dataTypes specified.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.2\tPotential solutions",
                            "text_content": "The Radio Service Expectation needs to be defined by utilizing the construct of the generic IntentExpectation <<dataType>> with set of allowed values and concrete dataTypes specified.\nThe objectType of the Radio Service Expectation can be Radio Service.\nThe ObjectContexts for the Radio Service Expectation may include coverageAreaPolygonContext, coverageTACContext, and serviceTypeContext. All these ObjectContexts include attributes: contextAttribute, contextCondition and contextValueRange. The concrete contextValueRange see corresponding attribute definition in RANSliceSubnetProfile in TS 28.541 [3].\nThe ExpectationTargets for Radio Service Expectation may include maxNumberofUEsTarget, activityFactorTarget, dLThptPerUETarget, uLThptPerUETarget, uEMobilityLevelTargetTarget, uESpeedTarget, dLLatencyTarget, uLLatencyTarget, dLMaxPktSizeTarget,and uLMaxPktSizeTarget. All these ExpectationTargets include attributes: targetName, targetCondition and targetValueRange. The concrete targetValueRange see corresponding attribute definition in RANSliceSubnetProfile in TS 28.541 [3].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.2\tIssue# 5.2: Enhancement for service support expectation",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.2.1\tDescription",
                            "text_content": "In TS 28.312 [2], the use case and requirements for intent containing an expectation for delivering a service is described in clause 5.1.3. The corresponding service intent expectation is defined in clause 6.2.2.1.2 Service Support Expectation. However, the IntentExpectation<<dataType>> for Service Support Expectation is missing the concrete definitions for user experience. Service Support Expectation needs to be enhanced to add userExperienceContext and userExperienceTarget into the construct of the IntentExpectation<<dataType >>.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.2\tPotential solutions",
                            "text_content": "In TS 28.312 [2] clause 6.2.2.1.2.2 ObjectContexts, The ObjectContexts for Service Support Expectation may be enhanced to include userExperienceContext, the userExperienceContext includes attributes: contextAttribute, contextCondition and contextValueRange. The concrete userExperienceContext is not defined in the present document.\nIn TS 28.312 [2] clause 6.2.2.1.2.3 ExpectationTargets, The ExpectationTargets for Service Support Expectation may be enhanced to include userExperienceTarget. The userExperienceTarget includes attributes: targetName, targetCondition and targetValueRange. The concrete userExperienceTarget is not defined in the present document.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "6\tIssue investigations and potential solutions for collaboration with other SDOs",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.1\tIssue#6.1: Comparison of 3GPP intent management operations and TM Forum intent management operations",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.1.1\tDescription",
                            "text_content": "TM Form defines the Intent Management operations, which includes intent management operations between Intent Owner and Intent Handler for TM Forum intent. TS 28.312 [2] clause 6.1 also defines the Management operations for Intent, which includes the intent management operations between MnS consumer and MnS producer for 3GPP intent. However, the comparison of 3GPP intent management operations and TM Forum intent management operations is missing, which can provide the guidelines for transform functionality between TM Forum intent management operations and 3GPP intent management operations for the potential intent interface deployment scenario#2 in clause 6.3.2.2.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.2\tPotential solutions",
                            "text_content": "The following table illustrates the comparison between 3GPP intent management operations (defined in TS 28.312[2]) and TM Forum intent management operations.\nTable6.1.2-1 the comparison between 3GPP Intent Management operations and TM Forum intent management operations\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table6.1.2-1 the comparison between 3GPP Intent Management operations and TM Forum intent management operations",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "6.2\tIssue#6.2: Comparison of 3GPP Intent procedures and TM Forum Intent management functionality",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.2.1\tDescription",
                            "text_content": "TM Forum defines Intent management functionality in TMF921A [2], which includes intent management interactions between Intent Owner and Intent Handler for TM Forum intent. TS 28.312 [1] clause 6.3 defines the procedures for intent management interactions for 3GPP intent between MnS consumer and MnS producer. However, the comparison of 3GPP Intent procedures and TM Forum Intent management functionality is missing, which can provide the guidelines for transform functionality between TM Forum intent management functionality and 3GPP intent procedure for the potential intent interface deployment scenario#2 in clause 6.3.2.2\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.2\tPotential solutions",
                            "text_content": "The following table illustrates the comparison between TM Forum intent management functionality and the 3GPP intent management procedures defined in TS 28.312 [1].\nThose which are not currently comparable are excluded.\nTable6.2.2-1 Comparison of 3GPP Intent Management procedures and TM Forum Intent management functions\n\nNote:\tThere is additional functionality defined in TMF which is not included above, i.e. Judge/Preference, Probe, and Best/Propose interactions.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table6.2.2-1 Comparison of 3GPP Intent Management procedures and TM Forum Intent management functions",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "6.3\tIssue#6.3: Potential deployment scenarios for intent interface",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.3.1\tDescription",
                            "text_content": "TS 28.312 [2] described different kinds of intents which can be applicable for different kinds of standardized reference interfaces based on roles related to 5G networks and network slicing management. See below:\nFigure 6.3.1-1 illustrates the various roles involved in the management of 5G networks and network slicing. The figure depicts a network architecture with multiple entities, including network slicing managers, network slicing orchestrators, and network slicing controllers. These roles are responsible for managing, orchestrating, and controlling network resources to support different network slices. The figure also shows the interfaces between these roles, highlighting the interdependencies and communication flows necessary for efficient network slicing management.\nFigure 6.3.1-1 Roles related to 5G networks and network slicing management\n3GPP specifies the intent driven MnS (including management operations and intent model) to manage 3GPP network and services, and provides interoperability capability between MnS consumer and MnS producer, TM Forum defines the intent management API (including management operations and intent model) between intent owner and intent handler.\nFor the management of 3GPP network and services, currently there is no description for the deployment scenarios for intent interface.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.2\tPotential deployment scenarios",
                            "text_content": "In this deployment scenario, 3GPP intent driven MnS (defined in TS 28.312 [2]) can be applicable for following kinds of standardized reference interfaces for the management of 3GPP network and services:\n-\tManagement interactions for Intent-NOP between NOP and NEP;\n-\tManagement interactions for Intent-CSP between CSP and NOP;\n-\tManagement interactions for Intent-CSC between CSC and CSP;\nFigure 6.3.2.1-1 presents a potential intent interface deployment scenario, illustrating the arrangement of various network elements such as the Customer Premises Equipment (CPE), Gateway, and Network Gateway (NGW). The figure highlights the logical connections between these components, emphasizing the importance of seamless communication and efficient data flow. The CPE is at the forefront, receiving and transmitting data to and from the user, while the Gateway and NGW facilitate secure and reliable connections to the broader network. The figure underscores the need for a well-structured and interconnected network infrastructure to support modern communication requirements.\nFigure 6.3.2.1-1: Potential intent interface deployment scenario#1\nIn this deployment scenario, 3GPP intent driven MnS can be applicable for following kinds of standardized reference interfaces for the management of 3GPP network and services:\n-\tManagement interactions for Intent-NOP between NOP and NEP;\n-\tManagement interactions for Intent-CSP between CSP and NOP;\nTM Form intent management API can be applicable for following kinds of standardized reference interfaces for the management of 3GPP network and services:\n-\tManagement interactions for Intent-CSC between CSC and CSP;\nFigure 6.3.2.2-1 illustrates a potential intent interface deployment scenario, showcasing the arrangement of various network elements such as the ingress and egress interfaces, as well as the inter-domain routing. The figure highlights the importance of efficient interface management in maintaining network performance and security. Key components include the ingress and egress interfaces, which facilitate traffic entry and exit from the network, and the inter-domain routing, which ensures seamless communication across different network domains. The figure emphasizes the need for careful planning and configuration to optimize network performance and minimize potential security risks.\nFigure 6.3.2.2-1: Potential intent interface deployment scenario#2\nIn this intent interface deployment scenario, following contents can be used as guidelines for transformation functionality between TM Forum intent management API for intent-CSC and 3GPP intent driven MnS for intent-CSP.- Mapping the 3GPP and the TM Forum intentExpectation Models described in Annex C in TS 28.312 [2].\n-\tComparison of 3GPP intent management operations and TM Forum intent management operations described in clause 6.1.2.\n-\tComparison of 3GPP Intent procedures and TM Forum Intent management functionality described in clause 6.2.2.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "7\tConclusion and recommendation",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "7.1\tConclusion and recommendation for new capabilities",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.1.1\tIssue#4.1: intent driven approach for RAN energy saving",
                            "text_content": "It is recommended to introduce the scenario and requirements for intent driven approach for RAN energy saving, and define corresponding scenario specific IntentExpectation definition (including introducing new expectation targets for RAN Energy Consumption and RAN Energy Efficiency).\nThe detailed solution see clause 4.1.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.2\tIssue#4.2:\tIntent conflicts and intents containing contradictions",
                            "text_content": "It is recommended to introduce three intent related conflict scenarios, including Target conflict, Expectation conflict and Intent conflict. Also recommend to introduce the notification information provided by MnS producer when such a conflict is detected with the specified intent, intent expectations or expectation targets which give rise to the conflict. Additionally, MnS consumer can give intent conflict handling guidelines to MnS producer as contexts to solve such intent conflict.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.3\tIssue#4.3:\tEnhancement of radio network intent expectation",
                            "text_content": "It is recommended to enhance the existing radio network intent expectation to support following aspects:\n-\tSupport MnS consumer to express the radio network expectation targets for the coverage area represented by a list of Cells.\n-\tSupport MnS consumer to express the radio network expectation targets for the specific service type or UE groups instead of the whole radio network.\n-\tSupport MnS consumer to express the radio network capacity targets (including Maximum HighUL/DLPRB Load Ratio) for the specified areas.\n-\tSupport MnS consumer to express the radio network transport contexts (including NgInterfaceContext, OMInterfaceContext and NextHopContext) for delivering a radio network for a specified area.\n-\tSupport MnS consumer to express the radio network expectation targets for specific time periods.\nThe detailed solution see clause 4.3.2.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.4\tIssue#4.4: 5GC related intent expectations",
                            "text_content": "It is recommended to introduce the IntentExpectation for core network by utilizing the construct of the generic IntentExpectation <<dataType>> with set of allowed values and concrete dataTypes, including the objectType, ObjectContext and ExpectationTargets for the 5GC to represent MnS consumer's expectation for 5GC.\nThe detailed solution see clause 4.4.3.1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.5\tIssue#4.5: Intent Report",
                            "text_content": "It is recommended to introduce the new IntentReport <<IOC>> to represent the three types of intent report information. In the associated Intent, including intent fulfilment information, achieved values for targets and intent conflict information. The MnS consumer can query the IntentReport <<IOC>> to obtain the intent report information and/or subscribe for update notifications to obtain intent report information.\nA proposed solution is detailed in clause 4.5.3.1 which will provide the basis for the solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.6\tIssue#4.6: Intent-driven Closed Loop control",
                            "text_content": "It is recommended to introduce a network optimization expectation which capture the desired optimization targets for a specific network scope and which then enable the MnS producer to configure one or more closed loops with goals to achieve the optimization targets.\nThe detailed solution see clause 4.6.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.7\tIssue#4.7: Monitoring intent fulfilment information",
                            "text_content": "It is recommended to introduce the attribute \"executionTime\" in Intent <<IOC>> to allow MnS consumer to represent the requirements for the execution time of the intent.\nIntent report related conclusion see the Intent Report in clause 7.1.5.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.8\tIssue#4.8: Enablers for Intent Fulfilment",
                            "text_content": "It is recommended to introduce to the normative specification a new attribute to indicate whether an intent is an intent under test or not. Relatedly, it is recommended to introduce the new attribute to indicate if the test has been successful or not\nThe detailed solution see clause 4.8.4.1.\nIt is recommended to introduce the AIML_capability_mapping_report <<datatype>> with which the intent driven MnS Producer can inform its potential intent driven MnS consumers about the AI/ML capabilities it relies on to accomplish intent fulfilment. Additionally, it is recommended to introduce an attribute on the intent object that used by an intent driven MnS consumer to request for specific capabilities to be applied for their intents.\nIt is recommended (as proposed in clause 4.8.4.3) to introduce attributes in the fulfilmentInfo <<datatype>> or intent report to support intents using SON orchestration. These attributes indicate the failure or success of fulfilling the intent using SON orchestration, or if the intent is not in the scope if SON orchestration. These attributes may also indicate failures such as contradictions detected in the SON orchestration.\nThis solution is only applicable using SON functions to support intents\nIt is recommended to introduce new attribute in the fulfilmentInfo <<datatype>> or intent report for indicating when the intent expectation cannot be fulfilled and it is because of the expectation target is not in the scope of the supportedMDACapabilities of the correlated MDA function.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.9\tIssue#4.9: Intent fulfilment feasibility check",
                            "text_content": "The study identified the issue for feasibility check in following two options:\n-\tOption#1: MnS producer automatically conducts feasibility check when it receives the intent creation or modification request from MnS consumer.\n-\tOption#2: MnS consumer requests intent-driven MnS producer to check the feasibility of intent fulfilment before making intent creation or modification request.\nRegarding Option#1, it is recommended to introduce the feasibility check result info (including feasibilityResult and inFeasibleReason) in intent report model to allow the MnS consumer to obtain the feasibility check result.\nRegarding Option#2, there is no concrete solution identified in the present document. So, it is recommended to further investigate the solution in the future.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.10\tIssue#4.10: Intent handling capability obtaining",
                            "text_content": "It is recommended to introduce the new IntentHandlingFunction <<IOC>>, which includes a list of supportedIntentHandlingCapability <<datatype>> which represent intent handling function's capabilities in support of intent handling. Change the Intent <<IOC>> to be contained by IntentHandlingFunction <<IOC>>.\nThe detailed solution see clause 4.10.2\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.11\tIssue#4.11: Enhancement of generic Information model definition",
                            "text_content": "It is recommended to enhance the existing generic intent information model support following aspects:\n-\tIntroduce attribute \"intentAdminState\" in Intent <<IOC>> to allow MnS consumer to suspend and resume an intent.\n-\tIntroduce attribute \"observationTime\" in Intent <<IOC> to allow MnS consumer to specify the observation period for the intent fulfilment evaluation\n-\tThe detailed solution see clause 4.11.2.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.2\tConclusion and recommendation for the solution for requirements documents in TS 28.312",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.2.1\tIssue# 5.1: Solution for radio service intent expectation",
                            "text_content": "It is recommended to introduce the RadioServiceExpectation by utilizing the construct of the generic IntentExpectation <<dataType>> with set of allowed values and concrete dataTypes, including the objectType, ObjectContext and ExpectationTargets for the radio service intent expectation as one of the scenario specific intent expectation.\nThe detailed solution see clause 5.1.2.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.2\tIssue# 5.2: Enhancement for service support expectation",
                            "text_content": "It is recommended to add userExperienceContext and userExperienceTarget into the construct of the IntentExpectation<< dataType >>, to enhance the concrete definitions for user experience.\nThe userExperienceContext includes attributes: contextAttribute, contextCondition and contextValueRange. The concrete userExperienceContext is not defined in the present document.\nThe userExperienceTarget includes attributes: targetName, targetCondition and targetValueRange. The concrete userExperienceTarget is not defined in the present document.\nSo, it is recommended to further investigate the solution in future release.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.3\tConclusion and recommendation for collaboration with other SDOs",
                    "description": "",
                    "summary": "",
                    "text_content": "It is recommended to introduce the intent interface deployment scenarios (including deployment scenario#1 described in clause 6.3.2.1 and deployment scenario#2 described in clause 6.3.2.2) for the management of 3GPP network and services in the Annex of TS 28.312 [2].\nTo support the deployment scenario#2, It is also recommended the following content to be added in the Annex of TS 28.312 [2] as guidelines for the transformation functionality between TM Forum intent management API for intent-CSC to 3GPP intent driven MnS for intent-CSP.\n-\tComparison of 3GPP intent management operations and TM Forum intent management operations described in clause 6.1.2.\n-\tComparison of 3GPP Intent procedures and TM Forum Intent management functionality described in clause 6.2.2.\nThe detailed solution see clause 6.1.2, clause 6.2.2 and clause 6.3.2.\n\n\n\n",
                    "tables": [
                        {
                            "description": "",
                            "table number": 7,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        }
    ]
}