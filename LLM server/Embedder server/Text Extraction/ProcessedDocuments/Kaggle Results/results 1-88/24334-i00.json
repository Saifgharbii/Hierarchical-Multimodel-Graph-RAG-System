{
    "document_name": "24334-i00.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Specification has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document specifies the protocols for Proximity-based Services (ProSe) between:\n-\tthe ProSe-enabled UE and the ProSe Function (over the PC3 interface); and\n-\ttwo ProSe-enabled UEs (over the PC5 interface).\nThe present document defines the associated procedures for ProSe service authorisation, ProSe direct discovery (using E-UTRA or WLAN technology), EPC-level ProSe discovery and ProSe direct communication.\nThe present document also defines the message format, message contents, error handling and system parameters applied by the protocols for ProSe.\nThe present document is applicable to:\n-\tthe ProSe-enabled UE; and\n-\tthe ProSe Function.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 23.303: \"Proximity-based services (ProSe); Stage 2\".\n[3]\t3GPP TS 29.344: \"Proximity-services (Prose) Function to Home Subscriber Server (HSS) aspects; Stage 3\".\n[4]\t3GPP TS 23.003: \"Numbering, addressing and identification\".\n[5]\t3GPP TS 29.345: \"Inter-Proximity-services (Prose) Function signalling aspects; Stage 3\".\n[6]\t3GPP TS 33.303: \"Proximity-based Services (ProSe); Security aspects\".\n[7]\tW3C REC-xmlschema-2-20041028: \"XML Schema Part 2: Datatypes\".\n[8]\tIETF RFC 4122: \"A Universally Unique IDentifier (UUID) URN Namespace\".\n[9]\t3GPP TS 24.333: \"Proximity-services (ProSe) Management Objects (MO)\".\n[10]\tIETF RFC 1035: \"DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION\".\n[11]\t3GPP TS 24.301: \"Non-Access-Stratum (NAS) protocol for Evolved Packet System (EPS); Stage 3\".\n[12]\t3GPP TS 36.331: \"Evolved Universal Terrestrial Radio Access (E-UTRA); Radio Resource Control (RRC); Protocol specification\".\n[13]\tWi-Fi Alliance Technical Committee P2P Task Group, \"Wi-Fi Peer-to-Peer (P2P) Technical Specification\", Version 1.1.\n[14]\tIEEE Std 802.11-2012: \"IEEE Standard for Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Part 11: Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) Specifications\".\n[15]\tIETF RFC 4862: \"IPv6 Stateless Address Autoconfiguration\".\n[16]\tIETF RFC 3927: \"Dynamic Configuration of IPv4 Link-Local Addresses\".\n[17]\t3GPP TS 31.102: \"Characteristics of the Universal Subscriber Identity Module (USIM) application\".\n[18]\tIETF RFC 9112:\"HTTP/1.1\".\n[19]\tIETF RFC 9110:\"HTTP Semantics\".\n[20]\t: \"Service Loading\".\n[21]\tOMA-WAP-TS-PushOTA-V2_1-20110405-A: \"Push Over the Air\".\n[22]\t: \"Push Architecture\".\n[23]\t3GPP TS 36.304: \"Evolved Universal Terrestrial Radio Access (E-UTRA); User Equipment (UE) procedures in idle mode\".\n[24]\t3GPP TS 23.122: \"Non-Access-Stratum (NAS) functions related to Mobile Station (MS) in idle mode\".\n[25]\tIETF RFC 3023: \"XML Media Types\".\n[26]\tIETF RFC 4288: \"Media Type Specifications and Registration Procedures\".\n[27]\t3GPP TS 32.277: \"Proximity-based Services (ProSe) charging\".\n[28]\tIETF RFC 1166: \"Internet Numbers\".\n[29]\tIETF RFC 5952: \"A Recommendation for IPv6 Address Text Representation\".\n[30]\t3GPP TS 24.008: \"Mobile Radio Interface Layer 3 specification; Core Network Protocols; Stage 3\".\n[31]\t3GPP TS 29.343: \"Proximity-services (ProSe) function to ProSe application server aspects (PC2); Stage 3\".\n[32]\tITU-T Recommendation E.212: \"The international identification plan for mobile terminals and mobile users\".\n[33]\tIETF RFC 4861: \"Neighbor Discovery for IP version 6 (IPv6)\".\n[34]\t3GPP TS 23.401: \"General Packet Radio Service (GPRS) enhancements for Evolved Universal Terrestrial Radio Access Network (E-UTRAN) access\".\n[35]\t3GPP TS 23.221: \"Architectural requirements\".\n[36]\tIETF RFC 4291: \"IP Version 6 Addressing Architecture\".\n[37]\t3GPP TS 36.323: \"Packet Data Convergence Protocol (PDCP) specification\".\n[38]\t3GPP TS 23.179: \"Functional architecture and information flows to support mission critical communication services\".\n[39]\tIETF RFC 6507: \"Elliptic Curve-Based Certificateless Signatures for Identity-Based Encryption (ECCSI)\".\n[40]\tIETF RFC 6508: \"Sakai-Kasahara Key Encryption (SAKKE)\".\n[41]\t3GPP TS 33.102: \"3G Security; Security architecture\".\n[42]\t3GPP TS 33.233: \"Generic Authentication Architecture (GAA); Generic Bootstrapping Architecture (GBA) Push function\".\n[43]\t3GPP TS 24.007: \"Mobile radio interface signalling layer 3; General aspects\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions, symbols and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tDefinitions",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms and definitions given in 3GPP TR 21.905 [1] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in 3GPP TR 21.905 [1].\nProSe Function CTF (ADF): Accounting Data Forwarding (ADF) function block of the Charging Trigger Function (CTF) in the ProSe Function.\nUsage information report: usage information related to one collection period.\nUsage information report list: one or more usage information report(s) and associated with a UE identity.\nNot served by E-UTRAN:  the UE is either:\n-\toutside of E-UTRAN coverage;\n-\twithin E-UTRAN coverage but not camped on any cell;\n-\twithin E-UTRAN coverage but camped on a non-E-UTRAN cell; or\n-\tcamped on an E-UTRAN cell not operating on the carrier frequency provisioned for ProSe direct service.\nOpen ProSe direct discovery: a type of ProSe direct discovery without explicit permission from the ProSe-enabled UE being discovered.\nRestricted ProSe direct discovery: a type of ProSe direct discovery that only takes place with explicit permission from the ProSe-enabled UE being discovered.\nFor the purposes of the present document, the following terms and definitions given in 3GPP TS 23.303 [2] apply:\nLocal PLMN\nProSe-enabled UE\nGeographical area\nProSe Query Code\nProSe Response Code\nDiscovery Query Filter\nDiscovery Response Filter\nRestricted ProSe Application User ID\nProSe Discovery UE ID\nDiscovery Entry ID\nProSe Restricted Code\nRelay Service Code\nUser Info ID\nDiscovery Group ID\nProSe Per-Packet Priority\nProSe Layer 2 Group ID\nProSe Per-Packet Reliability (PPPR)\nProSe UE-to-Network Relay\nRemote UE\nApplication Layer Group ID\n\nFor the purposes of the present document, the following terms and definitions given in 3GPP TS 23.003 [4] apply:\nECGI\nTMGI\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in 3GPP TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in 3GPP TR 21.905 [1].\nACE\tApplication-Controlled Extension\nADF\tAccounting Data Forwarding function block\nCTF\tCharging Trigger Function\nDUCK\tDiscovery User Confidentiality Key\nDUIK\tDiscovery User Integrity Key\nDUSK\tDiscovery User Scrambling Key\nECCSI\tElliptic Curve-based Certificateless Signatures for Identity-based Encryption\nECGI\tE-UTRAN Cell Global Identification\nFQDN\tFully Qualified Domain Name\nGPI\tGBA Push Information\nMBMS\tMultimedia Broadcast/Multicast Service\nMIC\tMessage Integrity Check\nMIME\tMulti-Purpose Internet Mail Extensions\nPDUID\tProSe Discovery UE ID\nProSe\tProximity-based Services\nPRUK\tProSe Relay User Key\nRPAUID\tRestricted ProSe Application User ID\nSAI\tService Area Identifier\nSAKKE\tSakai-Kasahara Key Encryption\nTMGI\tTemporary Mobile Group Identity\nTTL\tTime To Live\nUUID\tUniversally Unique IDentifier\n\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tGeneral",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "4.1\tOverview",
                    "description": "",
                    "summary": "",
                    "text_content": "Proximity-based Services (ProSe) are services that can be provided by the 3GPP system based on UEs being in proximity to each other. In this release of the document, the 3GPP system enablers for ProSe include the following functions:\n-\tProSe direct discovery (using E-UTRA or WLAN technology);\n-\tProSe direct communication;\n-\tEPC-level ProSe discovery; and\n-\tEPC support for WLAN direct discovery and communication.\nAmong the above functions, ProSe direct discovery and EPC-level ProSe Discovery is applicable for both Public Safety UE and non-Public Safety UE. ProSe direct communication is applicable for Public Safety UE only.\nIn this release of the document, the stand-alone procedure for EPC support for WLAN direct discovery and communication is not supported.\nThe communication security over the PC3 interface is specified in 3GPP TS 33.303 [6]. The communication security over the PC3ch interface is the same as communication security over the PC3 interface specified in 3GPP TS 33.303 [6].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "5\tProSe service authorisation and authorisation update procedure",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tService authorisation and authorisation update for ProSe direct discovery and ProSe direct communication",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.1.1\tGeneral",
                            "text_content": "The service authorisation for ProSe direct discovery and ProSe direct communication determines whether the UE is authorised to use ProSe direct discovery (based on E-UTRA or WLAN technology) and ProSe direct communication, in a particular PLMN or when not served by E-UTRAN. In this release of the specification, ProSe direct communication using E-UTRA technology is supported only for Public Safety ProSe-enabled UE. The service authorisation is either:\n1)\tpre-configured in the UE. The pre-configured service authorisation may be stored in the ME, or in the USIM as specified in 3GPP TS 31.102 [17], or in both the ME and the USIM. If both the ME and the USIM contain the same parameters, the values stored in the USIM shall take precedence. The UE shall not use the pre-configured service authorisation if the contents of the USIM indicate that the UE is not authorised to use them (see 3GPP TS 31.102 [17]); or\n2)\ttransferred between the UE and the ProSe Function over the PC3 interface with the ProSe Direct Services Provisioning Management Object or the ProSe Public Safety Direct Services Provisioning Management Object as specified in 3GPP TS 24.333 [9].\nWhen using option 2) above, the UE shall request service authorisation to use ProSe direct discovery or ProSe direct communication or both from the ProSe Function of the HPLMN. As specified in 3GPP TS 29.345 [5], the ProSe Function of the HPLMN contacts the ProSe Function of each local PLMN or VPLMN to obtain the service authorisation, merges it with its own service authorisation and sends the merged service authorisation to the UE.\nNOTE 1:\tHow the Prose Function in the HPLMN merges the authorisation policy is implementation dependent.\nThe service authorisation provided by the ProSe Function of the HPLMN for E-UTRA-based ProSe direct discovery for non-public safety use contains a list of PLMNs in which the UE is authorised to use ProSe direct discovery. The service authorisation provided by the ProSe Function of the HPLMN for WLAN-based ProSe direct discovery for non-public safety use contains a list of PLMNs whose ProSe Application IDs the UE is authorised to use to perform WLAN-based ProSe direct discovery.\nThe service authorisation provided by the ProSe Function of the HPLMN for ProSe direct discovery for public safety use indicates:\n-\tthe list of PLMNs in which the UE is authorised to use ProSe direct discovery for public safety use when served by E-UTRAN;\n-\twhether the UE is authorised to perform ProSe direct discovery for public safety use when not served by E-UTRAN, and if so, the required radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN;\n-\tthe group member discovery related parameters; and\n-\tthe ProSe UE-to-network relay related parameters.\nNOTE 2:\tThe provisioning and use of of radio parameters for ProSe direct discovery for public safety use as described in this clause does not apply to WLAN-based ProSe direct discovery.\nThe service authorisation provided by the ProSe Function of the HPLMN for ProSe direct communication indicates:\n-\twhether the UE is authorised to perform ProSe direct communication when not served by E-UTRAN, and if so, the required radio parameters to be used for ProSe direct communication when not served by E-UTRAN;\n-\tthe ProSe direct communication policy parameters;\n-\tthe list of PLMNs in which the UE is authorised to use direct communication when served by E-UTRAN; and\n-\tthe usage information reporting configuration.\nAlternatively, the ProSe direct communication policy parameters, the group member discovery related parameters and certain ProSe UE-to-network relay related parameters (i.e. items a, c and f in the parameters related to ProSe UE-to-network relaying in subclause 5.1.3) mentioned above can be provided by the third party public safety provider application server, using mechanisms that are out of scope of the present specification. If the UE receives the same parameters associated with the same Application Layer Group ID from the third party public safety provider application server as those which had been previously transferred between the UE and the ProSe Function over the PC3 interface with the ProSe Public Safety Direct Services Provisioning Management Object, the UE shall use the parameters provided by the third party public safety provider application server for ProSe direct communication.\nThe UE discovers the IP address of the ProSe Functions of the HPLMN as specified in subclause 5.1.2.\nOptionally, the operator can configure the UE with configuration parameters for establishment of the PDN connection for reaching the HPLMN ProSe Function. If the UE is configured with the configuration parameters for establishment of the PDN connection for reaching the HPLMN ProSe Function (see 3GPP TS 24.333 [9]):\na)\tif a PDN connection for reaching the HPLMN ProSe Function is not established yet, the UE shall establish the PDN connection for reaching the HPLMN ProSe Function according to the UE configuration and shall send the HTTP request message via the PDN connection for reaching the HPLMN ProSe Function; and\nb)\tif a PDN connection for reaching the HPLMN ProSe Function is already established either due to other ProSe feature or due to other application, the UE shall send the HTTP request message via the PDN connection for reaching the HPLMN ProSe Function.\nAfter the UE is authorised to use ProSe direct discovery or ProSe direct communication or both, the ProSe Function of the HPLMN shall update the service authorisation:\na)\twhen the ProSe Function of the HPLMN is informed the ProSe related subscription data is updated at the HSS;\nb)\twhen the ProSe Function of the HPLMN decides to revoke the authorisation for ProSe direct service;\nc)\twhen the ProSe Function of the HPLMN is informed the ProSe Function of the VPLMN or local PLMN decides to revoke the authorisation for ProSe direct service; or\nd)\twhen the ProSe Function of the HPLMN decides to update the ProSe Discovery UE ID of the UE before the timer T4018 expires.\nThe ProSe Function of the HPLMN sends the updated authorisation for ProSe direct service to the UE, e.g. by sending an OMA push message. If the update of service authorisation is triggered to revoke the authorisation for ProSe direct service, the updated authorization for ProSe direct service does not include:\na)\tthe authorization for ProSe direct service (discovery or communication or both) which is to be revoked; and\nb)\tthe PLMN ID of the PLMN in which the service authorisation is to be revoked.\nIf the update of service authorisation is triggered to update the ProSe Discovery UE ID of the UE, the updated authorisation for ProSe direct service includes the new ProSe Discovery UE ID assigned to the UE and the associated validity timer T4015. The UE then sends the new ProSe Discovery UE ID to the ProSe Application Server, using mechanisms that are out of scope of the present specification.\nNOTE 3:\tThe ProSe Function of the HPLMN can send the updated authorisation for ProSe direct service to the UE immediately or wait for the next time when the UE communicates with the ProSe Function of the HPLMN based on operator's policy; in the latter case, the UE is allowed to use ProSe direct services until the next time that it will communicate with the ProSe Function of the HPLMN.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.2\tProSe Function discovery",
                            "text_content": "The IP address of the ProSe function in the HPLMN may be pre-configured in the UE and in this case, the UE may use the pre-configured IP address. Alternatively, the FQDN of the ProSe Function in the HPLMN may be self-constructed by the UE, i.e. derived from the PLMN ID of the HPLMN. The UE may perform DNS lookup as specified in IETF RFC 1035 [10].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.3\tService authorisation from ProSe Function",
                            "text_content": "The UE shall initiate the service authorisation procedure to the ProSe Function of the HPLMN:\na)\twhen the UE receives a request from upper layer to perform open ProSe direct discovery announcing or monitoring, restricted ProSe direct discovery model A announcing or monitoring, restricted ProSe direct discovery model B discoverer operation or discoveree operation, or direct communication and has no valid service authorisation;\nb)\twhen the UE is performing open ProSe direct discovery announcing or monitoring, restricted ProSe direct discovery model A announcing or monitoring, restricted ProSe direct discovery model B discoverer operation or discoveree operation, or direct communication and changes its registered PLMN to a PLMN which is not included in the list of PLMNs in which the UE is authorised to perform the corresponding service, and the request from upper layer to perform the corresponding service is still in place in the new registered PLMN;\nc)\twhen timer T4005 associated with a valid service authorisation policy expires and the request from upper layer to perform open ProSe direct discovery announcing or monitoring, restricted ProSe direct discovery model A announcing or monitoring, restricted ProSe direct discovery model B discoverer operation or discoveree operation, or direct communication in the corresponding PLMN is still in place; or\nd)\twhen timer T4015 associated with a ProSe Discovery UE ID expires and the request from upper layer to perform restricted ProSe direct discovery model A announcing or monitoring, restricted ProSe direct discovery model B discoverer operation or discoveree operation is still in place.\nNOTE 1:\tIn order to ensure continuity of ProSe direct discovery service or ProSe direct communication service, the UE can request service authorisation from the ProSe Function of the HPLMN before the timer T4005 associated with a service authorisation policy in a PLMN expires or the timer 4015 associated with a ProSe Discovery UE ID expires.\nThe UE shall obtain the service authorisation from the ProSe Function of the HPLMN over the PC3 interface by requesting the ProSe Direct Services Provisioning Management Object or the ProSe Public Safety Direct Services Provisioning MO as specified in 3GPP TS 24.333 [9]. The UE waits for an implementation dependent time for an answer from the ProSe Function. If the ProSe Function does not respond within that time, the UE may retry the service authorisation procedure. The number of retries performed by the UE is implementation dependent. Unless the UE receives a response from the ProSe function for service authorisation, the UE shall not consider that the request has been authorised.\nThe ProSe direct discovery service authorisation from the ProSe Function of the HPLMN may include:\na)\tthe PLMNs in which the UE is authorised to perform open ProSe direct discovery monitoring, and for each PLMN a timer T4005 indicating for how long the monitoring authorisation policy in that PLMN is valid;\nb)\tthe PLMNs in which the UE is authorised to perform open ProSe direct discovery announcing , and for each PLMN, it indicates:\n1)\ta timer T4005 indicating for how long the announcing authorisation policy in that PLMN is valid; and\n2)\tthe authorised announcing range (short/medium/long).\nc)\tvoid;\nd)\tvoid;\ne)\tvoid;\nf)\tvoid;\ng)\tthe PLMNs in which the UE is authorised to perform restricted ProSe direct discovery model A monitoring, and for each PLMN a timer T4005 indicating for how long the monitoring authorisation policy in that PLMN is valid;\nh)\tthe PLMNs in which the UE is authorised to perform restricted ProSe direct discovery model A announcing, and for each PLMN, it indicates:\n1)\ta timer T4005 indicating for how long the announcing authorisation policy in that PLMN is valid; and\n2)\tthe authorised announcing range (short/medium/long).\ni)\tthe PLMNs in which the UE is authorised to perform restricted ProSe direct discovery model B discoverer operation, and for each PLMN, it indicates:\n1)\ta timer T4005 indicating for how long the discoverer operation authorisation policy in that PLMN is valid; and\n2)\tthe authorised discoverer operation range (short/medium/long).\nj)\tthe PLMNs in which the UE is authorised to perform restricted ProSe direct discovery model B discoveree operation, and for each PLMN, it indicates:\n1)\ta timer T4005 indicating for how long the discoveree operation authorisation policy in that PLMN is valid; and\n2)\tthe authorised discoveree operation range (short/medium/long).\nk)\tthe ProSe Discovery UE ID assigned to the UE for restricted ProSe direct discovery with an associated timer T4015 indicating for how long this ProSe Discovery UE ID is valid; and\nl)\tthe PLMNs whose ProSe Application IDs the UE is authorised to use to perform WLAN-based ProSe direct discovery.\nThe ProSe direct discovery for public safety use service authorisation from the ProSe Function of the HPLMN may include:\na)\tthe PLMNs in which the UE is authorised to perform ProSe direct discovery for public safety use announcing, and for each PLMN, it indicates:\n1)\ta timer T4005 indicating for how long the authorisation policy for that operation is valid; and\n2)\tthe authorised announcing range (short/medium/long);\nb)\twhether the UE is authorised to perform ProSe direct discovery for public safety use announcing when the UE is not served by E-UTRAN;\nc)\tthe PLMNs in which the UE is authorised to perform ProSe direct discovery for public safety use monitoring, and for each PLMN, a timer T4005 indicating for how long the authorisation policy for that operation is valid;\nd)\twhether the UE is authorised to perform ProSe direct discovery for public safety use monitoring when the UE is not served by E-UTRAN;\ne)\tthe PLMNs in which the UE is authorised to perform ProSe direct discovery for public safety use discoverer operation, and for each PLMN, it indicates:\n1)\ta timer T4005 indicating for how long the authorisation policy for that operation is valid; and\n2)\tthe authorised discoveree operation range (short/medium/long);\nf)\twhether the UE is authorised to perform ProSe direct discovery for public safety use discoverer operation when the UE is not served by E-UTRAN;\ng)\tthe PLMNs in which the UE is authorised to perform ProSe direct discovery for public safety use discoveree operation, and for each PLMN, it indicates;\n1)\ta timer T4005 indicating for how long the authorisation policy for that operation is valid; and\n2)\tthe authorised discoverer operation range (short/medium/long);\nh)\twhether the UE is authorised to perform ProSe direct discovery for public safety use discoveree operation when the UE is not served by E-UTRAN; and\ni)\tthe radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN and the geographical area(s) in which the UE is allowed to use these radio parameters.\nNOTE 2:\tThe provisioning and use of of radio parameters for ProSe direct discovery for public safety use as described in this clause does not apply to WLAN-based ProSe direct discovery.\nNOTE 3: \tThe authorised announcing range, authorised discoverer operation range and authorised discoveree operation range as indicated above and in this clause do not apply to WLAN-based ProSe direct discovery. When WLAN-based ProSe direct discovery is used the range is determined by the underlying WLAN technology.\nThe ProSe direct discovery for public safety use service authorisation from the ProSe Function of the HPLMN may include the following parameters related to ProSe UE-to-network relaying:\na)\tthe User Info ID for the UE-to-network relay discovery;\nb)\tthe PLMNs in which the UE is authorised to act as a UE-to-network relay when the UE is served by E-UTRAN, and for each PLMN:\n1)\twhether the relay needs to report the IMEI/IMEISV of the remote UE(s) connected to or disconnected from the relay; and\n2)\ta timer T4005 indicating for how long the authorisation policy for that operation is valid;\nc)\tfor each connectivity service provided by a UE-to-network relay:\n1)\tthe Relay Service Code identifying the connectivity service;\n2)\toptionally the PDN type to be used for the relayed traffic of the connectivity service. If the PDN type is not provisioned, the IPv4v6 is used for the relayed traffic of the connectivity service;\n3)\toptionally the APN to be used for the relayed traffic of the connectivity service. If the APN is not provisioned, the default APN is used for the relayed traffic of the connectivity service;\n4)\tthe ProSe Relay UE ID; and\n5)\tthe address of the ProSe Key Management Function that the UE shall use to obtain security contents;\nd)\twhether the UE is authorised to act as a remote UE towards a UE-to-network relay;\ne)\tvoid;\nf)\tfor each connectivity service authorised to be accessed by the remote UE:\n1)\tthe Relay Service Code identifying the connectivity service;\n2)\tthe IP version(s) to be used for the traffic of the connectivity service;\n3)\toptionally the User Info ID of the UE-to-network relay providing the connectivity service; and\n4)\tthe address of the ProSe Key Management Function that the UE shall use to obtain security contents; and\ng)\tmapping rules between the QCI of EPS bearer and the ProSe Per-Packet Priority for downlink unicast traffic relayed over the PC5 interface.\nThe ProSe direct discovery for public safety use service authorisation from the ProSe Function of the HPLMN may include the following parameters related to group member discovery, for each application layer group:\na)\tthe User Info ID for the group member discovery;\nb)\tthe Discovery Group ID identifying the discovery group;\nc)\tthe Application Layer Group ID identifying an application layer group that the UE belongs to; and\nd)\tthe address of the ProSe Key Management Function that the UE shall use to obtain security contents.\nThe one-to-many ProSe direct communication service authorisation from the ProSe Function of the HPLMN may include:\na)\twhether the UE is authorised to perform one-to-many ProSe direct communication when not served by E-UTRAN;\nb)\tthe radio parameters to be used for one-to-many ProSe direct communication when not served by E-UTRAN as defined in 3GPP TS 36.331 [12] and the geographical area(s) in which the UE is allowed to use these radio parameters;\nc)\tthe PLMNs in which the UE is authorised to perform one-to-many ProSe direct communication when served by E-UTRAN, and for each PLMN a timer T4005 indicating for how long the one-to-many direct communication authorisation policy in that PLMN is valid; and\nd)\tthe one-to-many ProSe Direct communication policy parameters, consisting of, for each application layer group:\n1)\tthe ProSe Layer-2 Group ID;\n2)\tthe ProSe Group IP multicast address;\n3)\twhether the UE should use IPv4 or IPv6 for that group;\n4)\tan IPv4 address to be used by the UE as a source address in case IPv4 is used;\n5)\tthe address of the ProSe Key Management Function that the UE shall use to obtain group-related security contents; and\n6)\tthe Application Layer Group ID identifying an application layer group that the UE belongs to; and\ne)\tthe usage information reporting configuration, including:\n1)\tthe address of the server to which the UE shall upload the usage information reports;\n2)\tthe collection period;\n3)\tthe reporting window;\n4)\twhether or not the UE shall report the Group Parameters in the usage information;\n5)\twhether or not the UE shall report the time stamps of the first transmission/reception during the collection period in the usage information;\n6)\twhether or not the UE shall report the amount of data transmitted during the collection period in the usage information, and whether with location information;\n7)\twhether or not the UE shall report the amount of data received during the collection period in the usage information, and whether with location information;\n8)\twhether or not the UE shall report the time stamps when it went in and out of E-UTRAN coverage during the collection period in the usage information;\n9)\twhether or not the UE shall report the list of locations of the UE when in E-UTRAN coverage during the reporting period in the usage information; and\n10)\twhether or not the UE shall report the radio parameters used for ProSe direct communication (i.e. indicator of which radio resources used and radio frequency used) during the reporting period in the usage information.\nThe one-to-one ProSe direct communication service authorisation from the ProSe Function of the HPLMN may include:\na)\twhether the UE is authorised to perform one-to-one ProSe direct communication when not served by E-UTRAN;\nb)\tthe radio parameters to be used for one-to-one ProSe direct communication when not served by E-UTRAN as defined in 3GPP TS 36.331 [12] and the geographical area(s) in which the UE is allowed to use these radio parameters;\nc)\tthe PLMNs in which the UE is authorised to perform one-to-one ProSe direct communication when served by E-UTRAN, and for each PLMN a timer T4005 indicating for how long the one-to-one direct communication authorisation policy in that PLMN is valid; and\nd)\tthe one-to-one ProSe direct communication policy parameters, consisting of:\n-\tthe ProSe Per-Packet Priority value for PC5 signalling messages; and\n-\tfor each application layer group,\n1)\tthe Layer 2 ID used for unicast communication;\n2)\tvoid;\n3)\tthe address of the Key Management Server that the UE shall use to obtain security contents; and\n4)\tthe Application Layer Group ID identifying an application layer group that the UE belongs to.\nNOTE 4:\tProSe communication operation is not applicable to local PLMNs.\nThe ProSe Function of the HPLMN is allowed to take the serving PLMN of the UE into account when including the authorised PLMNs in the service authorisation to the UE.\nThe UE shall start the timer(s) T4005 with the values included in this service authorisation. The UE shall consider that an authorisation policy is valid in the associated PLMN until the corresponding the timer T4005 expires or is stopped.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "6\tProSe direct discovery",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.1\tOverview",
                    "description": "",
                    "summary": "",
                    "text_content": "This clause describes the PC3 Control Protocol procedures between the UE and the ProSe Function for ProSe direct discovery announcing and monitoring. It also describes the ProSe Protocol procedures at the UE for ProSe direct discovery of other ProSe-enabled UEs over the PC5 interface.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.1.1\tTransport protocol for PC3 Control Protocol messages for ProSe direct discovery",
                            "text_content": "The UE and ProSe Function shall use HTTP 1.1 as specified in IETF RFC 9112 [18] and IETF RFC 9110 [19] as the transport protocol for ProSe messages over the PC3 interface. The ProSe messages described here shall be included in the body of either an HTTP request message or an HTTP response message. The following rules apply:\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.2\tHandling of UE-initiated procedures",
                            "text_content": "The following rules apply for UE-initiated procedures:\n-\tThe UE initiates ProSe transactions with an HTTP request message containing the PC3 request(s);\n- \tThe ProSe Function responds to the requests with an HTTP response message containing the PC3 response(s) for the PC3 request(s); and\n-\tHTTP POST methods are used for PC3 direct discovery procedures.\nOptionally, the operator can configure the UE with configuration parameters for establishment of the PDN connection for reaching the HPLMN ProSe Function. If the UE is configured with the configuration parameter for establishment of the PDN connection for reaching the HPLMN ProSe Function (see 3GPP TS 24.333 [9]):\na)\tif a PDN connection for reaching the HPLMN ProSe Function is not established yet, the UE shall establish the PDN connection for reaching the HPLMN ProSe Function according to the UE configuration and shall send the HTTP request message via the PDN connection for reaching the HPLMN ProSe Function; and\nb)\tif a PDN connection for reaching the HPLMN ProSe Function is already established (e.g. either due to other ProSe feature or due to other application), the UE shall send the HTTP request message via the PDN connection for reaching the HPLMN ProSe Function;\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.3\tHandling of ProSe Function-initiated procedures",
                            "text_content": "The ProSe Function-initiated messages for ProSe direct discovery over the PC3 interface shall be contained in an HTTP response message. Either HTTP long polling, or OMA Push, can be used to trigger the HTTP request corresponding to this HTTP response message. The UE and the ProSe Function shall support OMA Push for network initiated procedures. Optionally the UE and ProSe Function should support long polling as well for network initiated procedures.\nIf the UE supports the HTTP long polling, the UE shall include a Network-Initiated Transaction Method set to \"HTTP long polling\" in the DISCOVERY_REQUEST message to the ProSe Function.\nUpon receiving a DISCOVERY_REQUEST message containing a Network-Initiated Transaction Method set to \"HTTP long polling\", if the ProSe Function supports the HTTP long polling and wants to use the HTTP long polling for network initiated procedures, the ProSe Function shall include a Network-Initiated Transaction Method set to \"HTTP long polling\" in the DISCOVERY_RESPONSE message. Otherwise the ProSe Function shall not include a Network-Initiated Transaction Method in the DISCOVERY_RESPONSE message.\nIf the UE receives a DISCOVERY_RESPONSE message including a Network-Initiated Transaction Method set to \"HTTP long polling\", the UE shall use the HTTP long polling for network initiated procedures. Otherwise, the UE shall assume that the ProSe Function uses OMA Push for network initiated procedures.\nThe HTTP long polling method involves the following steps:\na)\tthe UE sends an empty HTTP request message as a polling request when it expects network initiated message(s) over the PC3 interface;\nb)\tthe ProSe Function defers its response to the UE's request until;\ni)\tone ore more network-initiated PC3 message(s) for the UE are available. The ProSe Function encloses the message(s) in an HTTP response message and send it to the UE; or\nii)\ta particular timeout for HTTP polling has occurred. The ProSe Function then sends an empty HTTP response message as the polling response to the UE.\nc)\tAfter receiving the response from the ProSe Function, the UE may keep polling after some waiting period if:\ni)\tthe UE receives an empty polling response; or\nii)\tthe UE receives prose function-initiated message(s) from the ProSe Function but still expects additional network-initiated message(s).\nNOTE:\tThe implementation of the HTTP polling process can be coordinated with the SUPL (Secure User Plane Location) procedures to synchronize the SUPL location report procedures and the HTTP polling procedure so as to reduce unnecessary wait time of polling.\nIf the UE is trigged to send a PC3 message to the ProSe Function while it has a pending HTTP polling request, the UE shall open another HTTP connection to the ProSe Function to send this new request. Alternately the UE may always use a separate dedicated HTTP connection for polling.\nThe OMA Push method involves the following steps:\na)\tif one or more network-initiated PC3 message(s) for the UE are available, the ProSe Function sends a push message containing a particular URL to the UE via the OMA-Push Architecture as defined in  [22]. The URL is linked to the PC3 message(s) to be sent to the UE. The ProSe Function (performing OMA Push Proxy Gateway functionality) generates a Push Message as specified in OMA-WAP-TS-PushOTA-V2_1-20110405-A [21] with the PDU set according to  [20]. The URL information shall be included in the PDU payload;\nb)\tAfter receiving the push message, the UE retrieves the URL from the payload of the message and sends an HTTP GET request to the ProSe Function with this URL; and\nc)\tthe ProSe Function sends an HTTP response message containing the PC3 message(s) to the UE.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.2\tProcedures",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.2.1\tTypes of ProSe direct discovery procedures",
                            "text_content": "The following PC3 Control Protocol procedures are defined:\n-\tannounce request;\n-\tmonitor request;\n-\tmatch report; and\n-\tnetwork initiated direct discovery update.\nIn the following descriptions of PC3 Control Protocol procedures, the terms \"request\" and \"response\" refer to the corresponding PC3 Control Protocol messages, not to the HTTP request or response. The following procedure descriptions use a single PC3 Control Protocol message for illustration purposes.\nNOTE:\tA single HTTP request message can contain multiple PC3 Control Protocol requests and a single HTTP response message can contain multiple PC3 Control Protocol responses.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.2\tAnnounce request procedure for open ProSe direct discovery",
                            "text_content": "The purpose of the announce request procedure for open ProSe direct discovery is for the UE:\n-\tto obtain one or more ProSe Application Code(s) to be announced over the PC5 interface, upon a request for announcing from upper layers as defined in 3GPP TS 23.303 [2];\n-\tto inform the ProSe Function that the UE wants to stop announcing a ProSe Application Code as defined in 3GPP TS 23.303 [2]; or\n-\tto upload metadata associated with a ProSe Application ID to the ProSe Function as defined in 3GPP TS 23.303 [2].\nThe UE shall be authorised for open ProSe direct discovery announcing in the registered PLMN or the local PLMN based on the service authorisation procedure as specified in clause 5, before initiating the announce request procedure.\nNOTE:\tThe notion of \"local PLMN\" does not apply for WLAN-based ProSe direct discovery. The UE can engage in WLAN-based ProSe direct discovery as announcing UE regardless of the serving PLMN or other PLMNs that provide E-UTRAN coverage in the UE location.\nThe UE includes one of the ProSe Application Code(s) obtained as a result of a successful announce request procedure per PC5_DISCOVERY message and passes the PC5_DISCOVERY messages to the lower layers for transmission over the PC5 interface.\nBefore initiating the announce request procedure for open ProSe direct discovery, the UE is configured with the data structure of the ProSe Application IDs appropriate for its HPLMN. This step is performed using mechanisms out of scope of 3GPP.\nIf the UE is authorised to perform E-UTRA-based open ProSe direct discovery announcing in the PLMN operating the radio resources signalled from the serving PLMN, or if the UE is authorised to perform WLAN-based open ProSe direct discovery, it shall initiate an announce request procedure:\na)\twhen the UE is triggered by an upper layer application to announce a ProSe Application ID and the UE has no valid corresponding ProSe Application Code for that upper layer application;\nb)\twhen the validity timer T4000 assigned by the ProSe Function to a ProSe Application Code has expired and the request from upper layers to announce the ProSe Application ID corresponding to that ProSe Application Code is still in place;\nc)\twhen the UE selects a new PLMN while announcing a ProSe Application Code and intends to announce in the new PLMN, and the UE is authorised for open ProSe direct discovery announcing in the new PLMN;\nd)\twhen, while announcing a ProSe Application ID, the UE intends to switch the announcing PLMN to a different PLMN without performing PLMN selection, and the UE does not have a valid allocated ProSe Application Code for this new PLMN yet;\ne)\twhen the UE needs to inform the ProSe Function that the UE wants to stop announcing a ProSe Application Code; or\nf)\twhen the UE needs to update metadata associated with a ProSe Application ID to the ProSe Function.\nWhen the UE selects a new PLMN while announcing a ProSe Application Code and the UE is not yet authorised for open ProSe direct discovery announcing in the new PLMN, the UE shall initiate an announce request procedure only after the UE is authorised for open ProSe direct discovery announcing in the new PLMN.\nNOTE 1:\tTo ensure service continuity if the UE needs to keep announcing a ProSe Application Code corresponding to the same ProSe Application ID, the UE can initiate the announce request procedure before the TTL timer T4000 assigned by the ProSe Function for a Prose Application Code expires.\nThe UE initiates the announce request procedure for open ProSe direct discovery by sending a DISCOVERY_REQUEST message with:\n-\ta new transaction ID;\n-\tthe ProSe Application ID set to the ProSe Application ID received from upper layers;\n-\tthe command set to \"metadata_update\" if the UE has a valid ProSe Application Code corresponding to the ProSe Application ID and intends to update metadata associated with the ProSe Application ID to the ProSe Function, otherwise set to \"announce\";\n-\tthe UE identity set to the UE's IMSI;\n-\tthe Application Identity set to the Application Identity of the upper layer application that requested the announcing;\n-\tthe Discovery Entry ID set to 0 when this is a new request or set to the Discovery Entry ID received from the ProSe Function if the announce request is to update a previously sent announce request;\n-\tthe ACE Enabled Indicator set to \"application-controlled extension enabled\" if application-controlled extension is required by the upper layers or \"normal\" if application-controlled extension is not used;\n-\toptionally the Requested Timer set to the length of validity timer associated with the ProSe Application Code that the UE expects to receive from the ProSe Function;\n-\toptionally the Metadata set to the metadata received from upper layers associated with the ProSe Application ID;\n-\toptionally in case of E-UTRA-based open ProSe direct discovery the Announcing PLMN ID set to the PLMN ID of the local PLMN operating the radio resources that the UE intends to use for announcing this ProSe Application ID; and\n-\toptionally the PC5_tech set to the PC5 radio technology that the UE wishes to use. PC5_tech may include more than one PC5 radio technology.\nIf open ProSe direct discovery with application-controlled extension is requested by upper layers, the DISCOVERY_REQUEST message shall also include the Application Level Container, which contains application-level data transparent to the 3GPP network, to be used by the ProSe Application Server e.g. to assign ProSe Application Code Suffix(es).\nWhen the UE initiates the announce request procedure to inform the ProSe Function that the UE wants to stop announcing a ProSe Application Code before the associated valid timer expires, the UE shall set the Requested Timer to 0.\nNOTE 2:\tA UE can include one or multiple transactions in one DISCOVERY_REQUEST message for different ProSe Application IDs, and receive corresponding <response-announce> element or <response-reject> element in a DISCOVERY_RESPONSE message for each respective transaction. In the following description of the announce request procedure, only one transaction is included.\nFigure 6.2.2.2.1 illustrates the interaction of the UE and the ProSe Function in the announce request procedure.\nFigure 6.2.2.1: Announce Request Procedure\n\nFigure 6.2.2.1 illustrates the announce request procedure in a network, detailing the steps involved in forwarding an announcement request from a source node to a destination node. The figure showcases the process of a source node sending an announcement request to a network, which then propagates through various nodes, including a router, a switch, and a destination node. The figure emphasizes the importance of efficient routing and forwarding algorithms in ensuring timely delivery of announcement requests.\nFigure 6.2.2.2.1: Announce request procedure\nUpon receiving a DISCOVERY_REQUEST message with the command set to \"announce\", if the Requested Timer is included in the DISCOVERY_REQUEST message and the Requested Timer is set to 0, the ProSe Function shall check whether there is an existing UE context containing the discovery entry identified by the Discovery Entry ID included in the DISCOVERY_REQUEST message. If the discovery entry exists in the UE context, the ProSe Function shall inform the ProSe Function in the announcing PLMN to remove the corresponding discovery entry as specified in 3GPP TS 29.345 [5] when the announcing PLMN is not the same as that of the PLMN to which the ProSe Function belongs and remove the discovery entry identified by the Discovery Entry ID from the UE's context. Then the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-announce> element with:\n-\tthe transaction ID set to the value of the transaction ID received in the DISCOVERY_REQUEST message, and\n-\tthe Discovery Entry ID set to the identifier associated with the corresponding discovery entry.\nUpon receiving a DISCOVERY_REQUEST message with the command set to \"announce\", if the Requested Timer is not included in the DISCOVERY_REQUEST message or the Requested Timer included in the DISCOVERY_REQUEST message is not set to 0, the ProSe Function shall perform the following procedure.\nThe ProSe Function shall check that the application corresponding to the Application Identity contained in the DISCOVERY_REQUEST message is authorised for open ProSe direct discovery announcing. If the application is authorised for open ProSe direct discovery announcing, the ProSe Function may also check whether the ProSe Application ID contained in the DISCOVERY_REQUEST message is known. If the ProSe Application ID is known or the ProSe Function skips the check of the ProSe Application ID, the ProSe Function shall check whether there is an existing context for the UE associated with the requested ProSe Application ID.\nIf there is no associated UE context, the ProSe Function checks with the HSS whether the UE is authorised for open ProSe direct discovery announcing as described in 3GPP TS 29.344 [3]. If the check indicates that the UE is authorised then:\n-\tthe ProSe Function shall check whether the UE is authorised to announce the ProSe Application ID contained in the DISCOVERY_REQUEST message;\n-\tif the UE is authorised to announce the ProSe Application ID, the ACE Enabled Indicator is included and set to \"application-controlled extension enabled\", the Application Level Container is included in the DISCOVERY_REQUEST message and the requested application uses application-controlled extension, the ProSe Function shall check whether the UE is authorised to use ACE. If the UE is authorised for ACE, the ProSe Function shall invoke the procedure described in 3GPP TS 29.343 [31] to check whether the UE is authorised to announce the requested ProSe Application ID with application-defined suffix(es), and obtain suffix-related information from the ProSe Application Server. The ProSe Function shall then allocate one ProSe Application Code Prefix and a value for validity timer T4000 to be used with the ProSe Application Code Suffix(es) obtained from the ProSe Application Server for the given ProSe Application ID as specified in 3GPP TS 29.343 [31]. The ProSe Function may take into account the Requested Timer if contained in the DISCOVERY_REQUEST message;\n-\tif the UE is authorised to announce the ProSe Application ID, the ACE Enabled Indicator is included and set to \"normal\" in the DISCOVERY_REQUEST message and the requested application does not use application-controlled extension, the ProSe Function shall allocate the corresponding ProSe Application Code(s) and a value for validity timer T4000. The ProSe Function may take into account the Requested Timer if contained in the DISCOVERY_REQUEST message;\n-\tif the UE is authorised to announce the ProSe Application ID, the ACE Enabled Indicator is set included and to \"normal\" in the DISCOVERY_REQUEST message, the Application Level Container is included in the DISCOVERY_REQUEST and the requested application only uses application-controlled extension, the ProSe Function shall check whether the UE is authorised to use ACE. If the UE is authorised for ACE, the ProSe Function shall invoke the procedure described in 3GPP TS 29.343 [31] to check whether the UE is authorised to announce the requested ProSe Application ID with application-defined suffix(es), and obtain suffix-related information from the ProSe Application Server. The ProSe Function shall then allocate one ProSe Application Code Prefix and a value for validity timer T4000 to be used with the ProSe Application Code Suffix(es) obtained from the ProSe Application Server for the given ProSe Application ID as specified in 3GPP TS 29.343 [31]. The ProSe Function may take into account the Requested Timer if contained in the DISCOVERY_REQUEST message;\n-\tif the UE is authorised to announce the ProSe Application ID, the ACE Enabled Indicator is included and set to \"application-controlled-extension enabled\" and the Application Level Container is included in the DISCOVERY_REQUEST message but the requested application does not use application-controlled extension, the ProSe Function shall allocate the corresponding ProSe Application Code(s) and a value for validity timer T4000. The ProSe Function may take into account the Requested Timer if contained in the DISCOVERY_REQUEST message; and\n-\tif the UE is authorised to announce the ProSe Application ID and the ACE Enabled Indicator is not included in the DISCOVERY_REQUEST message, the ProSe Function shall allocate the corresponding ProSe Application Code(s) and a value for validity timer T4000. The ProSe Function may take into account the Requested Timer if contained in the DISCOVERY_REQUEST message.\nNOTE 1:\tA UE implementing a previous release of the protocol will not include the ACE Enabled Indicator in the DISCOVERY_REQUEST message.\nNOTE 2:\tThe ProSe Function can allocate multiple ProSe Application Codes for a given ProSe Application ID for instance in the case when one or more labels in the ProSe Application ID Name are wild carded as described in subclause 24.2.2 of 3GPP TS 23.003 [4].\nIf the requested ProSe Application ID is country-specific or global as described in subclause 24.2 of 3GPP TS 23.003 [4], the ProSe Function shall allocate the corresponding ProSe Application Code(s) or ProSe Application Code Prefix according to subclause 24.3 of 3GPP TS 23.003 [4]. The temporary identity part of each ProSe Application Code or ProSe Application Code Prefix is taken from the data structure corresponding to the country-specific or global ProSe Application ID namespace according to subclause 24.3 of 3GPP TS 23.003 [4]. The ProSe Function shall use the MCC and MNC of the PLMN ID of this ProSe Function for the PLMN ID part of the ProSe Application Code or ProSe Application Code Prefix.\nAfter the ProSe Application Code(s) or ProSe Application Code Prefix allocation, the ProSe Function then associates the ProSe Application Code(s) or ProSe Application Code Prefix with a new discovery entry identified by a non-zero value Discovery Entry ID in the new context for the UE that contains the UE's subscription parameters obtained from the HSS, and starts timer T4001. The HSS also provides to the ProSe Function the PLMN ID of the PLMN in which the UE is currently registered. For a given set of ProSe Application Codes or the allocated ProSe Application Code Prefix, timer T4001 shall be longer than timer T4000. By default, the value of timer T4001 is 4 minutes greater than the value of timer T4000.\nIf there is an existing context for the UE that contains the UE's subscription parameters obtained from the HSS, but no discovery entry identified by the Discovery Entry ID contained in the DISCOVERY_REQUEST message, the ProSe Function shall behave as if the Discovery Entry ID included in the DISCOVERY_REQUEST message was set to 0, and the ProSe Function shall allocate a new non-zero Discovery Entry ID for this entry.\nIf the Metadata is included in the DISCOVERY_REQUEST message, the ProSe Function shall allocate the ProSe Application Code or ProSe Application Code Prefix including a Metadata Index to indicate the current version of the Metadata, and store the received metadata in the UE context.\nMoreover, if the command is set to \"metadata_update\" in the DISCOVERY_REQUEST message and there is an existing UE context stored in the ProSe Function, the ProSe Function shall update the metadata in the UE context by using the received Medadata in the DISCOVERY_REQUEST message, and update the ProSe Application Code or ProSe Application Code Prefix in the UE context by changing the Metadata Index portion and keeping the rest unchanged.\nAfter the ProSe Application Code(s) allocation, the ProSe Function then associates the ProSe Application Code(s) with a new discovery entry identified by a non-zero value Discovery Entry ID in the UE context, and starts timer T4001.\nIf there is an existing context for the UE and a discovery entry identified by the Discovery Entry ID contained in the DISCOVERY_REQUEST message associated with the requested ProSe Application ID, the ProSe Function shall either update the discovery entry with a new validity timer T4000, or allocate new ProSe Application Code(s) or ProSe Application Code Prefix for the requested ProSe Application ID with a new validity timer T4000, and restart timer T4001. The ProSe Function may take into account the Requested Timer if contained in the DISCOVERY_REQUEST message.\nIf a new discovery entry was created or an existing discovery entry was updated and the UE is currently roaming or the Announcing PLMN ID is included in the DISCOVERY_REQUEST message, the ProSe Function checks with the ProSe Function of the VPLMN or in case of E-UTRA-based open ProSe direct discovery the local PLMN identified by the Announcing PLMN ID whether the UE is authorised for open ProSe direct discovery announcing as described in 3GPP TS 29.345 [5].\nIf the check indicates that the UE is authorised then the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-announce> element with:\n-\tthe transaction ID set to the value of the transaction ID received in the DISCOVERY_REQUEST message from the UE;\n-\teither the ProSe Application Code(s) set to the ProSe Application Code(s) allocated by the ProSe Function, or the ProSe Application Code ACE parameter set to include the ProSe-Application Code- Prefix allocated by the ProSe Function, and one or more ProSe Application Code Suffix Ranges which contain the suffix(es) for the ProSe Application ID received in the DISCOVERY_REQUEST message from the UE;\n-\tValidity Timer T4000 set to the T4000 timer value assigned by the ProSe Function to the ProSe Application Code(s):\n-\tif the ACE Enabled Indicator was included by the UE in the DISCOVERY_REQUEST message, the ACE Enabled Indicator set to:\n-\t\"application-controlled extension enabled\" if application-controlled extension is used; or\n-\t\"normal\" if application-controlled extension is not used;\n-\tthe Discovery Entry ID set to the identifier associated with the corresponding discovery entry;\n-\tthe Discovery Key set to a value provided by the ProSe Function; and\n-\toptionally the PC5_tech set to the one or more PC5 radio technologies that are authorized to be used for the assigned ProSe Application Code(s) or the assigned ProSe-Application Code- Prefix and the ProSe Application Code Suffix Ranges.\nIf timer T4001 expires, the ProSe Function shall remove the discovery entry identified by the Discovery Entry ID from the UE's context.\nUpon receipt of the DISCOVERY_RESPONSE message, if only the transaction ID and the Discovery Entry ID are contained in the <response-announce> element and the transaction ID and the Discovery Entry ID match the corresponding values sent by the UE in a DISCOVERY_REQUEST message, the UE shall:\n-\tstop the validity timer T4000 corresponding to the ProSe Application Code(s) or ProSe Application Code Prefix in the discovery entry identified by the Discovery Entry ID;\n-\tremove the discovery entry identified by the Discovery Entry ID included; and\n-\tinstruct the lower layers to stop announcing.\nUpon receipt of the DISCOVERY_RESPONSE message, if the transaction ID contained in the <response-announce> element matches the value sent by the UE in a DISCOVERY_REQUEST message with the command set to \"announce\", the UE shall create a new discovery entry or update an existing discovery entry with the received ProSe Application Code(s) and the PLMN ID of the intended announcing PLMN. For this discovery entry, the UE shall stop the validity timer T4000 if running and start the validity timer T4000 with the received value. Otherwise the UE shall discard the DISCOVERY_RESPONSE message and shall not perform the procedures below.\nFor any one of the received ProSe Application Codes or ProSe Application Code Prefix in this discovery entry, the UE may perform open ProSe direct discovery announcing as described below.\nThe UE requests the parameters from the lower layers for Prose direct discovery announcing (see 3GPP TS 36.331 [12]). In case of E-UTRA-based open ProSe direct discovery the UE shall perform direct discovery announcing only if the lower layers indicate that ProSe direct discovery is supported by the network. In case of E-UTRA-based open ProSe direct discovery if the UE in EMM-IDLE mode has to request resources for ProSe direct discovery announcing as specified in 3GPP TS 36.331 [12], the UE shall perform a service request procedure or tracking area update procedure as specified in 3GPP TS 24.301 [11]. The UE shall obtain the UTC time for the next discovery transmission opportunity for ProSe direct discovery from the lower layers.\nIf a valid UTC time is obtained, the UE shall generate the UTC-based counter corresponding to this UTC time as specified in subclause 12.2.2.18. If the resulting UTC-based counter is within Max Offset of the time shown by the clock used for ProSe by the UE, the UE shall use the UTC-based counter and the Discovery Key contained in the <response-announce> element of the DISCOVERY_RESPONSE message to compute the MIC field for the PC5_DISCOVERY message as described in 3GPP TS 33.303 [6].\nThe UE shall either use the ProSe Application Code received in the DISCOVERY_RESPONSE message, or select one ProSe Application Code based on the ProSe Application Code Prefix and ProSe Application Code Suffix Range(s) received in the DISCOVERY_RESPONSE message as announced ProSe Application Code, along with the MIC and the four least significant bits of the UTC-based counter, in order to construct a PC5_DISCOVERY message, according to the format defined in subclause 11.2.5.\nNOTE:\tThe UE can use different codes formed based on different ProSe Application Code Suffixes to announce, without having to send a new DISCOVERY_REQUEST message to the ProSe Function, as long as the validity timer T4000 of the ProSe Application Code Prefix has not expired.\nThe UE then passes the PC5_DISCOVERY message, along with the PLMN ID of the intended announcing PLMN, to the lower layers for transmission if:\n-\tthe UE is currently authorised to perform open direct discovery announcing in the registered PLMN or in case of E-UTRA-based open ProSe direct discovery the local PLMN operating the radio resources that the UE intends to use;\n-\tthe validity timer T4000 for the corresponding discovery entry allocated ProSe Application Code or ProSe Application Code Prefix has not expired; and\n-\ta request from upper layers to announce the ProSe Application ID associated with both the ProSe Application Code or ProSe Application Code Prefix and the authorised Application Identity is still in place.\nThe UE shall ensure that it keeps on passing PC5_DISCOVERY messages to the lower layers for transmission until the validity timer T4000 of the ProSe Application Code or ProSe Application Code Prefix expires. How this is achieved is left up to UE implementation.\nDuring the announcing operation, if one of the above conditions is no longer met, the UE may instruct the lower layers to stop announcing. When the UE stops announcing, in case of E-UTRA-based open ProSe direct discovery if the lower layers indicate that the UE is required to send a discovery indication to the eNodeB and the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\nIf the DISCOVERY_REQUEST message cannot be accepted by the ProSe Function, the ProSe Function sends a DISCOVERY_RESPONSE message containing a <response-reject> element to the UE including an appropriate PC3 Control Protocol cause value.\nIf the application corresponding to the Application Identity contained in the DISCOVERY_REQUEST message is not authorised for open ProSe direct discovery announcing, the ProSe Function shall send the DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #1 \"Invalid application\".\nIf the ProSe Application ID contained in the DISCOVERY_REQUEST message is unknown to the ProSe Function, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #2 \"Unknown ProSe Application ID\".\nIf the UE is not authorised for open ProSe direct discovery announcing, the ProSe Function shall send the DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #3 \"UE authorisation failure\".\nIf the UE is not authorised to use the ProSe Application ID contained in the DISCOVERY_REQUEST message, the ProSe Function shall send the DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #3 \"UE authorisation failure\".\nIf the UE requests a country-specific ProSe Application ID for a country that does not correspond to the country of its HPLMN, and the ProSe Function has not authorized the UE to announce in that country, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #8 \"Scope Violation in Prose Application ID\".\nIf the UE requests a country-specific ProSe Application ID for a country that does not correspond to the country of its HPLMN, and the ProSe Function has no agreement to access the country-wide ProSe Application ID database of that country, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #8 \"Scope Violation in Prose Application ID\".\nIf the Discovery Entry ID contained in the DISCOVERY_REQUEST message is unknown to the ProSe Function and the Requested Timer is set to zero, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value # 10 \"Unknown or invalid Discovery Entry ID\".\nIf the UE is not authorised to use ACE, but the DISCOVERY_REQUEST message contains the ACE Enabled Indicator set to \"application-controlled extension enabled\", the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #12 \"UE unauthorised for discovery with Application-Controlled Extension\".\nIf the DISCOVERY_REQUEST message contains the ACE Enabled Indicator set to \"application-controlled extension enabled\", but does not contain the Application Level Container parameter, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #14 \"Missing Application Level Container\".\nIf the ProSe Application Server indicates to the ProSe Function that the Application Level Container in the DISCOVERY REQUEST message contains invalid information, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #15 \"Invalid Data in Application Level Container\".\nIf the DISCOVERY_REQUEST message does not contain the ACE Enabled Indicator and the requested application only uses application-controlled extension, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #1 \"Invalid Application\".\nThe following abnormal cases can be identified:\na)\tIndication from the transport layer of transmission failure of DISCOVERY_REQUEST message (e.g. after TCP retransmission timeout)\nThe UE shall close the existing secure connection to the ProSe Function, establish a new secure connection and then restart the announce request procedure.\nb)\tNo response from the ProSe Function after the DISCOVERY_REQUEST message has been successfully delivered (e.g. TCP ACK has been received for the DISCOVERY_REQUEST message)\nThe UE shall retransmit the DISCOVERY_REQUEST message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are UE implementation specific.\nc)\tIndication from upper layers that the request to announce the ProSe Application ID is no longer in place after sending the DISCOVERY_REQUEST message, but before the announce request procedure is completed\nThe UE shall acknowledge the DISCOVERY_RESPONSE message received from the ProSe Function but discard its contents and then abort the procedure.\nd)\tChange of PLMN\nIf a PLMN change occurs before the announce request procedure is completed, the procedure shall be aborted. If the UE is authorized to announce in the new PLMN, the procedure shall be restarted once the UE is registered on the new PLMN.\ne)\tAbsence of Discovery Entry ID parameter in a DISCOVERY_RESPONSE message received in response to a DISCOVERY_REQUEST message which contained a Discovery Entry ID parameter\nIf the DISCOVERY_REQUEST message:\n-\tincluded a Requested Timer which is set to 0; or\n-\tincluded an Announcing PLMN ID;\nthe UE shall acknowledge the DISCOVERY_RESPONSE message received from the ProSe Function but discard its content and then abort the procedure.\nThe following abnormal cases can be identified:\na)\tIndication from the lower layer of transmission failure of DISCOVERY_RESPONSE message\nAfter receiving an indication from lower layer that the DISCOVERY_RESPONSE message has not been successfully acknowledged (e.g. TCP ACK is not received), the ProSe Function shall abort the procedure, and stop any associated timer(s) T4001, if running.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.2A\tAnnounce request procedure for restricted ProSe direct discovery model A",
                            "text_content": "The purpose of the announce request procedure for restricted ProSe direct discovery model A is for the UE:\n-\tto obtain a ProSe Restricted Code corresponding to the Restricted ProSe Application User ID (RPAUID) to be announced over the PC5 interface, upon a request for announcing from upper layers (e.g., application client) as defined in 3GPP TS 23.303 [2]; or\n-\tto inform the ProSe Function that the UE wants to stop announcing a ProSe Restricted Code as defined in 3GPP TS 23.303 [2].\nBefore initiating the announce request procedure, the UE shall be authorised for restricted ProSe direct discovery model A announcing in the registered PLMN or local PLMN based on the service authorisation procedure as specified in clause 5.\nNOTE:\tThe notion of \"local PLMN\" does not apply for WLAN-based ProSe direct discovery. The UE can engage in WLAN-based ProSe direct discovery as announcing UE regardless of the serving PLMN or other PLMNs that provide E-UTRAN coverage in the UE location.\nThe UE includes the ProSe Restricted Code obtained as a result of a successful announce request procedure in a PC5_DISCOVERY message and passes the PC5_DISCOVERY message to the lower layers for transmission over the PC5 interface.\nBefore initiating the announce request procedure, the user sets the permissions for the restricted discovery using application layer mechanisms. The application client in the UE retrieves the PDUID provisioned to the UE as part of the service authorisation procedure as specified in clause 5 and obtains an RPAUID associated with the UE's PDUID from the ProSe Application Server. The UE may provide metadata to be associated with the RPAUID, and the ProSe Application Server stores the metadata. This step is performed using mechanisms that are out of scope of the present specification.\nIf the UE is authorised to perform E-UTRA-based restricted ProSe direct discovery model A announcing in the PLMN operating the radio resources signalled from the serving PLMN, or if the UE is authorised to perform WLAN-based retricted ProSe direct discovery model A, it shall initiate an announce request procedure:\na)\twhen the UE is triggered by an upper layer application to announce an RPAUID and the UE has no valid corresponding ProSe Restricted Code for that RPAUID of the upper layer application;\nb)\twhen the validity timer T4007 assigned by the ProSe Function to a ProSe Restricted Code has expired and the request from upper layers to announce the RPAUID corresponding to that ProSe Restricted Code is still in place;\nc)\twhen the UE selects a new PLMN while announcing a ProSe Restricted Code and intends to announce in the new PLMN, and the UE is authorised for restricted ProSe direct discovery model A announcing in the new PLMN;\nd)\twhen, while announcing a RPAUID, the UE intends to switch the announcing PLMN to a different PLMN without performing PLMN selection, and the UE does not have a valid allocated ProSe Restricted Code for this new PLMN yet; or\ne)\twhen the UE needs to update a previously sent restricted ProSe direct discovery model A announcing request.\nWhen the UE selects a new PLMN while announcing a ProSe Restricted Code and the UE is not yet authorised for restricted ProSe direct discovery model A announcing in the new PLMN, the UE shall initiate an announce request procedure only after the UE is authorised for restricted ProSe direct discovery model A announcing in the new PLMN.\nNOTE 1:\tTo ensure service continuity if the UE needs to keep announcing a ProSe Restricted Code corresponding to the same RPAUID, the UE can initiate the announce request procedure before the validity timer T4007 assigned by the ProSe Function for a ProSe Restricted Code expires.\nThe UE initiates the announce request procedure by sending a DISCOVERY_REQUEST message with:\n-\ta new transaction ID not used in any other direct discovery procedures in PC3 interface;\n-\tthe RPAUID set to the RPAUID received from upper layers;\n-\tthe command set to \"announce\";\n-\tthe UE identity set to the UE's IMSI;\n-\tthe Application Identity set to the Application Identity of the upper layer application that requested the announcing;\n-\tthe Discovery Type set to \"Restricted discovery\";\n-\tthe ACE Enabled Indicator set to \"application-controlled extension enabled\" if application-controlled extension is required by the upper layers or \"normal\" if application-controlled extension is not used;\n-\tthe announcing type set to \"on demand\" if on demand announcing is requested by upper layers and \"normal\" if on demand announcing is not requested by upper layers;\n-\toptionally the Requested Timer set to the length of validity timer associated with the ProSe Restricted Code that the UE expects to receive from the ProSe Function;\n-\tthe Discovery Entry ID set to a 0 if the announcing request is a new request, and set to the Discovery Entry ID received from the ProSe Function if the announcing request is to update a previously sent announcing request;\n-\toptionally in case of E-UTRA-based restricted ProSe direct discovery model A the Announcing PLMN ID set to the PLMN ID of the local PLMN operating the radio resources that the UE intends to use for announcing the RPAUID; and\n-\toptionally the PC5_tech set to the PC5 radio technology that the UE wishes to use. PC5_tech may include more than one PC5 radio technology.\nIf restricted ProSe direct discovery model A with application-controlled extension is requested by upper layers, the DISCOVERY_REQUEST message shall also include the Application Level Container, which contains application-level data transparent to the 3GPP network, to be used by the ProSe Application Server e.g. to assign ProSe Restricted Code Suffix(es).\nWhen the UE initiates the announce request procedure to inform the ProSe Function that the UE wants to stop announcing a ProSe Restricted Code before the associated valid timer expires, the UE shall set the Requested Timer to 0.\nNOTE 2:\tA UE can include one or multiple transactions in one DISCOVERY_REQUEST message for different RPAUIDs, and receive corresponding <restricted-announce-response> element or <response-reject> element in a DISCOVERY_RESPONSE message for each respective transaction. In the following description of the announce request procedure, only one transaction is included.\nFigure 6.2.2A.2.1 illustrates the interaction of the UE and the ProSe Function in the announce request procedure.\nFigure 6.2.2A.2.1 illustrates the procedure for restricted ProSe direct discovery model A, where an announcement request is sent to initiate the discovery process. The figure shows the interaction between the ProSe device and the network infrastructure, including the ProSe gateway, network server, and the discovery service. The process involves the ProSe device sending a request to the network server, which then forwards the request to the ProSe gateway. The gateway processes the request and sends an announcement to the network, initiating the discovery process. The figure highlights the importance of this procedure in enabling efficient and secure communication between ProSe devices and the network.\nFigure 6.2.2A.2.1: Announce request procedure for restricted ProSe direct discovery model A\nUpon receiving a DISCOVERY_REQUEST message with the command set to \"announce\" and the Discovery Type set to \"Restricted discovery\", if the Requested Timer is included in the DISCOVERY_REQUEST message and the Requested Timer is set to 0, the ProSe Function shall check whether there is an existing UE context containing the discovery entry identified by the Discovery Entry ID included in the DISCOVERY_REQUEST message. If the discovery entry exists in the UE context, the ProSe Function shall inform the ProSe Function in the announcing PLMN to remove the corresponding discovery entry as specified in 3GPP TS 29.345 [5] when the announcing PLMN is not the same as that of the PLMN to which the ProSe Function belongs and remove the discovery entry identified by the Discovery Entry ID from the UE's context. Then the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <restricted-announce-response> element with:\n-\tthe transaction ID set to the value of the transaction ID received in the DISCOVERY_REQUEST message, and\n-\tthe Discovery Entry ID set to the identifier associated with the corresponding discovery entry.\nUpon receiving a DISCOVERY_REQUEST message with the command set to \"announce\" and the Discovery Type set to \"Restricted discovery\", if the Requested Timer is not included in the DISCOVERY_REQUEST message or the Requested Timer included in the DISCOVERY_REQUEST message is not set to 0, the ProSe Function shall perform the following procedure.\nThe ProSe Function shall check that the application corresponding to the Application Identity contained in the DISCOVERY_REQUEST message is authorised for restricted ProSe direct discovery model A announcing. If the application is authorised for restricted ProSe direct discovery model A announcing, the ProSe Function shall check whether there is an existing context for the UE.\nIf there is no associated UE context, the ProSe Function checks with the HSS whether the UE is authorised for restricted ProSe direct discovery model A announcing as described in 3GPP TS 29.344 [3]. If the check indicates that the UE is authorised, the ProSe Function creates a UE context that contains the UE's subscription parameters obtained from the HSS. The HSS also provides to the ProSe Function the PLMN ID of the PLMN in which the UE is currently registered. If the UE context exists, the ProSe Function shall then check whether the UE is authorised for restricted ProSe direct discovery model A announcing in the currently registered PLMN or in case of E-UTRA-based restricted ProSe direct discovery model A the local PLMN identified by the Announcing PLMN ID included in the DISCOVERY_REQUEST message.\nIf the UE is authorised and the Discovery Entry ID included in the DISCOVERY_REQUEST message is set to 0 then:\n-\tthe ProSe Function shall check whether the UE is authorised to announce the RPAUID contained in the DISCOVERY_REQUEST message. Optionally this can include checking with the ProSe Application Server as described in 3GPP TS 29.343 [31] to obtain the binding between the RPAUID and PDUID, and then verifying that the PDUID belongs to the requesting UE;\n-\tif the UE is authorised to announce the RPAUID, the ACE Enabled Indicator is set to \"application-controlled extension enabled\", the Application Level Container is included in the DISCOVERY_REQUEST message and the requested application uses application-controlled extension, the ProSe Function shall check whether the UE is authorized to use ACE. If the UE is authorized for ACE, the ProSe Function shall invoke the procedure described in 3GPP TS 29.343 [31] to check whether the UE is authorised to announce the requested RPAUID with application-defined suffix(es), and obtain suffix-related information from the ProSe Application Server. The ProSe Function shall then allocate a ProSe Restricted Code Prefix and a value for validity timer T4007 to be used with the ProSe Restricted Code Suffix(es) obtained from the ProSe Application Server for the given RPAUID as specified in 3GPP TS 29.343 [31]. The ProSe Function may take into account the Requested Timer if contained in the DISCOVERY_REQUEST message when allocating validity timer T4007;\n-\tif the UE is authorised to announce the RPAUID, the ACE Enabled Indicator is set to \"normal\" in the DISCOVERY_REQUEST message and the requested application does not use application-controlled extension, the ProSe Function shall allocate the corresponding ProSe Restricted Code and a value for validity timer T4007. The ProSe Function may take into account the Requested Timer if contained in the DISCOVERY_REQUEST message when allocating validity timer T4007;\n-\tif the UE is authorised to announce the RPAUID, the ACE Enabled Indicator is set to \"normal\" in the DISCOVERY_REQUEST message, the Application Level Container is included in the DISCOVERY_REQUEST and the requested application only uses application-controlled extension, the ProSe Function shall check whether the UE is authorized to use ACE. If the UE is authorized for ACE, the ProSe Function shall invoke the procedure described in 3GPP TS 29.343 [31] to check whether the UE is authorised to announce the requested RPAUID with application-defined suffix(es), and obtain suffix-related information from the ProSe Application Server. The ProSe Function shall then allocate a ProSe Restricted Code Prefix and a value for validity timer T4007 to be used with the ProSe Restricted Code Suffix(es) obtained from the ProSe Application Server for the given RPAUID as specified in 3GPP TS 29.343 [31] The ProSe Function may take into account the Requested Timer if contained in the DISCOVERY_REQUEST message when allocating validity timer T4007.\n-\tif the UE is authorised to announce the RPAUID, the ACE Enabled Indicator is set to \"application-controlled-extension enabled\" and the Application Level Container is included in the DISCOVERY_REQUEST message but the requested application does not use application-controlled extension, the ProSe Function shall allocate the corresponding ProSe Restricted Code and a value for validity timer T4007. The ProSe Function may take into account the Requested Timer if contained in the DISCOVERY_REQUEST message when allocating validity timer T4007; and\n-\tthe ProSe Function associates the allocated ProSe Restricted Code or ProSe Restricted Code Prefix with a new discovery entry in the UE's context, and starts timer T4008. The HSS also provides to the ProSe Function the PLMN ID of the PLMN in which the UE is currently registered. For a given ProSe Restricted Code, timer T4008 shall be longer than timer T4007. By default, the value of timer T4008 is 4 minutes greater than the value of timer T4007.\nIf the Discovery Entry ID included in the DISCOVERY_REQUEST message is not set to 0 and if there is an existing discovery entry for this Discovery Entry ID value in the UE's context, the ProSe Function shall either update the discovery entry with a new validity timer T4007, or allocate a new ProSe Restricted Code or ProSe Restricted Code Prefix for the requested RPAUID with a new validity timer T4007, restart timer T4008, and clear any existing on demand announcing enabled indicator. The ProSe Function may take into account the Requested Timer if contained in the DISCOVERY_REQUEST message when allocating validity timer T4007.\nIf the Discovery Entry ID contained in the DISCOVERY_REQUEST message is not found in the UE context or there is no UE context in the ProSe Function, the ProSe Function shall behave as if the Discovery Entry ID included in the DISCOVERY_REQUEST message was set to 0, and the ProSe Function shall allocate a new non-zero Discovery Entry ID for this entry.\nIf the announcing type is set to \"on demand\" in the DISCOVERY_REQUEST message, the ProSe Function shall check if \"on demand\" announcing is authorised and enabled based on the Application Identity and the operator's policy. If \"on demand\" announcing is authorised and enabled, and there is no ongoing monitoring request for this RPAUID, then the ProSe Function shall set the on demand announcing enabled indicator to 1 for the corresponding discovery entry in the UE's context.\nIf a new UE context was created or an existing UE context was updated, and the UE is currently roaming or the Announcing PLMN ID is included in the DISCOVERY_REQUEST message, and the on demand announcing enabled indicator is not set to 1 for this discovery entry in the UE's context, the ProSe Function checks with the ProSe function of the VPLMN or in case of E-UTRA-based restricted ProSe direct discovery model A the local PLMN represented by the Announcing PLMN ID whether the UE is authorised for restricted ProSe direct discovery model A announcing as described in 3GPP TS 29.345 [5].\nThe ProSe Function shall then send a DISCOVERY_RESPONSE message containing a <restricted-announce-response> element with:\n-\tthe transaction ID set to the value of the transaction ID received in the DISCOVERY_REQUEST message from the UE;\n-\tif the on demand announcing enabled indicator is not set to 1 in the UE's context for this discovery entry, either the ProSe Restricted Code set to the ProSe Restricted Code or the ProSe Restricted Code Prefix allocated by the ProSe Function, and optionally one or more ProSe Restricted Code Suffix Ranges which contain the suffix(es) for the RPAUID received in the DISCOVERY_REQUEST message;\n-\ta Validity Timer T4007 set to the T4007 timer value assigned by the ProSe Function to the ProSe Restricted Code;\n-\t the ACE Enabled Indicator set to \"application-controlled extension enabled\" if application-controlled extension is used, or \"normal\" if application-controlled extension is not used;\n-\tthe Restricted Security set to a value containing the security-related information for restricted discovery provided by the ProSe Function;\n-\tthe On Demand Announcing Enabled Indicator indicating whether the on demand announcing is enabled or not for this discovery entry if the Announcing Type is set to \"on demand\" in the DISCOVERY_REQUEST message;\n-\tthe Discovery Entry ID set to the ID of the discovery entry associated with this announce request in the UE's context; and\n-\toptionally the PC5_tech set to the one or more PC5 radio technologies that are authorized to be used for the assigned ProSe Restricted Code or the assigned ProSe Restricted Code Prefix and the associated ProSe Restricted Code Suffix Ranges.\nIf timer T4008 expires, the ProSe Function shall remove the discovery entry associated with the corresponding RPAUID from the UE's context.\nUpon receipt of the DISCOVERY_RESPONSE message, if only the transaction ID and the Discovery Entry ID are contained in the <restricted-announce-response> element and the transaction ID and the Discovery Entry ID match the corresponding values sent by the UE in a DISCOVERY_REQUEST message, the UE shall:\n-\tstop the validity timer T4007 for the discovery entry corresponding to the Discovery Entry ID received in the DISCOVERY_RESPONSE message;\n-\tremove the discovery entry identified by the Discovery Entry ID included; and\n-\tinstruct the lower layers to stop announcing.\nUpon receipt of the DISCOVERY_RESPONSE message, if the transaction ID contained in the <restricted-announce-response> element matches the value sent by the UE in a DISCOVERY_REQUEST message with the command set to \"announce\", the UE shall create a new discovery entry or update an existing discovery entry with the received ProSe Restricted Code or ProSe Restricted Code Prefix and the PLMN ID of the intended announcing PLMN. For this discovery entry, the UE shall stop the validity timer T4007, if running, for the discovery entry corresponding to the Discovery Entry ID received in the DISCOVERY_RESPONSE message, and start the validity timer T4007 for this discovery entry with the received value in the DISCOVERY_RESPONSE message. Otherwise the UE shall discard the DISCOVERY_RESPONSE message and shall not perform the procedures below.\nIf the DISCOVERY_RESPONSE message includes new ProSe Restricted Code or ProSe Restricted Code Prefix to replace the existing ProSe Restricted Code being announced, the UE shall notify lower layer to stop announcing the old ProSe Restricted Code in PC5 interface.\nIf the DISCOVERY RESPONSE message contains an On Demand Announcing Enabled Indicator set to 1, the UE shall wait for an Announcing Alert Request message from the ProSe Function of the HPLMN before starting to perform restricted ProSe direct discovery model A announcing. Otherwise, the UE may perform restricted ProSe direct discovery model A announcing as described below.\nThe UE requests the parameters from the lower layers for restricted Prose direct discovery model A announcing (see 3GPP TS 36.331 [12]). In case of E-UTRA-based restricted ProSe direct discovery the UE shall perform restricted ProSe direct discovery model A announcing only if the lower layers indicate that ProSe direct discovery is supported by the network. In case of E-UTRA-based restricted ProSe direct discovery if the UE in EMM-IDLE mode has to request resources for ProSe direct discovery announcing as specified in 3GPP TS 36.331 [12], the UE shall perform a service request procedure or tracking area update procedure as specified in 3GPP TS 24.301 [11]. The UE shall obtain the UTC time for the next discovery transmission opportunity for ProSe direct discovery from the lower layers.\nIf a valid UTC time is obtained, the UE shall generate the UTC-based counter corresponding to this UTC time as specified in subclause 12.2.2.18. If the resulting UTC-based counter is within Max Offset of the time shown by the clock used for ProSe by the UE, the UE shall either use the ProSe Restricted Code received in the DISCOVERY_RESPONSE message, or select one ProSe Restricted Code based on the ProSe Restricted Code Prefix and ProSe Restricted Code Suffix Range(s) received in the DISCOVERY_RESPONSE message as announced ProSe Restricted Code, along with the eight least significant bits of the UTC-based counter, in order to construct a PC5_DISCOVERY message, according to the format defined in subclause 11.2.5.\nNOTE:\tThe UE can use different codes formed based on different ProSe Restricted Code Suffixes to announce, without having to send a new DISCOVERY_REQUEST message to the ProSe Function, as long as the validity timer T4007 of the ProSe Restricted Code Prefix has not expired.\nThe UE shall then apply one or more of the DUIK, DUSK or DUCK with the associated Encrypted Bitmask, whichever received in the Restricted Code Security Material parameter of the DISCOVERY_RESPONSE message, along with the UTC-based counter to the PC5_DISCOVERY message, to e.g. generate a MIC value, scramble the message contents or provide confidentiality protection, as specified in 3GPP TS 33.303 [6].\nThe UE then passes the resulting PC5_DISCOVERY message, along with the PLMN ID of the intended announcing PLMN, to the lower layers for transmission if:\n-\tthe UE is currently authorised to perform restricted ProSe direct discovery model A announcing in the registered PLMN or in case of E-UTRA-based restricted ProSe direct discovery model A the local PLMN operating the radio resources that the UE intends to use;\n-\tthe validity timer T4007 for the corresponding discovery entry allocated ProSe Restricted Code or ProSe Restricted Code Prefix has not expired; and\n-\ta request from upper layers to announce the RPAUID associated with both the ProSe Restricted Code or ProSe Restricted Code Prefix, and the authorised Application Identity, is still in place.\nThe UE shall ensure that it keeps on passing PC5_DISCOVERY messages to the lower layers for transmission until the validity timer T4007 of the ProSe Restricted Code or ProSe Restricted Code Prefix expires. How this is achieved is left up to UE implementation.\nDuring the announcing operation, if one of the above conditions is no longer met, the UE may instruct the lower layers to stop announcing. When the UE stops announcing, In case of E-UTRA-based restricted ProSe direct discovery model A if the lower layers indicate that the UE is required to send a discovery indication to the eNodeB and the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\nIf the DISCOVERY_REQUEST message cannot be accepted by the ProSe Function, the ProSe Function sends a DISCOVERY_RESPONSE message containing a <response-reject> element to the UE including an appropriate PC3 Control Protocol cause value.\nIf the application corresponding to the Application Identity contained in the DISCOVERY_REQUEST message is not authorised for ProSe direct discovery announcing, the ProSe Function shall send the DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #1 \"Invalid application\".\nIf the RPAUID contained in the DISCOVERY_REQUEST message is unknown to the ProSe Function or ProSe Application Server, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #9 \"Unknown RPAUID\".\nIf the RPAUID contained in the DISCOVERY_REQUEST message does not match the stored RPAUID for the requested Discovery Entry ID, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #10 \"Unknown or Invalid Discovery Entry ID\".\nIf the UE is not authorised for restricted ProSe direct discovery model A announcing, the ProSe Function shall send the DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #3 \"UE authorisation failure\".\nIf the UE is not authorised for restricted \"on demand\" restricted ProSe direct discovery model A announcing, the ProSe Function shall send the DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #13 \"UE unauthorised for on-demand announcing\".\nIf the RPAUID contained in the DISCOVERY_REQUEST message is not associated with the PDUID belonging to the requesting UE, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #3 \"UE authorisation Failure\".\nIf the UE is not authorized to use ACE, but the DISCOVERY_REQUEST message contains the ACE Enabled Indicator set to \"application-controlled extension enabled\", the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #12 \"UE unauthorised for discovery with Application-Controlled Extension\".\nIf the DISCOVERY_REQUEST message contains the ACE Enabled Indicator set to \"application-controlled extension enabled\", but does not contain the Application Level Container parameter, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #14 \"Missing Application Level Container\".\nIf the ProSe Application Server indicates to the ProSe Function that the Application Level Container in the DISCOVERY REQUEST message contains invalid information, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #15 \"Invalid Data in Application Level Container\".\nIf the Discovery Entry ID contained in the DISCOVERY_REQUEST message is unknown to the ProSe Function and the Requested Timer is set to zero, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value # 10 \"Unknown or invalid Discovery Entry ID\".\n\nThe following abnormal cases can be identified:\na)\tIndication from the transport layer of transmission failure of DISCOVERY_REQUEST message (e.g. after TCP retransmission timeout)\nThe UE shall close the existing secure connection to the ProSe Function, establish a new secure connection and then restart the announce request procedure.\nb)\tNo response from the ProSe Function after the DISCOVERY_REQUEST message has been successfully delivered (e.g., TCP ACK has been received for the DISCOVERY_REQUEST message)\nThe UE shall retransmit the DISCOVERY_REQUEST message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are UE implementation specific.\nc)\tIndication from upper layers that the request to announce the RPAUID is no longer in place after sending the DISCOVERY_REQUEST message, but before the announce request procedure is completed\nThe UE shall acknowledge the DISCOVERY_RESPONSE message received from the ProSe Function but discard its contents and then abort the procedure.\nd)\tChange of PLMN\nIf a PLMN change occurs before the announce request procedure is completed, the procedure shall be aborted. If the UE is authorized to announce in the new PLMN, the procedure shall be restarted once the UE is registered on the new PLMN.\nThe following abnormal cases can be identified:\na)\tIndication from the lower layer of transmission failure of DISCOVERY_RESPONSE message\nAfter receiving an indication from lower layer that the DISCOVERY_RESPONSE message has not been successfully acknowledged (e.g. TCP ACK is not received), the ProSe Function shall abort the procedure, and stop any associated timer(s) T4008, if running.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.2B\tDiscoveree request procedure for restricted ProSe direct discovery model B",
                            "text_content": "The purpose of the discoveree request procedure for restricted ProSe direct discovery model B is for the UE to obtain Discovery Query Filter(s) to be used for monitoring a model B query for a Restricted ProSe Application User ID (RPAUID) over the PC5 interface, and a ProSe Response Code to be announced over the PC5 interface as a response to a model B query, as defined in 3GPP TS 23.303 [2].\nBefore initiating the discoveree request procedure, the UE shall be authorised for restricted ProSe direct discovery model B discoveree operation in the registered PLMN or the local PLMN based on the service authorisation procedure as specified in clause 5.\nNOTE:\tThe notion of \"local PLMN\" does not apply for WLAN-based ProSe direct discovery. The UE can engage in WLAN-based ProSe direct discovery as announcing UE regardless of the serving PLMN or other PLMNs that provide E-UTRAN coverage in the UE location.\nAs the result of successful completion of this procedure, the UE obtains one or more Discovery Query Filters and applies them to the monitoring operation in PC5 interface. The UE shall also include the ProSe Response Code in a PC5_DISCOVERY message and passes the message to the lower layers for transmission over the PC5 interface, when there is a match of the Discovery Query Filter(s).\nBefore initiating the discoveree request procedure, the user sets the permissions for the restricted discovery using application layer mechanisms. The application client in the UE retrieves the PDUID provisioned to the UE as part of the service authorisation procedure as specified in clause 5 and obtains an RPAUID associated with the UE's PDUID from the ProSe Application Server. The UE may provide metadata to be associated with the RPAUID, and the ProSe Application Server stores the metadata. This step is performed using mechanisms that are out of scope of the present specification.\nIf the UE is authorised to perform E-UTRA-based restricted ProSe direct discovery model B discoveree operation in the PLMN operating the radio resources signalled from the serving PLMN, or if the UE is authorised to perform WLAN-based restricted ProSe direct discovery model B discoveree operation, it shall initiate a discoveree request procedure:\na)\twhen the UE is triggered by an upper layer application to announce an RPAUID in Model B and the UE has no valid corresponding ProSe Response Code and Discovery Query Filter(s) for that RPAUID of the upper layer application;\nb)\twhen the validity timer T4011 assigned by the ProSe Function to a ProSe Response Code and the corresponding  Discovery Query Filter(s) has expired and the request from upper layers to announce the RPAUID corresponding to that ProSe Response Code is still in place;\nc)\twhen the UE selects a new PLMN while announcing or waiting for announcing a ProSe Response Code and intends to announce in the new PLMN, and the UE is authorised for restricted ProSe direct discovery model B discoveree operation in the new PLMN;\nd)\twhen, while announcing or waiting for announcing a ProSe Response Code, the UE intends to switch the announcing PLMN to a different PLMN without performing PLMN selection, and the UE does not have a valid allocated ProSe Response Code for this new PLMN yet; or\ne)\twhen the UE needs to update a previously sent restricted ProSe direct discovery model B discoveree request.\nWhen the UE selects a new PLMN while announcing or waiting for announcing a ProSe Response Code and the UE is not yet authorised for restricted ProSe direct discovery model B discoveree operation in the new PLMN, the UE shall initiate a discoveree request procedure only after the UE is authorised for restricted ProSe direct discovery model B discoveree operation in the new PLMN.\nNOTE 1:\tTo ensure service continuity if the UE needs to keep announcing in Model B a ProSe Response Code  corresponding to the same RPAUID, the UE can initiate the discoveree request procedure before the validity timer T4011 assigned by the ProSe Function for a ProSe Response Code expires.\nThe UE initiates the discoveree request procedure by sending a DISCOVERY_REQUEST message with:\n-\ta new transaction ID not used in any other direct discovery procedures in PC3 interface;\n-\tthe RPAUID set to the RPAUID received from upper layers;\n-\tthe command set to \"response\";\n-\tthe UE identity set to the UE's IMSI;\n-\tthe Application Identity set to the Application Identity of the upper layer application that requested the announcing;\n-\tthe Discovery Type set to \"Restricted discovery\";\n-\tthe Discovery Model set to \"Model B\";\n-\tthe Discovery Entry ID set to a 0 if the discoveree request is a new request, and set to the Discovery Entry ID received from the ProSe Function if the discoveree request is to update a previously sent discoveree request;\n-\toptionally in case of E-UTRA-based restricted ProSe direct discovery model B discoveree operation, the Announcing PLMN ID set to the PLMN ID of the local PLMN operating the radio resources that the UE intends to use for announcing the RPAUID; and\n-\toptionally the PC5_tech set to the PC5 radio technology that the UE wishes to use. PC5_tech may include more than one PC5 radio technology.\nNOTE 2:\tA UE can include one or multiple transactions in one DISCOVERY_REQUEST message for different RPAUIDs (e.g., for different applications), and receive corresponding <restricted-discoveree-response> element or <response-reject> element in a DISCOVERY_RESPONSE message for each respective transaction. In the following description of the discoveree request procedure, only one transaction is included.\nFigure 6.2.2B.2.1 illustrates the interaction of the UE and the ProSe Function in the discoveree request procedure.\nFigure 6.2.2B.2.1 illustrates the discovery request procedure for the restricted ProSe direct discovery model B. The figure depicts the interaction between the ProSe device and the network server, highlighting the process of requesting and receiving discovery information. Key components include the ProSe device, network server, and the discovery request process. The figure emphasizes the importance of secure and efficient discovery mechanisms in ProSe communication networks.\nFigure 6.2.2B.2.1: Discoveree request procedure for restricted ProSe direct discovery model B\nUpon receiving a DISCOVERY_REQUEST message, the ProSe Function shall check that the application corresponding to the Application Identity contained in the DISCOVERY_REQUEST message is authorised for restricted ProSe direct discovery model B discoveree operation. If the application is authorised for restricted ProSe direct discovery model B discoveree operation, the ProSe Function shall check whether there is an existing context for the UE.\nIf there is no associated UE context, the ProSe Function checks with the HSS whether the UE is authorised for restricted ProSe direct discovery model B discoveree operation as described in 3GPP TS 29.344 [3]. If the check indicates that the UE is authorised, the ProSe Function creates a UE context that contains the UE's subscription parameters obtained from the HSS. The HSS also provides to the ProSe Function the PLMN ID of the PLMN in which the UE is currently registered.\nIf the UE context exists, the ProSe Function shall check whether the UE is authorized for restricted ProSe direct discovery model B discoveree operation in the currently registered PLMN or in case of E-UTRA-based restricted ProSe direct discovery model B discoveree operation the local PLMN identified by the Announcing PLMN ID included in the DISCOVERY_REQUEST message.\nIf the UE is authorized and the Discovery Entry ID included in the DISCOVERY_REQUEST message is set to 0 then:\n-\tthe ProSe Function shall check whether the UE is authorised to announce the RPAUID contained in the DISCOVERY_REQUEST message. Optionally this can include checking with the ProSe Application Server as described in 3GPP TS 29.343 [31] to obtain the binding between the RPAUID and PDUID,  and then verifying that the PDUID belongs to the requesting UE;\n-\tif the UE is authorised to announce the RPAUID, the ProSe Function shall allocate the corresponding ProSe Response Code and ProSe Query Code for the RPAUID. It shall also allocate Discovery Query Filter(s) based on the allocated ProSe Query Code. Then it shall assign a value for validity timer T4011, which is associated with the ProSe Response Code, PorSe Query Code and Discovery Query Filter(s).\n-\tthe ProSe Function associates the allocated ProSe Response Code, ProSe Query Code, and Discovery Query Filter with a new discovery entry ID in the UE context, and starts timer T4012. For a given ProSe Response Code, timer T4012 shall be longer than timer T4011. By default, the value of timer T4012 is 4 minutes greater than the value of timer T4011.\nIf the Discovery Entry ID included in the DISCOVERY_REQUEST message is not set to 0 and if there is an existing discovery entry for this Discovery Entry ID value in the UE context, the ProSe Function shall either update the discovery entry with a new validity timer T4011, or allocate a new ProSe Response Code, ProSe Query Code and the Discovery Query Filter(s) for the requested RPAUID with a new validity timer T4011, restart timer T4012.\nIf the Discovery Entry ID contained in the DISCOVERY_REQUEST message is not found in the UE context or there is no UE context in the ProSe Function, the ProSe Function shall behave as if the Discovery Entry ID included in the DISCOVERY_REQUEST message was set to 0, and the ProSe Function shall allocate a new non-zero Discovery Entry ID for this entry.\nIf a new UE context was created or an existing UE context was updated, and the UE is currently roaming or the Announcing PLMN ID is included in the DISCOVERY_REQUEST message, the ProSe Function checks with the ProSe function of the VPLMN or in case of E-UTRA-based restricted ProSe direct discovery model B discoveree operation the local PLMN identified by the Announcing PLMN ID whether the UE is authorised for restricted ProSe direct discovery model B discoveree operation as described in 3GPP TS 29.345 [5].\nThe ProSe Function shall then send a DISCOVERY_RESPONSE message containing a <restricted-discoveree-response> element with:\n-\tthe transaction ID set to the value of the transaction ID received in the DISCOVERY_REQUEST message from the UE;\n-\tthe ProSe Response Code set to the ProSe Response Code allocated for the RPAUID received in the DISCOVERY_REQUEST message;\n-\tone or more ProSe Query Filters set to the ProSe Query Filter(s) used to match a query for the RPAUID received in the DISCOVERY_REQUEST message;\n-\ta Validity Timer T4011 set to the T4011 timer value assigned by the ProSe Function to the ProSe Response Code and the Discovery Query Filter(s);\n-\tthe Restricted Security set to a value containing the security-related information for restricted discovery provided by the ProSe Function;\n-\tthe Discovery Entry ID set to the ID of the discovery entry associated with this discoveree request in the UE context.\n-\toptionally the PC5_tech set to the one or more PC5 radio technologies that are authorized to be used for the assigned ProSe Response Code.\nIf timer T4012 expires, the ProSe Function shall remove the discovery entry associated with the corresponding RPAUID from the UE's context.\nUpon receipt of the DISCOVERY_RESPONSE message, if the transaction ID contained in the <restricted-discoveree-response> element matches the value sent by the UE in a DISCOVERY_REQUEST message with the command set to \"response\", the UE shall create a new discovery entry or update an existing discovery entry with the ProSe Response Code and Discovery Query Filter(s) received in the DISCOVERY_RESPONSE message and the PLMN ID of the intended announcing PLMN. For this discovery entry, the UE shall stop the validity timer T4011 if running and start the validity timer T4011 with the received value. The UE shall also use the received ProSe Response Code and Discovery Query Filter(s) to replace the old counterparts if they are currently used. This may involve notifying the lower layers to stop announcing the old ProSe Response Code or to stop monitoring with the old Discovery Query Filter(s). Otherwise the UE shall discard the DISCOVERY_RESPONSE message and shall not perform the procedures below.\nThe UE may apply the received Discovery Query Filter(s) to its monitoring operation. Using the Discovery Query Filter(s) may result in a match event. There is match event when, for any of the masks in a Discovery Query Filter, the output of a bitwise AND operation between the ProSe Query Code contained in the received PC5_DISCOVERY message and the mask, matches the output of a bitwise AND operation between the mask and the code contained in the Discovery Query Filter.\nWhen applying a Discovery Query Filter to a received PC5_DISCOVERY message for the above-mentioned bitwise AND operation, the UE shall use the DUSK, if received as part of the filter in the DISCOVERY_RESPONSE message, and the UTC-based counter generated during the monitoring operation described below, to unscramble the PC5_DISCOVERY message as described in 3GPP TS 33.303 [6]. Then, if a DUCK is included as part of the filter, the UE shall use the DUCK and the UTC-based counter to decrypt the message-specific confidentiality protected portion identified by the Encrypted Bitmask, as described in 3GPP TS 33.303 [6];\nNOTE 1:\tThe UE can look for a match on the unencrypted bits first before applying DUCK, to minimise the amount of processing performed before finding a match.\nIf a DUIK is received as part of the filter, the UE shall use the DUIK and the UTC-based counter to verify the MIC field in the unscrambled PC5_DISCOVERY message.\nNOTE 2:\tThe UE needs to verify the MIC field because the match report procedure is not used for checking the MIC of a PC5_DISCOVERY message containing a ProSe Query Code by the ProSe Function.\nThe UE may instruct the lower layers to start monitoring with Discovery Query Filter(s) and prepare announcing the ProSe Response Code if all of the following conditions are met:\n-\tthe UE is currently authorized to perform restricted ProSe direct discovery model B discoveree operation in the registered PLMN or in case of E-UTRA-based restricted ProSe direct discovery model B discoveree operation, the local PLMN operating the radio resources that the UE intends to use;\n-\tthe UE has obtained the ProSe Response Code and Discovery Query Filter(s) and the respective validity timer T4011 for the corresponding discovery entry has not expired; and\n-\ta request from upper layers to perform discoveree operation for the RPAUID associated with an authorised Application Identity is still in place.\nDuring the discoveree operation, if one of the above conditions is no longer met, the UE may instruct the lower layers to stop the discoveree operation. When the UE stops discoveree operation, if the lower layers indicate that the UE is required to send a discovery indication to the eNodeB and in case of E-UTRA-based restricted ProSe direct discovery model B discoveree operation the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\nOnce the match of the Discovery Query Filter(s) occurs, the UE process this match event and requests the lower layers to announce the corresponding ProSe Response Code in the PC5 interface as a response, as specified in 3GPP TS 36.331 [12]. In case of E-UTRA-based restricted ProSe direct discovery model B discoveree operation this shall be done only if the lower layers indicate that ProSe direct discovery is supported by the network. In case of E-UTRA-based restricted ProSe direct discovery model B discoveree operation if the UE in EMM-IDLE mode has to request resources for ProSe direct discovery announcing as specified in 3GPP TS 36.331 [12], the UE shall perform a service request procedure or tracking area update procedure as specified in 3GPP TS 24.301 [11]. The UE shall obtain the UTC time for the next discovery transmission opportunity for ProSe direct discovery from the lower layers.\nIf a valid UTC time is obtained, the UE shall generate the UTC-based counter corresponding to this UTC time as specified in subclause 12.2.2.18. If the resulting UTC-based counter is within Max Offset of the time shown by the clock used for ProSe by the UE, the UE shall use the ProSe Response Code received in the DISCOVERY_RESPONSE message, along with the eight least significant bits of the UTC-based counter, in order to construct a PC5_DISCOVERY message, according to the format defined in subclause 11.2.5.\nThe UE shall then apply one or more of the DUIK, DUSK or DUCK with the associated Encrypted Bitmask, whichever received in the Restricted Code Security Material parameter of the DISCOVERY_RESPONSE message, along with the UTC-based counter to the PC5_DISCOVERY message, to e.g. generate a MIC value, scramble the message contents or provide confidentiality protection, as specified in 3GPP TS 33.303 [6].\nThe UE then passes the resulting PC5_DISCOVERY message, along with the PLMN ID of the intended announcing PLMN, to the lower layers for transmission.\nFor each match event with the Discovery Query Filter(s), the UE shall at least pass PC5_DISCOVERY message once to the lower layers for transmission. The UE shall ensure that it keeps on passing PC5_DISCOVERY messages to the lower layers for transmission as response(s) to the match event(s) of the corresponding Discovery Query Filter(s) until the validity timer T4011 expires. How this is achieved is left up to UE implementation.\nIf the DISCOVERY_REQUEST message cannot be accepted by the ProSe Function, the ProSe Function sends a DISCOVERY_RESPONSE message containing a <response-reject> element to the UE including an appropriate PC3 Control Protocol cause value.\nIf the application corresponding to the Application Identity contained in the DISCOVERY_REQUEST message is not authorised for ProSe direct discovery Model B discoveree operation, the ProSe Function shall send the DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #1 \"Invalid application\".\nIf the RPAUID contained in the DISCOVERY_REQUEST message is unknown to the ProSe Function or ProSe Application Server, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #9 \"Unknown RPAUID\".\nIf the RPAUID contained in the DISCOVERY_REQUEST message does not match the stored RPAUID for the requested Discovery Entry ID, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #10 \"Unknown or Invalid Discovery Entry ID\".\nIf the UE is not authorised for restricted ProSe direct discovery model B discoveree operation, the ProSe Function shall send the DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #3 \"UE authorisation failure\".\nIf the RPAUID contained in the DISCOVERY_REQUEST message is not associated with a PDUID belonging to the requesting UE, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #3 \"UE authorisation Failure\".\nThe following abnormal cases can be identified:\na)\tIndication from the transport layer of transmission failure of DISCOVERY_REQUEST message (e.g. after TCP retransmission timeout)\nThe UE shall close the existing secure connection to the ProSe Function, establish a new secure connection and then restart the discoveree request procedure.\nb)\tNo response from the ProSe Function after the DISCOVERY_REQUEST message has been successfully delivered (e.g., TCP ACK has been received for the DISCOVERY_REQUEST message)\nThe UE shall retransmit the DISCOVERY_REQUEST message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are UE implementation specific.\nc)\tIndication from upper layers that the request to announce the RPAUID in model B is no longer in place after sending the DISCOVERY_REQUEST message, but before the discoveree request procedure is completed\nThe UE shall acknowledge the DISCOVERY_RESPONSE message received from the ProSe Function but discard its contents and then abort the procedure.\nd)\tChange of PLMN\nIf a PLMN change occurs before the discoveree request procedure is completed, the procedure shall be aborted. If the UE is authorized to perform restricted ProSe direct discovery model B discoveree operation in the new PLMN, the procedure shall be restarted once the UE is registered on the new PLMN.\nThe following abnormal cases can be identified:\na)\tIndication from the lower layer of transmission failure of DISCOVERY_RESPONSE message\nAfter receiving an indication from lower layer that the DISCOVERY_RESPONSE message has not been successfully acknowledged (e.g. TCP ACK is not received), the ProSe Function shall abort the procedure, and stop any associated timer(s) T4012, if running.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.3\tMonitor request procedure for open ProSe direct discovery",
                            "text_content": "The purpose of the monitor request procedure for open ProSe direct discovery is to allow a UE:\n-\tto receive and process PC5_DISCOVERY messages upon a request for monitoring from upper layers as defined in 3GPP TS 23.303 [2]; or\n-\tto inform the ProSe Function that the UE wants to stop using Discovery Filters for direct discovery monitoring as defined in 3GPP TS 23.303 [2].\nThe UE shall only initiate the monitor request procedure if it has been authorised for open ProSe direct discovery monitoring at least in one PLMN based on the service authorisation procedure.\nAs a result of the monitor request procedure completing successfully, the UE obtains one or more Discovery Filters, along with a TTL (Time-To-Live) timer T4002 for each Discovery Filter indicating the time during which the filter is valid.\nBefore initiating the monitor request procedure, the UE is configured with the data structure of the ProSe Application IDs it wants to monitor. This step is performed using mechanisms that are out of scope of 3GPP.\nIf the UE is authorised to perform open ProSe direct discovery monitoring in at least one PLMN, it shall initiate a monitor request procedure:\na)\twhen the UE is triggered by an upper layer application to perform open ProSe direct discovery monitoring corresponding to a ProSe Application ID and the UE has no valid Discovery Filters corresponding to the requested ProSe Application ID for that upper layer application;\nb)\twhen the TTL timer T4002 assigned by the ProSe Function to a Discovery Filter has expired and the request from upper layers to monitor that ProSe Application ID is still in place; or\nc)\twhen the UE needs to inform the ProSe Function that the UE wants to stop using Discovery Filters for direct discovery monitoring.\nNOTE 1:\tTo ensure service continuity if the UE needs to keep monitoring the same Discovery Filter, the UE can initiate the monitor request procedure before the TTL timer T4002 assigned by the ProSe Function for a Discovery Filter expires.\nThe UE initiates the monitor request procedure for open ProSe direct discovery by sending a DISCOVERY_REQUEST message with:\n-\ta new transaction ID;\nthe ProSe Application ID set to the ProSe Application ID received from upper layers;\n-\tthe command set to \"monitor\"\n-\tthe UE identity set to the UE's IMSI;\n-\tthe Application Identity set to the Application Identity of the upper layer application that requested the monitoring;\n-\tthe ACE Enabled Indicator set to \"application-controlled extension enabled\" if application-controlled extension is required by the upper layers, or \"normal\" if application-controlled extension is not used;\n-\tthe Discovery Entry ID set to 0 if this is a new request or set to the Discovery Entry ID received from the ProSe Function if the monitor request is to update a previously sent monitor request;\n-\toptionally, the Requested Timer set to 0 only when the UE wants to stop using Discovery Filters for direct discovery monitoring; and\n-\toptionally the PC5_tech set to the PC5 radio technology that the UE wishes to use for monitoring. PC5_tech may include more than one PC5 radio technology.\nIf open ProSe direct discovery with application-controlled extension is requested by upper layers, the DISCOVERY_REQUEST message shall also include the Application Level Container, which contains information corresponding to the ProSe Application Code Suffix, e.g. group or user-specific information.\nNOTE 2:\tA UE can include one or multiple transactions in one DISCOVERY_REQUEST message for one or more ProSe Application IDs, and receive corresponding <response-monitor> element or <response-reject> element in the DISCOVERY_RESPONSE message for each respective transaction. In the following description of the monitor request procedure, only one transaction is included.\nFigure 6.2.3.2.1 illustrates the interaction between the UE and the ProSe Function in the monitor request procedure.\nFigure 6.2.3.2.1 illustrates the monitor request procedure, which involves the transmission of a request signal from the monitoring device to the system for data collection. The figure shows the signal path, including the transmitter, receiver, and intermediate nodes, highlighting the importance of signal integrity and timing synchronization. Key components such as the clock recovery circuits and the synchronization signals are depicted to ensure accurate data collection and processing. The figure emphasizes the need for precise timing and synchronization in monitor request procedures to maintain system accuracy and reliability.\nFigure 6.2.3.2.1: Monitor request procedure\nUpon receiving a DISCOVERY_REQUEST message with the command set to \"monitor\", if the Requested Timer is included in the DISCOVERY_REQUEST message and the Requested Timer is set to 0, the ProSe Function shall check whether there is an existing UE context containing the discovery entry identified by the Discovery Entry ID included in the DISCOVERY_REQUEST message. If the discovery entry exists in the UE context, the ProSe Function shall remove the discovery entry identified by the Discovery Entry ID from the UE's context. When the associated ProSe Application ID is PLMN-specific and that PLMN ID indicated by the ProSe Application ID is not the same as that of the PLMN to which the ProSe Function belongs, the ProSe Function shall inform the ProSe Function in the PLMN indicated by the ProSe Application ID to remove the corresponding discovery entry as specified in 3GPP TS 29.345 [5]. Then the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-monitor> element with:\n-\tthe transaction ID set to the value of the transaction ID received in the DISCOVERY_REQUEST message;\n-\tthe Discovery Entry ID set to the value of the Discovery Entry ID received in the DISCOVERY_REQUEST message; and\n-\toptionally the PC5_tech set to the value of the PC5_tech if it was received in the DISCOVERY_REQUEST message.\nUpon receiving a DISCOVERY_REQUEST message with the command set to \"monitor\", if the Requested Timer is not included in the DISCOVERY_REQUEST message, the ProSe Function shall perform the following procedure.\nThe ProSe Function shall check that the application corresponding to the Application Identity contained in the DISCOVERY_REQUEST message is authorised for open ProSe direct discovery monitoring. If the application is authorised for open ProSe direct discovery monitoring, the ProSe Function checks whether there is an existing context for the UE associated with the requested ProSe Application ID.\nIf there is no associated UE context, the ProSe Function checks with the HSS whether the UE is authorised for open ProSe direct discovery monitoring as described in 3GPP TS 29.344 [3]. The HSS provides to the ProSe Function the PLMN ID of the PLMN in which the UE is currently registered. If the subscription check indicates that the UE is authorised, the ProSe Function creates a new context for the UE and a new discovery entry identified by a non-zero value Discovery Entry ID which is associated with the requested ProSe Application ID.\nIf the ACE Enabled Indicator in the DISCOVERY_REQUEST message is included and set to \"application-controlled extension enabled\" and the requested application uses application-controlled extension, the ProSe Function shall check whether the UE is authorised to use ACE. If the UE is authorised for ACE, the ProSe Function shall also use the procedure described in 3GPP TS 29.343 [31] to obtain the mask(s) for monitoring the ProSe Application Code Suffix (es) corresponding to the requested  ProSe Application ID.\nIf the PLMN ID indicated in the ProSe Application ID is PLMN-Specific and that PLMN ID is not the same as that of the PLMN to which the ProSe Function belongs, then the ProSe Function executes the procedures defined in 3GPP TS 29.345 [5] to obtain the Discovery Filter(s) for the ProSe Application ID. Otherwise, the ProSe Function shall allocate one or more Discovery Filters for the requested ProSe Application ID if it is known to the ProSe Function.and at least one corresponding valid ProSe Application Code or ProSe Application Code Prefix is available in the ProSe Function. Each Discovery Filter consists of a ProSe Application Code, one or more ProSe Application Masks, and a TTL timer T4002. If application-controlled extension is used, the allocated Discovey Filter shall be applicable to match both prefix and suffix portions of the ProSe Application Code. If the requested ProSe Application ID is country-specific or global or PLMN-specific as defined respectively in subclause 24.2 of 3GPP TS 23.003 [4], the ProSe Function shall allocate the Discovery Filter which contains ProSe Application Code and ProSe Application Mask(s) in the corresponding scope. If the ProSe Application ID is country-specific or global, the ProSe Application Mask(s) enclosed in the Discovery Filter hides the PLMN ID part correspondingly and the temporary identity part is taken from the data structure corresponding to the global or country-wide ProSe Application ID namespace, as specified in subclause 24.3 of 3GPP TS 23.003 [4]. If the requested ProSe Application ID is PLMN-specific, the ProSe Function shall allocate one or more PLMN-specific Discovery Filters. Each of these Discovery Filters shall contain a PLMN-specific Prose Application Code and the ProSe Application Mask(s) whose PLMN ID portion shall be set such that when the mask is applied to the ProSe Application Code, the outcome matches the full PLMN ID of that specific PLMN. After the Discovery Filter(s) are allocated, the ProSe Function then associates the Discovery Filters with the new discovery entry in the UE context and starts timer T4003 assigned for each Discovery Filter. For a given Discovery Filter timer T4003 shall be longer than timer T4002. By default, the value of timer T4003 is 4 minutes greater than the value of timer T4002.\nIf there is an existing context for the UE that contains the UE's subscription parameters obtained from the HSS, but no discovery entry identified by the Discovery Entry ID contained in the DISCOVERY_REQUEST message, the ProSe Function shall check whether the UE is authorised for ProSe direct discovery monitoring. If the UE is authorised, the ProSe Function shall allocate the Discovery Filter as specified above.\nAfter the Discovery Filter is allocated, the ProSe Function then associates the Discovery Filter with a new discovery entry identified by a non-zero value Discovery Entry ID in the UE context, and starts timer T4003 assigned for each Discovery Filter.\nSimilarly, if there is an existing context and a discovery entry identified by the Discovery Entry ID contained in the DISCOVERY_REQUEST message for the UE associated with the requested ProSe Application ID, the ProSe Function updates the content of Discovery Filter(s), associate the discovery entry with the updated Discovery Filter(s) and restart timer T4003 for each filter. The update of a Discovery Filter content includes setting new TTL timer(s) and if necessary, assigning new ProSe Application Code or ProSe Application Code Prefix and ProSe Application Mask(s).\nThen the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-monitor> element with:\n-\tthe transaction ID set to the value of the transaction ID received in the DISCOVERY_REQUEST message from the UE;\n-\tthe Discovery Entry ID set to the identifier associated with the discovery entry; and\n-\tif the ACE Enabled Indicator was included by the UE in the DISCOVERY_REQUEST message, the ACE Enabled Indicator set to:\n-\t\"application-controlled extension enabled\" if application-controlled extension is used; or\n-\t\"normal\" if application-controlled extension is not used;\n-\tone or more Discovery Filters allocated by the ProSe Function(s) for the ProSe Application ID received in the DISCOVERY_REQUEST message from the UE; and\n-\toptionally the PC5_tech set to the one or more PC5 radio technologies that may be used for the Discovery Filters allocated by the ProSe Function(s).\nIf timer T4003 expires, the ProSe Function shall remove the UE's association with the corresponding Discovery Filter. Furthermore, the ProSe Function shall remove the discovery entry from the UE's context if there is no Discovery Filter corresponding to the ProSe Application ID.\nUpon receipt of the DISCOVERY_RESPONSE message, if only the transaction ID and the Discovery Entry ID are contained in the <response-monitor> element and the transaction ID and the Discovery Entry ID match the corresponding values sent by the UE in a DISCOVERY_REQUEST message, the UE shall:\n-\tstop TTL timer T4002 for each Discovery Filter in the discovery entry identified by the Discovery Entry ID;\n-\tremove the discovery entry identified by the Discovery Entry ID; and\n-\tinstruct the lower layers to stop monitoring.\nUpon receipt of the DISCOVERY_RESPONSE message, if the transaction ID contained in the <response-monitor> element matches the value sent by the UE in a DISCOVERY_REQUEST message with the command set to \"monitor\", the UE shall, for each Discovery Filter assigned by the ProSe Function, stop TTL timer T4002 if running and start TTL timer T4002 with the received value. Otherwise the UE shall discard the DISCOVERY_RESPONSE message and shall not perform the procedures below.\nThe UE may perform open ProSe direct discovery monitoring for discovery messages received over the PC5 interface as described below.\nFor a ProSe Application ID requested by the monitoring UE, the ProSe Function may have assigned one or more Discovery Filters. If application-controlled extension is used, the UE may further apply additional filtering on the part corresponding to the ProSe Application Code Suffix. The UE should apply all assigned Discovery Filters to its monitoring operation. Using these Discovery Filters may result in a match event. In case of a match event, the UE shall consider that the ProSe Application ID it seeks to monitor has been discovered. A match event for open ProSe direct discovery is defined as follows:\nThere is a match event when, for any of the ProSe Application Masks in a Discovery Filter, the output of a bitwise AND operation between the ProSe Application Code contained in the received PC5_DISCOVERY message and the ProSe Application Mask, matches the output of a bitwise AND operation between the ProSe Application Mask and the ProSe Application Code contained in the same Discovery Filter.\nNOTE:\tA ProSe Application Mask with all bits set to \"1\" is assigned by the ProSe Function for full matching.\nThe UE may instruct the lower layers to start monitoring if all of the following conditions are met:\n-\tthe UE is currently authorized to perform E-UTRA-based open ProSe direct discovery monitoring in at least one PLMN or the UE is currently authorized to perform WLAN-based open ProSe direct discovery monitoring;\n-\tthe UE has obtained at least one Discovery Filter and their respective TTL timer T4002(s) have not expired; and\n-\ta request from upper layers to monitor for the ProSe Application ID associated with an authorised Application Identity is still in place.\nIn case of E-UTRA-based open ProSe direct discovery monitoring, if the UE is in EMM-CONNECTED mode, the monitoring UE shall also trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\nDuring the monitoring operation, the UE receives all PC5_DISCOVERY messages and associated UTC times from the lower layers. The UE shall generate the UTC-based counter corresponding to the UTC time associated with a PC5_DISCOVERY message and only process the PC5_DISCOVERY message if the UTC-based counter is within Max Offset of the time shown by the clock used for ProSe by the UE.\nDuring the monitoring operation, if one of the above conditions is no longer met, the UE may instruct the lower layers to stop monitoring. When the UE stops monitoring, in case of E-UTRA-based open ProSe direct discovery monitoring if the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\nIf the DISCOVERY_REQUEST message is not accepted by the ProSe Function, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element to the UE including an appropriate PC3 Control Protocol cause value.\nIf the application corresponding to the Application Identity contained in the DISCOVERY_REQUEST message is not authorised for open ProSe direct discovery monitoring, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #1 \"Invalid application\".\nIf the ProSe Application ID contained in the DISCOVERY_REQUEST message is unknown to the ProSe Function, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #2 \"Unknown ProSe Application ID\".\nIf the UE is not authorised for open ProSe direct discovery monitoring, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #3 \"UE authorisation failure\".\nIf the UE requests a country-specific ProSe Application ID for a country that does not correspond to the country of its HPLMN, and the ProSe Function has not authorized the UE to monitor in that country, it shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #8 \"Scope Violation in Prose Application ID\".\nIf the UE requests a country-specific ProSe Application ID for a country that does not correspond to the country of its HPLMN, and the ProSe Function has no agreement to access the country-specific ProSe Application ID database of that country, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #8 \"Scope Violation in Prose Application ID\".\nIf the Discovery Entry ID contained in the DISCOVERY_REQUEST message is unknown to the ProSe Function and the Requested Timer is set to 0, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #10 \"Unknown or invalid Discovery Entry ID \".\nIf the ProSe Function cannot retrieve a valid ProSe Application Code corresponding to the ProSe Application ID contained in the DISCOVERY_REQUEST message, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #17 \"No Valid ProSe Application Code\".\nIf the UE is not authorised to use ACE, but the DISCOVERY_REQUEST message contains the ACE Enabled Indicator set to \"application-controlled extension enabled\", the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #12 \"UE unauthorised for discovery with Application-Controlled Extension\".\nIf the DISCOVERY_REQUEST message does not contain the ACE Enabled Indicator and the requested application only uses application-controlled extension, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #1 \"Invalid Application\".\nThe following abnormal cases can be identified:\na)\tIndication from the transport layer of transmission failure of DISCOVERY_REQUEST message (e.g. after TCP retransmission timeout)\nThe UE shall close the existing secure connection to the ProSe Function, establish a new secure connection and then restart the monitor request procedure.\nb)\tNo response from the ProSe Function after the DISCOVERY_REQUEST message has been successfully delivered (e.g. TCP ACK has been received for the DISCOVERY_REQUEST message)\nThe UE shall retransmit the DISCOVERY_REQUEST message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are UE implementation specific.\nc)\tIndication from upper layers that the request to monitor the ProSe Application ID is no longer in place after sending the DISCOVERY_REQUEST message, but before the monitor request procedure is completed\nThe UE shall acknowledge the DISCOVERY_RESPONSE message received from the ProSe Function but discard its contents and then abort the procedure.\nd)\tChange of PLMN\nIf a PLMN change occurs before the monitor request procedure is completed, the procedure shall be aborted. If the UE is authorized to monitor in the new PLMN, the procedures shall be restarted once the UE is registered on the new PLMN.\nThe following abnormal cases can be identified:\na)\tIndication from the lower layer of transmission failure of DISCOVERY_RESPONSE message\nAfter receiving an indication from lower layer that the DISCOVEY_RESPONSE message has not been successfully acknowledged, the ProSe Function shall abort the procedure, and stop any associated timer(s) T4003, if running.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.3A\tMonitor request procedure for restricted ProSe direct discovery model A",
                            "text_content": "The purpose of the monitor request procedure for restricted ProSe direct discovery model A is:\n-\tto allow a UE participating in restricted ProSe direct discovery model A to receive and process PC5_DISCOVERY messages upon a request for monitoring from upper layers as defined in 3GPP TS 23.303 [2]; or\n-\tto inform the ProSe Function that the UE wants to stop using Restricted Discovery Filter(s) for direct discovery monitoring as defined in 3GPP TS 23.303 [2].\nThe UE shall only initiate the restricted ProSe direct discovery model A monitor request procedure if it has been authorised for restricted ProSe direct discovery model A monitoring in at least in one PLMN based on the service authorisation procedure.\nAs a result of the monitor request procedure completing successfully, the UE obtains one or more Restricted Discovery Filters, along with a TTL (Time-To-Live) timer T4009 for each Restricted Discovery Filter indicating the time during which the filter is valid.\nBefore initiating the monitor request procedure, the user sets the permissions for the restricted discovery using application layer mechanisms. The application client in the UE retrieves the PDUID provisioned to the UE as part of the service authorisation procedure as specified in clause 5, and obtains an RPAUID associated with the UE's PDUID and the target RPAUID(s) to be monitored from the ProSe Application Server. This step is performed using mechanisms that are out of scope of the present specification.\nIf the UE is authorised to perform ProSe direct discovery model A monitoring in at least one PLMN, it shall initiate a monitor request procedure:\na)\twhen the UE is triggered by an upper layer application to perform restricted ProSe direct discovery model A monitoring corresponding to at least one RPAUID, and the UE has no valid Restricted Discovery Filters corresponding to the requested RPAUID for that upper layer application; or\nb)\twhen the TTL timer T4009 assigned by the ProSe Function to a Restricted Discovery Filter has expired and the request from upper layers to monitor that RPAUID is still in place; or\nNOTE 1:\tTo ensure service continuity if the UE needs to keep monitoring the same Restricted Discovery Filter, the UE can initiate the monitor request procedure before the TTL timer T4009 assigned by the ProSe Function for a Restricted Discovery Filter expires.\nc)\twhen the UE needs to update a previously sent restricted ProSe direct discovery model A monitoring request.\nThe UE initiates the monitor request procedure by sending a DISCOVERY_REQUEST message with:\n-\ta new transaction ID;\n-\tthe RPAUID set to the RPAUID received from upper layers;\n-\tthe command set to \"monitor\";\n-\tthe Discovery Type set to \"Restricted discovery\"\n-\tthe UE identity set to the UE's IMSI;\n-\tthe Application Identity set to the Application Identity of the upper layer application that requested the monitoring;\n-\tthe ACE Enabled Indicator set to \"application-controlled extension enabled\" if application-controlled extension is required by the upper layers, or \"normal\" if application-controlled extension is not used;\n-\tthe Application Level Container set to the target RPAUIDs to monitor;\n-\tthe Discovery Entry ID set to 0 if the monitoring request is a new request, and set to the Discovery Entry ID received from the ProSe Function if the monitoring request is to update a previously sent monitoring request;\n-\toptionally, the Requested Timer set to 0 only when the UE wants to stop using Restricted Discovery Filter(s) for direct discovery monitoring; and\n-\toptionally the PC5_tech set to the PC5 radio technology that the UE wishes to use for monitoring. PC5_tech may include more than one PC5 radio technology.\nIf restricted direct discovery model A with application-controlled extension is requested by upper layers, the Application Level Container included in the DISCOVERY_ REQUEST also contains information corresponding to the ProSe Restricted Code Suffix, e.g. group or user-specific information.\nNOTE 2:\tA UE can include one or multiple transactions in one DISCOVERY_REQUEST message for one or more different monitoring targets, and receive corresponding <response-monitor> element or <response-reject> element in the DISCOVERY_RESPONSE message for each respective transaction. In the following description of the monitor request procedure, only one transaction is included.\nFigure 6.2.3A.2.1 illustrates the interaction between the UE and the ProSe Function in the monitor request procedure.\nFigure 6.2.3A.2.1 illustrates the monitor request procedure for the restricted ProSe direct discovery model A, showcasing the interaction between the ProSe coordinator and the ProSe monitor. The figure highlights the role of the ProSe monitor in monitoring the ProSe direct discovery process, ensuring compliance with the restricted model's requirements. Key components include the ProSe coordinator, ProSe monitor, and the ProSe direct discovery process itself. The figure emphasizes the importance of monitoring and control in maintaining the integrity and security of the ProSe network.\nFigure 6.2.3A.2.1: Monitor request procedure for restricted ProSe direct discovery model A\nUpon receiving a DISCOVERY_REQUEST message with the command set to \"monitor\" and the Discovery Type set to \"Restricted discovery\", if the Requested Timer is included in the DISCOVERY_REQUEST message and the Requested Timer is set to 0, the ProSe Function shall check whether there is an existing UE context containing the discovery entry identified by the Discovery Entry ID included in the DISCOVERY_REQUEST message. If the discovery entry exists in the UE context, the ProSe Function shall remove the discovery entry identified by the Discovery Entry ID from the UE's context. For each of the PDUIDs corresponding to the target RPAUIDs contained the Restricted Discovery Filters in the discovery entry, if the PDUID is PLMN-specific and that PLMN ID indicated by the PDUID is not the same as that of the PLMN to which the ProSe Function belongs, the ProSe Function shall inform the ProSe Function in the PLMN indicated by the PDUID to remove the corresponding discovery entry as specified in 3GPP TS 29.345 [5]. Then the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <restricted-monitor-response> element with:\n-\tthe transaction ID set to the value of the transaction ID received in the DISCOVERY_REQUEST message;\n-\tthe Discovery Entry ID set to the value of the Discovery Entry ID received in the DISCOVERY_REQUEST message; and\n-\toptionally the PC5_tech set to the value of the PC5_tech if it was received in the DISCOVERY_REQUEST message.\nUpon receiving a DISCOVERY_REQUEST message with the command set to \"monitor\" and the Discovery Type set to \"Restricted discovery\", if the Requested Timer is not included in the DISCOVERY_REQUEST message, the ProSe Function shall perform the following procedure.\nThe ProSe Function shall check that the application corresponding to the Application Identity contained in the DISCOVERY_REQUEST message is authorised for ProSe direct discovery model A monitoring. If the application is authorised for restricted ProSe direct discovery model A monitoring, the ProSe Function shall check whether there is an existing UE context.\nIf there is no associated UE context, the ProSe Function checks with the HSS whether the UE is authorised for restricted ProSe direct discovery model A monitoring as described in 3GPP TS 29.344 [3]. The HSS provides to the ProSe Function the PLMN ID of the PLMN in which the UE is currently registered. If the subscription check indicates that the UE is authorised, the ProSe Function creates a new UE context containing the UE's subscription parameters obtained from the HSS.\nIf the Discovery Entry ID included in the DISCOVERY_REQUEST is set to 0 then:\n-\tthe ProSe Function shall use the procedure described in 3GPP TS 29.343 [31] to pass the Application Level Container included in the DISCOVERY_REQUEST message to the ProSe Application Server and obtain a list of PDUID(s) , an Application Level Container and optionally Metadata Indicator(s) corresponding to the authorised target RPAUID(s) from the ProSe Application Server;\n-\tif the ACE Enabled Indicator in the DISCOVERY_REQUEST message is set to \"application-controlled extension enabled\" and the requested application uses application-controlled extension, the ProSe Function shall check whether the UE is authorized to use ACE. If the UE is authorized for ACE, the ProSe Function shall also use the procedure described in 3GPP TS 29.343 [31] to obtain the mask(s) for monitoring a ProSe Restricted Suffix Pool corresponding to each of the Target RPAUIDs.\nNOTE 1: The ProSe Application Server can reject the request for some of the target RPAUIDs included in the Application Level Container in the DISCOVERY_REQUEST message because they are ineligible to be monitored by the requesting UE. Depending on the operator policy and application layer permissions, it is possible that only a subset of valid RPAUIDs are authorised by the ProSe Application Server.\n-\tfor each of the PDUIDs corresponding to an authorised target RPAUID, if the PLMN ID of the PDUID is not the same as that of the PLMN to which the ProSe Function belongs, then the ProSe Function executes the procedures defined in 3GPP TS 29.345 [5] to obtain the ProSe Restricted Code or ProSe Restricted Code Prefix for the target RPAUID and creates Restricted Discovery Filter(s). Otherwise, for each target RPAUID, the ProSe Function shall allocate one or more Restricted Discovery Filter(s). If the ACE Enabled Indicator in the DISCOVERY_REQUEST message does not match the ACE configuration in the ProSe Function or ProSe Application Server for this application, the ACE configuration in the ProSe Function or ProSe Application Server shall be used to create Restricted Discovery Filter(s). Each Restricted Discovery Filter consists of a ProSe Restricted Code, one or more masks, a TTL timer T4009, optionally the target RPAUID, optionally a metadata indicator and optionally metadata associated with this RPAUID;\n-\tthe ProSe Function associates the Restricted Discovery Filters with a new discovery entry in the UE's context; and\n-\tthe ProSe Function starts timer T4010 assigned for each Restricted Discovery Filter. For a given Restricted Discovery Filter, timer T4010 shall be longer than timer T4009. By default, the value of timer T4010 is 4 minutes greater than the value of timer T4009.\nNOTE 2: For each target RPAUID, the ProSe Function either allocates one Restricted Discovery Filter for full-matching the ProSe Restricted Code assigned to this RPAUID, or allocates one or more Restricted Discovery Filter(s) for matching the ProSe Restricted Code Prefix and Suffix Pool assigned to this RPAUID.\nIf the Discovery Entry ID included in the DISCOVERY_REQUEST message is not set to 0 and if there is an existing discovery entry for this Discovery Entry ID in the UE's context, the ProSe Function shall check whether the UE is authorised for restricted ProSe direct discovery model A monitoring. If the UE is authorised, the ProSe Function shall process the request as above-mentioned and update this discovery entry with the contents of the Restricted Discovery Filter(s) associated with this discovery entry and restart timer T4010(s) for each filter. The update of a Restricted Discovery Filter content includes setting new TTL timer(s) and if necessary, obtaining new ProSe Restricted Code and ProSe Restricted Mask(s) via the procedure defined in 3GPP TS 29.345 [5].\nIf the Discovery Entry ID contained in the DISCOVERY_REQUEST message is not found in the UE context or there is no UE context in the ProSe Function, the ProSe Function shall behave as if the Discovery Entry ID included in the DISCOVERY_REQUEST message was set to 0, and the ProSe Function shall allocate a new non-zero Discovery Entry ID for this entry.\nThen the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <restricted-monitor-response> element with:\n-\tthe transaction ID set to the value of the transaction ID received in the DISCOVERY_REQUEST message from the UE;\n-\tone or more Restricted Discovery Filter(s) allocated by the ProSe Function(s) for the authorised target RPAUID(s);\n-\tthe ACE Enabled Indicator set to \"application-controlled extension enabled\" if application-controlled extension is used, or \"normal\" if application-controlled extension is not used;\n-\tthe Discovery Entry ID set to the ID of the discovery entry associated with this monitor request;\n-\tthe Application Level Container set to the application-level data received from the ProSe Application Server; and\n-\toptionally the PC5_tech set to the one or more PC5 radio technologies that may be used for the Restricted Discovery Filters allocated by the ProSe Function(s).\nIf T4010 expires, the ProSe Function shall remove the corresponding Restricted Discovery Filter from the discovery entry in the UE's context. Furthermore, if there are no valid Restricted Discovery Filters associated with the discovery entry (e.g, all Restricted Discovery Filters have expired), the ProSe Function shall delete the discovery entry from the UE's context.\nUpon receipt of the DISCOVERY_RESPONSE message, if only the transaction ID and the Discovery Entry ID are contained in <restricted-monitor-response> element and the transaction ID and the Discovery Entry ID match the corresponding values sent by the UE in a DISCOVERY_REQUEST message with the command set to \"monitor\", the UE shall:\n-\tstop TTL timer T4009 for each Restricted Discovery Filter in the discovery entry identified by the Discovery Entry ID;\n-\tremove the discovery entry identified by the Discovery Entry ID; and\n-\tinstruct the lower layers to stop monitoring.\nUpon receipt of the DISCOVERY_RESPONSE message, if the transaction ID contained in the <restricted-monitor-response> element matches the value sent by the UE in a DISCOVERY_REQUEST message with the command set to \"monitor\" and, the UE shall process as follow:\n-\tIf the DISCOVERY_RESPONSE creates a new discovery entry, start the TTL timer T4009 with the received value for each Restricted Discovery Filter information element received in the DISCOVERY_RESPONSE message.\n-\tIf the DISCOVERY_RESPONSE updates an existing discovery entry, the UE shall\n- \tstop the T4009 timer(s) of any Restricted Discovery Filter in this discovery entry which are no longer authorized by the ProSe Function, ask lower layers to stop using those filters in monitoring operation, and remove the corresponding Restricted Discovery Filter from the discovery entry;\n-\trestart the T4009 timer(s) for those remain eligible; and\n-\tstart the T4009 timer(s) for any new Restricted Discovery Filter(s) included in the DISCOVERY_RESPONSE message.\nOtherwise the UE shall discard the DISCOVERY_RESPONSE message and shall not perform the procedures below.\nThe UE may perform monitoring for discovery messages received over the PC5 interface as described below.\nThe UE provides the Application Level Container, which contains the authorised Target RPAUID(s), to the upper layer applications. For each authorised target RPAUID , the ProSe Function may have assigned one or more Restricted Discovery Filters. If application-controlled extension is used, the UE may further apply additional filtering on the part corresponding to the ProSe Restricted Code Suffix. The UE should then apply all Restricted Discovery Filters to its monitoring operation. Using these Restricted Discovery Filters may result in a match event. In case of a match event, the UE shall consider that the target RPAUID it seeks to monitor has been discovered. A match event is defined as follows:\nThere is match event when, for any of the masks in a Restricted Discovery Filter, the output of a bitwise AND operation between the ProSe Restricted Code contained in the received PC5_DISCOVERY message and the mask, matches the output of a bitwise AND operation between the mask and the code contained in the same Restricted Discovery Filter.\nNOTE:\tIn a Restricted Discovery Filter, a mask with all bits set to \"1\" is assigned by the ProSe Function for full matching of a ProSe Restricted Code.\nWhen applying a Restricted Discovery Filter to a received PC5_DISCOVERY message for the above-mentioned bitwise AND operation, the UE shall use the DUSK, if received as part of the filter in the DISCOVERY_RESPONSE message, and the UTC-based counter generated during the monitoring operation, to unscramble the PC5_DISCOVERY message as described in 3GPP TS 33.303 [6]. Then, if a DUCK is included as part of the filter, the UE shall use the DUCK and the UTC-based counter to decrypt the message-specific confidentiality protected portion identified by the Encrypted Bitmask, as described in 3GPP TS 33.303 [6];\nNOTE:\tThe UE can look for a match on the unencrypted bits first before applying DUCK, to minimise the amount of processing performed before finding a match.\nIf a DUIK is received as part of the filter, the UE shall use the DUIK and the UTC-based counter to verify the MIC field in the unscrambled PC5_DISCOVERY message. If a MIC Check Indicator parameter is included instead, the UE shall use the match report procedure described in subclause 6.2.4A to trigger checking of the MIC of the PC5_DISCOVERY message containing the ProSe Restricted Code by the ProSe Function.\nThe UE may instruct the lower layers to start monitoring if all of the following conditions are met:\n-\tthe UE is currently authorized to perform E-UTRA-based restricted ProSe direct discovery model A monitoring in at least one PLMN or the UE is currently authorized to perform WLAN-based restricted ProSe direct discovery model A monitoring;\n-\tthe UE has obtained at least one Restricted Discovery Filter and their respective TTL timer T4009(s) have not expired; and\n-\ta request from upper layers to monitor for the RPAUID(s) associated with an authorised Application Identity is still in place.\nIn case of E-UTRA-based restricted ProSe direct discovery model A monitoring if the UE is in EMM-CONNECTED mode, the monitoring UE shall also trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\nDuring the monitoring operation, the UE receives all PC5_DISCOVERY messages and associated UTC times from the lower layers. The UE shall generate the UTC-based counter corresponding to the UTC time associated with a PC5_DISCOVERY message and only process the PC5_DISCOVERY message if the UTC-based counter is within Max Offset of the time shown by the clock used for ProSe by the UE.\nDuring the monitoring operation, if one of the above conditions is no longer met, the UE may instruct the lower layers to stop monitoring. When the UE stops monitoring, in case of E-UTRA-based restricted ProSe direct discovery model A monitoring if the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\nIf the DISCOVERY_REQUEST message is not accepted by the ProSe Function, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element to the UE including an appropriate PC3 Control Protocol cause value.\nIf the application corresponding to the Application Identity contained in the DISCOVERY_REQUEST message is not authorised for ProSe direct discovery monitoring, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #1 \"Invalid application\".\nIf the RPAUID contained in the DISCOVERY_REQUEST message is unknown to the ProSe Application Server, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #9 \"Unknown RPAUID\".\nIf none of the RPAUID(s) contained in the Application Level Container in the DISCOVERY_REQUEST message is eligible to be discovered by the requesting RPAUID, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #11 \"Invalid Discovery Target\".\nIf the RPAUID contained in the DISCOVERY_REQUEST message does not match the stored RPAUID for the requested Discovery Entry ID, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #10 \"Unknown or Invalid Discovery Entry ID\".\nIf the UE is not authorised for restricted ProSe direct discovery monitoring, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #3 \"UE authorisation failure\".\nIf the RPAUID contained in the DISCOVERY_REQUEST message is not associated with a PDUID belonging to the requesting UE, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #3 \"UE authorisation Failure\".\nIf the UE is not authorized to use ACE, but the DISCOVERY_REQUEST message contains the ACE Enabled Indicator set to \"application-controlled extension enabled\", the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #12 \"UE unauthorised for discovery with Application-Controlled Extension\".\nIf the Discovery Entry ID contained in the DISCOVERY_REQUEST message is unknown to the ProSe Function and the Requested Timer is set to 0, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #10 \"Unknown or invalid Discovery Entry ID\".\nThe following abnormal cases can be identified:\na)\tIndication from the transport layer of transmission failure of DISCOVERY_REQUEST message (e.g. after TCP retransmission timeout)\nThe UE shall close the existing secure connection to the ProSe Function, establish a new secure connection and then restart the monitor request procedure.\nb)\tNo response from the ProSe Function after the DISCOVERY_REQUEST message has been successfully delivered (e.g. TCP ACK has been received for the DISCOVERY_REQUEST message)\nThe UE shall retransmit the DISCOVERY_REQUEST message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are UE implementation specific.\nc)\tIndication from upper layers that the request to monitor the targets contained in Application Level Container is no longer in place after sending the DISCOVERY_REQUEST message, but before the monitor request procedure is completed\nThe UE shall acknowledge the DISCOVERY_RESPONSE message received from the ProSe Function but discard its contents and then abort the procedure.\nd)\tChange of PLMN\nIf a PLMN change occurs before the monitor request procedure is completed, the procedure shall be aborted. If the UE is authorized to monitor in the new PLMN, the procedures shall be restarted once the UE is registered on the new PLMN.\nThe following abnormal cases can be identified:\na)\tIndication from the lower layer of transmission failure of DISCOVERY_RESPONSE message\nAfter receiving an indication from lower layer that the DISCOVERY_RESPONSE message has not been successfully acknowledged, the ProSe Function shall abort the procedure, and stop any associated timer(s) T4010, if running.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.3B\tDiscoverer request procedure for restricted ProSe direct discovery model B",
                            "text_content": "The purpose of the discoverer request procedure for restricted ProSe direct discovery model B is for the UE to obtain ProSe Query Code(s) and Discovery Response Filter(s) to be used for sending query and monitoring responses over the PC5 interface based on the information provided by the upper layer application, as defined in 3GPP TS 23.303 [2].\nBefore initiating the discoverer request procedure, the UE shall be authorised for restricted ProSe direct discovery model B discoverer operation in the registered PLMN or the local PLMN based on the service authorisation procedure as specified in clause 5.\nNOTE:\tThe notion of \"local PLMN\" does not apply for WLAN-based ProSe direct discovery. The UE can engage in WLAN-based ProSe direct discovery as announcing UE regardless of the serving PLMN or other PLMNs that provide E-UTRAN coverage in the UE location.\nAs the result of successful completion of this procedure, the UE obtains one or more ProSe Query Code(s) which can be included in a PC5_DISCOVERY message and passes the PC5_DISCOVERY message to the lower layers for transmission over the PC5 interface. The UE also obtains Discovery Response Filter(s) and apply it to the monitoring operation in PC5 interface to match potential responses for the sent query request for the target RPAUID.\nBefore initiating the discoverer request procedure, the user sets the permissions for the restricted discovery using application layer mechanisms. The application client in the UE retrieves the PDUID provisioned to the UE as part of the service authorisation procedure as specified in clause 5 and obtains an RPAUID associated with the UE's PDUID from the ProSe Application Server. The UE may also obtain the target RPAUID(s) from the ProSe Application Server. This step is performed using mechanisms that are out of scope of the present specification.\nIf the UE is authorised to perform E-UTRA-based restricted ProSe direct discovery model B discoverer operation in the PLMN operating the radio resources signalled from the serving PLMN, or if the UE is authorised to perform WLAN-based restricted ProSe direct discovery model B discoverer operation it shall initiate a discoverer request procedure:\na)\twhen the UE is triggered by an upper layer application to perform the query for one or more target RPAUIDs  in Model B and the UE has no valid corresponding ProSe Query Code and Discovery Response Filter for those target RPAUIDs of the upper layer application;\nb)\twhen the validity timer T4013 assigned by the ProSe Function to a ProSe Query Codes and the corresponding Discovery Response Filter has expired and the request from upper layers to announce the RPAUID corresponding to that ProSe Response Code is still in place;\nc)\twhen the UE selects a new PLMN while announcing a ProSe Query Code or waiting for a ProSe Response Code and intends to announce the ProSe Query Code in the new PLMN, and the UE is authorised for restricted ProSe direct discovery model B discoverer operation in the new PLMN;\nd)\twhen, while querying for target RPAUID(s), the UE intends to switch the announcing PLMN to a different PLMN without performing PLMN selection, and the UE does not have a valid allocated ProSe Query Code for this new PLMN yet; or\ne)\twhen the UE needs to update a previously sent restricted ProSe direct discovery model B discoverer request.\nWhen the UE selects a new PLMN while announcing a ProSe Query Code or waiting for a ProSe Response Code and the UE is not yet authorised for restricted ProSe direct discovery model B discoverer operation in the new PLMN, the UE shall initiate a discoverer request procedure only after the UE is authorised for restricted ProSe direct discovery model B discoverer operation in the new PLMN.\nNOTE 1:\tTo ensure service continuity if the UE needs to keep announcing in Model B a ProSe Query Code  corresponding to the same RPAUID, the UE can initiate the discoverer request procedure before the validity timer T4013 assigned by the ProSe Function for a ProSe Query Code expires.\nThe UE initiates the discoverer request procedure by sending a DISCOVERY_REQUEST message with:\n-\ta new transaction ID not used in any other direct discovery procedures in PC3 interface;\n-\tthe RPAUID set to the RPAUID received from upper layers;\n-\tthe Application Level Container set to contain the application-layer information, e.g., target RPAUID(s) to discover;\n-\tthe command set to \"query\";\n-\tthe UE identity set to the UE's IMSI;\n-\tthe Application Identity set to the Application Identity of the upper layer application that requested the announcing;\n-\tthe Discovery Type set to \"Restricted discovery\";\n-\tthe Discovery Model set to \"Model B\";\n-\tthe Discovery Entry ID set to a 0 if the discoverer request is a new request, and set to the Discovery Entry ID received from the ProSe Function if the discoverer request is to update a previously sent discoverer request;\n-\toptionally in case of E-UTRA-based restricted ProSe direct discovery model B discoverer operation the Announcing PLMN ID set to the PLMN ID of the local PLMN operating the radio resources that the UE intends to use for transmitting the query for the target RPAUID(s); and\n-\toptionally the PC5_tech set to the PC5 radio technology that the UE wishes to use. PC5_tech may include more than one PC5 radio technology.\nNOTE 2:\tA UE can include one or multiple transactions in one DISCOVERY_REQUEST message for different discovering requests (e.g., for different applications), and receive corresponding <restricted-discoverer-response> element or <response-reject> element in a DISCOVERY_RESPONSE message for each respective transaction. In the following description of the discoverer request procedure, only one transaction is included.\nFigure 6.2.3B.2.1 illustrates the interaction of the UE and the ProSe Function in the discoverer request procedure.\nFigure 6.2.3B.2.1 illustrates the Discoverer request procedure for the restricted ProSe direct discovery model B, which involves the exchange of information between the ProSe network and the user equipment (UE) to facilitate efficient communication. The figure showcases the interaction between the ProSe network, represented by the network interface controller (NIC), and the UE, depicted by the user equipment (UE) interface. The process includes the transmission of a discovery request from the UE to the ProSe network, followed by the network's response with a list of available ProSe devices. This procedure is crucial for enabling seamless communication and resource allocation within the ProSe network.\nFigure 6.2.3B.2.1: Discoverer request procedure for restricted ProSe direct discovery model B\nUpon receiving a DISCOVERY_REQUEST message, the ProSe Function shall check that the application corresponding to the Application Identity contained in the DISCOVERY_REQUEST message is authorised for restricted ProSe direct discovery model B discoverer operation. If the application is authorised for restricted ProSe direct discovery model B discoverer operation, the ProSe Function shall check whether there is an existing context for the UE.\nIf there is no associated UE context, the ProSe Function checks with the HSS whether the UE is authorised for restricted ProSe direct discovery model B discoverer operation as described in 3GPP TS 29.344 [3]. If the check indicates that the UE is authorised, the ProSe Function creates a UE context that contains the UE's subscription parameters obtained from the HSS. The HSS also provides to the ProSe Function the PLMN ID of the PLMN in which the UE is currently registered.\nIf the UE context exists, the ProSe Function shall check whether the UE is authorized for restricted ProSe direct discovery model B discoveree operation in the currently registered PLMN or in case of E-UTRA-based restricted ProSe direct discovery model B discoverer operation the local PLMN identified by the Announcing PLMN ID included in the DISCOVERY_REQUEST message.\nIf the UE is authorized and the Discovery Entry ID included in the DISCOVERY_REQUEST message is set to 0 then:\n-\tthe ProSe Function shall use the procedure described in 3GPP TS 29.343 [31] to pass the Application Level Container included in the DISCOVERY_REQUEST message to the ProSe Application Server and obtain a list of PDUID(s) corresponding to the authorised target RPAUID(s) from the ProSe Application Server;\n-\tfor each of the PDUIDs corresponding to an authorised target RPAUID:\n-\tif the PLMN ID of the PDUID is not the same as that of the PLMN to which the ProSe Function belongs, then the ProSe Function executes the procedures defined in 3GPP TS 29.345 [5] to obtain the ProSe Query Code, the ProSe Response Code, the associated validity timer T4012, and optionally metadata associated with this target RPAUID. Otherwise, the ProSe Function shall locate the discoveree UE context and retrieve the corresponding ProSe Query Code and ProSe Response Code and the validity timer T4012, and optionally metadata associated with this RPAUID. Then, the ProSe Function in the HPLMN builds one or more Discovery Response Filter(s) based on the respective ProSe Response Code, and associate the Discovery Response Filter(s) and ProSe Query Code with a new validity timer T4013 based on the remaining value of T4012.\nNOTE 1:\tIf the ProSe Function cannot retrieve the corresponding discoveree UE context for a target RPAUID, e.g. the target RPAUID has not yet been requested to be discovered by Model B in a discoveree request procedure, or the discoveree UE context expires, the ProSe Function can skip the processing of this target RPAUID.\nNOTE 2:\t\tThe ProSe Function can choose the value of T4013 to be longer than the remaining value of T4012, so that the discoverer UE sends a new discoverer request for renewing the query-related information no earlier than the discoveree UE renewing its own ProSe Response Code with the ProSe Function.\n-\tthe ProSe Function associates the ProSe Query Code and corresponding Discovery Response Filter(s), target RPAUID, and optionally metadata associated with the target RPAUID with a new discovery entry in the discoverer UE's context; and\n-\tthe ProSe Function starts timer T4014 assigned for each ProSe Query Code and Discovery Response Filter(s) (of each target RPAUID) under this discovery entry of the discoverer UE context. For a given ProSe Query Code and the corresponding Discovery Response Filter(s), timer T4014 shall be longer than timer T4013. By default, the value of timer T4014 is 4 minutes greater than the value of timer T4013.\nIf the Discovery Entry ID included in the DISCOVERY_REQUEST message is not set to 0 and if there is an existing discovery entry for this Discovery Entry ID value in the UE's context, the ProSe Function shall still process the above steps, but update the discovery entry instead of creating a new discovery entry.\nIf the Discovery Entry ID contained in the DISCOVERY_REQUEST message is not found in the UE context or there is no UE context in the ProSe Function, the ProSe Function shall behave as if the Discovery Entry ID included in the DISCOVERY_REQUEST message was set to 0, and the ProSe Function shall allocate a new non-zero Discovery Entry ID for this entry.\nIf a new UE context was created or an existing UE context was updated, the UE is currently roaming or the Announcing PLMN ID is included in the DISCOVERY_REQUEST message, the ProSe Function checks with the ProSe Function of the VPLMN or in case of E-UTRA-based restricted ProSe direct discovery model B discoverer operation the local PLMN indicated by the Announcing PLMN ID whether the UE is authorised for restricted ProSe direct discovery model B discoverer operation as described in 3GPP TS 29.345 [5].\nThe ProSe Function shall then send a DISCOVERY_RESPONSE message containing a <restricted-discoverer-response> element with:\n-\tthe transaction ID set to the value of the transaction ID received in the DISCOVERY_REQUEST message from the UE;\n-\tone or more Subquery Result information elements, each of which includes:\n-\ta target RPAUID;\n-\tthe ProSe Query Code set to the ProSe Query Code for the target RPAUID;\n-\tone or more the Discovery Response Filters IE which are set to include the Discovery Response Filter(s) used to match a potential ProSe Response Code responding to the ProSe Query Code.;\n-\ta validity timer T4013 set to the T4013 timer value assigned by the ProSe Function to the ProSe Query Code and the Discovery Response Filter(s); and\n-\toptionally, the metadata associated with the target RPAUID;\n-\tthe Restricted Security IE containing the security key(s) needed to be used with Discovery Response Filter(s) for restricted discovery monitoring;\n-\tthe Discovery Entry ID set to the ID of the discovery entry associated with this announce request in the UE context; and\n-\toptionally the PC5_tech set to the one or more PC5 radio technologies that are authorized to be used for the assigned ProSe Query Code.\nIf T4014 expires, the ProSe Function shall remove the corresponding ProSe Query Code and ProSe Response Filter(s) from the discovery entry associated with the discoverer UE's context.\nUpon receipt of the DISCOVERY_RESPONSE message, if the transaction ID contained in the <restricted-discoverer-response> element matches the value sent by the UE in a DISCOVERY_REQUEST message with the command set to \"query\" and the Discovery Model set to \"Model B\", the UE shall, process as follow:\n-\tIf the DISCOVERY_RESPONSE creates a new discovery entry, start the validity timer T4013 with the received value for the ProSe Query Code and the corresponding Discovery Response Filter(s) included for each SubQuery-Result information element received in the DISCOVERY_RESPONSE message and the PLMN ID of the intended announcing PLMN if included in the DISCOVERY_REQUEST message;\n-\tIf the DISCOVERY_RESPONSE updates an existing discovery entry, the UE shall\n-\tstop the timer T4013 of any ProSe Query Code(s) and Discovery Response Filter(s) in this discovery entry which are no longer authorized by the ProSe Function, ask lower layers to stop announcing the ProSe Query Code(s) and monitoring ProSe Response Filter(s), and remove the ProSe Query Code(s) and Discovery Response Filter(s) from the existing discovery entry;\n-\trestart the T4013 timer(s) for those remain eligible;\n-\tstart the T4013 timer(s) for any new ProSe Query Codes and their corresponding Discovery Response Filter(s); and\n-\tupdate the PLMN ID of the intended announcing PLMN for this discovery entry if included in the DISCOVERY_REQUEST message.\nOtherwise the UE shall discard the DISCOVERY_RESPONSE message and shall not perform the procedures below.\nFor each ProSe Query Code in this discovery entry, the UE requests the lower layers to announce the ProSe Query Code in the PC5 interface, as specified in 3GPP TS 36.331 [12]. In case of E-UTRA-based restricted ProSe direct discovery model B discoverer operation this shall be done only if the lower layers indicate that ProSe direct discovery is supported by the network. In case of E-UTRA-based restricted ProSe direct discovery model B discoverer operation if the UE in EMM-IDLE mode has to request resources for ProSe direct discovery announcing as specified in 3GPP TS 36.331 [12], the UE shall perform a service request procedure or tracking area update procedure as specified in 3GPP TS 24.301 [11]. The UE shall obtain the UTC time for the next discovery transmission opportunity for ProSe direct discovery from the lower layers.\nIf a valid UTC time is obtained, the UE shall generate the UTC-based counter corresponding to this UTC time as specified in subclause 12.2.2.18. If the resulting UTC-based counter is within Max Offset of the time shown by the clock used for ProSe by the UE, the UE shall for each ProSe Query Code in this discovery entry, use the ProSe Query Code to construct a PC5_DISCOVERY message, according to the format defined in subclause 11.2.5.\nThe UE shall then apply one or more of the DUIK, DUSK or DUCK with the associated Encrypted Bitmask, whichever received in the Restricted Code Security Material parameter of the DISCOVERY_RESPONSE message, along with the UTC-based counter to the PC5_DISCOVERY message, to e.g. generate a MIC value, scramble the message contents or provide confidentiality protection, as specified in 3GPP TS 33.303 [6].\nThe UE then passes the resulting PC5_DISCOVERY message, along with the PLMN ID of the intended announcing PLMN stored for this discovery entry, to the lower layers for transmission and instruct the lower layers to start monitoring if:\n-\tthe UE is currently authorised to perform restricted ProSe direct discovery model B discoverer operation in the registered PLMN or in case of E-UTRA-based restricted ProSe direct discovery model B discoverer operation the local PLMN operating the radio resources that the UE intends to use;\n-\tthe validity timer T4013 for the ProSe Query Code and corresponding ProSe Response Filter(s) has not expired; and\n-\ta request from upper layers to query the target RPAUID in restricted discovery Model B, associated with both the ProSe Query Code, and the authorised Application Identity, is still in place.\nDuring the discoverer operation, if one of the above conditions is no longer met, the UE may instruct the lower layers to stop the discoverer operation. When the UE stops discoverer operation, in case of E-UTRA-based restricted ProSe direct discovery model B discoverer operation if the lower layers indicate that the UE is required to send a discovery indication to the eNodeB and the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\nThe UE shall ensure that it keeps on passing PC5_DISCOVERY messages to the lower layers for transmission until the validity timer T4013 of the ProSe Query Code expires. How this is achieved is left up to UE implementation.\nThe UE may apply the received Discovery Response Filter(s) to its monitoring operation. Using the Discovery Response Filter may result in a match event for the target RPAUID the UE is querying for. There is match event when, for any of the masks in a Discovery Response Filter, the output of a bitwise AND operation between the ProSe Response Code contained in the received PC5_DISCOVERY message and the mask, matches the output of a bitwise AND operation between the mask and the code contained in the Discovery Response Filter.\nWhen applying a Discovery Response Filter to a received PC5_DISCOVERY message for the bitwise AND operation, the UE shall use the DUSK, if received as part of the filter in the DISCOVERY_RESPONSE message, and the UTC-based counter generated during the monitoring operation, to unscramble the PC5_DISCOVERY message as described in 3GPP TS 33.303 [6]. Then, if a DUCK is included as part of the filter, the UE shall use the DUCK and the UTC-based counter to to decrypt the message-specific confidentiality protected portion identified by the Encrypted Bitmask, as described in 3GPP TS 33.303 [6];\nNOTE:\tThe UE can look for a match on the unencrypted bits first before applying DUCK, to minimise the amount of processing performed before finding a match.\nIf a DUIK is received as part of the filter, the UE shall use the DUIK and the UTC-based counter to verify the MIC field in the unscrambled PC5_DISCOVERY message. If a MIC Check Indicator parameter is included instead, the UE shall use the match report procedure described in subclause 6.2.4B to trigger checking of the MIC of the PC5_DISCOVERY message containing the ProSe Response Code by the ProSe Function.\nThe UE may notify the upper layer application about the match event of restricted ProSe direct discovery Model B with the corresponding target RPAUID and metadata, if the RPAUID and meta-data are included in the Subquery Result element in the DISCOVERY_RESPONSE message.\nIf the DISCOVERY_REQUEST message cannot be accepted by the ProSe Function, the ProSe Function sends a DISCOVERY_RESPONSE message containing a <response-reject> element to the UE including an appropriate PC3 Control Protocol cause value.\nIf the application corresponding to the Application Identity contained in the DISCOVERY_REQUEST message is not authorised for restricted ProSe direct discovery Model B discoverer operation, the ProSe Function shall send the DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #1 \"Invalid application\".\nIf the RPAUID contained in the DISCOVERY_REQUEST message is unknown to the ProSe Function or ProSe Application Server, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #9 \"Unknown RPAUID\".\nIf the RPAUID contained in the DISCOVERY_REQUEST message does not match the stored RPAUID for the requested Discovery Entry ID, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #10 \"Unknown or Invalid Discovery Entry ID\".\nIf the UE is not authorised for restricted ProSe direct discovery model B discoverer operation, the ProSe Function shall send the DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #3 \"UE authorisation failure\".\nIf the RPAUID contained in the DISCOVERY_REQUEST message is not associated with a PDUID belonging to the requesting UE, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #3 \"UE authorisation Failure\".\nIf the ProSe Function fails to retrieve any valid target PDUIDs from ProSe Application Server based on the Application Level Container contained in the DISCOVERY_REQUEST message, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #11 \"Invalid discovery target\".\nIf the ProSe Function fails to retrieve any valid discoveree UE contexts for the valid target RPAUIDs contained in the Application Level Container contained in the DISCOVERY_REQUEST message, the ProSe Function shall send a DISCOVERY_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #11 \"Invalid discovery target\".\nThe following abnormal cases can be identified:\na)\tIndication from the transport layer of transmission failure of DISCOVERY_REQUEST message (e.g. after TCP retransmission timeout)\nThe UE shall close the existing secure connection to the ProSe Function, establish a new secure connection and then restart the discoverer request procedure.\nb)\tNo response from the ProSe Function after the DISCOVERY_REQUEST message has been successfully delivered (e.g., TCP ACK has been received for the DISCOVERY_REQUEST message)\nThe UE shall retransmit the DISCOVERY_REQUEST message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are UE implementation specific.\nc)\tIndication from upper layers that the request to discover the target RPAUID(s) is no longer in place after sending the DISCOVERY_REQUEST message, but before the discoverer request procedure is completed\nThe UE shall acknowledge the DISCOVERY_RESPONSE message received from the ProSe Function but discard its contents and then abort the procedure.\nd)\tChange of PLMN\nIf a PLMN change occurs before the discoverer request procedure is completed, the procedure shall be aborted. If the UE is authorized to perform restricted ProSe direct discovery discoverer operation Model B in the new PLMN, the procedure shall be restarted once the UE is registered on the new PLMN.\nThe following abnormal cases can be identified:\na)\tIndication from the lower layer of transmission failure of DISCOVERY_RESPONSE message\nAfter receiving an indication from lower layer that the DISCOVERY_RESPONSE message has not been successfully acknowledged (e.g. TCP ACK is not received), the ProSe Function shall abort the procedure, and stop any associated timer(s) T4014, if running.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.4\tMatch report procedure for open ProSe direct discovery",
                            "text_content": "The purpose of the Match report procedure for open ProSe direct discovery is to allow a UE to send a ProSe Application Code that was matched during the monitoring operation and receive the corresponding ProSe Application ID or the updated metadata, if there is no such a mapping stored locally or the Metadata Index in the ProSe Application Code indicates the metadata is updated.\nThe UE shall only initiate the match report procedure if it has been authorised for open ProSe direct discovery monitoring in the monitored PLMN based on the service authorisation procedure.\nAs a result of the match report procedure completing successfully, the UE obtains a ProSe Application ID and potentially other information, which the UE may store locally and pass to the upper layers.\nThe UE shall meet the following pre-conditions before initiating this procedure:\n-\ta request from upper layers to monitor for the ProSe Application ID, which resulted in the matched ProSe Application Code, is still in place;\n-\tthe lower layers have provided a \"Monitored PLMN ID\" value, and UTC time information, along with the discovery message containing a ProSe Application Code; and\n-\tthe TTL timer T4002 associated with the Discovery Filter, which resulted in a match event of the ProSe Application Code, has not expired.\nIf the UE is authorised to perform open ProSe direct discovery monitoring in the monitored PLMN, it should initiate a match report procedure:\na)\twhen there is a match event of one of the ProSe Application Codes received from the lower layers, and the UE does not have a corresponding ProSe Application ID already locally stored;\nb)\twhen the UE has a locally stored mapping for the ProSe Application Code that resulted in a match event, but the validity timer T4004 of the ProSe Application Code has expired;\nc)\twhen the UE has a locally stored mapping for the ProSe Application Code that resulted in a match event, but the match report refresh timer T4006 of the ProSe Application Code has expired; or\nd)\twhen there is a match event of one of the ProSe Application Codes received from the lower layers, and the UE has a locally stored ProSe Application Code excluding the Metadata Index portion located by the locally stored Metadata Index Mask.\nThe UE initiates the match report procedure for open ProSe direct discovery by sending a MATCH_REPORT message with a new transaction ID and shall set the message contents as follows:\n-\tthe UE shall set the ProSe Application Code to the ProSe Application Code for which there was a match event;\n-\tthe UE shall set the UE identity to the UE's IMSI;\n-\tthe UE shall set the UTC-based counter as follows:\n-\tthe UE shall generate two UTC-based counters with:\n1)\tthe first counter composed of:\n-\tthe 27 most significant bits of the UTC-based counter set to the 27 most significant bits of  the UTC time provided by the lower layers for the PC5_DISCOVERY message that contained the ProSe Application Code for which there was a match event encoded as specified in subclause 12.2.2.18;\n-\tthe 28th most significant bit of the UTC-based counter set to '0'; and\n-\tthe 4 least significant bits of the UTC-based counter shall be set to the 4 least significant bits of the UTC-based counter contained in the PC5_DISCOVERY message that contained the ProSe Application Code for which there was a match event, as specified in 3GPP TS 33.303 [6]; and\n2)\tthe second counter composed of:\n-\tthe 27 most significant bits of the UTC-based counter set to the 27 most significant bits of  the UTC time provided by the lower layers for the PC5_DISCOVERY message that contained the ProSe Application Code for which there was a match event encoded as specified in subclause 12.2.2.18;\n-\tthe 28th most significant bit of the UTC-based counter set to '1'; and\n-\tthe 4 least significant bits of the UTC-based counter set to the 4 least significant bits of the UTC-based counter contained in the PC5_DISCOVERY message that contained the ProSe Application Code for which there was a match event, as specified in 3GPP TS 33.303 [6]; and\n-\tthen the UE shall select, among the two counters described above, the counter that is nearest to the UTC time provided by the lower layers for the PC5_DISCOVERY message that contained the ProSe Application Code for which there was a match event encoded as specified in subclause 12.2.2.18, and set the UTC-based counter in the MATCH_REPORT message to that counter;\n-\tthe UE shall set the MIC to the MIC of the PC5_DISCOVERY message that contained the ProSe Application Code for which there was a match event;\n-\tthe UE shall set the Message Type to the value of Message Type field of the PC5_DISCOVERY message that contained the ProSe Application Code for which there was a match event;\n-\tthe UE shall set the Monitored PLMN ID to the PLMN ID of the PLMN where the PC5_DISCOVERY message was received, as provided by the lower layers;\n-\tif the UE was roaming when the match event occurred, the UE shall set the VPLMN ID to the PLMN ID of the PLMN in which the UE was registered when the match event occurred;\n-\tthe UE shall set the Metadata Flag to indicate whether or not it wishes to receive metadata information associated with the ProSe Application ID in the MATCH_REPORT_ACK message from the ProSe Function; and\n-\toptionally the PC5_tech set to the PC5 radio technology for which there was a match event. PC5_tech may include more than one PC5 radio technology.\nNOTE 1:\tA UE can include one or multiple transactions in one MATCH_REPORT message for different ProSe Application Codes, and receive corresponding <match-ack> element or <match-reject> element in the MATCH_REPORT_ACK message for each respective transaction. In the following description of match report procedure, only one transaction is included.\nNOTE 2:\tThe value of the Metadata Flag is determined through an indication from upper layers in the original request to monitor for a ProSe Application ID.\nFigure 6.2.4.2.1 illustrates the interaction between the UE and the ProSe Function in the match report procedure.\nFigure 6.2.4.2.1: Match Report Procedure\n\nThe figure illustrates a match report procedure in a specific context, likely related to sports or gaming. The figure shows a flowchart with various steps and decision points, indicating a structured process for generating match reports. The flowchart begins with the input of player data and progresses through stages such as data validation, scoring, and decision making, ending with the generation of the final match report. The figure emphasizes the importance of accuracy and consistency in the reporting process, as well as the need for clear communication and decision-making in the context of the activity being depicted.\nFigure 6.2.4.2.1: Match report procedure\nUpon receiving a MATCH_REPORT message, the ProSe Function shall check whether there is an existing context for the UE identified by its IMSI. If there is no associated UE context, the ProSe Function checks with the HSS whether the UE is authorised for open ProSe direct discovery monitoring as described in 3GPP TS 29.344 [3].\nThe ProSe Function shall also check the PLMN ID in the ProSe Application Code received from the UE. If the PLMN ID in the ProSe Application Code is not the same of that of the PLMN to which the ProSe Function belongs, the ProSe Function shall execute the procedures defined in 3GPP TS 29.345 [5]. Otherwise, the ProSe Function shall check whether the received ProSe Application Code is authorised to be transmitted on the monitored PLMN indicated in the Monitored PLMN ID in the received message.\nIf the ProSe Application Code is PLMN-specific, the ProSe Function shall verify if the PLMN ID in the ProSe Application Code is the same as the PLMN of the ProSe Function. If so, the ProSe Function shall map the ProSe Application Code to the corresponding ProSe Application ID from the PLMN-specific database. If the ProSe Application Code is country-specific, as specified in subclause 24.3 of 3GPP TS 23.003 [4], the ProSe Function shall check whether the MCC of the PLMN ID part of the ProSe Application Code corresponds to the country of the ProSe Function. If so, the ProSe Function shall map the ProSe Application Code to the corresponding ProSe Application ID from the country-specific database. If the ProSe Application Code is global as specified in subclause 24.3 of 3GPP TS 23.003 [4], the ProSe Function shall map the ProSe Application Code to the corresponding ProSe Application ID from the global database. If the ProSe Application Code contains a ProSe Application Code Prefix, the ProSe Function maps the ProSe Application Code Prefix to the corresponding ProSe Application ID.\nThe ProSe Function shall analyse the ProSe Application Code received from the UE and determine the validity of the ProSe Application Code.\nNOTE:\tThis might require the ProSe Function to execute procedures defined in 3GPP TS 29.345 [5].\nThe ProSe Function shall check if the MIC value and its corresponding UTC-based counter are valid, as defined in 3GPP TS 33.303 [6].\nIf the VPLMN ID is included in the MATCH_REPORT message, the ProSe Function uses it for charging purposes as specified in 3GPP TS 32.277 [27].\nIf the outcome of above processing is successful, the ProSe Function shall send a MATCH_REPORT_ACK message containing a <match-ack> element with:\n-\tthe transaction ID set to the value of the transaction ID received in the MATCH_REPORT message from the UE;\n-\tthe ProSe Application ID set to the ProSe Application ID provided by the ProSe Function and corresponding to the ProSe Application Code contained in the MATCH_REPORT message;\n-\tthe Validity Timer T4004 set to indicate for how long this ProSe Application Code is valid; and\n-\tthe Match Report Refresh Timer T4006 set to indicate for how long the UE will wait before sending a new Match Report for this ProSe Application Code.\nIf the UE has set the Metadata Flag to indicate that it wishes to receive metadata information associated with the ProSe Application ID, the ProSe Function shall set the Metadata to the metadata information associated with the ProSe Application Code received in the MATCH_REPORT message and set the Metadata Index Mask to the Metadata Index Mask allocated by the ProSe Function for the ProSe Application Code received in the MATCH_REPORT message.\nUpon receipt of the MATCH_REPORT_ACK message, if the transaction ID contained in the <match-ack> element matches the value sent by the UE in a MATCH_REPORT message, the UE shall store the mapping between the ProSe Application Code and ProSe Application ID locally, start timers T4004 and T4006, and may inform the upper layers of this match of the ProSe Application ID. If the Metadata Index Mask is contained in the MATCH_REPORT_ACK message, the UE shall also store the Metadata Index Mask with the ProSe Application Code and the ProSe Application ID locally. If there is a locally stored mapping between the ProSe Application ID and a ProSe Application Code, the UE shall delete the old mapping. Otherwise the UE shall discard the MATCH_REPORT_ACK message.\nUpon receipt of the MATCH_REPORT_ACK message, if the transaction ID contained in the <match-reject> element matches the value sent by the UE in a MATCH_REPORT message and if the received PC3 Control Protocol cause value is #5 \"Invalid MIC\", as specified in subclause 6.2.4.5, the UE shall stop timer T4004 if it is running.\nNOTE 1:\tIt is an implementation specific choice whether the UE informs the upper layers every time a ProSe Application ID triggers a match event, or only the first time this match occurs.\nNOTE 2:\tThe UE can also inform the upper layers if a ProSe Application ID is no longer matched, because the validity timer T4004 of the corresponding ProSe Application Code expires.\nNOTE 3:\tThe UE can also inform the upper layers if a ProSe Application ID is no longer matched, because the validity timer T4004 of the corresponding ProSe Application Code is stopped upon receiving MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #5 \"Invalid MIC\".\nIf the MATCH_REPORT message is not accepted by the ProSe Function, the ProSe Function sends a MATCH_REPORT_ACK message with a <match-reject> element to the UE including an appropriate PC3 Control Protocol cause value.\nIf the ProSe Application Code contained in the MATCH_REPORT message is unknown by the ProSe Function, the ProSe Function shall send the MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #4 \"Unknown ProSe Application Code\".\nIf the check of the MIC contained in the MATCH_REPORT message fails, the ProSe Function shall send the MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #5 \"Invalid MIC\".\nIf the check of the UTC-based counter contained in the MATCH_REPORT message fails, the ProSe Function shall send the MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #6 \"Invalid UTC-based counter\".\nIf the UE is not authorised for open ProSe direct discovery monitoring in the monitored PLMN contained in the MATCH_REPORT message, the ProSe Function shall send the MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #3 \"UE authorisation failure\".\nThe following abnormal cases can be identified:\na)\tIndication from the transport layer of transmission failure of MATCH_REPORT message (e.g. after TCP retransmission timeout)\nThe UE shall close the existing secure connection to the ProSe Function, establish a new secure connection and then restart the match report procedure.\nb)\tNo response from the ProSe Function after the MATCH_REPORT message has been successfully delivered (e.g. TCP ACK has been received for the MATCH_REPORT message)\nIf the TTL timer T4002 associated with the Discovery Filter which resulted in a match event has not expired, the UE shall retransmit the MATCH_REPORT message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are UE implementation specific.\nc)\tChange of PLMN\nIf a PLMN change occurs before the match report procedure is completed, the procedure shall be aborted.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.4A\tMatch report procedure for restricted ProSe direct discovery model A",
                            "text_content": "The purpose of the match report procedure is to allow a UE to send a ProSe Restricted Code that was matched during the monitoring operation and receive the corresponding RPAUID, if there is no such a mapping stored locally.\nThe UE shall only initiate the match report procedure if it has been authorised for restricted ProSe direct discovery monitoring model A in the monitored PLMN based on the service authorisation procedure.\nAs a result of the match report procedure completing successfully, the UE obtains a RPAUID and potentially other information, which the UE may store locally and pass to the upper layers.\nThe UE shall meet the following pre-conditions before initiating this procedure:\n-\ta request from upper layers to monitor for the target RPAUID, which resulted in the matched ProSe Restricted Code, is still in place;\n-\tthe lower layers have provided UTC time information, along with the discovery message containing the ProSe Restricted Code; and\n-\tthe TTL timer T4009 associated with the Restricted Discovery Filter, whose use resulted in a match event of the ProSe Restricted Code, has not expired.\nIf the UE is authorised to perform restricted ProSe direct discovery monitoring model A in the monitored PLMN, it should initiate a match report procedure:\na)\twhen there is a match event after applying one of the Restricted Discovery Filter(s) to a ProSe Restricted Code received from the lower layers, and the UE does not have a corresponding RPAUID already locally stored;\nb)\twhen the UE has a locally stored mapping for the ProSe Restricted Code that resulted in a match event, but the validity timer T4016 of the ProSe Restricted Code has expired;\nc)\twhen the UE has a locally stored mapping for the ProSe Restricted Code that resulted in a match event, but the match report refresh timer T4017 of the ProSe Restricted Code has expired;\nd)\twhen the UE desires to obtain the metadata associated with the discovered ProSe Restricted Code; or\ne)\twhen the UE has a locally stored mapping for the ProSe Restricted Code that resulted in a match event, but the UE does not have a running match report refresh timer T4017 for this ProSe Restricted Code and the UE is directed by the ProSe Function to perform the required MIC check via the match report procedure.\nNOTE 1:\tThe ProSe Function directs the UE to use the match report procedure to perform the MIC check by including the MIC Check Indicator parameter in the DISCOVERY_RESPONSE message.\nThe UE initiates the match report procedure by sending a MATCH_REPORT message with a new transaction ID and shall set the message contents as follows:\n-\tthe RPAUID set to the UE's RPAUID which has requested the corresponding monitoring operation that resulted this match event;\n-\tthe ProSe Restricted Code set to the ProSe Restricted Code for which there was a match event;\n-\tthe UE identity set to the UE's IMSI;\n-\tthe Discovery Type set to \"Restricted discovery\";\n-\tthe Application Identity set to the Application Identity of the upper layer application that triggered the monitoring operation;\n-\toptionally, the UTC-based counter set as follows if the MIC is checked via the match report procedure:\n-\tthe UE shall generate two UTC-based counters with:\n1)\tthe first counter composed of:\n-\tthe 23 most significant bits of the UTC-based counter set to the 23 most significant bits of the UTC time provided by the lower layers for the PC5_DISCOVERY message that contained the ProSe Restricted Code for which there was a match event encoded as specified in subclause 12.2.2.18;\n-\tthe 24th most significant bit of the UTC-based counter set to '0'; and\n-\tthe 8 least significant bits of the UTC-based counter set to the 8 least significant bits of the UTC-based counter contained in the PC5_DISCOVERY message that contained the ProSe Restricted Code for which there was a match event, as specified in 3GPP TS 33.303 [6]; and\n2)\tthe second counter composed of:\n-\tthe 23 most significant bits of the UTC-based counter set to the 23 most significant bits of  the UTC time provided by the lower layers for the PC5_DISCOVERY message that contained the ProSe Restricted Code for which there was a match event encoded as specified in subclause 12.2.2.18;\n-\tthe 24th most significant bit of the UTC-based counter set to '1'; and\n-\tthe 8 least significant bits of the UTC-based counter set to the 8 least significant bits of the UTC-based counter contained in the PC5_DISCOVERY message that contained the ProSe Restricted Code for which there was a match event, as specified in 3GPP TS 33.303 [6]; and\n-\tthen the UE shall select, among the two counters described above, the counter that is nearest to the UTC time provided by the lower layers for the PC5_DISCOVERY message that contained the ProSe Restricted Code for which there was a match event encoded as specified in subclause 12.2.2.18, and set the UTC-based counter in the MATCH_REPORT message to that counter;\n-\toptionally, the Message Type set to the value of Message Type field of the PC5_DISCOVERY message that contained the ProSe Restricted Code for which there was a match event, if the MIC is checked via the match report procedure;\n-\toptionally, the MIC set to the MIC of the PC5_DISCOVERY message that contained the ProSe Restricted Code for which there was a match event if the MIC is checked via the match report procedure;\n-\tthe Metadata Flag set to indicate whether or not the UE wishes to receive the latest metadata information associated with the RPAUID in the MATCH_REPORT_ACK message from the ProSe Function; and\n-\toptionally the PC5_tech set to the PC5 radio technology for which there was a match event. PC5_tech may include more than one PC5 radio technology.\nNOTE 2:\tA UE can include one or multiple transactions in one MATCH_REPORT message for different ProSe Restricted Codes, and receive a corresponding <restricted-match-ack> element or <match-reject> element in the MATCH_REPORT_ACK message for each respective transaction. In the following description of match report procedure, only one transaction is included.\nFigure 6.2.4A.2.1 illustrates the interaction between the UE and the ProSe Function in the match report procedure.\nFigure 6.2.4A.2.1 presents a match report procedure for a restricted discovery model A, illustrating the step-by-step process of identifying and matching data points within a specific communication network. The figure outlines the various stages, including data collection, data processing, and data matching, emphasizing the importance of accuracy and efficiency in the matching process. The diagram also highlights the role of network administrators in overseeing the procedure, ensuring that the network operates smoothly and securely.\nFigure 6.2.4A.2.1: Match report procedure for restricted discovery model A\nUpon receiving a MATCH_REPORT message, the ProSe Function shall check whether there is an existing context for the UE identified by its IMSI.\nThe ProSe Function shall analyse the ProSe Restricted Code received from the UE in the MATCH_REPORT message. If the MIC value and its corresponding UTC-based counter are included, the ProSe Function shall check whether the MIC value and the UTC-based counter are valid and within the acceptable range respectively as defined in 3GPP TS 33.303 [6]. The ProSe Function shall then check in the UE context if the ProSe Restricted Code matches any Restricted Discovery Filter(s) allocated for the particular application identified by the Application Identity received in the MATCH_REPORT message. If such a discovery filter exists, the target RPAUID associated with the filter(s) shall be identified as the corresponding RPAUID for this code. Optionally, the ProSe Function may further invoke the procedure defined in 3GPP TS 29.343 [31] to verify if the target RPAUID is allowed to be discovered by the RPAUID of the requesting UE that has sent the MATCH_REPORT message, or to retrieve metadata associated for the target RPAUID if Metadata Flag is set to \"True\" in the MATCH_REPORT message and the ProSe Function does not have the latest metadata.\nIf the outcome of the above processing is successful, the ProSe Function shall send a MATCH_REPORT_ACK message containing a <restricted-match-ack> element with the transaction ID set to the value of the transaction ID received in the MATCH_REPORT message from the UE, the RPAUID set to the target RPAUID retrieved from the UE context at the ProSe Function which corresponds to the ProSe Restricted Code contained in the MATCH_REPORT message, and the Validity Timer T4016 set to indicate for how long this ProSe Restricted Code is valid. The ProSe Function shall set the Match Report Refresh Timer T4017 to indicate for how long the UE will wait before sending a new Match Report for this ProSe Restricted Code if the MIC value and the UTC-based counter are included in the MATCH_REPORT message. If there exists metadata information associated with this target RPAUID and the Metadata Flag is set to \"True\" in the MATCH_REPORT message, the ProSe Function shall set the Metadata to the associated metadata information.\nIf the corresponding PDUID of the target RPAUID does not belong to the HPLMN of the requesting UE, the ProSe Function may optionally invoke the procedure defined in 3GPP TS 29.345 [5] to inform the ProSe Function of the announcing UE about the match event.\nUpon receipt of the MATCH_REPORT_ACK message, if the transaction ID contained in the <restricted-match-ack> element matches the value sent by the UE in a MATCH_REPORT message, the UE shall store the mapping between the ProSe Restricted Code and RPAUID locally, start timers T4016 and T4017, and may inform the upper layers of this match of the RPAUID. Otherwise the UE shall discard the MATCH_REPORT_ACK message.\nUpon receipt of the MATCH_REPORT_ACK message, if the transaction ID contained in the <match-reject> element matches the value sent by the UE in a MATCH_REPORT message and if the received PC3 Control Protocol cause value is #5 \"Invalid MIC\", as specified in subclause 6.2.4A.5, the UE shall stop timer T4016 if it is running.\nNOTE 1:\tIt is an implementation specific choice whether the UE informs the upper layers every time an RPAUID triggers a match event, or only the first time this match occurs.\nNOTE 2:\tThe UE can also inform the upper layers if an RPAUID is no longer matched, because the validity timer T4016 of the corresponding ProSe Restricted Code expires.\nNOTE 3:\tThe UE can also inform the upper layers if a ProSe Restricted Code is no longer matched, because the validity timer T4016 of the corresponding ProSe Restricted Code is stopped upon receiving MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #5 \"Invalid MIC\".\nIf the MATCH_REPORT message is not accepted by the ProSe Function, the ProSe Function sends a MATCH_REPORT_ACK message with a <match-reject> element to the UE including an appropriate PC3 Control Protocol cause value.\nIf there is no associated UE context for the IMSI contained in the MATCH_REPORT message, the ProSe Function shall send the MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #16 \"Invalid Match Event\".\nIf the ProSe Restricted Code contained in the MATCH_REPORT message does not match any Restricted Discovery Filter(s) allocated for the requesting UE for the corresponding application,, the ProSe Function shall send the MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #16 \"Invalid Match Event\".\nIf the check of the MIC contained in the MATCH_REPORT message fails, the ProSe Function shall send the MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #5 \"Invalid MIC\".\nIf the check of the UTC-based counter contained in the MATCH_REPORT message fails, the ProSe Function shall send the MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #6 \" Invalid UTC-based counter\".\nIf the UE is not authorised for restricted ProSe direct discovery monitoring, the ProSe Function shall send the MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #3 \"UE authorisation failure\".\nThe following abnormal cases can be identified:\na)\tIndication from the transport layer of transmission failure of MATCH_REPORT message (e.g. after TCP retransmission timeout)\nThe UE shall close the existing secure connection to the ProSe Function, establish a new secure connection and then restart the match report procedure.\nb)\tNo response from the ProSe Function after the MATCH_REPORT message has been successfully delivered (e.g. TCP ACK has been received for the MATCH_REPORT message)\nIf the TTL timer T4009 associated with the Restricted Discovery Filter which resulted in a match event has not expired, the UE shall retransmit the MATCH_REPORT message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are UE implementation specific.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.4B\tMatch report procedure for restricted ProSe direct discovery model B",
                            "text_content": "The purpose of the Match report procedure is to allow a UE to send a ProSe Response Code that was matched during the restricted ProSe direct discovery Model B discoverer operation and receive the corresponding RPAUID, if there is no such a mapping stored locally.\nThe UE shall only initiate the match report procedure if it has been authorised for restricted ProSe direct discovery model B discoverer operation in the monitored PLMN based on the service authorisation procedure.\nAs a result of the match report procedure completing successfully, the UE obtains a RPAUID and potentially other information, which the UE may store locally and pass to the upper layers.\nThe UE shall meet the following pre-conditions before initiating this procedure:\n-\ta request from upper layers to discover the target RPAUID with restricted discovery model B, which resulted in the matched ProSe Response Code, is still in place;\n-\tthe lower layers have provided UTC time information, along with the discovery message containing the ProSe Response Code; and\n-\tthe TTL timer T4013 associated with the Discovery Response Filter, whose use resulted in a match event of the ProSe Response Code, has not expired.\nIf the UE is authorised to perform restricted ProSe direct discovery model B discoverer operation in the monitored PLMN, it should initiate a match report procedure:\na)\twhen there is a match event when applying one of the Discovery Response Filter(s) to one of the ProSe Response Codes received from the lower layers, and the UE does not have a corresponding RPAUID already locally stored;\nb)\twhen the UE has a locally stored mapping for the ProSe Response Code that resulted in a match event, but the validity timer T4016 of the ProSe Response Code has expired;\nc)\twhen the UE has a locally stored mapping for the ProSe Response Code that resulted in a match event, but the match report refresh timer T4017 of the ProSe Response Code has expired;\nd)\twhen the UE desires to obtain the metadata associated with the discovered ProSe Response Code; or\ne)\twhen the UE has a locally stored mapping for the ProSe Response Code that resulted in a match event, but the UE does not have a running match report refresh timer T4017 for this ProSe Response Code and the UE is directed by the ProSe Function to perform the required MIC check via the match report procedure.\nNOTE 1:\tThe ProSe Function directs the UE to use the match report procedure to perform the MIC check by including the MIC Check Indicator parameter in the DISCOVERY_RESPONSE message.\nThe UE initiates the match report procedure by sending a MATCH_REPORT message with a new transaction ID and shall set the message contents as follows:\n-\tthe RPAUID set to the UE's RPAUID which has requested the corresponding restricted discovery model B discoverer operation that resulted this match event;\n-\tthe ProSe Response Code set to the ProSe Response Code for which there was a match event;\n-\tthe UE identity set to the UE's IMSI;\n-\tthe Discovery Type set to \"Restricted discovery\";\n-\tthe Application Identity set to the Application Identity of the upper layer application that triggered the restricted direct discovery Model B discoverer operation;\n-\toptionally, the UTC-based counter set as follows if the MIC is checked via the match report procedure:\n-\tthe UE shall generate two UTC-based counters with:\n1)\tthe first counter composed of:\n-\tthe 27 most significant bits of the UTC-based counter set to the 27 most significant bits of the UTC time provided by the lower layers for the PC5_DISCOVERY message that contained the ProSe Response Code for which there was a match event encoded as specified in subclause 12.2.2.18;\n-\tthe 24th most significant bit of the UTC-based counter set to '0'; and\n-\tthe 8 least significant bits of the UTC-based counter shall be set to the 8 least significant bits of the UTC-based counter contained in the PC5_DISCOVERY message that contained the ProSe Response Code for which there was a match event, as specified in 3GPP TS 33.303 [6]; and\n2)\tthe second counter composed of:\n-\tthe 23 most significant bits of the UTC-based counter set to the 23 most significant bits of  the UTC time provided by the lower layers for the PC5_DISCOVERY message that contained the ProSe Response Code for which there was a match event encoded as specified in subclause 12.2.2.18;\n-\tthe 24th most significant bit of the UTC-based counter set to '1'; and\n-\tthe 8 least significant bits of the UTC-based counter set to the 8 least significant bits of the UTC-based counter contained in the PC5_DISCOVERY message that contained the ProSe Response Code for which there was a match event, as specified in 3GPP TS 33.303 [6]; and\n-\tthen the UE shall select, among the two counters described above, the counter that is nearest to the UTC time provided by the lower layers for the PC5_DISCOVERY message that contained the ProSe Response Code for which there was a match event encoded as specified in subclause 12.2.2.18, and set the UTC-based counter in the MATCH_REPORT message to that counter;\n-\toptionally, the Message Type set to the value of Message Type field of the PC5_DISCOVERY message that contained the ProSe Response Code for which there was a match event, if the MIC is checked via the match report procedure;\n-\toptionally, the MIC to the MIC of the PC5_DISCOVERY message that contained the ProSe Response Code for which there was a match event if the MIC is checked via the match report procedure;\n-\tthe Metadata Flag set to indicate whether or not the UE wishes to receive the latest metadata information associated with the RPAUID in the MATCH_REPORT_ACK message from the ProSe Function; and\n-\toptionally the PC5_tech set to the PC5 radio technology for which there was a match event. PC5_tech may include more than one PC5 radio technology.\nNOTE 2:\tA UE can include one or multiple transactions in one MATCH_REPORT message for different ProSe Response Codes, and receive corresponding <restricted-match-ack> element or <match-reject> element in the MATCH_REPORT_ACK message for each respective transaction. In the following description of match report procedure, only one transaction is included.\nFigure 6.2.4B.2.1 illustrates the interaction between the UE and the ProSe Function in the match report procedure.\nFigure 6.2.4A.2.1 presents a match report procedure for a restricted discovery model B, illustrating the steps involved in identifying and matching data points within a specific context. The figure outlines the process, which includes data collection, comparison, and analysis, emphasizing the importance of accuracy and efficiency in the matching procedure. The visual elements in the figure, such as the flowchart and data points, provide a clear representation of the complex matching process, ensuring that stakeholders can easily understand and follow the procedure.\nFigure 6.2.4A.2.1: Match report procedure for restricted discovery model B\nUpon receiving a MATCH_REPORT message, the ProSe Function shall check whether there is an existing discoverer UE context for the UE identified by its IMSI.\nThe ProSe Function shall analyse the ProSe Response Code received from the UE in the MATCH_REPORT message. If the MIC value and its corresponding UTC-based counter are included, the ProSe Function shall check whether the MIC value and the UTC-based counter are valid and within the acceptable range respectively, as defined in 3GPP TS 33.303 [6]. The ProSe Function shall then check in the UE context if the ProSe Response Code matches any Discovery Response Filter(s) allocated for the particular application identified by the Application Identity received in the MATCH_REPORT message. If such a discovery filter exists, the target RPAUID associated with the filter(s) shall be identified as the corresponding RPAUID for this code. Optionally, the ProSe Function may further invoke the procedure defined in 3GPP TS 29.343 [31] to verify if the target RPAUID is allowed to be discovered by the RPAUID of the requesting UE that has sent the MATCH_REPORT message, or to retrieve metadata associated for the target RPAUID if Metadata Flag is set to \"True\" in the MATCH_REPORT message and the ProSe Function does not have the latest metadata.\nIf the outcome of the above processing is successful, the ProSe Function shall send a MATCH_REPORT_ACK message containing a <restricted-match-ack> element with the transaction ID set to the value of the transaction ID received in the MATCH_REPORT message from the UE, the RPAUID set to the target RPAUID retrieved from the UE context at the ProSe Function which corresponds to the ProSe Response Code contained in the MATCH_REPORT message, the Validity Timer T4016 set to indicate for how long this ProSe Response Code is valid. The ProSe Function shall set the Match Report Refresh Timer T4017 to indicate for how long the UE will wait before sending a new Match Report for this ProSe Response Code if the MIC value and the UTC-based counter are included in the MATCH_REPORT message. If there exists metadata information associated with this target RPAUID, the ProSe Function shall set the Metadata to the associated metadata information.\nIf the corresponding PDUID of the target RPAUID does not belong to the HPLMN of the requesting UE, the ProSe Function may optionally invoke the procedure defined in 3GPP TS 29.345 [5] to inform the ProSe Function of the discoveree UE about the match event.\nUpon receipt of the MATCH_REPORT_ACK message, if the transaction ID contained in the <restricted-match-ack> element matches the value sent by the UE in a MATCH_REPORT message, the UE shall store the mapping between the ProSe Response Code and the RPAUID locally, start timers T4016 and T4017, and may inform the upper layers of this match of the RPAUID. Otherwise the UE shall discard the MATCH_REPORT_ACK message.\nUpon receipt of the MATCH_REPORT_ACK message, if the transaction ID contained in the <match-reject> element matches the value sent by the UE in a MATCH_REPORT message and if the received PC3 Control Protocol cause value is #5 \"Invalid MIC\", as specified in subclause 6.2.4A.5, the UE shall stop timer T4016 if it is running.\nNOTE 1:\tIt is an implementation specific choice whether the UE informs the upper layers every time a RPAUID triggers a match event, or only the first time this match occurs.\nNOTE 2:\tThe UE can also inform the upper layers if an RPAUID is no longer matched, because the validity timer T4016 of the corresponding ProSe Response Code expires.\nNOTE 3:\tThe UE can also inform the upper layers if a ProSe Response Code is no longer matched, because the validity timer T4016 of the corresponding ProSe Response Code is stopped upon receiving MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #5 \"Invalid MIC\".\nIf the MATCH_REPORT message is not accepted by the ProSe Function, the ProSe Function sends a MATCH_REPORT_ACK message with a <match-reject> element to the UE including an appropriate PC3 Control Protocol cause value.\nIf there is no associated UE context for the IMSI contained in the MATCH_REPORT, the ProSe Function shall send the MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #16 \"Invalid Match Event\".\nIf the ProSe Response Code contained in the MATCH_REPORT message does not match any Discovery Response Filter(s) allocated for the requesting UE for the corresponding application,, the ProSe Function shall send the MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #16 \"Invalid Match Event\".\nIf the check of the MIC contained in the MATCH_REPORT message fails, the ProSe Function shall send the MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #5 \"Invalid MIC\".\nIf the check of the UTC-based counter contained in the MATCH_REPORT message fails, the ProSe Function shall send the MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #6 \" Invalid UTC-based counter\".\nIf the UE is not authorised for restricted ProSe direct discovery model B discoverer operation, the ProSe Function shall send the MATCH_REPORT_ACK message with a <match-reject> element with PC3 Control Protocol cause value #3 \"UE authorisation failure\".\nThe following abnormal cases can be identified:\na)\tIndication from the transport layer of transmission failure of MATCH_REPORT message (e.g. after TCP retransmission timeout)\nThe UE shall close the existing secure connection to the ProSe Function, establish a new secure connection and then restart the match report procedure.\nb)\tNo response from the ProSe Function after the MATCH_REPORT message has been successfully delivered (e.g. TCP ACK has been received for the MATCH_REPORT message)\nIf the TTL timer T4013 associated with the Discovery Response Filter which resulted in a match event has not expired, the UE shall retransmit the MATCH_REPORT message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are UE implementation specific.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.5\tDirect discovery time synchronisation by the Prose Function",
                            "text_content": "To ensure time synchronisation as specified in 3GPP TS 33.303 [6], the ProSe Function shall include timing-related information in parameters Current Time and Max Offset as defined in subclause 12.2.2.23 and subclause 12.2.2.24 in the DISCOVERY_RESPONSE message. It shall also include Current Time in MATCH_REPORT_ACK message.\nAfter receiving the Current Time parameter in a DISCOVERY_RESPONSE or MATCH_REPORT_ACK message, the UE shall set the clock used for ProSe to the value of Current Time. After receiving the Max Offset parameter in a DISCOVERY_RESPONSE message, the UE shall store the Max Offset parameter and overwrite any previous value.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.6\tDiscovery Update",
                            "text_content": "The discovery update procedure is used to update the discovery filters and/or allocate a new ProSe Restricted Code as defined in 3GPP TS 23.303 [2].\nThe ProSe Function in the HPLMN initiates the restricted discovery filters revocation procedure by sending the DISCOVERY_UPDATE_REQUEST to the UE with:\n-\ta new ProSe Function transaction ID not used in any other direct discovery procedures in PC3 interface;\n-\tthe UE identity set to the UE's IMSI;\n-\tthe Discovery Entry ID set to the Discovery Entry ID of the corresponding Discovery Entry that contains the Restricted Discovery Filter to be revoked; and\n-\tOptionally Update Info containing the restricted discovery filters that replace the existing ones, if the ProSe Function decides to remove only certain filter(s) and not others.\nNOTE:\tThe ProSe Function can include one or multiple transactions in one DISCOVERY_UPDATE_REQUEST message for different Restricted Discovery Filters, and receive corresponding <response-update> element or <response-reject> element in a DISCOVERY_UPDATE_RESPONSE message for each respective transaction. In the following description of the network initiated direct discovery update request procedure, only one transaction is included.\nFigure 6.2.6.2.1.1 illustrates the interaction of the UE and the ProSe Function in the restricted discovery filters revocation procedure.\nFigure 6.2.6.2.1.1 illustrates the restricted discovery filters revocation procedure, which is a crucial aspect of network security in telecommunication systems. The figure depicts the process of revoking filters at the network edge, ensuring that unauthorized devices are not able to access the network. The revocation process involves a series of steps, including filter generation, filter distribution, filter update, and filter revocation. The figure shows how these steps work together to maintain the security of the network while still allowing authorized devices to access the resources they need. The figure is a valuable resource for anyone studying or working in the field of telecommunication network security.\nFigure 6.2.6.2.1.1: Restricted Discovery filters revocation procedure\nUpon receiving a DISCOVERY_UPDATE_REQUEST message, the UE shall check if the UE identity contained in the DISCOVERY_UPDATE_REQUEST message is the IMSI of the UE. If the UE identity is the IMSI of the UE, the UE shall check if the Discovery Entry ID contained in the DISCOVERY_UPDATE_REQUEST message is valid. If the Discovery Entry ID is valid, the UE shall proceed with the following direct discovery update procedure.\nThe UE shall remove all the Restricted Discovery Filters corresponding to the Discovery Entry ID if the Update Info is not included in the DISCOVERY_UPDATE_REQUEST message or shall remove the old Restricted Discovery Filters and store the Restricted Discovery Filter included in the Update Info in the DISCOVERY_UPDATE_REQUEST message. Then the UE shall send a DISCOVERY_UPDATE_RESPONSE message to the ProSe Function with:\n-\t the ProSe Function transaction ID set to the value of the ProSe Function transaction ID received in the DISCOVERY_UPDATE_REQUEST message; and\n-\tDiscovery Entry ID set to the value of the Discovery Entry ID received in the DISCOVERY_UPDATE_REQUEST message.\nUpon receipt of the DISCOVERY_UPDATE_ RESPONSE message by the ProSe Function, if the ProSe Function transaction ID contained in the <response-update> element does not match the value sent by the ProSe Function in a DISCOVERY_UPDATE_REQUEST message, the ProSe Function shall discard the DISCOVERY_UPDATE_RESPONSE message. Upon receipt of the DISCOVERY_UPDATE_ RESPONSE message by the ProSe Function, if the ProSe Function transaction ID contained in the <response-update> element matches the value sent by the ProSe Function in a DISCOVERY_UPDATE_REQUEST message, the restricted discovery filters revocation procedure is complete.\nIf the DISCOVERY_UPDATE_REQUEST message cannot be accepted by the UE, the UE sends a DISCOVERY_UPDATE_RESPONSE message containing a <response-reject> element to the ProSe Function including an appropriate PC3 Control Protocol cause value.\nIf the UE identity contained in the DISCOVERY_UPDATE_REQUEST message is not the IMSI of the UE, the UE shall send a DISCOVERY_UPDATE_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #18 \"Invalid UE Identity\".\nIf the Discovery Entry ID contained in the DISCOVERY_UPDATE_REQUEST message is not found in the UE context, the UE shall send a DISCOVERY_UPDATE_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #10 \"Unknown or Invalid Discovery Entry ID\".\nThe following abnormal cases can be identified:\na)\tIndication from the transport layer of transmission failure of DISCOVERY_UPDATE_REQUEST message (e.g. after TCP retransmission timeout)\nThe ProSe Function shall close the existing secure connection to the UE.\nb)\tNo response from the UE after the DISCOVERY_UPDATE_REQUEST message has been successfully delivered (e.g., TCP ACK has been received for the DISCOVERY_UPDATE_REQUEST message)\nThe ProSe Function shall retransmit the DISCOVERY_UPDATE_REQUEST message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are ProSe Function implementation specific.\nThe following abnormal cases can be identified:\na)\tIndication from the lower layer of transmission failure of DISCOVERY_UPDATE_RESPONSE message.\nAfter receiving an indication from lower layer that the DISCOVERY_UPDATE_RESPONSE message has not been successfully acknowledged (e.g. TCP ACK is not received), the UE shall abort the procedure.\nThe ProSe Function in the HPLMN initiates the ProSe restricted code allocation procedure by sending the DISCOVERY_UPDATE_REQUEST to the UE with:\n-\ta new ProSe Function transaction ID not used in any other direct discovery procedures in PC3 interface;\n-\tthe UE identity set to the UE's IMSI;\n-\tthe Discovery Entry ID set to the Discovery Entry ID of the corresponding Discovery Entry that contains the ProSe Restricted Code to be replaced;\n-\tUpdate Info containing the ProSe Restricted Code set to the ProSe Restricted Code to be replaced and a Validity Timer T4007 set to the T4007 timer value assigned by the ProSe Function to the ProSe Restricted Code.\nFigure 6.2.6.3.1.1 illustrates the interaction of the UE and the ProSe Function in the ProSe restricted code allocation procedure.\nNOTE:\tThe ProSe function can include one or multiple transactions in one DISCOVERY_UPDATE_REQUEST message for different ProSe Restricted Codes, and receive corresponding <response-update> element or <response-reject> element in a DISCOVERY_UPDATE_RESPONSE message for each respective transaction. In the following description of the network initiated direct discovery update request procedure, only one transaction is included.\nFigure 6.2.6.3.1.1 presents the New ProSe Restricted Code allocation procedure, illustrating the process of assigning unique codes to devices within a ProSe network. The figure outlines the steps involved, including the generation of random codes, their submission to the network, and the subsequent verification process. Key components include the ProSe network infrastructure, the central management system, and the devices themselves. The figure emphasizes the importance of efficient code management for secure and reliable communication within the ProSe network.\nFigure 6.2.6.3.1.1: New ProSe Restricted Code allocation procedure\nUpon receiving a DISCOVERY_UPDATE_REQUEST message, the UE shall check if the UE identity contained in the DISCOVERY_UPDATE_REQUEST message is the IMSI of the UE. If the UE identity is the IMSI of the UE, the UE shall check if the Discovery Entry ID contained in the DISCOVERY_UPDATE_REQUEST message is valid. If the Discovery Entry ID is valid, the UE shall proceed with the following direct discovery update procedure.\nThe UE shall replace the ProSe Restricted Code corresponding to the Discovery Entry ID included in the DISCOVERY_UPDATE_REQUEST message. The UE shall stop the validity timer T4007 if running and start the validity timer T4007 with the received value. Then the UE shall send a DISCOVERY_UPDATE_RESPONSE message to the ProSe Function with:\n-\t the ProSe Function transaction ID set to the value of the ProSe Function transaction ID received in the DISCOVERY_UPDATE_REQUEST message; and\n-\tDiscovery Entry ID set to the value of the Discovery Entry ID received in the DISCOVERY_UPDATE_REQUEST message.\nUpon receipt of the DISCOVERY_UPDATE_ RESPONSE message by the ProSe Function, if the ProSe Function transaction ID contained in the <response-update> element does not match the value sent by the ProSe Function in a DISCOVERY_UPDATE_REQUEST message, the ProSe function shall discard the DISCOVERY_UPDATE_RESPONSE message. Upon receipt of the DISCOVERY_UPDATE_ RESPONSE message by the ProSe Function, if the Prose Function transaction ID contained in the <response-update> element matches the value sent by the ProSe Function in a DISCOVERY_UPDATE_REQUEST message, the ProSe Restricted Code allocation procedure is complete.\nIf the DISCOVERY_UPDATE_REQUEST message cannot be accepted by the UE, the UE sends a DISCOVERY_UPDATE_RESPONSE message containing a <response-reject> element to the ProSe Function including an appropriate PC3 Control Protocol cause value.\nIf the UE identity contained in the DISCOVERY_UPDATE_REQUEST message is not the IMSI of the UE, the UE shall send a DISCOVERY_UPDATE_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #18 \"Invalid UE identity\".\nIf the Discovery Entry ID contained in the DISCOVERY_UPDATE_REQUEST message is not found in the UE context, the UE shall send a DISCOVERY_UPDATE _RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #10 \"Unknown or Invalid Discovery Entry ID\".\nThe following abnormal cases can be identified:\na)\tIndication from the transport layer of transmission failure of DISCOVERY_UPDATE_REQUEST message (e.g. after TCP retransmission timeout)\nThe ProSe Function shall close the existing secure connection to the UE.\nb)\tNo response from the UE after the DISCOVERY_UPDATE_REQUEST message has been successfully delivered (e.g., TCP ACK has been received for the DISCOVERY_UPDATE_REQUEST message)\nThe ProSe Function shall retransmit the DISCOVERY_UPDATE_REQUEST message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are ProSe Function implementation specific.\nThe following abnormal cases can be identified:\na)\tIndication from the lower layer of transmission failure of DISCOVERY_UPDATE_RESPONSE message.\nAfter receiving an indication from lower layer that the DISCOVERY_UPDATE_RESPONSE message has not been successfully acknowledged (e.g. TCP ACK is not received), the UE shall abort the procedure.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.7\tDirect discovery update procedure for open discovery",
                            "text_content": "The direct discovery update procedure is used to update or revoke a previously allocated ProSe Application Code, or Discovery Filter(s) as specified in 3GPP TS 23.303 [2].\nWhen triggered to revoke a previously allocated ProSe Application Code for an announcing UE or revoke Discovery Filter(s) for a monitoring UE, the ProSe Function in the HPLMN sends a DISCOVERY_UPDATE_REQUEST message to the UE with:\n-\ta new ProSe Function transaction ID not used in any other direct discovery procedures in PC3 interface;\n-\tthe UE identity set to the UE's IMSI; and\n-\tthe Discovery Entry ID set to the Discovery Entry ID of the corresponding Discovery Entry that contains the ProSe Application Code or the Discovery Filter(s) to be revoked.\nWhen triggered to update a previously allocated ProSe Application Code for an announcing UE, the ProSe function in the HPLMN shall allocate a new ProSe Application Code for the ProSe Application ID with a new validity timer T4000, associate the discovery entry with the new ProSe Application Code and restart timer T4001.Then the ProSe Function sends a DISCOVERY_UPDATE_REQUEST message to the UE with:\n-\ta new ProSe Function transaction ID not used in any other direct discovery procedures in PC3 interface;\n-\tthe UE identity set to the UE's IMSI;\n-\tthe Discovery Entry ID set to the Discovery Entry ID of the corresponding Discovery Entry that contains the ProSe Application Code to be updated; and\n-\tthe Update Info containing the ProSe Application Code set to the new ProSe Application Code allocated by the ProSe Function and a Validity Timer T4000 set to the T4000 timer value assigned by the ProSe Function to the new ProSe Application Code.\nWhen triggered to update Discovery Filter(s) for a monitoring UE, the ProSe Function in the HPLMN updates the content of Discovery Filter(s), associate the discovery entry with the updated Discovery Filter(s) and restart timer T4003 for each filter. The update of Discovery Filter content includes setting new TTL timer(s) and if necessary, assigning new ProSe Application Code and ProSe Application Mask(s). Then the ProSe Function sends a DISCOVERY_UPDATE_REQUEST message to the UE with:\n-\ta new ProSe Function transaction ID not used in any other direct discovery procedures in PC3 interface;\n-\tthe UE identity set to the UE's IMSI;\n-\tthe Discovery Entry ID set to the Discovery Entry ID of the corresponding Discovery Entry that contains the Discovery Filter(s) to be updated; and\n-\tthe Update Info containing the Discovery Filter(s) set to the new Discovery Filter(s) allocated by the ProSe Function.\nNOTE 1:\t The ProSe Function can include one or multiple transactions in one DISCOVERY_UPDATE_REQUEST message for ProSe App Codes or Discovery Filter(s) contained in different discovery entries, and receive corresponding < discovery-update-response> element or <response-reject> element in a DISCOVERY_UPDATE_RESPONSE message for each respective transaction. In the following description of direct discovery update request procedure, only one transaction is included.\nFigure 6.2.7.2.1 illustrates the interaction of the UE and the ProSe Function in the direct discovery update procedure.\nFigure 6.2.7 .2 .1 illustrates the direct discovery update procedure for open discovery in a telecommunication network. The figure depicts the process of nodes in the network discovering each other and updating their contact lists. Key components include the discovery agent, which initiates the process, and the contact list, which stores the discovered nodes' information. The figure highlights the importance of this procedure in maintaining efficient communication and reducing network congestion.\nFigure 6.2.7.2.1: Direct discovery update procedure for open discovery\nNOTE 2:\tIn the figure 6.2.7.2.1, the timers are started only when the procedure is triggered to update a previously allocated ProSe Application Code for an announcing UE or update Discovery Filter(s) for a monitoring UE.\nUpon receiving a DISCOVERY_UPDATE_REQUEST message, the UE shall check if the UE identity contained in the DISCOVERY_UPDATE_REQUEST message is the IMSI of the UE. If the UE identity is the IMSI of the UE, the UE shall check if the Discovery Entry ID contained in the DISCOVERY_UPDATE_REQUEST message is known. If the Discovery Entry ID is known, the UE shall proceed with the following direct discovery update procedure.\nIf the Update Info is not included in the DISCOVERY_UPDATE_REQUEST message, the UE shall stop running timers corresponding to the discovery entry and delete the discovery entry corresponding to the Discovery Entry ID contained in the DISCOVERY_UPDATE_REQUEST message. The UE informs the lower layers to stop announcing or monitoring corresponding to the Discovery Entry ID contained in the DISCOVERY_UPDATE_REQUEST message.\nIf the Update Info is included in the DISCOVERY_UPDATE_REQUEST message, the UE shall replace the existing ProSe Application Code or the Discovery Filter(s) with new ProSe Application Code or the Discovery Filter(s) contained in the Update Info correspondingly. The announcing UE shall stop the timer T4000,  start the validity timer T4000 with the received value for the new ProSe Application Code and perform open ProSe direct discovery announcing with the new ProSe Application Code as described in subclause 6.2.2.4. The monitoring UE shall stop TTL timer T4002, start TTL timer T4002 with the received value for each new Discovery Filter(s) and perform open ProSe direct discovery monitoring with each new Discovery Filter(s) as described in subclause 6.2.3.4.\nThen the UE shall send a DISCOVERY_UPDATE_RESPONSE message containing a <response-update> element with:\n-\t the ProSe Function transaction ID set to the value of the ProSe Function transaction ID received in the DISCOVERY_UPDATE_REQUEST message; and\n-\tthe Discovery Entry ID set to the value of the Discovery Entry ID received in the DISCOVERY_UPDATE_REQUEST message.\nUpon receiving a DISCOVERY_UPDATE_RESPONSE message, if the ProSe Function transaction ID contained in the <response-update> element does not match the value sent by the ProSe Function in a DISCOVERY_UPDATE_REQUEST message, the ProSe Function shall discard the DISCOVERY_UPDATE_RESPONSE message. Otherwise, the ProSe Function shall perform the following procedure.\nWhen the UE is an announcing UE and  the radio resources that the UE intends to use are operated by a PLMN other than the HPLMN, the ProSe Function shall execute the procedures defined in 3GPP TS 29.345 [5] to inform the ProSe Function in VPLMN or local PLMN.\nWhen the UE is a monitoring UE and the ProSe Application ID monitored by the UE is PLMN-specific and that PLMN ID indicated by the ProSe Application ID is not the same as that of the PLMN to which the ProSe Function belongs, the ProSe Function executes the procedures defined in 3GPP TS 29.345 [5] to inform the ProSe Function in the PLMN indicated by the ProSe Application ID.\nFor each Discovery Entry ID received in the DISCOVERY_UPDATE_RESPONSE message, if the procedure is to revoke a previously allocated ProSe Application Code or Discovery Filter(s), the ProSe Function shall delete the discovery entry indicated by the Discovery Entry ID from the UE's context and release the associated resources.\nIf the DISCOVERY_UPDATE_REQUEST message cannot be accepted by the UE, the UE sends a DISCOVERY_UPDATE_RESPONSE message containing a <response-reject> element to the ProSe Function including an appropriate PC3 Control Protocol cause value.\nIf the UE identity contained in the DISCOVERY_UPDATE_REQUEST message is not the IMSI of the UE, the UE shall send a DISCOVERY_UPDATE_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #18 \"Invalid UE Identity\".\nIf the Discovery Entry ID contained in the DISCOVERY_UPDATE _REQUEST message is unknown, the UE shall send the DISCOVERY_UPDATE_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value # 10 \"Unknown or Invalid Discovery Entry ID\".\nThe following abnormal cases can be identified:\na)\tIndication from the transport layer of transmission failure of DISCOVERY_UPDATE_REQUEST message (e.g. after TCP retransmission timeout)\nThe ProSe Function shall close the existing secure connection to the UE.\nb)\tNo response from the UE after the DISCOVERY_UPDATE_REQUEST message has been successfully delivered (e.g., TCP ACK has been received for the DISCOVERY_UPDATE_REQUEST message)\nThe ProSe Function shall retransmit the DISCOVERY_UPDATE_REQUEST message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are ProSe Function implementation specific.\nThe following abnormal cases can be identified:\na)\tIndication from the lower layer of transmission failure of DISCOVERY_UPDATE_RESPONSE message.\nAfter receiving an indication from lower layer that the DISCOVERY_UPDATE_RESPONSE message has not been successfully acknowledged (e.g. TCP ACK is not received), the UE shall abort the procedure.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.8\tAnnouncing Alert procedure",
                            "text_content": "The purpose of the Announcing Alert procedure is for the ProSe Function in HPLMN to send to the announcing UE the ProSe Restricted Code generated in the announce request procedure for restricted ProSe direct discovery model A as specified in clause 6.2.2A.\nBefore initiating the Announcing Alert procedure, the ProSe Function shall determine whether the announcing UE and the monitoring UE are close enough to trigger the Announcing Alert procedure.\nThe announcing UE includes the ProSe Restricted Code in a PC5_DISCOVERY message and passes the PC5_DISCOVERY message to the lower layers for transmission over the PC5 interface in the registered PLMN or local PLMN as a result of a successful Announcing Alert procedure.\nIf the UE has initiated an announce request procedure for restricted ProSe direct discovery model A before as specified in clause 6.2.2A and the On Demand Announcing Enabled Indicator associated with the RPAUID in the announcing UE context is set to 1, the ProSe Function shall initiate an Announcing Alert procedure:\na)\twhen the ProSe Function receives a pair of Target PDUID -Target RPAUID from the ProSe Application Server as described in 3GPP TS 29.343[31], the Target RPAUID is the same as the RPAUID stored in the announcing UE context, and ProSe Function determines the monitoring UE is in the vicinity of the announcing UE; or\nb)\twhen the ProSe Function receives a pair of Target PDUID -Target RPAUID from other ProSe Functions as described in 3GPP TS 29.345[5], the Target RPAUID is the same as the RPAUID stored in the announcing UE context and the ProSe Function determines the monitoring UE is in the vicinity of the announcing UE.\nNOTE:\tHow the ProSe Function in the HPLMN determines whether the announcing UE and the monitoring UE are close enough to trigger the Announcing Alert procedure is left to the implementation of ProSe Function.\nThe ProSe Function initiates the Announce Alert procedure by sending an ANNOUNCING_ALERT_REQUEST message with:\n-\ta new ProSe Function transaction ID;\n-\tthe UE identity set to the UE's IMSI;\n-\tthe RPAUID set to the Target RPAUID received from ProSe Application Server as specified in 3GPP TS 29.343[31] or from other ProSe Functions as specified in 3GPP  TS 29.345[5];\n-\tthe ProSe Restricted Code set to the ProSe Restricted Code or the ProSe Restricted Code Prefix, and optionally one or more ProSe Restricted Code Suffix Ranges which contain the suffix(es) for the RPAUID retrieved from the announcing UE context; and\n-\tthe Discovery Entry ID set to the identifier associated with the corresponding discovery entry in the UE's context.\nFigure 6.2.8.2.1 illustrates the interaction of the ProSe Function and the UE in the Announce Alert procedure.\nFigure 6.2.8 .2 .1 presents a detailed procedure for announcing an alert in a telecommunication system. The figure illustrates a flowchart with various steps, starting with the initiation of the alert by a system component. The flowchart then outlines the communication process, involving different entities such as the alerting system, the alerting network, and the alerting network's management. The figure emphasizes the importance of clear and efficient communication to ensure that the alert is effectively disseminated throughout the network. The use of a flowchart format allows for a visual representation of the complex process, making it easier to understand and follow.\nFigure 6.2.8.2.1: Announcing Alert procedure\nUpon receipt of the ANNOUNCING_ALERT_REQUEST message, the UE shall check if the UE identity contained in the ANNOUNCING_ALERT_REQUEST message is the IMSI of the UE. If the UE identity is the IMSI of the UE, the UE shall check whether there is an existing discovery entry identified by the Discovery Entry ID included in the ANNOUNCING_ALERT_REQUEST message. If the discovery entry exists in the UE, the UE shall send an ANNOUNCE_ALERT_RESPONSE message to the ProSe Function with a ProSe Function transaction ID set to the value of the ProSe Function transaction ID received in the ANNOUNCING_ALERT_REQUEST message.\nThen, the UE may perform restricted ProSe direct discovery model A announcing as described below.\nThe UE requests the parameters from the lower layers for restricted Prose direct discovery model A announcing (see 3GPP TS 36.331 [12]). The UE shall perform restricted ProSe direct discovery model A announcing only if the lower layers indicate that ProSe direct discovery is supported by the network. If the UE in EMM-IDLE mode has to request resources for ProSe direct discovery announcing as specified in 3GPP TS 36.331 [12], the UE shall perform a service request procedure or tracking area update procedure as specified in 3GPP TS 24.301 [11]. The UE shall obtain the UTC time for the next discovery transmission opportunity for ProSe direct discovery from the lower layers.\nIf a valid UTC time is obtained, the UE shall generate the UTC-based counter corresponding to this UTC time as specified in subclause 12.2.2.18. If the resulting UTC-based counter is within Max Offset of the time shown by the clock used for ProSe by the UE, the UE shall use the UTC-based counter to compute the MIC field for the PC5_DISCOVERY message as described in 3GPP TS 33.303 [6].\nThe UE shall either use the ProSe Restricted Code received in the ANNOUNCING_ALERT_REQUEST message, or select one ProSe Restricted Code based on the ProSe Restricted Code Prefix and ProSe Restricted Code Suffix Range(s) received in the ANNOUNCING_ALERT_REQUEST message as announced ProSe Restricted Code, along with the MIC and the eight least significant bits of the UTC-based counter, in order to construct a PC5_DISCOVERY message, according to the format defined in subclause 11.2.5.\nNOTE:\tThe UE can use different codes formed based on different ProSe Restricted Code Suffixes to announce, without having to send a new DISCOVERY_REQUEST message to the ProSe Function, as long as the validity timer T4007 of the ProSe Restricted Code Prefix has not expired.\nThe UE then passes the PC5_DISCOVERY message to the lower layers for transmission if:\n-\tthe UE is currently authorised to perform restricted ProSe direct discovery model A announcing in the registered PLMN or the local PLMN operating the radio resources that the UE intends to use;\n-\tthe validity timer T4007 for the corresponding discovery entry allocated ProSe Restricted Code or ProSe Restricted Code Prefix has not expired; and\n-\ta request from upper layers to announce the RPAUID associated with both the ProSe Restricted Code or ProSe Restricted Code Prefix, and the authorised Application Identity, is still in place.\nThe UE shall ensure that it keeps on passing PC5_DISCOVERY messages to the lower layers for transmission until the validity timer T4007 of the ProSe Restricted Code or ProSe Restricted Code Prefix expires. How this is achieved is left up to UE implementation.\nDuring the announcing operation, if one of the above conditions is no longer met, the UE may instruct the lower layers to stop announcing. When the UE stops announcing, if the lower layers indicate that the UE is required to send a discovery indication to the eNodeB and the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\nUpon receipt of the ANNOUNCE_ALERT_RESPONSE message with a ProSe Function transaction ID set to the value of the ProSe Function Transaction ID included in the ANNOUNCING_ALERT_REQUEST message, the ProSe Function will set the associated On Demand Announcing Enabled Indicator to 0. Then the Announcing Alert procedure is successfully completed.\nIf the ANNOUNCING_ALERT_REQUEST message cannot be accepted by the UE, the UE sends a ANNOUNCING_ALERT_RESPONSE message containing a <response-reject> element to the ProSe Function including an appropriate PC3 Control Protocol cause value.\nIf the UE identity contained in the ANNOUNCING_ALERT_REQUEST message is not the IMSI of the UE, the UE shall send a ANNOUNCING_ALERT_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #18 \"Invalid UE Identity\".\nIf the Discovery Entry ID contained in the ANNOUNCING_ALERT_REQUEST message is unknown, the UE shall send the ANNOUNCING_ALERT_RESPONSE message containing a <response-reject> element with PC3 Control Protocol cause value #10\"Unknown or Invalid Discovery Entry ID\".\nThe following abnormal cases can be identified:\na)\tIndication from the transport layer of transmission failure of ANNOUNCING_ALERT_REQUEST message (e.g. after TCP retransmission timeout)\nThe ProSe Function shall close the existing secure connection to the UE.\nb)\tNo response from the UE after the ANNOUNCING_ALERT_REQUEST message has been successfully delivered (e.g. TCP ACK has been received for the ANNOUNCING_ALERT_REQUEST message)\nThe ProSe Function shall retransmit the ANNOUNCING_ALERT_REQUEST message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are ProSe Function implementation specific.\nThe following abnormal cases can be identified:\na)\tIndication from the lower layer of transmission failure of ANNOUNCE_ALERT_RESPONSE message.\nAfter receiving an indication from lower layer that the ANNOUNCE_ALERT_RESPONSE message has not been successfully acknowledged (e.g. TCP ACK is not received), the UE shall abort the procedure.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "7\tEPC-level ProSe discovery",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "7.1\tOverview",
                    "description": "",
                    "summary": "",
                    "text_content": "This clause describes the PC3 Control Protocol procedures between the UE and the ProSe Function for EPC-level ProSe discovery.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.1.1\tTransport protocol for PC3 Control Protocol messages for EPC-level ProSe discovery",
                            "text_content": "The UE and the ProSe Function shall use HTTP 1.1 as specified in IETF RFC 9112 [18] and IETF RFC 9110 [19] as the transport protocol for EPC-level ProSe discovery messages over the PC3 interface. The ProSe messages described here shall be included in the body of either an HTTP request message or an HTTP response message.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.2\tHandling of UE-initiated procedures",
                            "text_content": "The following rules apply for UE-initiated procedures:\n-\tThe UE initiates ProSe transactions with an HTTP request message containing the PC3 request(s); and\n-\tThe ProSe Function responds to the requests with an HTTP response message containing the PC3 response(s) for the PC3 request(s).\nOptionally, the operator can configure the UE with configuration parameters for establishment of the PDN connection for reaching the HPLMN ProSe Function. If the UE is configured with the configuration parameter for establishment of the PDN connection for reaching the HPLMN ProSe Function (see 3GPP TS 24.333 [9]):\na)\tif a PDN connection for reaching the HPLMN ProSe Function is not established yet, the UE shall establish the PDN connection for reaching the HPLMN ProSe Function according to the UE configuration and shall send the HTTP request message via the PDN connection for reaching the HPLMN ProSe Function; and\nb)\tif a PDN connection for reaching the HPLMN ProSe Function is already established (e.g. either due to other ProSe feature or due to other application), the UE shall send the HTTP request message via the PDN connection for reaching the HPLMN ProSe Function;\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.1.3\tHandling of network-initiated procedures",
                            "text_content": "The network-initiated messages for EPC-level ProSe discovery over the PC3 interface shall be contained in an HTTP response message. Either HTTP long polling, or OMA Push, can be used to trigger the HTTP request corresponding to this HTTP response message. The UE and the ProSe Function shall support OMA Push for network initiated procedures. Optionally the UE and ProSe Function should support long polling as well for network initiated procedures.\nDuring the UE registration procedure, the UE and the ProSe Function decide which method to use. If the UE supports long polling method, the UE indicates that to the ProSe Function in the UE-registration request with a \"Method for server-initiated transaction\" IE. If the ProSe Function supports long polling method as well and if it prefers to use the long polling method for network initiated procedures, then it checks if UE can also support long polling method via the \"Method for server-initiated transaction\" IE included in the registration request message and indicates the use of long-polling in the registration response message. If the ProSe Function supports OMA Push only or if it chooses to use OMA Push then it ignores the \"Method for server-initiated transaction\"IE in UE registration request.\nThe HTTP long polling method involves the following steps:\na)\tthe UE sends an empty HTTP request message as a polling request when it expects network initiated message(s) over the PC3 interface;\nb)\tthe ProSe Function defers its response to the UE’s request until;\ni)\tone ore more network-initiated PC3 message(s) for the UE are available. The ProSe Function will enclose the message(s) in an HTTP response message and send it to the UE; or\nii)\ta particular timeout for HTTP polling has occurred. The ProSe Function then sends an empty HTTP response message as the polling response to the UE.\nc)\tAfter receiving the response from the ProSe Function, the UE may keep polling after some waiting period if:\ni)\tthe UE receives an empty polling response; or\nii)\tthe UE receives network-initiated message(s) from the ProSe Function but still expects additional network-initiated message(s).\nNOTE:\tThe implementation of the HTTP polling process can be coordinated with the SUPL (Secure User Plane Location) procedures to synchronize the SUPL location report procedures and the HTTP polling procedure so as to reduce unnecessary wait time of polling.\nIf the UE is trigged to send a PC3 message to the ProSe Function while it has a pending HTTP polling request, the UE shall open another HTTP connection to the ProSe Function to send this new request. Alternately the UE may always use a separate dedicated HTTP connection for polling.\nThe OMA Push method involves the following steps:\na)\tif one or more network-initiated PC3 message(s) for the UE are available, the ProSe Function sends a push message containing a particular URL to the UE via the OMA-Push Architecture as defined in  [22]. The URL is linked to the PC3 message(s) to be sent to the UE. The ProSe Function (performing OMA Push Proxy Gateway functionality) generates a Push Message as specified in OMA-WAP-TS-PushOTA-V2_1-20110405-A [21] with the PDU set according to  [20]. The URL information shall be included in the PDU payload;\nb)\tAfter receiving the push message, the UE retrieves the URL from the payload of the message and sends an HTTP GET request to the ProSe Function with this URL; and\nc)\tthe ProSe Function sends an HTTP response message containing the PC3 message(s) to the UE.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.2\tProcedures",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.2.1\tTypes of EPC-level ProSe discovery procedures",
                            "text_content": "The following PC3 Control Protocol procedures are defined:\n-\tUE registration;\n-\tapplication registration;\n-\tproximity request;\n-\tproximity request validation;\n-\tproximity alert;\n-\tUE deregistration; and\n-\tproximity request cancellation.\nEPC support for WLAN direct discovery and communication may be requested as part of the EPC-level ProSe discovery procedure.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.2\tUE registration procedure",
                            "text_content": "The purpose of the UE registration procedure is for the UE to register with the ProSe Function to obtain EPC-level ProSe discovery services as defined in 3GPP TS 23.303 [2]. The UE registers with the ProSe Function residing in the HPLMN.\nBased on pre-configuration, if the UE is authorised to perform EPC-level ProSe discovery in the registered PLMN, it shall initiate the UE registration procedure when the UE is triggered by upper layers to obtain EPC-level ProSe discovery services and the UE has no corresponding EPC ProSe User ID.\nThe UE initiates the UE registration procedure by sending a UE_REGISTRATION_REQUEST message with the UE identity set to the UE's IMSI. If the UE intends to use EPC support for WLAN direct discovery and communication and if the UE uses a permanent WLAN link layer identifier, then the UE also includes the WLAN link layer identifier in the UE_REGISTRATION_REQUEST message. If the UE supports long polling method for network initiated procedures then the UE also includes a \"Method for server-initiated transaction\" parameter indicating to the ProSe Function that it support long polling method.\nFigure 7.2.2.2.1 illustrates the interaction of the UE and the ProSe Function in the UE registration procedure.\nFigure 7.2.2.1: UE Registration Procedure illustrates the step-by-step process of a user equipment (UE) registering with a network operator. The figure outlines the interaction between the UE, the home subscriber server (HSS), and the authentication, authorization, and accounting (AAA) server. The process begins with the UE initiating a registration request, which is then processed by the HSS. The AAA server handles authentication and authorization, while the HSS manages the account information. The figure emphasizes the importance of secure and efficient registration procedures in maintaining network integrity and user privacy.\nFigure 7.2.2.2.1: UE registration procedure\nUpon receiving a UE_REGISTRATION_REQUEST message, the ProSe Function interacts with the HSS as described in 3GPP TS 29.344 [3] in order to authenticate the user and check whether the user is authorised to use EPC-level ProSe discovery services corresponding to the IMSI contained in the UE_REGISTRATION_REQUEST message in the registered PLMN.\nIf the ProSe Function contains all the settings related to authentication and authorisation for the user corresponding to the IMSI contained in the UE_REGISTRATION_REQUEST message then the ProSe function need not interact with the HSS and the ProSe Function checks locally if the user is authorised to use EPC-level ProSe discovery services.\nIf the UE is authorised to use EPC-level ProSe discovery services, the ProSe Function generates an EPC ProSe User ID corresponding to the IMSI contained in the UE_REGISTRATION_REQUEST message and shall send a UE_REGISTRATION_RESPONSE message containing a <response-register> element to the UE with the EPC ProSe User ID. The EPC ProSe User ID is a number generated by the ProSe Function that is unique within the ProSe Function on a per UE basis. The <response-register> element shall also contain a server-initiated method configuration parameter indicating to the UE which method to use to handle server-initiated procedures.\nUpon receipt of the UE_REGISTRATION_RESPONSE message containing a <response-register> element the UE stores the EPC ProSe User ID and may start the application registration procedure. The UE shall use the method configured in UE_REGISTRATION_RESPONSE message to handle server-initiated procedures.\nIf the UE_REGISTRATION_REQUEST message is not accepted by the ProSe Function, the ProSe Function shall send a UE_REGISTRATION _RESPONSE message containing a <response-reject> element to the UE including an appropriate PC3 EPC Control Protocol cause value.\nIf the UE is not authorised for EPC-level ProSe discovery, the ProSe Function shall send the UE_REGISTRATION_RESPONSE message containing a <response-reject> element with PC3 EPC Control Protocol cause value #2 \"UE authorisation failure\".\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.3\tApplication registration procedure",
                            "text_content": "The purpose of the application registration procedure is for the UE to activate EPC-level Prose discovery for a specific application as defined in 3GPP TS 23.303 [2]. The UE registers the specific application with the ProSe Function residing in the HPLMN.\nWhen the user uses applications on the UE, an Application ID is used to identify the corresponding application server platform. When the user registers an application with the application server, the user is designated an Application Layer User ID. If the application requires EPC-level ProSe discovery, the UE is configured with the data structure of the Application IDs and the Application Layer User ID. This step is performed using mechanisms outside of the scope of 3GPP. The user may have multiple Application Layer User IDs for an application, but may choose to register only one of these to activate EPC-level ProSe discovery. The UE shall initiate the application registration procedure after successfully completing the UE registration procedure.\nIf the UE is authorised to perform EPC-level ProSe discovery in the registered PLMN, it shall initiate the application registration procedure when the UE is triggered by upper layers to activate EPC-level Prose discovery for a specific application and the application is not registered.\nThe UE initiates the application registration procedure by sending an APPLICATION_REGISTRATION_REQUEST message by including a new transaction ID, the UE's EPC ProSe User ID, the Application ID for the application that is to be registered and the user's Application Layer User ID for the application that is to be registered.\nNOTE:\tA UE can include one or multiple transactions in one APPLICATION_REGISTRATION_REQUEST message for different Application IDs, and receive corresponding <response-register> element or <response-reject> element in the APPLICATION_REGISTRATION_RESPONSE message for each respective transaction. In the following description of the application registration procedure, only one transaction is included.\nFigure 7.2.3.2.1 illustrates the interaction of the UE and the ProSe Function in the application registration procedure.\nFigure 7.2.3.2.1 illustrates the application registration procedure, detailing the steps involved in registering an application with a telecommunication service provider. The figure outlines the process, which includes submitting the application details, undergoing security and compliance checks, and receiving approval from the provider. Key components include the application developer, the service provider's registration portal, and the approval process. The figure emphasizes the importance of a secure and efficient application registration process for service providers and developers.\nFigure 7.2.3.2.1: Application registration procedure\nUpon receiving an APPLICATION_REGISTRATION_REQUEST message, the ProSe Function retrieves the user profile based on the UE's EPC ProSe User ID included in the APPLICATION_REGISTRATION_REQUEST message. The ProSe Function then checks if the list of authorised applications in the user's profile includes the requested application based on the Application ID in the APPLICATION_REGISTRATION_REQUEST message.\nIf the check is successful then the ProSe Function sends a request to the application server so that the user of this application identified by Application Layer User ID in the APPLICATION_REGISTRATION_REQUEST message can use EPC-level ProSe discovery for that application.\nIf the user is authorised to use EPC-level ProSe discovery for the specified application, the ProSe Function generates one or more allowed range classes corresponding to the Application ID contained in the APPLICATION_REGISTRATION_REQUEST message. The ProSe Function shall send an APPLICATION_REGISTRATION_RESPONSE message containing a <response-register> element to the UE with transaction ID set to the value of the transaction ID received in the APPLICATION_REGISTRATION_REQUEST message from the UE and the set of allowed range classes. The set of allowed range classes for each Application ID is stored in the ProSe Function.\nUpon receipt of the UE_REGISTRATION_RESPONSE message, if the transaction ID contained in the <response-register> element matches the value sent by the UE in an APPLICATION_REGISTRATION_REQUEST message the UE stores the set of allowed range classes for this Application ID and may start the proximity request procedure.\nIf the APPLICATION_REGISTRATION_REQUEST message is not accepted by the ProSe Function, the ProSe Function shall send an APPLICATION_REGISTRATION_RESPONSE message containing a <response-reject> element to the UE including an appropriate PC3 EPC Control Protocol cause value.\nIf the application corresponding to the Application ID contained in the APPLICATION_REGISTRATION_REQUEST message is not authorised for EPC-level ProSe Discovery in the registered PLMN, the ProSe Function shall send the APPLICATION_REGISTRATION_RESPONSE message containing a <response-reject> element with PC3 EPC Control Protocol cause value #1 \"Invalid Application\".\nIf the UE is not authorised for EPC-level ProSe Discovery, the ProSe Function shall send the APPLICATION_REGISTRATION_RESPONSE message containing a <response-reject> element with PC3 EPC Control Protocol cause value #2 \"UE authorisation failure\".\nIf the Application Layer User ID contained in the APPLICATION_REGISTRATION_REQUEST message is unknown to the Application Server, the ProSe Function shall send the APPLICATION_REGISTRATION_RESPONSE message containing a <response-reject> element with PC3 EPC Control Protocol cause value #10 \"Invalid Application Layer User ID\".\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.4\tProximity request procedure",
                            "text_content": "The purpose of the proximity request procedure is to allow a UE (UE A) to request to be alerted when it enters in proximity with a targeted UE (UE B) as defined in 3GPP TS 23.303 [2]. UE A performs the proximity request procedure with the ProSe Function residing in the HPLMN.\nBefore initiating the proximity request procedure, UE A needs to register the user's Application Layer User ID A with ProSe Function A as described in subclause 7.2.3. UE A shall initiate the proximity request procedure when triggered by upper layers to activate EPC-level Prose discovery for a specific application and for a specific targeted user identified via its Application Layer User ID B.\nUE A initiates the proximity request procedure by sending a PROXIMITY_REQUEST message to ProSe Function A by including a new transaction ID, UE A's EPC ProSe User ID, the Application ID for the application for which the request is made, UE A's Application Layer User ID (Application Layer User ID A), the Application Layer User ID of UE B (Application Layer User ID B), a requested range class value selected from the set of allowed range classes for this application, UE A's Current Location with the best known accuracy and a Time Window indicating the time interval during which the request is valid.\nNOTE:\tA UE can include one or multiple transactions in one PROXIMITY_REQUEST message for different Application IDs, and receives corresponding <response-accept> element or <response-reject> element in the PROXIMITY_REQUEST_RESPONSE message for each respective transaction. In the following description of the Proximity Request procedure, only one transaction is included.\nIf UE A, subsequent to successful proximity detection with UE B, wishes to engage in WLAN direct discovery and communication, UE A also includes a WLAN Indication in the PROXIMITY_REQUEST message.\nFigure 7.2.4.2.1 illustrates the interaction of the UE and the ProSe Function in the proximity request procedure.\nFigure 7.2.4.2.1 illustrates the proximity request procedure, which is a crucial step in establishing communication between devices in a wireless network. The figure depicts the process of a device initiating a proximity request to another device, which then responds with a confirmation or denial. This procedure is essential for efficient communication and resource management in a network, as it allows devices to determine their relative positions and coordinate their activities accordingly. The figure also highlights the role of the network infrastructure, including access points and base stations, in facilitating these requests and maintaining network connectivity.\nFigure 7.2.4.2.1: Proximity request procedure\nUpon receiving a PROXIMITY_REQUEST message from UE A, ProSe Function A retrieves the user profile based on the UE's EPC ProSe User ID included in the PROXIMITY_REQUEST message. ProSe Function A then checks that UE A has previously registered the application identified with the Application ID in the PROXIMITY_REQUEST message and that the requested range class value belongs to the set of allowed range classes for this application.\nIf the check is successful then ProSe Function A interacts with the Application Server to obtain the identifier of ProSe Function B that owns the user profile of the targeted user, as well as its EPC ProSe User ID (EPC ProSe User ID B). ProSe Function A then propagates the proximity request to ProSe Function B on the targeted UE side (the B-side). The Current Location of UE A included in the PROXIMITY_REQUEST message may be used by ProSe Function B to determine whether the proximity request is accepted or not.\nNOTE:\tThe mechanism used by ProSe Function B to determine acceptance or non-acceptance of PROXIMITY_REQUEST messages is outside the scope of this specification.\nIf the proximity request is accepted by the B-side, ProSe Function A stores Application Layer User ID A, Application Layer User ID B, EPC ProSe User ID B, requested range class and Time Window in the UE A's context identified with EPC ProSe User ID A. The WLAN Indication is also stored, if it was included in the PROXIMITY_REQUEST message. Then ProSe Function A shall initiate location reporting for UE A and send a PROXIMITY_REQUEST_RESPONSE message containing a <response-accept> element to UE A with transaction ID set to the value of the transaction ID received in the PROXIMITY_REQUEST message from UE A.\nUpon receipt of the PROXIMITY_REQUEST_RESPONSE message, if the transaction ID contained in the <response-accept> element matches the value sent by the UE in a PROXIMITY_REQUEST message, the proximity request procedure is successfully completed.\nIf the PROXIMITY_REQUEST message is not accepted by the ProSe Function, the ProSe Function shall send a PROXIMITY_REQUEST_RESPONSE message containing a <response-reject> element to the UE including an appropriate PC3 EPC Control Protocol cause value.\nIf the application corresponding to the Application ID contained in the PROXIMITY_REQUEST message is not authorised for EPC-level ProSe discovery, the ProSe Function shall send the PROXIMITY_REQUEST_RESPONSE message containing a <response-reject> element with PC3 EPC Control Protocol cause value #1 \"Invalid Application\".\nIf the application corresponding to the Application ID contained in the PROXIMITY_REQUEST message has not been registered for EPC-level ProSe discovery, the ProSe Function shall send the PROXIMITY_REQUEST_RESPONSE message containing a <response-reject> element with PC3 EPC Control Protocol cause value #4 \"Application not registered\".\nIf the requested Range Class value is not allowed for this application, the ProSe Function shall send the PROXIMITY_REQUEST_RESPONSE message containing a <response-reject> element with PC3 EPC Control Protocol cause value #5 \"Range Class not allowed for this application\".\nIf based on the Current Location the B-side determines that UE A and targeted UE B are unlikely to enter proximity within the requested Time Window, the ProSe Function shall send the PROXIMITY_REQUEST_RESPONSE message containing a <response-reject> element with PC3 EPC Control Protocol cause value #6 \"Proximity detection unlikely within requested time window\".\nIf the ProSe Function determines that the targeted UE has not registered the application identified with Application ID, the ProSe Function shall send the PROXIMITY_REQUEST_RESPONSE message containing a <response-reject> element with PC3 EPC Control Protocol cause value #7 \"Targeted user not registered for this application\".\nIf the B-side rejects to validate the proximity request, the ProSe Function shall send the PROXIMITY_REQUEST_RESPONSE message containing a <response-reject> element with PC3 EPC Control Protocol cause value #8 \"Proximity validation rejected by B side\".\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.5\tProximity alert procedure",
                            "text_content": "The purpose of the proximity alert procedure is to inform the UE (UE A) that it has been determined to be in proximity with the targeted UE (UE B) as defined in 3GPP TS 23.303 [2]. If UE A has indicated in the proximity request procedure that it wishes to engage in WLAN direct discovery and communication with UE B, the proximity alert procedure is also used to provide Assistance Information that expedites the WLAN direct discovery and communication to both UE A and UE B. The proximity alert procedure is initiated by the ProSe Function residing in the HPLMN.\nWhen ProSe Function A on the A-side determines that UE A and UE B are in proximity, it cancels the location reporting for UE A with the SUPL Location Platform and sends a PROXIMITY_ALERT message to UE A including the Application ID, Application Layer User ID A and Application Layer User ID B.\nUE A may have registered multiple proximity requests for applications with different Application IDs. In this case the ProSe Function may combine the multiple alerts for each of the different Application IDs and send a combined PROXIMITY_ALERT message to the UE.\nIf UE A's context contains a WLAN Indication, the ProSe Function generates Assistance Information for WLAN direct discovery and communication according to the underlying WLAN technology, includes the Assistance Information in the PROXIMITY ALERT message and forwards the alert towards the B-side.\nIf the context of UE A does not contain WLAN Indication then ProSe Function A sends a cancellation request towards ProSe Function B.\nAfter transmitting the PROXIMITY_ALERT message to UE A and alerting (or sending a cancellation request to) the B-side, the ProSe Function deletes the information related to this specific Proximity Request in UE A's context.\nNOTE:\tIf UE A has signalled a permanent WLAN Link Layer ID during UE Registration procedure as described in subclause 7.2.2, the WLAN Link Layer ID for UE A is retrieved from UE A's context; otherwise a random WLAN Link Layer ID is generated for UE A by the ProSe Function. Similarly, if during the Proximity Request procedure the ProSe Function has received a permanent WLAN Link Layer ID for UE B, the WLAN Link Layer ID for UE B is retrieved from UE A's context; otherwise a random WLAN Link Layer ID is generated for UE B by the ProSe Function.\nWhen ProSe Function B is alerted that UE A and UE B are in proximity, it cancels the location reporting for UE B and shall send a PROXIMITY_ALERT message to UE B including the Application ID, Application Layer User ID A and Application Layer User ID B.\nFigure 7.2.5.2.1 illustrates the interaction of the UE and the ProSe Function in the proximity alert procedure.\nFigure 7.2.5.2.1 illustrates the proximity alert procedure in a wireless communication system, detailing the steps taken when a device comes within a certain range of another device. The figure shows the initial alert, followed by a series of escalating warnings, and finally, an action taken by the device upon reaching the maximum alert level. Key components include the alert threshold, the alert levels, and the action taken upon reaching the maximum alert level. The figure highlights the importance of timely alerts to prevent potential interference or security breaches.\nFigure 7.2.5.2.1: Proximity alert procedure\nUpon receipt of the PROXIMITY_ALERT message the UE shall inform the application identified via the Application ID in the PROXIMITY_ALERT message including Application Layer User ID A and Application Layer User ID B. If the Assistance Information for WLAN direct discovery and communication is included in the PROXIMITY_ALERT message, the UE uses this information to engage in WLAN direct discovery and communication with the peer UE.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.6\tUE deregistration procedure",
                            "text_content": "The UE deregistration procedure is used to deregister the UE for EPC-level ProSe discovery services. It can be initiated at any time by the UE or by the ProSe Function residing in the HPLMN.\nWhen the UE decides to deregister for EPC-level ProSe discovery services, it shall send the UE_DEREGISTRATION_REQUEST message to the ProSe Function residing in the HPLMN. The message includes the EPC ProSe User ID.\nFigure 7.2.6.2.1.1 illustrates the interaction of the UE and the ProSe Function in the UE-initiated UE deregistration procedure.\nFigure 7.2.6.2.1.1: UE-initiated UE deregistration procedure illustrates the process of a user equipment (UE) initiating the deregistration procedure with the network. The figure shows the interaction between the UE, the home subscriber server (HSS), and the authentication, authorization, and accounting (AAA) server. The deregistration process involves the UE sending a deregistration request to the HSS, which then communicates with the AAA server to finalize the process. This figure is crucial in understanding the end-to-end process of a UE disconnecting from the network, ensuring a smooth and secure handover to another UE or network.\nFigure 7.2.6.2.1.1: UE-initiated UE deregistration procedure\nUpon receiving the UE_DEREGISTRATION_REQUEST message, the ProSe Function retrieves the user profile based on the UE's EPC ProSe User ID included in the UE_DEREGISTRATION_REQUEST message, cancels any ongoing proximity alert procedures for this UE, clears the UE context and shall send a UE_DEREGISTRATION_RESPONSE message to the UE.\nUpon receipt of the UE_DEREGISTRATION_RESPONSE message by the UE, the UE deregistration procedure is complete.\nWhen the ProSe Function residing in the HPLMN decides to deregister the UE for EPC-level ProSe discovery services, it shall send the UE_DEREGISTRATION_REQUEST to the UE.\nFigure 7.2.6.3.1.1 illustrates the interaction of the UE and the ProSe Function in the network-initiated UE deregistration procedure.\nFigure 7.2.6.3.1.1 illustrates the network-initiated UE deregistration procedure, which involves the mobile network operator (MNO) initiating the deregistration process for a user equipment (UE) when it is no longer in use or has been disconnected. The figure shows the various steps and components involved, including the MNO, the home location register (HLR), the user plane function (UPF), and the authentication, authorization and accounting (AAA) server. The process ensures a smooth and secure transition for the UE, maintaining network integrity and user privacy.\nFigure 7.2.6.3.1.1: Network-initiated UE deregistration procedure\nUpon receiving a UE_DEREGISTRATION_REQUEST message, the UE deletes all context information related to EPC-level ProSe discovery and shall send a UE_DEREGISTRATION_RESPONSE message to the network.\nUpon receipt of the UE_DEREGISTRATION_RESPONSE message by the ProSe Function the UE deregistration procedure is complete.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.7\tProximity request cancellation procedure",
                            "text_content": "The proximity request cancellation procedure is used by the UE or ProSe Function to cancel an ongoing proximity request that was sent earlier as defined in 3GPP TS 23.303 [2]. The UE initiates the proximity request cancellation procedure due to occurrence of certain event (e.g.termination of the corresponding application). The ProSe Function initiates the proximity request cancellation procedure (e.g. due to excess of time window).\nThe UE initiates the proximity request cancellation procedure by sending a CANCEL_PROXIMITY_REQUEST message to the ProSe Function including a new transaction ID, the UE's EPC ProSe User ID, the Application ID for the application for which the cancellation is being made and the targeted user's Application Layer User ID B.\nNOTE:\tA UE can include one or multiple transactions in one CANCEL_PROXIMITY_REQUEST message for different Application IDs, and receive corresponding CANCEL_PROXIMITY_RESPONSE message for each respective transaction. In the following description of the proximity request cancellation procedure, only one transaction is included.\nFigure 7.2.7.2.1.1 illustrates the interaction of the UE and the ProSe Function in the UE initiated proximity request cancellation procedure.\nFigure 7.2.7.2.1: UE Initiated Proximity Request Cancellation Procedure illustrates the process by which a user equipment (UE) requests the cancellation of a proximity request initiated by the network. The figure outlines the steps involved, including the UE sending a CANCEL_PROXIMITY_REQUEST message to the network, the network acknowledging the cancellation, and the UE then reconfiguring its proximity request parameters. This procedure is crucial for efficient resource management and maintaining network performance.\nFigure 7.2.7.2.1.1: UE initiated proximity request cancellation procedure\nUpon receiving a CANCEL_PROXIMITY_REQUEST message from UE A, ProSe Function A retrieves the user profile of UE A based on UE A's EPC ProSe User ID included in the CANCEL_PROXIMITY_REQUEST message. ProSe Function A then uses the Application ID and Application Layer User ID B to identify the ProSe Function identifier of ProSe Function B which owns the context of the targeted user and forwards the cancellation request towards ProSe Function B as defined in 3GPP TS 29.345 [5].\nThe ProSe Function A shall send a CANCEL_PROXIMITY_RESPONSE message to UE A with transaction ID set to the value of the transaction ID received in the CANCEL_PROXIMITY_REQUEST message from UE A. If UE A has no other ongoing proximity requests then ProSe Function A cancels the location reporting for UE A.\nUpon receipt of the CANCEL_PROXIMITY_RESPONSE message with transaction ID set to the value of the transaction ID received in the CANCEL_PROXIMITY_REQUEST message, the UE A shall abort the proximity request procedure and the UE initiated proximity request cancellation  procedure is complete.\nThe ProSe Function initiates the proximity request cancellation procedure by retrieving the user profile of UE A based on UE A's EPC ProSe User ID included in the PROXIMITY_REQUEST message sent by UE A earlier.\nThe ProSe Function A shall send a CANCEL_PROXIMITY_REQUEST message to UE A with transaction ID set to the value of the transaction ID received in the PROXIMITY_REQUEST message from UE A, the UE A's EPC ProSe User ID, the Application ID for the application for which the cancellation is being made and the targeted user's Application Layer User ID B. If UE A has no other ongoing proximity requests then ProSe Function A cancels the location reporting for UE A.\nNOTE:\tA ProSe Function can include one or multiple transactions in one CANCEL_PROXIMITY_REQUEST message for each respective transaction. In the following description of the proximity request cancellation procedure, only one transaction is included.\nFigure 7.2.7.3.1.1 illustrates the ProSe Function initiated proximity request cancellation procedure.\nFigure 7.2.7.3.1.1 illustrates the ProSe Function initiated proximity request cancellation procedure, which involves the ProSe Gateway, ProSe Service Manager, and ProSe Service Proxy. The figure demonstrates the process of a device requesting to cancel a proximity request, with the ProSe Service Proxy handling the request and the ProSe Service Manager monitoring the process. The ProSe Gateway is responsible for establishing the communication between the devices and the ProSe Service Manager. The figure highlights the role of each component in the cancellation procedure, emphasizing the importance of coordination and communication between the devices and the service manager to ensure efficient and effective cancellation of proximity requests.\nFigure 7.2.7.3.1.1: ProSe Function initiated proximity request cancellation procedure\nUpon receiving a CANCEL_PROXIMITY_REQUEST message from ProSe Function A, the UE A shall abort the proximity request procedure and send a CANCEL_PROXIMITY_RESPONSE message to ProSe Function A with transaction ID set to the value of the transaction ID received in the CANCEL_PROXIMITY_REQUEST message from ProSe Function A.\nUpon receipt of the CANCEL_PROXIMITY_RESPONSE message by ProSe Function A, the ProSe Function initiated proximity request cancellation procedure is complete.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.8\tProximity request Validation procedure",
                            "text_content": "If the targeted UE's profile indicates that the proximity requests for the UE need to be explicitly validated then the network uses the proximity request validation procedure to request the targeted UE (UE B) to confirm permission for the proximity requests (e.g. user B may have temporarily disabled the ProSe functionality on UE B). It is initiated by the ProSe Function residing in the HPLMN as part of the overall proximity request procedure defined in 3GPP TS 23.303 [2].\nUpon reception of a proximity request from UE A, the ProSe Function on the targeted UE side (B-side) retrieves the stored profile of UE B. If UE B's profile indicates that the proximity requests for UE B need to be explicitly validated, ProSe Function B shall send the PROXIMITY_REQUEST_VALIDATION message to UE B including the Application ID of the application for which the proximity request is being validated.\nFigure 7.2.8.2.1 illustrates the interaction of the targeted UE and the ProSe Function in the proximity request validation procedure.\nFigure 7.2.8.2.1 illustrates the step-by-step process of proximity request validation in a telecommunication system. The figure outlines the interaction between the mobile device and the network infrastructure, highlighting the role of the authentication and authorization server (AA-server) in validating the proximity request. The process begins with the mobile device initiating a proximity request to the network, which is then forwarded to the AA-server for authentication. The AA-server checks the request against predefined rules and grants or denies the request based on the outcome. The figure emphasizes the importance of secure and efficient proximity-based communication in modern telecommunication systems.\nFigure 7.2.8.2.1: Proximity request validation procedure\nUpon receiving a PROXIMITY_REQUEST_VALIDATION message, UE B checks whether the application corresponding to the Application ID included in the message is ready for accepting a proximity request from other users.\nIf the application corresponding to the Application ID contained in the PROXIMITY_REQUEST_VALIDATION message is ready for accepting proximity requests from other users, the targeted UE shall send the PROXIMITY_REQUEST_VALIDATION_RESPONSE message to the ProSe Function.\nIf the application corresponding to the Application ID contained in the PROXIMITY_REQUEST_VALIDATION message is not ready for accepting proximity requests from other users, the targeted UE shall send the PROXIMITY_REQUEST_VALIDATION_RESPONSE message with PC3 EPC Control Protocol cause value #9 \"Application disabled temporarily\".\nUpon receipt of the PROXIMITY_REQUEST_VALIDATION_RESPONSE message containing a <response-accept> element, ProSe Function B initiates location reporting for UE B and acknowledges the proximity request towards ProSe Function A.\nUpon receipt of the PROXIMITY_REQUEST_VALIDATION_RESPONSE message containing a <response-reject> element, ProSe Function B forwards an indication towards ProSe Function A that the proximity request is rejected.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.2.9\tAbnormal cases",
                            "text_content": "In case of the messages listed below:\n-\tUE_REGISTRATION_REQUEST;\n-\tAPPLICATION_REGISTRATION_REQUEST;\n-\tPROXIMITY_REQUEST;\n-\tUE_DEREGISTRATION_REQUEST;\n-\tCANCEL_PROXIMITY_REQUEST; and\n-\tPROXIMITY_REQUEST_VALIDATION.\nthe following abnormal cases can be identified.\na)\tIndication from transport layer of transmission failure of a message (e.g. after TCP retransmission timeout)\nThe UE shall close the existing connection to the ProSe Function, establish a new connection and then restart the appropriate procedure.\nb)\tNo response from the ProSe Function after a message has been successfully delivered (e.g. TCP ACK has not been received)\nThe UE shall retransmit the message.\nIn case of the messages listed below:\n-\tUE_REGISTRATION_RESPONSE;\n-\tAPPLICATION_REGISTRATION_RESPONSE;\n-\tPROXIMITY_REQUEST_RESPONSE;\n-\tPROXIMITY_ALERT;\n-\tUE_DEREGISTRATION_RESPONSE;\n-\tCANCEL_PROXIMITY_RESPONSE; and\n-\tPROXIMITY_REQUEST_VALIDATION_RESPONSE.\nthe following abnormal cases can be identified.\na)\tIndication from the lower layer of transmission failure of a message\nAfter receiving an indication from lower layer that a message has not been successfully acknowledged (e.g. TCP ACK is not received), the ProSe Function shall abort the procedure.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "8\tEPC support for WLAN direct discovery and communication",
            "description": "In this release of the document, the stand-alone procedure for EPC support for WLAN direct discovery and communication is not supported.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "9\tHandling of unknown, unforeseen, and erroneous protocol data",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "9.1\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "The procedures specified in the present document apply to those PC3 or PC5 messages which pass the checks described in this subclause.\nThis subclause also specifies procedures for the handling of unknown, unforeseen, and erroneous protocol data by the receiving entity. These procedures are called \"error handling procedures\", but in addition to providing recovery mechanisms for error situations they define a compatibility mechanism for future extensions of the protocols.\nDetailed error handling procedures in the network are implementation dependent and may vary from PLMN to PLMN. However, when extensions of this protocol are developed, networks will be assumed to have the error handling that is indicated in this subclause as mandatory (\"shall\") and that is indicated as strongly recommended (\"should\").\nAlso, the error handling of the network is only considered as mandatory or strongly recommended when certain thresholds for errors are not reached during a dedicated connection.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "9.2\tHandling of unknown, unforeseen, and erroneous protocol data in messages sent over the PC5 interface",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "9.2.1\t\tMessage too short",
                            "text_content": "When a message is received that is too short to contain a complete message type parameter, that message shall be ignored.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "9.2.2\tUnknown or unforeseen message type",
                            "text_content": "If the UE receives a PC5_DISCOVERY message with Message Type not defined as in subclause 12.2.2.10, it shall discard the whole PC5_DISCOVERY message.\nIf the UE receives a PC5_DISCOVERY message with Message Type indicating a discovery model or discovery type that is not supported by the UE, it shall discard the whole PC5_DISCOVERY message.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "9.3\tHandling of unknown, unforeseen, and erroneous protocol data in messages sent over the PC3 interface",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "9.3.1\tInvalid XML",
                            "text_content": "The protocol data over PC3 interface are encapsulated as XML contents, which may contain one or more PC3 messages. The XML content shall be validated with the XML schema defined in subclause 11.2.3.\nWhen the UE receives an invalid XML content, it shall discard the whole XML content. When the ProSe Function receives an invalid XML content, it shall discard the whole XML document and send an HTTP response message containing a \"400 Bad Request\" error code to the UE.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "9.3.2\tUnforeseen message type",
                            "text_content": "If the UE receives a PC3 message with a message type corresponding to a ProSe discovery mechanism that the UE is not authorised to use by the network, the UE shall discard the message. For example, if a UE not authorised for EPC-level ProSe discovery receives messages specified for EPC-level ProSe discovery procedures in subclause 7, the UE shall discard the message.\nIf the ProSe Function receives a PC3 message whose message type indicates that this is a ProSe discovery mechanism the sending UE is not authorised to support, the ProSe Function shall discard the message.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "10\tProSe direct communication",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "10.1\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "This clause describes the procedures at the UE, and between UEs, for ProSe direct communication over the PC5 interface.\nWhen served by E-UTRAN, the UE shall be authorised for ProSe direct communication in the registered PLMN based on the service authorisation procedure as specified in clause 5, before initiating ProSe direct communication.\nWhen not served by E-UTRAN, the UE shall be authorised for ProSe direct communication for \"not served by E-UTRAN\" based on the service authorisation procedure as specified in subclause 5, before initiating ProSe direct communication.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "10.2\tOne-to-many ProSe direct communication",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "10.2.1\tGeneral",
                            "text_content": "One-to-many ProSe direct communication is applicable only to ProSe-enabled Public Safety UEs. One-to-many ProSe direct communication can only apply when the UE is:\na)\tserved by E-UTRAN and authorised for ProSe direct communication in the registered PLMN;\nb)\tnot served by E-UTRAN, and authorised for ProSe direct communication for \"not served by E-UTRAN\"; or\nc)\tin EMM-IDLE mode and in limited service state as specified in 3GPP TS 23.122 [24] and authorised for ProSe direct communication when \"not served by E-UTRAN\", if the reason for the UE being in limited service state is one of the following:\ni)\tthe UE is unable to find a suitable cell in the selected PLMN as specified in 3GPP TS 36.304 [23];\nii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.008 [30]; or\niii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #7 \"EPS services not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #7 \"GPRS services not allowed\" as specified in 3GPP TS 24.008 [30].\nUpon receiving a request from upper layers to send or receive data for ProSe direct communication in a given group, the UE shall initiate the procedure for ProSe direct communication. For case a, the UE shall perform ProSe direct communication procedures specified in subclause 10.2.2. For case b and c, the UE shall perform ProSe direct communication procedures specified in subclause 10.2.3.\nIf the UE is camped on an E-UTRAN cell not operating on the carrier frequency provisioned for ProSe direct communication which indicates that ProSe direct communication is supported by the network, the UE can perform either ProSe direct communication procedures specified in subclause 10.2.2 or ProSe direct communication procedures specified in subclause 10.2.3.\nThe UE shall obtain the ProSe direct communication policy parameters for that group as specified in subclause 5, except for the eMBMS content to be relayed by one-to-many ProSe direct communication as specified in subclause 10.2.4.2.\nIf the ProSe direct communication policy parameters indicate that the UE is configured to use IPv6 for that group, the UE shall auto-configures a link local IPv6 Address following procedures defined in RFC 4862 [15]. This address can only be used as the source IP address for one-to-many ProSe direct communication.\nIf the ProSe Direct communication policy parameters group indicate that the UE is configured to use IPv4 for that group, then the UE shall:\n-\tuse the configured IPv4 address for that group as source address; or\n-\tif there is no configured IPv4 address for that group, use Dynamic Configuration of IPv4 Link-Local Addresses as specified in IETF RFC 3927 [16].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.2\tProSe direct communication facilitated by serving E-UTRAN",
                            "text_content": "When the UE is served by E-UTRAN and intends to use the ProSe radio resources (i.e. carrier frequency) provided by an E-UTRAN cell, the UE requests the parameters from the lower layers for transmitting or receiving ProSe direct communication (see 3GPP TS 36.331 [12]). When requesting the parameters from the lower layers for transmitting or receiving ProSe direct communication, the UE shall indicate to lower layers the ProSe Per-Packet Reliability (PPPR) value, if received from the upper layers. The UE shall perform direct communication only if the lower layers indicate that ProSe direct communication is supported by the network. If the UE in EMM-IDLE mode has to request resources for ProSe direct communication as specified in 3GPP TS 36.331 [12], the UE shall perform a service request procedure or tracking area update procedure as specified in 3GPP TS 24.301 [11]. Once the radio resources for transmitting or receiving ProSe direct communication are provided by eNodeB as specified in 3GPP TS 36.331 [12], the UE shall start ProSe direct communication.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.3\tProcedure for UE to use provisioned radio resources",
                            "text_content": "When the UE is not served by E-UTRAN, the UE shall select the radio parameters to be used for ProSe direct communication as follows:\n-\tif the UE can determine itself located in a geographical area, and the UE is provisioned with radio parameters for the geographical area, the UE shall select the radio parameters associated with that geographical area; or\n-\tin all other cases, the UE shall not initiate ProSe direct communication.\nNOTE 1: It is out of scope of the present specification to define how the UE can locate itself in a specific Geographical Area. When the UE is in coverage of a 3GPP RAT it can for example use information derived from the serving PLMN. When the UE is not in coverage of a 3GPP RAT it can use other techniques as determined by local regulations.\nBefore initiating ProSe direct communication, the UE shall check with lower layers whether the selected radio parameters can be used in the current location without causing interference to other cells as specified in 3GPP TS 36.331 [12], and:\n-\tif the lower layers indicate that the usage would not cause any interference, the UE shall initiate ProSe direct communication; or\nNOTE 2:\tIf the lower layers find that there exists a cell operating the provisioned radio resources (i.e., carrier frequency), and the cell belongs to the registered PLMN or a PLMN equivalent to the registered PLMN, and the UE is authorized for ProSe direct communication in this PLMN, the UE can use the radio parameters indicated by the cell as specified in 3GPP TS 36.331 [12].\n-\telse if the lower layers report that one or more PLMNs operate in the provisioned radio resources (i.e. carrier frequency) then:\na)\tif the following conditions are met:\n1)\tnone of the PLMNs reported by the lower layers is the registered PLMN or equivalent to the registered PLMN; and\n2)\tat least one of the PLMNs reported by the lower layers is in the list of authorised PLMNs for ProSe direct communication and provides radio resources for ProSe direct communication as specified in 3GPP TS 36.331 [12];\nthen the UE shall:\n1)\tif in EMM-IDLE mode, perform PLMN selection triggered by ProSe direct communication as specified in 3GPP TS 23.122 [24]; or\n2)\telse if in EMM-CONNECTED mode, either:\ni)\tperform a detach procedure as specified in 3GPP TS 24.301 [11] and then perform PLMN selection triggered by ProSe direct communication as specified in 3GPP TS 23.122 [24]; or\nii)\tnot initiate ProSe direct communication.\nWhether the UE performs i) or ii) above is left up to UE implementation; or\nb)\telse the UE shall not initiate ProSe direct communication.\nIf the registration to the selected PLMN is successful, the UE shall proceed with the procedure to initiate ProSe direct communication as specified in subclause 10.2.2.\nIf the UE is performing ProSe direct communication using radio parameters associated with a geographical area and moves out of that geographical area, the UE shall stop performing ProSe direct communication and then:\n-\tif the UE is not served by E-UTRAN or the UE intends to use radio resources for ProSe other than those operated by the serving E-UTRAN cell, the UE shall select appropriate radio parameters for the new geographical area as specified above; or\n-\tif the UE is served by E-UTRAN and intends to use radio resources for ProSe operated by the serving E-UTRAN cell, the UE shall proceed with the procedure to initiate ProSe direct communication when served by E-UTRAN.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.2.4\tOne-to-many ProSe direct communication transmission",
                            "text_content": "When receiving user data from upper layers to be sent to a given group, the transmitting UE shall tag each outgoing protocol data unit with the following information before passing it to the lower layers for transmission:\n-\ta Layer-3 protocol data unit type (see 3GPP TS 36.323 [37]) set to:\na)\tIP packet; or\nb)\tAddress Resolution Protocol packet;\n-\tthe Source Layer-2 ID set to the ProSe UE ID assigned from the ProSe Key Management Function or self-assigned by the UE;\n-\tthe Destination Layer-2 ID set to the ProSe Layer-2 Group ID;\n-\tthe ProSe Per-Packet Priority associated with the protocol data unit; and\n-\tthe ProSe Per-Packet Reliability (PPPR), if received from the upper layers.\nThe UE shall choose from a range of eight possible values to indicate the required ProSe Per-Packet Priority related to the lower layer handling of this packet data unit. The ProSe Per-Packet Priority is selected by the application layer based on criteria that are outside the scope of this specification, and is independent of the ProSe Layer-2 Group ID, which is used as the Layer 2 destination address for this packet data unit.\nA ProSe UE-to-network relay UE acting as an eMBMS traffic relay shall use one-to-many ProSe direct communication to broadcast the eMBMS traffic received from the network only if the following conditions are met:\n-\tthe ProSe UE-to-network relay UE has detected the TMGI value which it has been requested to monitor during the TMGI monitoring request procedure as specified in subclause 10.5; and\n-\tthe ProSe UE-to-network relay UE has announced the PC5_DISCOVERY message for Relay Discovery Additional Information, which includes the detected TMGI value and the corresponding ProSe Layer 2 Group ID to be used for the one-to-many communication packets carrying the relayed eMBMS traffic associated with this TMGI value.\nFor eMBMS traffic relayed by the ProSe UE-to-network relay UE, the ProSe UE-to-network relay UE uses the ProSe Per-Packet Priority that is included in TMGI_MONITORING_REQUEST message to determine the ProSe Per-Packet Priority value to be applied for the one-to-many communication packets corresponding to that TMGI when they are relayed over PC5.\nNOTE:\tIt is assumed that the remote UE receives the QCI associated with the TMGI at the application layer along with an associated priority value that the application layer in the remote UE maps into a ProSe Per-Packet Priority.\nFor eMBMS traffic relayed by the ProSe UE-to-network relay UE, bearer-level security mechanisms specified in 3GPP TS 33.303 [6] shall not be applied.\nThe ProSe UE-to-network relay UE acting as an eMBMS traffic relay shall stop the one-to-many ProSe direct communication, if any of the following conditions is met:\n-\tthe TMGI value corresponding to the relayed eMBMS traffic can no longer be detected by the ProSe UE-to-network relay UE; or\n-\tThere is no longer any remote UE requesting to monitor the TMGI value corresponding to the relayed eMBMS traffic, i.e., the T4105 timer for this TMGI (see subclause 10.5) expires.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "10.3\tPC3ch Control Protocol for ProSe direct communication",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "10.3.1\tTransport protocol for PC3ch Control Protocol for ProSe direct communication",
                            "text_content": "The UE and ProSe Function CTF (ADF) shall use HTTP 1.1 as specified in IETF RFC 9112 [18] and IETF RFC 9110 [19] as the transport protocol for messages transmitted over the PC3ch interface. The ProSe messages described here shall be included in the body of either an HTTP request message or an HTTP response message. The following rules apply:\na)\tThe UE initiates ProSe transactions with an HTTP request message containing the PC3ch request(s).\nb)\tThe ProSe Function CTF (ADF) responds to the requests with an HTTP response message containing the PC3ch response(s) for the PC3ch request(s); and\nc)\tHTTP POST methods are used for PC3ch procedures.\nOptionally, the operator can configure the UE with configuration parameters for establishment of the PDN connection for reaching the HPLMN ProSe Function. If the UE is configured with the configuration parameter for establishment of the PDN connection for reaching the HPLMN ProSe Function (see 3GPP TS 24.333 [9]):\na)\tif a PDN connection for reaching the HPLMN ProSe Function is not established yet, the UE shall establish the PDN connection for reaching the HPLMN ProSe Function according to the UE configuration and shall send the HTTP request message via the PDN connection for reaching the HPLMN ProSe Function; and\nb)\tif a PDN connection for reaching the HPLMN ProSe Function is already established (e.g. either due to other ProSe feature or due to other application), the UE shall send the HTTP request message via the PDN connection for reaching the HPLMN ProSe Function;\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.3.2\tProcedures for PC3ch Control Protocol for ProSe direct communication",
                            "text_content": "The purpose of the usage information report list sending procedure is to enable a ProSe-enabled Public Safety UE to provide information necessary for composing of charging events related to the ProSe direct communication as defined in 3GPP TS 32.277 [27].\nThe UE shall perform the usage information report list sending procedure with the Accounting Data Forwarding (ADF) function block of the Charging Trigger Function (CTF) in the ProSe Function (ProSe Function CTF (ADF)) residing in the HPLMN.\nThe UE shall construct the usage information report based on the policy described in subclause 5.1.3.\nThe UE shall perform the usage information report list sending procedure if the UE is in E-UTRAN coverage and if:\na)\tthe following is true:\n1)\tif a usage information report list sending procedure was already performed after beginning of ProSe direct communication, the configured collection period has elapsed since the end of the previous usage information report list sending procedure;\n2)\tif a usage information report list sending procedure was not performed yet after beginning of ProSe direct communication, the configured collection period has elapsed since beginning of ProSe direct communication;\n3)\tthe configured reporting window has not elapsed after the configured collection period elapsed;\n4)\tthe UE is in the RRC CONNECTED mode; and\n5)\tthe UE has usage information for at least one collection period; or\nb)\tthe following is true:\n1)\tif a usage information report list sending procedure was already performed after beginning of ProSe direct communication, the configured collection period has elapsed since the end of the previous usage information report list sending procedure;\n2)\tif a usage information report list sending procedure was not performed yet after beginning of ProSe direct communication, the configured collection period has elapsed since beginning of ProSe direct communication;\n3)\tthe configured reporting window has elapsed after the configured collection period elapsed; and\n4)\tthe UE has usage information for at least one collection period.\nThe UE shall initiate the usage information report list sending procedure by sending a USAGE_INFORMATION_REPORT_LIST message to the ProSe Function CTF (ADF).\nIf the UE is configured with the IP address of the ProSe Function CTF (ADF), the UE shall send the USAGE_INFORMATION_REPORT_LIST message to the configured IP address of the ProSe Function CTF (ADF). If the UE is not configured with the IP address of the ProSe Function CTF (ADF), the UE shall send the USAGE_INFORMATION_REPORT_LIST message to the IP address of the ProSe Function discovered as described in subclause 5.1.2.\nIn the USAGE_INFORMATION_REPORT_LIST message, the UE:\na)\tshall include a new transaction ID;\nb)\tshall include the UE identity set to the UE's IMSI;\nc)\tfor each collection period:\n1)\tshall include a sequence number of the usage information report;\n2)\tif the UE is configured to report the time stamps when it went in and out of E-UTRAN coverage during the collection period in the usage information, for each going in or out of E-UTRAN coverage:\nA)\tshall include information whether the UE was in or out of E-UTRAN coverage;\nB)\tshall include the time stamp of the move; and\nC)\tif the UE was in E-UTRAN coverage and the UE is configured to report the list of locations of the UE when in E-UTRAN coverage during the collection period in the usage information, for each camping on a cell or usage of a cell in the EMM-CONNECTED mode:\ni)\tshall include the E-UTRAN cell global identification of the cell; and\nii)\tshall include the time stamp of beginning of the camping on the cell or of beginning of the usage of the cell in the EMM-CONNECTED mode;\n3)\tif the UE is configured to report the group parameters in the usage information, for each group:\nA)\tshall include the ProSe Layer-2 Group ID;\nB)\tshall include the ProSe Group IP multicast address;\nC)\tif the UE transmitted data during the collection period and the UE is configured to report the time stamps of the first transmission/reception during the collection period in the usage information, shall include the time stamp of the first transmission to the ProSe Group IP multicast address in the collection period;\nD)\tif the UE received data during the collection period and the UE is configured to report the time stamps of the first transmission/reception during the collection period in the usage information, shall include the time stamp of the first reception from the ProSe Group IP multicast address in the collection period;\nE)\tshall include an IP address used by the UE as a source address;\nF)\tshall include the ProSe UE ID;\nG)\tfor each transmitter in one-to-many ProSe direct communication, shall include the Source L2 ID and IP address of the transmitter;\nH)\tif the UE is configured to report the amount of data transmitted during the collection period with location information in the usage information, per each in or out of E-UTRAN coverage period and per each E-UTRAN cell used when in E-UTRAN coverage:\ni)\tshall indicate whether the data are sent in or out of E-UTRAN coverage;\nii)\tif the UE transmitted data in an E-UTRAN cell during an in E-UTRAN coverage period:\n-\tshall include the E-UTRAN cell global identification of the E-UTRAN cell;\n-\tshall include amount of the data transmitted in the E-UTRAN cell;\n-\tif the UE is configured to report the time stamps of the first transmission/reception during the collection period in the usage information, shall include time stamp of the first transmission in the E-UTRAN cell; and\n-\tif the UE is configured to report the radio parameters used for ProSe direct communication (i.e. indicator of which radio resources used and radio frequency used) during the reporting period in the usage information, shall include the indicator of which radio resources were used;\niii)\tif the UE transmitted data during out of E-UTRAN coverage period:\n-\tshall include amount of the data transmitted during the out of E-UTRAN coverage period; and\n-\tif the UE is configured to report the time stamps of the first transmission/reception during the collection period in the usage information, shall include time stamp of the first transmission during the out of E-UTRAN coverage period; and\niv)\tif the UE is configured to report the radio parameters used for ProSe direct communication (i.e. indicator of which radio resources used and radio frequency used) during the reporting period in the usage information, shall include the used radio frequency; and\nI)\tif the UE is configured to report the amount of data transmitted during the collection period without location information in the usage information, per each in or out of E-UTRAN coverage period:\ni)\tshall indicate whether the data are sent in or out of E-UTRAN coverage;\nii)\tif the UE transmitted data during in E-UTRAN coverage period:\n-\tshall include amount of the data transmitted during the in E-UTRAN coverage period;\n-\tif the UE is configured to report the time stamps of the first transmission/reception during the collection period in the usage information, shall include time stamp of the first transmission during the in E-UTRAN coverage period; and\n-\tif the UE is configured to report the radio parameters used for ProSe direct communication (i.e. indicator of which radio resources used and radio frequency used) during the reporting period in the usage information, shall include the indicator of which radio resources were used;\niii)\tif the UE transmitted data during out of E-UTRAN coverage period:\n-\tshall include amount of the data transmitted during the out of E-UTRAN coverage period; and\n-\tif the UE is configured to report the time stamps of the first transmission/reception during the collection period in the usage information, shall include time stamp of the first transmission during the out of E-UTRAN coverage period; and\niv)\tif the UE is configured to report the radio parameters used for ProSe direct communication (i.e. indicator of which radio resources used and radio frequency used) during the reporting period in the usage information, shall include the used radio frequency; and\nJ)\tif the UE is configured to report the amount of data received during the collection period with location information in the usage information, per each in or out of E-UTRAN coverage period and per each E-UTRAN cell used when in E-UTRAN coverage:\ni)\tshall indicate whether the data are sent in or out of E-UTRAN coverage;\nii)\tif the UE received data in an E-UTRAN cell during an in E-UTRAN coverage period:\n-\tshall include the E-UTRAN cell global identification of the E-UTRAN cell;\n-\tshall include amount of the data received in the E-UTRAN cell;\n-\tif the UE is configured to report the time stamps of the first transmission/reception during the collection period in the usage information, shall include time stamp of the first reception in the E-UTRAN cell; and\n-\tif the UE is configured to report the radio parameters used for ProSe direct communication (i.e. indicator of which radio resources used and radio frequency used) during the reporting period in the usage information, shall include the indicator of which radio resources were used;\niii)\tif the UE received data during out of E-UTRAN coverage period:\n-\tshall include amount of the data received during the out of E-UTRAN coverage period; and\n-\tif the UE is configured to report the time stamps of the first transmission/reception during the collection period in the usage information, shall include time stamp of the first reception during the out of E-UTRAN coverage period; and\niv)\tif the UE is configured to report the radio parameters used for ProSe direct communication (i.e. indicator of which radio resources used and radio frequency used) during the reporting period in the usage information, shall include the used radio frequency; and\nK)\tif the UE is configured to report the amount of data received during the collection period without location information in the usage information, per each in or out of E-UTRAN coverage period:\ni)\tshall indicate whether the data are sent in or out of E-UTRAN coverage;\nii)\tif the UE received data during in E-UTRAN coverage period:\n-\tshall include amount of the data received during the in E-UTRAN coverage period;\n-\tif the UE is configured to report the time stamps of the first transmission/reception during the collection period in the usage information, shall include time stamp of the first reception during the in E-UTRAN coverage period; and\n-\tif the UE is configured to report the radio parameters used for ProSe direct communication (i.e. indicator of which radio resources used and radio frequency used) during the reporting period in the usage information, shall include the indicator of which radio resources were used;\niii)\tif the UE received data during out of E-UTRAN coverage period:\n-\tshall include amount of the data received during the out of E-UTRAN coverage period; and\n-\tif the UE is configured to report the time stamps of the first transmission/reception during the collection period in the usage information, shall include time stamp of the first reception during the out of E-UTRAN coverage period; and\niv)\tif the UE is configured to report the radio parameters used for ProSe direct communication (i.e. indicator of which radio resources used and radio frequency used) during the reporting period in the usage information, shall include the used radio frequency; and\n4)\tif configured radio parameters for the ProSe direct communication applicable in the geographical area of the UE were used during the collection period, shall include the configured radio parameters for the ProSe direct communication applicable in the geographical area of the UE; and\nd)\tfor each application specific data received from upper layers during the collection period, shall include the received application specific data.\nFigure 10.3.2.1.2.1 illustrates the interaction of the UE and the ProSe Function CTF (ADF) in the usage information report list sending procedure.\nFigure 10.3.2.1.2.1 illustrates the usage information report list sending procedure, which involves the transmission of usage information reports from the network elements to the network management system. The figure shows the process of collecting usage data, such as call detail records and traffic data, from various network components like mobile switches, routers, and access points. This information is then formatted into usage information reports and sent to the network management system for analysis and billing purposes. The figure highlights the importance of accurate and timely reporting for effective network management and resource allocation.\nFigure 10.3.2.1.2.1: Usage information report list sending procedure\nUpon receiving a USAGE_INFORMATION_REPORT_LIST message from UE, the ProSe Function CTF (ADF) triggers one or more charging data requests according to 3GPP TS 32.277 [27].\nIf the USAGE_INFORMATION_REPORT_LIST message is accepted by the ProSe Function CTF (ADF), the ProSe Function CTF (ADF) shall send a USAGE_INFORMATION_REPORT_LIST_RESPONSE message to the UE, containing a <response-accept> element with transaction ID set to the value of the transaction ID included in the USAGE_INFORMATION_REPORT_LIST message.\nUpon receipt of the USAGE_INFORMATION_REPORT_LIST_RESPONSE message containing a <response-accept> element with transaction ID set to the value of the transaction ID included in the USAGE_INFORMATION_REPORT_LIST message, the usage information report list sending procedure is successfully completed.\nIf the USAGE_INFORMATION_REPORT_LIST message is not accepted by the ProSe Function CTF (ADF), the ProSe Function CTF (ADF) shall send a USAGE_INFORMATION_REPORT_LIST_RESPONSE message to the UE. In the USAGE_INFORMATION_REPORT_LIST_RESPONSE message, the ProSe Function CTF (ADF):\n1)\tshall include a <response-reject> element with transaction ID set to the value of the transaction ID included in the USAGE_INFORMATION_REPORT_LIST message; and\n2)\tshall include appropriate cause value.\nUpon receipt of the USAGE_INFORMATION_REPORT_LIST_RESPONSE message containing a <response-reject> element with transaction ID set to the value of the transaction ID included in the USAGE_INFORMATION_REPORT_LIST message, the usage information report list sending procedure is unsuccessfully completed.\nIf the USAGE_INFORMATION_REPORT_LIST_RESPONSE message contains the cause value set to #3 \"Invalid Message Format\", the UE shall not perform the usage information report list sending procedure until the UE powers off and powers on again or the USIM is removed.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "10.4\tOne-to-one ProSe direct communication",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "10.4.1\tOverview",
                            "text_content": "This clause describes the PC5 Signalling Protocol procedures between two ProSe-enabled UEs for one-to-one ProSe direct communication.The following PC5 Signalling Protocol procedures are defined:\n-\tdirect link setup;\n-\tdirect link keepalive;\n-\tdirect link release; and\n-\tdirect link authentication.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.4.1A\tRadio resource selection",
                            "text_content": "The UE shall be authorised for one-to-one ProSe direct communication and obtain the ProSe direct communication policy parameters based on the service authorisation procedure as specified in clause 5 before initiating or participating in any PC5 Signalling Protocol procedures for one-to-one ProSe direct communication.\nThe UE shall select the radio resources for one-to-one ProSe direct communication as described for one-to-many ProSe direct communication in subclauses 10.2.1, 10.2.2 and 10.2.3.\nFor one-to-one communication between a remote UE and a ProSe UE-to-network relay UE, if the remote UE receives a lower layers indication that using radio resources for relay communication is not allowed as specified in 3GPP TS 36.331 [12], the remote UE shall abort any ongoing procedures involving a relay (i.e., PC5 signalling Protocol procedures and data transmission/reception) and start an implementation specific timer with value T. While this timer is running, the remote UE shall not initiate any procedures involving a relay. If the remote UE receives lower layers indication that using radio resources for relay communication is allowed as specified in 3GPP TS 36.331 [12], the remote UE shall stop the implementation specific timer and can resume any procedures involving a relay. Otherwise, after the implementation specific timer expires, the remote UE shall release all direct links used for communication with relay(s) locally.\nNOTE:\tThe length of T is UE implementation specific.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.4.2\tDirect link setup procedure",
                            "text_content": "The direct link setup procedure is used to establish a secure direct link between two ProSe-enabled UEs. The UE sending the request message is called the \"initiating UE\"and the other UE is called the \"target UE\".\nIf the direct link setup is for isolated one-to-one ProSe direct communication, i.e. when none of the two UEs is a ProSe UE-to-network relay, both UEs are required to have fetched in advance the public key of the KMS (Key Management Server), and a set of credentials associated with the UE's identity (as defined in IETF RFC 6507 [39] and IETF RFC 6508 [40]), as specified by 3GPP TS 33.303 [6].\nThe initiating UE shall meet the following pre-conditions before initiating this procedure:\n-\ta request from upper layers to establish a direct link with the target UE is received and there is no existing link between the initiating UE and that target UE;\n-\tthe link layer identifier for the initiating UE (i.e., Layer 2 ID used for unicast communication) is available (e.g.,pre-configured or self-assigned);\n-\tthe link layer identifier for the target UE (i.e., Layer 2 ID used for unicast communication) is available to the initiating UE (e.g., pre-configured or obtained via ProSe direct discovery); and\n-\tthe initiating UE is either authorised for ProSe direct communication in the serving PLMN, or has a valid authorization for ProSe direct communication when not served by E-UTRAN.\nThe initiating UE initiates the direct link setup procedure by generating a DIRECT_COMMUNICATION_REQUEST message with:\n-\tthe User Info set to:\n-\tthe initiating UE’s User Info received from upper layers if the target UE is not a ProSe UE-to-network relay UE;\n-\tthe PRUK ID received from the PKMF if the target UE is a ProSe UE-to-network relay UE, the initiating UE has received a PRUK from the PKMF for this relay, and an attempt to connect to this relay has not been rejected due to the PRUK ID not being recognised;\n-\tthe initiating UE’s IMSI if the target UE is a ProSe UE-to-network relay UE and the initiating UE has not received a PRUK from the PKMF for this relay; or\n-\tthe initiating UE’s IMSI if the target UE is a ProSe UE-to-network relay UE and the initiating UE has received a PRUK from the PKMF for this relay but an attempt to connect to this relay has been rejected due to the PRUK ID not being recognised;\n-\tan IP Address Config IE set to one of the following values:\n-\t\"DHCPv4 Server\" if only IPv4 address allocation mechanism is supported by the initiating UE, i.e., acting as a DHCPv4 Server;\n-\t\"IPv6 Router\" if only IPv6 address allocation mechanism is supported by the initiating UE, i.e., acting as an IPv6 Router;\n-\t\"DHCPv4 Server & IPv6 Router\" if both IPv4 and IPv6 address allocation mechanisms are supported by the initiating UE; or\n-\t\"address allocation not supported\" if neither IPv4 nor IPv6 address allocation mechanism is supported by the initiating UE;\n-\ta Link Local IPv6 Address IE formed locally based on IETF RFC 4862 [15] if the IP Address Config IE is set to \"address allocation not supported\" and the link is setup for isolated one-to-one communication;\nNOTE 1:\tthe UE can reuse a Link Local IPv6 IP address for multiple isolated one-to-one communication links.\n-\ta Maximum Inactivity Period IE to indicate the maximum inactivity period of the requesting UE over this direct link;\nNOTE 2:\tThe value of Maximum Inactivity Period IE can be calculated based on UE's local settings, such as keepalive timer T4102 (see 10.4.3), retransmission timer T4101 (see 10.4.3), and maximum number of allowed retransmissions for DIRECT_COMMUNICATION_KEEPALIVE message.\n-\ta Nonce_1 IE set to the 128-bit nonce value generated by the initiating UE for the purpose of session key establishment over this direct link;\n-\ta UE Security Capabilities IE set to indicate the list of algorithms that the initiating UE supports for the security establishment of this direct link;\n-\tan MSB of KD-sess ID IE set to the most significant 8 bits of the KD-sess ID; and\n-\tOptionally, a KD ID IE set to the known ID of KD which was previously established if the initiating UE has an existing KD with the target UE.\nIf the direct link setup is for isolated one-to-one ProSe direct communication, the DIRECT_COMMUNICATION_REQUEST message shall also include the following parameters:\n-\tthe Signature IE set to the ECCSI signature calculated with the following information elements, as specified in 3GPP TS 33.303 [6]:\n-\tUser Info; and\n-\tNonce_1.\nElse if the link setup for remote UE to ProSe UE-to-network relay ProSe direct communication, the DIRECT_COMMUNICATION_REQUEST message shall also include the Relay Service Code IE set to the Relay Service Code of the target relay.\nAfter the DIRECT_COMMUNICATION_REQUEST message is generated, the initiating UE shall pass this message to the lower layers for transmission along with the initiating UE's Layer 2 ID (for unicast communication) and the target UE's Layer 2 ID (for unicast communication), and start timer T4100. The UE shall not send a new DIRECT_COMMUNICATION_REQUEST message to the same target UE while timer T4100 is running.\nFigure 10.4.2.1 illustrates the step-by-step process of establishing a direct link between two network nodes, showcasing the various stages of the procedure. The figure begins with the initial connection request, where the source node sends a synchronization signal to the destination node. Following successful synchronization, the nodes proceed to configure their respective parameters, such as the modulation scheme and coding scheme (MCS). The direct link setup then involves the transmission of control packets, which include synchronization signals and key exchange messages. Once the control packets are successfully received and acknowledged by the destination node, the data link layer takes over, initiating the data transmission phase. This phase involves the establishment of a virtual circuit between the two nodes, ensuring reliable and error-free data transfer. The figure concludes with the successful completion of the direct link setup procedure, highlighting the importance of precise coordination and synchronization in maintaining high-quality network connections.\nFigure 10.4.2.2.1: Direct link setup procedure\nUpon receiving a DIRECT_COMMUNICATION_REQUEST message, the target UE shall store the pair of Layer 2 IDs (for unicast communication) used in the transport of this message provided by the lower layers and associate them with a direct link context.\nThe target UE then checks the User Info IE included in the DIRECT_COMMUNICATION_REQUEST message and determines whether this request can be accepted or not. Then, the target UE examines the IP Address Config IE to see whether there is at least one common IP address configuration option supported by both the initiating UE and the target UE. If the above check is successful, the target UE shall invoke the direct security mode control procedure as specified in subclause 10.4.5 to establish a security association between the target UE and the initiating UE. Only after the completion of link authentication procedure and a successful establishment of the security association, the target UE shall send a DIRECT_COMMUNICATION_ACCEPT message to the initiating UE.\nThe target UE shall include an IP Address Config IE set to one of the following values:\n-\t\"DHCPv4 Server\" if only IPv4 address allocation mechanism is supported by the target UE and the target UE is able to act as DHCP server;\n-\t\"IPv6 Router\" if only IPv6 address allocation mechanism is supported by the target UE and the target UE is able to act as IPv6 Router;\n-\t\"DHCPv4 Server & IPv6 Router\" if both IPv4 and IPv6 address allocation mechanisms are supported by the target UE; or\n-\t\"address allocation not supported\" if neither IPv4 nor IPv6 address allocation is supported by the target UE.\nIf the IP Address Config IE is set to \"address allocation not supported\" and the received DIRECT_COMMUNICATION_REQUEST message included a Link Local IPv6 Address IE, the target UE shall include a Link Local IPv6 Address IE set to the link-local IPv6 address formed locally.\nNOTE:\tthe UE can reuse a Link Local IPv6 IP address for multiple isolated one-to-one communication links.\nA ProSe UE-to-network relay UE shall support at least one of the IP address allocation mechanisms.\nIf the target UE acts as a ProSe UE-to-network relay UE and PDN connection for relaying associated with the ProSe relay UE ID is not established yet or additional PDN connection used for relaying is needed when the ProSe UE-to-network relay UE sends the DIRECT_COMMUNICATION_ACCEPT message to the remote UE, the ProSe UE-to-network relay UE shall initiate the UE requested PDN connectivity procedure by sending the PDN CONNECTIVITY REQUEST message including the APN which is associated with the ProSe Relay UE ID as specified in 3GPP TS 24.301 [11].\nIf the target UE is a ProSe-UE-to-network relay UE, the target UE shall create an inactivity timer T4108 with the value provided in the Maximum Inactivity Period IE included in the DIRECT_COMMUNICATION_REQUEST message, and start the timer T4108 when it has no more messages to send over the link to be established. Once the timer T4108 is started, if any communication activity occurs before the timer T4108 expires, the UE shall stop the timer T4108 and reset it with the initial value, unless a new value is provided in a Maximum Inactivity Period IE in a DIRECT_COMMUNICATION_KEEPALIVE message.\nIf the target UE is a ProSe-UE-to-network relay UE, and it has been configured by the serving PLMN to report the IMEI or IMEISV of the remote UE(s) served by the relay based on the service authorisation procedure as specified in clause 5, the ProSe UE-to-network relay UE shall initiate a remote UE information request procedure (as specified in subclause 10.7.2) to request the IMEI or IMEISV of the remote UE upon successful direct link establishment.\nUpon receipt of the DIRECT_COMMUNICATION_ACCEPT message, the initiating UE shall stop timer T4100. From this time onward the initiating UE shall use the established link for all one-to-one communication (including additional PC5 Signalling messages) to the target UE.\nIf the direct link setup request cannot be accepted, the target UE shall send a DIRECT_COMMUNICATION_REJECT message. The DIRECT_COMMUNICATION_REJECT message contains a PC5 Signalling Protocol cause value set to one of the following cause values:\n#1\tDirect communication to target UE not allowed;\n#2\tAuthentication failure;\n#3\tConflict of Layer 2 ID for unicast communication is detected;\n#4\tLack of resources for proposed link;\n#5\tIP version mismatch; or.\n#6\tLink setup failure due to other errors.\nIf the target UE is not allowed to accept this request.e.g. based on operator policy or service authorisation provisioning, the target UE shall send a DIRECT_COMMUNICATION_REJECT message containing PC5 Signalling Protocol cause value #1 \"Direct communication to target UE not allowed\".\nIf verification of the signature parameter included in the DIRECT_COMMUNICATION_REQUEST message fails at the target UE (see subclause 10.4.5), the target UE shall send a DIRECT_COMMUNICATION_REJECT message containing PC5 Signalling Protocol cause value #2 \"Authentication failure\".\nIf the direct link setup fails due to the problems in direct link authentication procedure (see 10.4.5), the target UE shall send a DIRECT_COMMUNICATION_REJECT message containing PC5 Signalling Protocol cause value #2 \"Authentication failure\".\nFor a received DIRECT_COMMUNICATION_REQUEST message from a Layer 2 ID (for unicast communication), if the target UE already has an existing link established to the UE known to use this Layer 2 ID or is currently processing a DIRECT_COMMUNICATION_REQUEST message from the same Layer 2 ID, but with User Info different from the User Info IE included in this new incoming message, the target UE shall send a DIRECT_COMMUNICATION_REJECT message containing PC5 Signalling Protocol cause value #3 \"Conflict of Layer 2 ID for unicast communication is detected\".\nIf the direct link setup fails due to the congestion problems or other temporary lower layer problems causing resource constraints, the target UE shall send a DIRECT_COMMUNICATION_REJECT message containing PC5 Signalling Protocol cause value #4 \"Lack of resources for proposed link\".\nIn case of ProSe UE-to-network relay UE, if the remote UE intends to use the ProSe UE-to-network relay UE for mission critical communication (e.g. MCPTT), but the ProSe UE-to-network relay UE does not support IPv6 address allocation scheme as a router,  the target UE (i.e. ProSe UE-to-network relay UE) shall reject the request with DIRECT_COMMUNICATION_REJECT message containing PC5 Signalling Protocol cause value #5 \"IP version mismatch\".\nNOTE 1:\tTo determine if remote UE intends to use the ProSe UE-to-network relay UE for mission critical communication (e.g. MCPTT), the target UE can examine the Layer 2 destination address of the transport of DIRECT_COMMUNICATION_REQUEST message to check whether it matches the ProSe Relay UE ID which has been associated to mission critical communication (e.g. MCPTT) or examine the User Info included in the DIRECT_COMMUNICATION_REQUEST message.\nFor other reasons that causing the failure of link establishment, the target UE shall send a DIRECT_COMMUNICATION_REJECT message containing PC5 Signalling Protocol cause value #6 \"Link setup failure due to other errors\".\nUpon receipt of the DIRECT_COMMUNICATION_REJECT message, the initiating UE shall stop timer T4100 and abort the direct link setup procedure. If the cause value in the DIRECT_COMMUNICATION_REJECT message is #1 \"Direct communication to target UE not allowed\" or #4 \"Lack of resources for proposed link\", then the UE shall not attempt to start direct link setup with the same target UE at least for a time period T, and if the initiating UE is a remote UE requesting link setup to a ProSe UE-to-network relay UE, it shall initiate the relay reselection procedure as specified in subclause 10A.2.13.\nNOTE 2:\tThe length of time period T is UE implementation specific and can be different for the case when the UE receives PC5 Signalling Protocol cause value #1 \"Direct communication to target UE not allowed\" or when the UE receives cause value #4 \"Lack of resources for proposed link\".\nIf timer T4100 expires, the initiating UE shall retransmit the DIRECT_COMMUNICATION_REQUEST message and restart timer T4100. After reaching the maximum number of allowed retransmissions, the initiating UE shall abort the direct link setup procedure, may notify the upper layer that the target UE is unreachable, and if the initiating UE is a remote UE requesting link setup to a ProSe UE-to-network relay UE, it shall initiate the relay reselection procedure as specified in subclause 10A.2.4.\nNOTE:\tThe maximum number of allowed retransmissions is UE implementation specific.\nIf the need to establish a link no longer exists before the procedure is completed, the initiating UE shall abort the procedure.\nFor a received DIRECT_COMMUNICATION_REQUEST message from a Layer 2 ID (for unicast communication), if the target UE already has an existing link established to the UE known to use this Layer 2 ID and the new request contains an identical User Info as the known user, the UE shall process the new request. However, the target UE shall only delete the existing link context after the new link setup procedure succeeds, or the link keepalive procedure as described in subclause 10.4.3 fails.\nIf the inactivity timer T4108 expires, if the target UE is a ProSe UE-to-network relay UE, it shall initiate the direct link release procedure specified in subclause 10.4.4 with the release reason #3 \"Direct connection is not available any more\". Otherwise, the target UE may:\nA)\t initiate is own keepalive procedure to check the link; or\nB)\tinitiate the direct link release procedure specified in subclause 10.4.4 with the release reason #3 \"Direct connection is not available any more\".\nWhether the UE chooses A or B is left to UE implementation.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.4.3\tDirect link keepalive procedure",
                            "text_content": "The direct link keepalive procedure is used to maintain the direct link between two ProSe-enabled UEs, i.e., check that the link between the two UEs is still viable. The procedure can be initiated by only one UE or both of the UEs in the established direct link. If the direct link is used for one-to-one communication between a remote UE and a ProSe UE-to-network relay UE, only the remote UE shall initiate the link keepalive procedure.\nIn this procedure, the UE sending the DIRECT_COMMUNICATION_KEEPALIVE message is called the \"requesting UE\" and the other UE is called the \"peer UE\".\nThe requesting UE manages a keepalive timer T4102 and a keepalive counter for this procedure. The keepalive timer T4102 is used to trigger the periodic initiation of the procedure. It is started or restarted whenever the UE receives a PC5 Signalling message or PC5 user plane data from the peer UE over this link. The keepalive counter is set to an initial value of zero after link establishment.\nThe requesting UE may initiate the procedure if:\n-\ta request from upper layers to check the viability of the direct link is received; or\n-\tthe keepalive timer T4102 for this link expires.\nThe requesting UE initiates the procedure by stopping timer T4102 if it is still running and generating a DIRECT_COMMUNICATION_KEEPALIVE message with a Keepalive Counter IE that contains the value of the keepalive counter for this link. Optionally, the initiating UE may include a Maximum Inactivity Period IE to indicate the maximum inactivity period of the requesting UE over this direct link. When a remote UE sends DIRECT_COMMUNICATION_KEEPALIVE message to the ProSe UE-to-network relay UE, this IE shall be included.\nAfter the DIRECT_COMMUNICATION_KEEPALIVE message is generated, the requesting UE shall pass this message to the lower layers for transmission along with the requesting UE’s Layer 2 ID (for unicast communication) and the peer UE's Layer 2 ID (for unicast communication), and start retransmission timer T4101.\nFigure 10.4.3.2.1 illustrates the direct link keepalive procedure, which is a crucial aspect of network management. The figure depicts the process of maintaining a connection between two network nodes through periodic check-ins. Key components include the source node, destination node, and the signaling protocol used for the keepalive process. The figure emphasizes the importance of this procedure in ensuring the reliability and stability of network connections.\nFigure 10.4.3.2.1: Direct link keepalive procedure\nUpon receiving a DIRECT_COMMUNICATION_KEEPALIVE message, the peer UE shall respond with a DIRECT_COMMUNICATION_KEEPALIVE_ACK message including the Keepalive Counter IE set to the same value as that received in the DIRECT_COMMUNICATION_KEEPALIVE message.\nIf a Maximum Inactivity Period IE is included in the DIRECT_COMMUNICATION_KEEPALIVE message, the peer UE shall stop the inactivity timer T4108 if it is running, and restart the timer T4108 with the value provided in the IE, If any communication activity occurs in this direct link before the timer T4108 expires, the UE shall stop the timer T4108 and reset it with the initial value.\nUpon receiving a DIRECT_COMMUNICATION_KEEPALIVE_ACK message, the requesting UE shall stop retransmission timer T4101, start keepalive timer T4102 and increment the keepalive counter for this link.\nIf retransmission timer T4101 expires, the requesting UE shall initiate the transmission of the DIRECT_COMMUNICATION_KEEPALIVE message again with the last used keepalive counter value and restart timer T4101. If no response is received from the peer UE after reaching the maximum number of allowed retransmissions, the requesting UE shall abort the link keepalive procedure and initiate the direct link release procedure (see subclasue 10.4.4) instead, and if the requesting UE is a remote UE, it shall initiate the relay reselection procedure as specified in subclause 10A.2.13.\nNOTE:\tThe maximum number of allowed retransmissions is UE implementation specific.\nIf the need to use this direct link no longer exists before the direct link keepalive procedure is completed, the requesting UE shall abort the procedure and start a direct link release procedure (see subcaluse 10.4.4) instead.\nIf the inactivity timer T4108 expires, if the peer UE is a ProSe UE-to-network relay UE, it shall initiate the direct link release procedure specified in 10.4.4 with the release reason #3 \"Direct connection is not available any more\". Otherwise, the peer UE may:\nA)\t initiate is own keepalive procedure to check the link; or\nB)\tinitiate the direct link release procedure specified in 10.4.4 with the release reason #3 \"Direct connection is not available any more\".\nWhether the UE chooses A or B is left to UE implementation.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.4.4\tDirect link release procedure",
                            "text_content": "The Direct link release procedure is used to release a secure direct link between two ProSe-enabled UEs. The link can be released from either end points. The UE sending the DIRECT_COMMUNICATION_RELEASE message is called the \"releasing UE\"and the other UE is called the \"peer UE\".\nWhen the direct link between a remote UE and a ProSe UE-to-network relay UE is released, the ProSe-UE-to-network relay UE shall perform the Remote UE report procedure as specified in 3GPP TS 24.301 [11].\nThe releasing UE shall initiate the procedure if:\n-\ta request from upper layers to release a direct link with the peer UE which uses a known Layer 2 ID (for unicast communication) is received and there is an existing link between those two UEs; or\n-\tthe peer UE has been non-responsive, e.g., unable to complete the direct link keepalive procedure.\nThe releasing UE initiates the direct link release procedure by generating a DIRECT_COMMUNICATION_RELEASE message with a Release Reason IE indicating one of the following cause values:\n#1\tDirect Communication to peer UE no longer needed;\n#2\tDirect communication with the peer UE is no longer allowed; or\n#3\tDirect connection is not available any more.\nAfter the DIRECT_COMMUNICATION_RELEASE message is generated, the releasing UE shall pass this message to the lower layers for transmission along with the releasing UE's Layer 2 ID (for unicast communication) and the peer UE's Layer 2 ID (for unicast communication). The releasing UE shall release the direct link locally if the release reason is #3 \"Direct connection is not available any more\". Otherwise, the releasing UE shall start timer T4103.\nFigure 10.4.2.1 illustrates the step-by-step process of releasing a direct link in a telecommunication network. The figure outlines the procedure, which begins with the network operator initiating the release request. The request is then forwarded to the network management system, which verifies the release conditions. Once the conditions are met, the network management system sends a release command to the network element responsible for the direct link. The network element acknowledges the command and releases the link, ensuring a seamless transition to alternative routes. The figure emphasizes the importance of a well-coordinated and efficient release procedure to maintain network stability and minimize service disruption.\nFigure 10.4.4.2.1: Direct link release procedure\nUpon receiving a DIRECT_COMMUNICATION_RELEASE message, the peer UE shall stop timer T4101, timer T4102, timer T4103 or timer T4108 for this link, if any of those timers is running, and abort any other ongoing PC5 Signalling Protocol procedures on this link. The peer UE shall respond with a DIRECT_COMMUNICATION_RELEASE_ACCEPT message. After the message is sent, the peer UE shall remove the context of this direct link and no longer send or receive any messages via this link.\nIf the cause value in the DIRECT_COMMUNICATION_RELEASE message is \"Direct communication with the peer UE is no longer allowed\", then the UE shall not attempt to start direct link setup with the releasing UE at least for the  time period T and if the peer UE is a remote UE requesting link setup to a ProSe UE-to-network relay UE, it shall initiate the relay reselection procedure as specified in subclause 10A.2.13.\nNOTE:\tThe length of time period T is UE implementation specific.\nUpon receipt of the DIRECT_COMMUNICATION_RELEASE_ACCEPT message, the releasing UE shall stop timer T4103. From this time onward the releasing UE shall no longer send or receive any messages via this link.\nIf retransmission timer T4103 expires, the releasing UE shall initiate the transmission of the DIRECT_COMMUNICATION_RELEASE message again and restart timer T4103. If no response is received from the peer UE after reaching the maximum number of allowed retransmissions, the releasing UE shall release the direct link locally. From this time onward the releasing UE shall no longer send or receive any messages via this link.\nNOTE:\tThe maximum number of allowed retransmissions is UE implementation specific.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.4.5\tDirect security mode control procedure",
                            "text_content": "Security association for a direct link between two ProSe-Enabled UEs is established during the direct link setup procedure or direct link rekeying procedure with the exchange of message contents related to direct security mode establishment. After successful completion of the direct security mode control procedure, the selected security algorithms and keys are used to integrity protect and cipher all PC5 Signalling messages exchanged between the UEs; and are also used to cipher all data plane traffic exchanged between the UEs.\nIn the rest of this subclause, the UE sending the DIRECT_SECURITY_MODE_COMMAND message is called the \"commanding UE\"and the other UE is called the \"peer UE\".\nA commanding UE may initiate the direct security mode control procedure in response to receiving a DIRECT_COMMUNICATION_REQUEST or a DIRECT_REKEYING_REQUEST message.\nIf the procedure takes place between a remote UE and a ProSe UE-to-network relay UE and is triggered by a DIRECT_REKEYING_REQUEST to only refresh KD-sess but not KD, then either the ProSe UE-to-network relay UE or the remote UE can act as the commanding UE. Otherwise, if both keys are to be refreshed, the ProSe UE-to-network relay UE shall act as the commanding UE.\nTo initiate this procedure, the commanding UE shall either identify an existing KD based on the KD ID included in the DIRECT_COMMUNICATION_REQUEST or DIRECT_REKEYING_REQUEST message, or derive a new KD if it either does not share a known KD with the peer UE or wishes to derive a new KD, as specified in 3GPP TS 33.303 [6]. In the latter case, the commanding UE shall generate the MSB of KD ID to ensure that the resultant KD ID will be unique in the commanding UE. Then, it shall generate a LSB of KD-sess ID such that the KD-sess ID formed by combining with the MSB of KD-sess ID (received in the DIRECT_COMMUNICATION_REQUEST or DIRECT_REKEYING_REQUEST that triggered the direct security mode procedure) is unique within the commanding UE.\nFollowing this, the commanding UE shall generate a 128-bit Nonce_2 value. With KD, Nonce_2 and Nonce_1 received in the DIRECT_COMMUNICATION_REQUEST or DIRECT_REKEYING_REQUEST message, the commanding UE shall derive KD- sess as specified in 3GPP TS 33.303 [6].\nThen, the UE shall construct a DIRECT_SECURITY_MODE_COMMAND message with the following:\n-\tNonce_2 IE set to Nonce_2;\n-\tthe LSB of KD-sess ID IE set to indicate the least significant 8-bits of KD-sess ID;\n-\tthe UE Security Capabilities IE set to the UE Security Capabilities received in the DIRECT_COMMUNICATION_REQUEST message or DIRECT_REKEYING_REQUEST; and\n-\tthe Chosen Algorithms IE set to the algorithms to be used for ciphering and integrity protection.\nIf the DIRECT_SECURITY_MODE_COMMAND message is used between a remote UE and a ProSe UE-to-network relay UE and the ProSe UE-to-network relay UE received the KD Freshness parameter from the PKMF, then the ProSe UE-to-network relay UE shall include the following additional parameters in the DIRECT_SECURITY_MODE_COMMAND message to create a new KD:\n-\tthe GPI IE containing the GPI payload if it was received from the ProSe Key Management Function (PKMF);\n-\tthe KD Freshness IE set to the KD Freshness parameter received from the PKMF; and\n-\tthe MSB of KD ID IE set to the MSB of KD ID of the new KD.\nIf the DIRECT_SECURITY_MODE_COMMAND message is used for isolated one-to-one ProSe direct communication, then the commanding UE shall include the following additional parameters in the DIRECT_SECURITY_MODE_COMMAND message in order to create a new KD:\n-\tthe User Info IE set to the User Info received from upper layers;\n-\tthe MSB of KD ID IE set to the MSB of KD ID of the new KD; and\n-\tthe Signature IE set to the ECCSI signature value calculated with the following information elements, as specified in 3GPP TS 33.303 [6]:\n-\tUser Info;\n-\tNonce_1; and\n-\tthe Encrypted Payload IE set to the SAKKE payload generated as specified in 3GPP TS 33.303 [6].\nThe commanding UE shall select the integrity protection and ciphering algorithms that will be used and include these choices in the Chosen algorithms IE in the DIRECT SECURITY MODE COMMAND message. The UE shall include the received UE security capabilities that was present in the DIRECT_COMMUNICATION_REQUEST or a DIRECT_REKEYING_REQUEST message that triggered the DIRECT SECURITY MODE COMMAND message.\nThe commanding UE shall send the DIRECT SECURITY MODE COMMAND message unciphered, but shall integrity protect the message with the new security context. After sending the DIRECT_SECURITY_MODE_COMMAND message, the commanding UE shall start timer T4111 (see figure 10.4.5.2.1).\nFigure 10.4.5.2.1 illustrates the Direct Security mode control procedure, which involves the use of a security gateway to establish a secure connection between the network and the cloud. The figure shows the various steps involved in the process, including the authentication and authorization of users, the encryption of data, and the establishment of a secure tunnel for communication. The figure also highlights the role of the security gateway in ensuring the integrity and confidentiality of data transmitted over the network.\nFigure 10.4.5.2.1:  Direct Security mode control procedure\nUpon receipt of the DIRECT_SECURITY_MODE_COMMAND message, the peer UE shall check whether the security mode command can be accepted or not. This is done by performing the integrity check of the message and by checking that the received UE security capabilities have not been altered compared to the latest values that the peer UE sent to the commanding UE in the DIRECT_COMMUNICATION_REQUEST or DIRECT_REKEYING_REQUEST message.\nIn order to check the integrity, the peer UE needs to create the security context as described in 3GPP TS 33.303 [6]. If the MSB of KD ID were included in the DIRECT_SECURITY_MODE_COMMAND message then the peer UE shall take one of the following two actions:\n-\tIf performing isolated one-to-one ProSe direct communication, the peer UE shall first check the signature included in the SIGN IE of the DIRECT SECURITY MODE COMMAND and then obtain the new KD from the Encrypted Payload IE; or\n-\tIf the peer UE is a remote UE that has received the DIRECT_SECURITY_MODE_COMMAND message from a ProSe UE-to-network relay UE, it shall first replace its PRUK ID and PRUK if a GPI IE was included in the DIRECT_SECURITY_MODE_COMMAND. Finally, the UE shall derive a new KD, as described in 3GPP TS 33.303 [6].\nIf MSB of KD ID was not included in the DIRECT_SECURITY_MODE_COMMAND, then the peer UE shall use either the existing KD indicated by the KD ID included in the DIRECT_COMMUNICATION_REQUEST or the currently used one.\nThe peer UE shall then derive the KD-sess based on the KD-sess ID in the same way as the commanding UE. Finally the peer UE shall use the algorithms indicated in the Chosen Algorithms IE.\nIf the DIRECT_SECURITY_MODE_COMMAND message can be accepted, the peer UE shall send a DIRECT_SECURITY_MODE_COMPLETE message ciphered and integrity protected with the new security context. The DIRECT_SECURITY_MODE_COMPLETE message shall include the 16 least significant bits of the KD ID if the initiating UE included the MSB of KD ID in the DIRECT_SECURITY_MODE_COMMAND message.\nFrom this time onward the peer UE shall protect all signalling messages and user data with the new security context.\nUpon receipt of the DIRECT_SECURITY_MODE_COMPLETE message, the commanding UE shall stop timer T4111. If an LSB of KD ID IE was included in the message, the commanding UE uses this and the MSB of KD ID it previously sent to form the KD ID of the new KD. From this time onwards the commanding UE shall protect all signalling messages and user data with the new security context.\nIf the DIRECT_SECURITY_MODE_COMMAND message cannot be accepted, the peer UE shall send a DIRECT_SECURITY_MODE_REJECT message. The DIRECT_SECURITY_MODE_REJECT message contains a PC5 Signaling Protocol Cause Value IE indicating one of the following cause values:\n#7:\tUE security capabilities mismatch;\n#8:\tUnspecified error; or\n#9:\tAuthentication synchronisation error.\nIf the DIRECT_SECURITY_MODE_COMMAND message cannot be accepted due to a synchronisation error when processing the authentication vector contained in the GPI payload sent by the ProSe UE-to-network relay UE to the remote UE, then the peer UE shall include the RAND and AUTS parameters in the DIRECT_SECURITY_MODE_ REJECT message.\nUpon receipt of the DIRECT_SECURITY_MODE_REJECT message, the commanding UE shall stop timer T4111. If the PC5 Signaling Protocol Cause Value IE indicates a synchronisation error and the message contained a RAND and an AUTS, then a ProSe UE-to-network relay may fetch a fresh KD from the PKMF by sending a Key Request message including RAND and AUTS as specified in 3GPP TS 33.303 [6]. Otherwise the commanding UE shall abort the ongoing procedure that triggered the initiation of the direct security mode control procedure, as specified in subclauses 10.4.2 or 10.4.8.\n10.4.5.6\tAbnormal cases\nIf timer T4111 expires, then\n-\tif the direct security mode control procedure is triggered by a DIRECT_COMMUNICATION_REQUEST message, the commanding UE shall discard any derived keys with Nonce_1 and initiate the transmission of the DIRECT_COMMUNICATION_REJECT message with the PC5 Signaling Protocol Cause Value IE set to #10 \"non-responsive peer during the direct security mode procedure\"; or\n-\tif the direct security mode control procedure is triggered by a DIRECT_REKEYING_REQUEST message, the commanding UE shall continue to use old keys until those keys are no longer valid.\nIf the DIRECT_SECURITY_MODE_COMMAND message is malformed, the peer UE shall discard the message.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.4.6\tIP Address configuration",
                            "text_content": "The IP address configuration procedure is performed after the establishment of the direct link to enable IP connectivity between the UEs at each end of the direct link.\nWhen the IP address configuration procedure for a remote UE completes, the ProSe UE-to-network relay UE shall perform the Remote UE report procedure as specified in 3GPP TS 24.301 [11].\nWhen neither of the two UEs on the direct link acts as a ProSe UE-to-network relay, the two UEs shall select the IP version (IPv4 or IPv6) to be used based on the following rules:\n-\tif  the target UE in the direct link setup procedure (see subclause 10.4.2) has indicated \"DHCPv4 Server\" in the IP Address Config IE, then the initiating UE in the direct link setup procedure (see subclause 10.4.2) shall initiate the IPv4 address configuration with DHCPv4 procedure acting as a DHCP client;\n-\tif the target UE in the direct link setup procedure has indicated \"IPv6 Router\" in the IP Address Config IE , then the initiating UE in the direct link setup procedure  shall initiate the IPv6 address configuration with IPv6 stateless address auto-configuration acting as an IPv6 host;\n-\tif the target UE in the direct link setup procedure has indicated \"DHCPv4 Server & IPv6 Router\" in the IP Address Config IE, then the initiating UE in the direct link setup procedure shall choose either IP version and initiate the address configuration procedure, acting as a client or host;\n-\tif the target UE in the direct link setup procedure has indicated \"address allocation not supported\" in the IP Address Config IE and the initiating UE has indicated \"DHCPv4 Server\", \"IPv6 Router\" or \"DHCPv4 Server & IPv6 Router\" in the IP Address Config IE, then the  target UE shall:\na)\tinitiate the IPv4 address configuration with DHCPv4 procedure acting as a DHCP client, if the initiating UE has indicated \"DHCPv4 Server\";\nb)\tinitiate the IPv6 address configuration with IPv6 stateless address auto-configuration acting as an IPv6 host if the initiating UE has indicated \"IPv6 Router\"; and\nc)\tchoose either IP version and initiate the corresponding IP address configuration procedure as a client or host, if if the other UE has indicated \"DHCPv4 Server & IPv6 Router\"; and\n-\tif both of the UEs has indicated \"address allocation not supported\" in the IP Address Config IE, then the UEs shall use IPv6 link-local addresses formed locally as defined in RFC 4862 [15].\nWhen one of the two UEs on the direct link acts as a ProSe UE-to-network relay, the two UEs shall select the IP version (IPv4 or IPv6) to be used based on the following rules\n-\tif the ProSe UE-to-network relay UE has indicated \"DHCPv4 Server\" in the IP Address Config IE, the remote UE shall initiate the IPv4 address configuration with DHCPv4 procedure acting as a DHCP client;\n-\tif the ProSe UE-to-network relay UE has indicated \"IPv6 Router\" in the IP Address Config IE, the remote UE shall initiate the IPv6 address configuration with IPv6 stateless address auto-configuration acting as an IPv6 host; and\n-\tif the ProSe UE-to-network relay UE has indicated \"DHCPv4 Server & IPv6 Router\" in the IP Address Config IE, the remote UE shall choose the IP version and initiate the corresponding IP address configuration procedure as a client or host. Especially, if the remote UE intends to use the ProSe UE-to-network relay UE for mission critical communication (e.g. MCPTT), the remote UE shall initiate the IPv6 stateless address auto-configuration acting as an IPv6 host.\nThe IPv4 address configuration with DHCPv4 shall be carried out as follow:\n1.\tThe DHCP client sends a DHCPDISCOVER message;\n2.\tThe DHCP server sends the DHCPOFFER message with the assigned IPv4 address for the client. The IPv4 address provided shall correspond to a local IPv4 address range configured in the DHCP server;\n3.\tWhen the DHCP client receives the lease offer, it sends a DHCPREQUEST message containing the received IPv4 address.\n4.\tThe DHCP server sends a DHCPACK message to the client UE. This message includes the lease duration and any other configuration information that the client might have requested.\n5.\tOn receiving the DHCPACK message, the IPv4 address configuration is completed.\nNOTE:\tThe DHCPv4 client may skip the DHCPv4 Discovery phase, and send DHCPv4 Request message in broadcast as the first message in accordance with the DHCPv4 renewal process.\nIf the direct link is setup for one-to-one communication between a remote UE and a UE-to-network relay UE, after the remote UE releases the IPv4 address using DHCPv4 or the IPv4 address lease time expires, the ProSe UE-to-network relay UE shall wait for a relay implementation specific time before allocating the same IPv4 address to another remote UE.\nThe IPv6 stateless address auto-configuration protocol procedure shall be carried out as follow:\n1.\tthe UE acting as an IP Host shall send a Router Solicitation message in order to solicit a Router Advertisement message as specified in IETF RFC 4862 [15].\n2.\tUpon receiving the Router Solicitation message, the other UE shall send an IPv6 Router Advertisement message as specified in IETF RFC 4862 [15], acting as an advertising interface as specified in IETF RFC 4861 [33]. The Router Advertisement messages shall contain an IPv6 prefix, which is to be combined with the interface identifier to form the IPv6 address.\n3.\tThe UE which receives the Router advertisement message retrieves the router's address from the Source IP address field of the message, and formed its own IP address with the prefix and the interface identifier as specified in IETF RFC 4862 [15].\nIf the direct link is setup for one-to-one communication between a remote UE and a UE-to-network relay, the UE-to-network relay shall obtain the IPv6 prefix assigned to the remote UE via prefix delegation function from the network as defined in 3GPP TS 23.401 [34] before sending the IPv6 prefix to the remote UE. After the remote UE receives the Router Advertisement message, it constructs a full IPv6 address via IPv6 Stateless Address auto-configuration in accordance with IETF RFC 4862 [15]. However, the remote UE shall not use any identifiers defined in TS 23.003 [4] as the basis for generating the interface identifier. For privacy, the remote UE may change the interface identifier used to generate the full IPv6 address, as defined in 3GPP TS 23.221 [35] without involving the network. The remote UE shall use the auto-configured IPv6 address while sending packets in this implicitly created PDN connection.\nIf the direct link is setup for one-to-one communication between a remote UE and a UE-to-network relay and support for mission critical applications and policy control for remote UEs is required, the remote UE shall be assigned a /64 IPv6 Prefix from a shorter IPv6 prefix by the UE-to-network relay.\nNOTE:\tIn order to support policy control per remote UE, the assignment of a /64 IPv6 Prefix from a shorter IPv6 prefix by the UE-to-network relay is used. The support of the extended TFT filter format including the TFT packet filter attribute Local Address and Mask, as defined in 3GPP TS 24.008 [30], is needed in the UE-to-network relay and the network.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.4.7\tProSe Per-Packet Priority for one-to-one ProSe direct communication",
                            "text_content": "When receiving the user data from upper layers to be sent over a direct link, the transmitting UE shall associate each outgoing protocol data unit with one of eight possible values to indicate the required ProSe Per-Packet Priority related to the lower layer handling of this packet data unit. The ProSe Per-Packet Priority is selected by the application layer based on criteria that are outside the scope of this specification, and is independent of the Layer 2 destination address used for this packet data unit.\nThe UE shall associate any outgoing PC5 signalling message with the single ProSe Per-Packet Priority value provisioned for PC5signall ing messages.\nFor unicast uplink traffic, the ProSe UE-to-network relay uses the uplink TFTs to select the uplink EPS bearers for relayed uplink packets independently from the ProSe Per-Packet Priority applied over PC5 by remote UEs.\nFor unicast downlink traffic the ProSe UE-to-network relay maps the QCI of the EPS bearer into a ProSe Per-Packet Priority value to be applied for the downlink relayed unicast packets over PC5. The mapping rules are provisioned in the ProSe UE-to-network relay.\nNOTE:\tdownlink traffic on EPS bearers associated with the same QCI, but different ARP values, is assigned the same ProSe Per-Packet Priority over PC5.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.4.8\tDirect link rekeying procedure",
                            "text_content": "This procedure is used to refresh the security context used between two UEs on an established direct link.\nThe UE sending the DIRECT_REKEYING_REQUEST message is called the \"initiating UE\"and the other UE is called the \"target UE\".\nThis procedure triggers initiation of a direct security mode control procedure by the target UE. If the ProSe UE-to-network relay UE wants to initiate this procedure to refresh KD, it shall use a DIRECT_REKEYING_TRIGGER message to trigger the remote UE to initiate this procedure from the other direction.\nA UE shall initiate the direct link rekeying procedure in any of the following cases:\na)\tthe session key KD-sess used to protect direct link communication is going to expire and needs to be refreshed and neither timer T4111 nor T4112 are running; or\nb)\tthe UE wants to refresh KD and neither timer T4111 nor T4112 are running.\nThe initiating UE shall generate a new 128-bit Nonce_1 value and the most significant 8-bits of the KD-sess ID. The UE shall generate a DIRECT_REKEYING_REQUEST message with the following:\n-\ta Nonce_1 IE set to the nonce value provided by the initiating UE for the purpose of session key establishment over this direct link;\n-\ta UE Security Capabilities IE set to indicate the list of algorithms that the initiating UE supports for the security establishment of this direct link;\n-\tan MSB of KD-sess ID IE set to the most significant 8-bits of the KD-sess ID;\n-\tOptionally, an Auth Flag IE set to the value indicating the KD to be refreshed, if the UE wants to refresh KD; and\n-\tOptionally, a PRUK ID IE if the initiating UE is a remote UE towards a ProSe UE-to-network relay UE.\nA UE initiates the direct link rekeying procedure by sending a DIRECT_REKEYING_REQUEST message to the target UE and starting timer T4112 (see figure 10.4.8.2.1).\nFigure 10.4.8.2.1 illustrates the direct link rekeying procedure, which involves the use of a cryptographic key exchange to secure communication between two parties. The figure shows the process of key generation, distribution, and rekeying, highlighting the importance of secure communication in modern telecommunication networks. Key components include the initiator and responder, as well as the key exchange protocol used to ensure confidentiality and integrity of data transmitted.\nFigure 10.4.8.2.1: Direct link rekeying procedure\nIf the initiating UE is a ProSe UE-to-network relay UE, the ProSe UE-to-network relay UE wishes to refresh KD used on an established link between the ProSe UE-to-network relay UE and the remote UE, and there is no pending direct link rekeying procedure initiated by the remote UE, the ProSe UE-to-network relay UE  shall send a DIRECT_REKEYING_TRIGGER message with the format specified in subclause 11.4.17 to trigger the remote UE to initiate its own direct link rekeying procedure and start timer T4113, as shown in figure 10.4.8.2.2.\nUpon receiving a DIRECT_REKEYING_TRIGGER message, the remote UE shall:\n-\tif timer T4112 is not running, initiate a direct link rekeying procedure to refresh KD as described above; and\n-\tif timer T4112 is running, discard the DIRECT_REKEYING_TRIGGER message.\nNOTE:\tIf timer T4112 is running at the remote UE, the ProSe UE-to-network relay UE will use the direct link rekeying procedure already initiated by the remote UE to refresh KD.\nOnce the ProSe UE-to-network relay received the DIRECT_REKEYING_REQUEST message, the T4113 timer shall be stopped.\n\nFigure 10.4.8.2.2 depicts a Direct Link Rekeying procedure initiated by a ProSe UE-to-network relay UE to refresh Key D. The figure illustrates the process of rekeying, which involves exchanging cryptographic keys between the UE and the network, ensuring secure communication. Key components include the ProSe UE, network relay, and the rekeying process itself. The diagram highlights the importance of secure key exchange in maintaining data integrity and confidentiality in ProSe communication networks.\nFigure 10.4.8.2.2: Direct link rekeying procedure triggered by a ProSe UE-to-network relay UE to refresh KD\nIf there is no active timer T4112 running, the target UE shall process the received DIRECT_REKEYING_REQUEST message and initiate a direct security mode control procedure acting as the commanding UE as described in subclause 10.4.5.2.\nIf the timer T4112 is running in the target UE, then:\n-\tif the target UE is a ProSe UE-to-network relay UE, it shall stop timer T4112 and initiate a direct security mode control procedure acting as the commanding UE as described in subclause 10.4.5.2; and\n-\tif the target UE is neither a remote UE nor a ProSe UE-to-network relay UE, and the Nonce_1 value received in the DIRECT_REKEYING_REQUEST message is larger than the Nonce_1 value locally generated (and included in the last DIRECT_REKEYING_REQUEST message sent by the target UE), the target UE shall stop timer T4112 and initiate a direct security mode control procedure acting as the commanding UE as described in subclause 10.4.5.2.\nWhen the target UE is a ProSe UE-to-network relay UE, the ProSe UE-to-network relay UE shall trigger a Key Request procedure to the PKMF (see 3GPP TS 33.303 [6]), before initiating the direct security mode control procedure if one of the following conditions are met:\n-\tthe Auth Flag IE is included in the DIRECT_REKEYING_REQUEST message; or\n-\tthe Auth Flag IE is not included in the DIRECT_REKEYING_REQUEST message but the ProSe UE-to-network relay UE wants to refresh KD.\nUpon completion of the direct security mode control procedure, i.e. upon receiving a DIRECT_SECURITY_MODE_COMPLETE message, the target UE shall send a DIRECT_REKEYING_RESPONSE message with the format specified in subclause 11.4.16, to notify the initiating UE of the completion of this direct link rekeying procedure.\n10.4.8.4\tDirect link rekeying procedure completion by the initiating UE\nUpon the reception of a DIRECT_REKEYING_RESPONSE message, the initiating UE shall stop timer T4112.\nA remote UE that receives a DIRECT_REKEYING_REQUEST message shall ignore the message if timer T4112 is running. Also, if there is no timer T4112 running but the remote UE wants to refresh KD, the UE shall ignore the received DIRECT_REKEYING_REQUEST message and act as the new initiating UE and initiate the direct link rekeying procedure to refresh the KD as described in subclause 10.4.8.2.\nOther UEs shall ignore a DIRECT_REKEYING_REQUEST message if timer T4112 is running and the Nonce_1 value received in the DIRECT_REKEYING_REQUEST message is not larger than the Nonce_1 value locally generated (and included in the last DIRECT_REKEYING_REQUEST message sent by the target UE).\n10.4.8.6\tAbnormal cases\nIf timer T4112 expires, the initiating UE shall initiate the transmission of the DIRECT_REKEYING_REQUEST message again and restart timer T4112. If no response is received from the target UE after reaching the maximum number of allowed retransmissions, the initiating UE shall abort the direct link rekeying procedure and initiate the direct link release procedure (see subclause 10.4.4). Additionally, if the initiating UE is a remote UE, it shall initiate the relay reselection procedure as specified in subclause 10A.2.13.\nNOTE:\tThe maximum number of allowed retransmissions is UE implementation specific.\nIf the DIRECT_REKEYING_REQUEST message is malformed, the target UE shall discard the message.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "10.5\tTMGI monitoring request procedure",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "10.5.1\tGeneral",
                            "text_content": "The purpose of the TMGI monitoring request procedure is for the remote UE to obtain a ProSe Layer 2 Group ID from the ProSe UE-to-network relay UE for receiving the MBMS content for the corresponding TMGI over PC5 interface or for the remote UE to inform the ProSe UE-to-network relay UE to forward the MBMS content for the corresponding TMGI.\nThe remote UE in this procedure shall be a ProSe-enabled Public Safety UE and authorised to act as a remote UE towards a ProSe UE-to-network relay UE based on the service authorisation procedure as specified in clause 5. The ProSe UE-to-network relay UE in this procedure shall be a ProSe-enabled Public Safety UE and authorised to act as a ProSe UE-to-network relay UE based on the service authorisation procedure as specified in clause 5.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.5.2\tTMGI monitoring request procedure initiation by the remote UE",
                            "text_content": "Before initiating the TMGI monitoring request procedure, the remote UE has successfully discovered the ProSe UE-to-network relay UE and obtained the Layer 2 ID of the ProSe UE-to-network relay UE as described in subclause 10A.2. The remote UE has also obtained TMGI and MBMS SAIs from a group communication application to receive related MBMS content (e.g. as specified in 3GPP TS 23.179 [38]).\nThe remote UE shall initiate a TMGI monitoring request procedure:\na)\twhen the remote UE is triggered by an upper layer application to receive the MBMS content for a given TMGI and there is no corresponding TMGI monitoring refresh timer T4104 assigned by the ProSe UE-to-network relay UE;\nb)\twhen the TMGI monitoring refresh timer T4104 assigned by the ProSe UE-to-network relay UE has expired and the request from the upper layer to receive the MBMS content for a given TMGI is still in place;\nc)\twhen the remote UE receives a request from an upper layer application to change the requested ProSe Per-Packet Priority associated with the TMGI of an MBMS content that the remote UE is currently receiving; or\nd)\twhen the remote UE receives a request from an upper layer application to change the requested MBMS SAI list associated with the TMGI of an MBMS content that the remote UE is currently receiving.\nThe remote UE shall initiate the TMGI monitoring request procedure by sending a TMGI_MONITORING_REQUEST with:\n-\tthe TMGI set to the TMGI received from the application layer;\n-\tthe MBMS SAI list included the TMGI corresponding MBMS SAIs received from the application layer; and\n-\tthe Requested ProSe Per-Packet Priority set to the ProSe Per-Packet Priority value mapped from the priority value associated with the TMGI from the application layer.\nFigure 10.5.2.1 illustrates the TMGI monitoring request procedure, which involves the transmission of a monitoring request from the network operator to the service provider. The figure shows the process flow, including the initiation of the request by the network operator, the forwarding of the request to the service provider, and the response from the service provider. Key components include the network operator's TMGI monitoring system, the service provider's monitoring system, and the communication channels between the two systems. The figure highlights the importance of effective monitoring in ensuring network quality and performance.\nFigure 10.5.2.1: TMGI monitoring request procedure\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.5.3\tTMGI monitoring request procedure accepted by the ProSe UE-to-network relay UE",
                            "text_content": "Upon receiving a TMGI_MONITORING_REQUEST, the ProSe UE-to-network relay UE shall store the TMGI and the MBMS SAIs received in the TMGI_MONITORING_REQUEST and check whether at least one of the MBMS SAIs is included in the MBMS SAI list of the serving cell. If there is no MBMS SAI list of the serving cell, the ProSe UE-to-network relay UE retrieves the MBMS SAI list from the system information of the serving cell as specified in 3GPP TS 36.331 [12].\nIf the MBMS SAI check indicates at least one of the MBMS SAIs is included in the MBMS SAI list of the serving cell, the ProSe UE-to-network relay UE shall monitor the TMGI received in the TMGI_MONITORING_REQUEST in the MCCH channel of the serving cell as specified in 3GPP TS 36.331 [12].\nIf the MBMS SAI check indicates none of the MBMS SAIs is included in the MBMS SAI list of the serving cell, the ProSe UE-to-network relay UE shall not monitor the TMGI received in the TMGI_MONITORING_REQUEST in the MCCH channel of the serving cell as specified in 3GPP TS 36.331 [12].\nFor the receiving TMGI, the ProSe UE-to-network relay UE shall allocate a ProSe Layer 2 Group ID which is neither provisioned for one-to-many direct communication nor used for other TMGI(s). The ProSe UE-to-network relay UE shall also allocate a value for TMGI monitoring refresh timer T4104 to the remote UE, and start a timer T4105. For a given TMGI, the timer T4105 shall be longer than the TMGI monitoring refresh timer T4104.\nFor the receiving Requested ProSe Per-Packet Priority, the ProSe UE-to-network relay UE shall associate the ProSe Per-Packet Priority value with the receiving TMGI. If there is only one ProSe Per-Packet Priority value associated with the receiving TMGI, the ProSe UE-to-network relay UE shall use the ProSe Per-Packet Priority value to transmit the relayed MBMS traffic corresponding to the TMGI over PC5. If there are several different ProSe Per-Packet Priority values associated with the receiving TMGI, which ProSe Per-Packet Priority value will be used to transmit the TMGI corresponding MBMS traffic over PC5 is based on ProSe UE-to-network relay UE implementation.\nThen the ProSe UE-to-network relay UE shall send a TMGI_MONITORING_RESPONSE with:\n-\tthe ProSe Layer2 Group ID set to the allocated ProSe Layer 2 Group ID as the link layer identifier of the group for transmitting the MBMS content corresponding to the TMGI received in the TMGI_MONITORING_REQUEST;\n-\tthe TMGI monitoring refresh timer T4104 set to the T4104 timer value allocated by the ProSe UE-to-network relay UE for the TMGI received in the TMGI_MONITORING_REQUEST; and\n-\tthe SAI Indicator set to \"true\" if the MBMS SAI check indicates at least one of the MBMS SAIs is included in the MBMS SAI list of the serving cell, set to \"false\" if the MBMS SAI check indicates none of the MBMS SAIs is included in the MBMS SAI list of the serving cell.\nNOTE 1:\tIf different ProSe UE-to-network relay UE allocates the same ProSe Layer 2 Group ID for MBMS content transmitting, the remote UE can use the Source Layer-2 ID (i.e. ProSe Relay UE ID) to distinguish whether the MBMS content is the requested MBMS content or not. If the Source Layer-2 ID is different from the ProSe Relay UE ID of the selected ProSe UE-to-network relay UE, the remote UE can just discard the MBMS content from this Source Layer-2 ID.\nNOTE 2:\tThe applicable action when the remote UE receives a TMGI_MONITORING_RESPONSE with the SAI Indicator set to \"false\" is up to UE implementation (e.g. keep the currently selected ProSe UE-to-network relay UE or reselect another ProSe UE-to-network relay UE).\nIf timer T4105 expires, the ProSe UE-to-network relay UE shall remove the TMGI and the MBMS SAIs received in the TMGI_MONITORING_REQUEST.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.5.4\tTMGI monitoring request procedure completion by the remote UE",
                            "text_content": "Upon receiving a TMGI_MONITORING_RESPONSE, the UE shall, for the ProSe Layer2 Group ID received in the TMGI_MONITORING_RESPONSE, stop the TMGI monitoring refresh timer T4104 if running and start the TMGI monitoring refresh timer T4104 with the received value.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.5.5\tAbnormal cases",
                            "text_content": "The following abnormal cases can be identified:\na)\tNo response from the ProSe UE-to-network relay UE after the TMGI_MONITORING_REQUEST has been successfully delivered\nThe remote UE shall retransmit the TMGI_MONITORING_REQUEST.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are UE implementation specific.\nb)\tIndication from upper layers that the request to receive the MBMS content for a given TMGI is no longer in place after sending the TMGI_MONITORING_REQUEST, but before the TMGI monitoring request procedure is completed\nThe remote UE shall discard the TMGI_MONITORING_RESPONSE received from the ProSe UE-to-network relay UE and then abort the procedure.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "10.6\tCell ID announcement request procedure",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "10.6.1\tGeneral",
                            "text_content": "The purpose of the cell ID announcement request procedure is for the remote UE to obtain ECGI of the cell serving the ProSe UE-to-network relay.\nThe remote UE in this procedure shall be a ProSe-enabled Public Safety UE and is authorised to act as a remote UE towards a ProSe UE-to-network relay UE based on the service authorisation procedure as specified in clause 5. The ProSe UE-to-network relay UE in this procedure shall be a ProSe-enabled Public Safety UE and is authorised to act as a ProSe UE-to-network relay UE based on the service authorisation procedure as specified in clause 5.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.6.2\tCell ID announcement request procedure initiation by the remote UE",
                            "text_content": "Before initiating the cell ID announcement request procedure, a direct link has been successfully established between the remote UE and the ProSe UE-to-network relay UE.\nThe remote UE shall initiate a cell ID announcement request procedure:\na)\twhen the remote UE is triggered by an upper layer application to report ECGI of the serving cell to the application server, but cannot receive the PC5_DISCOVERY message for Relay Discovery Additional Information from the ProSe UE-to-network relay UE, or the ECGI is not included in the PC5_DISCOVERY message for Relay Discovery Additional Information from the ProSe UE-to-network relay UE; or\nb)\twhen the ECGI announcement request refresh timer T4106 expires and the remote UE still needs to obtain ECGI of the cell serving the ProSe UE-to-network relay.\nThe remote UE shall generate a CELL_ID_ANNOUNCEMENT_REQUEST message and pass this message to the lower layers for transmission along with the remote UE's Layer 2 ID (for unicast communication) and the ProSe UE-to-network relay UE's Layer 2 ID (for unicast communication).\nFigure 10.6.2.1 illustrates the cell ID announcement request procedure, which is a crucial step in establishing communication between a mobile device and a base station in a cellular network. The figure shows the process of a mobile device requesting a unique cell ID from the base station, which is essential for accurate signal reception and transmission. The procedure involves several steps, including the mobile device sending a request for a cell ID, the base station responding with the requested cell ID, and the mobile device storing the cell ID for future use. This process ensures that mobile devices can efficiently communicate with the base station and access the network, enabling seamless connectivity and communication.\nFigure 10.6.2.1: Cell ID announcement request procedure\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.6.3\tCell ID announcement request procedure accepted by the ProSe UE-to-network relay UE",
                            "text_content": "Upon receiving a CELL_ID_ANNOUNCEMENT_REQUEST message, the ProSe UE-to-network relay UE shall allocate an ECGI announcement request refresh timer T4106 to the remote UE, and start a timer T4107. The timer T4107 shall be longer than the ECGI announcement request refresh timer T4106.\nThen the ProSe UE-to-network relay UE shall respond a CELL_ID_ANNOUNCEMENT_RESPONSE message with a ECGI announcement request refresh timer T4106 IE set to the T4106 timer value assigned by the ProSe UE-to-network relay UE.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.6.4\tCell ID announcement request procedure completion by the remote UE",
                            "text_content": "Upon receiving a CELL_ID_ANNOUNCEMENT_RESPONSE message, the UE shall start the ECGI announcement request refresh timer T4106 with the received value.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.6.5\tAbnormal cases",
                            "text_content": "If there is no response from the ProSe UE-to-network relay UE after the CELL_ID_ANNOUNCEMENT_REQUEST message has been successfully delivered, the remote UE shall retransmit the CELL_ID_ANNOUNCEMENT_REQUEST message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are UE implementation specific.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "10.7\tRemote UE information request procedure",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "10.7.1\tGeneral",
                            "text_content": "The purpose of the remote UE information request procedure is for the serving ProSe UE-to-network relay UE to obtain the information from the remote UE served by the relay. This procedure can only be initiated by the ProSe UE-to-network relay UE, over an established link between the remote UE and the ProSe UE-to-network relay UE.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.7.2\tRemote UE information request procedure initiation by the ProSe UE-to-network relay UE",
                            "text_content": "Before initiating the remote UE information request procedure, a direct link has been successfully established between the remote UE and the ProSe UE-to-network relay UE.\nThe ProSe UE-to-network relay UE shall generate a REMOTE_UE_INFO_REQUEST message containing the Remote UE Information Type IE set to the requested type of information as specified in subclause 11.4.18, and pass this message to the lower layers for transmission along with the remote UE's Layer 2 ID for unicast communication (i.e., ProSe UE ID) and the ProSe UE-to-network relay UE's Layer 2 ID for unicast communication (i.e., ProSe Relay UE ID).\nFigure 10.7.2.1 illustrates the remote user equipment (UE) information request procedure, which is a crucial step in establishing a connection between the UE and the network. The figure depicts the process in three main steps: the UE sends a request to the network, the network responds with the necessary information, and the UE acknowledges the receipt of the information. This procedure is essential for ensuring that the UE has the correct information to establish a connection and communicate effectively with the network. The figure also shows the role of the home subscriber server (HSS) in managing the UE's information and facilitating the request process.\nFigure 10.7.2.1: Remote UE information request procedure\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.7.3\tRemote UE information request accepted by the remote UE",
                            "text_content": "Upon receiving a REMOTE_UE_INFO_REQUEST message, the remote UE shall include the requested type of information in a REMOTE_UE_INFO_RESPONSE message, as specified in subclause 11.4.19.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.7.4\tRemote UE information request procedure completion by the ProSe UE-to-network relay UE",
                            "text_content": "Upon receiving a REMOTE_UE_INFO_RESPONSE message, the ProSe UE-to-network relay UE shall store the information provided by the remote UE temporarily so that the remote UE identity can be reported to the MME, as specified in 3GPP TS 24.301 [11].\nNOTE: \tAfter the ProSe UE-to-network relay UE reports the information of the remote UE to the MME, the stored remote UE information is deleted.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.7.5\tAbnormal cases",
                            "text_content": "If there is no response from the remote UE after the REMOTE_UE_INFO_REQUEST message has been successfully delivered, the ProSe UE-to-network relay UE shall retransmit the REMOTE_UE_INFO_REQUEST message.\nNOTE:\tThe timer to trigger retransmission and the maximum number of allowed retransmissions are UE implementation specific.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "10.8\tNon-IP data transport procedure",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "10.8.1\tGeneral",
                            "text_content": "The purpose of the non-IP data transport procedure is to transport, from the upper layers of a sending UE to the upper layers of the receiving UE, the following information over the PC5 interface:\n-\tnon-IP data; and\n-\tnon-IP type.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.8.2\tNon-IP data transmission over PC5",
                            "text_content": "Upon a request from upper layers to send a non-IP data of a non-IP type, the UE shall create a non-IP data PDU, shall set the non-IP payload field of the non-IP data PDU to the non-IP data provided by upper layers, and shall set the non-IP type field of the non-IP data PDU to the non-IP type provided by upper layers, as specified in subclause 11.5. The UE shall then pass the non-IP data PDU to the lower layers for transmission.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10.8.3\tNon-IP data reception over PC5",
                            "text_content": "Upon receiving a non-IP data PDU from the lower layers, the UE shall either:\n-\tcheck the non-IP type field in the non-IP data PDU and provide the non-IP data in the non-IP payload field of the non-IP data PDU to the corresponding upper layer entity; or\n-\tprovide the upper layers with the non-IP data in the non-IP payload field of the non-IP data PDU and with the non-IP type in the non-IP type field of the non-IP data PDU.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "10A\tProSe direct discovery for public safety use",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "10A.1\tOverview",
                    "description": "",
                    "summary": "",
                    "text_content": "This clause describes the procedures for ProSe direct discovery for public safety use at a ProSe-enabled public safety UE over the PC5 reference point.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "10A.2\tProcedures",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "10A.2.1\tGeneral",
                            "text_content": "The following procedures are defined for the ProSe direct discovery for public safety use:\n-\tannouncing UE procedure for UE-to-network relay discovery;\n-\tmonitoring UE procedure for UE-to-network relay discovery;\n-\tdiscoverer UE procedure for UE-to-network relay discovery;\n-\tdiscoveree UE procedure for UE-to-network relay discovery;\n-\tannouncing UE procedure for group member discovery;\n-\tmonitoring UE procedure for group member discovery;\n-\tdiscoverer UE procedure for group member discovery;\n-\tdiscoveree UE procedure for group member discovery;\n-\tannouncing UE procedure for UE-to-network relay discovery additional information; and\n-\tmonitoring UE procedure for UE-to-network relay discovery additional information;\nEach ProSe-enabled Public Safety UE needs to obtain the security parameters from the ProSe Key Management Function before participating in ProSe direct discovery for public safety use, as specified in 3GPP TS 33.303 [6]. For each given Relay Service Code in UE-to-network relay discovery or Discovery Group ID in group member discovery, the ProSe Key Management Function (PKMF) will provide the following in the security parameters:\n-\tPSDK (Public Safety Discovery Key) and the associated Expiry Time for this PSDK;\n-\tconfigurations to signal which combination of keys to be used for the discovery process; and\n-\toptionally, if DUCK is to be used, an indication of which PC5_DISCOVERY message fields shall be protected by the DUCK.\nAfter receiving the PSDK from the PKMF for the relay service or discovery group, the UE shall use it to derive specific DUIK, DUCK and DUSK needed to protect the ProSe direct discovery messages for the corresponding public safety use, as specified in 3GPP TS 33.303 [6].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10A.2.1A\tRadio resource selection",
                            "text_content": "The UE shall select the radio resource parameters to be used for ProSe direct discovery as follows:\n-\twhen the UE is served by E-UTRAN and intends to use the ProSe radio resources (i.e. carrier frequency) obtained from the serving cell,\n1)\tthe UE shall use the radio resource parameters indicated by the serving cell (same or different from that of the serving cell) as specified in 3GPP TS 36.331 [12], if the corresponding PLMN is authorised for ProSe direct discovery; and\n2)\taccording to the radio resources (i.e. carrier frequency) along with PLMN ID which the serving cell indicates as allowed for ProSe direct discovery as defined in 3GPP TS 36.331 [12], if the UE intends to use one of the radio resources not operated by the serving cell for ProSe direct discovery and the corresponding PLMN is authorised for ProSe direct discovery, the UE shall search for a cell with the indicated PLMN operating the indicated radio resources as defined in 3GPP TS 36.331 [12] and 3GPP TS 36.304 [23], and obtain the radio resource parameters for ProSe direct discovery from that cell, without performing PLMN selection; and\n-\twhen the UE is not served by E-UTRAN or when the UE is served by E-UTRAN and intends to use the provisioned ProSe radio resources (i.e. carrier frequency):\n1)\tif the UE can determine itself located in a geographical area, and the UE is provisioned with radio parameters for the geographical area, then the UE shall search for a cell with any PLMN operating the selected provisioned radio resources (i.e. carrier frequency) associated with that geographical area, and:\nNOTE:\tIt is out of scope of the present specification to define how the UE can locate itself in a specific geographical area. When the UE is in coverage of a 3GPP RAT it can for example use information derived from the serving PLMN. When the UE is not in coverage of a 3GPP RAT it can use other techniques as determined by local regulations.\ni)\tif the UE finds such a cell belonging to a PLMN in which the UE is authorised for ProSe direct discovery and the cell provides radio resource parameters for ProSe direct discovery, then the UE shall use the indicated radio resource parameters for ProSe direct discovery;\nii)\tif the UE finds such a cell but not in a PLMN authorised for ProSe direct discovery, then the UE shall not use the ProSe direct discovery in that carrier frequency; or\niii)\tif the UE does not find any such cell in any PLMN, then the UE shall use the provisioned radio resource parameters; or\n2)\telse the UE shall not initiate ProSe direct discovery.\nIf the UE is performing ProSe direct discovery using radio resource parameters associated with a geographical area and moves out of that geographical area, the UE shall perform ProSe direct discovery using new radio resource parameters selected for ProSe direct discovery as described in this subclause.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10A.2.2\tAnnouncing UE procedure for UE-to-network relay discovery",
                            "text_content": "The purpose of the announcing UE procedure for UE-to-network relay discovery is:\n-\tto enable a ProSe-enabled public safety UE to announce availability of a connectivity service provided by a UE-to-network relay of the ProSe-enabled public safety UE to other ProSe-enabled public safety UEs, upon a request from upper layers as defined in 3GPP TS 23.303 [2]; or\n-\tto enable a ProSe-enabled public safety UE to measure the PC5_DISCOVERY message signal strength between the ProSe-enabled public safety UE and the ProSe UE-to-network relay UE(s) for relay selection/reselection.\nThe UE is authorised to perform the announcing UE procedure for UE-to-network relay discovery if:\na)\tthe UE is authorised to act as a UE-to-network relay in the PLMN indicated by the serving cell as specified in clause 5, and\n-\tthe UE is served by E-UTRAN and the UE is authorised to perform ProSe direct discovery for public safety use announcing in the PLMN as specified in clause 5, and the lower layers indicate that discovery operation of a UE-to-network relay is supported; or\n-\tthe UE is authorised to perform ProSe direct discovery for public safety use announcing when not served by E-UTRAN as specified in clause 5 and intends to use the provisioned radio resources for UE-to-network relay discovery; and\nb)\tthe UE is configured with the Relay Service Code parameter identifying the connectivity service to be announced and with the User Info ID for the UE-to-network relay discovery parameter, as specified in clause 5;\notherwise the UE is not authorised to perform the announcing UE procedure for UE-to-network relay discovery.\nFigure 10A.2.2.2.1 illustrates the interaction of the UEs in the announcing UE procedure for UE-to-network relay discovery.\nFigure 10A.2.2 .2 .1 illustrates the process of a User Equipment (UE) discovering a network relay through a series of procedures. The figure shows the UE initiating the relay discovery process by sending a specific signaling message to the network. The network responds with a confirmation message, and the UE then proceeds to establish a connection with the relay. This process is crucial for enabling seamless communication between the UE and the network, particularly in scenarios where direct connectivity is not possible. The figure highlights the importance of efficient relay discovery mechanisms in modern communication systems.\nFigure 10A.2.2.2.1: Announcing UE procedure for UE-to-network relay discovery\nWhen the UE is triggered by an upper layer application to announce availability of a connectivity service provided by a UE-to-network relay, if the UE is authorised to perform the announcing UE procedure for UE-to-network relay discovery, then the UE:\na)\tif the UE is served by E-UTRAN, and the UE in EMM-IDLE mode needs to request resources for sending PC5_DISCOVERY messages for relay discovery for public safety as specified in 3GPP TS 36.331 [12], shall perform a service request procedure or tracking area update procedure as specified in 3GPP TS 24.301 [11];\nb)\tshall obtain a valid UTC time for the discovery transmission from the lower layers and generate the UTC-based counter corresponding to this UTC time as specified in subclause 12.2.2.18;\nc)\tshall generate a PC5_DISCOVERY message for UE-to-Network Relay Discovery Announcement according to subclause 11.2.5.1. In the PC5_DISCOVERY message for UE-to-Network Relay Discovery Announcement, the UE:\n1)\tshall set the ProSe Relay UE ID to a ProSe Relay UE ID used for ProSe direct communication for the connectivity service to be announced;\n2)\tshall set the Announcer Info parameter to the User Info ID for the UE-to-network relay discovery parameter, configured in clause 5;\n3)\tshall set the Relay Service Code parameter to the Relay Service Code parameter identifying the connectivity service to be announced, configured in clause 5;\n4)\tshall set the UTC-based counter LSB parameter to include the eight least significant bits of the UTC-based counter; and\n5)\tshall set the Resource Status Indicator bit of the Status Indicator parameter to indicate whether or not the UE has resources available to provide a connectivity service for additional ProSe-enabled public safety UEs;\nd)\tshall apply the DUIK, DUSK, or DUCK with the associated Encrypted Bitmask, along with the UTC-based counter to the PC5_DISCOVERY message for whichever security mechanism(s) configured to be applied, e.g. integrity protection, message scrambling or confidentiality protection of one or more above parameters, as specified in 3GPP TS 33.303 [6]; and\ne)\tshall pass the resulting PC5_DISCOVERY message for UE-to-Network Relay Discovery Announcement to the lower layers for transmission over the PC5 interface with an indication that the message is for relay discovery for public safety use.\nThe UE shall ensure that it keeps on passing the same PC5_DISCOVERY message and the indication that the message is for relay discovery for public safety use to the lower layers for transmission until the UE is triggered by an upper layer application to stop announcing availability of a connectivity service provided by a UE-to-network relay, or until the UE stops being authorised to perform the announcing UE procedure for UE-to-network relay discovery. How this is achieved is left up to UE implementation.\nWhen the UE is triggered by an upper layer application to stop announcing availability of a connectivity service provided by a UE-to-network relay, or when the UE stops being authorised to perform the announcing UE procedure for UE-to-network relay discovery, the UE shall instruct the lower layers to stop announcing.\nWhen the UE stops announcing, if the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10A.2.3\tMonitoring UE procedure for UE-to-network relay discovery",
                            "text_content": "The purpose of the monitoring UE procedure for UE-to-network relay discovery is:\n-\tto enable a ProSe-enabled public safety UE to become aware of proximity of a connectivity service provided by a UE-to-network relay, upon a request from upper layers as defined in 3GPP TS 23.303 [2]; or\n-\tto enable a ProSe-enabled public safety UE to perform measurements of signal strength of PC5_DISCOVERY messages from ProSe UE-to-network relay UE(s) for relay selection/reselection.\nThe UE is authorised to perform the monitoring UE procedure for UE-to-network relay discovery if:\na)\tthe following is true:\n1)\tthe UE is not served by E-UTRAN, is authorised to perform ProSe direct discovery for public safety use monitoring when the UE is not served by E-UTRAN as specified in clause 5, is authorised to act as a remote UE towards a UE-to-network relay as specified in clause 5 and is configured with the radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN;\n2)\tthe UE is served by E-UTRAN, is authorised to perform ProSe direct discovery for public safety use monitoring in at least one PLMN as specified in clause 5, is authorised to act as a remote UE towards a UE-to-network relay, and the lower layers indicate that discovery operation of a UE-to-network relay is supported; or\n3)\tthe UE is:\n-\tin EMM-IDLE mode, in limited service state as specified in 3GPP TS 23.122 [24], and the reason for the UE being in limited service state is one of the following:\ni)\tthe UE is unable to find a suitable cell in the selected PLMN as specified in 3GPP TS 36.304 [23];\nii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.008 [30]; or\niii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #7 \"EPS services not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #7 \"GPRS services not allowed\" as specified in 3GPP TS 24.008 [30]; and\n-\tauthorised to perform ProSe direct discovery for public safety use monitoring when the UE is not served by E-UTRAN as specified in clause 5, authorised to act as a remote UE towards a UE-to-network relay as specified in clause 5, and:\ni)\tconfigured with the radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN; or\nii)\tthe lower layers indicate that discovery operation of a UE-to-network relay is supported; and:\nNOTE 1:\tWhen the lower layers indicate that discovery operation of a UE-to-network relay is supported, the serving cell broadcasts a common radio resources pool for public safety discovery reception and the UE can use this common radio resources pool while in limited service state.\nb)\tthe UE is configured with the Relay Service Code parameter identifying the connectivity service to be monitored and with the IP version(s) to be used for the traffic of the connectivity service to be monitored, as specified in clause 5;\notherwise the UE is not authorised to perform the monitoring UE procedure for UE-to-network relay discovery.\nFigure 10A.2.3.2.1 illustrates the interaction of the UEs in the monitoring UE procedure for UE-to-network relay discovery.\nFigure 10A illustrates the monitoring procedure for User Equipment (UE) to network relay discovery, focusing on the UE-to-network relay discovery process. The figure depicts the interaction between the UE and the network, highlighting the steps involved in identifying and establishing a relay connection. Key components include the UE, network elements, and the relay discovery process. The figure emphasizes the importance of efficient relay discovery for enhancing network performance and reliability.\nFigure 10A.2.3.2.1: Monitoring UE procedure for UE-to-network relay discovery\nWhen the UE is triggered by an upper layer application to monitor proximity of a connectivity service provided by a UE-to-network relay; or when the UE has established a direct link with a ProSe UE-to-network relay UE as specified in subclause 10.4.2, and if the UE is authorised to perform the monitoring UE procedure for UE-to-network relay discovery, then the UE shall instruct the lower layers to start monitoring for PC5_DISCOVERY messages with an indication that the message is for relay discovery for public safety use.\nUpon reception of a PC5_DISCOVERY message for UE-to-Network Relay Discovery Announcement according to subclause 11.2.5.1, for the target Relay Service Code of the connectivity service which the UE is authorized to monitor, the UE shall use the associated DUSK, if configured, and the UTC-based counter obtained during the monitoring operation to unscramble the PC5_DISCOVERY message as described in 3GPP TS 33.303 [6]. Then, if a DUCK is configured, the UE shall use the DUCK and the UTC-based counter to decrypt the configured message-specific confidentiality-protected portion, as described in 3GPP TS 33.303 [6]. Finally, if a DUIK is configured, the UE shall use the DUIK and the UTC-based counter to verify the MIC field in the unscrambled PC5_DISCOVERY message for UE-to-Network Relay Discovery Announcement.\nNOTE 2:\tThe use of an erroneous UTC-based counter for processing the received PC5_DISCOVERY messages at the ProSe-enabled Public Safety UE can cause MIC check failure after DUIK is used for integrity check, and malformed contents after DUSK is used for unscrambling or DUCK is used for deciphering. How a ProSe-enabled Public Safety UE ensures the accuracy of the UTC-based counter is left to UE implementation.\nThen if:\n-\tthe Relay Service Code parameter of the PC5_DISCOVERY message for UE-to-Network Relay Discovery Announcement is the same as the Relay Service Code parameter configured as specified in clause 5 for the connectivity service being monitored; and\n-\tthe User Info ID of the UE-to-network relay is not configured as specified in clause 5 for the connectivity service being monitored, or the Announcer Info parameter of the PC5_DISCOVERY message for UE-to-Network Relay Discovery Announcement is the same as the User Info ID of the UE-to-network relay configured as specified in clause 5 for the connectivity service being monitored;\nthen the UE shall consider that the connectivity service the UE seeks to monitor has been discovered. In addition, the UE can measure the signal strength of the PC5_DISCOVERY message for UE-to-Network Relay Discovery Announcement for relay selection or reselection.\nWhen the UE is triggered by an upper layer application to stop monitoring proximity of a connectivity service provided by a UE-to-network relay, or when the UE stops being authorised to perform the monitoring UE procedure for UE-to-network relay discovery, the UE shall instruct the lower layers to stop monitoring.\nWhen the UE stops monitoring, if the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10A.2.4\tDiscoverer UE procedure for UE-to-network relay discovery",
                            "text_content": "The purpose of the discoverer UE procedure for UE-to-network relay discovery is:\n-\tto enable a ProSe-enabled public safety UE to solicit proximity of a connectivity service provided by a UE-to-network relay, upon a request from upper layers as defined in 3GPP TS 23.303 [2]; or\n-\tto enable a ProSe-enabled public safety UE to measure the PC5_DISCOVERY message signal strength between the ProSe-enabled public safety UE and the ProSe UE-to-network relay UE(s) for relay selection/reselection.\nThe UE is authorised to perform the discoverer UE procedure for UE-to-network relay discovery if:\na)\tthe following is true:\n1)\tthe UE is not served by E-UTRAN, is authorised to perform ProSe direct discovery for public safety use discoverer operation when the UE is not served by E-UTRAN as specified in clause 5, is authorised to act as a remote UE towards a UE-to-network relay as specified in clause 5 and is configured with the radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN;\n2)\tthe UE is served by E-UTRAN, is authorised to perform ProSe direct discovery for public safety use discoverer operation in the PLMN indicated by the serving cell as specified in clause 5, is authorised to act as a remote UE towards a UE-to-network relay, and the lower layers indicate that discovery operation of a UE-to-network relay is supported; or\n3)\tthe UE is:\n-\tin EMM-IDLE mode, in limited service state as specified in 3GPP TS 23.122 [24], and the reason for the UE being in limited service state is one of the following:\ni)\tthe UE is unable to find a suitable cell in the selected PLMN as specified in 3GPP TS 36.304 [23];\nii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.008 [30]; or\niii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #7 \"EPS services not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #7 \"GPRS services not allowed\" as specified in 3GPP TS 24.008 [30]; and\n-\tauthorised to perform ProSe direct discovery for public safety use discoverer operation when the UE is not served by E-UTRAN as specified in clause 5, authorised to act as a remote UE towards a UE-to-network relay as specified in clause 5, and:\ni)\tconfigured with the radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN; or\nii)\tthe lower layers indicate that discovery operation of a UE-to-network relay is supported and that the UE does not need to request resources for sending PC5_DISCOVERY messages for public safety as specified in 3GPP TS 36.331 [12]; and\nNOTE 1:\tWhen the lower layers indicate that discovery operation of a UE-to-network relay is supported and that the UE does not need to request resources for sending PC5_DISCOVERY messages for public safety as specified in 3GPP TS 36.331 [12], the serving cell broadcasts a common radio resources pool for public safety discovery transmission and the UE can use this common radio resources pool while in limited service state.\nb)\tthe UE is configured with the Relay Service Code parameter identifying the connectivity service to be solicited and with the User Info ID for the UE-to-network relay discovery parameter, as specified in clause 5;\notherwise the UE is not authorised to perform the Discoverer UE procedure for UE-to-network relay discovery.\nFigure 10A.2.4.2.1 illustrates the interaction of the UEs in the Discoverer UE procedure for UE-to-network relay discovery.\nFigure 10A.2.4 .2 .1 illustrates the Discoverer UE procedure for UE-to-network relay discovery, which is a crucial step in establishing a connection between a user equipment (UE) and a network. The figure depicts the process in which the UE initiates a discovery procedure to identify available network relays. These relays are strategically placed nodes that can enhance signal strength and coverage, ensuring seamless connectivity for the UE. The figure shows the interaction between the UE and the network, highlighting the importance of this discovery process in maintaining efficient communication networks.\nFigure 10A.2.4.2.1: Discoverer UE procedure for UE-to-network relay discovery\nFor PC5_DISCOVERY message signal strength measurement, the UE manages a periodic measurement timer T4110, which is used to trigger the periodic PC5_DISCOVERY message signal strength measurement between the UE and the ProSe UE-to-network relay UE with which the UE has a link established. It is started whenever the UE has established a direct link with a ProSe UE-to-network relay UE as specified in subclause 10.4.2 and restarted whenever the UE receives the PC5_DISCOVERY message for UE-to-Network Relay Discovery Response from the ProSe UE-to-network relay UE with which the UE has a link established.\nWhen the UE is triggered by an upper layer application to solicit proximity of a connectivity service provided by a UE-to-network relay, or when the periodic measurement timer T4110 expires, and if the UE is authorised to perform the discoverer UE procedure for UE-to-network relay discovery, then the UE:\na)\tif the UE is served by E-UTRAN, and the UE in EMM-IDLE mode needs to request resources for sending PC5_DISCOVERY messages for relay discovery for public safety as specified in 3GPP TS 36.331 [12], shall perform a service request procedure or tracking area update procedure as specified in 3GPP TS 24.301 [11];\nb)\tshall obtain a valid UTC time for the discovery transmission from the lower layers and generate the UTC-based counter corresponding to this UTC time as specified in subclause 12.2.2.18;\nc)\tshall generate a PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation according to subclause 11.2.5.1. In the PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation, the UE:\n1)\tshall set the Discoverer Info parameter to the User Info ID for the UE-to-network relay discovery parameter, configured in clause 5;\n2)\tshall set the Relay Service Code parameter to the Relay Service Code parameter identifying the connectivity service to be solicited, configured in clause 5;\n3)\tif the PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation is used to trigger the signal strength measurement for the PC5_DISCOVERY message from a specific ProSe UE-to-network relay UE with which the UE has a link established, shall set the ProSe Relay UE ID parameter to the ProSe Relay UE ID of that ProSe UE-to-network relay UE; and\n4)\tshall set the UTC-based counter LSB parameter to include the four least significant bits of the UTC-based counter;\nd)\tshall apply the DUIK, DUSK, or DUCK with the associated Encrypted Bitmask, along with the UTC-based counter to the PC5_DISCOVERY message for whichever security mechanism(s) configured to be applied, e.g. integrity protection, message scrambling or confidentiality protection of one or more above parameters, as specified in 3GPP TS 33.303 [6]; and\ne)\tshall pass the resulting PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation to the lower layers for transmission over the PC5 interface with an indication that the message is for relay discovery for public safety use.\nIf the PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation is used to solicit proximity of a connectivity service provided by a UE-to-network relay, the UE shall ensure that it keeps on passing the PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation and the indication that the message is for relay discovery for public safety use to the lower layers for transmission until the UE is triggered by an upper layer application to stop soliciting proximity of a connectivity service provided by a UE-to-network relay, or until the UE stops being authorised to perform the discoverer UE procedure for UE-to-network relay discovery. How this is achieved is left up to UE implementation.\nIf the PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation is used to trigger the PC5_DISCOVERY message signal strength measurement between the UE and the ProSe UE-to-network relay UE with which the UE has a link established, the UE shall start the retransmission timer T4109. If retransmission timer T4109 expires, the UE shall retransmit the PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation and restart timer T4109. If no response is received from the ProSe UE-to-network relay UE with which the UE has a link established after reaching the maximum number of allowed retransmissions, the UE shall trigger relay reselection procedure.\nNOTE 2:\tThe maximum number of allowed retransmissions is UE implementation specific.\nUpon reception of a PC5_DISCOVERY message for UE-to-Network Relay Discovery Response according to subclause 11.2.5.1, for the target Relay Service Code of the connectivity service which the UE is authorized to discover, the UE shall use the associated DUSK, if configured, and the UTC-based counter obtained during the reception operation to unscramble the PC5_DISCOVERY message as described in 3GPP TS 33.303 [6]. Then, if a DUCK is configured, the UE shall use the DUCK and the UTC-based counter to decrypt the configured message-specific confidentiality-protected portion, as described in 3GPP TS 33.303 [6]. Finally, if a DUIK is configured, the UE shall use the DUIK and the UTC-based counter to verify the MIC field in the unscrambled PC5_DISCOVERY message for UE-to-Network Relay Discovery Response.\nThen if:\n-\tthe Relay Service Code parameter of the PC5_DISCOVERY message for UE-to-Network Relay Discovery Response is the same as the Relay Service Code parameter of the PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation; and\n-\tthe User Info ID of the UE-to-network relay is not configured as specified in clause 5 for the connectivity service being solicited, or the Discoverer Info parameter of the PC5_DISCOVERY message for UE-to-Network Relay Discovery Response is the same as the User Info ID of the UE-to-network relay configured as specified in clause 5 for the connectivity service being solicited;\nthen the UE shall consider that the connectivity service the UE seeks to discover has been discovered. In addition, the UE can measure the signal strength of the PC5_DISCOVERY message for UE-to-Network Relay Discovery Response for relay selection or reselection. If the UE has received the PC5_DISCOVERY message for UE-to-Network Relay Discovery Response from the ProSe UE-to-network relay UE with which the UE has a link established, the UE shall stop the retransmission timer T4109, and start the periodic measurement timer T4110.\nWhen the UE is triggered by an upper layer application to stop soliciting for proximity of a connectivity service provided by a UE-to-network relay, or when the UE stops being authorised to perform the Discoverer UE procedure for UE-to-network relay discovery, the UE shall instruct the lower layers to stop the discoverer operation.\nWhen the UE stops discoverer operation, if the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10A.2.5\tDiscoveree UE procedure for UE-to-network relay discovery",
                            "text_content": "The purpose of the discoveree UE procedure for UE-to-network relay discovery is to enable a ProSe-enabled public safety UE with a UE-to-network relay to respond to solicitation from other ProSe-enabled public safety UEs on proximity of a connectivity service provided by the UE-to-network relay, upon a request from upper layers as defined in 3GPP TS 23.303 [2].\nThe UE is authorised to perform the discoveree UE procedure for UE-to-network relay discovery if:\na)\tthe UE is authorised to act as a UE-to-network relay in the PLMN indicated by the serving cell as specified in clause 5, and\n-\tthe UE is served by E-UTRAN and the UE is authorised to perform ProSe direct discovery for public safety use discoveree operation in the PLMN as specified in clause 5, and the lower layers indicate that discovery operation of a UE-to-network relay is supported; or-\tthe UE is authorised to perform ProSe direct discovery for public safety use discoveree operation when not served by E-UTRAN as specified in clause 5 and intends to use the provisioned radio resources for UE-to-network relay discovery; and\nb)\tthe UE is configured with the Relay Service Code parameter identifying the connectivity service to be responded to and with the User Info ID for the UE-to-network relay discovery parameter, as specified in clause 5;\notherwise the UE is not authorised to perform the discoveree UE procedure for UE-to-network relay discovery.\nFigure 10A.2.5.2.1 illustrates the interaction of the UEs in the discoveree UE procedure for UE-to-network relay discovery.\nFigure 10A.2.5 . 2.1 illustrates the process of UE-to-network relay discovery, which is a crucial step in establishing communication between a user equipment (UE) and a network. The figure depicts the interaction between the UE and the network, showing how the UE identifies and selects a network relay to facilitate communication. The figure highlights the role of the network elements, such as the home network (HN) and the network relay (NR), in enabling seamless communication and improving network performance. The figure also emphasizes the importance of efficient relay discovery in ensuring reliable and fast data transmission in a mobile network.\nFigure 10A.2.5.2.1: Discoveree UE procedure for UE-to-network relay discovery\nWhen the UE is triggered by an upper layer application to start responding to solicitation on proximity of a connectivity service provided by the UE-to-network relay, and if the UE is authorised to perform the discoveree UE procedure for UE-to-network relay discovery, then the UE:\na)\tif the UE is served by E-UTRAN, and the UE in EMM-IDLE mode needs to request resources for sending PC5_DISCOVERY messages for public safety as specified in 3GPP TS 36.331 [12], shall perform a service request procedure or tracking area update procedure as specified in 3GPP TS 24.301 [11]; and\nb)\tshall instruct the lower layers to start monitoring for PC5_DISCOVERY messages with an indication that the message is for relay discovery for public safety use.\nUpon reception of a PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation according to subclause 11.2.5.1, for the Relay Service Code of the connectivity service which the UE is authorized to respond, the UE shall use the associated DUSK, if configured, and the UTC-based counter obtained during the reception operation to unscramble the PC5_DISCOVERY message as described in 3GPP TS 33.303 [6]. Then, if a DUCK is configured, the UE shall use the DUCK and the UTC-based counter to decrypt the configured message-specific confidentiality-protected portion, as described in 3GPP TS 33.303 [6]. Finally, if a DUIK is configured, the UE shall use the DUIK and the UTC-based counter to verify the MIC field in the unscrambled PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation.\nThen, if the Relay Service Code parameter of the PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation is the same as the Relay Service Code parameter configured as specified in clause 5 for the connectivity service and either the ProSe Relay UE ID parameter is not included or the included ProSe Relay UE ID parameter is the same as the ProSe Relay UE ID associated with the Relay Service Code parameter configured as specified in clause 5, the UE:\na)\tshall obtain a valid UTC time for the discovery transmission from the lower layers and generate the UTC-based counter corresponding to this UTC time as specified in subclause 12.2.2.18;\nb)\tshall generate a PC5_DISCOVERY message for UE-to-Network Relay Discovery Response according to subclause 11.2.5.1. In the PC5_DISCOVERY message for UE-to-Network Relay Discovery Response, the UE:\n1)\tshall set the ProSe Relay UE ID to a ProSe Relay UE ID used for ProSe direct communication for the connectivity service;\n2)\tshall set the Discoveree Info parameter to the User Info ID for the UE-to-network relay discovery parameter, configured in clause 5;\n3)\tshall set the Relay Service Code parameter to the Relay Service Code parameter of the PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation;\n4)\tshall set the UTC-based counter LSB parameter to include the eight least significant bits of the UTC-based counter; and\n5)\tshall set the Resource Status Indicator bit of the Status Indicator parameter to indicate whether or not the UE has resources available to provide a connectivity service for additional ProSe-enabled public safety UEs;\nc)\tshall apply the DUIK, DUSK, or DUCK with the associated Encrypted Bitmask, along with the UTC-based counter to the PC5_DISCOVERY message for whichever security mechanism(s) configured to be applied, e.g. integrity protection, message scrambling or confidentiality protection of one or more above parameters, as specified in 3GPP TS 33.303 [6]; and\nd)\tshall pass the resulting PC5_DISCOVERY message for UE-to-Network Relay Discovery Response with an indication that the message is for relay discovery for public safety use to the lower layers for transmission over the PC5 interface.\nWhen the UE is triggered by an upper layer application to stop responding to solicitation on proximity of a connectivity service provided by a UE-to-network relay, or when the UE stops being authorised to perform the discoveree UE procedure for UE-to-network relay discovery, the UE shall instruct the lower layers to stop monitoring.\nWhen the UE stops monitoring, if the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10A.2.6\tAnnouncing UE procedure for group member discovery",
                            "text_content": "The purpose of the announcing UE procedure for group member discovery is to enable a ProSe-enabled public safety UE to announce availability in a discovery group to other ProSe-enabled public safety UEs, upon a request from upper layers as defined in 3GPP TS 23.303 [2].\nThe UE is authorised to perform the announcing UE procedure for group member discovery if:\na)\tthe following is true:\n1)\tthe UE is not served by E-UTRAN, is authorised to perform ProSe direct discovery for public safety use announcing when the UE is not served by E-UTRAN as specified in clause 5, and is configured with the radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN;\n2)\tthe UE is served by E-UTRAN, and is authorised to perform ProSe direct discovery for public safety use announcing in the PLMN indicated by the serving cell as specified in clause 5; or\n3)\tthe UE is:\n-\tin EMM-IDLE mode, in limited service state as specified in 3GPP TS 23.122 [24], and the reason for the UE being in limited service state is one of the following:\ni)\tthe UE is unable to find a suitable cell in the selected PLMN as specified in 3GPP TS 36.304 [23];\nii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.008 [30]; or\niii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #7 \"EPS services not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #7 \"GPRS services not allowed\" as specified in 3GPP TS 24.008 [30]; and\n-\tauthorised to perform ProSe direct discovery for public safety use announcing when the UE is not served by E-UTRAN as specified in clause 5 and:\ni)\tconfigured with the radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN; or\nii)\tthe lower layers indicate that the UE does not need to request resources for sending PC5_DISCOVERY messages for public safety as specified in 3GPP TS 36.331 [12]; and\nNOTE:\tWhen the lower layers indicate that the UE does not need to request resources for sending PC5_DISCOVERY messages for public safety as specified in 3GPP TS 36.331 [12], the serving cell broadcasts a common radio resources pool for public safety discovery transmission and the UE can use this common radio resources pool while in limited service state.\nb)\tthe UE is configured with the Discovery Group ID parameter identifying the discovery group to be announced and with the User Info ID for the group member discovery parameter, as specified in clause 5;\notherwise the UE is not authorised to perform the announcing UE procedure for group member discovery.\nFigure 10A.2.6.2.1 illustrates the interaction of the UEs in the announcing UE procedure for group member discovery.\nFigure 10A.2.6 .2 .1 illustrates the process of a user equipment (UE) announcing its procedure for group member discovery. The figure depicts the UE initiating the process by sending a multicast discovery request to the network. The network then responds with a multicast discovery response, containing information about the group members. The UE then selects a group member to establish a connection with, based on the response received. This process is crucial for enabling seamless communication among devices in a network, ensuring efficient data exchange and reducing latency.\nFigure 10A.2.6.2.1: Announcing UE procedure for group member discovery\nWhen the UE is triggered by an upper layer application to announce availability in a discovery group, if the UE is authorised to perform the announcing UE procedure for group member discovery, then the UE:\na)\tif the UE is served by E-UTRAN, and the UE in EMM-IDLE mode needs to request resources for sending PC5_DISCOVERY messages for public safety as specified in 3GPP TS 36.331 [12], shall perform a service request procedure or tracking area update procedure as specified in 3GPP TS 24.301 [11];\nb)\tshall obtain a valid UTC time for the discovery transmission from the lower layers and generate the UTC-based counter corresponding to this UTC time as specified in subclause 12.2.2.18;\nc)\tshall generate a PC5_DISCOVERY message for Group Member Discovery Announcement according to subclause 11.2.5.1. In the PC5_DISCOVERY message for Group Member Discovery Announcement, the UE:\n1)\tshall set the ProSe UE ID to the Layer 2 ID used for unicast communication configured in clause 5;\n2)\tshall set the Announcer Info parameter to the User Info ID for the group member discovery parameter, configured in clause 5;\n3)\tshall set the Discovery Group ID parameter to the Discovery Group ID parameter identifying the discovery group to be announced, configured in clause 5; and\n4)\tshall set the UTC-based counter LSB parameter to include the eight least significant bits of the UTC-based counter;\nd)\tshall apply the DUIK, DUSK, or DUCK with the associated Encrypted Bitmask, along with the UTC-based counter to the PC5_DISCOVERY message for whichever security mechanism(s) configured to be applied, e.g., integrity protection, message scrambling or confidentiality protection of one or more above parameters, as specified in 3GPP TS 33.303 [6]; and\ne)\tshall pass the resulting PC5_DISCOVERY message for Group Member Discovery Announcement to the lower layers for transmission over the PC5 interface with an indication that the message is for public safety use.\nThe UE shall ensure that it keeps on passing the same PC5_DISCOVERY message and the indication that the message is for public safety use to the lower layers for transmission until the UE is triggered by an upper layer application to stop announcing availability in a discovery group, or until the UE stops being authorised to perform the announcing UE procedure for group member discovery. How this is achieved is left up to UE implementation.\nWhen the UE is triggered by an upper layer application to stop announcing availability in a discovery group, or when the UE stops being authorised to perform the announcing UE procedure for group member discovery, the UE shall instruct the lower layers to stop announcing.\nWhen the UE stops announcing, if the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10A.2.7\tMonitoring UE procedure for group member discovery",
                            "text_content": "The purpose of the monitoring UE procedure for group member discovery is to enable a ProSe-enabled public safety UE to become aware of proximity of other ProSe-enabled public safety UEs in a discovery group, upon a request from upper layers as defined in 3GPP TS 23.303 [2].\nThe UE is authorised to perform the monitoring UE procedure for group member discovery if:\na)\tthe following is true:\n1)\tthe UE is not served by E-UTRAN, is authorised to perform ProSe direct discovery for public safety use monitoring when the UE is not served by E-UTRAN as specified in clause 5, and is configured with the radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN;\n2)\tthe UE is served by E-UTRAN, and is authorised to perform ProSe direct discovery for public safety use monitoring in at least one PLMN as specified in clause 5; or\n3)\tthe UE is:\n-\tin EMM-IDLE mode, in limited service state as specified in 3GPP TS 23.122 [24, and the reason for the UE being in limited service state is one of the following:\ni)\tthe UE is unable to find a suitable cell in the selected PLMN as specified in 3GPP TS 36.304 [23];\nii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.008 [30]; or\niii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #7 \"EPS services not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #7 \"GPRS services not allowed\" as specified in 3GPP TS 24.008 [30]; and\n-\tauthorised to perform ProSe direct discovery for public safety use monitoring when the UE is not served by E-UTRAN as specified in clause 5, and:\ni)\tconfigured with the radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN; or\nii)\tthe lower layers indicate that public safety discovery operation is supported; and:\nNOTE 1:\tWhen the lower layers indicate that public safety discovery operation is supported, the serving cell broadcasts a common radio resources pool for public safety discovery reception and the UE can use this common radio resources pool while in limited service state.\nb)\tthe UE is configured with the Discovery Group ID parameter identifying the discovery group to be monitored, as specified in clause 5;\notherwise the UE is not authorised to perform the monitoring UE procedure for group member discovery.\nFigure 10A.2.7.2.1 illustrates the interaction of the UEs in the monitoring UE procedure for group member discovery.\nFigure 10A.2.7 .2 .1 illustrates the monitoring procedure for a user equipment (UE) in a group member discovery scenario. The figure depicts the interaction between the UE and the network elements involved in the discovery process. Key components include the home subscriber server (HSS), home location register (HLR), and authentication and authorization and accounting (AAA) server. The figure highlights the role of the UE in discovering its group members and the signaling exchanged between the UE and the network elements during this process.\nFigure 10A.2.7.2.1: Monitoring UE procedure for group member discovery;\nWhen the UE is triggered by an upper layer application to monitor proximity of other UEs in a discovery group, and if the UE is authorised to perform the monitoring UE procedure for group member discovery, then the UE shall instruct the lower layers to start monitoring for PC5_DISCOVERY messages with an indication that the message is for public safety use.\nUpon reception of a PC5_DISCOVERY message for Group Member Discovery Announcement according to subclause 11.2.5.1, for the target Discovery Group ID of the discovery group to be monitored, the UE shall use the associated DUSK, if configured, and the UTC-based counter obtained during the monitoring operation to unscramble the PC5_DISCOVERY message as described in 3GPP TS 33.303 [6]. Then, if a DUCK is configured, the UE shall use the DUCK and the UTC-based counter to decrypt the configured message-specific confidentiality-protected portion, as described in 3GPP TS 33.303 [6]. Finally, if a DUIK is configured, the UE shall use the DUIK and UTC-based counter to verify the MIC field in the unscrambled PC5_DISCOVERY message for Group Member Discovery Announcement.\nNOTE 2:\tThe use of an erroneous UTC-based counter for processing received PC5_DISCOVERY messages at the ProSe-enabled Public Safety UE can cause MIC check failure after DUIK is used for integrity check, and malformed contents after DUSK is used for unscrambling or DUCK is used for deciphering. How a ProSe-enabled Public Safety UE ensures the accuracy of the UTC-based counter is left to UE implementation.\nThen if the Discovery Group ID parameter of the PC5_DISCOVERY message for Group Member Discovery Announcement is the same as the configured Discovery Group ID parameter as specified in clause 5, the UE shall consider that other UE in the discovery group the UE seeks to monitor has been discovered.\nWhen the UE is triggered by an upper layer application to stop monitoring proximity of other UEs in a discovery group, or when the UE stops being authorised to perform the monitoring UE procedure for group member discovery, the UE shall instruct the lower layers to stop monitoring.\nWhen the UE stops monitoring, if the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10A.2.8 \tDiscoverer UE procedure for group member discovery",
                            "text_content": "The purpose of the discoverer UE procedure for group member discovery is to enable a ProSe-enabled public safety UE to solicit proximity of other ProSe-enabled public safety UEs in a discovery group, upon a request from upper layers as defined in 3GPP TS 23.303 [2].\nThe UE is authorised to perform the discoverer UE procedure for group member discovery if:\na)\tthe following is true:\n1)\tthe UE is not served by E-UTRAN, is authorised to perform ProSe direct discovery for public safety use discoverer operation when the UE is not served by E-UTRAN as specified in clause 5, and is configured with the radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN;\n2)\tthe UE is served by E-UTRAN, and is authorised to perform ProSe direct discovery for public safety use discoverer operation in the PLMN indicated by the serving cell as specified in clause 5; or\n3)\tthe UE is:\n-\tin EMM-IDLE mode, in limited service state as specified in 3GPP TS 23.122 [24, and the reason for the UE being in limited service state is one of the following:\ni)\tthe UE is unable to find a suitable cell in the selected PLMN as specified in 3GPP TS 36.304 [23];\nii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.008 [30]; or\niii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #7 \"EPS services not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #7 \"GPRS services not allowed\" as specified in 3GPP TS 24.008 [30]; and\n-\tauthorised to perform ProSe direct discovery for public safety use discoverer operation when the UE is not served by E-UTRAN as specified in clause 5, and:\ni)\tconfigured with the radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN; or\nii)\tthe lower layers indicate that the UE does not need to request resources for sending PC5_DISCOVERY messages for public safety as specified in 3GPP TS 36.331 [12]; and:\nNOTE:\tWhen the lower layers indicate that the UE does not need to request resources for sending PC5_DISCOVERY messages for public safety as specified in 3GPP TS 36.331 [12], the serving cell broadcasts a common radio resources pool for public safety discovery transmission and the UE can use this common radio resources pool while in limited service state.\nb)\tthe UE is configured with the Discovery Group ID parameter identifying the discovery group to be solicited and with the User Info ID for the group member discovery parameter, as specified in clause 5;\notherwise the UE is not authorised to perform the discoverer UE procedure for group member discovery.\nFigure 10A.2.8.2.1 illustrates the interaction of the UEs in the discoverer UE procedure for group member discovery.\nFigure 10A.2.8.2 .1 illustrates the Discoverer UE procedure for group member discovery in a telecommunication network. The figure depicts the process of a UE (User Equipment) initiating a group member discovery procedure to locate and connect to a group of UEs. The procedure involves the UE sending a discovery message to the network, which then forwards the message to other UEs in the group. The figure shows the exchange of messages between the UE and the network, highlighting the role of the network in facilitating group communication. The discovery process is crucial for efficient communication among UEs and ensures that they can connect and share resources in a timely manner.\nFigure 10A.2.8.2.1: Discoverer UE procedure for group member discovery\nWhen the UE is triggered by an upper layer application to solicit proximity of other UEs in a discovery group, and if the UE is authorised to perform the discoverer UE procedure for group member discovery, then the UE:\na)\tif the UE is served by E-UTRAN, and the UE in EMM-IDLE mode needs to request resources for sending PC5_DISCOVERY messages for public safety as specified in 3GPP TS 36.331 [12], shall perform a service request procedure or tracking area update procedure as specified in 3GPP TS 24.301 [11];\nb)\tshall obtain a valid UTC time for the discovery transmission from the lower layers and generate the UTC-based counter corresponding to this UTC time as specified in subclause 12.2.2.18;\nc)\tshall generate a PC5_DISCOVERY message for Group Member Discovery Solicitation according to subclause 11.2.5.1. In the PC5_DISCOVERY message for Group Member Discovery Solicitation, the UE:\n1)\tshall set the Discoverer Info parameter to the User Info ID for the group member discovery parameter, configured in clause 5;\n2)\tshall set the Discovery Group ID parameter to the Discovery Group ID parameter identifying the discovery group to be solicited, configured in clause 5;\n3)\tshall set either the Target User Info parameter or the Target Group Info parameter according to the target information provided by the upper layer application; and\n4)\tshall set the UTC-based counter LSB parameter to include the eight least significant bits of the UTC-based counter;\nd)\tshall apply the DUIK, DUSK, or DUCK with the associated Encrypted Bitmask, along with the UTC-based counter to the PC5_DISCOVERY message for whichever security mechanism(s) configured to be applied, e.g. integrity protection, message scrambling or confidentiality protection of one or more above parameters, as specified in 3GPP TS 33.303 [6]; and\ne)\tshall pass the resulting PC5_DISCOVERY message for Group Member Discovery Solicitation to the lower layers for transmission over the PC5 interface with an indication that the message is for public safety use.\nThe UE shall ensure that it keeps on passing the same PC5_DISCOVERY message to the lower layers for transmission with an indication that the message is for public safety use until the UE is triggered by an upper layer application to stop soliciting proximity of other UEs in a discovery group, or until the UE stops being authorised to perform the discoverer UE procedure for group member discovery. How this is achieved is left up to UE implementation.\nUpon reception of a PC5_DISCOVERY message for Group Member Discovery Response according to subclause 11.2.5.1, for the target Discovery Group ID of the discovery group to be discovered, the UE shall use the associated DUSK, if configured, and the UTC-based counter obtained during the monitoring operation to unscramble the PC5_DISCOVERY message as described in 3GPP TS 33.303 [6]. Then, if a DUCK is configured, the UE shall use the DUCK and the UTC-based counter to decrypt the configured message-specific confidentiality-protected portion, as described in 3GPP TS 33.303 [6]. Finally, if a DUIK is configured, the UE shall use the DUIK and UTC-based counter to verify the MIC field in the unscrambled PC5_DISCOVERY message for Group Member Discovery Response.\nThen if the Discovery Group ID parameter of the PC5_DISCOVERY message for Group Member Discovery Response is the same as the Discovery Group ID parameter of the PC5_DISCOVERY message for Group Member Discovery Solicitation, the UE shall consider that other UE in the discovery group the UE seeks to discover has been discovered.\nWhen the UE is triggered by an upper layer application to stop soliciting proximity of other UEs in a discovery group, or when the UE stops being authorised to perform the discoverer UE procedure for group member discovery, the UE shall instruct the lower layers to stop discoverer operation.\nWhen the UE stops discoverer operation, if the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10A.2.9\tDiscoveree UE procedure for group member discovery",
                            "text_content": "The purpose of the discoveree UE procedure for group member discovery is to enable a ProSe-enabled public safety UE to respond to solicitation from other ProSe-enabled public safety UEs on proximity in a discovery group, upon a request from upper layers as defined in 3GPP TS 23.303 [2].\nThe UE is authorised to perform the discoveree UE procedure for group member discovery if:\na)\tthe following is true:\n1)\tthe UE is not served by E-UTRAN, is authorised to perform ProSe direct discovery for public safety use discoveree operation when the UE is not served by E-UTRAN as specified in clause 5, and is configured with the radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN;\n2)\tthe UE is served by E-UTRAN, and is authorised to perform ProSe direct discovery for public safety use discoveree operation in the PLMN(s) indicated by the serving cell as specified in clause 5; or\n3)\tthe UE is:\n-\tin EMM-IDLE mode, in limited service state as specified in 3GPP TS 23.122 [24], and the reason for the UE being in limited service state is one of the following:\ni)\tthe UE is unable to find a suitable cell in the selected PLMN as specified in 3GPP TS 36.304 [23];\nii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.008 [30]; or\niii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #7 \"EPS services not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #7 \"GPRS services not allowed\" as specified in 3GPP TS 24.008 [30]; and\n-\tauthorised to perform ProSe direct discovery for public safety use discoveree operation when the UE is not served by E-UTRAN as specified in clause 5, and:\ni)\tconfigured with the radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN; or\nii)\tthe lower layers indicate that the UE does not need to request resources for sending PC5_DISCOVERY messages for public safety as specified in 3GPP TS 36.331 [12]; and\nNOTE:\tWhen the lower layers indicate that the UE does not need to request resources for sending PC5_DISCOVERY messages for public safety as specified in 3GPP TS 36.331 [12], the serving cell broadcasts a common radio resources pool for public safety discovery transmission and the UE can use this common radio resources pool while in limited service state.\nb)\tthe UE is configured with the Discovery Group ID parameter identifying the discovery group to be responded to and with the User Info ID for the group member discovery parameter, as specified in clause 5;\notherwise the UE is not authorised to perform the Discoveree UE procedure for group member discovery.\nFigure 10A.2.9.2.1 illustrates the interaction of the UEs in the Discoveree UE procedure for group member discovery.\nFigure 10A.2.9.2.1 illustrates the group member discovery procedure for a device in a telecommunication network. The figure depicts the process of a device (UE) attempting to discover other devices within its group. The discovery process begins with the UE sending a group member discovery (GMD) request to the network. The network then forwards the request to the home agent (HA), which is responsible for managing the group members. The HA, in turn, sends a response to the UE, indicating whether the device is a valid group member or not. If the device is a valid member, the UE will be added to the group, and the discovery process is complete. This figure is essential for understanding how devices in a telecommunication network can efficiently discover and communicate with each other.\nFigure 10A.2.9.2.1: Discoveree UE procedure for group member discovery\nWhen the UE is triggered by an upper layer application to start responding to solicitation on proximity of a UE in a discovery group, and if the UE is authorised to perform the discoveree UE procedure for group member discovery, then the UE:\na)\tif the UE is served by E-UTRAN, and the UE in EMM-IDLE mode needs to request resources for sending PC5_DISCOVERY messages for public safety as specified in 3GPP TS 36.331 [12], shall perform a service request procedure or tracking area update procedure as specified in 3GPP TS 24.301 [11]; and\nb)\tshall instruct the lower layers to start monitoring for PC5_DISCOVERY messages with an indication that the message is for public safety use.\nUpon reception of a PC5_DISCOVERY message for Group Member Discovery Solicitation according to subclause 11.2.5.1, for the Discovery Group ID of the discovery group which the UE is configured to respond for, the UE shall use the associated DUSK, if configured, and the UTC-based counter obtained during the monitoring operation to unscramble the PC5_DISCOVERY message as described in 3GPP TS 33.303 [6]. Then, if a DUCK is configured, the UE shall use the DUCK and the UTC-based counter to decrypt the configured message-specific confidentiality protected portion, as described in 3GPP TS 33.303 [6]. Finally, if a DUIK is configured, the UE shall use the DUIK and UTC-based counter to verify the MIC field in the unscrambled PC5_DISCOVERY message for Group Member Discovery Solicitation.\nThen, if:\n-\tthe Discovery Group ID parameter of the received PC5_DISCOVERY message is the same as a Discovery Group ID parameter configured as specified in clause 5 for the discovery group;\n-\tthe Target User Info parameter is not included in the received PC5_DISCOVERY message or the Target User Info parameter of the received PC5_DISCOVERY message is the same as the User Info ID for the group member discovery parameter specified in clause 5; and\n-\tthe Target Group Info parameter is not included in the received PC5_DISCOVERY message or the Target Group Info parameter of the received PC5_DISCOVERY message is the same as the identifier of the targeted group provided by the upper layer application (e.g. ProSe Layer-2 Group ID of the ProSe direct communication service authorisation specified in clause 5);\nthe UE:\na)\tshall obtain a valid UTC time for the discovery transmission from the lower layers and generate the UTC-based counter corresponding to this UTC time as specified in subclause 12.2.2.18;\nb)\tshall generate a PC5_DISCOVERY message for Group Member Discovery Response according to subclause 11.2.5.1. In the PC5_DISCOVERY message for Group Member Discovery Response, the UE:\n1)\tshall set the ProSe UE ID to the Layer 2 ID used for unicast communication, configured in clause 5;\n2)\tshall set the Discoveree Info parameter to the User Info ID for the group member discovery parameter, configured in clause 5;\n3)\tshall set the Discovery Group ID parameter to the Discovery Group ID parameter of the PC5_DISCOVERY message for Group Member Discovery Solicitation; and\n4)\tshall set the UTC-based counter LSB parameter to include the eight least significant bits of the UTC-based counter;\nc)\tshall apply the DUIK, DUSK, or DUCK with the associated Encrypted Bitmask, along with the UTC-based counter to the PC5_DISCOVERY message for whichever security mechanism(s) configured to be applied, e.g. integrity protection, message scrambling or confidentiality protection of one or more above parameters, as specified in 3GPP TS 33.303 [6]; and\nd)\tshall pass the resulting PC5_DISCOVERY message for Group Member Discovery Response with an indication that the message is for public safety use to the lower layers for transmission over the PC5 interface.\nWhen the UE is triggered by an upper layer application to stop responding to solicitation on proximity of other UEs in a discovery group, or when the UE stops being authorised to perform the discoveree UE procedure for group member discovery, the UE shall instruct the lower layers to stop monitoring.\nWhen the UE stops monitoring, if the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10A.2.10\tAnnouncing UE procedure for Relay Discovery Additional Information",
                            "text_content": "The purpose of the announcing UE procedure for Relay Discovery Additional Information is to announce to the remote UEs additional information about:\n-\tthe MBMS traffic the ProSe UE-to-network relay is relaying; or\n-\tthe E-UTRAN Cell serving the ProSe UE-to-network relay\nas defined in 3GPP TS 23.303 [2].\nThe ProSe UE-to-network relay announces the Relay Discovery Additional Information:\na)\tif the remote UE requests the ProSe UE-to-network relay to start monitoring a specific TMGI availability by the PC5-S TMGI Monitoring Request message, and as a response the ProSe UE-to-network relay acknowledges with the PC5-S TMGI Monitoring Response message and the TMGI is detected in the serving E-UTRAN cell, then the ProSe UE-to-network relay includes a pair of the TMGI and its corresponding ProSe Layer 2 Group ID in the PC5_DISCOVERY message for Relay Discovery Additional Information until the timer T4105 expires (see the subclause 10.5); or\nb)\tif the remote UE requests the ProSe UE-to-network relay to announce the E-UTRAN Cell Global ID (ECGI) of the cell serving the ProSe UE-to-network relay, and as a response the ProSe UE-to-network relay acknowledges with the PC5-S Cell ID Announcement Response message, then the ProSe UE-to-network relay includes the ECGI of the serving cell in the PC5_DISCOVERY message for Relay Discovery Additional Information until the timer T4107 expires (see the subclause 10.6).\nNOTE 1:\tProSe UE-to-network relay announces the Relay Discovery Additional Information only when it is in E-UTRAN coverage.\nFigure 10A.2.10.2.1 illustrates the interaction of the ProSe UE-to-network relay and the remote UE in the announcing UE procedure for Relay Discovery Additional Information.\nFigure 10A.2.10.2.1 presents the procedure for announcing the Relay Discovery Additional Information (RDAI) procedure. The figure illustrates the steps involved in the process, starting with the initial announcement of the RDAI procedure by the network element. This is followed by the relay node receiving the announcement and initiating the relay discovery process. The figure also shows the exchange of information between the network element and the relay node, including the relay node's response to the network element's query. The figure highlights the importance of this procedure in ensuring efficient and reliable communication between network elements and relay nodes.\nFigure 10A.2.10.2.1: Announcing procedure for Relay Discovery Additional Information\nThe ProSe UE-to-network relay UE may start announcing Relay Discovery Additional Information if:\na)\tthe ProSe UE-to-network relay UE is currently authorised to perform ProSe direct discovery Model A announcing in the serving PLMN if the UE is served by E-UTRAN; and\n1)\tTMGI monitoring has been requested and responded to remote UEs, the ProSe UE-to-network relay UE detects the corresponding TMGI in the serving cell and the timer T4105 has not expired; or\n2)\tECGI announcement for the serving cell of the ProSe UE-to-network relay UE has been requested and responded to remote UEs, the timer T4107 has not expired.\nWhen the ProSe UE-to-network relay has some additional information to broadcast (i.e. either a pair of TMGI and its corresponding ProSe Layer 2 Group ID or ECGI), then the ProSe UE-to-network relay:\na)\tshall request the parameters from the lower layers for ProSe direct discovery announcing for public safety use (see 3GPP TS 36.331 [12]). The ProSe UE-to-network relay performs the announcing UE procedure for Relay Discovery Additional Information only if the lower layers indicate that ProSe direct discovery is supported by the network. If the ProSe UE-to-network relay in EMM-IDLE mode needs to request resources for sending PC5_DISCOVERY messages as specified in 3GPP TS 36.331 [12], the ProSe UE-to-network relay shall perform a service request procedure or tracking area update procedure as specified in 3GPP TS 24.301 [11];\nb)\tshall obtain a valid UTC time for the discovery transmission from the lower layers and generate the UTC-based counter corresponding to this UTC time as specified in subclause 12.2.2.18;\nc)\tshall generate PC5_DISCOVERY message(s) for Relay Discovery Additional Information according to subclause 11.2.5.1. In the PC5_DISCOVERY message for Relay Discovery Additional Information, the ProSe UE-to-network relay shall:\n1)\tinclude the Relay Service Code and the ProSe Relay UE ID used for ProSe direct communication which the remote UE used to request for the Relay Discovery Additional Information;\n2)\tset the Announcer Info parameter to the User Info ID parameter, configured in subclause 5;\n3) \tset the Relay Discovery Additional Information contents by the additional information to broadcast; and\n4)\tshall set the UTC-based counter LSB parameter to include the eight least significant bits of the UTC-based counter;\nd)\tshall apply the DUIK, DUSK, or DUCK with the associated Encrypted Bitmask, along with the UTC-based counter to the PC5_DISCOVERY message for whichever security mechanism(s) configured to be applied, e.g. integrity protection, message scrambling or confidentiality protection of one or more above parameters, as specified in 3GPP TS 33.303 [6]; and\ne)\tshall pass the resulting PC5_DISCOVERY message for Relay Discovery Additional Information to the lower layers for transmission over the PC5 interface with an indication that the message is for public safety use.\nThe ProSe UE-to-network relay shall ensure that it keeps on passing the PC5_DISCOVERY messages to the lower layers for transmission until the corresponding timer (i.e. timer T4105 when the additional information is a pair of TMGI and its corresponding ProSe Layer 2 Group ID and timer T4107 when the additional information is ECGI) expires.\nDuring the announcing operation, if one of the above conditions is no longer met, the ProSe UE-to-network relay may instruct the lower layers to stop announcing. When the ProSe UE-to-network relay stops announcing, if the lower layers indicate that the ProSe UE-to-network relay is required to send a discovery indication to the eNodeB and the ProSe UE-to-network relay is in EMM-CONNECTED mode, the ProSe UE-to-network relay shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10A.2.11\tMonitoring UE procedure for Relay Discovery Additional Information",
                            "text_content": "The purpose of the monitoring UE procedure for Relay Discovery Additional Information is to enable a remote UE to become aware of MBMS traffics the ProSe UE-to-network relay is relaying or the E-UTRAN Cell serving the ProSe UE-to-network relay as defined in 3GPP TS 23.303 [2].\nThe remote UE monitors Relay Discovery Additional Information:\na)\tuntil the TMGI monitoring refresh timer T4104 expires if the remote UE has requested the ProSe UE-to-network relay to start monitoring a specific TMGI availability by the PC5-S TMGI Monitoring Request message and received the PC5-S TMGI Monitoring Response message from the ProSe UE-to-network relay; or\nb)\tuntil the ECGI announcement request refresh timer T4106 expires if the remote UE has requested the ProSe UE-to-network relay to announce the ECGI of the cell serving the ProSe UE-to-network relay and received the PC5-S Cell ID Announcement Response message from the ProSe UE-to-network relay.\nThe UE may instruct the lower layers to start monitoring with an indication that the message is for relay discovery for public safety use if:\na)\ta request from upper layers to monitor for Relay Discovery Additional Information is still in place; and either:\n1)\tthe UE is currently authorised to perform ProSe direct discovery Model A monitoring in at least one PLMN if the UE is served by E-UTRAN;\n2)\tthe UE is currently authorised to perform ProSe direct discovery Model A monitoring if the UE is not served by E-UTRAN; or\n3)\tthe UE is:\n-\tin EMM-IDLE mode, in limited service state as specified in 3GPP TS 23.122 [24], and the reason for the UE being in limited service state is one of the following:\ni)\tthe UE is unable to find a suitable cell in the selected PLMN as specified in 3GPP TS 36.304 [23];\nii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #11 \"PLMN not allowed\" as specified in 3GPP TS 24.008 [30]; or\niii)\tthe UE received an ATTACH REJECT message or a TRACKING AREA UPDATE REJECT message or a SERVICE REJECT message with the EMM cause #7 \"EPS services not allowed\" as specified in 3GPP TS 24.301 [11] or a LOCATION UPDATING REJECT message or a GPRS ATTACH REJECT message or ROUTING AREA UPDATE REJECT message or SERVICE REJECT message with cause #7 \"GPRS services not allowed\" as specified in 3GPP TS 24.008 [30].\n-\tauthorised to perform ProSe direct discovery Model A monitoring when the UE is not served by E-UTRAN as specified in clause 5, and:\ni)\tconfigured with the radio parameters to be used for ProSe direct discovery for public safety use when not served by E-UTRAN; or\nii)\tthe lower layers indicate that public safety discovery operation is supported; and\nNOTE 1:\tWhen the lower layers indicate that public safety discovery operation is supported, the serving cell broadcasts a common radio resources pool for public safety discovery reception and the UE can use this common radio resources pool while in limited service state.\nIf the UE is in EMM-CONNECTED mode, the monitoring UE shall also trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\nDuring the monitoring operation, if one of the above conditions is no longer met, the UE may instruct the lower layers to stop monitoring. When the UE stops monitoring, if the UE is in EMM-CONNECTED mode, the UE shall trigger the corresponding procedure in lower layers as specified in 3GPP TS 36.331 [12].\nUpon reception of a PC5_DISCOVERY message for Relay Discovery Additional Information according to subclause 11.2.5.1, for the target Relay Service Code to be monitored, the UE shall use the associated DUSK, if configured, and the UTC-based counter obtained during the monitoring operation to unscramble the PC5_DISCOVERY message as described in 3GPP TS 33.303 [6]. Then, if a DUCK is configured, the UE shall use the DUCK and the UTC-based counter to decrypt the configured message-specific confidentiality protected portion, as described in 3GPP TS 33.303 [6]. Finally, if a DUIK is configured, the UE shall use the DUIK and UTC-based counter to verify the MIC field in the unscrambled PC5_DISCOVERY message for Relay Discovery Additional Information.\nNOTE 2:\tThe use of an erroneous UTC-based counter for processing received PC5_DISCOVERY messages at the ProSe-enabled Public Safety UE can cause MIC check failure after DUIK is used for integrity check, and malformed contents after DUSK is used for unscrambling or DUCK is used for deciphering. How a ProSe-enabled Public Safety UE ensures the accuracy of the UTC-based counter is left to UE implementation.\nThen, if:\n-\tthe Relay Service Code parameter of the PC5_DISCOVERY message for Relay Discovery Additional Information is the same as the Relay Service Code parameter configured as specified in clause 5 for the connectivity service being monitored; and\n-\tthe ProSe Relay UE ID parameter of the PC5_DISCOVERY message for Relay Discovery Additional Information is the same as the ProSe Relay UE ID parameter identifying the relay the remote UE intends to communicate with;\nthen the UE shall consider that the Relay Discovery Additional Information it intends to monitor has been discovered. In addition, the UE can measure the signal strength of the PC5_DISCOVERY message for Relay Discovery Additional Information for relay selection or reselection.\nIf the remote UE detects Relay Discovery Additional Information matched with the requested TMGI, then the remote UE starts to receive the MBMS traffic via the corresponding ProSe Layer-2 Group ID. When the ProSe-enabled public safety UE receives a PC5_DISCOVERY message for Relay Discovery Additional Information containing its interested TMGI, the UE may start to receive the MBMS traffic via the corresponding ProSe Layer-2 Group ID even if it does not have a PC5 link established with the ProSe UE-to-network relay or is not authorized to use a ProSe UE-to-network relay.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10A.2.12\tUE-to-network relay selection procedure",
                            "text_content": "The purpose of the UE-to-network relay selection procedure is to enable a remote UE to select a suitable ProSe UE-to-network relay UE to obtain a connectivity service to EPC.\nThe remote UE shall trigger the UE-to-network relay selection procedure if the following conditions are met:\n-\tthe UE is authorised to act as a remote UE towards a ProSe UE-to-network relay UE as specified in clause 5;\n-\tthe UE has obtained a list of ProSe UE-to-network relay UE candidate(s) fulfilling ProSe layer criteria with the monitoring procedure for UE-to-network relay discovery as specified in subclause 10A.2.3 or the discoverer procedure for UE-to-network relay discovery as specified in subclause 10A.2.4; and\n-\tthe UE has obtained a list of ProSe UE-to-network relay UE candidate(s) fulfilling lower layers criteria as specified in 3GPP TS 36.331 [12].\nIf there exists only one ProSe UE-to-network relay candidate satisfying the conditions in subclause 10A.2.12.2, then that ProSe UE-to-network relay UE is selected. If there exist more than one ProSe UE-to-network relay candidate satisfying the conditions in subclause 10A.2.12.2, any relay candidates not satisfying the non-radio related ProSe layer criteria shall be discarded, and out of the remaining relay candidates, the relay candidate with the highest ranking of the lower layer criteria shall be selected. The UE may take the value of the Resource Status Indicator bit of the Status Indicator parameter of the PC5_DISCOVERY message for UE-to-Network Relay Discovery Announcement or PC5_DISCOVERY message for UE-to-Network Relay Discovery Response into account when deciding which ProSe UE-to-network relay to select. It is up to the UE implementation whether the ProSe layer or the lower layers takes the final selection on which ProSe UE-to-network relay UE to select.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "10A.2.13\tUE-to-network relay reselection procedure",
                            "text_content": "The purpose of the UE-to-network relay reselection procedure is to enable a remote UE to reselect a ProSe UE-to-network relay UE to obtain a connectivity service to EPC when the serving ProSe UE-to-network relay UE is no longer suitable.\nThe remote UE shall trigger the UE-to-network relay reselection procedure if one of the following conditions is met:\na)\tthe UE has received a lower layers indication that the serving ProSe UE-to-network relay UE no longer fulfills the lower layers criteria as specified in 3GPP TS 36.331 [12];\nb)\tthe parameters related to ProSe UE-to-network relay in the ProSe direct discovery for public safety use service authorisation (e.g., Relay Service Code, User Info ID, etc.) have been updated and the serving ProSe UE-to-network relay UE no longer fulfills the conditions specified in subclause 10A.2.3;\nc)\tthe UE has received a DIRECT_COMMUNICATION_REJECT message from the ProSe UE-to-network relay UE with the cause value \"Direct communication to target UE not allowed\";\nd)\tthe UE has received a DIRECT_COMMUNICATION_RELEASE message from the ProSe UE-to-network relay UE with the cause value \"Direct communication with the peer UE is no longer allowed\";\ne)\tthe UE has received a DIRECT_COMMUNICATION_RELEASE message from the ProSe UE-to-network relay UE with the cause value \"Direct connection is not available any more\";\nf)\tthe UE has not received any response from the ProSe UE-to-network relay UE after M consecutive retransmissions of DIRECT_COMMUNICATION_REQUEST or DIRECT_COMMUNICATION_KEEPALIVE messages; or\ng)\tthe UE has not received any response from the ProSe UE-to-network relay UE after M consecutive retransmissions of PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation used to trigger the PC5_DISCOVERY message signal strength measurement between the UE and the ProSe UE-to-network relay UE with which the UE has a link established.\nNOTE:\tThe value of M is implementation specific and is less than or equal to the maximum number of retransmissions allowed for PC5 Signalling protocol.\nIn cases c) and d), the remote UE shall exclude the ProSe UE-to-network relay UE which sent the message specified in cases c) or d) from the UE-to-network relay reselection process described below.\nTo conduct UE-to-network relay reselection process, the UE shall first initiate one of the following procedures or both depending on UE's service authorisation for ProSe direct discovery for public safety use:\n-\tmonitoring procedure for UE-to-network relay discovery as specified in subclause 10A.2.3; or\n-\tdiscoverer procedure for UE-to-network relay discovery as specified in subclause 10A.2.4.\nAfter the execution of the above discovery procedure(s), the remote UE performs the UE-to-network relay selection procedure as specified in subclause 10A.2.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "11\tMessage functional definitions and contents",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "11.1\tOverview",
                    "description": "",
                    "summary": "",
                    "text_content": "This clause contains the definition and contents of the messages used in the procedures described in the present document.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "11.2\tProSe discovery messages",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "11.2.1\tGeneral",
                            "text_content": "This subclause defines the XML schema and MIME type related to ProSe direct discovery messages and EPC-level ProSe discovery messages.\nThis subclause also defines the format of the PC5_DISCOVERY message transmitted over the PC5 interface.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.2.2\tapplication/3gpp-prose+xml",
                            "text_content": "The MIME type is used to carry information related to the ProSe discovery operation. It shall be coded as an XML document containing one of the following ProSe discovery messages:\n-\tDISCOVERY_REQUEST;\n-\tDISCOVERY_RESPONSE;\n-\tMATCH_REPORT;\n-\tMATCH_REPORT_ACK;\n-\tDISCOVERY_UPDATE_REQUEST;\n-\tDISCOVERY_UPDATE_RESPONSE;\n-\tANNOUNCING_ALERT_REQUEST;\n-\tANNOUNCING_ALERT_RESPONSE;\n-\tUE_REGISTRATION_REQUEST;\n-\tUE_REGISTRATION_RESPONSE;\n-\tAPPLICATION_REGISTRATION_REQUEST;\n-\tAPPLICATION_REGISTRATION_RESPONSE;\n-\tPROXIMITY_REQUEST;\n-\tPROXIMITY_REQUEST_RESPONSE;\n-\tPROXIMITY_ALERT;\n-\tUE_DEREGISTRATION_REQUEST;\n-\tUE_DEREGISTRATION_RESPONSE;\n-\tCANCEL_PROXIMITY_REQUEST;\n-\tCANCEL_PROXIMITY_RESPONSE;\n-\tPROXIMITY_REQUEST_VALIDATION; or\n-\tPROXIMITY_REQUEST_VALIDATION_RESPONSE.\nEach of those messages is presented in the XML document as an XML element named after the corresponding message.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.2.3\tXML Schema",
                            "text_content": "Implementations in compliance with the present document shall implement the XML schema defined below for messages used in ProSe direct discovery procedures over PC3 interface.\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\nxmlns=\"urn:3GPP:ns:ProSe:Discovery:2014\"\nelementFormDefault=\"qualified\"\ntargetNamespace=\"urn:3GPP:ns:ProSe:Discovery:2014\">\n<xs:annotation>\n<xs:documentation>\nInfo for ProSe Discovery Control Messages Syntax\n</xs:documentation>\n</xs:annotation>\n\n\n<!-- Complex types defined for parameters with complicated structure -->\n\n<xs:complexType name=\"AppID-info\">\n<xs:sequence>\n<xs:element name=\"OS-ID\">\n<xs:simpleType>\n<xs:restriction base=\"xs:hexBinary\">\n<xs:length value=\"16\"/>\n</xs:restriction>\n</xs:simpleType>\n</xs:element>\n<xs:element name=\"OS-App-ID\" type=\"xs:string\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"PLMN-info\">\n<xs:sequence>\n<xs:element name=\"mcc\" type=\"xs:integer\"/>\n<xs:element name=\"mnc\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"IMSI-info\">\n<xs:sequence>\n<xs:element name=\"MCC\" type=\"xs:integer\"/>\n<xs:element name=\"MNC\" type=\"xs:integer\"/>\n<xs:element name=\"MSIN\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"DiscFilter-info\">\n<xs:sequence>\n<xs:element name=\"ProSe-Application-Code\" type=\"xs:hexBinary\"/>\n<xs:element name=\"ProSe-Application-Mask\" type=\"xs:hexBinary\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"TTL-timer-T4002\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"MatchingFilter-info\">\n<xs:sequence>\n<xs:element name=\"Code\" type=\"xs:hexBinary\"/>\n<xs:element name=\"Mask\" type=\"xs:hexBinary\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"DUCK-info\">\n<xs:sequence>\n<xs:element name=\"discovery-user-confidentiality-key\" type=\"xs:hexBinary\"/>\n<xs:element name=\"encrypted-bitmask\" type=\"xs:hexBinary\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n\n<xs:complexType name=\"RestrictedDiscFilter-info\">\n<xs:sequence>\n<xs:element name=\"filter\" type=\"MatchingFilter-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"TTL-timer-T4009\" type=\"xs:integer\"/>\n<xs:element name=\"restricted-security\" type=\"Restricted-Security-info\" minOccurs=\"0\" />\n<xs:element name=\"RPAUID\" type=\"xs:string\" minOccurs=\"0\" />\n<xs:element name=\"DUSK\" type=\"xs:hexBinary\" minOccurs=\"0\" />\n<xs:element name=\"DUIK\" type=\"xs:hexBinary\" minOccurs=\"0\" />\n<xs:element name=\"MIC-check-indicator\" type=\"xs:boolean\" minOccurs=\"0\" />\n<xs:element name=\"DUCK\" type=\"DUCK-info\" minOccurs=\"0\" />\n<xs:element name=\"metadata-indicator\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"metadata\" type=\"xs:string\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"RestrictedCodeSuffixRange-info\">\n<xs:sequence>\n<xs:element name=\"beginning-suffix-code\" type=\"xs:hexBinary\" />\n<xs:element name=\"ending-suffix-code\" type=\"xs:hexBinary\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n\n<xs:complexType name=\"RestrictedMonitoringUpdate-info\">\n<xs:sequence>\n<xs:element name=\"updated-filter\" type=\"RestrictedDiscFilter-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n\n<xs:complexType name=\"RestrictedAnnouncingUpdate-info\">\n<xs:sequence>\n<xs:element name=\"ProSe-Restricted-Code\" type=\"xs:hexBinary\" />\n<xs:element name=\"validity-timer-T4007\" type=\"xs:integer\" />\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"MonitoringUpdate-info\">\n<xs:sequence>\n<xs:element name=\"updated-filter\" type=\"DiscFilter-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"AnnouncingUpdate-info\">\n<xs:sequence>\n<xs:element name=\"ProSe-Application-Code\" type=\"xs:hexBinary\" />\n<xs:element name=\"validity-timer-T4000\" type=\"xs:integer\" />\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"Update-Option-info\">\n<xs:choice>\n<xs:element name=\"update-info-restricted-announce\" type=\"RestrictedAnnouncingUpdate-info\" />\n<xs:element name=\"update-info-restricted-monitor\" type=\"RestrictedMonitoringUpdate-info\" />\n<xs:element name=\"update-info-open-annnounce\" type=\"AnnouncingUpdate-info\" />\n<xs:element name=\"update-info-open-monitor\" type=\"MonitoringUpdate-info\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" />\n<xs:any namespace=\"##other\" processContents=\"lax\"/>\n</xs:choice>\n</xs:complexType>\n\n<xs:complexType name=\"Restricted-Code-Option-info\">\n<xs:choice>\n<xs:element name=\"ProSe-Restricted-Code\" type=\"xs:hexBinary\" />\n<xs:element name=\"ProSe-Response-Code\" type=\"xs:hexBinary\" />\n<xs:element name=\"anyExt\" type=\"anyExtType\" />\n<xs:any namespace=\"##other\" processContents=\"lax\"/>\n</xs:choice>\n</xs:complexType>\n\n\n<xs:complexType name=\"WLANAssistance-info\">\n<xs:sequence>\n<xs:element name=\"ssid\" type=\"xs:string\"/>\n<xs:element name=\"WLAN-secret-key\" type=\"xs:string\"/>\n<xs:element name=\"group-owner-indication\" type=\"xs:boolean\"/>\n<xs:element name=\"P2P-device-address-self\" type=\"xs:hexBinary\" minOccurs=\"0\"/>\n<xs:element name=\"P2P-device-address-peer\" type=\"xs:hexBinary\" minOccurs=\"0\"/>\n<xs:element name=\"operation-channel\" type=\"xs:integer\"/>\n<xs:element name=\"validity-time\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"Subquery-info\">\n<xs:sequence>\n<xs:element name=\"ProSe-Rquery-Code\" type=\"xs:hexBinary\" />\n<xs:element name=\"response-filter\" type=\"MatchingFilter-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"validity-timer-T4013\" type=\"xs:integer\"/>\n<xs:element name=\"restricted-security\" type=\"Restricted-Security-info\" minOccurs=\"0\" />\n<xs:element name=\"RPAUID\" type=\"xs:string\" minOccurs=\"0\" />\n<xs:element name=\"metadata\" type=\"xs:string\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n\n<xs:complexType name=\"Restricted-Security-info\">\n<xs:sequence>\n<xs:element name=\"DUSK\" type=\"xs:hexBinary\" minOccurs=\"0\" />\n<xs:element name=\"DUIK\" type=\"xs:hexBinary\" minOccurs=\"0\" />\n<xs:element name=\"DUCK\" type=\"DUCK-info\" minOccurs=\"0\" />\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"ApplicationCodeSuffixRange-info\">\n<xs:sequence>\n<xs:element name=\"beginning-suffix-code\" type=\"xs:hexBinary\" />\n<xs:element name=\"ending-suffix-code\" type=\"xs:hexBinary\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"ProSeApplicationCodeACE-info\">\n<xs:sequence>\n<xs:element name=\" ProSe-Application-Code-Prefix\" type=\"xs:hexBinary\" />\n<xs:element name=\" ProSe-Application-Code-Suffix-Range\" type=\"ApplicationCodeSuffixRange-info\" maxOccurs=\"unbounded\" />\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n\n<!-- Complex types defined for transaction-level -->\n\n<xs:complexType name=\"AnnounceRsp-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"ProSe-Application-Code\" type=\"xs:hexBinary\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"ProSe-Application-Code-ACE\" type=\"ProSeApplicationCodeACE-info\" minOccurs=\"0\"/>\n<xs:element name=\"validity-timer-T4000\" type=\"xs:integer\" minOccurs=\"0\" />\n<xs:element name=\"discovery-key\" type=\"xs:hexBinary\" minOccurs=\"0\" />\n<xs:element name=\"discovery-entry-ID\" type=\"xs:integer\" minOccurs=\"0\" />\n<xs:element name=\"ACE-enabled-indicator\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"PC5-tech\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"MonitorRsp-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"discovery-filter\" type=\"DiscFilter-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"discovery-entry-ID\" type=\"xs:integer\" minOccurs=\"0\" />\n<xs:element name=\"ACE-enabled-indicator\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"PC5-tech\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n\n<xs:complexType name=\"DiscReq-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"command\" type=\"xs:integer\"/>\n<xs:element name=\"UE-identity\" type=\"IMSI-info\"/>\n<xs:element name=\"ProSe-Application-ID\" type=\"xs:string\"/>\n<xs:element name=\"application-identity\" type=\"AppID-info\"/>\n<xs:element name=\"discovery-entry-ID\" type=\"xs:integer\" minOccurs=\"0\" />\n<xs:element name=\"Requested-Timer\" type=\"xs:integer\" minOccurs=\"0\" />\n<xs:element name=\"metadata\" type=\"xs:string\" minOccurs=\"0\"/>\n<xs:element name=\"Announcing-PLMN-ID\" type=\"PLMN-info\" minOccurs=\"0\" />\n<xs:element name=\"ACE-enabled-indicator\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"PC5-tech\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"RestrictedDiscReq-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"command\" type=\"xs:integer\"/>\n<xs:element name=\"UE-identity\" type=\"IMSI-info\"/>\n<xs:element name=\"RPAUID\" type=\"xs:string\"/>\n<xs:element name=\"application-identity\" type=\"AppID-info\"/>\n<xs:element name=\"discovery-type\" type=\"xs:integer\"/>\n<xs:element name=\"ACE-enabled-indicator\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"announcing-type\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"application-level-container\" type=\"xs:hexBinary\" minOccurs=\"0\"/>\n<xs:element name=\"discovery-model\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"Announcing-PLMN-ID\" type=\"PLMN-info\" minOccurs=\"0\" />\n<xs:element name=\"discovery-entry-ID\" type=\"xs:integer\"/>\n<xs:element name=\"Requested-Timer\" type=\"xs:integer\" minOccurs=\"0\" />\n<xs:element name=\"PC5-tech\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"RestrictedAnnounceRsp-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"ProSe-Restricted-Code\" type=\"xs:hexBinary\" minOccurs=\"0\"/>\n<xs:element name=\"ProSe-Restricted-Code-Suffix-Range\" type=\"RestrictedCodeSuffixRange-info\" minOccurs=\"0\"/>\n<xs:element name=\"validity-timer-T4007\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"ACE-enabled-indicator\" type=\"xs:integer\" minOccurs=\"0\" />\n<xs:element name=\"restricted-code-security-material\" type=\"Restricted-Security-info\" minOccurs=\"0\" />\n<xs:element name=\"on-demand-announcing-enabled-indicator\" type=\"xs:boolean\" minOccurs=\"0\" />\n<xs:element name=\"discovery-entry-ID\" type=\"xs:integer\"/>\n<xs:element name=\"PC5-tech\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"RestrictedMonitorRsp-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"restricted-discovery-filter\" type=\"RestrictedDiscFilter-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"ACE-enabled-indicator\" type=\"xs:integer\" minOccurs=\"0\" />\n<xs:element name=\"application-level-container\" type=\"xs:hexBinary\"/>\n<xs:element name=\"discovery-entry-ID\" type=\"xs:integer\"/>\n<xs:element name=\"PC5-tech\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n\n<xs:complexType name=\"RestrictedDiscovereeRsp-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"ProSe-Response-Code\" type=\"xs:hexBinary\" />\n<xs:element name=\"query-filter\" type=\"MatchingFilter-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"validity-timer-T4011\" type=\"xs:integer\"/>\n<xs:element name=\"restricted-code-security-material \" type=\"Restricted-Security-info\" minOccurs=\"0\" />\n<xs:element name=\"discovery-entry-ID\" type=\"xs:integer\"/>\n<xs:element name=\"PC5-tech\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"RestrictedDiscovererRsp-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"subquery-result\" type=\"Subquery-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"discovery-entry-ID\" type=\"xs:integer\"/>\n<xs:element name=\"PC5-tech\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"RejectRsp-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"PC3-control-protocol-cause-value\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"UE-RejectRsp-info\">\n<xs:sequence>\n<xs:element name=\"prose-function-transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"PC3-control-protocol-cause-value\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"MatchRep-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"ProSe-Application-Code\" type=\"xs:hexBinary\"/>\n<xs:element name=\"UE-identity\" type=\"IMSI-info\"/>\n<xs:element name=\"Monitored-PLMN-ID\" type=\"PLMN-info\"/>\n<xs:element name=\"VPLMN-ID\" type=\"PLMN-info\" minOccurs=\"0\"/>\n<xs:element name=\"MIC\" type=\"xs:hexBinary\"/>\n<xs:element name=\"UTC-based-counter\" type=\"xs:hexBinary\"/>\n<xs:element name=\"Metadata-flag\" type=\"xs:boolean\"/>\n<xs:element name=\"MessageType\" type=\"xs:hexBinary\" minOccurs=\"0\"/>\n<xs:element name=\"PC5-tech\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"RestrictedMatch-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"UE-identity\" type=\"IMSI-info\"/>\n<xs:element name=\"discovery-type\" type=\"xs:integer\"/>\n<xs:element name=\"application-identity\" type=\"AppID-info\"/>\n<xs:element name=\"RPAUID\" type=\"xs:string\"/>\n<xs:element name=\"Restricted-Code-Discovered\" type=\"Restricted-Code-Option-info\" />\n<xs:element name=\"MIC\" type=\"xs:hexBinary\" minOccurs=\"0\"/>\n<xs:element name=\"MessageType\" type=\"xs:hexBinary\" minOccurs=\"0\"/>\n<xs:element name=\"UTC-based-counter\" type=\"xs:hexBinary\" minOccurs=\"0\"/>\n<xs:element name=\"Metadata-flag\" type=\"xs:boolean\" />\n<xs:element name=\"PC5-tech\" type=\"xs:integer\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"MatchAck-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"ProSe-Application-ID\" type=\"xs:string\"/>\n<xs:element name=\"validity-timer-T4004\" type=\"xs:integer\"/>\n<xs:element name=\"metadata\" type=\"xs:string\" minOccurs=\"0\"/>\n<xs:element name=\"metadata-index-mask\" type=\"xs:hexBinary\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:attribute name=\"match-report-refresh-timer-T4006\" type=\"xs:integer\"/>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n\n<xs:complexType name=\"RestrictedMatchAck-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"application-identity\" type=\"AppID-info\"/>\n<xs:element name=\"RPAUID\" type=\"xs:string\"/>\n<xs:element name=\"validity-timer-T4016\" type=\"xs:integer\"/>\n<xs:element name=\"metadata\" type=\"xs:string\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:attribute name=\"match-report-refresh-timer-T4017\" type=\"xs:integer\"/>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"MatchReject-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"PC3-control-protocol-cause-value\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"DiscUpdateReq-info\">\n<xs:sequence>\n<xs:element name=\"prose-function-transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"UE-identity\" type=\"IMSI-info\"/>\n<xs:element name=\"discovery-entry-ID\" type=\"xs:integer\"/>\n<xs:element name=\"update-info\" type=\"Update-Option-info\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"DiscUpdateRsp-info\">\n<xs:sequence>\n<xs:element name=\"prose-function-transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"discovery-entry-ID\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"AnnouncingAlertReq-info\">\n<xs:sequence>\n<xs:element name=\"prose-function-transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"RPAUID\" type=\"xs:string\"/>\n<xs:element name=\"UE-identity\" type=\"IMSI-info\"/>\n<xs:element name=\"discovery-entry-ID\" type=\"xs:integer\"/>\n<xs:element name=\"ProSe-Restricted-Code\" type=\"xs:hexBinary\"/>\n<xs:element name=\"ProSe-Restricted-Code-Suffix-Range\" type=\"RestrictedCodeSuffixRange-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"AnnouncingAlertRsp-info\">\n<xs:sequence>\n<xs:element name=\"prose-function-transaction-ID\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<!-- Complex types defined for Message-level -->\n\n<xs:complexType name=\"prose-direct-discovery-request\">\n<xs:sequence>\n<xs:element name=\"discovery-request\" type=\"DiscReq-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"restricted-discovery-request\" type=\"RestrictedDiscReq-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:attribute name=\"network-initiated-transaction-method\" type=\"xs:integer\"/>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-direct-discovery-response\">\n<xs:sequence>\n<xs:element name=\"Current-Time\" type=\"xs:dateTime\"/>\n<xs:element name=\"Max-Offset\" type=\"xs:integer\"/>\n<xs:element name=\"response-announce\" type=\"AnnounceRsp-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"response-monitor\" type=\"MonitorRsp-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"restricted-announce-response\" type=\"RestrictedAnnounceRsp-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"restricted-monitor-response\" type=\"RestrictedMonitorRsp-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"restricted-discoveree-response\" type=\"RestrictedDiscovereeRsp-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"restricted-discoverer-response\" type=\"RestrictedDiscovererRsp-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"response-reject\" type=\"RejectRsp-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:attribute name=\"network-initiated-transaction-method\" type=\"xs:integer\"/>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-direct-discovery-update-request\">\n<xs:sequence>\n<xs:element name=\"discovery-update-request\" type=\"DiscUpdateReq-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-direct-discovery-update-response\">\n<xs:sequence>\n<xs:element name=\"response-update\" type=\"DiscUpdateRsp-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"response-reject\" type=\"UE-RejectRsp-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-direct-discovery-match-report\">\n<xs:sequence>\n<xs:element name=\"match-report\" type=\"MatchRep-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"restricted-match\" type=\"RestrictedMatch-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-direct-discovery-match-report-ack\">\n<xs:sequence>\n<xs:element name=\"Current-Time\" type=\"xs:dateTime\"/>\n<xs:element name=\"match-ack\" type=\"MatchAck-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"match-reject\" type=\"MatchReject-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"restricted-match-ack\" type=\"RestrictedMatchAck-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-direct-discovery-announcing-alert-request\">\n<xs:sequence>\n<xs:element name=\"announcing-alert-request\" type=\"AnnouncingAlertReq-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-direct-discovery-announcing-alert-response\">\n<xs:sequence>\n<xs:element name=\"announcing-alert-response\" type=\"AnnouncingAlertRsp-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"response-reject\" type=\"UE-RejectRsp-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<!--  extension allowed -->\n<xs:complexType name=\"DiscMsgExtType\">\n<xs:sequence>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<!--  XML attribute for any future extensions  -->\n<xs:complexType name=\"anyExtType\">\n<xs:sequence>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n</xs:complexType>\n\n\n<!-- Complex types defined for EPC-level Discovery transaction-level -->\n\n<xs:complexType name=\"UeRegReq-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"UE-identity\" type=\"IMSI-info\" />\n<xs:element name=\"WLAN-Link-Layer-ID\" type=\"xs:hexBinary\" minOccurs=\"0\"/>\n<xs:element name=\"method-for-server-initiated-transaction\" type=\"xs:integer\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"UeRegRsp-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"EPC-ProSe-User-ID\" type=\"xs:hexBinary\"/>\n<xs:element name=\"server-initiated-method-config\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"UeRegReject-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"PC3-EPC-control-protocol-cause-value\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"AppRegReq-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"EPC-ProSe-User-ID\" type=\"xs:hexBinary\"/>\n<xs:element name=\"application-identity\" type=\"AppID-info\"/>\n<xs:element name=\"Application-Layer-User-ID\" type=\"xs:string\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"AppRegRsp-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"allowed-range-class\" type=\"xs:integer\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"AppRegReject-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"PC3-EPC-control-protocol-cause-value\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"ProximityReq-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"EPC-ProSe-User-ID\" type=\"xs:hexBinary\"/>\n<xs:element name=\"application-identity\" type=\"AppID-info\"/>\n<xs:element name=\"Application-Layer-User-ID-A\" type=\"xs:string\"/>\n<xs:element name=\"Application-Layer-User-ID-B\" type=\"xs:string\"/>\n<xs:element name=\"requested-range-class\" type=\"xs:integer\"/>\n<xs:element name=\"UE-A-location\" type=\"xs:string\"/>\n<xs:element name=\"time-window\" type=\"xs:integer\"/>\n<xs:element name=\"WLAN-indication\" type=\"xs:boolean\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"ProximityReqAccept-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"ProximityReqReject-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"PC3-EPC-control-protocol-cause-value\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"ProximityAlert-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"application-identity\" type=\"AppID-info\"/>\n<xs:element name=\"Application-Layer-User-ID-A\" type=\"xs:string\"/>\n<xs:element name=\"Application-Layer-User-ID-B\" type=\"xs:string\"/>\n<xs:element name=\"assistance-information\" type=\"WLANAssistance-info\" minOccurs=\"0\" />\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"UeDeregReq-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"EPC-ProSe-User-ID\" type=\"xs:hexBinary\"/>\n<xs:element name=\"PC3-EPC-control-protocol-cause-value\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"UeDeregRsp-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"CancelProximityReq-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"EPC-ProSe-User-ID-A\" type=\"xs:hexBinary\"/>\n<xs:element name=\"application-identity\" type=\"AppID-info\"/>\n<xs:element name=\"EPC-ProSe-User-ID-B\" type=\"xs:hexBinary\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"CancelProximityRsp-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"ProximityReqValidation-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"application-identity\" type=\"AppID-info\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"ProximityReqValidationRspAccept-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"ProximityReqValidationRspReject-info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"PC3-EPC-control-protocol-cause-value\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n\n<!-- Complex types defined for EPC level Discovery Message-level -->\n\n<xs:complexType name=\"prose-epc-level-ue-registration-request\">\n<xs:sequence>\n<xs:element name=\"ue-registration-request\" type=\"UeRegReq-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-epc-level-ue-registration-response\">\n<xs:sequence>\n<xs:element name=\"response-register\" type=\"UeRegRsp-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"response-reject\" type=\"UeRegReject-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-epc-level-application-registration-request\">\n<xs:sequence>\n<xs:element name=\"application-registration-request\" type=\"AppRegReq-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-epc-level-application-registration-response\">\n<xs:sequence>\n<xs:element name=\"response-register\" type=\"AppRegRsp-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"response-reject\" type=\"AppRegReject-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-epc-level-proximity-request\">\n<xs:sequence>\n<xs:element name=\"proximity-request\" type=\"ProximityReq-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-epc-level-proximity-request-response\">\n<xs:sequence>\n<xs:element name=\"response-accept\" type=\"ProximityReqAccept-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"response-reject\" type=\"ProximityReqReject-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-epc-level-proximity-alert\">\n<xs:sequence>\n<xs:element name=\"proximity-alert\" type=\"ProximityAlert-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-epc-level-ue-deregistration-request\">\n<xs:sequence>\n<xs:element name=\"ue-deregistration-request\" type=\"UeDeregReq-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-epc-level-ue-deregistration-response\">\n<xs:sequence>\n<xs:element name=\"ue-deregistration-response\" type=\"UeDeregRsp-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-epc-level-cancel-proximity-request\">\n<xs:sequence>\n<xs:element name=\"cancel-proximity-request\" type=\"CancelProximityReq-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-epc-level-cancel-proximity-response\">\n<xs:sequence>\n<xs:element name=\"cancel-proximity-response\" type=\"CancelProximityRsp-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-epc-level-proximity-request-validation\">\n<xs:sequence>\n<xs:element name=\"proximity-request-validation\" type=\"ProximityReqValidation-info\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"prose-epc-level-proximity-request-validation-response\">\n<xs:sequence>\n<xs:element name=\"response-accept\" type=\"ProximityReqValidationRspAccept-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"response-reject\" type=\"ProximityReqValidationRspReject-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n\n<!--  Top levelDiscovery Message definition  -->\n<xs:element name=\"prose-discovery-message\">\n<xs:complexType>\n<xs:choice>\n<xs:element name=\"DISCOVERY_REQUEST\" type=\"prose-direct-discovery-request\"/>\n<xs:element name=\"DISCOVERY_RESPONSE\" type=\"prose-direct-discovery-response\"/>\n<xs:element name=\"MATCH_REPORT\" type=\"prose-direct-discovery-match-report\"/>\n<xs:element name=\"MATCH_REPORT_ACK\" type=\"prose-direct-discovery-match-report-ack\"/>\n<xs:element name=\"UE_REGISTRATION_REQUEST\" type=\"prose-epc-level-ue-registration-request\"/>\n<xs:element name=\"UE_REGISTRATION_RESPONSE\" type=\"prose-epc-level-ue-registration-response\"/>\n<xs:element name=\"APPLICATION_REGISTRATION_REQUEST\" type=\"prose-epc-level-application-registration-request\"/>\n<xs:element name=\"APPLICATION_REGISTRATION_RESPONSE\" type=\"prose-epc-level-application-registration-response\"/>\n<xs:element name=\"PROXIMITY_REQUEST\" type=\"prose-epc-level-proximity-request\"/>\n<xs:element name=\"PROXIMITY_REQUEST_RESPONSE\" type=\"prose-epc-level-proximity-request-response\"/>\n<xs:element name=\"PROXIMITY_ALERT\" type=\"prose-epc-level-proximity-alert\"/>\n<xs:element name=\"UE_DEREGISTRATION_REQUEST\" type=\"prose-epc-level-ue-deregistration-request\"/>\n<xs:element name=\"UE_DEREGISTRATION_RESPONSE\" type=\"prose-epc-level-ue-deregistration-response\"/>\n<xs:element name=\"CANCEL_PROXIMITY_REQUEST\" type=\"prose-epc-level-cancel-proximity-request\"/>\n<xs:element name=\"CANCEL_PROXIMITY_RESPONSE\" type=\"prose-epc-level-cancel-proximity-response\"/>\n<xs:element name=\"PROXIMITY_REQUEST_VALIDATION\" type=\"prose-epc-level-proximity-request-validation\"/>\n<xs:element name=\"PROXIMITY_REQUEST_VALIDATION_RESPONSE\" type=\"prose-epc-level-proximity-request-validation-response\"/>\n<xs:element name=\"DISCOVERY_UPDATE_REQUEST\" type=\"prose-direct-discovery-update-request\"/>\n<xs:element name=\"DISCOVERY_UPDATE_RESPONSE\" type=\"prose-direct-discovery-update-response\"/>\n<xs:element name=\"ANNOUNCING_ALERT_REQUEST\" type=\"prose-direct-discovery-announcing-alert-request\"/>\n<xs:element name=\"ANNOUNCING_ALERT_RESPONSE\" type=\"prose-direct-discovery-announcing-alert-response\"/>\n\n<xs:element name=\"message-ext\" type=\"DiscMsgExtType\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\"/>\n</xs:choice>\n</xs:complexType>\n</xs:element>\n\n</xs:schema>\n\nAn entity receiving the XML body ignores any unknown XML element and any unknown XML attribute.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.2.4\tSemantics",
                            "text_content": "The <prose-discovery-message> element is the root element of this XML document and it can be one of the following elements:\n-\t<DISCOVERY_REQUEST>;\n-\t<DISCOVERY_RESPONSE>;\n-\t<MATCH_REPORT>;\n-\t<MATCH_REPORT_ACK>;\n-\t<UE_REGISTRATION_REQUEST>;\n-\t<UE_REGISTRATION_RESPONSE>;\n-\t<APPLICATION_REGISTRATION_REQUEST>;\n-\t<APPLICATION_REGISTRATION_RESPONSE>;\n-\t<PROXIMITY_REQUEST>;\n-\t<PROXIMITY_REQUEST_RESPONSE>;\n-\t<PROXIMITY_ALERT>;\n-\t<UE_DEREGISTRATION_REQUEST>;\n-\t<UE_DEREGISTRATION_RESPONSE>;\n-\t<CANCEL_PROXIMITY_REQUEST>;\n-\t<CANCEL_PROXIMITY_RESPONSE>;\n-\t<PROXIMITY_REQUEST_VALIDATION>;\n-\t<PROXIMITY_REQUEST_VALIDATION_RESPONSE>;\n-\t<DISCOVERY_UPDATE_REQUEST>;\n-\t<DISCOVERY_UPDATE_RESPONSE>\n-\t<ANNOUNCE_ALERT_REQUEST>;\n-\t<ANNOUNCE_ALERT_RESPONSE>;\n-\t<message-ext> element containing other discovery message defined in future releases; or\n-\tan element from other namespaces defined in future releases.\nThe <DISCOVERY_REQUEST> element contains one or more of the following elements:\n1)\tzero, one or more <discovery-request> element which contains transactions sent from the UE to the ProSe Function as announcing or monitoring requests for open ProSe direct discovery. Each <discovery-request> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.2.2.1;\nb)\ta <command> element containing the parameter defined in subclause 12.2.2.2;\nc)\ta <UE-identity> element containing the parameter defined in subclause 12.2.2.3;\nd)\ta <Prose-Application-ID> element containing the parameter defined in subclause 12.2.2.4;\ne)\tan <application-identity> element containing the parameter defined in subclause 12.2.2.5;\nf)\ta <Discovery-Entry-ID> element containing the parameter defined in subclause 12.2.2.33;\ng)\tan optional <Requested-Timer> element containing the parameter defined in subclause 12.2.2.27;\nh)\tan optional  <metadata> element containing the parameter defined in subclause 12.2.2.21;\ni)\t\tan optional <Announcing-PLMN-ID> element containing the parameter defined in subclause 12.2.2.64;\nj)\tzero or one <ACE-enabled-indicator> element containing the parameter defined in subclause 12.2.2.38;\nk)\tzero or one <PC5-tech> element containing the parameter defined in subclause 12.2.2.71;\nl)\tzero or one <anyExt> element containing elements defined in future releases;\nm)\tzero, one or more elements from other namespaces defined in future releases; and\nn)\tzero, one or more attributes defined in future releases;\n2)\tzero, one, or more <restricted-discovery-request> element which contains transactions sent from the UE to the ProSe Function as announcing or monitoring requests for restricted ProSe directed discovery model A or transactions sent from the UE to the ProSe Function as discoveree or discoverer requests for restricted ProSe directed discovery model B. Each <restricted-discovery-request> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.2.2.1;\nb)\ta <command> element containing the parameter defined in subclause 12.2.2.2;\nc)\ta <UE-identity> element containing the parameter defined in subclause 12.2.2.3;\nd)\ta <RPAUID> element containing the parameter defined in subclause 12.2.2.30;\ne)\tan <application-identity> element containing the parameter defined in subclause 12.2.2.5;\nf) a <discovery-type> element containing the parameter defined in subclause 12.2.2.25;\ng)\tzero or one <ACE-enabled-indicator> element containing the parameter defined in subclause 12.2.2.38;\nh)\tan <announcing-type> element containing the parameter defined in subclause 12.2.2.31;\ni)\tan <application-level-container> element containing the parameter defined in subclause 12.2.2.32;\nj)\tzero or one <discovery-model> element containing the parameter defined in subclause 12.2.2.41;\nk)\tzero or one <Announcing-PLMN-ID> element containing the parameter defined in subclause 12.2.2.64;\nl)\ta <discovery-entry-id> element containing the parameter defined in subclause 12.2.2.33;\nm)\tan optional <Requested-Timer> element containing the parameter defined in subclause 12.2.2.27;\nn)\tzero or one <PC5-tech> element containing the parameter defined in subclause 12.2.2.71;\no)\tzero or one <anyExt> element containing elements defined in future releases;\np)\tzero, one or more elements from other namespaces defined in future releases; and\nq)\tzero, one or more attributes defined in future releases;\n3)\tzero or one <anyExt> element containing elements defined in future releases;\n4)\tzero, one or more elements from other namespaces defined in future releases;\n5)\tan optional \"network-initiated transaction method\" attribute containing the parameter defined in subclause 12.2.2.63; and\n6)\tzero, one or more attributes defined in future releases.\nThe <DISCOVERY_RESPONSE> element contains one or more of the following elements:\n1)\ta <Current-Time> element containing the parameter defined in subclause 12.2.2.23;\n2)\ta <Max-Offset> element containing the parameter defined in subclause 12.2.2.24;\n3)\tzero, one or more <response-announce> element which contains transactions sent from the ProSe Function to the UE as a response to an announcing request if the ProSe Function accepts the request. Each <response-announce> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.2.2.1;\nb)\tzero, one or more <ProSe-Application-Code> elements containing the parameter defined in subclause 12.2.2.6;c)\tzero or one <ProSe Application Code-ACE> element containing the parameter defined in subclause 12.2.2.70;\nd)\tzero, or one <validity-timer-T4000> element containing the parameter defined in 12.2.2.7;\ne)\tzero, or, one <discovery-key> element containing the parameter defined in subclause 12.2.2.9;\nf)\ta <Discovery-Entry-ID> element containing the parameter defined in subclause 12.2.2.33;\ng)\tzero or one <ACE-enabled-indicator> element containing the parameter defined in subclause 12.2.2.38;\nh)\tzero or one <PC5-tech> element containing the parameter defined in subclause 12.2.2.71;\ni)\t zero or one <anyExt> element containing elements defined in future releases;\nj)\tzero, one or more elements from other namespaces defined in future releases; and\nk)\tzero, one or more attributes defined in future releases;\n4)\tzero, one or more <response-monitor> element which contains transactions sent from the ProSe Function to the UE as a response to a monitoring request if the ProSe Function accepts the request. Each <response-monitor> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.2.2.1;\nb)\tzero, one or more <discovery-filter> elements containing the parameter defined in subclause 12.2.2.12;\nc)\ta <Discovery-Entry-ID> element containing the parameter defined in subclause 12.2.2.33;\nd)\tzero or one <ACE-enabled-indicator> element containing the parameter defined in subclause 12.2.2.38;\nda)\tzero or one <PC5-tech> element containing the parameter defined in subclause 12.2.2.71;\ne)\tzero or one <anyExt> element containing elements defined in future releases;\nf)\tzero, one or more elements from other namespaces defined in future releases; and\ng)\tzero, one or more attributes defined in future releases;\n5)\tzero, one or more <restricted-announce-response> element which contains transactions sent from the ProSe Function to the UE as a response to an announcing request for restricted ProSe direct discovery model A if the ProSe Function accepts the request. Each <restricted-announce-response> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.2.2.1;\nb)\tzero or one <ProSe-Restricted-Code> element containing the parameter defined in subclause 12.2.2.34;\nc)\tzero, one or more <ProSe-Restricted-Code-Suffix-Range> element containing the parameter defined in subclause 12.2.2.35;\nd)\tzero or one <validity-timer-T4007> element containing the parameter defined in 12.2.2.39;\ne)\tzero or one <ACE-enabled-indicator> element containing the parameter defined in subclause 12.2.2.38;\nf)\tzero or one <restricted-code-security-material> element containing the parameter defined in subclause 12.2.2.40;\ng)\tan optional <on-demand-announcing-enabled-indicator> element containing the parameter defined in subclause 12.2.2.36;\nh)\ta <discovery-entry-id> element containing the parameter defined in subclause 12.2.2.33;\ni)\tzero or one <PC5-tech> element containing the parameter defined in subclause 12.2.2.71;\nj)\tzero or one <anyExt> element containing elements defined in future releases;\nk)\tzero, one or more elements from other namespaces defined in future releases; and\nl)\tzero, one or more attributes defined in future releases;\n6)\tzero, one or more <restricted-monitor-response> element which contains transactions sent from the ProSe Function to the UE as a response to a monitoring request for restricted ProSe direct discovery model A if the ProSe Function accepts the request. Each <restricted-monitor-response> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.2.2.1;\nb)\tzero, one or more <restricted-discovery-filter> elements containing the parameter defined in subclause 12.2.2.37;\nc)\t\tzero or one <ACE-enabled-indicator> element containing the parameter defined in subclause 12.2.2.38\nd)\ta <discovery-entry-id> element containing the parameter defined in subclause 12.2.2.33;\ne)\tan <application-level-container> element containing the parameter defined in subclause 12.2.2.32;\nf)\tzero or one <PC5-tech> element containing the parameter defined in subclause 12.2.2.71;\ng)\tzero or one <anyExt> element containing elements defined in future releases;\nh)\tzero, one or more elements from other namespaces defined in future releases; and\ni)\tzero, one or more attributes defined in future releases;\n7)\tzero, one or more <restricted-discoveree-response> element which contains transactions sent from the ProSe Function to the UE as a response to a discoveree UE's request for restricted ProSe direct discovery model B if the ProSe Function accepts the request. Each <restricted-discoveree-response> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.2.2.1;\nb)\ta <ProSe-Response-Code> element containing the element defined in subclause12.2.2.42;\nc)\tone or more <query-filter> elements containing the parameter defined in subclause 12.2.2.43;\nd)\ta <validity-timer-T4011> element containing the parameter defined in subclause 12.2.2.44;\ne)\tzero or one <restricted-code-security-material> element containing the parameter defined in subclause 12.2.2.40;\nf)\ta <discovery-entry-id> element containing the parameter defined in subclause 12.2.2.33;\ng)\tzero or one <PC5-tech> element containing the parameter defined in subclause 12.2.2.71;\nh)\tzero or one <anyExt> element containing elements defined in future releases;\ni)\tzero, one or more elements from other namespaces defined in future releases; and\nj)\tzero, one or more attributes defined in future releases;\n8)\tzero, one or more <restricted-discoverer-response> element which contains transactions sent from the ProSe Function to the UE as a response to a discoverer UE's request for restricted ProSe direct discovery model B if the ProSe Function accepts the request. Each <restricted-discoverer-response> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.2.2.1;\nb)\t\tone or more <subquery-result> elements containing the parameter defined in subclause 12.2.2.45;\nc)\ta <discovery-entry-id> element containing the parameter defined in subclause 12.2.2.33;\nd)\tzero or one <PC5-tech> element containing the parameter defined in subclause 12.2.2.71;\ne)\tzero or one <anyExt> element containing elements defined in future releases;\nf)\tzero, one or more elements from other namespaces defined in future releases; and\ng)\tzero, one or more attributes defined in future releases;\n9)\tzero, one or more <response-reject> element which contains transactions sent from the ProSe Function to the UE as a response to an announcing or monitoring requests if the ProSe Function  cannot accept the request. Each <response-reject> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.2.2.1;\nb)\ta <PC3-control-protocol-cause-value> element containing the parameter defined in subclause 12.2.2.8.\nc)\tzero, one or more elements defined in future releases; and\nd)\tzero, one or more attributes defined in future releases;\n10)\t zero or one <anyExt> element containing elements defined in future releases;\n11)\tzero, one or more elements from other namespaces defined in future releases;\n12)\tan optional \"network-initiated transaction method\" attribute containing the parameter defined in subclause 12.2.2.63; and\n13)\tzero, one or more attributes defined in future releases.\nThe <MATCH_REPORT> element contains one or more of the following element:\n1)\tzero, one or more <match-report> element which contains transactions sent from the UE to the ProSe Function to report a matching of the direct discovery. Each <match-report> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.2.2.1;\nb)\ta <ProSe-Application-Code> element containing the parameter defined in subclause 12.2.2.6;\nc)\ta <UE-identity> element containing the parameter defined in subclause 12.2.2.3;\nd)\ta <Monitored-PLMN-id> element containing the parameter defined in subclause 12.2.2.16;\ne)\tan optional <VPLMN-id> element containing the parameter defined in subclause 12.2.2.17;\nf)\ta <MIC> element containing the parameter defined in subclause 12.2.2.11;\ng)\ta <UTC-based-counter> element containing the parameter defined in subclause 12.2.2.18;\nh)\ta <metadata-flag> element containing the parameter defined in subclause 12.2.2.20;\ni)\ta <MessageType> element containing the parameter defined in subclause 12.2.2.10;\nj)\tzero or one <PC5-tech> element containing the parameter defined in subclause 12.2.2.71;\nk)\tzero or one <anyExt> element containing elements defined in future releases;\nl)\tzero, one or more elements from other namespaces defined in future releases; and\nm)\tzero, one or more attributes defined in future releases;\n2)\tzero, one or more <restricted-match> element which contain transactions sent from the UE to the ProSe Function to report a matching of the restricted direct discovery model A or model B. Each <restricted-match> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.2.2.1;\nb)\ta <UE-identity> element containing the parameter defined in subclause subclause 12.2.2.3;\nc)\ta <discovery-type> element containing the parameter defined in subclause 12.2.2.25\nd)\t\tan <application-identity> element containing the parameter defined in subclause 12.2.2.5\ne)\tan <RPAUID> element containing the parameter defined in subclause 12.2.2.30;\nf)\ta <Restricted-Code-Discovered> element containing the ProSe Restricted Code parameter defined in subclause 12.2.2.34 or ProSe Response Code parameter defined in subclause 12.2.2.42;\ng)\tan optional <MIC> element containing the parameter defined in subclause 12.2.2.11;\nh)\tan optional <MessageType> element containing the parameter defined in subclause 12.2.2.10;\ni)\tan optional <UTC-based-counter> element containing the parameter defined in subclause 12.2.2.18;\nj)\ta <metadata-flag> element containing the parameter defined in subclause 12.2.2.20;\nk)\tzero or one <PC5-tech> element containing the parameter defined in subclause 12.2.2.71;\nl)\tzero or one <anyExt> element containing elements defined in future releases;\nm)\tzero, one or more elements from other namespaces defined in future releases; and\nn)\tzero, one or more attributes defined in future releases.\n3)\tzero or one <anyExt> element containing elements defined in future releases;\n4)\tzero, one or more elements from other namespaces defined in future releases; and\n5)\tzero, one or more attributes defined in future releases.\nThe <MATCH_REPORT_ACK> element contains one or more of the following elements:\n1)\ta <Current-Time> element containing the parameter defined in subclause 12.2.2.23;\n2)\tzero, one or more <match-ack> element which contains transactions sent from the ProSe Function to the UE as a response to a match report if the ProSe Function accepts the report. Each <match-ack> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.2.2.1;\nb)\ta <ProSe-Application-ID> element containing the parameter defined in subclause 12.2.2.4;\nc)\ta <validity-timer-T4004> element containing the parameter defined in subclause 12.2.2.19;\nd)\tan optional  <metadata> element containing the parameter defined in subclause 12.2.2.21;\ne)\tan optional <metadata-index-mask> element containing the parameter defined in subclause 12.2.2.62;\nf)\tzero or one <anyExt> element containing elements defined in future releases;\ng)\tzero, one or more elements from other namespaces defined in future releases;\nh)\ta mandatory \"match-report-refresh-timer-T4006\" attribute containing the parameter defined in subclause 12.2.2.26; and\ni)\tzero, one or more attributes defined in future releases;\n3)\tzero, one or more <restricted-match-ack> element which contain transactions sent from the ProSe Function to the UE as a response to a match report if the ProSe Function accepts the report. Each <restricted-match-ack> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.2.2.1;\nb)\tan <application-identity> element containing the parameter defined in subclause 12.2.2.5;\nc)\tan <RPAUID> element containing the parameter defined in subclause 12.2.2.30;\nd)\ta <validity-timer-T4016> element containing the parameter defined in subclause 12.2.2.60;\ne)\tan optional  <metadata> element containing the parameter defined in subclause 12.2.2.21;\nf)\tzero or one <anyExt> element containing elements defined in future releases;\ng)\tzero, one or more elements from other namespaces defined in future releases;\nh)\tan optional \"match-report-refresh-timer-T4017\" attribute containing the parameter defined in subclause 12.2.2.61; and\ni)\tzero, one or more attributes defined in future releases;\n4)\tzero, one or more <match-reject> element which contains transactions sent from the ProSe Function to the UE as a response to a match report if the ProSe Function cannot accept the match report. Each <match-reject> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.2.2.1;\nb)\ta <PC3-control-protocol-cause-value> element containing the parameter defined in subclause 12.2.2.8;\nc)\tzero, one or more elements defined in future releases; and\nd)\tzero, one or more attributes defined in future releases;\n5)\tzero or one <anyExt> element containing elements defined in future releases;\n6)\tzero, one or more elements from other namespaces defined in future releases; and\n7)\tzero, one or more attributes defined in future releases.\nThe <UE_REGISTRATION_REQUEST> element contains one or more of the following elements:\n1)\tOne or more <UE-register-request> element which contains transactions sent from the UE to the ProSe Function to register the UE. Each <UE-register-request > consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\ta <UE-identity> element containing the parameter defined in subclause 12.3.2.2;\nc)\ta <WLAN-link-layer-ID> element containing the parameter defined in subclause 12.3.2.6;\nd)\ta <method-for-server-initiated-transaction> element containing the parameter defined in subclause 12.3.2.14;\ne)\tzero or one <anyExt> element containing elements defined in future releases;\nf)\tzero, one or more elements from other namespaces defined in future releases; and\ng)\tzero, one or more attributes defined in future releases;\n2)\tzero or one <anyExt> element containing elements defined in future releases;\n3)\tzero, one or more elements from other namespaces defined in future releases; and\n4)\tzero, one or more attributes defined in future releases.\nThe <UE_REGISTRATION_RESPONSE> element contains one or more of the following elements:\n1)\tzero, one or more <response-register> element which contains transactions sent from the ProSe Function to the UE as a response to the UE_REGISTRATION_REQUEST message if the ProSe Function accepts the request. Each <response-register> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\tan <EPC-ProSe-User-ID> element containing the parameter defined in subclause 12.3.2.7;\nc)\ta <server-initiated-method-config> element containing the parameter defined in subclause 12.3.2.15;\nd)\tzero, one or more elements defined in future releases; and\ne)\tzero, one or more attributes defined in future releases;\n2)\tzero, one or more <response-reject> element which contains transactions sent from the ProSe Function to the UE as a response to the UE_REGISTRATION_REQUEST message if the ProSe Function cannot accept the request. Each <response-reject> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\ta <PC3-EPC-control-protocol-cause-value> element containing the parameter defined in subclause 12.3.2.5;\nc)\tzero, one or more elements defined in future releases; and\nd)\tzero, one or more attributes defined in future releases;\n3)\tzero or one <anyExt> element containing elements defined in future releases;\n4)\tzero, one or more elements from other namespaces defined in future releases; and\n5)\tzero, one or more attributes defined in future releases.\nThe <APPLICATION_REGISTRATION_REQUEST> element contains one or more of the following elements:\n1)\tOne or more <application-register-request> element which contains transactions sent from the UE to the ProSe Function to activate EPC-level ProSe discovery for a specific application. Each < application-register-request > consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\tan <EPC-ProSe-User-ID> element containing the parameter defined in subclause 12.3.2.7.\nc)\tan <application-identity> element containing the parameter defined in subclause 12.3.2.3;\nd)\tan <Application-Layer-User-ID> element containing the parameter defined in subclause 12.3.2.4;\ne)\tzero, one or more elements defined in future releases; and\nf)\tzero, one or more attributes defined in future releases;\n2)\tzero or one <anyExt> element containing elements defined in future releases;\n3)\tzero, one or more elements from other namespaces defined in future releases; and\n4)\tzero, one or more attributes defined in future releases.\nThe <APPLICATION_REGISTRATION_RESPONSE> element contains one or more of the following elements:\n1)\tzero, one or more <response-register> element which contains transactions sent from the ProSe Function to the UE as a response to the APPLICATION_REGISTRATION_REQUEST message if the ProSe Function accepts the request. Each <response-register> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\tone or more <allowed-range-class> element containing the parameter defined in subclause 12.3.2.8;\nc)\tzero or one <anyExt> element containing elements defined in future releases;\nd)\tzero, one or more elements from other namespaces defined in future releases; and\ne)\tzero, one or more attributes defined in future releases;\n2)\tzero,one or more <response-reject> element which contains transactions sent from the ProSe Function to the UE as a response to the APPLICATION_REGISTRATION_REQUEST message if the ProSe Function cannot accept the request. Each <response-reject> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\ta <PC3-EPC-control-protocol-cause-value> element containing the parameter defined in subclause 12.3.2.5;\nc)\tzero, one or more elements defined in future releases; and\nd)\tzero, one or more attributes defined in future releases;\n3)\tzero or one <anyExt> element containing elements defined in future releases;\n4)\tzero, one or more elements from other namespaces defined in future releases; and\n5)\tzero, one or more attributes defined in future releases.\nThe <PROXIMITY_REQUEST> element contains one or more of the following elements:\n1)\tOne or more <proximity-request> element which contains transactions sent from the UE to the ProSe Function to request to be alerted when it enters in proximity with a targeted UE. Each < proximity-request > consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\tan <EPC-ProSe-User-ID-A> element containing the parameter defined in subclause 12.3.2.7;\nc)\tan <application-identity> element containing the parameter defined in subclause 12.3.2.3;\nd)\tan <Application-Layer-User-ID-A> element containing the parameter defined in subclause 12.3.2.4;\ne)\tan <Application-Layer-User-ID-B> element containing the parameter defined in subclause 12.3.2.4;\nf)\ta <requested-range-class> element containing the parameter defined in subclause 12.3.2.8;\ng)\ta <UE-A-Location> element containing the parameter defined in subclause 12.3.2.11;\nh)\ta <time-window> element containing the parameter defined in subclause 12.3.2.9;\ni)\tan optional <WLAN-indication> element containing the parameter defined in subclause 12.3.2.12;\nj)\tzero or one <anyExt> element containing elements defined in future releases;\nk)\tzero, one or more elements from other namespaces defined in future releases; and\nl)\tzero, one or more attributes defined in future releases;\n2)\tzero or one <anyExt> element containing elements defined in future releases;\n3)\tzero, one or more elements from other namespaces defined in future releases; and\n4)\tzero, one or more attributes defined in future releases.\nThe <PROXIMITY_REQUEST_RESPONSE> element contains one or more of the following elements:\n1)\tzero,one or more <response-accept> element which contains transactions sent from the ProSe Function to the UE as a response to the PROXIMITY_REQUEST message if the ProSe Function accepts the request. Each <response-register> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\tzero, one or more elements defined in future releases; and\nc)\tzero, one or more attributes defined in future releases;\n2)\tzero, one or more <response-reject> element which contains transactions sent from the ProSe Function to the UE as a response to the PROXIMITY_REQUEST message if the ProSe Function cannot accept the request. Each <response-reject> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\ta <PC3-EPC-control-protocol-cause-value> element containing the parameter defined in subclause 12.3.2.5;\nc)\tzero, one or more elements defined in future releases; and\nd)\tzero, one or more attributes defined in future releases;\n3)\tzero or one <anyExt> element containing elements defined in future releases;\n4)\tzero, one or more elements from other namespaces defined in future releases; and\n5)\tzero, one or more attributes defined in future releases.\nThe <PROXIMITY_ALERT> element contains one or more of the following elements:\n1)\tOne or more <proximity-alert> element which contains transactions sent from the ProSe Function to the (UE A) and optionally to targeted (UE B) to alert them that they have entered in proximity. Each <proximity-alert> consists of:\na)\t<transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\tan <application-identity> element containing the parameter defined in subclause 12.3.2.3;\nc)\tan <Application-Layer-User-ID-A> element containing the parameter defined in subclause 12.3.2.4;\nd)\tan <Application-Layer-User-ID-B> element containing the parameter defined in subclause 12.3.2.4;\ne)\tan optional <assistance-information> element containing the parameter defined in subclause 12.3.2.13;\nf)\tzero or one <anyExt> element containing elements defined in future releases;\ng)\tzero, one or more elements from other namespaces defined in future releases; and\nh)\tzero, one or more attributes defined in future releases;\n2)\tzero or one <anyExt> element containing elements defined in future releases;\n3)\tzero, one or more elements from other namespaces defined in future releases; and\n4)\tzero, one or more attributes defined in future releases.\nThe <UE_DEREGISTRATION_REQUEST> element contains one or more of the following elements:\n1)\tOne or more <UE-deregister-request> element which contains transactions sent either from the UE to the ProSe Function or from the ProSe Function to the UE to deregister the UE. Each < UE-deregister-request > consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\tan <EPC-ProSe-User-ID> element containing the parameter defined in subclause 12.3.2.7;\nc)\ta <PC3-EPC-control-protocol-cause-value> element containing the parameter defined in subclause 12.3.2.5;\nd)\tzero, one or more elements defined in future releases; and\ne)\tzero, one or more attributes defined in future releases\n2)\tzero or one <anyExt> element containing elements defined in future releases;\n3)\tzero, one or more elements from other namespaces defined in future releases; and\n4)\tzero, one or more attributes defined in future releases.\nThe <UE_DEREGISTRATION_RESPONSE> element contains one or more of the following elements:\n1)\tOne or more <UE-deregister-response> element which contains transactions sent either from the UE to the ProSe Function or from the ProSe Function to the UE to complete the UE deregistration. Each < UE-deregister-response > consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\tzero, one or more elements defined in future releases; and\nc)\tzero, one or more attributes defined in future releases\n2)\tzero or one <anyExt> element containing elements defined in future releases;\n3)\tzero, one or more elements from other namespaces defined in future releases; and\n4)\tzero, one or more attributes defined in future releases.\nThe <CANCEL_PROXIMITY_REQUEST> element contains one or more of the following elements:\n1)\tOne or more <cancel-proximity-request> element which contains transactions sent from the UE to the ProSe Function or from the ProSe Function to the UE to request cancellation of an ongoing proximity request. Each < cancel_proximity-request > consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\tan <EPC-ProSe-User-ID-A> element containing the parameter defined in subclause 12.3.2.7;\nc)\tan <application-identity> element containing the parameter defined in subclause 12.3.2.3;\nd)\tan <Application-Layer-User-ID-B> element containing the parameter defined in subclause 12.3.2.4;\ne)\tzero, one or more elements defined in future releases; and\nf)\tzero, one or more attributes defined in future releases;\n2)\tzero or one <anyExt> element containing elements defined in future releases\n3)\tzero, one or more elements from other namespaces defined in future releases; and\n4)\tzero, one or more attributes defined in future releases.\nThe <CANCEL_PROXIMITY_RESPONSE> element contains one or more of the following elements:\n1)\tOne or more <cancel-proximity-responset> element which contains transactions sent from the ProSe Function to the UE or from the UE to the ProSe Function as a response to CANCEL_PROXIMITY_REQUEST message. Each < cancel_proximity-response > consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\tzero, one or more elements defined in future releases; and\nc)\tzero, one or more attributes defined in future releases;\n2)\tzero or one <anyExt> element containing elements defined in future releases;\n3)\tzero, one or more elements from other namespaces defined in future releases; and\n4)\tzero, one or more attributes defined in future releases.\nThe <PROXIMITY_REQUEST_VALIDATION> element contains one or more of the following elements:\n1)\tOne or more <proximity-request-validation> element which contains transactions sent by the ProSe Function to the targeted UE (UE B) to request confirmation of permission for proximity request. Each <proximity-request-validation> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\tan <application-identity> element containing the parameter defined in subclause 12.3.2.3;\nc)\tzero, one or more elements defined in future releases; and\nd)\tzero, one or more attributes defined in future releases;\n2)\tzero or one <anyExt> element containing elements defined in future releases;\n3)\tzero, one or more elements from other namespaces defined in future releases; and\n4)\tzero, one or more attributes defined in future releases.\nThe <PROXIMITY_REQUEST_VALIDATION_RESPONSE> element contains one or more of the following elements:\n1)\tzero, one or more <response-accept> element which contains transactions sent from the UE to the ProSe Function as a response to the PROXIMITY_REQUEST_VALIDATION message if the application in the UE accepts the request. Each <response-accept> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\tzero, one or more elements defined in future releases; and\nc)\tzero, one or more attributes defined in future releases;\n2)\tzero, one or more <response-reject> element which contains transactions sent from the UE to the ProSe Function as a response to the PROXIMITY_REQUEST_VALIDATION message if the application in the UE does not accept the request. Each <response-reject> consists of:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.3.2.1;\nb)\ta <PC3-EPC-control-protocol-cause-value> element containing the parameter defined in subclause 12.3.2.5.\nc)\tzero, one or more elements defined in future releases; and\nd)\tzero, one or more attributes defined in future releases;\n3)\tzero or one <anyExt> element containing elements defined in future releases;\n4)\tzero, one or more elements from other namespaces defined in future releases; and\n5)\tzero, one or more attributes defined in future releases.\nThe < DISCOVERY_UPDATE_REQUEST> element contains one or more of the following elements:\n1)\tOne or more <discovery-update-request> element which contains transactions sent from the ProSe Function to the UE as announcing or monitoring requests. Each <discovery-update-request> consists of:\na)\ta <prose-function-transaction-ID> element containing the parameter defined in subclause 12.2.2.28;\nb)\ta <UE-identity> element containing the parameter defined in subclause 12.2.2.3;\nc)\ta <discovery-entry-id> element containing the parameter defined in subclause 12.2.2.33;\nd)\tan optional <update-info> element containing the parameter defined in subclause 12.2.2.29;\ne)\tzero or one <anyExt> element containing elements defined in future releases;\nf)\tzero, one or more elements defined in future releases; and\ng)\tzero, one or more attributes defined in future releases;\n2)\tzero or one <anyExt> element containing elements defined in future releases;\n3)\tzero, one or more elements from other namespaces defined in future releases; and\n4)\tzero, one or more attributes defined in future releases.\nThe < DISCOVERY_UPDATE _RESPONSE> element contains one or more of the following elements:\n1)\tone or more <response-update> element which contains transactions sent from  the UE to the ProSe Function as a response if the UE accepts the request. Each <discovery-update-response> consists of:\na)\ta <prose-function-transaction-ID> element containing the parameter defined in subclause 12.2.2.28;\nb)\ta <discovery-entry-id> element containing the parameter defined in subclause 12.2.2.33;\nc)\t\tzero, one or more elements defined in future releases; and\nd)\tzero, one or more attributes defined in future releases;\n2)\tzero, one or more <response-reject> element which contains transactions sent from the UE to the ProSe Function as a response if the UE cannot accept the request. Each <response-reject> consists of:\na)\ta <prose-function-transaction-ID> element containing the parameter defined in subclause 12.2.2.28;\nb)\ta <PC3-control-protocol-cause-value> element containing the parameter defined in subclause 12.2.2.8.\nc)\tzero, one or more elements defined in future releases; and\nd)\tzero, one or more attributes defined in future releases;\n3)\t zero or one <anyExt> element containing elements defined in future releases;\n4)\tzero, one or more elements from other namespaces defined in future releases; and\n5)\tzero, one or more attributes defined in future releases.\nThe <ANNOUNCING_ALERT_REQUEST> element contains one or more of the following elements:\n1)\tOne or more <announcing-alert-request> element which contains transactions sent from the UE to the ProSe Function as announcing or monitoring requests. Each <announcing-alert-request> consists of:\na)\ta <prose-function-transaction-ID> element containing the parameter defined in subclause 12.2.2.28;\nb)\ta <UE-identity> element containing the parameter defined in subclause 12.2.2.3;\nc)\ta <RPAUID> element containing the parameter defined in subclause 12.2.2.30;\nd)\ta <Discovery-Entry-ID> element containing the parameter defined in subclause 12.2.2.33;\ne)\ta <ProSe-Restricted-Code> element containing the parameter defined in subclause 12.2.2.34;\nf)\tzero, one or more <ProSe-Restricted-Code-Suffix-Range> element containing the parameter defined in subclause 12.2.2.35;\ng)\tzero or one <anyExt> element containing elements defined in future releases;\nh)\tzero, one or more elements from other namespaces defined in future releases; and\ni)\tzero, one or more attributes defined in future releases;\n2)\tzero or one <anyExt> element containing elements defined in future releases;\n3)\tzero, one or more elements from other namespaces defined in future releases; and\n4)\tzero, one or more attributes defined in future releases.\nThe <ANNOUNCING_ALERT_RESPONSE> element contains one or more of the following elements:\n1)\tOne or more <announcing-alert-response> element which contains transactions sent from the UE to the ProSe Function as announcing or monitoring requests. Each <announcing-alert-response> consists of:\na)\ta <prose-function-transaction-ID> element containing the parameter defined in subclause 12.2.2.28;\nb)\tzero, one or more elements defined in future releases; and\nc)\tzero, one or more attributes defined in future releases;\n2)\tzero, one or more <response-reject> element which contains transactions sent from the UE to the ProSe Function as a response if the UE cannot accept the request. Each <response-reject> consists of:\na)\ta <prose-function-transaction-ID> element containing the parameter defined in subclause 12.2.2.28;\nb)\ta <PC3-control-protocol-cause-value> element containing the parameter defined in subclause 12.2.2.8.\nc)\tzero, one or more elements defined in future releases; and\nd)\tzero, one or more attributes defined in future releases;\n3)\tzero or one <anyExt> element containing elements defined in future releases;\n4)\tzero, one or more elements from other namespaces defined in future releases; and\n5)\tzero, one or more attributes defined in future releases.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.2.5\tPC5_DISCOVERY",
                            "text_content": "This message is sent by the UE over the PC5 interface for open ProSe direct discovery and restricted ProSe direct discovery. See table 11.2.5.1.1, table 11.2.5.1.1A, table 11.2.5.1.2, table 11.2.5.1.3, table 11.2.5.1.4, table 11.2.5.1.5, table 11.2.5.1.6, table 11.2.5.1.7, table 11.2.5.1.8, table 11.2.5.1.9 and table 11.2.5.1.10.\nTable 11.2.5.1.1: PC5_DISCOVERY message content for open ProSe direct discovery\n\nTable 11.2.5.1.1A: PC5_DISCOVERY message content for open ProSe direct discovery with application-controlled extension\n\nTable 11.2.5.1.2: PC5_DISCOVERY message content for restricted ProSe direct discovery\n\nTable 11.2.5.1.3: PC5_DISCOVERY message content for restricted ProSe direct discovery with application-controlled extension\n\nTable 11.2.5.1.4: PC5_DISCOVERY message for UE-to-Network Relay Discovery Announcement\n\nTable 11.2.5.1.5: PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation\n\nTable 11.2.5.1.6: PC5_DISCOVERY message for UE-to-Network Relay Discovery Response\n\nTable 11.2.5.1.7: PC5_DISCOVERY message for Group Member Discovery Announcement\n\nTable 11.2.5.1.8: PC5_DISCOVERY message for Group Member Discovery Solicitation\n\nTable 11.2.5.1.9: PC5_DISCOVERY message for Group Member Discovery Response\n\nTable 11.2.5.1.10: PC5_DISCOVERY message for Relay Discovery Additional Information\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.2.5.1.1: PC5_DISCOVERY message content for open ProSe direct discovery",
                                    "table number": 1,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 11.2.5.1.1A: PC5_DISCOVERY message content for open ProSe direct discovery with application-controlled extension",
                                    "table number": 2,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 11.2.5.1.2: PC5_DISCOVERY message content for restricted ProSe direct discovery",
                                    "table number": 3,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 11.2.5.1.3: PC5_DISCOVERY message content for restricted ProSe direct discovery with application-controlled extension",
                                    "table number": 4,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 11.2.5.1.4: PC5_DISCOVERY message for UE-to-Network Relay Discovery Announcement",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 11.2.5.1.5: PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 11.2.5.1.6: PC5_DISCOVERY message for UE-to-Network Relay Discovery Response",
                                    "table number": 7,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 11.2.5.1.7: PC5_DISCOVERY message for Group Member Discovery Announcement",
                                    "table number": 8,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 11.2.5.1.8: PC5_DISCOVERY message for Group Member Discovery Solicitation",
                                    "table number": 9,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 11.2.5.1.9: PC5_DISCOVERY message for Group Member Discovery Response",
                                    "table number": 10,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 11.2.5.1.10: PC5_DISCOVERY message for Relay Discovery Additional Information",
                                    "table number": 11,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "11.3\tMessages transmitted over the PC3ch interface",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "11.3.1\tGeneral",
                            "text_content": "This subclause defines XML schema and MIME type related to messages transmitted over the PC3ch interface.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.3.2\tapplication/3gpp-prose-pc3ch+xml",
                            "text_content": "The MIME type is used to carry information related to message transmitted over the PC3ch interface. It shall be coded as an XML document compliant to the XML schema in subclause 11.3.3 containing one of the following messages:\n-\tUSAGE_INFORMATION_REPORT_LIST; or\n-\tUSAGE_INFORMATION_REPORT_LIST_RESPONSE.\nEach of those messages is presented in the XML document as an XML element named after the corresponding message.\nThe XML document can contain elements and attributes defined in future releases of this document. Receiving entity ignores any element not defined by this version of the specification and any attribute not defined by this version of the specification.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.3.3\tXML Schema",
                            "text_content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\nxmlns=\"urn:3GPP:ns:ProSe:PC3ch:2014\"\nelementFormDefault=\"qualified\"\ntargetNamespace=\"urn:3GPP:ns:ProSe:PC3ch:2014\">\n\n<xs:annotation>\n<xs:documentation>\nSyntax of messages transmitted over the PC3ch interface\n</xs:documentation>\n</xs:annotation>\n\n<!-- Types defined for parameters with complicate structure -->\n<xs:complexType name=\"IMSI-info\">\n<xs:sequence>\n<xs:element name=\"MCC\" type=\"xs:integer\"/>\n<xs:element name=\"MNC\" type=\"xs:integer\"/>\n<xs:element name=\"MSIN\" type=\"xs:integer\"/>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:simpleType name=\"IPAddress-type\">\n<xs:restriction base=\"xs:string\"/>\n</xs:simpleType>\n\n<xs:simpleType name=\"Layer2Id-type\">\n<xs:restriction base=\"xs:hexBinary\"/>\n</xs:simpleType>\n\n<xs:simpleType name=\"ECGI-type\">\n<xs:restriction base=\"xs:hexBinary\"/>\n</xs:simpleType>\n\n<xs:simpleType name=\"AppSpecificInfo-type\">\n<xs:restriction base=\"xs:hexBinary\"/>\n</xs:simpleType>\n\n<xs:simpleType name=\"RadioResourcesIndicator-type\">\n<xs:restriction base=\"xs:integer\"/>\n</xs:simpleType>\n\n<xs:simpleType name=\"RadioFrequency-type\">\n<xs:restriction base=\"xs:hexBinary\"/>\n</xs:simpleType>\n\n<!--  XML attribute for any future extensions  -->\n<xs:complexType name=\"anyExtType\">\n<xs:sequence>\n<xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n</xs:complexType>\n\n<xs:complexType name=\"UsageInformationReportList-Info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"UE-identity\" type=\"IMSI-info\"/>\n<xs:element name=\"usage-information-report\" type=\"UsageInformationReport-Info\"\nminOccurs=\"1\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"app-specific-info\" type=\"AppSpecificInfo-type\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"UsageInformationReport-Info\">\n<xs:sequence>\n<xs:element name=\"coverage\" type=\"Coverage-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"group\" type=\"Group-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"radio-parameter-set\" type=\"RadioParameterSet-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:attribute name=\"sequence-number\" type=\"xs:integer\"/>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"Coverage-info\">\n<xs:sequence>\n<xs:element name=\"location\" type=\"Location-info\" minOccurs=\"0\"  maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:attribute name=\"in-coverage\" type=\"xs:boolean\"/>\n<xs:attribute name=\"timestamp\" type=\"xs:dateTime\" use=\"optional\"/>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"Location-info\">\n<xs:sequence>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:attribute name=\"ECGI\" type=\"ECGI-type\" use=\"optional\"/>\n<xs:attribute name=\"timestamp\" type=\"xs:dateTime\" use=\"optional\"/>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"RadioParameterSet-info\">\n<xs:sequence>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:attribute name=\"timestamp\" type=\"xs:dateTime\" use=\"required\"/>\n<xs:attribute name=\"params\" type=\"xs:hexBinary\"/>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"Group-info\">\n<xs:sequence>\n<xs:element name=\"UE-source-IP-address\" type=\"IPAddress-type\"/>\n<xs:element name=\"prose-UE-id\" type=\"Layer2Id-type\"/>\n<xs:element name=\"transmitter\" type=\"Transmitter-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"transmission\" type=\"Transmission-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"reception\" type=\"Reception-info\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:attribute name=\"prose-layer2-group-ID\" type=\"Layer2Id-type\"/>\n<xs:attribute name=\"prose-group-IP-multicast-address\" type=\"IPAddress-type\"/>\n<xs:attribute name=\"first-transmission-timestamp\" type=\"xs:dateTime\" use=\"optional\"/>\n<xs:attribute name=\"first-reception-timestamp\" type=\"xs:dateTime\" use=\"optional\"/>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"Transmitter-info\">\n<xs:sequence>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:attribute name=\"source-IP-address\" type=\"IPAddress-type\"/>\n<xs:attribute name=\"prose-UE-id\" type=\"Layer2Id-type\"/>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"Transmission-info\">\n<xs:sequence>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:attribute name=\"in-coverage\" type=\"xs:boolean\"/>\n<xs:attribute name=\"ECGI\" type=\"ECGI-type\" use=\"optional\"/>\n<xs:attribute name=\"amount\" type=\"xs:integer\"/>\n<xs:attribute name=\"timestamp\" type=\"xs:dateTime\" use=\"optional\"/>\n<xs:attribute name=\"radio-resources-ind\" type=\"RadioResourcesIndicator-type\" use=\"optional\"/>\n<xs:attribute name=\"radio-frequency\" type=\"RadioFrequency-type\" use=\"optional\"/>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"Reception-info\">\n<xs:sequence>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:attribute name=\"in-coverage\" type=\"xs:boolean\"/>\n<xs:attribute name=\"ECGI\" type=\"ECGI-type\" use=\"optional\"/>\n<xs:attribute name=\"amount\" type=\"xs:integer\"/>\n<xs:attribute name=\"timestamp\" type=\"xs:dateTime\" use=\"optional\"/>\n<xs:attribute name=\"radio-resources-ind\" type=\"RadioResourcesIndicator-type\" use=\"optional\"/>\n<xs:attribute name=\"radio-frequency\" type=\"RadioFrequency-type\" use=\"optional\"/>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"UsageInformationReportListResponse-Info\">\n<xs:sequence>\n<xs:element name=\"response-accept\" type=\"UsageInformationReportListResponseAccept-Info\" minOccurs=\"0\"/>\n<xs:element name=\"response-reject\" type=\"UsageInformationReportListResponseReject-Info\" minOccurs=\"0\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"UsageInformationReportListResponseAccept-Info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:complexType name=\"UsageInformationReportListResponseReject-Info\">\n<xs:sequence>\n<xs:element name=\"transaction-ID\" type=\"xs:integer\"/>\n<xs:element name=\"cause-value\" type=\"xs:integer\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\" minOccurs=\"0\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n</xs:sequence>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n\n<xs:element name=\"prose-pc3ch-message\">\n<xs:complexType>\n<xs:choice>\n<xs:element name=\"USAGE_INFORMATION_REPORT_LIST\" type=\"UsageInformationReportList-Info\"/>\n<xs:element name=\"USAGE_INFORMATION_REPORT_LIST_RESPONSE\" type=\"UsageInformationReportListResponse-Info\"/>\n<xs:element name=\"anyExt\" type=\"anyExtType\"/>\n<xs:any namespace=\"##other\" processContents=\"lax\"/>\n</xs:choice>\n<xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n</xs:complexType>\n</xs:element>\n\n</xs:schema>\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.3.4\tSemantics",
                            "text_content": "The <prose-pc3ch-message> element is the root element of this XML document.\nThe <prose-pc3ch-message> element contains one of the following:\na)\t<USAGE_INFORMATION_REPORT_LIST> element;\nb)\t<USAGE_INFORMATION_REPORT_LIST_RESPONSE> element;\nc)\t<anyExt> element containing elements defined in future releases; or\nd)\tone or more elements from other namespace defined in future releases.\nThe <prose-pc3ch-message> element contains zero, one or more attributes defined in future releases.\nThe <USAGE_INFORMATION_REPORT_LIST> element contains:\na)\ta <transaction-ID> element containing the parameter defined in subclause 12.4.2.1;\nb)\ta <UE-identity> element containing the parameter defined in subclause 12.4.2.2;\nc)\tone or more <usage-information-report> elements;\nd)\tzero, one or more <app-specific-info> element;\ne)\tzero or one <anyExt> element containing elements defined in future releases;\nf)\tzero, one or more elements from other namespaces defined in future releases; and\ng)\tzero, one or more attributes defined in future releases.\nThe <usage-information-report> element carries one usage information report. The <usage-information-report> element contains:\na)\tmandatory \"sequence-number\" attribute containing the parameter defined in subclause 12.4.2.3;\nb)\tzero, one or more <coverage> elements;\nc)\tzero, one or more <group> element;\nd)\tzero, one or more <radio-parameter-set> elements;\ne)\tzero or one <anyExt> element containing elements defined in future releases;\nf)\tzero, one or more elements from other namespaces defined in future releases; and\ng)\tzero, one or more attributes defined in future releases.\nThe <coverage> element carries information whether the UE was in E-UTRAN coverage or out of E-UTRAN coverage. The <coverage> element contains:\na)\tmandatory \"in-coverage\" attribute containing the parameter defined in subclause 12.4.2.4;\nb)\toptional \"timestamp\" attribute containing the parameter defined in subclause 12.4.2.8 indicating date and time when the information given in the element start being valid;\nc)\tif the UE was in E-UTRAN coverage, zero, one or more <location> elements;\nd)\tzero or one <anyExt> element containing elements defined in future releases;\ne)\tzero, one or more elements from other namespaces defined in future releases; and\nf)\tzero, one or more attributes defined in future releases.\nThe <location> element carries information about an E-UTRAN cell where the UE was camping on or which the UE used in the EMM-CONNECTED mode. The <location> element contains:\na)\tan optional \"ECGI\" attribute containing the parameter defined in subclause 12.4.2.5;\nb)\tan optional \"timestamp\" attribute containing the parameter defined in subclause 12.4.2.8 indicating date and time when the information given in the element start being valid;\nc)\tzero or one <anyExt> element containing elements defined in future releases;\nd)\tzero, one or more elements from other namespaces defined in future releases; and\ne)\tzero, one or more attributes defined in future releases.\nThe <radio-parameter-set> element carries information about the configured radio parameters for the ProSe direct communication applicable in the geographical area of the UE. The <radio-parameter-set> element contains:\na)\ta mandatory \"params\" attribute containing the parameter defined in subclause 12.4.2.6;\nb)\ta mandatory \"timestamp\" attribute containing the parameter defined in subclause 12.4.2.8 indicating date and time when the information given in the element start being valid;\nc)\tzero or one <anyExt> element containing elements defined in future releases;\nd)\tzero, one or more elements from other namespaces defined in future releases; and\ne)\tzero, one or more attributes defined in future releases.\nThe <group> element carries information about a ProSe group. The <group> element contains:\na)\ta mandatory \"prose-layer2-group-ID\" attribute containing the parameter defined in subclause 12.4.2.9;\nb)\ta mandatory \"prose-group-IP-multicast-address\" attribute containing the parameter defined in subclause 12.4.2.10;\nc)\tan optional \"first-transmission-timestamp\" attribute containing the parameter defined in subclause 12.4.2.8 indicating date and time of the first transmission to the ProSe Group IP multicast address in the collection period;\nd)\tan optional \"first-reception-timestamp\" attribute containing the parameter defined in subclause 12.4.2.8 indicating date and time of the first reception from the ProSe Group IP multicast address in the collection period;\ne)\ta <UE-source-IP-address> element containing the parameter defined in subclause 12.4.2.11, of the UE;\nf)\ta <prose-UE-id> element containing the parameter defined in subclause 12.4.2.12, of the UE;\ng)\tzero, one or more <transmitter> element;\nh)\tzero, one or more <transmission> element;\ni)\tzero, one or more <reception> element;\nj)\tzero or one <anyExt> element containing elements defined in future releases;\nk)\tzero, one or more elements from other namespaces defined in future releases; and\nl)\tzero, one or more attributes defined in future releases.\nThe <transmitter> element carries information about a transmitter in a ProSe group. The <transmitter> element contains:\na)\ta mandatory \"source-IP-address\" attribute containing the parameter defined in subclause 12.4.2.11, of the transmitter;\nb)\ta mandatory \"prose-UE-id\" attribute containing the parameter defined in subclause 12.4.2.12, of the transmitter;\nc)\tzero or one <anyExt> element containing elements defined in future releases;\nd)\tzero, one or more elements from other namespaces defined in future releases; and\ne)\tzero, one or more attributes defined in future releases.\nThe <transmission> element carries information about a transmission in a ProSe group. The <transmission> element contains:\na)\ta mandatory \"in-coverage\" attribute containing the parameter defined in subclause 12.4.2.4;\nb)\tif the UE was in E-UTRAN coverage when transmitting the data, an optional \"ECGI\" attribute containing the parameter defined in subclause 12.4.2.5, indicating E-UTRAN Cell Global Identification of the E-UTRAN cell where the UE was camping on or which the UE used in the EMM-CONNECTED mode when transmitting the data;\nc)\tif the UE was in E-UTRAN coverage and the \"ECGI\" attribute is included:\n1)\ta mandatory \"amount\" attribute containing the parameter defined in subclause 12.4.2.13 indicating the amount of octets transmitted to the ProSe group:\n-\twhen the UE was camping on a cell identified by the \"ECGI\" attribute when transmitting the data; or\n-\twhen the UE used in the EMM-CONNECTED mode a cell identified by the \"ECGI\" attribute when transmitting the data; and\n2)\tan optional \"timestamp\" attribute containing the parameter defined in subclause 12.4.2.8 indicating date and time of the first transmission in the E-UTRAN cell;\nd)\tif the UE was in E-UTRAN coverage and the \"ECGI\" attribute is not included:\n1)\ta mandatory \"amount\" attribute containing the parameter defined in subclause 12.4.2.13 indicating the amount of octets transmitted to the ProSe group during the in E-UTRAN coverage period: and\n2)\tan optional \"timestamp\" attribute containing the parameter defined in subclause 12.4.2.8 indicating date and time of the first transmission during the in E-UTRAN coverage period;\ne)\tif the UE was out of E-UTRAN coverage:\n1)\ta mandatory \"amount\" attribute containing the parameter defined in subclause 12.4.2.13 indicating the amount of octets transmitted to the ProSe group during the out of E-UTRAN coverage period; and\n2)\tan optional \"timestamp\" attribute containing the parameter defined in subclause 12.4.2.8 indicating date and time of the first transmission during the out of E-UTRAN coverage period;\nf)\tan optional \"radio-resources-ind\" attribute containing the parameter defined in subclause 12.4.2.14;\ng)\tan optional \"radio-frequency\" attribute containing the parameter defined in subclause 12.4.2.15;\ni)\tzero or one <anyExt> element containing elements defined in future releases;\nj)\tzero, one or more elements from other namespaces defined in future releases; and\nk)\tzero, one or more attributes defined in future releases.\nThe <reception> element carries information about a reception in a ProSe group. The <reception> element contains:\na)\ta mandatory \"in-coverage\" attribute containing the parameter defined in subclause 12.4.2.4 indicating whether the UE was in E-UTRAN coverage when receiving the data;\nb)\tif the UE was in E-UTRAN coverage when receiving the data, an optional \"ECGI\" attribute containing the parameter defined in subclause 12.4.2.5 indicating E-UTRAN Cell Global Identification of the E-UTRAN cell where the UE was camping on or which the UE used in the EMM-CONNECTED mode when receiving the data;\nc)\tif the UE was in E-UTRAN coverage and the \"ECGI\" attribute is included:\n1)\ta mandatory \"amount\" attribute containing the parameter defined in subclause 12.4.2.13 indicating the amount of octets received from the ProSe group:\n-\twhen the UE was camping on a cell identified by the \"ECGI\" attribute when receiving the data; or\n-\twhen the UE used in the EMM-CONNECTED mode a cell identified by the \"ECGI\" attribute when receiving the data; and\n2)\tan optional \"timestamp\" attribute containing the parameter defined in subclause 12.4.2.8 indicating date and time of the first reception in the E-UTRAN cell;\nd)\tif the UE was in E-UTRAN coverage and the \"ECGI\" attribute is not included:\n1)\ta mandatory \"amount\" attribute containing the parameter defined in subclause 12.4.2.13 indicating the amount of octets received from the ProSe group during the in E-UTRAN coverage period: and\n2)\tan optional \"timestamp\" attribute containing the parameter defined in subclause 12.4.2.8 indicating date and time of the first reception during the in E-UTRAN coverage period;\ne)\tif the UE was out of E-UTRAN coverage:\n1)\ta mandatory \"amount\" attribute containing the parameter defined in subclause 12.4.2.13 indicating the amount of octets received from the ProSe group during the out of E-UTRAN coverage period; and\n2)\tan optional \"timestamp\" attribute containing the parameter defined in subclause 12.4.2.8 indicating date and time of the first reception during the out of E-UTRAN coverage period;\nf)\tan optional \"radio-resources-ind\" attribute containing the parameter defined in subclause 12.4.2.14;\ng)\tan optional \"radio-frequency\" attribute containing the parameter defined in subclause 12.4.2.15;\nh)\tzero or one <anyExt> element containing elements defined in future releases;\ni)\tzero, one or more elements from other namespaces defined in future releases; and\nj)\tzero, one or more attributes defined in future releases.\nThe <app-specific-info> element contains an application specific data received from upper layers during the collection period.\nThe <USAGE_INFORMATION_REPORT_LIST_RESPONSE> element contains:\na)\tone of <response-accept> element and <response-reject> element;\nb)\tzero or one <anyExt> element containing elements defined in future releases;\nc)\tzero, one or more elements from other namespaces defined in future releases; and\nd)\tzero, one or more attributes defined in future releases.\nThe <response-accept> element indicates that a related USAGE_INFORMATION_REPORT_LIST message was accepted. The <response-accept> element contains:\na)\t<transaction-ID> element containing the parameter defined in subclause 12.4.2.1 indicating the value of the transaction ID of the related USAGE_INFORMATION_REPORT_LIST message;\nb)\tzero or one <anyExt> element containing elements defined in future releases;\nc)\tzero, one or more elements from other namespaces defined in future releases; and\nd)\tzero, one or more attributes defined in future releases.\nThe <response-reject> element indicates that a related USAGE_INFORMATION_REPORT_LIST message was rejected. The <response-reject> element contains:\na)\t<transaction-ID> element containing the parameter defined in subclause 12.4.2.1 indicating the value of the transaction ID of the related USAGE_INFORMATION_REPORT_LIST message;\nb)\t<cause-value> element containing the parameter defined in subclause 12.4.2.7;\nc)\tzero or one <anyExt> element containing elements defined in future releases;\nd)\tzero, one or more elements from other namespaces defined in future releases; and\ne)\tzero, one or more attributes defined in future releases.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "11.4\tPC5 Signalling messages",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "11.4.1\tOverview",
                            "text_content": "This clause defines the structure of the PC5 Signalling messages exchanged between two ProSe-enabled UEs over the PC5 interface. These are standard L3 messages as defined in 3GPP TS 24.007 [43].\nEach definition given in the present clause includes:\na)\ta table listing the Information Elements (IE) present in the message and the order of their appearance in the message. All IEs that may be repeated are explicitly indicated (The V, LV and LV-E formatted IEs, which contain the imperative part of the message, occur before the T, TV, TLV and TLV-E formatted IEs which contain the non-imperative part of the message, see 3GPP TS 24.007 [43]). In a (maximal) sequence of consecutive IEs with half octet length, the first IE with half octet length occupies bits 1 to 4 of octet N, the second IE bits 5 to 8 of octet N, the third IE bits 1 to 4 of octet N+1 etc. Such a sequence always has an even number of elements.\nFor each information element the table indicates:\n1.\tThe Information Element Identifier (IEI), in hexadecimal notation, if the IE has format T, TV, TLV or TLV-E. If the IEI has half octet length, it is specified by a notation representing the IEI as a hexadecimal digit followed by a \"-\" (example: B-).\nNOTE:\tThe same IEI can be used for different information element types in different messages of the same protocol.\n2.\tThe name of the information element (which is indicative of the semantics of the element). The name of the information element followed by \"IE\" or \"information element\" is used as reference to the information element within a message.\n3.\tThe name of the type of the information element (which indicates the coding of the value part of the IE), and generally, the referenced subclause of clause 12 of the present document describing the value part of the information element.\n4.\tThe presence requirement indication (M, C, or O) for the IE as defined in 3GPP TS 24.007 [43].\n5.\tThe format of the information element (T, V, TV, , TLV, LV-E or TLV-E) as defined in 3GPP TS 24.007 [43].\n6.\tThe length of the information element (or permissible range of lengths), in octets, in the message, where \"?\" means that the maximum length of the IE is only constrained by link layer protocol. This indication is non-normative.\nb)\tsubclauses specifying, where appropriate, conditions for IEs with presence requirement C or O in the relevant message which together with other conditions specified in the present document define when the information elements shall be included or not, what non-presence of such IEs means, and – for IEs with presence requirement C – the static conditions for presence or non-presence of the IEs or for both cases (see 3GPP TS 24.007 [43]).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "11.4.2\tDIRECT_COMMUNICATION_REQUEST",
                            "text_content": "This message is sent by a UE to another peer UE to establish a direct link. See table 11.4.2.1.1.\nMessage type:\tDIRECT_COMMUNICATION_REQUEST\nTable 11.4.2.1.1: DIRECT_COMMUNICATION_REQUEST message content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.2.1.1: DIRECT_COMMUNICATION_REQUEST message content",
                                    "table number": 12,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.3\tDIRECT_COMMUNICATION_ACCEPT",
                            "text_content": "This message is sent by the UE to another peer UE to indicate that the corresponding direct link setup request has been accepted. See table 11.4.3.1.1.\n.Message type:\tDIRECT_COMMUNICATION_ACCEPT\nTable 11.4.3.1.1: DIRECT_COMMUNICATION_ACCEPT message content\n\nThe UE shall include this IE if the IP Address Config IE is set to \"address allocation not supported\".\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.3.1.1: DIRECT_COMMUNICATION_ACCEPT message content",
                                    "table number": 13,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.4\tDIRECT_COMMUNICATION_REJECT",
                            "text_content": "This message is sent by the UE to another peer UE to indicate that the corresponding direct link setup request has been rejected. See table 11.4.4.1.1.\n.Message type:\tDIRECT_COMMUNICATION_REJECT\nTable 11.4.4.1.1: DIRECT_COMMUNICATION_REJECT message content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.4.1.1: DIRECT_COMMUNICATION_REJECT message content",
                                    "table number": 14,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.5\tDIRECT_COMMUNICATION_KEEPALIVE",
                            "text_content": "This message is sent by the UE to another peer UE to initiate a direct link keepalive procedure. See table 11.4.5.1.1.\n.Message type:\tDIRECT_COMMUNICATION_KEEPALIVE\nTable 11.4.5.1.1: DIRECT_COMMUNICATION_KEEPALIVE message content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.5.1.1: DIRECT_COMMUNICATION_KEEPALIVE message content",
                                    "table number": 15,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.6\tDIRECT_COMMUNICATION_KEEPALIVE_ACK",
                            "text_content": "This message is sent by the UE to another peer UE to acknowledge and respond to the link keepalive request. See table 11.4.6.1.1.\nMessage type:\tDIRECT_COMMUNICATION_KEEPALIVE_ACK\nTable 11.4.6.1.1: DIRECT_COMMUNICATION_KEEPALIVE_ACK message content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.6.1.1: DIRECT_COMMUNICATION_KEEPALIVE_ACK message content",
                                    "table number": 16,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.7\tDIRECT_COMMUNICATION_RELEASE",
                            "text_content": "This message is sent by the UE to another peer UE to initiate the direct link release procedure. See table 11.4.7.1.1.\n.Message type:\tDIRECT_COMMUNICATION_RELEASE\nTable 11.4.7.1.1: DIRECT_COMMUNICATION_RELEASE message content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.7.1.1: DIRECT_COMMUNICATION_RELEASE message content",
                                    "table number": 17,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.8\tDIRECT_COMMUNICATION_RELEASE_ACCEPT",
                            "text_content": "This message is sent by the UE to another peer UE to indicate that the link release request is accepted. See table 11.4.8.1.1.\n.Message type:\tDIRECT_COMMUNICATION_RELEASE_ACCEPT\nTable 11.4.8.1.1: DIRECT_COMMUNICATION_RELEASE_ACCEPT message content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.8.1.1: DIRECT_COMMUNICATION_RELEASE_ACCEPT message content",
                                    "table number": 18,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.9\tTMGI_MONITORING_REQUEST",
                            "text_content": "This message is sent by the remote UE to ProSe UE-to-network relay UE for TMGI monitoring request. See table 11.4.9.1.\nTable 11.4.9.1.1: TMGI_MONITORING_REQUEST content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.9.1.1: TMGI_MONITORING_REQUEST content",
                                    "table number": 19,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.10\tTMGI_MONITORING_RESPONSE",
                            "text_content": "This message is sent by the ProSe UE-to-network relay UE to the remote UE for TMGI monitoring response. See table 11.4.10.1.\nTable 11.4.10.1.1: TMGI_MONITORING_RESPONSE content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.10.1.1: TMGI_MONITORING_RESPONSE content",
                                    "table number": 20,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.11\tCELL_ID_ANNOUNCEMENT_REQUEST",
                            "text_content": "This message is sent by the remote UE to ProSe UE-to-network relay UE to initiate the cell ID announcement request procedure. See table 11.4.11.1.\nTable 11.4.11.1.1: CELL_ID_ANNOUNCEMENT_REQUEST content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.11.1.1: CELL_ID_ANNOUNCEMENT_REQUEST content",
                                    "table number": 21,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.12\tCELL_ID_ANNOUNCEMENT_RESPONSE",
                            "text_content": "This message is sent by the ProSe UE-to-network relay UE to the remote UE to acknowledge and respond to the cell ID announcement request. See table 11.4.12.1.\nTable 11.4.12.1.1: CELL_ID_ANNOUNCEMENT_RESPONSE content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.12.1.1: CELL_ID_ANNOUNCEMENT_RESPONSE content",
                                    "table number": 22,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.12A\tDIRECT_SECURITY_MODE_COMMAND",
                            "text_content": "This message is sent by a commanding UE to a peer UE to establish the security for a direct link. See table 11.4.12A.1.1.\nMessage type:\tDIRECT_SECURITY_MODE_COMMAND\nTable 11.4.12A.1.1: DIRECT_SECURITY_MODE_COMMAND message content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.12A.1.1: DIRECT_SECURITY_MODE_COMMAND message content",
                                    "table number": 23,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.13\tDIRECT_SECURITY_MODE_COMPLETE",
                            "text_content": "This message is sent by a peer UE to a commanding UE to confirm the establishment of the security for a direct link. See table 11.4.13.1.\nMessage type:\tDIRECT_SECURITY_MODE_COMPLETE\nTable 11.4.13.1: DIRECT_SECURITY_MODE_COMPLETE message content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.13.1: DIRECT_SECURITY_MODE_COMPLETE message content",
                                    "table number": 24,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.14\tDIRECT_SECURITY_MODE_REJECT",
                            "text_content": "This message is sent by a peer UE to a commanding UE to indicate a failure to establish the security. See table 11.4.14.1.\nMessage type:\tDIRECT_SECURITY_MODE_REJECT\nTable 11.4.2.14.1: DIRECT_SECURITY_MODE_REJECT message content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.2.14.1: DIRECT_SECURITY_MODE_REJECT message content",
                                    "table number": 25,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.15\tDIRECT_REKEYING_REQUEST",
                            "text_content": "This message is sent by a UE to the peer UE to refresh the security of an established direct link. See table 11.4.15.1.\nMessage type:\tDIRECT_REKEYING_REQUEST\nTable 11.4.15.1: DIRECT_REKEYING_REQUEST message content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.15.1: DIRECT_REKEYING_REQUEST message content",
                                    "table number": 26,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.16\tDIRECT_REKEYING_RESPONSE",
                            "text_content": "This message is sent by a UE to the peer UE to complete refreshing the security of an established direct link. See table 11.4.16.1.1.\nMessage type:\tDIRECT_REKEYING_RESPONSE\nTable 11.4.16.1: DIRECT_REKEYING_RESPONSE message content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.16.1: DIRECT_REKEYING_RESPONSE message content",
                                    "table number": 27,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.17\tDIRECT_REKEYING_TRIGGER",
                            "text_content": "This message is sent by a UE to the peer UE to trigger the peer UE to initiate a direct link rekeying procedure to refresh KD. See table 11.4.17.1.1.\nMessage type:\tDIRECT_REKEYING_TRIGGER\nTable 11.4.17.1: DIRECT_REKEYING_TRIGGER message content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.17.1: DIRECT_REKEYING_TRIGGER message content",
                                    "table number": 28,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.18\tREMOTE_UE_INFO_REQUEST",
                            "text_content": "This message is sent by the ProSe UE-to-network relay UE to the remote UE to initiate the remote UE information request procedure. See table 11.4.18.1.1.\nTable 11.4.18.1.1: REMOTE_UE_INFO_REQUEST content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.18.1.1: REMOTE_UE_INFO_REQUEST content",
                                    "table number": 29,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.4.19\tREMOTE_UE_INFO_RESPONSE",
                            "text_content": "This message is sent by the remote UE to the ProSe UE-to-network relay UE to respond to the remote UE information request. See table 11.4.19.1.1.\nTable 11.4.19.1.1: REMOTE_UE_INFO_RESPONSE content\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 11.4.19.1.1: REMOTE_UE_INFO_RESPONSE content",
                                    "table number": 30,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "11.5\tNon-IP data PDU format",
                            "text_content": "The non-IP data PDU is coded according to figure 11.5.1 and table 11.5.1.\n\nFigure 11.5.1: Non-IP data PDU format\nTable 11.5.1: Non-IP data PDU values\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "",
                                    "table number": 31,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 11.5.1: Non-IP data PDU values",
                                    "table number": 32,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "title": "12\tGeneral message format and information elements coding",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "12.1\tOverview",
                    "description": "",
                    "summary": "",
                    "text_content": "This clause contains general message format and information elements coding for the messages used in the procedures described in the present document.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "12.1A\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "The sending entity shall set the value of a spare bit to zero. The receiving entity shall ignore the value of a spare bit.\nThe sending entity shall not set the value of a field to a reserved value. The receiving entity shall discard a message carrying a field with the value set to a reserved value.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "12.2\tProSe direct discovery message formats",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "12.2.1\tData types format in XML schema",
                            "text_content": "To exchange structured information over the transport protocol, XML text format/notation is introduced.\nThe corresponding XML data types for the data types used in ProSe messages are provided in table 12.2.1.1.\nTable 12.2.1.1: Primitive or derived types for ProSe Parameter Type\n\nFor complex data types described in subclause 12.2.2, an XML \"complexType\" can be used.\nMessage construction shall be compliant with W3C REC-xmlschema-2-20041028: \"XML Schema Part 2: Datatypes\" [7]\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 12.2.1.1: Primitive or derived types for ProSe Parameter Type",
                                    "table number": 33,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "12.2.2\tParameters in ProSe direct discovery messages",
                            "text_content": "This parameter is used to uniquely identify a PC3 Control Protocol for ProSe direct discovery transaction when it is combined with other PC3 Control Protocol for ProSe direct discovery transactions in the same transport message. The UE shall set this parameter to a new number for each outgoing new discovery request. The transaction ID is an integer in the 0-255 range.\nThis parameter is used to indicate the type of discovery request (announce, monitor, query, or response) contained in a DISCOVERY_REQUEST message. It is an integer in the 0-255 range encoded as follows:\n0\tReserved\n1\tannounce\n2\tmonitor\n3\tquery\n4\tresponse\n5\tmetadata_update\n6-255\tUnused\nThis parameter is used to indicate the requesting UE's identity and is set to the IMSI. The coding of IMSI is defined in 3GPP TS 23.003 [4].\nThis parameter is used to carry an identity used for open ProSe direct discovery, identifying application related information for the ProSe-enabled UE. It is coded as specified in 3GPP TS 23.003 [4].\nThis parameter is used to identify the particular application that triggers the DISCOVERY_REQUEST message. The format of the Application Identity consists of two parts:\n-\tOS ID: operating system identifier. The format of the OS ID is a Universally Unique IDentifier (UUID) as specified in IETF RFC 4122 [8]; and\n-\tOS App ID: a string containing the OS specific application identifier.\nNOTE:\tFurther definition of the format of OS App ID is beyond the scope of this specification.\nThis parameter is used to contain a ProSe Application Code. The format of the ProSe Application Code is as follows:\na)\tif the ProSe Application Code is included in a PC5_DISCOVERY message or in a MATCH_REPORT message and application-controlled extension is used, the ProSe Application Code is encoded as a 184 bitstring composed of:\n-\tthe ProSe Application Code Prefix; and\n-\tthe ProSe Application Code Suffix; or\nb)\tin all other cases, the ProSe Application is encoded as a 184 bitstring as defined in 3GPP TS 23.003 [4].\nThis parameter is used to carry the value of validity timer T4000 associated with a ProSe Application Code. It is an integer in the 1-525600 range representing the timer value in unit of minutes.\nThis parameter is used to indicate the particular reason why a DISCOVERY_REQUEST or MATCH_REPORT message from the UE has been rejected by the ProSe Function. It is an integer in the 0-255 range encoded as follows:\n0\tReserved\n1\tInvalid Application\n2\tUnknown ProSe Application ID\n3\tUE authorisation failure\n4\tUnknown ProSe Application Code\n5\tInvalid MIC\n6\tInvalid UTC-based counter\n7\tInvalid Message Format\n8\tScope violation in ProSe Application ID\n9\tUnknown RPAUID\n10\tUnknown or Invalid Discovery Entry ID\n11\tInvalid Discovery Target\n12\tUE unauthorised for discovery with Application-Controlled Extension\n13\tUE unauthorised for on-demand announcing\n14\tMissing Application Level Container\n15\tInvalid Data in Application Level Container\n16\tInvalid Match Event\n17\tNo Valid ProSe Application Code\n18\tInvalid UE Identity\n19-255\t\tUnused\nThis parameter is used to carry a Discovery Key allocated by the ProSe Function. This key is used by the UE to compute the MIC that is included in the PC5_DISCOVERY message. The format of Discovery Key is defined in 3GPP TS 33.303 [6].\nThis parameter is used to indicate the type of ProSe direct discovery.\nThis parameter is coded as shown in figure 12.2.2.10.1 and table 12.2.2.10.1.\nFigure 12.2.2.10.1: Message Type parameter\nTable 12.2.2.10.1: Message Type parameter\n\nNOTE 1: \tContent Type '0000' (announce/response) is used for model A announcing and for model B discoveree operation.\nNOTE 2: \tContent Type '0100' (UE-to-Network Relay Discovery Announcement or UE-to-Network Relay Discovery Response) is used for model A announcing and for model B discoveree operation.\nNOTE 3: \tContent Type '0110' (Group Member Discovery Announcement or Group Member Discovery Response) is used for model A announcing and for model B discoveree operation.\nThis parameter is used to carry the MIC (Message Integrity Check) associated with the ProSe Application Code contained in a PC5_DISCOVERY message.\nThe elements in the Discovery Filter parameter are listed below.\n-\tProSe Application Code: The ProSe Application Code is used by a monitoring UE for full or partial matching of PC5_DISCOVERY messages received on the PC5 interface (see subclause 12.2.2.6). Only one code is allowed in a Discovery Filter;\n-\tProSe Application Mask: a bitmask provided by the ProSe Function in order to allow the monitoring UE to perform a full matching or partial matching of PC5_DISCOVERY messages received on the PC5 interface. A ProSe Application Mask with all bits set to \"1\" is used for full matching. One or more ProSe Application Masks may be included in a Discovery Filter. The length of the ProSe Application Mask is as same as the length of ProSe Application Code; and\n-\tTTLTimer T4002: Time-to-live duration for which the associated Discovery Filter is valid, after which it shall not be used. It is an integer in the 1-525600 range representing the timer value in unit of minutes.\nThis parameter is used to indicate the PLMN ID of the PLMN in which the PC5_DISCOVERY message containing a ProSe Application Code for which there was a match event was received. It is coded as specified in 3GPP TS 23.003 [4].\nThis parameter is used to indicate the PLMN ID of the PLMN in which the requesting UE is registered. It is coded as specified in 3GPP TS 23.003 [4].\nThis parameter is used to indicate the UTC time associated with the discovery transmission opportunity in which a PC5_DISCOVERY message is sent. It is expressed in unit of seconds and coded in binary format as the 32 least significant bits of the Coordinated Universal Time as defined in 3GPP TS 36.331 [12].\nThis parameter is used to carry the value of Validity Timer T4004 associated with a ProSe Application Code for which there was a match event. It is an integer in the 1-525600 range representing the timer value in unit of minutes.\nThis parameter is used to indicate whether the UE wishes to receive the latest metadata information associated with the ProSe Application ID or RPAUID in the MATCH_REPORT_ACK from the ProSe Function. It is a Boolean value coded as follows:\nFalse\tthe UE does not wish to receive the latest metadata information associated with the ProSe Application ID or RPAUID in the MATCH_REPORT_ACK from the ProSe Function\nTrue\tthe UE wishes to receive the latest metadata information associated with the ProSe Application ID or RPAUID in the MATCH_REPORT_ACK message from the ProSe Function\nThis parameter is used to carry the metadata that is associated with the ProSe Application ID contained in the MATCH_REPORT_ACK message. The purpose of the metadata is to carry additional application-layer information associated with a particular ProSe Application ID. Examples of such information are postal address, phone number, URL etc. The length and contents of the metadata are out of scope of 3GPP. The format of the metadata is a UTF8-encoded string.\nThis parameter is used to carry:\n-\tthe four least significant bits of the UTC-based counter associated with the discovery transmission opportunity used by the UE performing open ProSe direct discovery announcing; or\n-\tthe eight least significant bits of the UTC-based counter associated with the discovery transmission opportunity used by the UE performing ProSe direct discovery announcing for restricted ProSe direct discovery or for ProSe direct discovery for public safety use.\nThis parameter is coded as shown in figures 12.2.2.22.1 and 12.2.2.22.2, and table 12.2.2.22.1.\nFigure 12.2.2.22.1: UTC-based Counter LSB parameter for open ProSe direct discovery\nFigure 12.2.2.22. 2: UTC-based Counter LSB parameter for restricted ProSe direct discovery and for ProSe direct discovery for public safety use\nTable 12.2.2.22.1: UTC-based Counter LSB parameter\n\nThis parameter is used to carry the current UTC-based time at the ProSe Function. The format of this parameter follows the XML data type defined in table 12.2.1.1 for ProSe parameter type \"Time\".\nThis parameter is used to indicate the maximum time difference between the time on the UE's ProSe clock and the UTC-based counter associated with the discovery slot in seconds, as specified in 3GPP TS 33.303 [6]. The Max Offset is an integer in the 1-32 range.\nThis parameter is used to indicate the type of ProSe direct discovery contained in the DISCOVERY_REQUEST message or MATCH_REPORT message. It is an integer in the 0-3 range encoded as follows:\n0\tReserved\n1\tOpen discovery\n2\tRestricted discovery\n3\tUnused\nThis parameter is used to carry the value of Match Report Refresh Timer T4006 associated with a ProSe Application Code for which there was a match event. It is an integer in the 1-525600 range representing the timer value in unit of minutes.\nDuring the announce request procedure for open ProSe direct discovery or restricted ProSe direct discovery model A, the Requested Timer element is used to carry the length of validity timer associated with the ProSe Application Code or the ProSe Restricted Code that the UE expects to receive from the ProSe Function.When the procedure is to inform the ProSe Function that the UE wants to stop announcing a ProSe Application Code or a ProSe Restricted Code before the associated valid timer expires, the Requested Timer shall be set to 0.\nDuring the monitor request procedure for open ProSe direct discovery or restricted ProSe direct discovery model A, the Requested Timer element is only used to inform the ProSe Function that the UE wants to stop monitoring using Discovery Filter(s) or Restricted Discovery Filter(s). The Requested Timer shall be set to 0.\nIt is an integer in the 0-525600 range representing the timer value in unit of minutes.\nThis parameter is used to uniquely identify a PC3 Control Protocol for ProSe direct discovery transaction when it is combined with other PC3 Control Protocol for ProSe direct discovery transactions in the same transport message. The ProSe Function shall set this parameter to a new number for each outgoing new request. The ProSe Function transaction ID is an integer in the 0-255 range.\nThis parameter is used to carry either:\n1)\t the updated information for an announcing UE in restricted discovery with a new ProSe Restricted Code to replace the old one in the discovery entry and the corresponding validity timer. In this case the parameter shall contain the following:\n-\tProSe Restricted Code: See subclause 12.2.2.34; and\n-\tValidity Timer T4007: See subclause 12.2.2.39.\n2)\tthe updated information for a monitoring UE in restricted discovery with a new set of Restricted Discovery Filters to be used for a given discovery entry. In this case the parameter shall contain one or more Restricted Discovery Filters as defined in subclause 12.2.2.37;\n3)\tthe updated information for an announcing UE in open discovery with a new ProSe Application Code to replace the old one in the discovery entry and the corresponding validity timer. In this case the parameter shall contain:\n-\tProSe Application Code: See subclause 12.2.2.6; and\n-\tValidity Timer T4000: See subclause 12.2.2.7.\n4)\tthe updated information for a monitoring UE in open discovery with a new set of Discovery Filters to be used for a given discovery entry. In this case the parameter shall contain one or more Discovery Filters defined in subclause 12.2.2.12.\nThis parameter is used to carry the RPAUID (Restricted ProSe Application User ID), which is an identity used for restricted ProSe direct discovery, identifying application related information for the ProSe-enabled UE.\nThis parameter is used to indicate whether the UE requests on demand announcing in a DISCOVERY_REQUEST message. It is an integer in the 0-255 range encoded as follows:\n0\tnormal\n1\ton demand\n2-255\tUnused\nThis parameter is used to carry the Application Level Container, which contains application-level data transparent to the 3GPP network transferred between the application client in the UE and the ProSe Application Server.\nThis parameter is used to carry the Discovery Entry ID, which is an identity allocated by the ProSe Function to refer to a discovery entry in the UE's context as a result of a discovery request, either announcing or monitoring. It is an integer in the 0-65535 range.\nThis parameter is used to contain a ProSe Restricted Code. The format of the ProSe Restricted Code is as follows:\na)\tif the ProSe Restricted Code is included in a PC5_DISCOVERY message or in a MATCH_REPORT message and application-controlled extension is not used, the ProSe Restricted Code is encoded as a 184 bitstring composed of:\n-\tthe ProSe Restricted Code in the 64 most significant bits; and\n-\tthe remaining 120 bits set to zero;\nb)\tif the ProSe Restricted Code is included in a PC5_DISCOVERY message or in a MATCH_REPORT message and application-controlled extension is used, the ProSe Restricted Code is encoded as a 184 bitstring composed of\n-\tthe ProSe Restricted Code Prefix in the 64 most significant bits;\n-\tthe ProSe Restricted Code Suffix; and\n-\tany remaining unused least significant bits set to zero; or\nc)\tin all other cases, the ProSe Restricted Code is encoded as a 64 bitstring as defined in 3GPP TS 23.003 [4].\nThis parameter is used to carry a range of consecutive ProSe Restricted Code Suffixes, each of which can be appended by the UE to a ProSe Restricted Code Prefix (see subclause 12.2.2.34) for restricted ProSe direct discovery with application-controlled extension. A ProSe Restricted Code Suffix Range includes a Beginning Suffix Code and optionally an Ending Suffix Code, as described below:\n-\tBeginning Suffix Code: The bit-length of this bit string reflects the length of the suffix portion of the ProSe Restricted Code allocated by the ProSe Application Server for an RPAUID based on application configuration. The binary value of this code is the lowest value of the ProSe Restricted Code Suffix range.\n-\tEnding Suffix Code: The binary value of this code is the highest value of the ProSe Restricted Code Suffix range. The length of the Ending Suffix Code shall be the same as that of the Beginning Suffix Code.\nIf the ProSe Restricted Code Suffix Range contains only a single ProSe Restricted Code Suffix, then that suffix is represented by the Beginning Suffix Code, and the Ending Suffix Code is omitted.\nThis parameter is used to carry the on demand announcing enabled indicator, which is a Boolean value indicating whether on demand announcing is enabled or not in the ProSe Function.\nThis parameter is used to carry the Discovery Filter(s) used to monitor an individual target RPAUID in restricted ProSe direct discovery model A. It contains one or more filter(s), TTL timer T4009, optionally an RPAUID parameter identifying the target RPAUID, security parameters such as Discovery User Scrambling Key, Discovery User Integrity Key and Discovery User Confidentiality Key, optionally a metadata indicator, and optionally the corresponding metadata. The elements in the Restricted Discovery Filter parameter are defined as below.\n-\tFilter: a matching filter used for restricted ProSe direct discovery model A monitoring. It contains one code and one or more masks. The code is used by a monitoring UE for full or partial matching of PC5_DISCOVERY messages received on the PC5 interface with a ProSe Restricted Code (see subclause 12.2.2.34). Only one code is allowed in a filter. The mask is a bitmask provided by the ProSe Function in order to allow the monitoring UE to perform a full matching or partial matching of PC5_DISCOVERY messages received on the PC5 interface. A mask with all bits set to \"1\" is used for full matching. One or more masks may be included in a filter. The length of the mask is the same as the length of the code;\n-\tTTLTimer T4009: Time-to-live duration for which the associated Restricted Discovery Filter is valid, after which it shall not be used. It is an integer in the 1-525600 range representing the timer value in unit of minutes;\n-\tRPAUID: identifier of the target RPAUID to be monitored;\n-\tDUSK (Discovery User Scrambling Key): an optional key which is allocated by the ProSe Function and is used by the monitoring UE or discoverer UE for unscrambling the PC5_DISCOVERY message containing the ProSe Restricted Code in restricted ProSe direct discovery. The format of the DUSK is defined in 3GPP TS 33.303 [6];\n-\tDUIK (Discovery User Integrity Key) or a MIC Check Indicator :DUIK is an optional key which is allocated by the ProSe Function and is used by the UE to compute the MIC that is included in the PC5_DISCOVERY message containing the ProSe Restricted Code in restricted ProSe direct discovery. The format of the DUIK is defined in 3GPP TS 33.303 [6]. When the DUIK is absent, an optional MIC Check Indicator parameter may be included to inform a UE receiving PC5_DISCOVERY messages that the MIC field needs to be checked by sending a MATCH_REPORT message to the ProSe Function;\n-\tDUCK material: an optional parameter containing a DUCK (Discovery User Confidentiality Key) and an Encrypted Bitmask. The DUCK is allocated by the ProSe Function and is used by the UE to decrypt a portion of the PC5_DISCOVERY message in restricted ProSe direct discovery. The format of the DUCK is defined in 3GPP TS 33.303 [6]. The Encrypted Bitmask is a 184-bit bitmask which uses bit \"1\" to mark the positions of the bits for which the DUCK encryption is applied;\n-\tMetadata indicator: It contains the information element defined in subclause 12.2.2.65; and\n-\tMetadata: application-layer metadata associated with the monitoring target.\nThis parameter is used to indicate whether application-controlled extension for open ProSe direct discovery or restricted ProSe direct discovery is enabled. It is an integer value in the 0-255 range encoded as follows:\n0\tReserved\n1\tNormal\n2\tApplication-controlled extension enabled\n3-255\tUnused\nThis parameter is used to carry the value of validity timer T4007 associated with a ProSe Restricted Code or ProSe Restricted Code Prefix. It is an integer in the 1-525600 range representing the timer value in unit of minutes.\nThis parameter is used as a container for the information necessary for security keys and algorithms protecting the sending or receiving of restricted ProSe direct discovery messages over the PC5 interface. The elements in the Restricted Code Security Material parameter are listed below:\nDUSK (Discovery User Scrambling Key): an optional key which is allocated by the ProSe Function and is used by the UE for scrambling or unscrambling the PC5_DISCOVERY message containing the ProSe Restricted Code in restricted ProSe direct discovery. The format of the DUSK is defined in 3GPP TS 33.303 [6];\n-\tDUIK (Discovery User Integrity Key): an optional key which is allocated by the ProSe Function and is used by the UE to compute the MIC that is included in the PC5_DISCOVERY message containing the ProSe Restricted Code in restricted ProSe direct discovery. The format of the DUIK is defined in 3GPP TS 33.303 [6]; and\n-\tDUCK (Discovery User Confidentiality Key) and associated Encrypted Bitmask): DUCK is an optional key which is allocated by the ProSe Function and is used by the UE to encrypt a portion of the PC5_DISCOVERY message containing the ProSe Restricted Code in restricted ProSe direct discovery. The format of the DUCK is defined in 3GPP TS 33.303 [6]. The Encrypted Bitmask is a 184-bit bitmask which uses bit \"1\" to mark the positions of the bits for which the DUCK encryption is applied.\nThis parameter is used to indicate the model of ProSe direct discovery contained in the DISCOVERY_REQUEST message. It is an integer in the 0-3 range encoded as follows:\n0\tReserved\n1\tModel A\n2\tModel B\n3\tUnused\nThis parameter is used to carry the ProSe Response Code. It is a bit string coded as specified in 3GPP TS 23.003 [4].\nThis parameter is used to carry the Discovery Query Filter that is allocated by the ProSe Function in the HPLMN to the Discoveree UE for restricted Model B discovery, for a particular RPAUID. The elements in the Discovery Query Filter parameter are defined as below.\n-\tCode: The code is used by a Discoveree UE for full or partial matching of PC5_DISCOVERY messages received on the PC5 interface containing a ProSe Query Code. Only one code is allowed in a Discovery Query Filter.;\n-\tMask: The mask is a bitmask provided by the ProSe Function in order to allow the Discoveree UE to perform a full matching or partial matching of PC5_DISCOVERY messages received on the PC5 interface containing the ProSe Query Code. A mask with all bits set to \"1\" is used for full matching. One or more masks may be included in a filter. The length of the mask is the same as the length of the code.\nThis parameter is used to carry the value of validity timer T4011 associated with a ProSe Response Code and corresponding Discovery Query Filter(s). It is an integer in the 1-525600 range representing the timer value in unit of minutes.\nThis parameter is used to contain the information allocated by the ProSe Function related to one particular query target RPAUID which the discoverer UE intends to query with restricted ProSe direct discovery Model B. It contains one ProSe Query Code, one or more Discovery Response Filter(s), Validity Timer T4013, an RPAUID parameter identifying the target RPAUID, Restricted Security and optionally the corresponding metadata. The elements in the Subquery Result parameter are defined as below.\n-\tProSe Query Code: It is a ProSe Restricted Code allocated by the ProSe Function to a discoverer UE to solicit the response from a discoveree UE for a particular target RPAUID.\n-\tDiscovery Response Filter: It contains one code and one or more masks to be used to matching ProSe Response Code, as described in subclause 6.2.3B.4. The code is used by a discoverer UE to represent a targeted ProSe Response Code (see subclause 12.2.2.42). The mask is a bitmask provided by the ProSe Function in order to allow the discoverer UE to perform a full matching or partial matching of PC5_DISCOVERY messages received on the PC5 interface containing the ProSe Response Code. A mask with all bits set to \"1\" is used for full matching. The length of the mask is the same as the length of the code.\n-\tValidity Timer T4013: It represents the validity time associated with a ProSe Query Code and corresponding Discovery Response Filter(s). It is an integer in the 1-525600 range representing the timer value in unit of minutes.\n-\tRestricted Security: It contains the information element defined in subclause 12.2.2.40.\n-\tRPAUID: identifier of the target RPAUID to be monitored.\n-\tMetadata: application-layer metadata associated with the querying target.\nThis parameter is used to contain a ProSe Restricted Code Prefix, whose format is defined in 3GPP TS 23.003 [4].\nThis parameter is used to contain a ProSe Restricted Code Suffix, whose format is defined in 3GPP TS 23.003 [4]. If the size of ProSe Restricted Code Suffix is less than 120 bits, the information element shall be padded with zeros in the least significant bits.\nThe ProSe UE ID parameter is used to indicate a ProSe UE ID. The value of the ProSe UE ID parameter is a 24-bit long bit string.\nThe ProSe Relay UE ID parameter is used to indicate a ProSe Relay UE ID. The value of the ProSe Relay UE ID parameter is a 24-bit long bit string.\nThe User Info ID parameter carries a User Info ID as specified in 3GPP TS 23.303 [2]. The value of the User Info ID parameter is a 48-bit long bit string. The format of the User Info ID parameter is out of scope of this specification.\nNOTE: \tDepending on operation, User Info ID is indicated as the Announcer Info parameter, the Discoverer Info parameter or the Discoveree Info parameter.\nThe Relay Service Code parameter identifies a connectivity service the UE-to-Network relay provides. The value of the Relay Service Code parameter is a 24-bit long bit string. The format of the Relay Service Code parameter is out of scope of this specification.\nThe Target User Info parameter is used to provide the User Info ID of the targeted discoveree user. The value of the Target User Info parameter is a 48-bit long bit string.\nThe Target Group Info parameter is used to provide the identifier of the targeted group (e.g. ProSe Layer 2 Group ID). The value of the Target Group Info parameter is 24-bit long bit string.\nThe Discovery Group ID parameter carries an identifier of a discovery group that the UE belongs to. The value of the Discovery Group ID parameter is a 24-bit long bit string. The format of the Discovery Group ID parameter is out of scope of this specification.\nThis parameter is used to indicate the content of the PC5_DISCOVERY message for Group Member Discovery Solicitation.\nThis parameter is coded as shown in figure 12.2.2.55.1 and table 12.2.2.55.1.\n\nFigure 12.2.2.55.1: GMDS Composition parameter\nTable 12.2.2.55.1: GMDS Composition parameter\n\nThis parameter is a string of spare bits. The length of this parameter is variable and is indicated in a message where this parameter is included.\nThis parameter is used to indicate the content of the PC5_DISCOVERY message for Relay Discovery Additional Information.\nThis parameter is coded as shown in figure 12.2.2.57.1 and table 12.2.2.57.1.\n\nFigure 12.2.2.57.1: RDAI Composition IE parameter\n\nTable 12.2.2.57.1: RDAI Composition IE parameter\n\nThis parameter is used to indicate the ECGI of the serving cell where the ProSe UE-to-network relay UE is camping.\nThe UE-to-network relay ECGI parameter is coded as shown in figure 12.2.2.58 and table 12.2.2.58.\n\nFigure 12.2.2.58.1: UE-to-network relay ECGI parameter\nTable 12.2.2.58.1: UE-to-network relay ECGI parameter\n\nThis parameter is used to indicate a TMGI and its corresponding ProSe Layer-2 Group ID.\nThe MBMS related information parameter is coded as shown in figure 12.2.2.59.1 and table 12.2.2.59.1.\n\nFigure 12.2.2.59.1: TMGIs and ProSe Layer-2 Group IDs parameter\nTable 12.2.2.59.1: TMGIs and ProSe Layer-2 Group IDs parameter\n\nThis parameter is used to carry the value of Validity Timer T4016 associated with a ProSe Restricted Code for which there was a match event. It is an integer in the 1-525600 range representing the timer value in unit of minutes.\nThis parameter is used to carry the value of Match Report Refresh Timer T4017 associated with a ProSe Restricted Code for which there was a match event. It is an integer in the 1-525600 range representing the timer value in unit of minutes.\nThis parameter is a bitmask provided by the ProSe Function in order to indicate the portion used for the Metadata Index in the ProSe Application Code for the monitoring UE. The length of the Metadata Index Mask is as same as the length of ProSe Application Code.\nThis parameter is used to indicate the method enabling transport of PC3 messages for ProSe Function-initiated ProSe direct discovery procedures. It is an integer in the 0-255 range encoded as follows:\n0\tUnused\n1\tHTTP long polling\n2-255\tUnused\nThis parameter is used to indicate the PLMN ID of the PLMN operating the radio resources which the UE intends to use for transmitting a PC5_DISCOVERY message. It is coded as specified in 3GPP TS 23.003 [4].\nThis parameter is used to indicate whether there is a metadata associated with the target RPAUID. It is an integer value in the 0-255 range encoded as follows:\n0\tNo metadata associated\n1\tMetadata associated\n2-255\tUnused\nThis parameter is used to indicate the content of the PC5_DISCOVERY message for UE-to-Network Relay Discovery Solicitation.\nThis parameter is coded as shown in figure 12.2.2.66.1 and table 12.2.2.66.1.\n\nFigure 12.2.2.66.1: UDRS Composition parameter\nTable 12.2.2.66.1: UDRS Composition parameter\n\nThis parameter is used to indicate the status of ProSe UE-to-network relay.\nThis parameter is coded as shown in figure 12.2.2.67.1 and table 12.2.2.67.1.\nResource Status Indicator (RSI) is used to indicate whether or not the UE has resources available to provide a connectivity service for additional ProSe-enabled public safety UEs.\n\nFigure 12.2.2.67.1: Status Indicator parameter\nTable 12.2.2.67.1: Status Indicator parameter\n\nThis parameter is used to contain a ProSe Application Code Prefix. Its length indicates the size in bits of the allocated prefix, which can take any value that is a multiple of 8 in the 32 to 176 range.\nNOTE:\tThe size of the prefix for a given application is determined by the ProSe Application Server and made known to the ProSe Function by means that are out of scope of 3GPP.\nThis parameter is used to contain a ProSe Application Code Suffix. The ProSe Application Code Suffix is used with a ProSe Application Code Prefix to form a 184-bit ProSe Application Code for open ProSe direct discovery with application-controlled extension.\nThis parameter is used to carry a set of ProSe Application Code(s) allocated for a corresponding ProSe Application ID when application-controlled extension is used. It contains one ProSe Application Code Prefix, and one or more ProSe Application Code Suffix Range(s). The elements in the ProSe Application Code ACE parameter are defined as below:\n-\tProSe Application Code Prefix: as defined in subclause 12.2.2.68;\n-\tProSe Application Code Suffix Range: this parameter is used to carry a range of consecutive ProSe Application Code Suffixes (see subclause 12.2.2.69). A ProSe Application Code Suffix Range includes a Beginning Suffix Code and optionally an Ending Suffix Code, as described below:\n-\tBeginning Suffix Code: The bit-length of this bit string reflects the length of the suffix portion of the ProSe Application Code allocated by the ProSe Application Server for a ProSe Application ID based on application configuration. The binary value of this code is the lowest value of the ProSe Application Code Suffix range.\n-\tEnding Suffix Code: The binary value of this code is the highest value of the ProSe Application Code Suffix range. The length of the Ending Suffix Code shall be the same as that of the Beginning Suffix Code.\nIf the ProSe Application Code Suffix Range contains only a single ProSe Application Code Suffix, then that suffix is represented by the Beginning Suffix Code, and the Ending Suffix Code is omitted.\nThis parameter is used to indicate the PC5 radio technology in order to enable co-ordination between the announcing and monitoring side.\nThis parameter is coded as shown in figure 12.2.2.71.1 and table 12.2.2.71.1.\nFigure 12.2.2.71.1: PC5_tech parameter\nTable 12.2.2.71.1: PC5_tech parameter\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "This parameter is coded as shown in figure 12.2.2.10.1 and table 12.2.2.10.1.",
                                    "table number": 34,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.2.2.10.1: Message Type parameter",
                                    "table number": 35,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "This parameter is coded as shown in figures 12.2.2.22.1 and 12.2.2.22.2, and table 12.2.2.22.1.",
                                    "table number": 36,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Figure 12.2.2.22.1: UTC-based Counter LSB parameter for open ProSe direct discovery",
                                    "table number": 37,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.2.2.22.1: UTC-based Counter LSB parameter",
                                    "table number": 38,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "",
                                    "table number": 39,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.2.2.55.1: GMDS Composition parameter",
                                    "table number": 40,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "",
                                    "table number": 41,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.2.2.57.1: RDAI Composition IE parameter",
                                    "table number": 42,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The UE-to-network relay ECGI parameter is coded as shown in figure 12.2.2.58 and table 12.2.2.58.",
                                    "table number": 43,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.2.2.58.1: UE-to-network relay ECGI parameter",
                                    "table number": 44,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "",
                                    "table number": 45,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.2.2.59.1: TMGIs and ProSe Layer-2 Group IDs parameter",
                                    "table number": 46,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "",
                                    "table number": 47,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.2.2.66.1: UDRS Composition parameter",
                                    "table number": 48,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "",
                                    "table number": 49,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.2.2.67.1: Status Indicator parameter",
                                    "table number": 50,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "This parameter is coded as shown in figure 12.2.2.71.1 and table 12.2.2.71.1.",
                                    "table number": 51,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.2.2.71.1: PC5_tech parameter",
                                    "table number": 52,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "12.3\tEPC-level ProSe discovery message formats",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "12.3.1\tData types format in XML schema",
                            "text_content": "To exchange structured information over the transport protocol, XML text format/notation is introduced. XML data type definitions and requirements as specified in subclause 12.2.1 apply.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "12.3.2\tInformation elements in EPC-level ProSe discovery messages",
                            "text_content": "This parameter is used to uniquely identify a PC3 Control Protocol for EPC-level ProSe discovery transaction when it is combined with other PC3 Control Protocol for EPC-level ProSe discovery transactions in the same transport message. The UE shall set this parameter to a new number for each outgoing new discovery request. The transaction ID is an integer in the 0-255 range.\nThis parameter is used to indicate the requesting UE's identity and is set to the IMSI. The coding of IMSI is defined in 3GPP TS 23.003 [4].\nThis parameter is used to identify the particular application that triggers the APPLICATION_REGISTRATION_REQUEST message. The format of the Application Identity consists of two parts:\n-\tOS ID: operating system identifier. The format of the OS ID is a Universally Unique IDentifier (UUID) as specified in IETF RFC 4122 [8]; and\n-\tOS App ID: a string containing the OS specific application identifier.\nNOTE:\tFurther definition of the format of OS App ID is beyond the scope of this specification.\nThis parameter is used to carry an Application Layer User ID that identifies the user in the context of specific application. It is encoded as a bit string.\nThis parameter is used to indicate the particular reason why either the UE or the ProSe function sends the UE_DEREGISTRATION_REQUEST message or why the following messages have been rejected by the ProSe Function:\n-\tUE_REGISTRATION_REQUEST;\n-\tAPPLICATION_REGISTRATION_REQUEST;\n-\tPROXIMITY_REQUEST; and\n-\tPROXIMITY_REQUEST_VALIDATION.\nIt is an integer in the 0-255 range encoded as follows:\n0\tReserved\n1\tInvalid Application\n2\tUE authorisation failure\n3\tInvalid Message Format\n4\tApplication not registered\n5\tRange class not allowed for this application\n6\tProximity detection unlikely within requested time window\n7\tTargeted user not registered for this application\n8\tProximity validation rejected by B-side\n9\tApplication disabled temporarily\n10\tInvalid Application Layer User ID\n11-255\t\tUnused\nThis parameter is used to carry WLAN link layer identifier. The value of WLAN Link Layer ID is coded as a bit string of length 48.\nThis parameter is used to carry an EPC ProSe User ID that identifies the UE registered for EPC-level ProSe Discovery in the context of the ProSe Function. It is specified in 3GPP TS 23.003 [4].\nThis parameter is used to carry one range class used for APPLICATION_REGISTRATION_RESPONSE or PROXIMITY_REQUEST messages. It is an integer in the 0-255 range encoded as follows:\n0\tReserved\n1\t0-50 m\n2\t0-100 m\n3\t0-200 m\n4\t0-500 m\n5\t0-1000 m\n6-255\tUnused\nThis parameter is used to specify a time interval in minutes during which a proximity request is valid. The Time Window is an integer in the range of 1 – 1440 minutes.\nThe UE Location is set to the cell identity part of the Evolved Cell Global Identifier, as described in 3GPP TS 36.331 [12] and obtained from the lower layers of the UE. The value of UE Location is a bit string coded as specified in 3GPP TS 36.331 [12].\nThis parameter is used to carry an indication of whether the searching UE wishes to engage in WLAN direct discovery and communication subsequent to successful proximity detection. It is a Boolean value coded as follows:\nFalse\tthe searching UE does not wish to engage in WLAN direct discovery and communication subsequent to successful proximity detection\nTrue\tthe searching UE wishes to engage in WLAN direct discovery and communication subsequent to successful proximity detection\nThis parameter is used to carry information for expediting WLAN direct discovery and communication. The content of this parameter depends on the WLAN technology.\nWi-Fi Peer-to-Peer (P2P) specification [13] defines an architecture and set of protocols that facilitate direct discovery and communication using the IEEE 802.11 technology [14]. To assist WLAN direct discovery and communication as required by the Wi-Fi P2P technology, the Assistance Information includes the following parameters.\n-\tSSID: The SSID to use for Wi-Fi P2P operation. To be compliant with the Wi-Fi P2P specification [13] the SSID should be in the form \"DIRECT-ab\" where a, b are two random characters;\n-\tWLAN Secret Key: The pre-shared key to be used by UEs to secure their Wi-Fi P2P communication. This is used by UEs as the Pairwise Master Key (PMK);\n-\tGroup Owner indication: If set, the UE should implement the Group Owner (GO) functionality specified in the Wi-Fi P2P specification [13]. The UE implementing this functionality essentially becomes an AP that transmits Beacons with the P2P Information Element and accepts associations from other Wi-Fi P2P devices or from legacy Wi-Fi devices (those not implementing the Wi-Fi P2P functionality). If not set, the UE should behave as a Wi-Fi P2P client that attempts to discover and associate with a GO;\n-\tP2P Device Address of self: This is the WLAN Link Layer ID to be used by UE to advertise itself. A UE implementing the Group Owner and indicates the WLAN Direct device from which the GO should accept WLAN association requests. Association requests from all other WLAN devices should be rejected by GO.\n-\tP2P Device Address of peers: This is the WLAN Link Layer ID to be used by UE to discover peer UEs. A UE implementing the Group Owner should accept WLAN association requests only from devices that are in this list;\n-\tOperation channel: The channel on which Wi-Fi P2P discovery and communication should take place; and\n-\tValidity time: The time period during which the content provided in the assistance information is valid.\nThis parameter is used to indicate the capability of the UE to support methods other than OMA Push (e.g., HTTP long polling method) for server initiated procedures for EPC-level ProSe discovery. It is an integer in the 0-255 range encoded as follows:\n0\tNo extra methods available\n1\tHTTP long polling\n2-255\tUnused\nThis parameter is used to indicate the preference of  a server-initiated method type  to be used by the UE and the ProSe Function for server-initiated procedures for EPC-level ProSe discovery other than OMA Push (e.g., HTTP long polling). It is an integer in the 0-255 range encoded as follows:\n0\tThe ProSe Function does not prefer other method\n1\tHTTP long polling\n2-255\tUnused\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "12.4\tFormats for messages transmitted over the PC3ch interface",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "12.4.1\tData types format in XML schema",
                            "text_content": "To exchange structured information over the transport protocol, XML text format/notation is introduced.\nThe corresponding XML data types for the data types used in ProSe PC3ch messages are provided in table 12.4.1.\nTable 12.4.1: Primitive or derived types for ProSe PC3ch Parameter Type\n\nFor complex data types described in subclause 12.4.2, an XML \"complexType\" can be used.\nMessage construction shall be compliant with W3C REC-xmlschema-2-20041028: \"XML Schema Part 2: Datatypes\" [7].\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 12.4.1: Primitive or derived types for ProSe PC3ch Parameter Type",
                                    "table number": 53,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "12.4.2\tParameters in messages transmitted over the PC3ch interface",
                            "text_content": "This parameter is used to uniquely identify a message transmitted over the PC3ch interface when it is combined with another message transmitted over the PC3ch interface in the same transport message. The UE shall set this parameter to a new number for each outgoing new message which includes this information element and is transmitted over the PC3ch interface. The transaction ID is an integer in the 0-255 range.\nThis parameter is used to indicate the requesting UE's identity and is set to the IMSI. The coding of IMSI is defined in 3GPP TS 23.003 [4].\nThis parameter is used to indicate sequence number of the usage information report. The sequence number is an integer in the 0-4294967295 range. The sequence number is set to 0 on UE power up and is increased by 1 whenever a new usage information report is created.\nThis parameter is used to indicate whether the UE was in E-UTRAN coverage. It is a Boolean value coded as follows:\nTrue\tthe UE is in E-UTRAN coverage.\nFalse\tthe UE is out of E-UTRAN coverage.\nThis parameter is used to indicate E-UTRAN Cell Global Identification of the E-UTRAN cell where the UE was camping on or which the UE used in the EMM-CONNECTED mode. The coding of ECGI is defined in 3GPP TS 23.003 [4].\nThis parameter is used to indicate the radio parameters used for ProSe direct communication. Format of the value is according to the SL-Preconfiguration-r12 ASN.1 data type described in 3GPP TS 36.331 [12].\nThis parameter is used to indicate the particular reason why the ProSe function CTF (ADF) rejects USAGE_INFORMATION_REPORT_LIST message. It is an integer in the 0-255 range encoded as follows:\n0\tReserved\n2\tUE authorisation failure\n3\tInvalid Message Format\n10\tUnable to process usage information report list\n1, 4-9, 11-255\t\tUnused\nThis parameter is used to indicate time and date. The format of this parameter follows the XML data type defined in table 12.4.1 for ProSe PC3ch message parameter type \"Time\".\nThis parameters is used to indicate a ProSe Layer-2 Group ID. The value of ProSe Layer 2 Group ID is a 24-bit bit-string.\nThis parameters is used to indicate a ProSe Group IP multicast address. If the IP address is an IPv4 address, its value is coded as a string representing the dotted-decimal format of the IPv4 address as specified in IETF RFC 1166 [28]. If the IP address is an IPv6 address, its value is coded as a string representing the canonical text representation format of the IPv6 address as specified in IETF RFC 5952 [29].\nThis parameters is used to indicate an IP address used by the UE as a source address. If the IP address is an IPv4 address, its value is coded as a string representing the dotted-decimal format of the IPv4 address as specified in IETF RFC 1166 [28]. If the IP address is an IPv6 address, its value is coded as a string representing the canonical text representation format of the IPv6 address as specified in IETF RFC 5952 [29].\nThis parameters is used to indicate a ProSe UE ID. The value of ProSe UE ID is a 24-bit bit-string.\nThis parameters is used to indicate the amount of transported data in octets. The value of this parameter is coded as an integer.\nThis parameters is used to indicate whether the operator-provided radio resources or the configured radio resources were used for ProSe direct communication.\nIt is an integer in the 0-255 range encoded as follows:\n0\tReserved\n1\tthe operator-provided radio resources\n2\tthe configured radio resources\n3-255\tUnused\nThis parameter is used to indicate the radio frequency used for ProSe direct communication.\nFormat of the value is according to the ARFCN-ValueEUTRA-r9 ASN.1 data type described in 3GPP TS 36.331 [12].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "12.5\tPC5 Signalling message formats",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "12.5.1\tInformation elements in PC5 Signalling messages",
                            "text_content": "The PC5 SP Message Type IE is a type 3 information element, with the length of 1 octet. It is used to indicate the type of messages used in PC5 Signaling Protocol.\nTable 12.5.1.1.1 defines the value part of the PC5-SP Message Type IE used in the PC5 Signalling messages.\nTable 12.5.1.1.1: PC5-SP message types for PC5 Signalling Protocol\n\nThe purpose of the Sequence Number is to uniquely identify a PC5 Signalling message being sent or received. The sending UE will increment the sequence number for each outgoing new PC5 Signalling message. The Sequence Number information element is an integer in the 0-65535 range.\nThe purpose of the User Info information element is to provide either the User Info received from upper layers identifying the user which is using this direct link, the PRUK ID received from the PKMF that the remote UE wants to use to connect to a relay using this direct link, or the IMSI of the remote UE using this direct link.\nThe User Info IE content is a Type 4 information element, with a minimum length of 3 octets. The IEI of the User Info IE is 1.\nThe User Info information element is coded as shown in figure 12.5.1.3.1, figure 12.5.1.3.2 and table 12.5.1.3.1.\n\n\nFigure 12.5.1.3.1: User Info information element\n\nFigure 12.5.1.3.2: User Info information element for type of User Info \"IMSI\"\nTable 12.5.1.3.1: User Info information element\n\nThe purpose of the IP Address Config information element is to indicate the configuration options for IP address used by the UE over this direct link.\nThe IP Address Config is a type 3 information element. The IEI of the IP Address Config IE is 2.\nThe IP Address Config information element is coded as shown in figure 12.5.1.4.1 and table 12.5.1.4.1.\n\nFigure 12.5.1.4.1: IP Address Config information element\nTable12.5.1.4.1: IP Address Config information element\n\nThe Link Local IPv6 Address information element contains a link-local IPv6 address.\nThe Link Local IPv6 Address is a type 3 information element. The IEI of the Link Local IPv6 Address IE is 3.\nThe Link Local IPv6 Address element is coded as shown in figure 12.5.1.5.1 and table 12.5.1.5.1.\n\nFigure 12.5.1.5.1: IP Address Config information element\nTable12.5.1.5.1: IPv6 Address information element\n\nThe Keepalive Counter information element contains a 32-bit counter used for the direct link keepalive procedure.\nThe Keepalive Counter is a type 3 information element with a length of 5 octets. The IEI of the KeepAlive Counter IE is 4.\nThe Keepalive Counter information element is coded as shown in figure 12.5.1.6.1 and table 12.5.1.6.1.\n\nFigure 12.5.1.6.1: Keepalive Counter information element\nTable12.5.1.6.1: Keepalive Counter information element\n\nThe purpose of the PC5 Signaling Protocol Cause Value information element is to indicate the error cause values used in the PC5 Signalling Protocol procedures.\nThe PC5 Signalling Protocol Cause Value is a type 3 information element, with a length of 2 octets. The IEI of PC5 Signaling Protocol Cause Value IE is 5.\nThe PC5 Signalling Protocol Cause Value information element is coded as shown in figure 12.5.1.7.1 and table 12.5.1.7.1.\n\nFigure 12.5.1.7.1: PC5 Signaling Protocol Cause Value information element\nTable12.5.1.7.1: PC5 Signaling Protocol Cause Value information element\n\nThe purpose of the Release Reason information element is to indicate the reason why the direct link is to be released.\nThe Release Reason IE is a type 3 information element, with a length of 2 octets. The IEI of Release Reason IE is 6.\nThe Release Reason information element is coded as shown in figure 12.5.1.8.1 and table 12.5.1.8.1.\n\nFigure 12.5.1.8.1: Release Reason information element\nTable 12.5.1.8.1: Release Reason information element\n\nThe purpose of the Maximum Inactivity Period information element is to indicate the maximum inactivity period of the requesting UE over the direct link.\nThe Maximum Inactivity Period IE is a type 3 information element, with a length of 5 octets. The IEI of Maximum Inactivity Period IE is 7.\nThe Maximum Inactivity Period information element is coded as shown in figure 12.5.1.9.1 and table 12.5.1.9.1.\n\nFigure 12.5.1.9.1: Maximum Inactivity Period information element\nTable12.5.1.9.1: Maximum Inactivity Period information element\n\nThis parameter is used to identify the Multicast and Broadcast bearer services. The coding of TMGI is specified in 3GPP TS 24.008 [30].\nThis parameter is used to transfer a list of MBMS Service Area Identities to the ProSe UE-to-network relay UE. The MBMS SAI list is a type 6 information element, with a minimum length of 6 octets and a maximum length of 516 octets. The list can contain a maximum of 256 different MBMS Service Area Identities. The length of each MBMS SAI is 2 octets. The IEI of MBMS SAI list IE is 28.\n\nFigure 12.5.1.11.1: MBMS SAI list information element\nTable 12.5.1.11.1: MBMS SAI list information element value part\n\nThis parameter is a link layer identifier of the group that transmits the MBMS traffic associated with a TMGI. The coding of ProSe Layer2 Group ID is specified in 3GPP TS 23.003 [4].\nThis parameter is used to carry the value of TMGI monitoring refresh timer T4104 associated with a TMGI. It is an integer in the 1-1440 range representing the timer value in unit of minutes.\nThis parameter is used to carry the SAI indicator, which is a Boolean value indicating whether the ProSe UE-to-network relay UE can forward the MBMS content associated with the received TMGI for the remote UE.\nThis parameter is used to carry the value of ECGI announcement request refresh timer. It is an integer in the 1-1440 range representing the timer value in unit of minutes.\nThis parameter is used for representing a protocol data unit transmission priority for relaying eMBMS traffic over PC5. It is provided by the remote UE. It is an integer in the 1-8 range and the lower number means the higher priority.\nThe Requested ProSe Per-Packet Priority is a type 3 information element, with a length of 2 octets. The Requested ProSe Per-Packet Priority information element is coded as shown in table 12.5.1.16.1. The IEI of the Requested ProSe Per-Packet Priority IE is 29.\nThe Requested ProSe Per-Packet Priority information element is coded as shown in figure 12.5.1.16.1 and table 12.5.1.16.1.\n\nFigure 12.5.1.16.1: Requested ProSe Per-Packet Priority information element\nTable 12.5.1.16.1: Requested ProSe Per-Packet Priority information element\n\nThe purpose of the Relay Service Code information element is to indicate the parameter defined in subclause 12.2.2.51.\nThe Relay Service Code information element is coded as shown in figure 12.5.1.17.1 and table 12.5.1.17.1.\nThe Relay Service Code is a type 3 information element with a length of 4 octets. The IEI of the Relay Service Code IE is 25.\n\nFigure 12.5.1.17.1: Relay Service Code information element\nTable 12.5.1.17.1: Relay Service Code information element\n\nThe purpose of the GPI information element is to include the GBA Push Information as defined in 3GPP TS 33.223 [42].\nThe GPI information element is coded as shown in figure 12.5.1.18.1 and table 12.5.1.18.1.\nThe GPI is a type 4 information element with a variable length. The IEI of the GPI IE is 24.\n\n\nFigure 12.5.1.18.1: GPI information element\nTable 12.5.1.18.1: GPI information element\n\nThe purpose of the PRUK ID information element is to provide the ProSe UE-to-network relay with the latest PRUK ID at the remote UE when the remote UE triggers rekeying.\nThe PRUK ID information element is coded as shown in figure 12.5.1.19.1 and table 12.5.1.19.1.\nThe PRUK ID is a type 3 information element with a length of 9 octets. The IEI of the PRUK ID IE is 8.\n\n\nFigure 12.5.1.19.1: PRUK ID information element\nTable 12.5.1.19.1: PRUK ID information element\n\nThe purpose of the AUTS information element is to provide the network with the necessary information to begin a re-synchronisation as part of the AKA procedure (see 3GPP TS 33.102 [41]).\nThe AUTS information element is coded as shown in figure 12.5.1.20.1 and table 12.5.1.20.1.\nThe AUTS is a type 3 information element with a length of 15 octets. The IEI of the AUTS IE is 9.\n\n\nFigure 12.5.1.20.1: AUTS information element\nTable 12.5.1.20.1: AUTS information element\n\nThe purpose of the RAND information element is to provide the mobile station with a non-predictable challenge for the AKA procedure.\nThe RAND information element is coded as shown in figure 12.5.1.21.1 and table 12.5.1.21.1.\nThe RAND is a type 3 information element with a length of 17 octets. The IEI of the RAND IE is 10.\n\nFigure 12.5.1.21.1: RAND information element\nTable 12.5.1.21.1: RAND information element\n\nThe UE Security Capabilities information element is used to indicate which security algorithms are supported by the UE.\nThe UE Security Capabilities information element is coded as shown in figure 12.5.1.22.1 and table 12.5.1.22.1.\nThe UE Security Capabilities is a type 3 information element with a length of 3 octets. The IEI of the UE Security Capabilities IE is 11.\n\nFigure 12.5.1.22.1: UE Security Capabilities information element\nTable 12.5.1.22.1: UE Security Capabilities information element\n\nThe purpose of the Chosen Algorithms information element is to indicate the algorithms to be used for ciphering and integrity protection.\nThe Chosen Algorithms information element is coded as shown in figure 12.5.1.23.1 and table 12.5.1.23.1.\nThe Chosen Algorithms is a type 3 information element with a length of 2 octets. The IEI of the Chosen Algorithms IE is 12.\n\nFigure 12.5.1.23.1: Chosen Algorithms information element\nTable 12.5.1.23.1: Chosen Algorithms information element\n\nThe purpose of the LSB of KD-sess ID information element is to carry the 8 least significant bits of the KD-sess ID.\nThe LSB of KD-sess ID IE is a type 3 information element, with a length of 2 octets. The IEI of the LSB of KD-sess ID IE is 13.\nThe LSB of KD-sess ID information element is coded as shown in figure 12.5.1.24.1 and table 12.5.1.24.1.\n\nFigure 12.5.1.24.1: LSB of KD-sess ID information element\nTable12.5.1.24.1: LSB of KD-sess ID information element\n\nThe purpose of the MSB of KD-sess ID information element is to carry the 8 most significant bits of the KD-sess ID.\nThe MSB of KD-sess ID IE is a type 3 information element, with a length of 2 octets. The IEI of the MSB of KD-sess ID Request Nonce IE is 14.\nThe MSB of KD-sess ID information element is coded as shown in figure 12.5.1.25.1 and table 12.5.1.25.1.\n\nFigure 12.5.1.25.1: MSB of KD-sess ID information element\nTable12.5.1.25.1: MSB of KD-sess ID information element\n\nThe purpose of the LSD of KD ID information element is to carry the 16 least significant bits of the KD ID.\nThe LSB of KD ID IE is a type 3 information element, with a length of 3 octets. The IEI of the LSB of KD ID is 15.\nThe LSB of KD ID information element is coded as shown in figure 12.5.1.26.1 and table 12.5.1.26.1.\n\nFigure 12.5.1.26.1: LSB of KD ID information element\nTable12.5.1.26.1: LSB of KD ID information element\n\nThe purpose of the MSB of KD ID information element is to carry the 16 most significant bits of the KD ID.\nThe MSB of KD ID IE is a type 3 information element, with a length of 3 octets. The IEI of the MSB of KD ID IE is 16.\nThe MSB of KD ID information element is coded as shown in figure 12.5.1.27.1 and table 12.5.1.27.1.\n\nFigure 12.5.1.27.1: MSB of KD ID information element\nTable12.5.1.27.1: MSB of KD ID information element\n\nThe purpose of the KD ID information element is to carry the identity of the KD held by a UE.\nThe KD ID IE is a type 3 information element, with a length of 5 octets. The IEI of the KD ID IE is 17.\nThe KD ID information element is coded as shown in figure 12.5.1.28.1 and table 12.5.1.28.1.\n\nFigure 12.5.1.28.1: KD ID information element\nTable12.5.1.28.1: KD ID information element\n\nThe purpose of the KD Freshness information element is to indicate the nonce value generated by initiating PKMF to ensure that any calculated KD is fresh.\nThe KD Freshness parameter IE is a type 3 information element, with a length of 17 octets. The IEI of the KD Freshness IE is 18.\nThe KD Freshness parameter information element is coded as shown in figure 12.5.1.29.1 and table 12.5.1.29.1.\n\nFigure 12.5.1.29.1: KD Freshness information element\nTable12.5.1.29.1: KD Freshness information element\n\nThe purpose of the Nonce_1 information element is to indicate the nonce value generated by the UE which initiated the direct link setup procedure or direct link rekeying procedure.\nThe Nonce_1 IE is a type 3 information element, with a length of 17 octets. The IEI of the Nonce_1 IE is 19.\nThe Nonce_1 information element is coded as shown in figure 12.5.1.30.1 and table 12.5.1.30.1.\n\nFigure 12.5.1.30.1: Nonce_1 information element\nTable12.5.1.30.1: Nonce_1 information element\n\nThe purpose of the Nonce_2 information element is to indicate the nonce value generated by the UE which initiated the direct security mode control procedure.\nThe Nonce_2 IE is a type 3 information element, with a length of 17 octets. The IEI of the Nonce_2 IE is 20.\nThe Nonce_2 information element is coded as shown in figure 12.5.1.31.1 and table 12.5.1.31.1.\n\nFigure 12.5.1.31.1: Nonce_2 information element\nTable12.5.1.31.1: Nonce_2 information element\n\nThe purpose of the Auth Flag information element is to indicate that the KD is to be refreshed..\nThe Auth Flag IE is a type 3 information element, with a length of 2 octets. The IEI of the Auth Flag IE is 21.\nThe Auth Flag information element is coded as shown in figure 12.5.1.32.1 and table 12.5.1.32.1.\n\nFigure 12.5.1.32.1: Auth Flag information element\nTable12.5.1.32.1: Auth Flag information element\n\nThe purpose of the Signature information element is to indicate the ECCSI signature calculated based on information exchanged during the direct link setup.\nThe Signature IE is a type 3 information element, with a length of 130 octets. The IEI of the Signature IE is 22.\nThe Signature information element is coded as shown in figure 12.5.1.33.1 and table 12.5.1.33.1.\n\nFigure 12.5.1.33.1: Signature information element\nTable12.5.1.33.1: Signature information element\n\nThe purpose of the Encrypted Payload information element is to indicate the encrypted data encapsulating the shared secret key to be used for the established link.\nThe Encrypted Payload IE is a type 4 information element, with a variable length. The IEI of the Encrypted Payload IE is 23.\nThe Encrypted Payload information element is coded as shown in figure 12.5.1.34.1 and table 12.5.1.34.1.\n\nFigure 12.5.1.34.1: Encrypted Payload information element\nTable12.5.1.34.1: Encrypted Payload information element\n\nThe purpose of the Remote UE Information Type element is to indicate the type of information requested regarding the remote UE.\nThe Remote UE Information Type IE is a type 3 information element, with a length of 2 bytes. The IEI of the Remote UE Information Type IE is 26.\nThe Remote UE Information Type information element is coded as shown in figure 12.5.1.35.1 and table 12.5.1.35.1.\n\nFigure 12.5.1.35.1: Remote UE Information Type information element\nTable 12.5.1.35.1: Remote UE Information Type information element\n\nThe purpose of the IMEI information element is to indicate the IMEI or IMEISV of a UE.\nThe IMEI IE is a type 3 information element, with a length of 10 bytes, depending on the IMEI type. The IEI of the IMEI IE is 27.\nThe IMEI information element is coded as shown in figure 12.5.1.36.1 and table 12.5.1.36.1.\n\nFigure 12.5.1.36.1: IMEI information element\nTable 12.5.1.36.1: IMEI information element\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 12.5.1.1.1: PC5-SP message types for PC5 Signalling Protocol",
                                    "table number": 54,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "",
                                    "table number": 55,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Figure 12.5.1.3.1: User Info information element",
                                    "table number": 56,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.5.1.3.1: User Info information element",
                                    "table number": 57,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The IP Address Config information element is coded as shown in figure 12.5.1.4.1 and table 12.5.1.4.1.",
                                    "table number": 58,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.4.1: IP Address Config information element",
                                    "table number": 59,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The Link Local IPv6 Address element is coded as shown in figure 12.5.1.5.1 and table 12.5.1.5.1.",
                                    "table number": 60,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.5.1: IPv6 Address information element",
                                    "table number": 61,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The Keepalive Counter information element is coded as shown in figure 12.5.1.6.1 and table 12.5.1.6.1.",
                                    "table number": 62,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.6.1: Keepalive Counter information element",
                                    "table number": 63,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The PC5 Signalling Protocol Cause Value information element is coded as shown in figure 12.5.1.7.1 and table 12.5.1.7.1.",
                                    "table number": 64,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.7.1: PC5 Signaling Protocol Cause Value information element",
                                    "table number": 65,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The Release Reason information element is coded as shown in figure 12.5.1.8.1 and table 12.5.1.8.1.",
                                    "table number": 66,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.5.1.8.1: Release Reason information element",
                                    "table number": 67,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The Maximum Inactivity Period information element is coded as shown in figure 12.5.1.9.1 and table 12.5.1.9.1.",
                                    "table number": 68,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.9.1: Maximum Inactivity Period information element",
                                    "table number": 69,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "This parameter is used to transfer a list of MBMS Service Area Identities to the ProSe UE-to-network relay UE. The MBMS SAI list is a type 6 information element, with a minimum length of 6 octets and a maximum length of 516 octets. The list can contain a maximum of 256 different MBMS Service Area Identities. The length of each MBMS SAI is 2 octets. The IEI of MBMS SAI list IE is 28.",
                                    "table number": 70,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.5.1.11.1: MBMS SAI list information element value part",
                                    "table number": 71,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The Requested ProSe Per-Packet Priority information element is coded as shown in figure 12.5.1.16.1 and table 12.5.1.16.1.",
                                    "table number": 72,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.5.1.16.1: Requested ProSe Per-Packet Priority information element",
                                    "table number": 73,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The Relay Service Code is a type 3 information element with a length of 4 octets. The IEI of the Relay Service Code IE is 25.",
                                    "table number": 74,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.5.1.17.1: Relay Service Code information element",
                                    "table number": 75,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "",
                                    "table number": 76,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.5.1.18.1: GPI information element",
                                    "table number": 77,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "",
                                    "table number": 78,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.5.1.19.1: PRUK ID information element",
                                    "table number": 79,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "",
                                    "table number": 80,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.5.1.20.1: AUTS information element",
                                    "table number": 81,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The RAND is a type 3 information element with a length of 17 octets. The IEI of the RAND IE is 10.",
                                    "table number": 82,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.5.1.21.1: RAND information element",
                                    "table number": 83,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The UE Security Capabilities is a type 3 information element with a length of 3 octets. The IEI of the UE Security Capabilities IE is 11.",
                                    "table number": 84,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.5.1.22.1: UE Security Capabilities information element",
                                    "table number": 85,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The Chosen Algorithms is a type 3 information element with a length of 2 octets. The IEI of the Chosen Algorithms IE is 12.",
                                    "table number": 86,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.5.1.23.1: Chosen Algorithms information element",
                                    "table number": 87,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The LSB of KD-sess ID information element is coded as shown in figure 12.5.1.24.1 and table 12.5.1.24.1.",
                                    "table number": 88,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.24.1: LSB of KD-sess ID information element",
                                    "table number": 89,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The MSB of KD-sess ID information element is coded as shown in figure 12.5.1.25.1 and table 12.5.1.25.1.",
                                    "table number": 90,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.25.1: MSB of KD-sess ID information element",
                                    "table number": 91,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The LSB of KD ID information element is coded as shown in figure 12.5.1.26.1 and table 12.5.1.26.1.",
                                    "table number": 92,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.26.1: LSB of KD ID information element",
                                    "table number": 93,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The MSB of KD ID information element is coded as shown in figure 12.5.1.27.1 and table 12.5.1.27.1.",
                                    "table number": 94,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.27.1: MSB of KD ID information element",
                                    "table number": 95,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The KD ID information element is coded as shown in figure 12.5.1.28.1 and table 12.5.1.28.1.",
                                    "table number": 96,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.28.1: KD ID information element",
                                    "table number": 97,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The KD Freshness parameter information element is coded as shown in figure 12.5.1.29.1 and table 12.5.1.29.1.",
                                    "table number": 98,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.29.1: KD Freshness information element",
                                    "table number": 99,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The Nonce_1 information element is coded as shown in figure 12.5.1.30.1 and table 12.5.1.30.1.",
                                    "table number": 100,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.30.1: Nonce_1 information element",
                                    "table number": 101,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The Nonce_2 information element is coded as shown in figure 12.5.1.31.1 and table 12.5.1.31.1.",
                                    "table number": 102,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.31.1: Nonce_2 information element",
                                    "table number": 103,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "The Auth Flag information element is coded as shown in figure 12.5.1.32.1 and table 12.5.1.32.1.",
                                    "table number": 104,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.32.1: Auth Flag information element",
                                    "table number": 105,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "",
                                    "table number": 106,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.33.1: Signature information element",
                                    "table number": 107,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "",
                                    "table number": 108,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table12.5.1.34.1: Encrypted Payload information element",
                                    "table number": 109,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "",
                                    "table number": 110,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.5.1.35.1: Remote UE Information Type information element",
                                    "table number": 111,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "",
                                    "table number": 112,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 12.5.1.36.1: IMEI information element",
                                    "table number": 113,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "title": "13\tList of system parameters",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "13.1\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "The description of timers in table 13.2.1 and table 13.2.2 should be considered a brief summary. The complete descriptions of the timers are in the procedures defined in subclause 5 and subclause 6.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "13.2\tTimers of ProSe direct services procedures",
                    "description": "",
                    "summary": "",
                    "text_content": "Table 13.2.1: ProSe direct services timers – UE side\n\nTable 13.2.2: ProSe direct services timers – ProSe Function side\nNOTE:\tMultiple timers T4001, T4003, T4008, T4010, T4012 and T4014 can run simultaneously in the ProSe Function.\n",
                    "tables": [
                        {
                            "description": "Table 13.2.1: ProSe direct services timers – UE side",
                            "table number": 114,
                            "summary": "",
                            "name": ""
                        },
                        {
                            "description": "Table 13.2.2: ProSe direct services timers – ProSe Function side",
                            "table number": 115,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "A.1\tIANA registrations for MIME types",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "A.1.1\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "RFC 4288 [26], subclause 9, states the process that applies in case of changes to the registry of media types. Any changes to the format after the registration with IANA would invoke this procedure.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "A.1.2\tapplication/3gpp-prose-pc3ch+xml",
                    "description": "",
                    "summary": "",
                    "text_content": "Your Name:\n<MCC name>\nYour Email Address:\n<MCC email address>\nMedia Type Name:\nApplication\nSubtype name:\nVendor Tree – 3gpp-prose-pc3ch+xml\nRequired parameters:\nNone\nOptional parameters:\n\"charset\"\tthe parameter has identical semantics to the charset parameter of the \"application/xml\" media type as specified in section 9.1 of IETF RFC 7303.\nEncoding considerations:\nbinary.\nSecurity considerations:\nSame as general security considerations for application/xml media type as specified in section 9.1 of IETF RFC 7303 [25]. The information transported in this media type does not include active or executable content. Mechanisms for privacy and integrity protection of protocol parameters exist. Those mechanisms as well as authentication and further security mechanisms are described in 3GPP TS 33.303.\nThis media type does not include provisions for directives that institute actions on a recipient's files or other resources.\nThis media type does not include provisions for directives that institute actions that, while not directly harmful to the recipient, may result in disclosure of information that either facilitates a subsequent attack or else violates a recipient's privacy in any way.\nThis media type does not employ compression.\nInteroperability considerations:\nThe media type allows for interoperability of messages transmitted over the PC3ch interface, including those related to transport of the usage information request of proximity services. The messages are sent between user equipment and mobile network.\nPublished specification:\n3GPP TS 24.334 (http://www.3gpp.org/ftp/Specs/html-info/24334.htm)\nApplications which use this media type:\nn/a\nFragment identifier considerations:\nThe handling in section 5 of IETF RFC 7303 applies.\nRestrictions on usage:\nNone\nProvisional registration? (standards tree only):\nn/a\nAdditional information:\n1. Deprecated alias names for this type:\tn/a\n2. Magic number(s):\tn/a\n3. File extension(s):\tn/a\n4. Macintosh File Type Code(s):\tn/a\n5. Object Identifier(s) or OID(s):\tn/a\nIntended usage:\nCommon.\nOther information/general comment:\nThe media type is intended to be used in proximity service procedures.\nPerson to contact for further information:\n-\tName: <MCC name>\n-\tEmail: <MCC email address>\n-\tAuthor/Change controller:\ni)\tAuthor: 3GPP CT1 Working Group/3GPP_TSG_CT_WG1@LIST.ETSI.ORG\nii)\tChange controller: <MCC name>/<MCC email address>\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "A.1.3\tapplication/3gpp-prose+xml",
                    "description": "",
                    "summary": "",
                    "text_content": "Your Name:\n<MCC name>\nYour Email Address:\n<MCC email address>\nMedia Type Name:\nApplication\nSubtype name:\nVendor Tree – 3gpp-prose+xml\nRequired parameters:\nNone\nOptional parameters:\n\"charset\"\tthe parameter has identical semantics to the charset parameter of the \"application/xml\" media type as specified in section 9.1 of IETF RFC 7303.\nEncoding considerations:\nbinary.\nSecurity considerations:\nSame as general security considerations for application/xml media type as specified in section 9.1 of IETF RFC 7303. The information transported in this media type does not include active or executable content. Mechanisms for privacy and integrity protection of protocol parameters exist. Those mechanisms as well as authentication and further security mechanisms are described in 3GPP TS 33.303.\nThis media type does not include provisions for directives that institute actions on a recipient's files or other resources.\nThis media type does not include provisions for directives that institute actions that, while not directly harmful to the recipient, may result in disclosure of information that either facilitates a subsequent attack or else violates a recipient's privacy in any way.\nThis media type does not employ compression.\nInteroperability considerations:\nThe media type allows for interoperability of messages transmitted for ProSe over the PC3 interface. The messages are sent between user equipment and mobile network.\nPublished specification:\n3GPP TS 24.334 (http://www.3gpp.org/ftp/Specs/html-info/24334.htm)\nApplications which use this media type:\nn/a\nFragment identifier considerations:\nThe handling in section 5 of IETF RFC 7303 applies.\nRestrictions on usage:\nNone\nProvisional registration? (standards tree only):\nn/a\nAdditional information:\n1. Deprecated alias names for this type:\tn/a\n2. Magic number(s):\tn/a\n3. File extension(s):\tn/a\n4. Macintosh File Type Code(s):\tn/a\n5. Object Identifier(s) or OID(s):\tn/a\nIntended usage:\nCommon.\nOther information/general comment:\nThe media type is intended to be used in proximity service procedures.\nPerson to contact for further information:\n-\tName: <MCC name>\n-\tEmail: <MCC email address>\n-\tAuthor/Change controller:\ni)\tAuthor: 3GPP CT1 Working Group/3GPP_TSG_CT_WG1@LIST.ETSI.ORG\nii)\tChange controller: <MCC name>/<MCC email address>\n\n\n",
                    "tables": [
                        {
                            "description": "",
                            "table number": 116,
                            "summary": "",
                            "name": ""
                        },
                        {
                            "description": "",
                            "table number": 117,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        }
    ]
}