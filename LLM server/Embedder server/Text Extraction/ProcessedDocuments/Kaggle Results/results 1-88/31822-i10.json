{
    "document_name": "31822-i10.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Report has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\nIn the present document, modal verbs have the following meanings:\nshall\t\tindicates a mandatory requirement to do something\nshall not\tindicates an interdiction (prohibition) to do something\nThe constructions \"shall\" and \"shall not\" are confined to the context of normative provisions, and do not appear in Technical Reports.\nThe constructions \"must\" and \"must not\" are not used as substitutes for \"shall\" and \"shall not\". Their use is avoided insofar as possible, and they are not used in a normative context except in a direct citation from an external, referenced, non-3GPP document, or so as to maintain continuity of style when extending or modifying the provisions of such a referenced document.\nshould\t\tindicates a recommendation to do something\nshould not\tindicates a recommendation not to do something\nmay\t\tindicates permission to do something\nneed not\tindicates permission not to do something\nThe construction \"may not\" is ambiguous and is not used in normative elements. The unambiguous constructions \"might not\" or \"shall not\" are used instead, depending upon the meaning intended.\ncan\t\tindicates that something is possible\ncannot\t\tindicates that something is impossible\nThe constructions \"can\" and \"cannot\" are not substitutes for \"may\" and \"need not\".\nwill\t\tindicates that something is certain or expected to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nwill not\t\tindicates that something is certain or expected not to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nmight\tindicates a likelihood that something will happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nmight not\tindicates a likelihood that something will not happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nIn addition:\nis\t(or any other verb in the indicative mood) indicates a statement of fact\nis not\t(or any other negative verb in the indicative mood) indicates a statement of fact\nThe constructions \"is\" and \"is not\" do not indicate requirements.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document studies the GBA_U based APIs.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 33.220: \"Generic Authentication Architecture (GAA); Generic bootstrapping architecture\".\n[3]\t3GPP TS 31.102:  \"Characteristics of the Universal Subscriber Identity Module (USIM) application\".\n[4]\t3GPP TS 31.130:  \"(U)SIM Application Programming Interface (API); (U)SIM API for Java™ Card\".\n[5]\tISO/IEC 18033-3: \"2010/AMD1:2021 Information technology – Security techniques – Encryption algorithms – Part 3: Block ciphers – Amendment 1: SM4\".\n[6]\tISO/IEC 10118-3: \"2018 IT Security techniques – Hash-functions – Part 3: Dedicated hash-functions\".\n[7]\t3GPP TS 31.116: \"Remote APDU Structure for (U)SIM Toolkit applications\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions of terms, symbols and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in 3GPP TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in 3GPP TR 21.905 [1].\n3GPP\t3rd Generation Partnership Project\nAES\tAdvanced Encryption Standard\nAID\tApplication Identifier\nAPI\tApplication Programming Interface\nGBA\tGeneric Bootstrapping Architecture\nGBA_U\tGBA with UICC-based enhancements\nNAF\tNetwork Application Function\nSM\tShangMi\n\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tKey Issues",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "4.1\tKey Issues1: Support for GBA_U_APIs",
                    "description": "",
                    "summary": "",
                    "text_content": "Since the Ks_int_NAF is derived from the Long Term Key of the UICC, and the GBA mechanism is highly recognized, the APIs for Ks_int_NAF should be defined, so other applications could use the Ks_int_NAF for security purpose.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.2\tKey Issues2: Support for Access Control to GBA_U_APIs",
                    "description": "",
                    "summary": "",
                    "text_content": "When an application calls GBA_U_APIs, the Ks_int_NAF is required. Since Ks_int_NAF is associated with B-TID and NAF_ID, it is not allowed to use by all of applications. Therefore,  access control should be supported  to specify the AID that could call GBA_U_APIs with NAF_ID\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "5\tSolutions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tSolution1: Classes and Interfaces of GBA_U_APIs",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.1.1\tDescription",
                            "text_content": "The USIM GBA_U_APIs consist of the package uicc.usim.gba, which include cipher and signature two classes.\nTable 5.1.1.1: GBA_U API\n\nTable 5.1.1.2.1: Algorithm identifier\n\npublic void init(byte  algorithm, byte[] nafID, short nafOff, short nafLen, byte theMode, byte[]  bArray, short bOff, short bLen)\nInitializes the Cipher object with the appropriate Ks_int_NAF Key and algorithm specific parameters.\nParameters:\nalgorithm - see Table 5.1.1.2.1\nnafID - the value of NAF ID\nnafOff - offset of NAF ID\nnafLen - length of NAF ID\ntheMode - one of MODE_DECRYPT or MODE_ENCRYPT\nbArray - byte array containing algorithm specific initialization info\nbOff - offset within bArray where the algorithm specific data begins\nbLen - length of algorithm specific parameter data\npublic short update(byte[] inBuff, short inOffset, short inLength, byte[] outBuff, short outOffset)\nGenerates encrypted/decrypted output from input data using Ks_int_NAF.This method is intended for multiple-part encryption/decryption operations.\nThis method requires temporary storage of intermediate results. In addition, if the input data length is not block aligned (multiple of block size) then additional internal storage may be allocated at this time to store a partial input data block. This may result in additional resource consumption and/or slow performance.\nParameters:\ninBuff - the input buffer of data to be encrypted/decrypted\ninOffset - the offset into the input buffer at which to begin encryption/decryption\ninLength - the byte length to be encrypted/decrypted\noutBuff - the output buffer, may be the same as the input buffer\noutOffset - the offset into the output buffer where the resulting ciphertext/plaintext begins\nReturns:\nnumber of bytes output in outBuff.\npublic short doFinal(byte[] inBuff, short inOffset, short inLength, byte[] outBuff, short outOffset)\nGenerates encrypted/decrypted output from all/last input data using Ks_int_NAF. This method must be invoked to complete a cipher operation. This method processes any remaining input data buffered by one or more calls to the update() method as well as input data supplied in the inBuff parameter.\nParameters:\ninBuff - the input buffer of data to be encrypted/decrypted\ninOffset - the offset into the input buffer at which to begin encryption/decryption\ninLength - the byte length to be encrypted/decrypted\noutBuff - the output buffer, may be the same as the input buffer\noutOffset - the offset into the output buffer where the resulting output data begins\nReturns:\nnumber of bytes output in outBuff.\nTable 5.1.1.3.1: Algorithm identifier\n\npublic void init (byte algorithm, byte mode, byte[] nafID, short nafOff, short nafLen)\nInitializes the Signature object with the appropriate Ks_int_NAF Key and algorithm specific parameters.\nParameters:\nalgorithm - see Table 5.1.1.3.1\nmode - one of MODE_SIGN or MODE_VERIFY\nnafID - the value of NAF ID\nnafOff - offset of NAF ID\nnafLen - length of NAF ID\npublic void update(byte[] inBuff, short inOffset, short inLength)\nAccumulates a signature of the input data. This method requires temporary storage of intermediate results.\nParameters:\ninBuff - the input buffer of data to be encrypted/decrypted\ninOffset - the offset into the input buffer at which to begin encryption/decryption\ninLength - the byte length to be encrypted/decrypted\npublic short sign(byte[] inBuff, short inOffset, short inLength, byte[] sigBuff, short sigOffset)\nGenerates the signature of all/last input data using Ks_int_NAF.\nParameters:\ninBuff - the input buffer of data to be signed\ninOffset - the offset into the input buffer at which to begin signature generation\ninLength - the byte length to sign\nsigBuff - the output buffer to store signature data\nsigOffset - the offset into sigBuff at which to begin signature data\nReturns:\nnumber of bytes of signature output in sigBuff.\npublic boolean verify (byte[] inBuff, short inOffset, short inLength, byte[] sigBuff, short sigOffset, short sigLength)\nVerifies the signature of all/last input data against the passed in signature using Ks_int_NAF.\nParameters:\ninBuff - the input buffer of data to be verified\ninOffset - the offset into the input buffer at which to begin signature generation\ninLength - the byte length to sign\nsigBuff - the input buffer containing signature data\nsigOffset - the offset into sigBuff where signature data begins\nsigLength - the byte length of the signature data\nReturns:\ntrue if the signature verifies, false otherwise\nNote: if sigLength is inconsistent with this Signature algorithm, false is returned.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.1.1.1: GBA_U API",
                                    "table number": 3,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.1.2.1: Algorithm identifier",
                                    "table number": 4,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 5.1.1.3.1: Algorithm identifier",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.1.2\tSolution Evaluation",
                            "text_content": "This solution addresses the key issue 1. It defines APIs for Ks_int_NAF derived from GBA, which include cipher and signature methods, and the APIs could be used by the applications on the USIM.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.2\tSolution2: Access Control to GBA_U_APIs",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.2.1\tDescription",
                            "text_content": "This EF is available at the USIM ADF (Application DF) level.\nThis EF contains the list of AID associated with NAF_ID, and it indicates the application which could uses the  Ks_int_NAFcorresponding to NAF_ID.\n\n\nAID of NAF Key LV object\n\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "",
                                    "table number": 7,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.2.2\tSolution Evaluation",
                            "text_content": "This solution addresses the key issue 2. It provides a mechanism for access control to GBA_U_APIs, which defines an EF of USIM to store the list of AID associated with NAF_ID.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.3\tSolution 3: Access Control to GBA_U_APIs through install parameters",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.3.1\tDescription",
                            "text_content": "An alternative approach to Solution 2 for Access Control may be based on application installation parameters. Applications using APIs that require NAA provider or issuer provider – like file system access – are authorized to perform the intended operation by adding specific install parameters as specified in 3GPP TS 31.116 [7].\nAccording to 3GPP TS 31.116 [7], depending on issuer configuration, such install parameters may be protected with Remote Applet Management credentials that identify the off-card entity performing the Remote Applet Management operation and also with additional credentials (ETSI DAP key to protect Access and Toolkit install parameters) that can be used as an additional authentication according to the card issuer’s security policy.\nIt is then proposed to add a new install parameter subject to additional authentication according to the card issuer’s security policy to authorize applications to use GBA_U_APIs.\nAs an example of the install parameter structure a new access domain parameter as specified in ETSI TS 102 226 § 8.2.1.3.2.5.1 can be requested to be added as “API Access mechanism” (e.g. value ‘03’).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.3.2\tSolution Evaluation",
                            "text_content": "This solution addresses the key issue 2 in an alternative way than Solution 2. It provides a mechanism for access control to GBA_U_APIs that is managed by the RAM off-card entity potentially in conjunction with ETSI DAP mechanism according to the card issuer’s security policy.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "6\tOverall Evaluation",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.1\tEvaluation criteria",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.1.1\tOverview",
                            "text_content": "In addition to the key issues described in the present document, the potential solutions also need to be evaluated against operational criteria when assessing their suitability. This clause details the evaluation criteria for the solutions.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.2\tKey issues addressed",
                            "text_content": "Each solution clearly identifies the key issues addressed by the solution.\nThe evaluation assesses whether this key issue is met and any limitations on the way it is met (e.g. if the solution is only applicable to aspects of the key issue).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.3\tImpact on USIM and ISIM",
                            "text_content": "The evaluation should clearly identify the types of USIM/ISIM that the solution works with, whether modification of existing USIMs/ISIMs is required and describe the impacts on USIM/ISIM.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.4\tImpact on UICC",
                            "text_content": "The evaluation should clearly identify the UICC that the solution works with, whether modification of the existing UICC is required and describe the impacts on the UICC.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.5\tBackward compatibility",
                            "text_content": "The evaluation should clearly identify that the solution is backward compatible.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.6\tImpact on core and RAN networks",
                            "text_content": "The evaluation should clearly identify any changes required in the core network and/or RAN.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.2\tSolutions evaluations",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.2.1\tOverview",
                            "text_content": "This Technical Report describes Classes and Interfaces and Access Control for GBA_U_APIs. In this document, 2 Key Issues are derived, and all of them are addressed by solutions.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.2\tSolution 1",
                            "text_content": "This solution addresses key issue 1.\nTable 6.1: Key issue 1 and solution evaluation\n\nThe solution has no impact on the USIM neither on the ISIM.\nUICC is impacted with new API to be supported.\nThis solution is backward compatible.\nThis solution has no impact on the core network or RAN.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.1: Key issue 1 and solution evaluation",
                                    "table number": 8,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.3\tSolution 2",
                            "text_content": "This solution addresses key issue 2.\nTable 6.2: Key issue 2 and solution evaluation\n\nUSIM is impacted with new file to be defined.\nThis solution has no impact on the UICC.\nThis solution is backward compatible.\nThis solution has no impact on the core network or RAN.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.2: Key issue 2 and solution evaluation",
                                    "table number": 9,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.2.4\tSolution 3",
                            "text_content": "This solution addresses key issue 2.\nTable 6.3: Key issue 2 solution evaluation\n\nNone.\nA new install parameter needs to be defined at UICC level.\nThis solution is backward compatible.\nThis solution has no impact on the core network or RAN.\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.3: Key issue 2 solution evaluation",
                                    "table number": 10,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "title": "7\tConclusion",
            "description": "This technical report fulfills the objectives of the study on GBA_U Based APIs, all of the key issues have been addressed and the solutions have been evaluated, normative work in 3GPP CT6 WG should be based on solutions in the present document.\n\n\n\n\n\n",
            "summary": "",
            "tables": [
                {
                    "description": "",
                    "table number": 11,
                    "summary": "",
                    "name": ""
                }
            ],
            "figures_meta_data": [],
            "subsections": []
        }
    ]
}