{
    "document_name": "38323-i00.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Specification has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document provides the description of the Packet Data Convergence Protocol (PDCP).\n\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 38.300: \"NG Radio Access Network; Overall description\".\n[3]\t3GPP TS 38.331: \"NR Radio Resource Control (RRC); Protocol Specification\".\n[4]\t3GPP TS 38.321: \"NR Medium Access Control (MAC) protocol specification\".\n[5]\t3GPP TS 38.322: \"NR Radio Link Control (RLC) protocol specification\".\n[6]\t3GPP TS 33.501: \"Security Architecture and Procedures for 5G System \".\n[7]\tIETF RFC 5795: \"The RObust Header Compression (ROHC) Framework\".\n[8]\tIETF RFC 3095: \"RObust Header Compression (ROHC): Framework and four profiles: RTP, UDP, ESP and uncompressed\".\n[9]\tIETF RFC 4815: \"RObust Header Compression (ROHC): Corrections and Clarifications to RFC 3095\".\n[10]\tIETF RFC 6846: \"RObust Header Compression (ROHC): A Profile for TCP/IP (ROHC-TCP)\".\n[11]\tIETF RFC 5225: \"RObust Header Compression (ROHC) Version 2: Profiles for RTP, UDP, IP, ESP and UDP Lite\".\n[12]\t3GPP TS 36.321: \"Evolved Universal Terrestrial Radio Access (E-UTRA) Medium Access Control (MAC) protocol specification\".\n[13]\t3GPP TS 23.287: \"Architecture enhancements for 5G System (5GS) to support Vehicle-to-Everything (V2X) services\".\n[14]\t3GPP TS 33.536: \"Security Aspect of 3GPP Support for Advanced V2X Services\".\n[15]\tIEEE Standard 802.3™-2018: \"Ethernet\".\n[16]\t3GPP TS 24.587: \"Vehicle-to-Everything (V2X) services in 5G System (5GS), Stage 3\".\n[17]\t3GPP TS 33.401: \"3GPP System Architecture Evolution (SAE); Security Architecture\".\n[18]\t3GPP TS 23.304: \"Proximity based Services (ProSe) in the 5G System (5GS)\".\n[19]\tIETF RFC 1951: \"DEFLATE Compressed Data Format Specification version 1.3\".\n[20]\tIETF RFC 3485: \"The Session Initiation Protocol (SIP) and Session Description Protocol (SDP) Static Dictionary for Signaling Compression (SigComp)\".\n[21]\tIETF RFC 1979: \"PPP Deflate Protocol\".\n[22]\t3GPP TS 38.351: \"NR; Sidelink Relay Adaptation Protocol (SRAP) Specification\".\n[23]\t3GPP TS 23.501: \"System Architecture for the 5G System; Stage 2\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tDefinitions",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms and definitions given in TR 21.905 [1] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in TR 21.905 [1].\nAM DRB: a data radio bearer which utilizes RLC AM.\nAM MRB: an MRB associated with at least one AM RLC bearer for PTP transmission.\nBroadcast MRB: a radio bearer configured for MBS broadcast delivery.\nDAPS bearer: a bearer whose radio protocols are located in both the source gNB and the target gNB during DAPS handover to use both source gNB and target gNB resources.\nDelay-critical PDCP SDU: if pdu-SetDiscard is not configured, a PDCP SDU for which the remaining time till discardTimer expiry is less than the remainingTimeThreshold. If pdu-SetDiscard is configured, a PDCP SDU belonging to a PDU Set of which at least one PDCP SDU has the remaining time till discardTimer expiry less than the remainingTimeThreshold.\nMBS Radio Bearer: a radio bearer that is configured for MBS delivery.\nMulticast MRB: a radio bearer configured for MBS multicast delivery.\nMulti-path: Mode of operation of a remote UE in RRC_CONNECTED configured with one direct path on which the UE connects to the gNB using NR Uu and one indirect path on which the UE connects to the same gNB via another UE using PC5 unicast link or Non-3GPP Connection.\nMulti-path split bearer: In multi-path, a bearer in which one PDCP entity is mapped to one or more (direct) Uu RLC entities and either one SRAP entity of a SL indirect path or non-3GPP connectivity.\nN3C indirect path: In multi-path, the indirect path on which the remote UE connects to the network via a relay UE using non-3GPP connectivity.\nNon-split bearer: a bearer whose radio protocols are located in either the MgNB or the SgNB to use MgNB or SgNB resource, respectively.\nNR sidelink communication: AS functionality enabling at least V2X communication as defined in TS 23.287 [13] and ProSe communication (including ProSe non-Relay, UE-to-Network Relay, and UE-to-UE Relay communication) as defined in TS 23.304 [18], between two or more nearby UEs, using NR technology but not traversing any network node.\nNR sidelink discovery: AS functionality enabling ProSe non-Relay Discovery, ProSe UE-to-Network Relay discovery, and ProSe UE-to-UE Relay discovery for Proximity based Services as defined in TS 23.304 [18] between two or more nearby UEs, using NR technology but not traversing any network node.\nNR sidelink transmission: any NR Sidelink-based transmission, including both transmission for NR sidelink discovery and transmission for NR sidelink communication.\nPDCP data volume: the amount of data available for transmission in a PDCP entity.\nPDU Set: one or more PDUs carrying the payload of one unit of information generated at the application level (e.g. frame(s) or video slice(s) etc. for XR services), as defined in TS 23.501 [23]. A PDU in the PDU Set corresponds to a PDCP SDU.\nPrimary Path: In multi-path for a split DRB, the primary path is configured by RRC to be either the direct path or the indirect path. In multi-path for a split SRB, the primary path is always the direct path.\nSecondary Path: In multi-path, for a split DRB, the path (either direct or indirect) which is not configured by RRC as the primary path. In multi-path for a split SRB, the secondary path is always the indirect path (SL or N3C).\nSL indirect path: In multi-path, the indirect path on which the L2 U2N Remote UE connects to the network via a L2 U2N Relay UE.\nSplit bearer: in dual connectivity, a bearer whose radio protocols are located in both the MgNB and the SgNB to use both MgNB and SgNB resources.\nSplit secondary RLC entity: in dual connectivity, the RLC entity other than the primary RLC entity which is responsible for split bearer operation. If the PDCP entity is associated with two RLC entities, the split secondary RLC entity is the RLC entity other than the primary RLC entity. If the PDCP entity is associated with more than two RLC entities, the split secondary RLC entity is configured by upper layers.\nUM DRB: a data radio bearer which utilizes RLC UM.\nUM MRB: an MRB associated with only RLC UM.\nU2N Relay UE: a UE that provides functionality to support connectivity to the network for U2N Remote UE(s).\nU2N Remote UE: a UE that communicates with the network via a U2N Relay UE.\nU2U Relay UE: a UE that provides functionality to support connectivity between two U2U Remote UEs\nU2U Remote UE: a UE that communicates with another UE via a U2U Relay UE\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in TR 21.905 [1].\nAM\tAcknowledged Mode\nARP\tAddress Resolution Protocol\nCID\tContext Identifier\nDAPS\tDual Active Protocol Stack\nDRB\tData Radio Bearer carrying user plane data\nEHC\tEthernet Header Compression\nFIFO\tFirst In First Out\ngNB\tNR Node B\nHFN\tHyper Frame Number\nIETF\tInternet Engineering Task Force\nIP\tInternet Protocol\nMAC\tMedium Access Control\nMAC-I\tMessage Authentication Code for Integrity\nMBS\tMulticast/Broadcast Services\nMP\tMulti-path\nMRB\tMBS Radio Bearer\nMTCH\tMBS Traffic Channel\nN3C\tNon-3GPP Connectivity\nPDCP\tPacket Data Convergence Protocol\nPDU\tProtocol Data Unit\nPSI\tPDU Set Importance\nRB\tRadio Bearer\nRFC\tRequest For Comments\nRLC\tRadio Link Control\nROHC\tRObust Header Compression\nRRC\tRadio Resource Control\nRTP\tReal Time Protocol\nSAP\tService Access Point\nSCCH\tSidelink Control Channel\nSDU\tService Data Unit\nSLRB\tSidelink Radio Bearer carrying NR sidelink communication or NR sidelink discovery\nSN\tSequence Number\nSRAP\tSidelink Relay Adaptation Protocol\nSRB\tSignalling Radio Bearer carrying control plane data\nSTCH\tSidelink Traffic Channel\nTCP\tTransmission Control Protocol\nUDC\tUplink Data Compression\nUDP\tUser Datagram Protocol\nUE\tUser Equipment\nUM\tUnacknowledged Mode\nU2N\tUE-to-Network\nX-MAC\tComputed MAC-I\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tGeneral",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "4.1\tIntroduction",
                    "description": "",
                    "summary": "",
                    "text_content": "The present document describes the functionality of the PDCP.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "4.2\tArchitecture",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.2.1\tPDCP structure",
                            "text_content": "Figure 4.2.1-1 represents one possible structure for the PDCP sublayer. Figure 4.2.1-2 represents one possible structure for the PDCP sublayer used in L2 U2N relay case, L2 U2U relay case, and for the indirect path in the case of multi-path with SL indirect path. Figure 4.2.1-3 represents one possible structure for PDCP sublayer used for the indirect path in the case of multi-path with N3C indirect path. These structures should not restrict implementation. The figures are based on the radio interface protocol architecture defined in TS 38.300 [2].\nNOTE:\tThe structure and interface of non-3GPP connectivity for the case of multi-path with N3C indirect path is out of the scope of this specification.\nFigure 4.2.1-1 provides a detailed view of the Physical Downlink Control Protocol (PDCP) layer, focusing on its structure within the protocol stack. The figure illustrates the PDCP's role in managing the physical layer of the communication process, ensuring reliable data transmission. Key components such as the PUCCH (Physical Uplink Control Channel) and PDCCH (Physical Downlink Control Channel) are highlighted, emphasizing their importance in controlling the physical layer's performance. The figure also highlights the PDCP's role in error detection and correction, showcasing the use of cyclic redundancy check (CRC) and forward error correction (FEC) techniques to maintain data integrity. Overall, the figure provides a comprehensive overview of the PDCP layer's structure and its crucial role in the overall communication process.\nFigure 4.2.1-1: PDCP layer, structure view (normal)\nFigure 4.2.1-2 illustrates the PDCP (Packet Data Convergence Protocol) layer structure, focusing on the L2 U2N relay, L2 U2U relay, and SL (Signal Link) indirect path in a multi-path scenario. The figure showcases the various components involved in the PDCP layer, including the L2 U2N relay, L2 U2U relay, and SL indirect path, which play a crucial role in the efficient transmission of data packets. The diagram highlights the importance of these components in maintaining the integrity and reliability of the communication process, ensuring that data is transmitted accurately and without errors.\nFigure 4.2.1-2: PDCP layer, structure view (L2 U2N relay), L2 U2U relay and SL indirect path in multi-path\nFigure 4.2.1-3 illustrates the Packet Data Convergence Protocol (PDCP) layer structure in a multi-path scenario, showcasing the indirect path. The figure depicts the PDCP layers, including the P-CCP (Physical Channel Codec Packet) and P-DS (Physical Down-Stream) layers, which are crucial for error detection and correction in wireless communication. The indirect path is represented by the dashed lines, indicating the signal's route through multiple paths, enhancing the robustness of the communication system against potential disruptions. The figure emphasizes the importance of PDCP in maintaining the quality and reliability of data transmission in multi-path environments.\nFigure 4.2.1-3: PDCP layer, structure view (N3C indirect path in multi-path)\nThe PDCP sublayer is configured by upper layers TS 38.331 [3]. The PDCP sublayer is used for RBs mapped on DCCH, DTCH, MTCH, SCCH, and STCH type of logical channels. The PDCP sublayer is not used for any other type of logical channels.\nEach RB (except for SRB0 for Uu interface) is associated with one PDCP entity. Each PDCP entity is associated with one, two, three, four, six, or eight RLC entities depending on the RB characteristic (e.g. uni-directional/bi-directional or split/non-split) or RLC mode:\n-\tFor split bearers, each PDCP entity is associated with two UM RLC entities (for same direction), four UM RLC entities (two for each direction), or two AM RLC entities;\n-\tFor RBs configured with PDCP duplication, each PDCP entity is associated with N UM RLC entities (for same direction), 2 × N UM RLC entities (N for each direction), or N AM RLC entities, where 2 <= N <= 4;\n-\tFor DAPS bearers, each PDCP entity is associated with two UM RLC entities (for same direction, one for source and one for target cell), four UM RLC entities (two for each direction on source cell and target cell), or two AM RLC entities (one for source cell and one for target cell);\n-\tFor UM MRBs, each PDCP entity is associated with one UM RLC entity (for MTCH or for downlink DTCH), two UM RLC entities (one for MTCH and one for downlink DTCH, or one for downlink DTCH and one for uplink DTCH), or three UM RLC entities (one for MTCH, one for downlink DTCH, and one for uplink DTCH);\n-\tFor AM MRBs, each PDCP entity is associated with one AM RLC entity (for downlink DTCH and uplink DTCH), or one UM RLC entity (for MTCH) and one AM RLC entity (for downlink DTCH and uplink DTCH);\n-\tFor MP split bearers with SL indirect path, each PDCP entity is associated with one or more Uu RLC entities and one SRAP entity;\n-\tFor MP split bearers with N3C indirect path, each PDCP entity is associated with one or more Uu RLC entities and the N3C;\n-\tOtherwise, each PDCP entity is associated with one UM RLC entity, two UM RLC entities (one for each direction), or one AM RLC entity.\nFor the case of L2 U2N relay, L2 U2U relay and SL indirect path of multi-path, all PDCP entities are associated with one SRAP entity. For the case of N3C indirect path for multi-path, all PDCP entities are associated with the N3C.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.2.2\tPDCP entities",
                            "text_content": "The PDCP entities are located in the PDCP sublayer. Several PDCP entities may be defined for a UE. Each PDCP entity is carrying the data of one radio bearer. A PDCP entity is associated either to the control plane or the user plane depending on which radio bearer it is carrying data for.\nFigure 4.2.2-1 represents the functional view of the PDCP entity for the PDCP sublayer; it should not restrict implementation. The figure is based on the radio interface protocol architecture defined in TS 38.300 [2].\nFor split bearers, MP split bearers, and DAPS bearers, routing is performed in the transmitting PDCP entity.\nA PDCP entity associated with DRB can be configured by upper layers TS 38.331 [3] to use header compression or uplink data compression (UDC). A PDCP entity associated with MRB can be configured by upper layers TS 38.331 [3] to use header compression. In this version of the specification, the robust header compression protocol (ROHC), the Ethernet header compression protocol (EHC) and UDC are supported. Each header compression protocol is independently configured for a DRB/MRB.\nFigure 4.2.2-1 illustrates the Packet Data Convergence Protocol (PDCP) layer, focusing on its functional view. The figure showcases the PDCP's role in the communication process, highlighting the key components involved, such as the P-CCP (Physical Downlink Control Protocol) and the P-CSCF (Packet Data Service Call Control Function). The diagram emphasizes the importance of PDCP in managing the data transfer between the network layers, ensuring efficient and reliable communication.\nFigure 4.2.2-1: PDCP layer, functional view\nFigure 4.2.2-2 represents the functional view of the PDCP entity associated with the DAPS bearer for the PDCP sublayer; it should not restrict implementation. The figure is based on the radio interface protocol architecture defined in TS 38.300 [2].\nFor DAPS bearers, the PDCP entity is configured with two sets of security functions and keys and two sets of header compression protocols.\nFigure 4.2.2-2 illustrates the PDCP (Packet Data Convergence Protocol) layer, which is associated with the DAPS (Data and Audio Session Control Protocol) bearer in a telecommunication system. The functional view of the figure showcases the various components and processes involved in the PDCP layer, including the processing of media packets, error checking, and the establishment of a reliable connection for data and audio sessions. The figure highlights the importance of the PDCP layer in ensuring the efficient and secure transmission of voice and data traffic within the telecommunication network.\nFigure 4.2.2-2: PDCP layer associated with DAPS bearer, functional view\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.3\tServices",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "4.3.1\tServices provided to upper layers",
                            "text_content": "The PDCP layer provides its services to the RRC or SDAP layers. The following services are provided by PDCP to upper layers:\n-\ttransfer of user plane data;\n-\ttransfer of control plane data;\n-\theader compression;\n-\tuplink data compression;\n-\tciphering;\n-\tintegrity protection.\nThe maximum supported size of a PDCP SDU is 9000 bytes. The maximum supported size of a PDCP Control PDU is 9000 bytes.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "4.3.2\tServices expected from lower layers",
                            "text_content": "A PDCP entity expects the following services from lower layers per RLC entity (for a detailed description see TS 38.322 [5]):\n-\tacknowledged data transfer service, including indication of successful delivery of PDCP PDUs;\n-\tunacknowledged data transfer service.\nA PDCP entity expects the following service from SRAP entity (for a detailed description see TS 38.351 [22]), if the PDCP entity is associated with an SRAP entity:\n-\tdata transfer.\nA PDCP entity expects the following service from the N3C if the PDCP entity is associated with the N3C:\n-\tdata transfer.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "4.4\tFunctions",
                    "description": "",
                    "summary": "",
                    "text_content": "The PDCP layer supports the following functions:\n-\ttransfer of data (user plane or control plane);\n-\tmaintenance of PDCP SNs;\n-\theader compression and decompression using the ROHC protocol;\n-\theader compression and decompression using the EHC protocol;\n-\tuplink data compression and decompression using the UDC protocol;\n-\tciphering and deciphering;\n-\tintegrity protection and integrity verification;\n-\ttimer based SDU discard;\n-\tPDU Set discard;\n-\tPSI based SDU discard;\n-\tfor split bearers and DAPS bearer, routing;\n-\tduplication;\n-\treordering and in-order delivery;\n-\tout-of-order delivery;\n-\tduplicate discarding.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "5\tProcedures",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tPDCP entity handling",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.1.1\tPDCP entity establishment",
                            "text_content": "When upper layers request a PDCP entity establishment for a radio bearer for Uu or PC5 interface; or for NR sidelink communication for groupcast and broadcast or for sidelink SRB4, when receiving the first PDCP PDU, and there is not yet a corresponding PDCP entity, the UE shall:\n-\testablish a PDCP entity for the radio bearer;\n-\tset the state variables of the PDCP entity to initial values;\n-\tfollow the procedures in clause 5.2.\nNOTE:\tThe receiving PDCP entity of sidelink SRB0 and sidelink SRB1 is established same as NR sidelink groupcast and broadcast.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.2\tPDCP entity re-establishment",
                            "text_content": "When upper layers request a PDCP entity re-establishment, the UE shall additionally perform once the procedures described in this clause for Uu or PC5 interface. After performing the procedures in this clause, the UE shall follow the procedures in clause 5.2.\nWhen upper layers request a PDCP entity re-establishment, the transmitting PDCP entity shall:\n-\tfor UM DRBs and AM DRBs, reset the ROHC protocol for uplink and start with an IR state in U-mode (as defined in RFC 3095 [8] and RFC 4815 [9]) if drb-ContinueROHC is not configured in TS 38.331 [3];\n-\tfor UM DRBs and AM DRBs, reset the EHC protocol for uplink if drb-ContinueEHC-UL is not configured in TS 38.331 [3];\n-\tfor AM DRBs, reset the UDC compression buffer to all zeros and prefill the dictionary if drb-ContinueUDC is not configured in TS 38.331 [3];\n-\tfor SRBs and UM DRBs, set TX_NEXT to the initial value;\n-\tfor SRBs, discard all stored PDCP SDUs and PDCP PDUs;\n-\tapply the ciphering algorithm and key provided by upper layers during the PDCP entity re-establishment procedure;\n-\tapply the integrity protection algorithm and key provided by upper layers during the PDCP entity re-establishment procedure;\n-\tfor UM DRBs, for each PDCP SDU already associated with a PDCP SN but for which a corresponding PDU has not previously been submitted to lower layers, and;\n-\tfor AM DRBs for Uu interface whose PDCP entities were suspended, from the first PDCP SDU for which the successful delivery of the corresponding PDCP Data PDU has not been confirmed by lower layers, for each PDCP SDU already associated with a PDCP SN:\n-\tconsider the PDCP SDUs as received from upper layer;\n-\tperform transmission of the PDCP SDUs in ascending order of the COUNT value associated to the PDCP SDU prior to the PDCP re-establishment without restarting the discardTimer or the discardTimerForLowImportance, as specified in clause 5.2.1;\n-\tfor AM DRBs whose PDCP entities were not suspended, from the first PDCP SDU for which the successful delivery of the corresponding PDCP Data PDU has not been confirmed by lower layers, perform retransmission or transmission of all the PDCP SDUs already associated with PDCP SNs in ascending order of the COUNT values associated to the PDCP SDU prior to the PDCP entity re-establishment as specified below:\n-\tperform header compression of the PDCP SDU using ROHC as specified in the clause 5.7.4 and/or using EHC as specified in the clause 5.12.4;\n-\tIf drb-ContinueUDC is configured and if the PDCP SDU has been compressed before:\n-\tsubmit the PDCP SDU previously compressed to integrity protection and ciphering function;\n-\telse:\n-\tperform uplink data compression of the PDCP SDU as specified in clause 5.14.4, and submit the PDCP SDU to integrity protection and ciphering function;\n-\tperform integrity protection and ciphering of the PDCP SDU using the COUNT value associated with this PDCP SDU as specified in the clause 5.9 and 5.8;\n-\tsubmit the resulting PDCP Data PDU to lower layer, as specified in clause 5.2.1.\nWhen upper layers request a PDCP entity re-establishment, the receiving PDCP entity shall:\n-\tprocess the PDCP Data PDUs that are received from lower layers due to the re-establishment of the lower layers, as specified in the clause 5.2.2.1;\n-\tfor SRBs, discard all stored PDCP SDUs and PDCP PDUs;\n-\tfor SRBs, UM DRBs and UM MRBs, if t-Reordering is running:\n-\tstop and reset t-Reordering;\n-\tfor UM DRBs and UM MRBs, deliver all stored PDCP SDUs to the upper layers in ascending order of associated COUNT values after performing header decompression;\n-\tfor AM DRBs and AM MRBs for Uu interface, perform header decompression using ROHC for all stored PDCP SDUs if drb-ContinueROHC is not configured in TS 38.331 [3];\n-\tfor AM DRBs for PC5 interface, perform header decompression using ROHC for all stored PDCP IP SDUs;\n-\tfor AM DRBs and AM MRBs for Uu interface, perform header decompression using EHC for all stored PDCP SDUs if drb-ContinueEHC-DL is not configured in TS 38.331 [3];\n-\tfor UM DRBs, AM DRBs, UM MRBs and AM MRBs, reset the ROHC protocol for downlink and start with NC state in U-mode (as defined in RFC 3095 [8] and RFC 4815 [9]) if drb-ContinueROHC is not configured in TS 38.331 [3];\n-\tfor UM DRBs, AM DRBs, UM MRBs and AM MRBs, reset the EHC protocol for downlink if drb-ContinueEHC-DL is not configured in TS 38.331 [3];\n-\tfor SRBs and UM DRBs, set RX_NEXT and RX_DELIV to the initial value;\n-\tfor UM MRBs and AM MRBs, set RX_NEXT and RX_DELIV to the initial value if initialRX-DELIV is configured in TS 38.331 [3];\n-\tapply the ciphering algorithm and key provided by upper layers during the PDCP entity re-establishment procedure;\n-\tapply the integrity protection algorithm and key provided by upper layers during the PDCP entity re-establishment procedure.\nNOTE 1:\tAfter PDCP re-establishment on a sidelink ‎SRB/DRB, UE determines when to transmit and receive with the new key and discard the old key as specified in TS ‎‎33.536 [14].‎\nNOTE 2:\tAt PDCP re-establishment, the MRB type (i.e. UM MRB or AM MRB) is determined by the target configuration.‎\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.3\tPDCP entity release",
                            "text_content": "When upper layers request a PDCP entity release for a radio bearer for Uu or PC5 interface, the UE shall:\n-\tdiscard all stored PDCP SDUs and PDCP PDUs in the transmitting PDCP entity;\n-\tfor UM DRBs, AM DRBs, UM MRBs and AM MRBs, deliver the PDCP SDUs stored in the receiving PDCP entity to upper layers in ascending order of associated COUNT values after performing header decompression, if not decompressed before;\n-\trelease the PDCP entity for the radio bearer.\nNOTE:\tFor NR sidelink communication for groupcast and broadcast or for sidelink SRB4, the receiving PDCP entity release for an SLRB is up to UE implementation.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.4\tPDCP entity suspend",
                            "text_content": "When upper layers request a PDCP entity suspend, the transmitting PDCP entity shall:\n-\tset TX_NEXT to the initial value;\n-\tdiscard all stored PDCP PDUs;\nWhen upper layers request a PDCP entity suspend, the receiving PDCP entity shall:\n-\tif t-Reordering is running:\n-\tstop and reset t-Reordering;\n-\tdeliver all stored PDCP SDUs to the upper layers in ascending order of associated COUNT values after performing header decompression;\n-\tset RX_NEXT and RX_DELIV to the initial value, except for MRB.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.5\tPDCP entity reconfiguration",
                            "text_content": "When upper layers reconfigure the PDCP entity to configure DAPS, the UE shall:\n-\testablish a ciphering function for the radio bearer and apply the ciphering algorithm and key provided by upper layers for the ciphering function;\n-\testablish an integrity protection function for the radio bearer and apply the integrity protection algorithm and key provided by upper layers for the integrity protection function;\n-\testablish a header compression protocol for the radio bearer and apply the header compression configuration provided by upper layers for the header compression protocol.\nWhen upper layers reconfigure the PDCP entity to release DAPS, the UE shall:\n-\trelease the ciphering function associated to the released RLC entity for the radio bearer;\n-\trelease the integrity protection function associated to the released RLC entity for the radio bearer;\n-\trelease the header compression protocol associated to the released RLC entity for the radio bearer.\nNOTE 1:\tThe state variables which control the transmission and reception operation should not be reset, and the timers including t-Reordering, discardTimer, and discardTimerForLowImportance keep running during PDCP entity reconfiguration procedure.\nNOTE 2:\tBefore releasing the header compression protocol associated to the released RLC entity, how to handle all stored PDCP SDUs received from the released RLC entity is left up to UE implementation.\nNOTE 3:\tNo special handling for the header compression protocol is defined to avoid potential security issue (e.g. keystream reuse) for DAPS handover with no security key change.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.2\tData transfer",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.2.1\tTransmit operation",
                            "text_content": "At reception of a PDCP SDU from upper layers, the transmitting PDCP entity shall:\n-\tif discardTimerForLowImportance is configured and PSI based SDU discard is activated, and the PDCP SDU belongs to a low importance PDU Set:\n-\tstart the discardTimerForLowImportance associated with this PDCP SDU;\n-\telse:\n-\tstart the discardTimer associated with this PDCP SDU (if configured).\nNOTE 0:\tIdentification of PSI of a PDU Set and determination of low importance PDU Set are left up to UE implementation.\nFor a PDCP SDU received from upper layers, the transmitting PDCP entity shall:\n-\tassociate the COUNT value corresponding to TX_NEXT to this PDCP SDU;\nNOTE 1:\tAssociating more than half of the PDCP SN space of contiguous PDCP SDUs with PDCP SNs, when e.g., the PDCP SDUs are discarded or transmitted without acknowledgement, may cause HFN desynchronization problem. How to prevent HFN desynchronization problem is left up to UE implementation.\n-\tperform header compression of the PDCP SDU using ROHC as specified in the clause 5.7.4 and/or using EHC as specified in the clause 5.12.4;\n-\tperform uplink data compression of the PDCP SDU as specified in clause 5.14.4;\n-\tperform integrity protection, and ciphering using the TX_NEXT as specified in the clause 5.9 and 5.8, respectively;\n-\tset the PDCP SN of the PDCP Data PDU to TX_NEXT modulo 2[pdcp-SN-SizeUL];\n-\tincrement TX_NEXT by one;\n-\tsubmit the resulting PDCP Data PDU to lower layer as specified below.\nWhen submitting a PDCP PDU to lower layer, the transmitting PDCP entity shall:\n-\tif the transmitting PDCP entity is associated with one SRAP entity:\n-\tsubmit the PDCP PDU to the associated SRAP entity;\n-\telse, if the transmitting PDCP entity is associated with one RLC entity:\n-\tsubmit the PDCP PDU to the associated RLC entity;\n-\telse, if the transmitting PDCP entity is associated with one or more RLC entities and, either one SRAP entity or the N3C:\n-\tif PDCP duplication is activated for the RB:\n-\tif the PDCP PDU is a PDCP Data PDU:\n-\tduplicate the PDCP Data PDU and submit the PDCP Data PDU to both the primary path and secondary path, including any associated Uu RLC entities activated for PDCP duplication;\n-\telse:\n-\tsubmit the PDCP Control PDU to the primary path;\n-\telse (i.e., PDCP duplication is deactivated for the RB):\n-\tif the total amount of PDCP data volume, RLC data volume pending for initial transmission (as specified in TS 38.322 [5]) in the RLC entity, and data volume pending for either transmission in the N3C (if available) or mapped SL RLC entity associated with the SRAP entity, is equal to or larger than ul-DataSplitThreshold:\n-\tsubmit the PDCP PDU to either the primary path or secondary path;\n-\telse:\n-\tsubmit the PDCP PDU to the primary path;\n-\telse, if the transmitting PDCP entity is associated with at least two RLC entities:\n-\tif the PDCP duplication is activated for the RB:\n-\tif the PDCP PDU is a PDCP Data PDU:\n-\tduplicate the PDCP Data PDU and submit the PDCP Data PDU to the associated RLC entities activated for PDCP duplication;\n-\telse:\n-\tsubmit the PDCP Control PDU to the primary RLC entity;\n-\telse (i.e. the PDCP duplication is deactivated for the RB or the RB is a DAPS bearer):\n-\tif the split secondary RLC entity is configured; and\n-\tif the total amount of PDCP data volume and RLC data volume pending for initial transmission (as specified in TS 38.322 [5]) in the primary RLC entity and the split secondary RLC entity is equal to or larger than ul-DataSplitThreshold:\n-\tsubmit the PDCP PDU to either the primary RLC entity or the split secondary RLC entity;\n-\telse, if the transmitting PDCP entity is associated with the DAPS bearer:\n-\tif the uplink data switching has not been requested:\n-\tsubmit the PDCP PDU to the RLC entity associated with the source cell;\n-\telse:\n-\tif the PDCP PDU is a PDCP Data PDU:\n-\tsubmit the PDCP Data PDU to the RLC entity associated with the target cell;\n-\telse:\n-\tif the PDCP Control PDU is associated with source cell:\n-\tsubmit the PDCP Control PDU to the RLC entity associated with the source cell;\n-\telse:\n-\tsubmit the PDCP Control PDU to the RLC entity associated with the target cell;\n-\telse:\n-\tsubmit the PDCP PDU to the primary RLC entity.\nNOTE 2:\tIf the transmitting PDCP entity is associated with two RLC entities, or with one or more RLC entities and either an SRAP entity or the N3C, the UE should minimize the amount of PDCP PDUs submitted to lower layers before receiving request from lower layers and minimize the PDCP SN gap between PDCP PDUs submitted to two associated RLC entities, or to the RLC entity and either the SRAP entity or the N3C, to minimize PDCP reordering delay in the receiving PDCP entity.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.2\tReceive operation",
                            "text_content": "In this clause, following definitions are used:\n-\tHFN(State Variable): the HFN part (i.e. the number of most significant bits equal to HFN length) of the State Variable;\n-\tSN(State Variable): the SN part (i.e. the number of least significant bits equal to PDCP SN length) of the State Variable;\n-\tRCVD_SN: the PDCP SN of the received PDCP Data PDU, included in the PDU header;\n-\tRCVD_HFN: the HFN of the received PDCP Data PDU, calculated by the receiving PDCP entity;\n-\tRCVD_COUNT: the COUNT of the received PDCP Data PDU = [RCVD_HFN, RCVD_SN].\nAt reception of a PDCP Data PDU from lower layers, the receiving PDCP entity shall determine the COUNT value of the received PDCP Data PDU, i.e. RCVD_COUNT, as follows:\n-\tif RCVD_SN < SN(RX_DELIV) – Window_Size:\n-\tRCVD_HFN = HFN(RX_DELIV) + 1.\n-\telse if RCVD_SN >= SN(RX_DELIV) + Window_Size:\n-\tRCVD_HFN = HFN(RX_DELIV) – 1.\n-\telse:\n-\tRCVD_HFN = HFN(RX_DELIV);\n-\tRCVD_COUNT = [RCVD_HFN, RCVD_SN].\nAfter determining the COUNT value of the received PDCP Data PDU = RCVD_COUNT, the receiving PDCP entity shall:\n-\tperform deciphering and integrity verification of the PDCP Data PDU using COUNT = RCVD_COUNT;\n-\tif integrity verification fails:\n-\tindicate the integrity verification failure to upper layer;\n-\tdiscard the PDCP Data PDU and consider it as not received;\n-\tif RCVD_COUNT < RX_DELIV; or\n-\tif the PDCP Data PDU with COUNT = RCVD_COUNT has been received before:\n-\tdiscard the PDCP Data PDU;\nIf the received PDCP Data PDU with COUNT value = RCVD_COUNT is not discarded above, the receiving PDCP entity shall:\n-\tstore the resulting PDCP SDU in the reception buffer;\n-\tif RCVD_COUNT >= RX_NEXT:\n-\tupdate RX_NEXT to RCVD_COUNT + 1.\n-\tif outOfOrderDelivery is configured:\n-\tdeliver the resulting PDCP SDU to upper layers after performing header decompression using EHC.\n-\tif RCVD_COUNT = RX_DELIV:\n-\tdeliver to upper layers in ascending order of the associated COUNT value after performing header decompression, if not decompressed before;\n-\tall stored PDCP SDU(s) with consecutively associated COUNT value(s) starting from COUNT = RX_DELIV;\n-\tupdate RX_DELIV to the COUNT value of the first PDCP SDU which has not been delivered to upper layers, with COUNT value > RX_DELIV;\n-\tif t-Reordering is running, and if RX_DELIV >= RX_REORD:\n-\tstop and reset t-Reordering.\n-\tif t-Reordering is not running (includes the case when t-Reordering is stopped due to actions above), and RX_DELIV < RX_NEXT:\n-\tupdate RX_REORD to RX_NEXT;\n-\tstart t-Reordering.\nWhen t-Reordering expires, the receiving PDCP entity shall:\n-\tdeliver to upper layers in ascending order of the associated COUNT value after performing header decompression, if not decompressed before:\n-\tall stored PDCP SDU(s) with associated COUNT value(s) < RX_REORD;\n-\tall stored PDCP SDU(s) with consecutively associated COUNT value(s) starting from RX_REORD;\n-\tupdate RX_DELIV to the COUNT value of the first PDCP SDU which has not been delivered to upper layers, with COUNT value >= RX_REORD;\n-\tif RX_DELIV < RX_NEXT:\n-\tupdate RX_REORD to RX_NEXT;\n-\tstart t-Reordering.\nWhen the value of the t-Reordering is reconfigured by upper layers while the t-Reordering is running, the receiving PDCP entity shall:\n-\tupdate RX_REORD to RX_NEXT;\n-\tstop and restart t-Reordering.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.3\tSidelink transmit operation",
                            "text_content": "For NR sidelink transmission of the SLRB, the UE shall follow the procedures in clause 5.2.1 with following modification:\n-\tperform the header compression using ROHC as specified in clause 5.7.4, if SDU Type is IP;\n-\tset the PDCP SN of the PDCP Data PDU to TX_NEXT modulo 2[sl-PDCP-SN-Size];\n-\tif the transmitting PDCP entity is associated with two RLC entities:\n-\tconsider PDCP duplication as activated;\n-\tsubmit the PDCP control PDU to one of the associated RLC entities.\nNOTE:\tHow to decide to which RLC entity a PDCP control PDU is submitted is left up to UE implementation.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.4\tSidelink receive operation",
                            "text_content": "For sidelink reception of the SLRB, the UE shall follow the procedures in clause 5.2.2 with following modification:\n-\tperform the header decompression using ROHC as specified in clause 5.7.5, if SDU Type is IP.\nNOTE:\tFor reception of sidelink SRBs except sidelink SRB3, the UE may deliver the PDCP SDU to the upper layer along with an indication whether it is PC5-S message or NR sidelink discovery message.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.3\tSDU discard",
                    "description": "",
                    "summary": "",
                    "text_content": "When the successful delivery of a PDCP SDU is confirmed by PDCP status report, the transmitting PDCP entity shall discard the PDCP SDU along with the corresponding PDCP Data PDU.\nWhen the discardTimer or discardTimerForLowImportance expires for a PDCP SDU, the transmitting PDCP entity shall:\n-\tif pdu-SetDiscard is configured:\n-\tdiscard all PDCP SDUs belonging to the PDU Set to which the PDCP SDU belongs along with the corresponding PDCP Data PDUs;\nNOTE 1:\tPDCP SDUs subsequently received from upper layers are also discarded if they belong to the PDU Set.\n-\telse:\n-\tdiscard the PDCP SDU along with the corresponding PDCP Data PDU.\nIf the corresponding PDCP Data PDU has already been submitted to lower layers, the discard is indicated to lower layers.\nFor SRBs, when upper layers request a PDCP SDU discard, the PDCP entity shall discard all stored PDCP SDUs and PDCP PDUs.\nNOTE 2:\tDiscarding a PDCP SDU already associated with a PDCP SN causes a SN gap in the transmitted PDCP Data PDUs, which increases PDCP reordering delay in the receiving PDCP entity. It is up to UE implementation how to minimize SN gap after SDU discard.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.4\tStatus reporting",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.4.1\tTransmit operation",
                            "text_content": "For AM DRBs configured by upper layers to send a PDCP status report in the uplink (statusReportRequired in TS 38.331 [3]), the receiving PDCP entity shall trigger a PDCP status report when:\n-\tupper layer requests a PDCP entity re-establishment;\n-\tupper layer requests a PDCP data recovery;\n-\tupper layer requests a uplink data switching;\n-\tupper layer reconfigures the PDCP entity to release DAPS and daps-SourceRelease is configured in TS 38.331 [3].\nFor UM DRBs configured by upper layers to send a PDCP status report in the uplink (statusReportRequired in TS 38.331 [3]), the receiving PDCP entity shall trigger a PDCP status report when:\n-\tupper layer requests a uplink data switching.\nFor AM DRBs in the sidelink, the receiving PDCP entity shall trigger a PDCP status report when:\n-\tupper layer requests a PDCP entity re-establishment.\nFor AM MRBs configured by upper layers to send a PDCP status report in the uplink (statusReportRequired in TS 38.331 [3]), the receiving PDCP entity shall trigger a PDCP status report when:\n-\tupper layer requests a PDCP entity re-establishment;\n-\tupper layer requests a PDCP data recovery.\nIf a PDCP status report is triggered, the receiving PDCP entity shall:\n-\tcompile a PDCP status report as indicated below by:\n-\tsetting the FMC field to RX_DELIV;\n-\tif RX_DELIV < RX_NEXT:\n-\tallocating a Bitmap field of length in bits equal to the number of COUNTs from and not including the first missing PDCP SDU up to and including the last out-of-sequence PDCP SDUs, rounded up to the next multiple of 8, or up to and including a PDCP SDU for which the resulting PDCP Control PDU size is equal to 9000 bytes, whichever comes first;\n-\tsetting in the bitmap field as '0' for all PDCP SDUs that have not been received, and optionally PDCP SDUs for which decompression have failed;\n-\tsetting in the bitmap field as '1' for all PDCP SDUs that have been received;\n-\tsubmit the PDCP status report to lower layers as the first PDCP PDU for transmission via the transmitting PDCP entity as specified in clause 5.2.1 for Uu interface and in clause 5.2.3 for PC5 interface.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.4.2\tReceive operation",
                            "text_content": "For AM DRBs, when a PDCP status report is received in the downlink or in the sidelink, the transmitting PDCP entity shall:\n-\tconsider for each PDCP SDU, if any, with the bit in the bitmap set to '1', or with the associated COUNT value less than the value of FMC field as successfully delivered, and discard the PDCP SDU as specified in clause 5.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.5\tData recovery",
                    "description": "",
                    "summary": "",
                    "text_content": "For AM DRBs, when upper layers request a PDCP data recovery for a radio bearer, the transmitting PDCP entity shall:\n-\tperform retransmission of all the PDCP Data PDUs previously submitted to re-established or released AM RLC entities in ascending order of the associated COUNT values for which the successful delivery has not been confirmed by lower layers, following the data submission procedure in clause 5.2.1.\nAfter performing the above procedures, the transmitting PDCP entity shall follow the procedures in clause 5.2.1.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.6\tData volume calculation",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purpose of MAC buffer status reporting, the transmitting PDCP entity shall consider the following as PDCP data volume:\n-\tthe PDCP SDUs for which no PDCP Data PDUs have been constructed;\n-\tthe PDCP Data PDUs that have not been submitted to lower layers;\n-\tthe PDCP Control PDUs;\n-\tfor AM DRBs, the PDCP SDUs to be retransmitted according to clause 5.1.2 and clause 5.13;\n-\tfor AM DRBs, the PDCP Data PDUs to be retransmitted according to clause 5.5.\nIf the transmitting PDCP entity is associated with at least two RLC entities, or with an RLC entity and either an SRAP entity or the N3C, when indicating the PDCP data volume to a MAC entity for BSR triggering and Buffer Size calculation (as specified in TS 38.321 [4] and TS 36.321 [12]), the transmitting PDCP entity shall:\n-\tif the PDCP duplication is activated for the RB:\n-\tindicate the PDCP data volume to the MAC entity associated with the primary RLC entity or primary path;\n-\tindicate the PDCP data volume excluding the PDCP Control PDU to the MAC entity associated with the RLC entity other than the primary RLC entity or primary path activated for PDCP duplication;\n-\tindicate the PDCP data volume as 0 to the MAC entity associated with RLC entity deactivated for PDCP duplication;\n-\telse (i.e. the PDCP duplication is deactivated for the RB or the RB is a DAPS bearer):\n-\tif the split secondary RLC entity is configured; and\n-\tif the total amount of PDCP data volume and RLC data volume pending for initial transmission (as specified in TS 38.322 [5]) in the primary RLC entity and the split secondary RLC entity is equal to or larger than ul-DataSplitThreshold:\n-\tindicate the PDCP data volume to both the MAC entity associated with the primary RLC entity and the MAC entity associated with the split secondary RLC entity;\n-\tindicate the PDCP data volume as 0 to the MAC entity associated with RLC entity other than the primary RLC entity and the split secondary RLC entity;\n-\telse, if the total amount of PDCP data volume, RLC data volume pending for initial transmission (as specified in TS 38.322 [5]) in the RLC entity, and data volume pending for either transmission in the N3C (if available), or mapped SL RLC entity associated with the SRAP entity, is equal to or larger than ul-DataSplitThreshold:\n-\tindicate the PDCP data volume to the MAC entity;\n-\telse, if the transmitting PDCP entity is associated with the DAPS bearer:\n-\tif the uplink data switching has not been requested:\n-\tindicate the PDCP data volume to the MAC entity associated with the source cell;\n-\telse:\n-\tindicate the PDCP data volume excluding the PDCP Control PDU for interspersed ROHC feedback associated with the source cell to the MAC entity associated with the target cell;\n-\tindicate the PDCP data volume of PDCP Control PDU for interspersed ROHC feedback associated with the source cell to the MAC entity associated with the source cell;\n-\telse:\n-\tindicate the PDCP data volume to the MAC entity associated with the primary RLC entity or primary path;\n-\tindicate the PDCP data volume as 0 to the MAC entity associated with the RLC entity other than the primary RLC entity or primary path.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.7\tRobust header compression and decompression",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.7.1\tSupported header compression protocols and profiles",
                            "text_content": "The ROHC protocol is based on the Robust Header Compression (ROHC) framework defined in RFC 5795 [7]. There are multiple ROHC algorithms, called profiles, defined for the ROHC framework. Each profile is specific to the particular network layer, transport layer or upper layer protocol combination e.g. TCP/IP and RTP/UDP/IP.\nThe detailed definition of the ROHC channel is specified as part of the ROHC framework defined in RFC 5795 [7]. This includes how to multiplex different flows (header compressed or not) over the ROHC channel, as well as how to associate a specific IP flow with a specific context state during initialization of the compression algorithm for that flow.\nThe implementation of the functionality of the ROHC framework and of the functionality of the supported header compression profiles is not covered in this specification.\nIn this version of the specification the support of the following profiles is described:\nTable 5.7.1-1: Supported ROHC protocols and profiles\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 5.7.1-1: Supported ROHC protocols and profiles",
                                    "table number": 1,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "5.7.2\tConfiguration of ROHC",
                            "text_content": "PDCP entities associated with DRBs and MRBs can be configured by upper layers TS 38.331 [3] to use ROHC. Each PDCP entity carrying user plane data may be configured to use ROHC. PDCP entities associated with sidelink DRBs can be configured to use ROHC for IP SDUs. For DRBs and MRBs other than DAPS bearers, the PDCP entity uses at most one ROHC compressor instance and at most one ROHC decompressor instance. For DAPS bearers, the PDCP entity uses at most one ROHC compressor instance (i.e. use the ROHC compressor instance for source cell before uplink data switching, and use the ROHC compressor instance for target cell after uplink data switching) and at most two ROHC decompressor instances.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.7.3\tProtocol parameters",
                            "text_content": "RFC 5795 [7] has configuration parameters that are mandatory and that must be configured by upper layers between compressor and decompressor peers ; these parameters define the ROHC channel. The ROHC channel is a unidirectional channel, i.e. if rohc is configured there is one channel for the downlink and one for the uplink, and if uplinkOnlyROHC is configured there is only one channel for the uplink. There is thus one set of parameters for each channel, and if rohc is configured the same values shall be used for both channels belonging to the same PDCP entity.\nThese parameters are categorized in two different groups, as defined below:\n-\tM:\tMandatory and configured by upper layers;\n-\tN/A: Not used in this specification.\nThe usage and definition of the parameters shall be as specified below.\n-\tMAX_CID (M): This is the maximum CID value that can be used. One CID value shall always be reserved for uncompressed flows. The parameter MAX_CID is configured by upper layers (maxCID in TS 38.331 [3]);\n-\tLARGE_CIDS: This value is not configured by upper layers, but rather it is inferred from the configured value of MAX_CID according to the following rule:\n-\tIf MAX_CID > 15 then LARGE_CIDS = TRUE else LARGE_CIDS = FALSE;\n-\tPROFILES (M): Profiles are used to define which profiles are allowed to be used by the UE. The list of supported profiles is described in clause 5.7.1. The parameter PROFILES is configured by upper layers (profiles for uplink and downlink, sl-RoHC-Profiles in SidelinkPreconfigNR for sidelink in TS 38.331 [3]);\n-\tFEEDBACK_FOR (N/A): This is a reference to the channel in the opposite direction between two compression endpoints and indicates to what channel any feedback sent refers to. Feedback received on one ROHC channel for this PDCP entity shall always refer to the ROHC channel in the opposite direction for this same PDCP entity;\n-\tMRRU (N/A): ROHC segmentation is not used.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.7.4\tHeader compression using ROHC",
                            "text_content": "If ROHC is configured, the ROHC protocol generates two types of output packets:\n-\tROHC compressed packets, each associated with one PDCP SDU;\n-\tstandalone packets not associated with a PDCP SDU, i.e. interspersed ROHC feedback.\nA ROHC compressed packet is associated with the same PDCP SN and COUNT value as the related PDCP SDU. The header compression is not applicable to the SDAP header and the SDAP Control PDU if included in the PDCP SDU.\nFor DAPS bearers, the PDCP entity shall perform the header compression for the PDCP SDU using the ROHC protocol either configured for the source cell or configured for the target cell, based on to which cell the PDCP SDU is transmitted.\nInterspersed ROHC feedback are not associated with a PDCP SDU. They are not associated with a PDCP SN and are not ciphered.\nNOTE 1:\tIf the MAX_CID number of ROHC contexts are already established for the compressed flows and a new IP flow does not match any established ROHC context, the compressor should associate the new IP flow with one of the ROHC CIDs allocated for the existing compressed flows or send PDCP SDUs belonging to the IP flow as uncompressed packet.\nNOTE 2:\tFor downlink, the ROHC protocol of the target cell should maintain the IR state if operating in U-mode and O-mode during DAPS handover before release of source cell.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.7.5\tHeader decompression using ROHC",
                            "text_content": "If ROHC is configured by upper layers for PDCP entities associated with user plane data, the PDCP Data PDUs are decompressed by the ROHC protocol after performing deciphering as explained in clause 5.8. The header decompression is not applicable to the SDAP header and the SDAP Control PDU if included in the PDCP Data PDU.\nFor DAPS bearers, the PDCP entity shall perform the header decompression for the PDCP SDU using the ROHC protocol either configured for the source cell or configured for the target cell, based on from which cell the PDCP SDU is received.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.7.6\tPDCP Control PDU for interspersed ROHC feedback",
                            "text_content": "When an interspersed ROHC feedback is generated by the ROHC protocol, the transmitting PDCP entity shall:\n-\tsubmit to lower layers the corresponding PDCP Control PDU as specified in clause 6.2.3.2 i.e. without associating a PDCP SN, nor performing ciphering, as specified in clause 5.2.1.\nAt reception of a PDCP Control PDU for interspersed ROHC feedback from lower layers, the receiving PDCP entity shall:\n-\tdeliver the corresponding interspersed ROHC feedback to the associated ROHC protocol without performing deciphering.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.8\tCiphering and deciphering",
                    "description": "",
                    "summary": "",
                    "text_content": "The ciphering function includes both ciphering and deciphering and is performed in PDCP, if configured. The data unit that is ciphered is the MAC-I (see clause 6.3.4) and the data part of the PDCP Data PDU (see clause 6.3.3) except the SDAP header and the SDAP Control PDU if included in the PDCP SDU. The ciphering is not applicable to PDCP Control PDUs.\nFor downlink and uplink, the ciphering algorithm and key to be used by the PDCP entity are configured by upper layers TS 38.331 [3] and the ciphering method shall be applied as specified in TS 33.501 [6].\nThe ciphering function is activated/suspended/resumed by upper layers TS 38.331 [3]. When security is activated and not suspended, the ciphering function shall be applied to all PDCP Data PDUs indicated by upper layers TS 38.331 [3] for the downlink and the uplink, respectively.\nFor DAPS bearers, the PDCP entity shall perform the ciphering or deciphering for the PDCP SDU using the ciphering algorithm and key either configured for the source cell or configured for the target cell, based on to/from which cell the PDCP SDU is transmitted/received.\nFor downlink and uplink ciphering and deciphering, the parameters that are required by PDCP for ciphering are defined in TS 33.501 [6] and are input to the ciphering algorithm. The required inputs to the ciphering function include the COUNT value, and DIRECTION (direction of the transmission: set as specified in TS 33.501 [6]). The parameters required by PDCP which are provided by upper layers TS 38.331 [3] are listed below:\n-\tBEARER (defined as the radio bearer identifier in TS 33.501 [6]. It will use the value RB identity –1 as in TS 38.331 [3]);\n-\tKEY (the ciphering keys for the control plane and for the user plane are KRRCenc and KUPenc, respectively).\nFor NR sidelink communication, the ciphering algorithm and key to be used by the PDCP entity are configured by upper layers as specified in TS 24.587 [16] and the ciphering method shall be applied as specified in TS 33.536 [14].\nFor NR sidelink communication, the ciphering function is activated for sidelink SRBs (except for SL-SRB0) and/or sidelink DRBs for a PC5 unicast ‎link by upper layers, as specified in TS 38.331 [3]. When security is activated for sidelink SRBs, the ciphering function ‎shall be applied to all PDCP Data PDUs (except for carrying Direct Security Mode Command message as specified in TS 33.536 [14]) for the sidelink SRBs which belong to ‎the PC5 unicast link.‎ When security is activated for sidelink DRBs, the ciphering function ‎shall be applied to all PDCP Data PDUs for the sidelink DRBs which belong to ‎the PC5 unicast link.‎\nFor NR sidelink communication, the ciphering and deciphering function as specified in TS 33.536 [14] is applied with KEY (NRPEK), COUNT, BEARER (LSB 5 bits of LCID with values 1 to 19 associated with the PDCP entity, as specified in TS 38.321 [4]) and DIRECTION (which value shall be set is specified in TS 33.536 [14]) as input.\nThe ciphering and deciphering are not applied to MRBs and sidelink SRB4.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.9\tIntegrity protection and verification",
                    "description": "",
                    "summary": "",
                    "text_content": "The integrity protection function includes both integrity protection and integrity verification and is performed in PDCP, if configured. The data unit that is integrity protected is the PDU header and the data part of the PDU before ciphering. The integrity protection is always applied to PDCP Data PDUs of SRBs. The integrity protection is applied to sidelink SRB1, SRB2 and SRB3. The integrity protection is applied to PDCP Data PDUs of DRBs (including sidelink DRBs for unicast) for which integrity protection is configured. The integrity protection is not applicable to PDCP Control PDUs.\nFor downlink and uplink, the integrity protection algorithm and key to be used by the PDCP entity are configured by upper layers TS 38.331 [3] and the integrity protection method shall be applied as specified in TS 33.501 [6] for NR and in TS 33.401 [17] for E-UTRA/EPC.\nThe integrity protection function is activated/suspended/resumed by upper layers TS 38.331 [3]. When security is activated and not suspended, the integrity protection function shall be applied to all PDUs including and subsequent to the PDU indicated by upper layers TS 38.331 [3] for the downlink and the uplink, respectively.\nNOTE 1:\tAs the RRC message which activates the integrity protection function is itself integrity protected with the configuration included in this RRC message, this message needs first be decoded by RRC before the integrity protection verification could be performed for the PDU in which the message was received.\nNOTE 2:\tAs the PC5-S message which activates the integrity protection function is itself integrity protected with the configuration included in this PC5-S message, this message needs first be decoded by upper layer before the integrity protection verification could be performed for the PDU in which the message was received.\nFor DAPS bearers, the PDCP entity shall perform the integrity protection or verification for the PDCP SDU using the integrity protection algorithm and key either configured for the source cell or configured for the target cell, based on to/from which cell the PDCP SDU is transmitted/received.\nFor downlink and uplink integrity protection and verification, the parameters that are required by PDCP for integrity protection are defined in TS 33.501 [6] or TS 33.401 [17] and are input to the integrity protection algorithm. The required inputs to the integrity protection function include the COUNT value, and DIRECTION (direction of the transmission: set as specified in TS 33.501 [6]) or TS 33.401 [17]. The parameters required by PDCP which are provided by upper layers TS 38.331 [3] are listed below:\n-\tBEARER (defined as the radio bearer identifier in TS 33.501 [6] or TS 33.401 [17]. It will use the value RB identity –1 as in TS 38.331 [3]);\n-\tKEY (the integrity protection keys for the control plane and for the user plane are KRRCint and KUPint, respectively).\nFor NR sidelink communication, the integrity protection algorithm and key to be used by the PDCP entity are configured by upper layers TS 24.587 [16] and the integrity protection method shall be applied as specified in TS 33.536 [14].\nFor NR sidelink communication, the integrity protection function is activated for sidelink SRBs and/or sidelink DRBs for a PC5 unicast link ‎by upper layers, as specified in TS 38.331 [3]. When security is activated for sidelink SRBs, the integrity protection ‎function shall be applied to all PDUs including and subsequent to the PDU for the ‎sidelink SRBs which belong to the PC5 unicast link.‎ When security is activated for sidelink DRBs, the integrity protection ‎function shall be applied to all PDUs including and subsequent to the PDU for the ‎sidelink DRBs which belong to the PC5 unicast link.‎\nFor the SLRB that needs integrity protection and verification, the parameters that are required by PDCP for integrity protection are defined in TS 33.536 [14] and are input to the integrity protection algorithm. The required inputs to the integrity protection function include the KEY (NRPIK), COUNT, BEARER (LSB 5 bits of LCID with values 1 to 19 associated with the PDCP entity, as specified in TS 38.321 [4]) and DIRECTION (which value shall be set is specified in TS 33.536 [14]).\nAt transmission, the UE computes the value of the MAC-I field and at reception it verifies the integrity of the PDCP Data PDU by calculating the X-MAC based on the input parameters as specified above. If the calculated X-MAC corresponds to the received MAC-I, integrity protection is verified successfully.\nThe integrity protection and verification are not applied to MRBs and sidelink SRB4.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.10\tHandling of unknown, unforeseen, and erroneous protocol data",
                    "description": "",
                    "summary": "",
                    "text_content": "When a PDCP PDU that contains reserved or invalid values is received, the receiving PDCP entity shall:\n-\tdiscard the received PDU.\nNOTE:\tFor NR sidelink communication for unicast, the invalid values include the invalid value of KNRP-sess ID.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.11\tPDCP duplication",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.11.1\tActivation/Deactivation of PDCP duplication",
                            "text_content": "For the PDCP entity configured with pdcp-Duplication, the transmitting PDCP entity shall:\n-\tfor SRBs:\n-\tactivate the PDCP duplication;\n-\tfor DRBs:\n-\tif the activation of PDCP duplication is indicated for the DRB:\n-\tactivate the PDCP duplication for the DRB;\n-\tif the activation of PDCP duplication is indicated for at least one associated RLC entities:\n-\tactivate the PDCP duplication for the indicated associated RLC entities;\n-\tactivate the PDCP duplication for the DRB;\n-\tif the deactivation of PDCP duplication is indicated for the DRB:\n-\tdeactivate the PDCP duplication for the DRB;\n-\tif the deactivation of PDCP duplication is indicated for at least one associated RLC entities:\n-\tdeactivate the PDCP duplication for the indicated associated RLC entities;\n-\tif all associated RLC entities other than the primary RLC entity are deactivated for PDCP duplication:\n-\tdeactivate the PDCP duplication for the DRB.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.11.2\tDuplicate PDU discard",
                            "text_content": "For the PDCP entity configured with pdcp-Duplication or for the PDCP entity associated with two RLC entities for an SLRB, the transmitting PDCP entity shall:\n-\tif the successful delivery of a PDCP Data PDU is confirmed by one of the associated AM RLC entities and the AM RLC entity is not associated with an SRAP entity:\n-\tindicate to the other AM RLC entities to discard the duplicated PDCP Data PDU;\n-\tif the deactivation of PDCP duplication is indicated for the DRB:\n-\tindicate to the RLC entities other than the primary RLC entity to discard all duplicated PDCP Data PDUs;\n-\tif the deactivation of PDCP duplication is indicated for at least one associated RLC entities:\n-\tindicate to the RLC entities deactivated for PDCP duplication to discard all duplicated PDCP Data PDUs.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.12\tEthernet header compression and decompression",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.12.1\tSupported header compression protocols",
                            "text_content": "The EHC protocol is based on the Ethernet Header Compression (EHC) framework defined in Annex A.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.12.2\tConfiguration of EHC",
                            "text_content": "PDCP entities associated with DRBs and MRBs can be configured by upper layers TS 38.331 [3] to use EHC. Each PDCP entity carrying user plane data may be configured to use EHC. Every PDCP entity uses at most one EHC compressor instance and at most one EHC decompressor instance.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.12.3\tProtocol parameters",
                            "text_content": "The usage and definition of the parameters shall be as specified below.\n-\tMAX_CID_EHC_UL: This is the maximum CID value that can be used for uplink. One CID value shall always be reserved for uncompressed flows. The parameter MAX_CID_EHC_UL is configured by upper layers (maxCID-EHC-UL in TS 38.331 [3]);\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.12.4\tHeader compression using EHC",
                            "text_content": "If EHC is configured, the EHC protocol generates two types of output packets:\n-\tEHC compressed packets (i.e. EHC full header packets and EHC compressed header packets), each associated with one PDCP SDU;\n-\tstandalone packets not associated with a PDCP SDU, i.e. EHC feedback.\nAn EHC compressed packet is associated with the same PDCP SN and COUNT value as the related PDCP SDU. The header compression is not applicable to the SDAP header and the SDAP Control PDU if included in the PDCP SDU.\nEHC feedback are not associated with a PDCP SDU. They are not associated with a PDCP SN and are not ciphered/integrity protected.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.12.5\tHeader decompression using EHC",
                            "text_content": "If EHC is configured by upper layers for PDCP entities associated with user plane data, the PDCP Data PDUs are decompressed by the EHC protocol after performing deciphering and integrity verification as explained in clause 5.8 and 5.9, respectively. The header decompression is not applicable to the SDAP header and the SDAP Control PDU if included in the PDCP Data PDU.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.12.6\tPDCP Control PDU for EHC feedback",
                            "text_content": "When an EHC feedback is generated by the EHC protocol, the transmitting PDCP entity shall:\n-\tsubmit to lower layers the corresponding PDCP Control PDU as specified in clause 6.2.3.3 i.e. without associating a PDCP SN, nor performing ciphering/integrity protection.\nAt reception of a PDCP Control PDU for EHC feedback from lower layers, the receiving PDCP entity shall:\n-\tdeliver the corresponding EHC feedback to the EHC protocol without performing deciphering/integrity verification.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.12.7\tSimultaneous configuration of ROHC and EHC",
                            "text_content": "If both ROHC and EHC are configured for a DRB/MRB, the ROHC header shall be located after the EHC header. Figure 5.12.7-1 shows the location of the ROHC header and the EHC header in a PDCP Data PDU.\nFigure 5.12.7-1 illustrates the placement of the ROHC (Reno Coding Hunt and Capture) header and the EHC (Error-Correcting Header Compression) header within a PDCP (Packet Data Convergence Protocol) Data PDU (Protocol Data Unit). The ROHC header is positioned before the EHC header, which is then followed by the payload data. This arrangement is crucial for efficient error detection and correction in the communication process. The ROHC header aids in detecting and correcting errors during the transmission of data, while the EHC header compresses the header data to reduce overhead and improve overall data throughput. The figure provides a clear visual representation of the data flow and the role of these headers in maintaining the integrity of the communication.\nFigure 5.12.7-1: Location of ROHC header and EHC header in a PDCP Data PDU\nIf a PDCP SDU including non-IP Ethernet packet is received from upper layers, the EHC compressor shall bypass the ROHC compressor and submit the EHC compressed non-IP Ethernet packet to lower layers according to clause 5.2.1.\nIf a PDCP Data PDU including non-IP Ethernet packet is received from lower layers, the EHC decompressor shall bypass the ROHC decompressor and deliver the EHC decompressed non-IP Ethernet packet to upper layers according to clause 5.2.2.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.13\tUplink data switching",
                    "description": "",
                    "summary": "",
                    "text_content": "For DAPS bearers, when upper layers request uplink data switching, the transmitting PDCP entity shall:\n-\tfor AM DRBs, from the first PDCP SDU for which the successful delivery of the corresponding PDCP Data PDU has not been confirmed by the RLC entity associated with the source cell, perform retransmission or transmission of all the PDCP SDUs already associated with PDCP SNs in ascending order of the COUNT values associated to the PDCP SDU prior to uplink data switching to the RLC entity associated with the target cell as specified below:\n-\tperform header compression of the PDCP SDU using ROHC as specified in the clause 5.7.4;\n-\tperform integrity protection and ciphering of the PDCP SDU using the COUNT value associated with this PDCP SDU as specified in the clause 5.9 and 5.8, respectively;\n-\tsubmit the resulting PDCP Data PDU to lower layer, as specified in clause 5.2.1.\n-\tfor UM DRBs, for all PDCP SDUs which have been processed by PDCP but which have not yet been submitted to lower layers, perform transmission of the PDCP SDUs in ascending order of the COUNT values to the RLC entity associated with the target cell as specified below:\n-\tperform header compression of the PDCP SDU using ROHC as specified in the clause 5.7.4;\n-\tperform integrity protection and ciphering of the PDCP SDU using the COUNT value associated with this PDCP SDU as specified in the clause 5.9 and 5.8, respectively;\n-\tsubmit the resulting PDCP Data PDU to lower layer, as specified in clause 5.2.1.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.14\tUplink Data compression and decompression",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.14.1\tUDC protocol",
                            "text_content": "The UDC protocol is based on IETF RFC 1951 (DEFLATE Compressed Data Format Specification) [19].\nStatic Huffman coding tree defined in [19] is used as the DEFLATE compression strategy.\nUDC Data Block should be byte-alignment. Z_SYNC_FLUSH is used as the DEFLATE byte-alignment with corresponding reference [21], wherein the fixed last four bytes, 0x00 0x00 0xFF 0xFF, are removed before transmission.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.14.2\tConfiguration of UDC",
                            "text_content": "The PDCP entities associated with DRBs can be configured by upper layers, see TS 38.331 [3], to use UDC. If UDC is configured, the UE shall apply UDC compression function (details see Annex B) to process the received PDCP SDU from upper layers corresponding to the configured DRB. The size of compression buffer is configured by upper layers via bufferSize. If pre-defined dictionary is configured by upper layers, the UE shall first set the compression buffer to all zeros and then prefill the configured pre-defined dictionary in the compression buffer upon configuration of UDC. If pre-defined dictionary is not configured by upper layers, UE shall set the compression buffer to all zeros.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.14.3\tUDC header",
                            "text_content": "UDC header (1 byte) is added in UDC compression function followed by UDC data block. The UDC header contains the information about whether the current PDCP SDU is compressed by UDC protocol or not. Only the compressed packets are stored in the buffer. The UDC header also contains a reset bit to inform the decompressor that the compression buffer has been reset. The validation bits (checksum) of the compression buffer are also contained in UDC header. Checksum mechanism could be used to resolve miss-match (if any) between the compression and de-compression buffers. If both SDAP and UDC are configured for a DRB, the UDC header shall be located after the SDAP header. Figure 5.14.3-1 shows the location of the UDC header in a PDCP data PDU.\nFigure 5.14.3-1 illustrates the location of the User Data Channel (UDC) header within a Packet Data Convergence Protocol (PDCP) Data PDU. The figure depicts the PDCP Data PDU, which is responsible for the physical and MAC layer data transfer, as well as the UDC header, which carries user data. The UDC header is positioned at the beginning of the PDCP Data PDU, allowing for efficient data transfer and error detection. The figure also shows the relationship between the UDC header and the rest of the PDCP Data PDU, highlighting its crucial role in the overall data transfer process.\nFigure 5.14.3-1: Location of UDC header in a PDCP Data PDU\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.14.4\tUplink data compression",
                            "text_content": "The UDC protocol generates UDC packets, each associated with one PDCP SDU.\nA UDC packet is associated with the same PDCP SN and COUNT values as the related PDCP SDU. The uplink data compression is not applicable to the SDAP header and the SDAP Control PDU if included in the PDCP Data PDU.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.14.5\tPDCP Control PDU for UDC feedback",
                            "text_content": "At reception of a PDCP Control PDU for UDC feedback from lower layers, the receiving PDCP entity shall:\n-\tdeliver the corresponding UDC feedback to the UDC protocol without performing deciphering/integrity verification.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.14.6\tPre-defined dictionary",
                            "text_content": "One standard dictionary for SIP and SDP and one operator defined dictionary can be used as pre-defined dictionaries in UDC. The standard dictionary for SIP and SDP consists of the first 3468 bytes of the dictionary for SigComp defined in RFC 3485 [20]. When UDC is configured, at most one dictionary, configured by upper layers, is put into the tail of the compression buffer. Also, the compression buffer acts as a FIFO and hence the content of the dictionary is to be totally pushed out of the compression buffer after the size of transmitted uncompressed packets compressed by UDC exceeds the compression buffer size. If the size of dictionary is larger than the compression buffer size, only the tail of the dictionary is inserted in the compression buffer.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.14.7\tUDC buffer reset procedure",
                            "text_content": "UDC works on the condition that compression buffer and de-compression buffer are synchronized. UDC buffer reset mechanism is to resynchronize buffer when error is detected. For resynchronization, UE shall reset the compression buffer to all zeros.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.14.8\tUDC checksum error handling",
                            "text_content": "UDC checksum error notification PDCP control PDU indicates the compression buffer and de-compression buffer are out of synchronization. When receiving the notification, the UE shall trigger UDC buffer reset procedure to resynchonize the compression buffer.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.15\tData volume calculation for delay status reporting",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purpose of MAC delay status reporting, the transmitting PDCP entity shall consider the following as delay-critical PDCP data volume:\n-\tthe delay-critical PDCP SDUs for which no PDCP Data PDUs have been constructed;\n-\tthe PDCP Data PDUs that contain the delay-critical PDCP SDUs and have not been submitted to lower layers;\n-\tthe PDCP Control PDUs;\n-\tfor AM DRBs, the PDCP SDUs to be retransmitted according to clause 5.1.2 and clause 5.13;\n-\tfor AM DRBs, the PDCP Data PDUs to be retransmitted according to clause 5.5.\nIf a PDCP SDU becomes a delay-critical PDCP SDU, and if the corresponding PDCP Data PDU has already been submitted to lower layers, the delay-critical indication for the PDCP Data PDU is provided to lower layers.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "6\tProtocol data units, formats, and parameters",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.1\tProtocol data units",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.1.1\tData PDU",
                            "text_content": "The PDCP Data PDU is used to convey one or more of followings in addition to the PDU header:\n-\tuser plane data;\n-\tcontrol plane data;\n-\ta MAC-I.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.2\tControl PDU",
                            "text_content": "The PDCP Control PDU is used to convey one of followings in addition to the PDU header:\n-\ta PDCP status report;\n-\tan interspersed ROHC feedback;\n-\tan EHC feedback;\n-\ta UDC feedback.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.2\tFormats",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.2.1\tGeneral",
                            "text_content": "A PDCP PDU is a bit string that is byte aligned (i.e. multiple of 8 bits) in length. In the figures in clause 6.2, bit strings are represented by tables in which the most significant bit is the leftmost bit of the first line of the table, the least significant bit is the rightmost bit on the last line of the table, and more generally the bit string is to be read from left to right and then in the reading order of the lines. The bit order of each parameter field within a PDCP PDU is represented with the first and most significant bit in the leftmost bit and the last and least significant bit in the rightmost bit.\nPDCP SDUs are bit strings that are byte aligned (i.e. multiple of 8 bits) in length. A compressed or uncompressed SDU is included into a PDCP Data PDU from the first bit onward.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.2\tData PDU",
                            "text_content": "Figure 6.2.2.1-1 shows the format of the PDCP Data PDU with 12 bits PDCP SN. This format is applicable for SRBs.\nFigure 6.2.2.1-1 illustrates the PDCP Data PDU format for SRBs, showcasing the packet structure for Session Initiation Protocol (SIP) signaling and media data. The figure displays the various components, including the PDP Context Identifier (PCID), PDP Context Identifier (PCID), and the Media Independent Codec (MIC) header. The layout emphasizes the organization and layout of the packets, highlighting the importance of efficient data transfer in the context of Session Roaming Bearers (SRBs).\nFigure 6.2.2.1-1: PDCP Data PDU format for SRBs\nFigure 6.2.2.2-1 shows the format of the PDCP Data PDU with 12 bits PDCP SN. This format is applicable for UM DRBs, AM DRBs, UM MRBs and AM MRBs.\nFigure 6.2.2.2-1 illustrates the PDCP Data PDU format with 12 bits PDCP SN, showcasing the binary representation of the P-signal and P-frame synchronization numbers. The figure displays the P-signal as a 4-bit field, with the first two bits representing the P-signal level and the last two bits representing the P-signal offset. The P-frame synchronization numbers are represented by a 4-bit field, with the first two bits indicating the P-frame type and the last two bits indicating the P-frame offset. The figure also shows the relationship between the P-signal and P-frame synchronization numbers and the PDCP SN, which is used to identify the P-frame in the P-signal. The figure is a valuable resource for understanding the PDCP Data PDU format and its role in the PDCP protocol.\nFigure 6.2.2.2-1: PDCP Data PDU format with 12 bits PDCP SN\nFigure 6.2.2.3-1 shows the format of the PDCP Data PDU with 18 bits PDCP SN. This format is applicable for UM DRBs, AM DRBs, UM MRBs and AM MRBs.\nFigure 6.2.2.3-1 illustrates the PDCP Data PDU format for Downlink Control Messages (DCMs) and Downlink Bearers (DRBs) with 18 bits of PDCP Sequence Number (SN). The figure showcases the structure of the PDU, which is crucial for efficient data transmission in a 3GPP Long Term Evolution (LTE) network. The PDU comprises various fields, including the 18-bit SN, which is used to identify and order the received DCMs and DRBs. This format ensures accurate delivery and processing of control messages, contributing to the overall performance and reliability of the network.\nFigure 6.2.2.3-1: PDCP Data PDU format for DRBs with 18 bits PDCP SN\nFigure 6.2.2.4-1 shows the format of the PDCP Data PDU with 12 bits PDCP SN. This format is applicable for sidelink DRBs for groupcast and broadcast, for the sidelink SRB0 and for the sidelink SRB4.\nFigure 6.2.2.4 illustrates the PDCP Data PDU format for sidelink DRBs, which are used for groupcast and broadcast, sidelink SRB0, and sidelink SRB4. The figure showcases the various components involved in the sidelink protocol, including the PDCP (Packet Data Unit Capturer), PDSCH (Physical Downlink Shared Channel), and PUCCH (Physical Uplink Control Channel). The diagram highlights the importance of efficient data formatting and channel management in ensuring seamless communication between devices in a sidelink network.\nFigure 6.2.2.4-1: PDCP Data PDU format for sidelink DRBs for groupcast and broadcast, for the sidelink SRB0‎ and for the sidelink SRB4\nNOTE:\tThere is no control PDU for SLRBs for groupcast and broadcast. Thus, there is no D/C field in the PDCP Data PDU format for SLRBs for groupcast and broadcast. SDU type is only applicable for sidelink DRB.\nFigure 6.2.2.5-1 shows the format of the PDCP Data PDU with 12 bits PDCP SN. This format is applicable for sidelink SRB1, SRB2 and SRB3 for unicast.\nFigure 6.2.2.5 illustrates the PDCP Data PDU format for sidelink SRB 1, SRB2, and SRB3 for unicast, showcasing the detailed structure of the PDU payload. The figure highlights the various fields, including the PDU type, control information, and data payload, which are essential for efficient data transmission in sidelink communication. The layout emphasizes the importance of accurate data packaging and delivery in 5G networks, ensuring seamless connectivity and minimal latency for users.\nFigure 6.2.2.5-1: PDCP Data PDU format for sidelink SRB1, SRB2 and SRB3 for unicast\nFigure 6.2.2.6-1 shows the format of the PDCP Data PDU with 12 bits PDCP SN. This format is applicable for sidelink DRBs for unicast.\nFigure 6.2.2.6-1 illustrates the PDCP Data PDU format for sidelink DRBs for unicast with 12 bits PDCP SN. The figure depicts the format of the PDU, which is crucial for efficient data transmission in sidelink DRBs. The PDU consists of a 12-bit PDCP SN, which is used to identify the PDU and ensure proper delivery. The figure also shows the relationship between the PDU and the underlying data, highlighting the importance of this format in maintaining the integrity and reliability of sidelink communication.\nFigure 6.2.2.6-1: PDCP Data PDU format for sidelink DRBs for unicast with 12 bits PDCP SN\nFigure 6.2.2.7-1 shows the format of the PDCP Data PDU with 18 bits PDCP SN. This format is applicable for sidelink DRBs for unicast.\nFigure 6.2.2.7 illustrates the PDCP Data PDU format for sidelink DRBs for unicast with 18 bits PDCP SN. The figure depicts the structure of the PDU, which is essential for efficient data transmission in sidelink DRBs. The PDU consists of various fields, including the 18-bit PDCP SN, which is crucial for synchronization and timing management in the sidelink communication. The figure also shows the relationship between the PDU and the underlying network protocols, highlighting the importance of accurate data formatting for seamless communication between devices.\nFigure 6.2.2.7-1: PDCP Data PDU format for sidelink DRBs for unicast with 18 bits PDCP SN\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.3\tControl PDU",
                            "text_content": "Figure 6.2.3.1-1 shows the format of the PDCP Control PDU carrying one PDCP status report. This format is applicable for UM DRBs, AM DRBs (including sidelink DRBs for unicast) and AM MRBs.\nFigure 6.2.3.1-1 illustrates the PDCP Control PDU format for the PDCP status report, detailing the various fields involved in the protocol's communication. The figure showcases the structure of the PDCP Control PDU, which is essential for managing the radio link control (RLC) and physical layer control (PHY) layers. The format includes a sequence number, a control field, and a status field, among others. This information is crucial for understanding the inner workings of the PDCP protocol and its role in maintaining the quality of the communication link in a telecommunication system.\nFigure 6.2.3.1-1: PDCP Control PDU format for PDCP status report\nFigure 6.2.3.2-1 shows the format of the PDCP Control PDU carrying one interspersed ROHC feedback. This format is applicable for UM DRBs, AM DRBs (including sidelink DRBs for unicast), UM MRBs and AM MRBs.\nFigure 6.2.3.2-1 illustrates the PDCP Control PDU format for interspersed ROHC feedback, showcasing the protocol's structure and communication flow. The figure depicts the various components involved, including the PDCP PDU, ROHC feedback, and the underlying network infrastructure. The layout emphasizes the efficient handling of feedback within the PDCP protocol, ensuring reliable communication and error correction in mobile communication systems.\nFigure 6.2.3.2-1: PDCP Control PDU format for interspersed ROHC feedback\nFigure 6.2.3.3-1 shows the format of the PDCP Control PDU carrying one EHC feedback. This format is applicable for UM DRBs, AM DRBs, UM MRBs and AM MRBs.\nFigure 6.2.3.3-1 illustrates the PDCP Control PDU format for EHC feedback, showcasing the detailed structure of the protocol data unit used in the physical layer control protocol. The figure displays the various fields within the PDU, including the control information, synchronization, and timing information, as well as the payload data. This information is crucial for understanding the communication between the physical layer and the higher layers in a wireless network, particularly in the context of error control and synchronization.\nFigure 6.2.3.3-1: PDCP Control PDU format for EHC feedback\nFigure 6.2.3.4-1 shows the format of the PDCP Control PDU carrying one UDC feedback. This format is applicable for AM DRBs.\nFigure 6.2.3.4 illustrates the PDCP Control PDU format for UDC feedback, showcasing the detailed structure of the protocol. The figure displays the various fields and their respective sizes, providing a comprehensive overview of the data format used for control channel feedback in the presence of a UDC. Key components include the control channel ID, control channel type, and the actual feedback data. The figure emphasizes the importance of accurate and efficient data transmission in maintaining the quality of service in telecommunication systems.\nFigure 6.2.3.4-1: PDCP Control PDU format for UDC feedback\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.3\tParameters",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.3.1\tGeneral",
                            "text_content": "If not otherwise mentioned in the definition of each field then the bits in the parameters shall be interpreted as follows: the left most bit string is the first and most significant and the right most bit is the last and least significant bit.\nUnless otherwise mentioned, integers are encoded in standard binary encoding for unsigned integers. In all cases the bits appear ordered from MSB to LSB when read in the PDU.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.2\tPDCP SN",
                            "text_content": "Length: 12 or 18 bits as indicated in table 6.3.2-1. The length of the PDCP SN is configured by upper layers (pdcp-SN-SizeUL, pdcp-SN-SizeDL, or sl-PDCP-SN-Size in TS 38.331 [3]).\nTable 6.3.2-1: PDCP SN length\n\nNOTE:\tFor NR sidelink communication for groupcast and broadcast, only 12 bits PDCP SN length is used for the sidelink DRBs.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.3.2-1: PDCP SN length",
                                    "table number": 2,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.3.3\tData",
                            "text_content": "Length: Variable\nThis field includes one of the followings:\n-\tUncompressed PDCP SDU (user plane data, or control plane data);\n-\tCompressed PDCP SDU (user plane data only).\nNOTE:\tAll fields other than PDCP PDU header and MAC-I belong to Data field.‎\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.4\tMAC-I",
                            "text_content": "Length: 32 bits\nThis field carries a message authentication code calculated as specified in clause 5.9.\nFor SRBs for Uu interface, the MAC-I field is always present. If integrity protection is not configured, the MAC-I field is still present but should be padded with padding bits set to 0.\nFor sidelink SRB1, SRB2 and SRB3, the MAC-I field is present only when the sidelink SRB1, SRB2 and SRB3 are configured with integrity ‎protection‎.‎\nFor DRBs (including sidelink DRBs for unicast), the MAC-I field is present only when the DRB is configured with integrity protection.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.5\tCOUNT",
                            "text_content": "Length: 32 bits\nThe COUNT value is composed of a HFN and the PDCP SN. The size of the HFN part in bits is equal to 32 minus the length of the PDCP SN.\nFigure 6.3.5-1 illustrates the format of the COUNT statement in SQL, which is used to count the number of rows in a specified table or view. The figure shows the syntax and structure of the COUNT statement, including the keyword COUNT, the table or view name, and the keyword AS, which is used to rename the output column. The figure also includes examples of using the COUNT statement with different table structures, such as a table with multiple columns and a table with a primary key. Overall, the figure provides a clear and concise overview of the COUNT statement and its usage in SQL.\nFigure 6.3.5-1: Format of COUNT\nNOTE:\tCOUNT does not wrap around.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.6\tR",
                            "text_content": "Length: 1 bit\nReserved. In this version of the specification reserved bits shall be set to 0. Reserved bits shall be ignored by the receiver.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.7\tD/C",
                            "text_content": "Length: 1 bit\nThis field indicates whether the corresponding PDCP PDU is a PDCP Data PDU or a PDCP Control PDU.\nTable 6.3.7-1: D/C field\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.3.7-1: D/C field",
                                    "table number": 3,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.3.8\tPDU type",
                            "text_content": "Length: 3 bits\nThis field indicates the type of control information included in the corresponding PDCP Control PDU.\nTable 6.3.8-1: PDU type\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.3.8-1: PDU type",
                                    "table number": 4,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.3.9\tFMC",
                            "text_content": "Length: 32 bits\nFirst Missing COUNT. This field indicates the COUNT value of the first missing PDCP SDU within the reordering window, i.e. RX_DELIV.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.10\tBitmap",
                            "text_content": "Length: Variable. The length of the bitmap field can be 0.\nThis field indicates which SDUs are missing and which SDUs are correctly received in the receiving PDCP entity. The bit position of Nth bit in the Bitmap is N, i.e., the bit position of the first bit in the Bitmap is 1.\nTable 6.3.10-1 Bitmap\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.3.10-1 Bitmap",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.3.11\tInterspersed ROHC feedback",
                            "text_content": "Length: Variable\nThis field contains one ROHC packet with only feedback, i.e. a ROHC packet that is not associated with a PDCP SDU as defined in clause 5.7.4.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.12\tSDU Type",
                            "text_content": "Length: 3 bits\nPDCP SDU type, i.e. Layer-3 Protocol Data Unit type as specified in [13] and [18]. PDCP entity may handle the SDU differently per SDU Type, e.g. ROHC is applicable to IP SDU but not Non-IP SDU, Ethernet SDU, Unstructured SDU and ARP SDU.\nTable 6.3.12-1: SDU Type\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.3.12-1: SDU Type",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.3.13\tKNRP-sess ID",
                            "text_content": "Length: 16 bits\nKNRP-sess Identity as specified in TS 33.536 [14].\nFor the SLRB that does not need integrity and ciphering protection, the UE shall set KNRP-sess ID to \"0\" in the PDCP PDU header.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.14\tFE",
                            "text_content": "Length: 1 bit\nIndication of whether checksum error is detected or not. Value '1' means checksum error is detected and the UE shall reset the compression buffer.\nTable 6.3.14-1: FE field\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.3.14-1: FE field",
                                    "table number": 7,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "title": "7\tState variables, constants, and timers",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "7.1\tState variables",
                    "description": "",
                    "summary": "",
                    "text_content": "This clause describes the state variables used in PDCP entities in order to specify the PDCP protocol. The state variables defined in this clause are normative.\nAll state variables are non-negative integers, and take values from 0 to [232 – 1].\nPDCP Data PDUs are numbered integer sequence numbers (SN) cycling through the field: 0 to [2[pdcp-SN-SizeUL] – 1] or 0 to [2[pdcp-SN-SizeDL] – 1] or 0 to [2[sl-PDCP-SN-Size] – 1].\nThe transmitting PDCP entity shall maintain the following state variables:\na)\tTX_NEXT\nThis state variable indicates the COUNT value of the next PDCP SDU to be transmitted. The initial value is 0, except for SRBs configured with state variables continuation. For target SRB configured with state variables continuation, the initial value is the value stored in PDCP entity for the corresponding source SRB. For source SRB configured with state variables continuation, the initial value is the value stored in PDCP entity for the corresponding target SRB.\nThe receiving PDCP entity shall maintain the following state variables:\na)\tRX_NEXT\nThis state variable indicates the COUNT value of the next PDCP SDU expected to be received. The initial value is 0, except for sidelink broadcast and groupcast, for SRBs configured with state variables continuation, for multicast MRBs whose PDCP COUNT is not synchronized as indicated by upper layer, and for broadcast MRBs. For NR sidelink communication for broadcast and groupcast or sidelink SRB4 for NR sidelink discovery, the initial value of the SN part of RX_NEXT is (x +1) modulo (2[sl-PDCP-SN-Size]), where x is the SN of the first received PDCP Data PDU. For multicast MRBs whose PDCP COUNT is not synchronized as indicated by upper layer, and for broadcast MRBs, the initial value of the SN part of RX_NEXT is (x +1) modulo (2[PDCP-SN-SizeDL]), where x is the SN of the first received PDCP Data PDU. For target SRB configured with state variables continuation, the initial value is the value stored in PDCP entity for the corresponding source SRB. For source SRB configured with state variables continuation, the initial value is the value stored in PDCP entity for the corresponding target SRB.\nNOTE 1:\tFor NR sidelink communication for broadcast and groupcast or sidelink SRB4 for NR sidelink discovery, it is up to UE implementation to select the HFN part for RX_NEXT such that initial value of RX_DELIV should be a positive value.\nNOTE 2:\tFor multicast MRBs whose PDCP COUNT is not synchronized as indicated by upper layer, and for broadcast MRBs, the initial value of the HFN part of RX_NEXT is set by UE implementation.\nb)\tRX_DELIV\nThis state variable indicates the COUNT value of the first PDCP SDU not delivered to the upper layers, but still waited for. The initial value is 0, except for sidelink broadcast and groupcast, for SRBs configured with state variables continuation, and for MRBs. For NR sidelink communication for broadcast and groupcast or sidelink SRB4 for NR sidelink discovery, the initial value of the SN part of RX_DELIV is (x – 0.5 × 2[sl-PDCP-SN-Size–1]) modulo (2[sl-PDCP-SN-Size]), where x is the SN of the first received PDCP Data PDU. For multicast MRBs whose PDCP COUNT is not synchronized as indicated by upper layer, and for broadcast MRBs, the initial value of the SN part of RX_DELIV is set to (x – 0.5 × 2[PDCP-SN-SizeDL–1]) modulo (2[PDCP-SN-SizeDL]), where x is the SN of the first received PDCP Data PDU. For multicast MRBs, the initial value of RX_DELIV is set, if provided, by initialRX-DELIV in TS 38.331 [3]. For target SRB configured with state variables continuation, the initial value is the value stored in PDCP entity for the corresponding source SRB. For source SRB configured with state variables continuation, the initial value is the value stored in PDCP entity for the corresponding target SRB.\nNOTE 3:\tFor multicast MRBs whose PDCP COUNT is not synchronized as indicated by upper layer, and for broadcast MRBs, the initial value of the HFN part of RX_DELIV is set by UE implementation.\nc)\tRX_REORD\nThis state variable indicates the COUNT value following the COUNT value associated with the PDCP Data PDU which triggered t-Reordering. For target SRB configured with state variables continuation, the initial value is the value stored in PDCP entity for the corresponding source SRB. For source SRB configured with state variables continuation, the initial value is the value stored in PDCP entity for the corresponding target SRB.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.2\tConstants",
                    "description": "",
                    "summary": "",
                    "text_content": "a) Window_Size\nThis constant indicates the size of the reordering window. The value equals to 2[pdcp-SN-SizeDL] – 1 for SRB/DRB/MRB and 2[sl-PDCP-SN-Size] – 1 for SLRB.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.3\tTimers",
                    "description": "",
                    "summary": "",
                    "text_content": "The transmitting PDCP entity shall maintain the following timers:\na) discardTimer\nThis timer is configured only for DRBs. The duration of the timer is configured by upper layers TS 38.331 [3]. In the transmitter, a new timer is started upon reception of an SDU from upper layer as specified in clause 5.2.1.\nb) discardTimerForLowImportance\nThis timer is configured only for DRBs. The duration of the timer is configured by upper layers TS 38.331 [3]. In the transmitter, a new timer is started upon reception of an SDU belonging to a low importance PDU Set from upper layer as specified in clause 5.2.1.\nThe receiving PDCP entity shall maintain the following timers:\nc) t-Reordering\nThe duration of the timer is configured by upper layers TS 38.331 [3], except for the case of NR sidelink communication or sidelink SRB4. For NR sidelink communication or sidelink SRB4, the t-Reordering timer is determined by the UE implementation. This timer is used to detect loss of PDCP Data PDUs as specified in clause 5.2.2. If t-Reordering is running, t-Reordering shall not be started additionally, i.e. only one t-Reordering per receiving PDCP entity is running at a given time.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "A.1\tEHC principle",
            "description": "The Ethernet header compression (EHC) protocol compresses Ethernet header as shown in Figure A.1-1 [15]. The fields that are compressed (i.e. removed from the Ethernet header) by the EHC protocol are: DESTINATION ADDRESS, SOURCE ADDRESS, 802.1Q TAG, and LENGTH/TYPE. The fields PREAMBLE, SFD, and FCS are not transmitted in 3GPP system, and thus not considered in EHC protocol. There may be more than one 802.1Q TAG fields in the Ethernet header, and all are compressed by the EHC protocol. The padding (PAD) is not compressed by the EHC protocol.\nFigure A.1-1 illustrates the Ethernet packet format, showcasing the various components such as the Ethernet header, preamble, and FCS. The figure highlights the importance of these elements in ensuring data integrity and efficient transmission over Ethernet networks.\nFigure A.1-1: Ethernet packet format [15]\nThe EHC compressor and the EHC decompressor store original header field information as a \"EHC context\". Each EHC context is identified by a unique identifier, called Context ID (CID). The EHC context must be synchronized between the EHC compressor and the EHC decompressor; otherwise, the EHC decompressor erroneously decompresses the \"Compressed Header (CH)\" packets.\nFor an Ethernet packet stream, the EHC compressor establishes the EHC context and associates it with the CID. Then, the EHC compressor transmits the \"Full Header (FH)\" packet to the EHC decompressor including the associated CID. The EHC compressor keeps transmitting the FH packets until the EHC feedback is received from the EHC decompressor.\nNOTE:\tIf the maximum number of EHC contexts are already established for the compressed flows and a new Ethernet flow does not match any established EHC context, the compressor should associate the new Ethernet flow with one of the EHC CIDs allocated for the existing compressed flows or send PDCP SDUs belonging to the Ethernet flow as uncompressed packet.\nWhen the EHC decompressor receives the FH packet, the EHC decompressor establishes the EHC context identified by the CID, and transmits the EHC feedback to the EHC compressor to indicate that the EHC context associated with the CID is successfully established in the EHC decompressor.\nAfter receiving the EHC feedback, the EHC compressor starts to transmit the CH packets to the EHC decompressor including the associated CID. The CH packet includes only the header fields not stored in the EHC context.\nWhen the EHC decompressor receives the CH packet, the EHC decompressor restores original header fields based on the stored EHC context identified by the associated CID.\nFigure A.1-2 represents a conceptual view of EHC operation.\nFigure A.1-2 illustrates the operation of an Ethernet Hub and Collider (EHC), which is a network device that combines multiple Ethernet cables into a single cable, allowing multiple devices to connect to a network. The figure shows the EHC receiving data from multiple sources, passing it through a collision domain, and then forwarding the data to the appropriate destination. The figure also shows the use of a collision domain, which is a group of devices that can transmit data at the same time, and the use of a collision domain identifier, which is a unique identifier for each collision domain. The figure also shows the use of a collision domain identifier, which is a unique identifier for each collision domain.\nFigure A.1-2: EHC operation\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.2\tEHC packet format and parameters",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "A.2.1\tEHC packet format",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "A.2.1.1\tEHC Full Header packet and EHC Compressed Header packet",
                            "text_content": "Figure A.2.1.1-1 and Figure A.2.1.1-2 show the formats of EHC FH packet and EHC CH packet, respectively.\nFigure A.2.1.1-1 illustrates the full packet format of an Ethernet Header Compression (EHC) packet, showcasing the various fields and their respective sizes. The figure displays the 802.1Q header, followed by the 48-bit MAC address, and then the 12-byte EHC header. The payload size is indicated in the next field, with the remaining space for data. The figure emphasizes the efficient compression of Ethernet frames, enabling faster transmission and improved network performance.\nFigure A.2.1.1-1: EHC Full Header packet format\nFigure A.2.1.1-2 illustrates the packet format of the Ethernet Header Compression (EHC) protocol, which is used to reduce the overhead in data transmission. The figure shows the compressed format of an Ethernet frame, with the source and destination MAC addresses, type of service, and payload all compressed into a single 12-byte field. This allows for more efficient transmission over high-speed networks, reducing latency and improving overall network performance.\nFigure A.2.1.1-2: EHC Compressed Header packet format\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "A.2.1.2\tEHC feedback packet",
                            "text_content": "Figure A.2.1.2-1 shows the format of the EHC feedback packet.\nFigure A.2.1.2-1 illustrates the feedback packet format for the Ethernet Home Agent (EHA) in a network. The figure shows the structure of the feedback packet, which includes various fields such as the packet type, sequence number, and acknowledgment number. The packet is sent from the EHA to the Ethernet Control Protocol (ECP) and back, ensuring proper communication and coordination between the EHA and the network. The feedback mechanism is crucial for maintaining the stability and reliability of the network, as it allows the EHA to monitor and adjust its operations based on the received feedback.\nFigure A.2.1.2-1: EHC feedback packet format\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "A.2.2\tParameters",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "A.2.2.1\tF/C",
                            "text_content": "Length: 1 bit\nThis field indicates whether the corresponding EHC packet is a FH packet or a CH packet.\nTable A.2.2.1-1: F/C field\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table A.2.2.1-1: F/C field",
                                    "table number": 8,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "A.2.2.2\tCID",
                            "text_content": "Length: 7, or 15 bits. The length of the CID is configured by upper layers (ehc-CID-Length in TS 38.331 [3]).\nThe CID = \"all zeros\" indicates that the corresponding Ethernet header is \"uncompressed\". The EHC decompressor does not establish the EHC context identified by the CID = \"all zeros\".\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "B.1\tUDC general description",
            "description": "A UDC packet consists of a UDC header and a UDC data block. A UDC data block contains either DEFLATE compressed blocks generated by UDC protocol or original PDCP SDU for SDU not compressed by UDC protocol; the type is specified in FU field (details see Annex B.2.2.1) in UDC header. The FR field (details see Annex B.2.2.2) and the Checksum field (details see Annex B.2.2.3) in UDC header are used only if FU field is set to 1.\nIf reset procedure is triggered, after performing the reset, the FR field in UDC header of the first compressed PDU shall be set to 1.\nNOTE:\tUE is allowed not to compress the PDCP SDUs if the UL data rate before compression is higher than what the UE is capable of.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "B.2\tUDC packet format and parameters",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "B.2.1\tUDC Header and UDC Data Block format",
                    "description": "",
                    "summary": "",
                    "text_content": "Figure B.2.1-1 shows the format of UDC Header and UDC Data Block.\nFigure B.2.1-1 illustrates the format of the User Datagram Control (UDC) header and data block in a telecommunication system. The figure shows the layout of the UDC header, which includes fields for the source and destination addresses, a sequence number, and a control field. The UDC data block follows the header and is organized into a series of octets, each representing a different data field. The figure emphasizes the importance of the UDC header in managing the flow of data packets within the network, ensuring efficient and reliable communication.\nFigure B.2.1-1: UDC header and UDC data block format\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "B.2.2\tUDC parameters",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "B.2.2.1\tFU",
                            "text_content": "Length: 1 bit\nIndication of whether this packet is compressed by UDC protocol or not. Value '1' means the packet is compressed by UDC protocol.\nTable B.2.2.1-1: FU field\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table B.2.2.1-1: FU field",
                                    "table number": 9,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "B.2.2.2\tFR",
                            "text_content": "Length: 1 bit\nIndication of whether UDC compression buffer is reset or not. Value '1' means this is the first compressed packet after UDC buffer reset.\nTable B.2.2.2-1: FR field\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table B.2.2.2-1: FR field",
                                    "table number": 10,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "B.2.2.3\tChecksum",
                            "text_content": "Length: 4 bits\nThis field contains the validation bits for the compression buffer content: The checksum is calculated by the content of current compression buffer before the current packet is put into buffer.\nThe checksum is derived from the values of the first 4 bytes and the last 4 bytes in the whole compression buffer. The calculation is described as follows:\n-\tEach byte is divided into two 4-bit numbers.\n-\tThe 16 4-bit numbers are added together to obtain a sum;\n-\tThe checksum is one's complement of the right-most 4 bits (i.e. 4 LSB) of the sum.\nAn example of checksum calculation is shown in Annex B.2.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "B.2.3\tAn example of UDC Checksum calculation",
                    "description": "",
                    "summary": "",
                    "text_content": "The current UDC compression/decompression buffer has the following binary values for example:\nHeader <1,1,0,0,0,1,0,1,0,0,1,1,1,1,1,1,0,0,0,1,1,0,0,1,0,1,0,1,0,0,0,1, ……, 0,1,1,1,1,1,0,1,1,0,0,0,1,0,1,0,1,0,0,1,1,1,1,1,1,0,0,1,1,1,0,0> Tail\nThe sum of the first 4 bytes and the last 4 bytes can be calculated:\n1100+0101+0011+1111+0001+1001+0101+0001+0111+1101+1000+1010+1001+1111+1001+1100 = 10000110;\nAnd checksum value will be one's complement of the right-most 4 bits (i.e. 4 LSB) of the above sum. Hence checksum is 1001.\n\n",
                    "tables": [
                        {
                            "description": "",
                            "table number": 11,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        }
    ]
}