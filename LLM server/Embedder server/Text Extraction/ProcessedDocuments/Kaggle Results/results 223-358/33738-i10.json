{
    "document_name": "33738-i10.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Report has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\nIn the present document, modal verbs have the following meanings:\nshall\t\tindicates a mandatory requirement to do something\nshall not\tindicates an interdiction (prohibition) to do something\nThe constructions \"shall\" and \"shall not\" are confined to the context of normative provisions, and do not appear in Technical Reports.\nThe constructions \"must\" and \"must not\" are not used as substitutes for \"shall\" and \"shall not\". Their use is avoided insofar as possible, and they are not used in a normative context except in a direct citation from an external, referenced, non-3GPP document, or so as to maintain continuity of style when extending or modifying the provisions of such a referenced document.\nshould\t\tindicates a recommendation to do something\nshould not\tindicates a recommendation not to do something\nmay\t\tindicates permission to do something\nneed not\tindicates permission not to do something\nThe construction \"may not\" is ambiguous and is not used in normative elements. The unambiguous constructions \"might not\" or \"shall not\" are used instead, depending upon the meaning intended.\ncan\t\tindicates that something is possible\ncannot\t\tindicates that something is impossible\nThe constructions \"can\" and \"cannot\" are not substitutes for \"may\" and \"need not\".\nwill\t\tindicates that something is certain or expected to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nwill not\t\tindicates that something is certain or expected not to happen as a result of action taken by an agency the behaviour of which is outside the scope of the present document\nmight\tindicates a likelihood that something will happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nmight not\tindicates a likelihood that something will not happen as a result of action taken by some agency the behaviour of which is outside the scope of the present document\nIn addition:\nis\t(or any other verb in the indicative mood) indicates a statement of fact\nis not\t(or any other negative verb in the indicative mood) indicates a statement of fact\nThe constructions \"is\" and \"is not\" do not indicate requirements.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "The present document studies the security aspects of enablers for network automation for the 5G system based on the outcome of TR 23.700-81 [6]. More specifically, the present document will identify security issues and requirements and provide corresponding security solutions related to the following scenarios:\n-\tSecurity aspects of potential architecture enhancement: roaming, supporting federated learning, interaction between NWDAF and MDAS/MDAF, etc.\n-\tHandling of sensitive information inherent to application detection, roaming and location information.\n-\tKIs from R17 which do not have enough time to proceed, e.g. NWDAF detection related issues.\n-\tAny further security enhancements which need to be studied based upon the ongoing SA2 eNA Phase 3 work\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 23.501: \"System Architecture for the 5G System; Stage 2\".\n[3]\t3GPP TS 23.502: \"Procedures for the 5G system, Stage 2\".\n[4]\t3GPP TS 23.503: \"Policy and Charging Control Framework for the 5G System\".\n[5]\t3GPP TS 23.288: \"Architecture enhancements for 5G System (5GS) to support network data analytics services\".\n[6]\t3GPP TR 23.700-81: \" Study of Enablers for Network Automation for 5G System (5GS); Phase 3\".\n[7]\t3GPP TS 33.501: \"Security architecture and procedures for 5G System\".\n[8]\t3GPP TS 29.510: \"Network function repository services; Stage 3\".\n[9]\t3GPP TS 28.552: \"5G performance measurements\".\n[10]\t3GPP TR 33.875: \"Study on enhanced security aspects of the 5G Service Based Architecture (SBA)\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions of terms, symbols and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tTerms",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms given in TR 21.905 [1] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in TR 21.905 [1].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tSymbols",
                    "description": "",
                    "summary": "",
                    "text_content": "Void.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.3\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in TR 21.905 [1].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tOverview",
            "description": "The architecture for the present study is be based on the existing NWDAF framework as specified in TS 23.288 [5], TS 23.501 [2], TS 23.502 [3] and TS 23.503 [4].\nSolutions comply with the 5G System architectural principles in TS 23.501 [2], and network data analytics principles in TS 23.288 [5].\nTR 23.700-81 [6] is an enhanced study on eNA Phase 3, for which any security impact will be documented in the present document.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "5\tKey issues",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tKey Issue #1: Protection of data and analytics exchange in roaming case",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.1.1\tKey issue details",
                            "text_content": "As per Key Issue #3 in TR 23.700-81 [6], the HPLMN/VPLMN may need to collect data or consume analytics from the VPLMN/HPLMN in roaming scenario. The data or analytics may relate to particular UEs or contain information about all UEs or groups of UEs. Both PLMNs (VPLMN, HPLMN) need the ability to control the amount of data exposed and to abstract or hide network-internal aspects based on operator policy, regulatory constraints and/or roaming agreements.\nIn the scenario where the NWDAF consumer collects data from multiple PLMNs, PLMNs need the ability to control the amount of data exposed and to abstract or hide network-internal aspects based on operator policy, regulatory constraints and/or roaming agreements. But if the data processed method used by different PLMNs is different, it is possible that the data converged in NWDAF consumer could not be effective used.\nAs there might be possible architecture enhancements to support this exchange in roaming scenarios and of any necessary enhancements to related NFs in HPLMN and VPLMN. This key issue studies the security aspects of data and analytics exchange in roaming case should be considered.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.2\tSecurity threats",
                            "text_content": "If the communication between PLMNs is not confidentiality protected, then sensitive information may be leaked to unauthorized entities.\nIf the integrity of the data exchanged between PLMNs is not protected, the data may be modified.\nIf the PLMNs do not have the ability to control the amount of data exposed and to abstract or hide network-internal aspects, the sensitive data may be leaked to other entities.\nIf exchanged data has not been adequately protected before it is shared between PLMNs, it may be subject to be leaked and abused.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.1.3\tPotential security requirements",
                            "text_content": "5GS shall support confidentiality, integrity, and replay protection for data and analytics exchange between PLMNs.\n5GS shall be able to control the amount of exposed data and to abstract or hide internal network aspects based on operator policy, regulatory constraints and/or roaming agreements.\nBased on the sensitivity of the data, 5GS shall provide confidentiality protection while at rest to certain data based on policies.\nNOTE: \tThe user consent for UE data collection is not addressed in the present document.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.2\tKey Issue #2: Authorization of selection of participant NWDAF instances in the Federated Learning group",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.2.1\tKey issue details",
                            "text_content": "3GPP SA2 studies the architecture enhancement to support Federated Learning which allows the cooperation of multiple NWDAFs containing MTLF to train an ML model in 3GPP network. As per KI#8 in TR 23.700-81[6], it will involve selection of participant NWDAF instances in the Federated Learning group.\nThis key issue studies the authorization aspect of including participant NWDAF instances in the Federated Learning group.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.2\tSecurity threats",
                            "text_content": "If a client NWDAF instance joins an unauthorized Federated Learning, it may lead to the following issues:\n- \tClient NWDAF(MTLF)'s resource may be used up by being included into many unauthorized Federated Learning groups.\n- \tSensitive data may be used to train unauthorized Federated Learning group's ML model.\n- \tUnauthorized Federated Learning group may utilize the local model received from the client NWDAF(MTLF) to infer sensitive training data details.\nIf a client NWDAF joins a Federated Learning group without being authorized by the server NWDAF, it may lead to the following issues:\n- \tThe unauthorized client NWDAF may affect the generation of Federated Learning group's ML model negatively.\n-\t Sensitive training data and the Federated Learning group's ML model may leak out to the unauthorized client NWDAF.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.2.3\tPotential security requirements",
                            "text_content": "Authorization of selection of participant NWDAF instances in the Federated Learning group shall be supported:\n- \tA server NWDAF shall be authorized to include a client NWDAF into a Federated Learning group.\n- \tA client NWDAF shall be authorized to join a Federated Learning group.\nNOTE: \tThe existing security mechanisms in SBA are reused as much as possible.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.3\tKey Issue #3: Security for AI/ML model storage and sharing",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.3.1\tIssue details",
                            "text_content": "AI/ML model is shared among NWDAFs and/or NFs (i.e., NWDAF to NWDAF, ADRF to NWDAF…). In different scenarios, the NF producer of AI/ML model can store that model in ADRF, NWDAF or other entity.\nADRF (Analytical Data Repository Function) is being enhanced to store AI/ML models to facilitate the distribution and sharing of those models amongst NFs. Since AI/ML models and their algorithms are generally proprietary (i.e., subject to intellectual property rights of the designer), it is imperative to ensure that only the NFs which have been indeed provided by the NF which generated the AI/ML model with access authorization to the AI/ML models can read and use those models. Moreover, the ADRF itself cannot be considered as a fully trusted entity storing the sensitive AI/ML data models. Those models are indeed exposed at rest in ADRF.\nThe current authorization scheme defined by 3GPP for SBA works only at service level or resource/operation-level scope. This authorization granularity may be not sufficient in the AI/ML model sharing scenario, since the ADRF (Analytical Data Repository Function) or NWDAF, or any other network function which may store the AI/ML model, cannot verify whether the NF consumer is authorized to retrieve the AI/ML model.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.3.2\tSecurity Threats",
                            "text_content": "An unauthorized NFc, in principle which is not eligible to retrieve a particular model stored by a NFp, could have access to the storage entity and retrieve the model.\nIf there is no protection against accessing and reading an AI/ML model from the ADRF stored by NFp, a compromised ADRF may expose algorithms and sensitive data to a non-authorized entity which can easily misuse it and/or distributed further to other entities, causing a bigger data security breach.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.3.3\tPotential security requirements",
                            "text_content": "AI/ML models shall be protected between the entity which produces the ML model or stores the ML model in ADRF (e.g., NWDAF containing MtLF, NFp) and the entity which consumes the model (NFc).\nADRF (Analytical Data Repository Function), or any other network function which may store the AI/ML model, shall be able to check that the NFc is authorized by the NFp (e.g., NWDAF containing MtLF) to retrieve that AI/ML model\nNF Service consumers shall be authorized by the NF which generated the AI/ML model to access to the AI/ML models in the ADRF (or any other NF which may store the ML model, for instance NWDAF MtLF).\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.4\tKey Issue #4: Anomalous NF behaviour detection by NWDAF",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.4.1\tIssue details",
                            "text_content": "The 5GC supports different NF deployments that could be in distributed or redundant fashion, so that the NFs provides the services from several locations and several execution instances. When these NFs are distributed across diverse cloud infrastructures, it is possible that the NFs may behave in an undefined manner. The undefined behaviour of the NF may be caused by internal errors such as configuration mistakes or internal data corruption. This misbehaviour may impact one or more UE services based on the type of the NF.\nIn those circumstances, it is imperative that an analytics function such as NWDAF supports the monitoring of the behaviour of all NFs and ensures that the NFs behave as defined/specified. If the NFs behave erroneously, it should be possible to detect the anomaly, so that appropriate steps can be taken, e.g., by an operator to control the potentially damaging behaviour.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.4.2\tSecurity Threats",
                            "text_content": "Different NFs may behave in an undefined manner. Anomalous NF behaviour could include among others, failed attempts to access NF/NF services which was not authorized to a NF as NF/NF service consumer, unusual high consumption of network or compute resources by a particular NF/NF service (consumer or producer), continuous sending of compromised messages to particular NF service producer (DoS), numerous attempts to exhaust connections of a HTTP server, etc.\nThe above examples of anomalous behaviour can occur due to internal data corruption, configuration errors, communication between NFs from different vendors (i.e., incompatibility issues), etc. Based on the NF type, such behaviour could cause damage to one or multiple UEs. For example, in the case of an AMF or SMF dedicated to a network slice, the service for all UEs within the whole network slice could be affected. Even the complete network slice could get out of service.\nAn erroneous NF may succeed in outaging the whole network by sending wrong messages to other NFs, causing those NFs to get out of service.\nThe NFs within the 5GC are already authenticated and allowed to communicate with each other based on successful authentication and authorization. If the NF is misconfigured or its internal data is corrupted or has other reason for anomalous behaviour, the assumption of trust on that NF becomes invalid, even if previously authenticated and authorized, and may cause potential threats and exploits.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.4.3\tPotential security requirements",
                            "text_content": "It should be possible for the network to detect anomalous NFs using the data collected from NFs.\nNOTE: \tBy this requirement it is only assured that specific data can be collected by and/or reported to an analytics function. Which specific detection mechanism (e.g., AI/ML algorithm) is used is implementation specific and out of the scope in 3GPP.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.5\tKey Issue #5: KI on Security for NWDAF-assisted application detection",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.5.1\tKey issue details",
                            "text_content": "As per Key Issue #2 in TR 23.700-81 [6], the detection of traffic generated by an application can be performed using the application detection filters in the UPF/SMF and those application detection filters may include Packet Flow Description(s), i.e. PFD(s). Depending on service level agreements between the operator and the Application Service Provider (ASP), the ASP may provide PFD(s) for each application identifier maintained by the ASP.\nUser plane data need to be utilized by NWDAF to output analysis results while it may include sensitive user privacy information. In this case, if the raw user plane data input to NWDAF without privacy protection process or data masking, it may result in user privacy information leakage or violating privacy related regulation.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.5.2\tSecurity threats",
                            "text_content": "If there is no security mechanism applied in user plane data before been utilized by NWDAF, the possibility of user data leakage will increase.\nIf the privacy related information in user plane data has not been processed before been utilized by NWDAF, the possibility of privacy regulation violation will increase.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.5.3\tPotential security requirements",
                            "text_content": "Privacy protection mechanism should be applied in the user plane data before it has been utilized by NWDAF\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.6\tKey Issue #6: Key issues on Cyber-attack detection",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.6.1\tKey Issue Details",
                            "text_content": "TR 23.700-91 [x] has identified the use case of NWDAF detecting cyber-attacks by monitoring events and data packets in the UE and the network, with the support of machine-learning algorithms. To achieve cyber-attacks detection, the NWDAF can collaborate with UE and any other NFs to collect related data as inputs and providing alerts of anomaly events as outputs to OAM and other NFs which have subscribed to them so that they could take proper actions.\nThis key issue describes what kind of cyber-attacks can be detected. In order to mitigate the identified cyber-attacks, the data/parameters collected by the NWDAF or any other NF need to be studied.\nThe specific cyber-attacks for which an analytics function may provide detection support include but are not limited to the following examples:\n(1) MitM attacks on the radio interface: MitM attacks or fraudulent relay nodes may modify or change messages between the UE and the RAN, resulting in failures of higher layer protocols such as NAS or the primary authentication.\n(2) DoS attacks: 5G has high performance requirements for system capacity and data rate, improved capacity and higher data rate may lead to much higher processing capability cost for network entities, which may make some network entities (e.g. RAN, Core Network Entities) to suffer from DDoS attack. The NFs may also enable the detection of DDoS attacks.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.6.2\tSecurity Threats",
                            "text_content": "Cyber-attack may not be detected by the 5G network; thus further attacks could be conducted.\nAnomaly events may not be detected by the 5G network; thus further attacks could be conducted.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.6.3\tPotential Security Requirements",
                            "text_content": "The 3GPP system shall support the detection of cyber-attacks by providing related inputs or collecting output analytics using an analytics function (for e.g., NWDAF).\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "6\tSolutions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.0\tMapping Solutions to Key Issues",
                    "description": "",
                    "summary": "",
                    "text_content": "Table 6.0-1: Mapping of solutions to key issues\n\n",
                    "tables": [
                        {
                            "description": "Table 6.0-1: Mapping of solutions to key issues",
                            "table number": 3,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.1\tSolution #1: Authorization of AI/ML model retrieving",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.1.1\tIntroduction",
                            "text_content": "This solution is addressing KI#3. It explains how to use NFProfile->NFServiceList-> allowedOperationsPerNfType and/or NFProfile->NFServiceList-> allowedOperationsPerNfInstance attributes defined in TS 29.510 to authorize a specific NF type and/or a specific instance ID of the NF Service Consumer to retrieve AI/ML models.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.2\tSolution details",
                            "text_content": "According to TS 23.288, Nnwdaf_MLModelProvision service enables the consumer to receive a notification when an ML model matching the subscription parameters becomes available, and Nnwdaf_MLModelInfo service enables the consumer to request and get from NWDAF containing MTLF ML Model Information.\nAn NWDAF can add Nnwdaf_MLModelProvision_Subscribe service operation in \"allowedOperationsPerNfType\" and/or \"allowedOperationsPerNfInstance\" for specific NF type and/or specific instance ID of the Consumer, and register its NF profile to NRF. When a NF Service Consumer requests an access token for the Nnwdaf_MLModelProvision_Subscribe to retrieve AI/ML models, the NRF will only grant the access token if Nnwdaf_MLModelProvision_Subscribe is present in either \"allowedOperationsPerNfType\", for the NF type of the NF Service Consumer, or in \"allowedOperationsPerNfInstance\", for the instance ID of the NF Service Consumer. This procedure also applies to Nnwdaf_MLModelInfo_Request service operation.\nAs per TR 23.700-81's conclusion to KI: how to Enhance Data collection and Storage, ADRF ML model retrieval service and relevant service operation will be used. Take Nadrf_MLModelManagement and the service operation Nadrf_MLModelManagement_RetrievalRequest as examples.\nAn ADRF can add Nadrf_MLModelManagement_RetrievalRequest service operation in \"allowedOperationsPerNfType\" and/or \"allowedOperationsPerNfInstance\" for specific NF type and/or specific instance ID of the Consumer, and register its NF profile to NRF. When a NF Service Consumer requests an access token for the Nadrf_MLModelManagement_RetrievalRequest to retrieve AI/ML models, the NRF will only grant the access token if Nadrf_MLModelManagement_RetrievalRequest is present in either \"allowedOperationsPerNfType\", for the NF type of the NF Service Consumer, or in \"allowedOperationsPerNfInstance\", for the instance ID of the NF Service Consumer.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.1.3\tEvaluation",
                            "text_content": "This solution addresses the AI/ML model retrieving authorization requirement of KI#3.\nThis solution uses the existing security mechanisms in SBA, \"allowedOperationsPerNfType\" and/or \"allowedOperationsPerNfInstance\" attributes, to specify NF Service Consumer that is authorized to access AI/ML models from ADRF and NWDAF.\nThis solution grants access to AI/ML models in general. It cannot grant access to particular AI/ML models respectively.\nAs NF consumer(s) (MTLF or AnLF) retrieves the ML model or URL (where the model is stored) from ADRF by using ADRF ML model retrieval service, when URL is retrieved, this solution only addresses access to the URLs, not to the models.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.2\tSolution #2: Authorization and Authentication of ML model transfer",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.2.1\tIntroduction",
                            "text_content": "The solution proposed below protects AI/ML models between the entity which produces the ML model or stores the ML model in ADRF and the entity which consumes the model (NFc). In this solution, an authorization token is used by ADRF to verify that the NFc is allowed to access the ML model.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.2\tSolution Details",
                            "text_content": "\nThe figure depicts a secure ML model transfer process, illustrating the steps involved in transferring a model from one system to another. It includes a secure communication channel, encryption, and authentication mechanisms to ensure data integrity and prevent unauthorized access. The figure also highlights the importance of regular updates and maintenance to maintain the model's accuracy and effectiveness.\nFigure 6.2.2.1-1 Secure ML model transfer\n1)\tThe MTLF trains the ML model and sends ML Model to the ADRF by invoking the Nadrf_DataManagement_StorageRequest (ML Model) service operation. Along with Model. Metadata of the model is also sent for each model, e.g., ML model ID, analytics ID, Vendor ID, MAC or SHA256 Signature of the Binary of the application, environment required for ML model execution, URL/link to retrieve configuration, and secrets, and/or a signing key, certificate to generate authentication credentials. The NWDAF containing MTLF generates a security context for protecting the ML model information using a logical function or named network function NKGC. MTLF may send an ML model encrypted using a symmetric key (e.g., AES key) before the storage. The security context consists of an encryption key Kenc, an integrity key Kint, and the corresponding security algorithm(s) for encryption and integrity protection. The NWDAF containing MTLF uses the encryption key Kenc and integrity key Kint. to protect the ML model and related information. The NKGC stores the security context.\n2.\tADRF stores the ML model and response as per TS 23.288 [5], except that the ADRF stores the ML model. Data may be stored in the ADRF as per clause 5B.1 in TS 23.288 [5].\nNote 1: \tKey handling such as key refresh and revocation is outside of the scope of this solution and not addressed in this solution.\n3.\tConsumer, e.g., NWDAF/ANLF, contacts the NRF and requests an access token using existing procedures in 33.501 [2]\n4.\tNRF sends an access token along with MTLF ID using existing procedures per TS 23.288 [5]. According to TS 29.510 [8], An NWDAF can add Nnwdaf_MLModelProvision_Subscribe service operation in \"allowedOperationsPerNfType\" and/or \"allowedOperationsPerNfInstance\" for specific NF type and/or specific instance ID of the Consumer, and register its NF profile to NRF. When an NF Service Consumer requests an access token for the Nnwdaf_MLModelProvision_Subscribe to retrieve AI/ML models, the NRF grants the access token if Nnwdaf_MLModelProvision_Subscribe is present in either \"allowedOperationsPerNfType\", for the NF type of the NF Service Consumer, or in \"allowedOperationsPerNfInstance\", for the instance ID of the NF Service Consumer. MTLF knows the NF instance IDs of the AnLF as per existing procedures in 23.288[5] (e.g. through OAM).\n5.\tThe consumer uses Nnwdaf_MLModelProvision service operation for ANLF receives ML model ID based on analytics ID and ADRF id to retrieve ML model.\n6.\tMTLF verifies the access token received in step 3. MTLF may send the encryption key used in step 1 to encrypt the ML model, which is stored in ADRF. MTLF also sends one-time credentials to access the ML model from ADRF. One-time credentials may include\na.\tNonce, which is shared in step 1 as part of the metadata OR\nb.\tMAC or Hash of a binary or random number shared in step 1 as part of the data OR\nc.\tA signing key as a private key of the. The public part is passed in step 1 OR\nd.\tMTLF uses it is signing key to generate the credentials, e.g., a JWT token or a certificate.\nNOTE 2: One-time credentials can be used to limit the number of accesses from the consumer NF. The one-time credential may be used as a regular authorization token for accessing the ML model multiple times, i.e., not only once, as the name suggests otherwise.\n7.\tConsumer of the ML model, e.g., ANLF, uses the ADRF service procedure to request the ML model. It also sends a one-time credential received in step 6.\n8.\tADRF verifies the one-time credentials (as specified in step 6). If the access token verification is successful, the ADRF provides the stored model to the consumer NF.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.2.3\tEvaluation",
                            "text_content": "As per key issue 3, \"the ADRF itself cannot be considered as a fully trusted entity storing the sensitive AI/ML data models ML models may be stored in the public cloud for storage\". The solution proposes to address this issue that ADRF can not be a fully trusted entity, The solution presents the E2E encryption approach where the consumer and ML model owner can access ML models in clear text. 3rd party public cloud will not have access to the ML model, whose sole purpose is to store the model/files. E2E encryption prevents leakage of IP, i.e., cloning, copying, or internal ML models details by heuristics. in single vendor and multi-vendor environments; furthermore, when ML models are not encrypted, they are cloned ML models may lead to revenue loss or advantage to a competitor. E2E encryption provides security guarantees not provided by just transit security or access level controls to the database.\nThis solution assumes protection of ML model is vendor specific. ML model storage is done using existing procedures in TS 23.288 [5] e.g.-using Nadrf_MLModel_StorageRequest containing the ML model.\nNOTE:Further evaluation is not addressed in the present document.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.3\tSolution #3: AI/ML model authorization and retrieval",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.3.1\tIntroduction",
                            "text_content": "This addresses KI#3 on security for AI/ML model storage and sharing, specifically the authorization aspects for the access to the AI/ML models, i.e.:\n-\tADRF (Analytical Data Repository Function), or any other network function which may store the AI/ML model,  authorizes the NFc to retrieve that AI/ML model\n-\tNF Service consumers is authorized to access to the AI/ML models in the ADRF (or any other NF which may store the ML model, for instance NWDAF MtLF).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.2\tSolution details",
                            "text_content": "The solution defines an authorization schema for retrieval of AI/ML models in 5GS based on OAuth 2.0.\nThe procedure is as follows:\nThe figure depicts a simplified illustration of the AI/ML model authorization procedure, showing the steps involved in granting access to the model. The figure includes a flowchart with various stages, such as data collection, model training, model validation, and model deployment. The steps are represented by boxes and arrows, indicating the flow of information and the sequence of actions. The figure is a visual representation of the process, making it easier to understand and follow.\nFigure 6.3.2-1: AI/ML model authorization procedure\n1)\tNF producer which trains the model (e.g., NWDAF MtLF), while storing the ML model in the ADRF, it also appends its metadata. The metadata with respect to each model may contain attributes for identification such as Model Info/ analytics Id(s) supported by the model, and attributes such as NF Type, Instance Id and Interoperability indicator for authorization at the retrieval of a particular identified model. Those attributes are known by the NF producer via the OAM system.\nNOTE 1:The referred metadata attributes in the solution are intended to be used in the solution for the identification of the model (Model Info/Analytics Id(s) and NF consumer attributes used for authorization (NF Type, Instance Id and Interoperability indicator).\n2)\tNF producer also registers the model specific information including the model metadata when registering its profile in the NRF. This information includes the Model Info/Analytics ID, allowed NF Type/Id and allowed NF Id per Model.\n3)\tNFc when requesting the access token includes at least the Model Id and/or Analytics Id for which a trained model is needed.\n4)\tNRF when receiving the access token request, verifies that the NFc is authorized to retrieve the model from ADRF.\n5)\tIn case of valid authorization, the NRF provides the token with access token claims including the Model Id, and optionally also the Analytics Id, identifying the type of analytics that the model may be providing.\n6)\tNFc now provides the access token with the model retrieval service request to the ADRF.\n7)\tADRF verifies the access token the ensures that the NFc is indeed authorized for the requested model by verifying the access token claims and then also updates the metadata info of the Model (received in Step 1) to also include the authorized NFc info (NFc Instance ID, NFc type).\n8)\tIn case of successful verification ADRF provides the NFc a URI to download the model as a service response.\n9)\tNFc initiates the download of the ML model using the URI.\nNOTE2:\tTo ensure the URI is not misused by a rogue or malicious NFc, further verification on the model retrieval should be applied from the ADRF. This verification can be preferably realized via CCA (Client Credentials Assertion) as defined in clause 13.3.8 of [7], or alternatively via other mechanisms subject to the particular implementation. Consequently, if the NFc presents CCA as credentials, the ADRF should support the verification of CCA by caching the information provided in step 7. In case other implementations are in use (e.g., central LDAP), ADRF may need to support the corresponding interfaces to external access control platform.\n10)\tADRF verifies that the NFc, which is trying to download the model, is indeed authorized by verifying the credentials against the metadata updated in Step 7).\nADRF after a successful verification finally initiates the model download at the NFc.\nNOTE: Alignment with TS 23.288[5] is not addressed in the present document.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.3.3\tEvaluation",
                            "text_content": "The solution addresses the authorization related aspects when the AI/ML models are shared among NWDAFs and/or NFs.\nThe following security requirements are addressed by this solution: -\n-\tADRF (Analytical Data Repository Function), or any other network function which may store the AI/ML model, is able to authorize the NFc to retrieve that AI/ML model\n-\tNF Service consumers are authorized to access to the AI/ML models in the ADRF (or any other NF which may store the ML model, for instance NWDAF MtLF).\nThe solution introduces the following new procedures in the existing authorization schema based on OAuth 2.0:\n-\tThe NF producer of the AI/ML model, while storing the model in the ADRF, is required to append its metadata needed to identify the model, and NF consumer attributes (NF type, NF Instance id and Interoperability indicator) for authorization purposes\n-\tAt the registration stage in NRF, the NF producer of the AI/ML model is required to include the Model Info/Analytics ID, allowed NF Type/Id and allowed NF Id per Model.\n-\tThe ADRF is required to verify the access token of the AI/ML model consumer and responds (if successful) with an URI to download the model. Furthermore, when the AI/ML model consumer initiates the download of the model, it needs to be authenticated (e.g., CCA) by the ADRF.\n-\tThe ADRF additionally verifies if the request to retrieve the model is coming from the same NWDAF AnLF which has been authorized by the NRF. This is just an additional security procedure and can be removed (along with the addition of metadata as defined in step 1a) if it leads to increase in complexity of the solution.\nThe solution is not fully aligned with procedures defined in TR 23.700-81 [6].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.4\tSolution #4: AI/ML model storage and sharing security",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.4.1\tIntroduction",
                            "text_content": "This solution is addressing Key Issue #3: Security for AI/ML model storage and sharing and it is based on the Solution #42: Storage and retrieval of trained ML models to/from ADRF of TR 23.700-81 [6] with the following enhancements:\nThe data producer (NWDAF containing MTLF) is generating a security context to protect the ML model information which is then stored protected in the ADRF with the data producer identity so that NF consumers (NWDAF containing AnLF), if authorized, can request the protected ML model information from the ADRF as well as the security context from the data producer to unprotect the ML model information for further processing. The protection of the ML model is necessary since the ML model are trained and created with a lot of effort and may be different in terms of performance depending on the vendor. Those vendor specific differences can be seen as a confidential asset that should not be disclosed even to repositories from a different vendor and should be stored only protected, also to avoid the risk that an unprotected model gets leaked from the repository. In case the ADRF is co-located with the MTLF, then no encryption is necessary. The necessity of end-to-end protection is described in the Key Issue #3 \"AI/ML models are protected between the entity which produces the ML model or stores the ML model in ADRF (e.g., NWDAF containing MtLF, NFp) and the entity which consumes the model (NFc)\".\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.4.2\tSolution details",
                            "text_content": "The figure depicts a 4-layer context generation model in a Multi-Layer Finite State Machine (MLF) security context generation system. The model is designed to generate security context based on the input data, ensuring that the system is resilient to various security threats. The layers in the model include input, processing, output, and feedback, with each layer responsible for a specific aspect of the security context generation process. The figure also includes a flowchart to illustrate the model's logic and the steps involved in generating the security context.\nFigure 6.4.2-1: ML security context generation in MTLF\n1.\tNWDAF containing AnLF sends Nadrf_MLModelManagement_RetrievalRequest which includes Analytics ID(s), ML Model Filter Info (ML model file specific information), optionally Target NF (NWDAF containing MTLF) to subscribe for notifications. The ML model file specific information includes the ML model file serialization format requested by the NWDAF containing AnLF.\n2.\tThe ADRF determines if the ML model file for the Analytics ID(s) requested is already stored. If the ML model file for the Analytics ID(s) requested in not stored in ADRF then step 3, 4, 5, 6 are performed, before these steps, the ADRF discovers the target MTLF from the NRF optionally if it is not informed by the AnLF in the step 1. If the ML model file for the Analytics ID(s) requested in stored in ADRF the steps 3, 4, 5, 6 are skipped.\n3a.\tADRF sends Nnwdaf_MLModelProvision_Request with the input parameters defined in TS 23.288 [5] and additional input parameters ML model file specific information (ML model file serialization format).\n3b.\tThe NWDAF containing MTLF generates a security context for protecting the ML model information. The security context is per ML model and gets removed once the ML model information is removed from the ADRF. The NWDAF containing MTLF generates a validity time for the security context. The security context consists of an encryption key Kenc and an integrity key Kint as well as the corresponding security algorithm(s) for encryption and integrity protection. The NWDAF containing MTLF uses the encryption key Kenc and integrity key Kint. to protect the ML model and related information. The MTLF stores the security context and the related ML information for identification of the security context.\n4.\tThe NWDAF containing MTLF sends a Nnwdaf_MLModelProvision_Response with following parameters Analytics ID(s), Protected Trained ML model file(s), NWDAF containing MTLF Identity, validity time for the security context. The validity time indicates to the ARDF when to remove the protected ML model information..\n5.\tADRF sends Nnwdaf_MLModelTrainingUpdate_Subscribe with the input parameters Analytics ID(s), ML model file specific information (ML model file serialization format).\n6.\tWhen the ML model for which the ADRF has subscribed for ML model training update has been updated, the NWDAF containing MTLF sends Nnwdaf_MLModelTrainingUpdate_Notify with the following parameters Analytics ID, Protected Trained ML model(s) file, Notification Correlation ID, NWDAF containing MTLF Identity.\n7a.\tThe ADRF sends a response back to NWDAF containing AnLF using Nadrf_MLModelManagement_Retrieval Response with the following parameters Protected ML Model File Information (Trained ML model(s) file, ML model file serialization format, Trained ML Model ID per Analytics ID, NWDAF containing MTLF address, validity time for the security context).\n7b.\tNWDAF containing AnLF sends Nnwdaf_KeyProvision_Request to the NWDAF containing MTLF with the input parameters Analytics ID(s), Notification Correlation ID. The NWDAF containing AnLF is authorized by the NRF to contact the NWDAF containing MTLF and to retrieve the security context.\nNOTE: \tIt is assumed that NWDAF containing AnLF authorization is already performed.\n7c.\tThe NWDAF containing MTLF selects the ML model security context based on the related ML information for identification.\n7d\tThe NWDAF containing MTLF sends a Nnwdaf_KeyProvision_Response to the NWDAF containing AnLF, including the ML model security context. It is assumed that the message is protected with SBA security or NDS/IP.\n7e\tThe NWDAF containing AnLF unprotects the ML model data with the received security context.\n8.\tThe NWDAF containing AnLF subscribes to ADRF using Nadrf_MLModelManagement_RetrievalTrainingUpdate_Subscribe service operation containing input parameters Trained ML Model ID per Analytics ID.\n9.\tThe ADRF sends a notification to NWDAF containing AnLF using Nadrf_MLModelManagement_RetrievalTrainingUpdate_Notify service operation containing following parameters ML Model File Information (Protected Trained ML model(s) file, ML model file serialization format, Trained ML Model ID per Analytics ID, NWDAF containing MTLF Identity).\n9b.\tThe validity time for the security context is expired, the ARDF removes the ML model information and the NWDAF containing MTLF removes the security context respectively.\n10.\tNWDAF containing AnLF determines that the ML model training update is no longer required.\n11.\tThe NWDAF containing AnLF sends Nadrf_MLModelManagement_RetrievalTrainingUpdate_Unsubscribe with Subscription Correlation ID as input parameters.\n12.\tADRF determines if any of the NF consumer(s) have subscription for ML Model training update per Analytics ID. If none of the NF consumer(s) have subscription for ML model training update per Analytics ID, the ADRF removes the Protected ML model file and ML model file specific information and proceed to step 9.\n13.\tADRF sends Nnwdaf_MLModelTrainingUpdate_Unsubscribe to ADRF with the Subscription Correlation ID as input parameter. NWDAF containing MTLF removes the security context for the ML model.\nNOTE: Alignment with TS 23.288[5] on how to store the ML model in the ADRF not addressed in the present document.\nThe key management of the security context for the ML model is performed by the NWDAF containing MTLF. The security context consists of an encryption key Kenc and an integrity key Kint as well as the corresponding security algorithm(s) for encryption and integrity protection. The NWDAF containing MTLF assigns a validity time for the security context at the time of its generation, which indicates the time until the security keys become invalid. The validity time is similar to the storage duration in the ADRF, i.e. once the validity time for the security context is expired, the ARDF removes the ML model information and the NWDAF containing MTLF removes the security context respectively. The NWDAF containing MTLF generates for new ML model requests a new security context with respective validity time.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.4.3\tEvaluation",
                            "text_content": "This solution is addressing Key Issue #3: Security for AI/ML model storage and sharing by protecting the ML model from the NF producer to the NF consumer, also during the storage time in the ADRF. The data producer (NWDAF containing MTLF) is generating a security context to protect the ML model information which is then stored protected in the ADRF with the data producer identity so that NF consumers (NWDAF containing AnLF), if authorized, can request the protected ML model information from the ADRF as well as the security context from the data producer to unprotect the ML model information for further processing.\nThe keys sent in steps 7b-d are protected with SBA security, but may not be e2e protected between AnLF and MTLF in case SCP is used in between.\nThe security context requires a key management with a validity time to indicate when the security keys and thus the storage in the ADRF expires.\nThe solution needs to be aligned with SA2 that NFc (AnLF) does not request the model directly from the ADRF, but the MTLF decides to store the ML model in the ADRF.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.5\tVoid",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.6\tSolution #6: Anomalous NF behaviour detection by NWDAF",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.6.1\tIntroduction",
                            "text_content": "This solution addresses key issue #4.\nThe 5GC supports distributed NF deployments in order to ensure that the NF can provide services from multiple locations. The infrastructure typically implemented on cloud platforms may be owned and operated by the PLMN operator himself, or they may be run on commercial public cloud platforms. It is always possible that the NFs behave in an anomalous manner in certain sites of such distributed infrastructure. Such anomalous behaviour can arise either due to configuration errors or internal data corruption, or due to an attack.\nTo allow an operator to manage its NF deployment efficiently, additional relevant log data from the NFs can be provided to the NWDAF, which can then be used by NWDAF in assisting the analysis and detection of the cause for an anomaly.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.6.2\tSolution details",
                            "text_content": "The OAM or some operator defined AF may subscribe/request to the NWDAF to notify/respond when it detects an abnormal behaviour for a particular NF instance (for example excessive resource usage, or consistent failure to provide its service). There can be various causes of abnormal behaviour such as an erroneous operation at a NF, an error at the side of the cloud provider where the NF is deployed, or an impending attack at a particular NF by a malicious entity in the system.\nIn order to analyse the root cause of the anomaly with certain degree of confidence, more information or related data can help. Thus, NWDAF requests inputs from different entities in the system (such as OAM, NRF and NFs) for detailed analysis. Security related data for analytics can also be collected by NWDAF from the NFs (or via OAM). The final output analytics is then sent to the OAM or the AF for adequate measures.\nIn order to facilitate the security related log data collection from NFs two different methods are proposed.\nNOTE: \tDefining the protocols used for log collection is not in the scope of the present document.\nThe procedure depicted in Figure 6.6.2.2-1 allows a consumer to request analytics from NWDAF for anomalous NF behaviour and its root cause.\nThe figure depicts a graph with various data points, including the number of anomalous behaviors (NFs) detected by NWDAF, the number of security logs retrieved from NFs EventExposure APIs, and the corresponding security logs. The graph illustrates the correlation between the number of NF detected and the number of security logs retrieved, providing insights into the anomalous behavior patterns of NFs.\nFigure 6.6.2.2-1: NF anomalous behaviour analytics provided by NWDAF using security logs obtained from NFs EventExposure APIs\n1.\tThe OAM or operator's AF sends a request/subscription to the NWDAF for NF anomalous behaviour analytics using either the Nnwdaf_AnalyticsInfo_Request or Nnwdaf_AnalyticsSubscription_Subscribe service operation.\n2.\tIf the request is authorized, and in order to provide the requested analytics, the NWDAF may subscribe to OAM services to retrieve resource usage and NF resources configuration of all targeted NF instances, following the procedure specified in clause 6.2.3.2 in TS 23.288 [1].\n3a.\tThe NWDAF subscribes to NRF to receive notification on changes, e.g., on the load and status of NF instances registered in NRF, using Nnrf_NFManagement_NFStatusSubscribe service operation for all targeted NF instances. NF instances are identified by their NF id.\n3b.\tNRF notifies NWDAF of changes on the load and status of the requested NF instances by using Nnrf_NFManagement_NFStatusNotify service operation.\n4a.\tThe NWDAF subscribes or requests the additional security specific log info (as specified in the table 6.6.2.3-1) for a particular NF by invoking the Nnf_EventExposure_Subscribe service operation.\n4b.\tThe NF then notifies the NWDAF (e.g. with the complete log report) by invoking Nnf_EventExposure_Notify service operation.\n5.\tThe NWDAF derives the relevant analytics using the inputs provided by the OAM, NRF, and the NF (as specified in the table 6.6.2.3-2).\n6.\tThe NWDAF provides requested NF anomalous information along with the corresponding root cause (for instance a malicious NF trying to attack other NF for denial of service, or an erroneous NF unable to provide service to other NFs) using either the Nnwdaf_AnalyticsInfo_Request response or Nnwdaf_AnalyticsSubscription_Subscribe response, depending on the service used in step 1.\nThe procedure depicted in Figure 6.6.2.3-1 allows a consumer to request analytics from NWDAF for anomalous NF behaviour and its root cause using the security specific NF logs obtained from OAM.\nThe figure depicts a network anomaly analysis tool, NWDAF, utilizing security logs from OAM to identify anomalous behavior. The tool is designed to detect and analyze network anomalies, such as network failures, security breaches, and other network-related issues. The figure shows the tool's interface, which includes a dashboard for monitoring and analyzing the logs, as well as a visual representation of the anomalies detected. The tool's ability to analyze security logs from OAM is a significant feature, as it provides a more comprehensive view of network security compared to traditional network monitoring tools.\nFigure 6.6.2.3-1: NF anomalous behaviour analytics provided by NWDAF using security logs obtained from OAM\n1.\tThe OAM or operator's AF sends a request/subscription to the NWDAF for NF anomalous behaviour analytics using either the Nnwdaf_AnalyticsInfo_Request or Nnwdaf_AnalyticsSubscription_Subscribe service operation.\n2.\tIf the request is authorized, and in order to provide the requested analytics, the NWDAF may subscribe to OAM services to retrieve resource usage and NF resources configuration of all targeted NF instances, following the procedure specified in clause 6.2.3.2 in TS 23.288 [1]. The NWDAF further sends the request to the OAM to provide the security specific log info (as specified in the table 6.6.2.3-1).\n3. OAM then collects all the requested information along with the security logs from the NFs and provide it to NWDAF.\n4a.\tThe NWDAF subscribes to NRF to receive notification on changes, e.g., on the load and status of NF instances registered in NRF, using Nnrf_NFManagement_NFStatusSubscribe service operation for all targeted NF instances. NF instances are identified by their NF id.\n4b.\tNRF notifies NWDAF of changes on the load and status of the requested NF instances by using Nnrf_NFManagement_NFStatusNotify service operation.\n5.\tThe NWDAF derives the relevant analytics using the inputs provided by the OAM and NRF (as specified in the table 6.6.2.3-2)\n6.\tThe NWDAF provides requested NF anomalous information along with the corresponding root cause (for instance a malicious NF trying to attack other NF for denial of service, or an erroneous NF unable to provide service to other NFs) using either the Nnwdaf_AnalyticsInfo_Request response or Nnwdaf_AnalyticsSubscription_Subscribe response, depending on the service used in step 1.\nTable 6.6.2.3-1 Security specific parameters provided by NFs (NF/NRF) to assist in detection\n\nTable 6.6.2.3-2 Inputs provided to NWDAF in assisting the detection of anomalous NF\n\nTable 6.6.2.3-3 and Table 6.6.2.3-4 specifies the output analytics from NWDAF\nTable 6.6.2.3-3: Anomalous NF behaviour statistics\n\nTable 6.6.2.3-4: Anomalous NF behaviour predictions\n\nThe inputs defined in Tables 6.6.2.3-1 and 6.6.2.3-2 can assist in the detection of anomalies, but how the anomaly is finally detected, e.g., used algorithms and associated procedures, is left to the implementation. Example of use: the authenticity of an access token sent by a NF Service Consumer, and/or the number of services of service requests being sent by the NF Service Consumer, can be instrumental in informing the system about whether a potentially erroneous or malicious NF Service Consumer is trying to access a resource for which it is not authorized, and/or trying to attack a NF Service Producer by multiple simultaneous requests.\nBased on the input, an analytics function can monitor and find abnormalities in NF load or NF resource usage, which can result in an alert. Specific security log data can help to understand if this is normal behaviour or could be resulting from a NF that is behaving anomalous.\nThus, when NFs send service requests to other NFs, input data such as the number of service requests sent, the percentage of successful service requests, the percentage of successful access token verification and the serving NF load and resource usage can be used to provide training data for normal service requests reception and load.\nInput data such as NF Service Consumer / SCP identifier, the NF Service Producer Identifier and the Requested Service Name can be used to identity the anomalous/erroneous NF in the system.\nNOTE: \tThe derivation of output from input depends on the algorithms used or the policy present. How to derive the output from input is up to implementation logic, which is out of scope of 3GPP.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.6.2.3-1 Security specific parameters provided by NFs (NF/NRF) to assist in detection",
                                    "table number": 4,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.6.2.3-2 Inputs provided to NWDAF in assisting the detection of anomalous NF",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.6.2.3-3: Anomalous NF behaviour statistics",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.6.2.3-4: Anomalous NF behaviour predictions",
                                    "table number": 7,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.6.3\tEvaluation",
                            "text_content": "The solution addresses the key issue #4 intended to study the detection of anomalous NFs by the network, by enabling the NWDAF in assisting the analytics and detection of the cause for an anomaly in the 5G Core.\nThe solution proposes NWDAF to collect NF related data such as resource utilization, load information and additional security specific log data from different entities in the 5G system, such as OAM, NRF and NFs, to proceed with the detailed analysis.\nThe solution introduces two different methods of NF log data collection - by using the NFs EventExposure APIs, and by using OAM. However, the existing event exposure is used for UE related events, not for logs. Using the OAM method requires to first expose security logs of NFs to the OAM and then make them available for the NWDAF, what represents a security risk to be evaluated.\nThe solution specifies parameters provided by the NFs (NF/NRF) and inputs from OAM to NWDAF to assist in the detection, as well as output analytics from NWDAF in terms of statistics and predictions.\nHow the anomalies are finally detected and confirmed, i.e., used algorithms and associated procedures, are left to implementation and operator decision and out of scope of the present document. I.e., the performance and accuracy of the anomaly detection relies on the implementation. The NWDAF based solution assists in the detection, but cannot be considered the only source/mechanism in the final decision about the anomaly. The solution does not provide evidence for abnormal NF detection precision, false positive rate, false negative rate. Without that, the administrator may take wrong action for the wrong detection so that the network may face unsecure configuration risk. This solution only focuses on defining the first set of input parameters that can be used to facilitate the detection of abnormal NF behaviour.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.7\tSolution #7: Secured and authorized AI/ML model transfer and retrieval",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.7.1\tIntroduction",
                            "text_content": "This addresses KI#3 on security for AI/ML model storage and sharing, specifically the following security requirements:\n-\tAI/ML models are protected between the entity which produces the ML model or stores the ML model in ADRF (e.g., NWDAF containing MtLF, NFp) and the entity which consumes the model (NFc).\n-\tADRF (Analytical Data Repository Function), or any other network function which may store the AI/ML model, are able to authorize the NFc to retrieve that AI/ML model\n-\tNF Service consumers are authorized to access to the AI/ML models in the ADRF (or any other NF which may store the ML model, for instance NWDAF MtLF).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.7.2\tSolution details",
                            "text_content": "The solution defines a secured AI/ML model transfer and retrieval mechanism including confidentiality and integrity protection, along with the authorization schema for retrieval of AI/ML models in 5GS.\nThe procedure is as follows:\nThe figure depicts a secure AI/ML model transfer and authorization procedure, illustrating the steps involved in transferring and authorizing AI/ML models. It includes a secure transfer of the model, authorization checks, and the use of encryption to ensure data privacy and security.\nFigure 6.7.2-1: Secured AI/ML model transfer and authorization procedure\n1a. NF Service producer which trains the model (e.g., NWDAF MtLF), while storing the encrypted ML model in the ADRF, it also appends its metadata. The metadata with respect to each model may contain attributes for identification such as Model Info/ analytics Id(s) supported by the model, and attributes such as NF Type, NF Instance Id and Interoperability indicator for authorization at the retrieval of a particular identified model.\nNOTE 1: The referred metadata attributes in the solution are intended to be used in the solution for the identification of the model (Model Info/Analytics Id(s) and NF consumer attributes used for authorization (NF Type, Instance Id and Interoperability indicator).\n1b. ADRF, in case of successful model storage, provides a URI back to NWDAF MtLF, which may be later used to access the model.\n2. NF Service producer registers the model specific information including the model metadata when registering its profile in the NRF. This information includes the Model Info/Analytics ID; and allowed NF Type, NF Instance Id and Interoperability indicator of consumers with respect to a particular model.\n3. NF Service Consumer (e.g., NWDAF AnLF) when requesting the access token to NRF includes at least the Model Id and/or Analytics Id for which a trained model is needed, along with its Interoperability indicator in addition to the NF type and NF instance Id.\n4. NRF when receiving the access token request, verifies that the NF Service Consumer is authorized to consume the model of the NFp.\nNOTE 1a: How the NRF knows the vendor ID of the AnLF is not addressed in the present document.5. In case of valid authorization, the NRF provides the token with access token claims including the Model Id, and optionally also the Analytics Id, identifying the type of analytics that the model may provide.\n6. NF Service Consumer now provides the access token with the model retrieval service request to the NF Service Producer (e.g. NWDAF MtLF). Specially in indirect communication scenarios CCA may be optionally used for authentication between NF Service Consumer and Network Service Producer.\n7. NFp verifies the access token and ensures that the NFc is indeed authorized for the requested model by verifying the access token claims.\n8a. [Optional] In the case of successful token verification, NFp initiates an update of the metadata information of the Model in ADRF (sent in Step 1a) to include new authorized NFc info (NFc Instance ID, NFc type) in the ADRF.\n8b. [Optional] ADRF sends a confirmation with the details of the NFc which is authorized to consume a particular identified model.\n9. NWDAF MtLF (NFp) sends as a service response containing the URI to retrieve the encrypted model, the encryption key ‘K', further encrypted using NFc public key, to NWDAF AnLF (NFc).\n10-11. NFc requests an access token from NRF to consume the model retrieval service of ADRF, and receives an access token in response.\n12. NFc sends the model retrieval request using the URI (sent by NFp (MtLF) in step 9) to ADRF along with the access token received in Step 11, and additionally its credential information as part of the request (e.g., CCA).\n13. ADRF verifies that the NFc, which is trying to download the model, is indeed authorized by verifying the identity against the metadata updated in Step 8a, and verification of credentials of NFc provided in Step 12.\nNOTE 2: To ensure the URI is not misused by a rogue or malicious NFc, further verification on the model retrieval should be applied from the ADRF. This verification can be preferably realized via CCA (Client Credentials Assertion) as defined in clause 13.3.8 of [1], or alternatively via other mechanisms subject to the particular implementation.\n14. ADRF after a successful verification finally initiates the encrypted model download at the NFc.\n15. NFc now decrypts the model using the encryption key ‘K' received in Step 9.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.7.3\tEvaluation",
                            "text_content": "The solution addresses the authorization related aspects when the AI/ML models are shared among NWDAFs and/or NFs, and the secure storage of the model in the ADRF.\nThe solution assumes that there is not an implicit trust among the following logical entities: producer of the AI/ML model (NWDAF MtFL), the storage platform (ADRF) and the AI/ML consumer (AnLF). This assumption implies the need to encrypt the model in the storage platform.\nNOTE 3: If AI/ML producer (NWDAF MtLF) and storage platform (ADRF) are part of the same system (e.g., co-located in the same server, belonging in the same security domain), this may imply implicit trust, thus the encryption mechanism can be avoided.\nThe following security requirements are addressed by this solution:\n-\tAI/ML models shall be protected between the entity which produces the ML model or stores the ML model in ADRF (e.g., NWDAF containing MtLF, NFp) and the entity which consumes the model (NFc).\n-\tADRF (Analytical Data Repository Function), or any other network function which may store the AI/ML model, shall be able to authorize the NFc to retrieve that AI/ML model\n-\tNF Service consumers shall be authorized to access to the AI/ML models in the ADRF (or any other NF which may store the ML model, for instance NWDAF MtLF).\nThe solution introduces the following new procedures in the existing authorization schema based on OAuth 2.0:\n-\tThe NF producer of the AI/ML model, while storing the model in the ADRF, is required to append its metadata needed to identify the model, and NF consumer attributes (NF type, NF Instance id and Interoperability indicator) for authorization purposes. The AI/ML model is stored in encrypted format.\n-\tAt the registration stage in NRF, the NF producer of the AI/ML model is required to include the Model Info/Analytics ID, allowed NF Type/Id, allowed NF Id and Interoperability indicator per Model.\n-\tThe NWDAF AnLF also while registering may include vendor information in the form of interoperability indicator, that will be used to authorize the AI/ML model request by the NRF.\n-\tThe NWDAF MtLF verifies the access token of the AI/ML model consumer and responds (if successful) with an URI to download the model and the encryption key to decrypt the model. This response is encrypted using the NWDAF AnLF public key.\nNOTE 4: The encryption key to decrypt the retrieved model requires to be protected at transit, therefore it is further encrypted using the public key of the NWDAF AnLF. This encryption process will require additional processing at the NWDAF MtLF and AnLF.\nNOTE 5: How AnLF retrieves the model from ADRF/MtLF will be aligned with conclusions in TR 23.700-81 [6].\n-\tThe ADRF additionally verifies if the request to retrieve the model is coming from the same NWDAF AnLF which has been authorized by the NRF. This is just an additional security procedure and can be removed (along with the addition of metadata as defined in step 1a) if it leads to increase in complexity of the solution.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.8\tSolution #8: Protection of data and analytics exchange in roaming case",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.8.1\tIntroduction",
                            "text_content": "This solution is addressing on KI#1.\nAs per Key Issue #3 in TR 23.700-81 [6], the HPLMN/VPLMN may need to collect data or consume analytics from the VPLMN/HPLMN in roaming scenario. The data or analytics may relate to particular UEs or contain information about all UEs or groups of UEs. Both PLMNs (VPLMN, HPLMN) need the ability to control the amount of data exposed and to abstract or hide network-internal aspects based on operator policy, regulatory constraints and/or roaming agreements.\nThis contribution proposes a new data exchange protection method by expanding the parameters of token requests, and the verification by NRF, ensuring that only the data permitted by the NRF can be provided to other PLMNs.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.8.2\tSolution details",
                            "text_content": "This contribution proposes a new data exchange protection method by expanding the parameters of token requests, and the verification by NRF, ensuring that only the data permitted by the NRF can be provided to other PLMNs.\nThe figure depicts a network scenario where data and analytics exchange is protected in a roaming case. It illustrates the protection measures, such as encryption, authentication, and access control, to ensure secure transmission and access to data and analytics.\nFigure 6.8.2-1: Protection of data and analytics exchange in roaming case\nStep 1: NWDAFc send token request to the vNRF, the message should carry the NF consumer type, target NF type, expected NF Service name and requested data type. The target NF type should be NWDAF.\nNOTE: \tThe requested data type that would be verified by hNRF could be the requested data information such as data/analytics specification. The data/analytics specification is specified in TS 23.288[5] clause 5A.2, it is the \"Service Operation\" specific parameters that identify the collected data (i.e. Analytics ID(s) / Event ID (s), Target of Analytics Reporting or Target of Event Reporting, Analytics Filter or Event Filter, etc.). For example, the hNRF can configure a list to indicate which data or data type can be provided to other PLMNs.\nStep 2: vNRF forward the token request and the parameters to hNRF.\nStep 3: The home network hNRF verifies the parameters included the requested data type, then determines whether the requested data type can be obtained by the visited operator according to the local policy.\nStep 4: If the verification is ok, hNRF returns the token to vNRF, and the data type that can be obtained should be indicated in the token.\nStep 5: The vNRF forwards the Token_Get Response to NWDAFc\nStep 6: NWDAFc send Nnwdaf_DataManagement_Subscribe message with token and its PLMN ID to NWDAFp of PLMN2.\nStep 7: The home NWDAFp verifies the service request, including verifying token, PLMN ID and whether the data type in the token is consistent with the requested data.\nStep 8: NWDAFp send Nnf_EventExposure_Subscribe message to NF to collect data.\nStep 9: NF returns raw data to NWDAFp.\nStep 10: Data anonymization or desensitization based on operator's policy.\nNOTE: The anonymization or desensitization method of data or analytics is left for implementation.\nStep 9: NWDAFp returns the processed data to NWDAFc.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.8.3\tEvaluation",
                            "text_content": "The solution fulfils the security requirement of key issue #1.\nThis solution proposes to extend token-based authorization by adding the requested data type to the access token request and access token. Otherwise, it re-uses existing SBA security. The current SBA mechanism support confidentiality, integrity, and replay protection.\nIn this solution, NRF is used as the authorization server to determine whether the requested data is allowed to provide. NWDAF is used as central NF or entry point to collect data.\nThis solution requires that allowed requested data type per NF consumer is configured in the NRF.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.9\tSolution #9: Anomalous NF behaviour event related data collection and anomalous NF detection",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.9.1\tIntroduction",
                            "text_content": "The solution addresses KI#4 on Anomalous NF behaviour detection by NWDAF.\nThe solution describes various anomalous NF behaviour event related data collection and the related anomalous NF behaviour analytics exposure procedure.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.9.2\tSolution details",
                            "text_content": "A service consumer (i.e., OAM/AF/NF) can subscribe to the NWDAF and get notified about the anomalous NF behaviour related analytics using the procedure shown in Figure 6.9.2-1.\nThe figure depicts a 9-2-1 anomalous NF behavior event related network data analytics exposure procedure, illustrating the steps involved in identifying and mitigating such incidents.\nFigure 6.9.2-1: Anomalous NF behaviour event related network data analytics exposure procedure\nThe steps shown in figure 6.9.2-1 is described as follows:\n1.\tThe service consumer subscribes to the anomalous NF behaviour related analytics information by invoking the Nnwdaf_AnalyticsSubscription_Subscribe service operation message, with the analytics ID (set to the anomalous NF behaviour), list of event ID(s) (related to received messages (e.g., malformed messages) violating predefined service operation input or output formats, message requests exceeding configured limits, unintended or unrecognized configuration change/operational change, any errors notification), target of analytics (indicates NF ID(s)/AF ID(s), NF type) and may include other information for the analytics according to TS 23.288 Clause 6.1.3.\nIf the service consumer is already subscribed to the anomalous NF behaviour related analytics information, the service consumer requests analytics information by invoking Nnwdaf_AnalyticsInfo_Request service operation with the respective analytics ID and the target of analytics.\n2.\tWhen a request for analytics information is received, the NWDAF determines whether triggering new data collection is needed.\n3. If the NWDAF determine to perform data collection, it need to subscribe to 5GC NFs or AFs related event exposure services (i.e., via NEF if located externally) to be notified for data on a set of events as described in TS 23.288 Clause 6.2.2.1.\nThe NWDAF subscribes to set of event IDs (related to the service consumer's anomalous NF behaviour subscription which includes event IDs indicating messages (e.g., malformed messages) violating predefined service operation input or output formats, message requests exceeding configured limits, unintended or unrecognized configuration change/operational change, any error notification) by invoking the Nnf_EventExposure_Subscribe service operation.\n4. If the NWDAF subscribes to the set of event IDs (as in step 3), the NF manages the inference data which includes all event related information.\n5. The NF notifies the NWDAF (e.g., event specific inference data) by invoking the Nnf_EventExposure_Notify service operation.\n6. The NWDAF performs the requested analytics using the data collected from the NF.\nNOTE 1: The Anomalous NF behaviour analytics related implementation logic can be up to Operator's implementation and it is out of 3GPP scope.\nNOTE 2: If the data need to be collected from an AF, then in steps 3-6, the target AF will be involved instead of NF.\n7. If the service consumer is subscribed to analytics information, the NWDAF notifies the service consumer (i.e., based on the request from the service consumer using Nnwdaf_AnalyticsSubscription_Notify or Nnwdaf_AnalyticsInfo_Request response service operation), the Analytics Reporting Parameters includes the event specific anomalous NF behaviour analytics information. as shown in the table 6.9.2-1 and 6.9.2-2 respectively.\nNOTE 3: If the NF specific resource usage and load information are required additionally to process anomalous NF behaviour related analytics, then steps 2, 3a and 3b (as described in Solution 6) can be additionally performed.\nTable 6.9.2-1: Inputs collected by NWDAF from target of analytics (i.e., NFs) for other anomalous NF behaviour detection\n\nTable 6.9.2-2: Anomalous NF behaviour Statistics\n\nTable 6.9.2-3: Anomalous NF behaviour Predictions\n\nNOTE 4: The solution uses the existing method specified in TS 23.288 Clause 6.2.2.1 for data collection from NFs which involves notification of data on a set of events. The events do not indicate threats instead it is related to collection of information related to violations of expected/specified behaviours.\nNOTE 5a: This solution proposes to extend event exposure to NF related information, like malformed messages. The solution bases the normal behaviour (e.g., predefined service operation messages related inputs and outputs) as the reference to identify data related to any difference in behaviour i.e., violations, so it is sufficient and feasible. To minimize the impact with usage of NF Event Exposure APIs, the data collection can also be done via OAM.\nNOTE 5b: Key Issue #4, covers the scenario where the NFs can behave erroneously or anomalously, but the NWDAF is expected to support monitoring of NFs behaviour to ensure that, NFs behave as defined/specified. In the scope of the key issue #4, the solution assumes that the NWDAF can be trusted (e.g., aspects based on what a NWDAF can be trusted is up to operator implementation).\nNOTE 5c: Whether the inputs are sufficient and feasible is not addressed.\nNOTE 6: The list of input data and the output analytics (i.e., related to anomalous NF behaviour Statistics and predictions) are shown in Tables 6.9.2-1, 6.9.2-2, and 6.9.2-3. The input-based analytics output generation will depend on the algorithms or intelligence logic used and it is outside scope of 3GPP. The input data provides the information on set of violations attempted by various NFs and the NF lists communicated with the target NF from which the data is collected (e.g., via the OAM). Using the intelligence Algorithm whichever is applied based on operator's implementations can identify if there exist any attack traces, if yes, the source of the attack trace, and the other NFs which have communicated with the impacted NF and so on as listed in Tables 6.9.2-2 and 6.9.2-3 etc.,\nNOTE 7: The relationship between input and output is not addressed.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.9.2-1: Inputs collected by NWDAF from target of analytics (i.e., NFs) for other anomalous NF behaviour detection",
                                    "table number": 8,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.9.2-2: Anomalous NF behaviour Statistics",
                                    "table number": 9,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.9.2-3: Anomalous NF behaviour Predictions",
                                    "table number": 10,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.9.3\tEvaluation",
                            "text_content": "The solution addresses Key Issue #4 and has the following impacts:\nThis Solution assumes that NWDAF can be trusted. This solution extends event exposure to NF related information, like malformed messages.\nThe NWDAF need to support anomalous NF behaviour analytics subscription process, where the NWDAF need to collect data related to new events such as violation of predefined service operation message, message request load information, and security alerts in NFs. Further the NWDAF need to provide output related to anomalous NF behaviour statistics and predictions to detect any anomalous NF(s) and associated risk (if exists) to the subscribed anomalous NF behaviour analytics consumer(s).\nTo minimize the impact with usage of NF Event Exposure APIs, it is workable to consider Solution 6 as baseline for input data collection as defined in Clause 6.6.2.3. Furthermore, the inputs and output parameters defined in the solution 9 can be merged with the ones proposed in solution 6 to have a comprehensive detection mechanism.\nThe solution does not provide evidence for abnormal NF detection precision, false positive rate, false negative rate. Without that, the administrator may take wrong action for the wrong detection so that the network may face unsecure configuration risk. As the Intelligence algorithm used in the analytics related to Anomalous NF behaviour is up to operator implementation, it is recommended that a selection of an algorithm can consider their performance metrics e.g., abnormal NF detection precision, false positive rate, false negative rate etc.,\nInput about anomalous NF behaviour itself can be sensitive data, which needs to be considered before exposing it to other NFs.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.10\tSolution #10: Authorization of AI/ML model sharing between different vendors and usage of one-time URLs",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.10.1\tIntroduction",
                            "text_content": "This solution addresses key issue # 3 (security for AI/ML model storage and sharing) considering that the consumer (NWDAF containing AnLF) and the producer (NWDAF containing MTLF) can be different vendors.\nThe second requirement of the key issue is about enabling the ML model storage to ensure that the NFc is authorized by the NFp to retrieve the model. According to this solution, the NFp retrieves a one-time URL from the ADRF and then shares the one-time URL with the NFc. To be able to access to the model, the NFc has to know the one-time URL, which implies that the URL has been shared with the NFc by the NFp after authorization of the NFc by the NFp.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.10.2\tSolution details",
                            "text_content": "The steps of the procedure depicted in Figure 6.10.2-1 are explained below.\nThe figure depicts a model sharing between two NWDAF (Network Wide Data Access Framework) containing MtLF (Multi-Layer Forwarding) and AnLF (Adaptive Layer Forwarding) from different vendors. The NWDAF is a key component in the network, facilitating data sharing and forwarding between different layers. The model sharing allows for efficient data transmission and reduces the need for redundant paths, ensuring reliable and efficient data transmission.\nFigure 6.10.2-1: Model sharing between NWDAF containing MtLF and NWDAF containing AnLF from different vendors\nSteps:\n0a. The NFp registers with the NRF using the interoperability ID. It is assumed that the NRF verifies the vendor ID of the NFp.\n0b. The NFc registers with the NRF using the vendor ID. It is assumed that the NRF verifies the vendor ID of the NFc.\nAssumption: The NRF can verify the Vendor ID of the NWDAF containing AnLF.\nNOTE 1: Alignment with TS 23.288[5] for the overall procedure and usage of vendor ID is not addressed in the present document.\nNOTE 2:Alignment with the resolution of Key Issue #11 NRF validation of NFc for access token requests in TR 33.875 [10] on how the NRF verifies the Vendor ID of the NWDAF is not addressed in the present document.\n0c. The NFp performs some operations for security of the ML model, such as encryption and integrity protection. These operations are out of scope of the solution.\n1. If the NFp wants to store the ML model in the ADRF, the NFp triggers storing the ML model in the ADRF. For downloading the model by the ADRF, the NFp provides the address (URL1) of the model in the NFp. Also, the NFp can send the model correlation ID to the ADRF.\n2. ADRF securely fetches the protected model. The fetch method and its security are out of scope.\n3. The ADRF sends the location of the model (URL2) to the NFp to be used for the NFp to update or access the model in a later point in time.\n4. The NFc executes the discovery procedure with the NRF.\n5. The NFc request a token from the NRF indicating the analytics ID.\n6. The NRF checks whether the vendor ID of the NFc, stored in the profile of the NFc in the NRF, is one of the vendor ID in the interoperability ID in the NFp profile. If the check is successful, then the NRF issues a token that includes the vendor ID of the NFc.\n7. The NFc sends the Model request including the token to the NFp.\n8. The NFp validate the token and can perform further authorization using the vendor ID specified in the token.\nSteps 9 and 10 are executed if the model is stored in the ADRF.\n9. After successful authorization, the NFp request a URL, which can be usable only once, from the ADRF.\n10. The ADRF checks if the stored model owner is the NFp. If the check is successful, the ADRF provides a URL (URL3) for the stored model. The URL3 can be a URL that is used only once (one time URL).\nNOTE:\tHow to provide one time URL by the ADRF is implementation detail which is out of scope of the solution.\n11. The NFp provides the URL3 received from the ADRF to the NFc if the model is stored in the ADRF. If the model is stored in the NFp, then the NFp provides the location of the model in the NFp (URL4).\n12. The NFc fetches the protected model from the NFp (step 12a) or ADRF (step 12b). The fetch method and its security are out of scope.\n13. The NFc performs some operations considering the interoperability ID on the protected ML model such as decryption and integrity check. These operations and keys are out of scope of the solution.\nNote that the one-time URL is protected using the current SBA mechanism, so that it cannot be eavesdropped by unauthorized entities. Using one-time URLs further reduces the risk that URLs are leaked and used by unauthorized entities, since the one-time URL will not be valid after the authorized NFp has used it to retrieve the model.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.10.3\tEvaluation",
                            "text_content": "This solution addresses ML model sharing between NFs from different vendors, by allowing the NFp to do further authorization check for model sharing using the vendor id of the NFc. The solution focuses on the ML model downloading via URL case.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.11\tSolution #11: Secured and authorized AI/ML model sharing between different vendors",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.11.1\tIntroduction",
                            "text_content": "This addresses KI#3 on security for AI/ML model storage and sharing, specifically the following security requirements.\n-\tAI/ML models shall be protected between the entity which produces the ML model or stores the ML model in ADRF (e.g., NWDAF containing MtLF, NFp) and the entity which consumes the model (NFc).\n-\tADRF (Analytical Data Repository Function), or any other network function which may store the AI/ML model, shall be able to authorize the NFc to retrieve that AI/ML model\n-\tNF Service consumers shall be authorized to access to the AI/ML models in the ADRF (or any other NF which may store the ML model, for instance NWDAF MtLF).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.11.2\tSolution details",
                            "text_content": "The solution defines a secured AI/ML model transfer and retrieval mechanism between different vendors which includes confidentiality and integrity protection, along with the authorization for retrieval of AI/ML models in 5GS.\nThe procedure is as follows:\nThe figure depicts a secure and authorized AI/ML model sharing environment, showcasing various vendors' AI/ML models, secure access controls, and data protection measures. It highlights the importance of data privacy and security in the AI/ML ecosystem, emphasizing the need for collaboration and cooperation among different vendors to ensure the integrity and reliability of AI/ML models.\nFigure 6.11.2-1: Secured and authorized AI/ML model sharing between different vendors\n0a. NF Service producer e.g., NWDAF containing MTLF registers its NF profile in the NRF with Analytics ID(s) and Interoperability ID(s). Interoperability ID is a list of Vendor IDs which are allowed to access the ML models per Analytics ID.\n0b. NF Service consumer e.g., NWDAF containing AnLF registers its NF profile in the NRF with Analytics ID(s) supported by NWDAF containing AnLF and its Vendor ID;\nAssumption: The NRF can verify the Vendor ID of the NWDAF containing AnLF.\nNOTE a:Alignment with the resolution of Key Issue #11 NRF validation of NFc for access token requests in TR 33.875 [10] on how the NRF verifies the Vendor ID of the NWDAF is not addressed in the present document.\n0c. NWDAF containing MTLF may encrypt the ML model per MTLF vendor's implementation and how the model is encrypted is outside of 3GPP scope.\n1. \tNWDAF containing MTLF triggers the ADRF storage service, with Model address in MTLF(URL1), Analytics ID and Interoperability ID in the message.\n2. \tADRF sends the response to NWDAF containing MTLF which contains the model address in ADRF(URL2).\nNOTE 1: \tThe signalling how the ADRF retrieves the Model from NWDAF containing MTLF is outside of 3GPP scope.\n2a. \tADRF registers its NF profile in the NRF with Analytics ID, Interoperability ID and NWDAF ID containing MTLF for the stored Model.\n3. \tNF Service consumer e.g., NWDAF containing AnLF performs Nnrf_NFDiscovery_Request operation with the requested Analytics ID to select a suitable NF Service Producer e.g., NWDAF containing MTLF.\n4a. \tNF Service consumer e.g., NWDAF containing AnLF requests an access token from the NRF using the Nnrf_AccessToken_Get request operation. The token request message contains target NF (NWDAF containing MTLF), NF type and/or NF ID of NWDAF containing AnLF, Vendor ID of NWDAF containing AnLF, Analytics ID.\n4b. \tNRF checks whether the NWDAF containing AnLF is authorized to access the requested service in NWADF containing MTLF and verifies that the NWDAF containing AnLF's Vendor ID is included in the NWADF containing MTLF 's Interoperability ID for the Analytics ID and grants the token (token1), based the information provided in NWADF containing MTLF's NF profile.\n5. \tNWDAF containing AnLF performs Nnwdaf_MLModelProvision (Analytics ID, Vendor ID and token1) service operation to NWDAF containing MTLF to retrieve ML models for the Analytics ID.\n6. \tNWDAF containing MTLF verifies the access token (token1) and determine the ML model to be shared for the requested Analytics ID. If the determined ML model is stored in ADRF, NWDAF containing MTLF sends Nnwdaf_MLModelProvision Notification to NWDAF containing AnLF with an indication where the Model is stored (e.g. ADRF) and the address of Model in ADRF(URL2).\n7a. \tNWDAF containing AnLF requests an access token from the NRF to be authorized to retrieve the model stored in ADRF. The token request message contains target NF (ADRF), NF type and/or NF ID of NWDAF containing AnLF, Vendor ID of NWDAF containing AnLF, Analytics ID, the Model producer NF ID i.e. NWDAF ID containing MTLF.\n7b.\tNRF verifies that the NWDAF containing AnLF's Vendor ID is included in the Interoperability ID for the Analytics ID of Model producer NF i.e. NWDAF containing MTLF in the ADRF's NF profile. If verification is successful, NRF grants the token (token2), based the information provided in ADRF's NF profile.\n8. \tNF Service consumer e.g., NWDAF containing AnLF retrieves the target model via the URL2 together with the token2. ADRF verifies the token2 to check if the NF Service consumer e.g., NWDAF containing AnLF is authorized to access the stored model. If authorization is successful, ADRF grants the NWDAF containing AnLF to retrieve the stored Model.\nNOTE 2: The signalling how the NWDAF containing AnLF retrieves the Model from ADRF is outside of 3GPP scope.\nNOTE 3: Alignment with TS 23.288[5] on the overall procedure and usage of vendor ID is not addressed in the present document.\n9.\tNWDAF containing AnLF decrypts the received model per the vendor's implementation and how the model is decrypted is outside of 3GPP scope.\nNOTE 4: If only interoperability indicator is sufficient for ensuring authorization of ML Model is not addressed in the present document.\nNOTE 5: How the solution addresses the first security requirement is not addressed in the present document\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.11.3\tEvaluation",
                            "text_content": "This solution resolves Key Issue #3: Security for AI/ML model storage and sharing.\nIn this solution it is assumed e2e encryption of the ML model is achieved by the vendor's implementation of the NF producer which generates the AI/ML model. How the model is encrypted in the NF producer or decrypted in the NF consumer is outside of 3GPP scope.\nIn this solution, when NF producer stores the ML model in ADRF, it provides the URL where the ML model is stored in the NF producer to the ADRF. The NF producer also provides the ADRF with Interoperability ID together with the stored ML Model. And ADRF provides the URL where the ML model is stored in the ADRF back to the NF producer once the ML model is stored in ADRF. ADRF also stores the received Interoperability ID in the NRF which is used by the NRF to perform authorization of token request to retrieve ML model from ADRF.\nIn this solution, service authorization of ML model retrieval is performed at the NRF using token-based authorization. If NF consumer is requesting token to retrieve ML model from NF producer, NRF checks the vendor ID of the NF consumer is included in Interoperability ID that is stored in NRF by the NF producer. If NF consumer is requesting token to retrieve ML model from ADRF, NRF checks the vendor ID of the NF consumer is included in Interoperability ID that is stored in NRF by ADRF.\nWhen NF consumer requests the ML model from the NF producer, the NF producer checks that if the NF consumer is authorized to retrieve ML model based on the received token and determines the ML model to be shared for the requested Analytics ID. The NF producers provides the URL where the ML model is stored, either in NF producer or ADRF.\nWhen NF consumer retrieves the ML model from the ADRF, the ADRF checks that if the NF consumer is authorized to retrieve ML model based on the received token.\nIt is assumed the actual signalling how the NF consumer retrieves the Model from ADRF or NF producer, or how the ADRF retrieves the Model from the NF producer is outside of 3GPP scope.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.12\tSolution #12: Secured and authorized AI/ML model sharing between different vendors",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.12.1\tIntroduction",
                            "text_content": "This addresses KI#3 on security for AI/ML model storage and sharing, specifically the following security requirements.\n-\tAI/ML models shall be protected between the entity which produces the ML model or stores the ML model in ADRF (e.g., NWDAF containing MtLF, NFp) and the entity which consumes the model (NFc).\n-\tADRF (Analytical Data Repository Function), or any other network function which may store the AI/ML model, shall be able to authorize the NFc to retrieve that AI/ML model\n-\tNF Service consumers shall be authorized to access to the AI/ML models in the ADRF (or any other NF which may store the ML model, for instance NWDAF MtLF).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.12.2\tSolution details",
                            "text_content": "The solution defines a secured AI/ML model transfer and retrieval mechanism between different vendors which includes confidentiality and integrity protection, along with the authorization for retrieval of AI/ML models in 5GS.\nThe procedure is as follows:\nThe figure depicts a secure and authorized AI/ML model sharing environment, showcasing various vendors' AI/ML models, secure access controls, and data protection measures. It highlights the importance of data privacy and security in the AI/ML ecosystem, emphasizing the need for collaboration and cooperation among different vendors to ensure the integrity and reliability of AI/ML models.\nFigure 6.12.2-1: Secured and authorized AI/ML model sharing between different vendors\n0a. NF Service producer e.g., NWDAF containing MTLF registers its NF profile in the NRF with Analytics ID(s) and Interoperability ID(s). Interoperability ID is a list of Vendor IDs which are allowed to access the ML models per Analytics ID.\n0b. NF Service consumer e.g., NWDAF containing AnLF registers its NF profile in the NRF with Analytics ID(s) supported by NWDAF containing AnLF and its Vendor ID;\nAssumption: The NRF can verify the Vendor ID of the NWDAF containing AnLF.\nNOTE 1:Alignment with the resolution of Key Issue #11 NRF validation of NFc for access token requests in TR 33.875 [10] on how the NRF verifies the Vendor ID of the NWDAF is not addressed in the present document.\n1. \tNWDAF containing MTLF may encrypt the ML model per MTLF vendor's implementation and how the model is encrypted is outside of 3GPP scope.\n2. \tNF Service consumer e.g., NWDAF containing AnLF performs Nnrf_NFDiscovery_Request operation with the requested Analytics ID to select a suitable NF Service Producer e.g., NWDAF containing MTLF.\n3. \tNF Service consumer e.g., NWDAF containing AnLF requests an access token from the NRF using the Nnrf_AccessToken_Get request operation with the requested Analytics ID and its own Vendor ID.\n4. \tNRF checks whether the NWDAF containing AnLF is authorized to access the requested service in NWADF containing MTLF and verifies that the NWDAF containing AnLF's Vendor ID is included in the NWADF containing MTLF 's Interoperability ID for the Analytics ID and grants the token (token1), based the information provided in NWADF containing MTLF's NF profile.\n5. \tNWDAF containing AnLF performs Nnwdaf_MLModelProvision (Analytics ID, Vendor ID, token1,) service operation to NWDAF containing MTLF to retrieve ML models for the Analytics ID.\n6. \tNWDAF containing MTLF verifies the access token (token1) and determine the ML model to be shared for the requested Analytics ID. If the determined ML model is stored in NWDAF containing MTLF, NWDAF containing MTLF sends Nnwdaf_MLModelProvision Notification to NWDAF containing AnLF with the address of Model file in NWDAF containing MTLF(URL1).\n7. \tNF Service consumer e.g., NWDAF containing AnLF retrieves the target model via the URL1 together with the token1. NWDAF containing MTLF verifies the token1 to check if the NF Service consumer e.g., NWDAF containing AnLF is authorized to access the stored model. If authorization is successful, NWDAF containing MTLF grants the NWDAF containing AnLF to retrieve the stored Model.\nNOTE 2: The signalling how the NWDAF containing AnLF retrieves the Model from NWDAF containing MTLF is outside of 3GPP scope.\n8.\tNWDAF containing AnLF decrypts the received model per the vendor's implementation and how the model is decrypted is outside of 3GPP scope.\nNOTE 3: Alignment with TS 23.288[5] on the overall procedure and usage of vendor ID is not addressed in the present document.\n\nNOTE 4: How the solution addresses the first requirement is not addressed in the present document\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.12.3\tEvaluation",
                            "text_content": "This solution resolves Key Issue #3: Security for AI/ML model storage and sharing. It covers the scenario where NF consumer retrieves ML model from the NF producer where the ML model is locally stored in the NF producer.\nIn this solution it is assumed e2e encryption of the ML model is achieved by the vendor's implementation of the NF producer which generates the AI/ML model. How the model is encrypted in the NF producer or decrypted in the NF consumer is outside of 3GPP scope.\nIn this solution, service authorization of ML model retrieval is performed at the NRF using token-based authorization. When NF consumer is requesting token to retrieve ML model from NF producer, NRF checks the vendor ID of the NF consumer is included in Interoperability ID that is stored in NRF by the NF producer.\nWhen NF consumer requests the ML model from the NF producer, the NF producer checks that the NF consumer is authorized to retrieve ML model based on the received token and determines the ML model to be shared for the requested Analytics ID.\nIt is assumed the actual signalling how the NF consumer retrieves the Model from NF producer is outside of 3GPP scope.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.13\tSolution #13: Support authorization of AI/ML model sharing By NWDAF containing MTLF",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.13.1\tIntroduction",
                            "text_content": "This solution addresses Key issue #3: Security for AI/ML model storage and sharing.\nSince ML models are generally proprietary per provider and subject to intellectual property rights, NF Service consumers are authorized by the producer of the Model, i.e. NWDAF containing MTLF to access to the AI/ML models stored either in NWDAF containing MTLF or ADRF.\nThis solution proposes that NWDAF containing MTLF to check the Vendor ID of NF consumer with its local authorization policy (e.g., Interoperability Indicator), upon receiving request to retrieve ML model trained by the NWDAF containing MTLF.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.13.2\tSolution details",
                            "text_content": "Figure 6.13.2-1 illustrates the high-level procedure of the proposed solution.\nThe figure depicts a high-level procedure for authorization of Machine Learning (ML) sharing by the National Wireless Data Access Forum (NWDAF) containing Machine Learning and Telecommunication (MLT) sharing. The procedure includes steps for ML sharing, MLT sharing, and ML sharing with MTLF. The figure illustrates the process with a flowchart and a diagram, highlighting the steps and the use of different colored lines to represent different stages of the process.\nFigure 6.13.2-1: High-level procedure for authorization of ML sharing by NWDAF containing MTLF\n0a. NWDAF containing AnLF registers its NF profile in the NRF with Analytics ID(s) supported by NWDAF containing AnLF and its Vendor ID.\nAssumption: The NRF can verify the Vendor ID of the NWDAF containing AnLF.\nNOTE 1:Alignment with the resolution of Key Issue #11 NRF validation of NFc for access token requests in TR 33.875 [10] on how the NRF verifies the Vendor ID of the NWDAF is not addressed in the present document.\n0b. NWDAF containing MTLF trains ML model and may encrypt the ML model per its vendor's implementation and how the Model is encrypted is outside of 3GPP scope.\n1. \tNWDAF containing MTLF determines the ML model can be stored in ADRF. NWDAF containing MTLF discovers and selects ADRF via NRF and stores the selected ADRF instance ID for the Model.\n2. \tNWDAF containing MTLF triggers the ADRF storage service to ADRF, with the Model Correlation ID and Model address in MTLF(URL1) in the message.\n3. \tADRF securely fetches the Model via URL1 from NWDAF containing MTLF. NWDAF containing MTLF verifies that the ADRF is the selected ADRF instance in step 2 and checks that the Model Correlation ID is correct. It is assumed there is no need to verify the vendor ID of ADRF.\nNOTE 1: \tThe signalling how the ADRF retrieves the Model from NWDAF containing MTLF is outside of 3GPP scope.\n4. \tADRF sends the response to NWDAF containing MTLF, with the model address in ADRF(URL2) in the message.\n5. \tNWDAF containing AnLF performs discovery and selection procedure for NWDAF containing MTLF via NRF.\n6. \tNWDAF containing AnLF performs Nnwdaf_MLModelProvision service operation to NWDAF containing MTLF, with Analytics ID and Vendor ID in the message, to retrieve ML models for the Analytics ID.\n7. \tNWDAF containing MTLF retrieves the NF profile of the NWDAF containing AnLF from NRF and gets NWDAF containing AnLF's Vendor ID from the NF profile. NWDAF containing MTLF verifies that the NWDAF containing AnLF's Vendor ID in the request message is same as the Vendor ID in its NF profile and is included in the Interoperability ID for the Analytics ID.\nNOTE 1a: Whether MTLF can also verify the Vendor ID of the AnLF based on the authentication procedure for the AnLF is not addressed in the present document.\nIf verification is successful, NWDAF containing MTLF determines the ML model to be shared for the requested Analytics ID and stored the NF instance ID of NWDAF containing AnLF as part of allowed NF instance list for the ML model.\n8. \tIf the determined ML model is stored in ADRF, NWDAF containing MTLF triggers the ADRF storage Update service to ADRF, with the Model Correlation ID and allowed NF instance list in the message. The ADRF stores the allowed NF instance list for the ML model referenced by the Model Correlation ID.\n9.\tNWDAF containing MTLF sends Nnwdaf_MLModelProvision Notification to NWDAF containing AnLF with the address of the determined ML model in the message, which can be either the one stored in NWDAF containing MTLF or in ADRF.\n10. NWDAF containing AnLF retrieves the target ML model via the URL received from step 9.\nIf the ML model is stored in NWDAF containing MTLF, NWDAF containing MTLF verifies that the NWDAF containing AnLF is the stored NF consumer instance in step 7. If the ML model is stored in ADRF, ADRF verifies that the NWDAF containing AnLF is part of allowed NF instance list received in step 8. If verification is successful, NWDAF containing AnLF is authorized to retrieve the ML model.\nNOTE 2: The signalling how the NWDAF containing AnLF retrieves the Model from NWDAF containing MTLF or ADRF is outside of 3GPP scope.\n11.\tNWDAF containing AnLF decrypts the received ML model per the vendor's implementation and how the ML model is decrypted is outside of 3GPP scope.\nNOTE 3: How the solution addresses the first security requirement is not addressed in the present document.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.13.3\tEvaluation",
                            "text_content": "This solution resolves Key Issue #3: Security for AI/ML model storage and sharing.\nIn this solution it is assumed e2e encryption of the ML model is achieved by the vendor's implementation of the NF producer which generates the AI/ML model. How the model is encrypted in the NF producer or decrypted in the NF consumer is outside of 3GPP scope.\nIn this solution, when NF producer stores the ML model in ADRF, it provides the URL where the ML model is stored in the NF producer to the ADRF. And ADRF provides the URL where the ML model is stored in the ADRF back to the NF producer once the ML model is stored in ADRF.\nThe NF producer maintains a list of NF consumer instances and/or a list of ADRF instances that are allowed to retrieve the ML model from the NF producer. The NF producer provides and updates ADRF with a list of allowed NF consumer instances for the stored ML model in ADRF.\nWhen NF consumer requests the ML model from the NF producer, the NF producer verifies the vendor ID of the NF consumer based on NF profile of the NF consumer that is stored in NRF and checks the vendor ID is included in Interoperability ID of the NF producer. If the NF consumer is authorized, the NF producer determines the ML model to be shared for the requested Analytics ID and provides the URL where the ML model is stored, either in NF producer or ADRF. The NF producer also adds the NF consumer into the list of allowed NF consumer instances.\nWhen NF consumer retrieves the ML model from the ADRF, the ADRF checks that the NF consumer is included in the list of allowed NF consumer instances for the stored ML model.\nIt is assumed the actual signalling how the NF consumer retrieves the Model from ADRF or NF producer, or how the ADRF retrieves the Model from the NF producer is outside of 3GPP scope.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.14\tSolution #14: Protection of data and analytics exchange in roaming case using Secure Multi-party Computation",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.14.1\tIntroduction",
                            "text_content": "This solution is addressing on KI#1.\nIn the scenario where the NWDAF consumer collects data from multiple PLMNs, PLMNs need the ability to control the amount of data exposed and to abstract or hide network-internal aspects based on operator policy, regulatory constraints and/or roaming agreements. But if the data processed method used by different PLMNs is different, it is possible that the data converged in NWDAF consumer could not be effective used.\nTo ensure data provided by multiple data sources can be used and to protect sensitive data not exposed to other operators, this solution proposes a security protection scheme based on secure multi-party computation.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.14.2\tSolution details",
                            "text_content": "This contribution introduce a data privacy computing function to proceed data anonymization or desensitization.\nWhen the NWDAF of the visited network initiates a data request across the network, it sets a priority list (1, 2, 3...) according to the number of destination operators, and assigns the priority value to different home operators though encapsulating the value \"priority=X (X=1, 2, 3...)\" in the service request message. The parameter \"priority indicator\" includes the priority of the current network, the priority of other networks and the network address. After the home operator NFp receives the service request, the NFp returns the requested data and priority value to the data privacy computing function DPCF. After the DPCF receives the data and the priority value, the DPCF1 of the home network PLMN1 with the higher priority initiates an request to the DPCF2 of the other home network PLMN2 with the lower priority. After the DPCF2 verifies the priority, the DPCF1 and DPCF2 will use secure multi-party computation to proceed data anonymization or desensitization.\nThe scenario is NWDAF in visit network collecting data from multiple home operators, DPCF performs a secure multi-party computation process.\nThe figure depicts a network topology with various components, including a base station (BTS), a user equipment (UE), and a set of optical fibers. The diagram illustrates the network's architecture, highlighting the use of redundant paths and the importance of network virtualization for improved performance and reliability.\nFigure 6.14.2.2-1\nStep 1: The visiting NWDAFc sends a token request to the hNRF of the home network via vNRF. The message should contain NF consumer type, target NF type, expected NF Service name and requested data type.\nStep 2: The home network hNRF verifies the relevant parameters and the requested data type, then determines whether the requested data type can be obtained by the visiting operator according to the local policy.\nStep 3: If the verification is ok, hNRF returns the token to NWDAFc, and the data type that can be obtained should be indicated in the token.\nStep 4: NWDAFc sends a data collection request to NWDAF1 of PLMN2, carrying parameters including token, PLMN ID, and priority indicator.\nStep 5: The home NWDAF verifies the service request, including verifying token, PLMN ID and whether the data type in the token is consistent with the requested data.\nStep 6: NWDAF1/NWDAF2 collects data from other NFs\nStep 7: NFWDAF1/NWDAF2 returns the raw data and priority indicator to DPCF.\nStep 8: DPCF1 initiates secure multi-party computation process with DPCF2 in other home operators network..\nNote 1: \tDPCF2 in PLMN3 needs to receive unprocessed data and priority indicator returned from NWDAF2.\nStep 9: DPCF1/DPCF2 returns the processed data to NWDAFC\nNOTE 1a: How the precedure align with TS 23.288[5] is not addressed in the present document.\nNOTE 2: The participant operators need to agree on secure MPC scheme.\nNOTE 3: The necessity of the new interface is not addressed in the present document.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.14.3\tEvaluation",
                            "text_content": "NOTE : Further evaluation is not addressed in the present document.\nThis solution fulfil the requirement of KI #1 when NWDAF consumer collects data from multiple PLMNs.\nThis solution requires a new network function and requires the participant operators agree on the secure MPC scheme.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.15\tSolution #15: Authorization of selection of participant NWDAF instances in the FL group",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.15.1\tIntroduction",
                            "text_content": "The solution addresses KI#2 on authorization of selection of participant NWDAF instances in the Federated Learning group.\nFor the client NWDAF's authorization to join a FL group, as per TR 23.700-81's conclusion to KI#8: supporting federated learning in 5GC, server NWDAF selects client NWDAFs from NRF and client NWDAF cannot request to join a FL group. Since client NWDAF joins a FL group only when it is selected by server NWDAF, client NWDAF is authorized to join the FL group by server NWDAF at the same time.\nFor the server NWDAF's authorization to include a client NWDAF into a FL group, this solution proposes that client NWDAF registers to NRF with the permitted-server-NWDAF list for each supporting Analytics ID. When a server NWDAF discovers client NWDAFs for an Analytics ID from NRF, NRF only returns client NWDAFs whose permitted-server-NWDAF list for this Analytics ID includes the server NWDAF. When server NWDAF requests access token, NRF also checks if the server NWDAF is on the permitted-server-NWDAF list.\nNOTE: \tWhen new permitted server NWDAFs are introduced, the client NWDAF needs to update its permitted-server-NWDAF list.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.15.2\tSolution details",
                            "text_content": "The figure depicts a 5G network with various components such as base stations (gNB), user equipment (UE), and scatterers. The diagram illustrates the signal propagation in a 5G network, highlighting the multi-path signal path and beamforming techniques to mitigate interference. The fiber-optic backbone architecture is shown, with core switches, optical line terminals (OLTs), and distributed nodes. Redundancy paths are depicted in dashed lines, ensuring failover reliability. The layered design aligns with SDN principles.\nFigure 6.15.2-1\nStep 1: NWDAF registers to NRF with its FL related information including Analytics ID(s), FL capability type (i.e. FL server or FL clients), permitted-server-NWDAF list for each Analytics ID when this NWDAF serves as a FL client, etc.\nStep 2: Server NWDAF sends discovery request to NRF to find client NWDAFs for an Analytics ID.\nStep 3: NRF returns candidate client NWDAFs whose permitted-server-NWDAF list for this Analytics ID includes the server NWDAF.\nStep 4: Server NWDAF sends access token requests to NRF for each selected client NWDAFs of the Analytics ID.\nStep 5: When the server NWDAF is on the selected client NWDAF's permitted-server-NWDAF list for this Analytics ID, NRF grants access token to the server NWDAF.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.15.3\tEvaluation",
                            "text_content": "This solution addresses KI#2: authorization of selection of participant NWDAF instances in the Federated Learning group.\nThis solution reuses the existing SBA security mechanism and proposes that server NWDAF is authorized based on the permitted-server-NWDAF list which client NWDAF registers to NRF. When new permitted server NWDAFs are introduced, the list needs to be updated.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.16\tSolution #16: FL GROUP AUTHORIZATION OF NWDAF(S) IN 5GC",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.16.1\tIntroduction",
                            "text_content": "This solution addresses Key Issue #2 (Authorization of selection of participant NWDAF instances in the Federated Learning group). The proposed solutions use existing SBA architecture for token-based authorization.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.16.2\tSolution details",
                            "text_content": "The detailed procedure for NWDAF AnLF/NWDAF MTLF (FL Server) to get token from NRF and receive services from NWDAF MTLF (FL Server)/NWDAF MTLF (FL Client) is depicted in Figure 6.Y.2-1\nThe figure depicts a network diagram with various components, including a NWDAF AnLF/NWDAF MTLF (FL Server) authorization to receive services from NWDAF MTLF (FL Server) and NWDAF MTLF (FL Client). The diagram illustrates the authorization process, with the NWDAF MTLF (FL Server) and NWDAF MTLF (FL Client) being the primary focus. The NWDAF AnLF/NWDAF MTLF (FL Server) is a key component, as it is responsible for receiving and processing authorization requests from the NWDAF MTLF (FL Server). The FL Server is the central point of the authorization process, where authorization requests are received and processed. The FL Client is the user interface for the authorization process, where users can submit their requests and receive authorization status updates. The diagram also includes redundancy paths, which ensure that the authorization process can be completed even in the event of a failure.\nFigure 6.16.2-1: NWDAF AnLF/NWDAF MTLF (FL Server) Authorization to receive services from NWDAF MTLF (FL Server)/NWDAF MTLF (FL Client)\nNOTE 1: \tSteps 1 to 4 are not specific to FL scenario but details existing mechanisms. Step 5 to 13 are related to FL scenario.\n0. NWDAF registers with NRF. If NWDAF MTLF as FL server determines ML model requires FL, the FL Server discovers and selects other NWDAF(s) MTLF as FL Client(s) from NRF. If NWDAF MTLF without FL server capability determines ML model requires FL, the MTLF discovers and selects FL sever from NRF.\n1-3. NF(NWDAF AnLF or MTLF) Service Consumer sends a request to the NRF to receive an access token to request NWDAF MTLF (FL Server) services. NRF, after verifying, generates an access token and sends it to the NF(NWDAF ANLF OR MTLF) Service Consumer. Access tokens contain NWDAF MTLF (FL Server specific token).\n4.\tThe NF(NWDAF AnLF OR MTLF) Service Consumer initiates an NF service request to the NWDAF MTLF (FL Server), which includes the access_token_nwdaf. The NF(NWDAF AnLF OR MTLF) Service Consumer also generates a Client Credentials Assertion (CCA) token (CCA_NWDAF) and includes it in the request message to authenticate itself towards the NF Service Producers.\n5.\tThe NWDAF MTLF (FL Server) verifies if the access_token_nwdaf is valid and starts FL group.\n6.\tIf The NWDAF MTLF (FL Server) determines to start the FL group for analytics id, The NWDAF MTLF (FL Server) sends a Nnrf_AccessToken_Get request to NRF including the information to identify the target NF (NWDAF MTLF (FL Client)), the source NF (NWDAF AnLF OR MTLF) Service Consumer, the NF Instance ID of NWDAF MTLF (FL Server) , Analytics ID, FL local model training service type, FL group ID and the CCA_NWDAF provided by the NF(NWDAF AnLF OR MTLF) Service Consumer.\n7.\tThe NRF checks whether the NWDAF MTLF (FL Server) and the NF(NWDAF ANLF OR MTLF) Service Consumer (e.g. NWDAF) are allowed to access the service provided by the identified NF Service Producers(NWDAF MTLF (FL Client)) for the given Analytics ID included in step 6, and the NWDAF MTLF (FL Server). NRF authenticates both NWDAF MTLF (FL Server) and NWDAF(FL consumer, e.g., AnLF) based on one of the SBA methods described in clause 13.3.1.2 of TS 33.501. NWDAF MTLF (FL Server) may include an additional CCA for authentication.\n8.\tThe NRF, after successful verification, then generates and provides an access token to the NWDAF MTLF (FL Server); the claims in the token include the NF Instance Id of NRF (issuer), NF Instance Id of the NF Service Consumer (subject), NF type of the NF Service Producer (audience), expected service name(s), (scope), expiration time (expiration), FL group ID, Analytics ID(s), ML model ID(s) and optionally \"additional scope\" information (allowed resources and allowed actions (service operations) on the resources), with NF(NWDAF AnLF OR MTLF) Service Consumer Instance (subject), to authorize both NF(NWDAF AnLF OR MTLF) Service Consumer (e.g.. NWDAF) and NWDAF MTLF (FL Server) to consume the services of NWDAF MTLF (FL Client).\nNOTE 2: Usage of Model ID and FL group ID and alignment with TS 23.288[5] is not addressed in the present document.\n9.\tNWDAF MTLF (FL Server) finalize the FL group with NWDAF MTLF (FL Client) selected from the list received from NRF.\n10. The NWDAF MTLF (FL Server) requests service (local model updates) from the NWDAF MTLF (FL Client). The request also consists of CCA_NWDAF so that the NF Service Producer(s) authenticates the NF(NWDAF ANLF OR MTLF) Service Consumer (e.g., NWDAF).\n11.\tThe NWDAF MTLF(s) (FL client) authenticates the NF(NWDAF AnLF OR MTLF) Service Consumer and verifies the access token, and ensures that the NWDAF MTLF (FL Server) identity, FL group ID, Analytics ID(s), ML model ID(s) is included as an access token additional claim.\n12. The NWDAF MTLF(s) (FL client) provides requested data to the NWDAF MTLF (FL Server). Global Model updates/aggregation is done at NWDAF MTLF (FL Server).\n13. NWDAF MTLF (FL Server) feedback on the NF Service Response.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.16.3\tEvaluation",
                            "text_content": "This solution reuses the existing 5GS security mechanisms, including the current SBA security mechanisms.\nNWDAF MTLF (FL Server) can select which Federated Learning task it wants to create by verifying the access token presented by the NWDAF AnLF. NWDAF MTLF (FL Client) can select which Federated Learning group it wants to join by verifying the access token presented by the NWDAF MTLF (FL Server). The solution fulfils the following requirements of KI 1.2:\nAuthorization of selection of participant NWDAF instances in the Federated Learning group needs to be supported:\nA server NWDAF needs to be authorized to include a client NWDAF in a Federated Learning group. A client NWDAF needs to be authorized to join a Federated Learning group.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.17\tSolution #17: Authorization of FL Server and FL Client in FL group",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.17.1\tIntroduction",
                            "text_content": "This solution addresses Key issue #2: Authorization of selection of participant NWDAF instances in the Federated Learning group.\nAs per KI#2, both server NWDAF and client NWDAF need to be authorized for FL procedure.\n- A server NWDAF needs to be authorized to include a client NWDAF into a Federated Learning group.\n- A client NWDAF needs to be authorized to join a Federated Learning group.\nFor initiation of FL procedure or reselection of FL client(s) into a FL procedure, the server NWDAF triggers discovery and selection of NWDAF(s) and sends FL request to the client NWDAF.\n-\tAt the client NWDAF side, authorization of the server NWDAF that it can include the client NWDAF into the FL group can be achieved by reusing existing SBA token-based authorization upon receiving FL request.\n-\tAt the server NWDAF side, authorization of the client NWDAF to be included into a FL group is implicitly achieved as the server NWDAF only triggers the selection of FL client(s) into the FL group that it authorizes to be included.\nThis solution also considers interoperability of different vendors of Server and Client NWDAF(s).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.17.2\tSolution details",
                            "text_content": "Figure 6.17.2-1 illustrates the high-level procedure of the proposed solution.\nThe figure depicts a high-level procedure for authorization of FL Server and FL Client in FL group, illustrating the steps involved in managing user access and data security within the FL ecosystem.\nFigure 6.17.2-1: High-level procedure for authorization of FL Server and FL Client in FL group\n0. \tNWDAF containing MTLF as FL server or FL clients register to NRF with their FL related information, including Analytics ID(s), Interoperability ID, Vendor ID, Address information, FL capability Type (i.e. FL server or FL client), and Service Area etc.\nNOTE: The Interoperability indicator indicates a list of NWDAF providers (vendors) that are allowed to retrieve ML models from the NWDAF containing MTLF.\nAssumption: The NRF can verify the Vendor ID of the NWDAFs containing MTLF.\nNOTE 1:Alignment with the resolution of Key Issue #11 NRF validation of NFc for access token requests in TR 33.875 [10] on how the NRF verifies the Vendor ID of the NWDAF is not addressed in the present document.\n1.\tThe Server NWDAF discovers Client NWDAFs from NRF based on FL selection criteria e.g. Federated Learning capability, Interoperability ID, Analytics ID, etc.\nServer NWDAF requests tokens for each of selected Client NWDAFs from NRF, with Analytics ID, Vendor ID and FL capability included in the request.\nNOTE 2: Inclusion of the vendor ID in the access token request is not addressed in the present document\nNRF verifies that the Server NWDAF's Vendor ID is included in the Client NWDAF's Interoperability ID for the Analytics ID and grants the token, based the information provided in Client NWDAF's NF profile.\n2.\tThe Server NWDAF sends FL request to the Client NWDAF(s) with the obtained token.\n3.\tEach Client NWDAF checks whether the server NWDAF is authorized based on the token and decides whether to join the FL group.\n4.\tThe Client NWDAF(s) sends the response to the Server NWDAF.\n5.\tThe FL group is formed.\n6.\tThe Server NWDAF registers or updates its registration into NRF about the created FL Group with the following parameters: \tFederated Learning (FL) Correlation ID. the associated Analytics ID, Interoperability ID, allowed requester NF type or NF instance ID (e.g. NWDAF containing MTLF), allowed FL capability (e.g. FL client) etc.\nIf the Server NWDAF is about to reselect new Client NWDAF(s) into the FL group during FL execution phase, the Server can either trigger selection procedure again as step 1 to step 4 or receive notification from NRF and select new Client NWDAF(s) available as step 7 to step 9.\n7-8. The Server NWDAF gets the information of the new Client NWDAF(s) via notifications from NRF.\n9. The Server NWDAF requests tokens for each of selected Client NWDAFs from NRF as step1 and triggers the procedure as step 2-4.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.17.3\tEvaluation",
                            "text_content": "This solution resolves Key Issue #2: Authorization of selection of participant NWDAF instances in the Federated Learning group.\nThis solution proposes to reuse existing SBA token-based authorization for authorization of server NWDAF and client NWDAF for FL procedures.\nFor initiation of a FL procedure or reselection of FL client(s) into a FL group, the server NWDAF requests token from NRF for each selected client NWDAF, to be authorized to include a client NWDAF into a FL group.\nThis solution also proposes that FL model sharing is authorized based on the Interoperability ID. When the server NWDAF requests token from NRF to include a client NWDAF into a FL group, NRF verifies that the server NWDAF's vendor ID is included in the client NWDAF's Interoperability ID and grants the token based the information provided in client NWDAF's NF profile.\nIn this solution, authorization is granted with NWDAF vendor granularity, but not for specific NF instances.\nNOTE: Further evaluation is not addressed in the present document.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.18\tSolution #18: Solution for authorization in FL",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.18.1\tIntroduction",
                            "text_content": "Based on existing OAuth 2.0 schema specified for SBA, the solution proposes an authorization mechanism for FL NWDAF server(s) to consume the resources and data of the NWDAFs acting as FL clients, based upon the FL role information and the analytics ID and other data details registered at the NRF during the NF profile registration phase.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.18.2\tSolution details",
                            "text_content": "The figure 6.18.2-1 represents the authorization workflow of the solution:\nThe figure depicts a simplified flowchart for the authorization workflow in a Federated Learning (FL) system. It illustrates the steps involved in obtaining and verifying user permissions, which are crucial for ensuring data privacy and security. The workflow includes steps such as obtaining user data, validating the user's identity, and verifying the user's permissions. The figure is a visual representation of the complex process, making it easier to understand and follow.\nFigure 6.18.2-1: Authorization workflow for FL\nStep 1: NWDF FL member registers in the NRF with the following attributes:\na) \"FL Process Role\", i.e., whether the NWDAF registers as a FL server or as FL client for a particular Analytics Id\nb) \"Allowed NF(s) (NF type and NF Instance id) as FL server(s) for a particular Analytics Id, if the NWDAF has registered as FL client in NRF\nWhen new allowed FL server NWDAFs are introduced, the FL member NWDAF needs to update its list of allowed server NWDAFs.\nNOTE 0: \tOther data details can be added and are subject to the implementation, such as sensitivity of the data used for training (e.g., it may contain privacy data of subscribers), which are to be decided by the operator.\nStep 2: FL server sends a discovery request to the NRF to retrieve the information for the NWDAF registered as FL client for a given Analytics Id.\nStep 3: FL server sends an access token request for each required NWDAF FL client (in the picture a single request is shown)\nStep 4: NRF authorizes the request of the NWDAF FL server based upon the information registered in Step 1.\nStep 5a: If the NWDAF FL server is authorized to request the NWDAF FL clients to perform the FL operations, the NRF provides the corresponding access tokens for the selected NWDAF FL client member(s).\nStep 5b: else, NRF would reject the access token requests.\nStep 6: The NWDAF FL server sends the service requests to the NWDAF FL clients with the respective access tokens received in Step 5a.\nStep 7: NWDAF FL clients can start the FL process for a given request in case of successful access token verification.\nNOTE 1: The solution assumes that user consent for model training is provided for the NWDAF FL member as per TS 29.503 (table 6.1.6.3.20-1).\nNOTE 2: Authorization process of the NWDAF FL client(s) by the NWDAF FL server is implicit, since the NWDAF FL server sends the requests only to the discovered NWDAF FL clients.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.18.3\tEvaluation",
                            "text_content": "The solution addresses the requirement of authorization of the NWDAF FL server to include a client NWDAF into a FL group. The authorization of the NWDAF FL client(s) to join a FL group is implicit, since the NWDAF FL server sends the request only to discovered NWDAF FL clients indicated by the NRF.\nThe solution proposes:\n- \tAn initial registration of the FL members indicating the role in the FL group (client or server), and if the member is a client the list of allowed FL servers for a particular Analytics Id.\n- \tThe discovery request of the FL members candidates for the FL group is tackled by NRF, which upon the authorization of the request, delivers the corresponding token used by the FL server to trigger the FL process.\nWhen new allowed FL server NWDAFs are introduced, the FL member NWDAF needs to update its list of allowed server NWDAFs\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.19\tSolution #19: Access control for user plane data",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.19.1\tIntroduction",
                            "text_content": "The solution addresses KI#5 on security for NWDAF-assisted application detection.\nWhen NWDAF provides NWDAF-assisted PFD Determination analytics, it needs to use data extracted from the inspected user plane packets in the flow. This solution proposes a user plane data access control method, where application service provider (ASP) provides a user-plane-data-access-control list of data/data type that should not be provided to NWDAF for each application identifier maintained by the ASP.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.19.2\tSolution details",
                            "text_content": "In this solution, ASP defines the user-plane-data-access-control list of data/data type that should not be provided to NWDAF for an application. NWDAF and UPF both check the user-plane-data-access-control list to make sure data that matches the user-plane-data-access-control list will not be collected.\n\nStep 1: ASP defines the user-plane-data-access-control list of data/data type that should not be provided to NWDAF for an application identifier maintained by the ASP.\nStep 2: ASP provides the user-plane-data-access-control list to NEF (PFDF).\nStep 3: NEF (PFDF) stores the user-plane-data-access-control list along with PFDs related to the same application identifier in UDR.\nStep 4: The user-plane-data-access-control list may be retrieved by SMF from NEF (PFDF) in \"pull\" mode or may be provisioned from NEF (PFDF) to the SMF in \"push\" mode.\nWhen the \"push\" mode is used, the NEF (PFDF) retrieves from the UDR the user-plane-data-access-control list for each application identifier and distributes them to those SMFs that enable access to those applications. There are three methods to provision the user-plane-data-access-control list from the NEF (PFDF) to the SMF:\na)\tPush of whole user-plane-data-access-control lists and PFD(s) that can be accessed by the NEF (PFDF) according to operator configuration in NEF (PFDF) (e.g. provision per day according to operator configuration);\nb)\tSelective push of an ASP change in the user-plane-data-access-control list (i.e. ASP changes the list while operator configuration defines when to push);\nc)\tSelective push of an ASP change in the user-plane-data-access-control list according to ASP request (i.e. ASP indicates to push changes in the list).\nWhen the \"pull\" mode is used, at the time a PCC Rule with an application identifier for which PFDs are not available is activated or provisioned, the SMF requests all PFDs and the user-plane-data-access-control list for that application identifier from the NEF (PFDF), and NEF (PFDF) retrieves them from the UDR.\nStep 5: If there is any user-plane-data-access-control list received and there are still active application detection rules in the UPF for the application identifier, the SMF provisions the user-plane-data-access-control list corresponding to the application identifier to the UPF.\nStep 6: When NWDAF does NWDAF-assisted PFD Determination analytics, it fetches currently stored PFD information in use and user-plane-data-access-control list from UDR via NEF(PFDF).\nStep 7: NWDAF checks user-plane-data-access-control list and decides what information needs to be collected. Information that matches the user-plane-data-access-control list will not be collected.\nStep 8: NWDAF subscribes PFD Determination related information.\nStep 9: UPF checks user-plane-data-access-control list. UPF will not send information that matches the user-plane-data-access-control list to NWDAF.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.19.3\tEvaluation",
                            "text_content": "This solution addresses KI#5: security for NWDAF-assisted application detection.\nThis solution proposes that application service provider (ASP) defines the list of user data/data type that should not be provided to NWDAF for NWDAF-assisted application detection. NWDAF and UPF check the list to make sure that user data matching the list will not be collected.\nThis solution does not provide a method for operator to control access to user data.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.20\tSolution #20: Cyber attack detection using an analytics function",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.20.1\tIntroduction",
                            "text_content": "The solution addresses KI#6 on Cyber-attack detection.\nKI#6 describes that, to achieve cyber-attacks detection, the NWDAF can collaborate with UE and any other NFs to collect related data as inputs and provide alerts of anomaly events as outputs to OAM and other NFs which have subscribed to them. Further KI#6 also considered two example cases such as (i) fraudulent relay nodes which may modify or change messages between the UE and the RAN and (ii) DoS attacks related to network entities (e.g., RAN and Core network).\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.20.2\tSolution details",
                            "text_content": "The cyber attack detection solution is described below by using NWDAF as the analytics function, but the solution does not prevent to use any equivalent analytics function if required to be considered.\nCyber attack detection over the network:\nA service consumer (i.e., OAM/AF/NF) can subscribe to the NWDAF and get notified about the malicious behaviour related analytics associated to one or more UEs using the procedure shown in Figure 6.20.2-1.\nThe figure depicts a network data collection and analytics procedure for cyber-attack detection. It illustrates the steps involved in collecting network data, including network traffic analysis, network traffic monitoring, and network traffic anomaly detection. The figure also includes a flowchart to guide the process, ensuring a systematic approach to detecting cyber-attacks.\nFigure 6.20.2-1 Network Data Collection and analytics procedure for cyber-attack detection\nThe steps shown in figure 6.20.2-1 is described as follows:\n1.\tThe analytics service consumer subscribes to the network attack detection related analytics information by invoking the Nnwdaf_AnalyticsSubscription_Subscribe service operation message, with the analytics ID (set to the malicious behaviour), list of event ID(s) (related to UE malicious behaviour, attacks/threats (e.g., cyber-attack, DDoS, etc.,), received messages (e.g., malformed messages, malicious data) violating predefined service operation input or output formats, message requests exceeding configured limits, unintended or unrecognized operations, repeated authentication failure), target of analytics (indicates UE ID(s) i.e., such as SUPI or a group of UEs (an Internal Group ID), analytics filter can be optionally included (e.g., as area of interest, S-NSSAIs, DNN, and Application ID) and may include other information for the analytics according to TS 23.288 Clause 6.1.3.\nNOTE 1:\tIn the case of untrusted AF the Target of Analytics Reporting can be a GPSI or an External Group Identifier that is mapped in the 5GC to a SUPI or an Internal Group Identifier as described in TS 23.288.\nIf the service consumer is already subscribed to the network attack detection related analytics information, the service consumer requests analytics information by invoking Nnwdaf_AnalyticsInfo_Request service operation with the respective analytics ID and the target of analytics.\n2.\tWhen a request for analytics information is received, the NWDAF determines whether triggering new data collection is needed.\n3. If the NWDAF determine to perform data collection, it need to subscribe to 5GC NFs (i.e., serving AMF, serving SMF, AFs (i.e., via NEF if located externally)) and OAM according to the target of analytics (i.e., UE IDs) for related event exposure services to be notified for data on a set of events (as described in TS 23.288 Clause 6.2.2.1) as requested by the service consumer in step 1.\nThe NWDAF subscribes to set of event IDs (related to UE malicious behaviour, attacks/threats (e.g., cyber-attack, DDoS, etc.,), received messages (e.g., malformed messages, malicious data) violating predefined service operation input or output formats, message requests exceeding configured limits, unintended or unrecognized operations, repeated authentication failure) by invoking the Nnf_EventExposure_Subscribe service operation (in case of AF being the data producer, the NWDAF can use Naf_EventExposure_Subscribe service operation) along with the UE IDs.\n4. If the NWDAF subscribes to the set of event IDs (as in step 3), the NF manages the inference data which includes all event related information.\n5. The NF notifies the NWDAF (e.g., event specific inference data) by invoking the Nnf_EventExposure_Notify service operation.\nNOTE 2: If the data need to be collected from an AF, then in steps 3-5, the target AF will be involved instead of NF and if the AF is not trusted, then the event exposure is invoked via the NEF.\n6. Alternatively, the NWDAF can also collect data from OAM (e.g., for the target of analytics (UE IDs) related to the NFs/AFs to collect event specific information mentioned in step 3 in the form of inference data/logs) using the procedure specified in TS 23.288 Clause 6.2.3.\n7. The NWDAF performs the requested analytics using the data collected from the NFs, AFs, and/or OAM.\nNOTE 3: The UE malicious behaviour analytics related implementation logic can be up to Operator's implementation and it is out of 3GPP scope.\n8. If the service consumer is subscribed to analytics information, the NWDAF notifies the service consumer (i.e., based on the request from the service consumer using Nnwdaf_AnalyticsSubscription_Notify or Nnwdaf_AnalyticsInfo_Request response service operation), the Analytics Reporting Parameters includes the event specific network attack detection analytics information with the corresponding attack detection and threat alerts respectively as shown in the table 6.Y.2-1 and 6.Y.2-2 respectively.\nTable 6.20.2-1: Network attack detection Statistics\n\nTable 6.20.2-2: Network attack detection Predictions\n\nNOTE 4: \tHigh false rate/High negative rate are few performance metrics related to the intelligence algorithm used in any analytics process (e.g., here cyber attack detection). As the intelligence algorithm used for the analytics is up to Operator's implementation, the choice of intelligence algorithm is not in the scope of this study. Therefore, it is up to the operator to select the intelligence algorithm by considering various performance metrics based on the decision of the operator policy.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 6.20.2-1: Network attack detection Statistics",
                                    "table number": 11,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 6.20.2-2: Network attack detection Predictions",
                                    "table number": 12,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "6.20.3\tEvaluation",
                            "text_content": "This solution describes the methods to collect data from the network to enable cyber attack detection and related output analytics provision in the network.\nThe cyber attack detection solution is described by using NWDAF as the analytics function, but the solution does not prevent to use any equivalent analytics function if required to be considered.\nThe existing analytics on ‘abnormal behaviour' in TS 23.288 clause 6.7.5 enables data collection related to mobility and communication related aspects such as unexpected UE location, Ping-ponging across neighbouring cells, unexpected wakeup, unexpected radio link failures, unexpected long-live/large rate flows, unexpected wakeup, suspicion of DDoS attack, wrong destination address, too frequent service access but in addition this solution helps to also collect data on malformed messages violating predefined message input or output formats, message requests exceeding configured limits, unintended or unrecognized operations, and repeated authentication failure. As the Intelligence algorithm used in the analytics related to cyber attack detection is up to operator implementation, it is recommended that a selection of an algorithm can consider their performance metrics e.g., cyber attack detection precision, false positive rate, false negative rate etc., The solution does not provide evidence for cyberattack detection precision, false positive rate, false negative rate. Without that, the administrator may take wrong action for the wrong detection so that the network may face unsecure configuration risk.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.21\tSolution #21: Authorization of data and analytics exchange in roaming case",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.21.1\tIntroduction",
                            "text_content": "This solution is addressing on KI#1.\nThis contribution proposes that NRF is used as the authorization server to issue the allowed data/analytics list for the PLMN in the token for the NWDAF consumer.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.21.2\tSolution details",
                            "text_content": "The figure depicts a 21.2-1 scenario in a roaming case, illustrating the authorization process for data and analytics exchange between a mobile network operator (MNO) and a roaming partner. The figure shows the authorization process, including the exchange of data and analytics, as well as the security measures in place.\nFigure 6.21.2-1: Authorization of data and analytics exchange in roaming case\nNRF 2 is preconfigured an allowed data/analytics list to indicate which data/analytics is allowed to be provided to other PLMNs.\nNWDAF 1 sends token request to the NRF 1, the message includes the existing IEs, i.e. the NF consumer type, target NF type, expected NF Service name, serving and home PLMN ID, etc.\nNRF 1 forwards the token request to NRF 2.\nThe NRF 2 issues token according to the preconfiguration based on serving PLMN ID. The claim of token contains the allowed data/analytics list related to the serving PLMN ID.\nThe NRF 2 returns the token to the NRF 1.\nThe NRF 1 forwards the token to the NWDAF 1.\nNWDAF 1 sends Nnwdaf_RoamingData_Subscribe or Nnwdaf_RoamingAnalytics_Subscribe message with requested data/analytics and the token to the NWDAF 2.\nThe NWDAF 2 verifies the service request, including verifying token, and whether the allowed data/analytics list in the token covering with the requested data.\nThe NWDAF 2 returns the data/analytics to the NWDAF 1.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.21.3\tEvaluation",
                            "text_content": "The solution addresses the authorization aspects in data and analytics exchange in roaming case described in key issue #1. The solution proposes an authorization schema with analytics id granularity to be implemented in NRF.\nIn this solution, NRF is used as the authorization server to issue the allowed data/analytics list for the PLMN in the token for the NWDAF consumer. In this way, the NWDAF consumer does not need to request a new token once the NWDAF consumer needs to request other data.\nThis solution also proposes that all the authorization information related to the NWDAF roaming is configured in the NRF.\nThe NWDAF profile (and its internal policy) needs to be updated to accommodate for the analytics ID/ data ID level granularity, along with the consumer and PLMN information which can receive this. This information will then be needed to be updated in the NRF, for the NRF to ensure that the NWDAFc is authorized. Finally this will need a change in the access token claims.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "7\tConclusions",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "7.1\tConclusion on Key Issue #1 \"Protection of data and analytics exchange in roaming case\"",
                    "description": "",
                    "summary": "",
                    "text_content": "For Key Issue #1, it is recommended to use the following principles as the baseline for protection of data and analytics exchange in roaming case:\n-\tThe NRF uses token-based authorization to restrict the access to services of NWDAF from outside the own PLMN only to the new service(s) of the NWDAF described in TS 23.288 [5], clause 6.1.5.\n-\tAuthorization at data and analytics level is enforced by the roaming entry NWDAF producer. The parameters used by NWDAF service consumer to request/subscribe to the services provided by NWDAF producer are defined in TS 23.288 [5], clause 6.1.5. Accordingly, the operator authorization policies can be configured locally in the NWDAF producer. Also, claims in the service access token provided by NRF can be extended to convey Analytics ID parameter, so the NWDAF producer can authorize with analytics granularity (after NRF having checked the Analytics ID in the token get request).\n-\tThe roaming entry NWDAF producer is responsible to control the amount of exposed data/analytics and to abstract or hide internal network aspects in the exposed data/analytics. The corresponding mechanisms used to restrict the data/analytics and/or anonymization are subject to the implementation.\n-\t5GS uses the N32 interconnection security mechanism to support confidentiality, integrity, and replay protection for data and analytics exchange between PLMNs.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.2\tConclusion on Key Issue #2 \"Authorization of selection of participant NWDAF instances in the Federated Learning group\"",
                    "description": "",
                    "summary": "",
                    "text_content": "It is recommended to use the following general principles for authorization of participant NWDAFs in a Federated Learning group:\n-\tInitial registration of the NWDAFs involved in FL including Analytics Id and FL capability type (i.e. client, server).\n-\tAuthorization of the server NWDAF to include a client NWDAF into a Federated Learning group is done by NRF using SBA OAuth 2.0 token-based authorization.\n-\tThe NRF uses the interoperability indicator per Analytics ID, specified in TS 23.288 [5] and provided by the client NWDAF during registration, for authorization of the server NWDAF with vendor granularity.\nNOTE: \tFine-grained authorization can be done locally at the client NWDAF.\n-\tThe server NWDAF includes the desired Analytics ID in the access token request. The NRF checks whether the server NWDAF is authorized to include the client NWDAF in the FL group for this Analytics ID. If the server NWDAF is authorized, the NRF will issue an access token with the Analytics ID included.\n-\tAuthorization of the client NWDAF is implicit, since it can join a Federated Learning group only when selected by the server NWDAF.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.3\tConclusion on Key Issue #3 \"Security for AI/ML model storage and sharing\"",
                    "description": "",
                    "summary": "",
                    "text_content": "The conclusions for KI#3 are:\n-\tAuthorization of the model retrieval at the NRF uses OAuth 2.0 token-based authorization. The NRF uses information provided by the NF service producer (NWDAF MTLF) and information provided by the NF service consumer (e.g. NWDAF AnLF).\n- \tThe NF service producer (NWDAF MTLF) needs to be registered in the NRF, indicating the NF service producer information (including interoperability indicator per Analytics ID) that is used by the NRF to decide whether the consumer is authorized. The NF service consumer (e.g. NWDAF AnLF) needs to be registered in the NRF as OAuth 2.0 client, indicating the NF service consumer information (including Vendor ID) that is used by the NRF to decide whether the consumer is authorized. Whether the NRF also uses the interoperability indicator of the NF service consumer is addressed in normative phase.\n-\tThe NF service consumer (e.g. AnLF) includes the desired Analytics ID(s) in the access token request. The NRF checks whether the NF service consumer is authorized to retrieve models for this Analytics ID(s). If the NF consumer is authorized, the NRF issues an access token with the Analytics(s) included in the access token.\n-\tThe model is stored in encrypted format unless both the AI/ML model producer (NWDAF MtLF) and storage platform (ADRF) are part of the same system and belong to the same vendor and operator security domain.\nStorage of the model in encrypted format can be required by the trust model established to store and share AI/ML models. The trust model between AI/ML NF producer (NWDAF MtLF), storage platform (ADRF) and NF consumer (e.g., AnLF) is to be determined during the implementation phase among operator and the providers of the different platforms (MtLF, AnLF, ADRF).\n-\tAs per the request of Analytics Id by the NFc, the MTLF performs authorization of the corresponding model retrieval per selected model.\nNOTE: \tThe model delivery procedure is to be defined by 3GPP SA2.\n-\tThe granularity of the authorization at AI/ML model level is performed at MtLF.\n-\tADRF verifies that the requested AI/ML model can be retrieved by the NF consumer(s) (MTLF or AnLF), based on the decision by the MtLF.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.4\tConclusion on Key Issue #4 \" Anomalous NF behaviour detection by NWDAF \"",
                    "description": "",
                    "summary": "",
                    "text_content": "No normative work is pursued for KI #4.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.5\tConclusion on Key Issue #5 \"Security for NWDAF-assisted application detection\"",
                    "description": "",
                    "summary": "",
                    "text_content": "Solution#19 only proposes a method for application service provider to define the user data that should not be provided to NWDAF for NWDAF-assisted application detection. Therefore, no normative work is considered for KI#5 for this release.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.6\tConclusion on Key Issue #6 \"Key issues on Cyber-attack detection\"",
                    "description": "",
                    "summary": "",
                    "text_content": "No normative work is pursued for KI#6.\n\n\n",
                    "tables": [
                        {
                            "description": "",
                            "table number": 13,
                            "summary": "",
                            "name": ""
                        }
                    ],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        }
    ]
}