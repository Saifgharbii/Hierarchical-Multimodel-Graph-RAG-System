{
    "document_name": "23282-i60.docx",
    "content": [
        {
            "title": "Foreword",
            "description": "This Technical Specification has been produced by the 3rd Generation Partnership Project (3GPP).\nThe contents of the present document are subject to continuing work within the TSG and may change following formal TSG approval. Should the TSG modify the contents of the present document, it will be re-released by the TSG with an identifying change of release date and an increase in version number as follows:\nVersion x.y.z\nwhere:\nx\tthe first digit:\n1\tpresented to TSG for information;\n2\tpresented to TSG for approval;\n3\tor greater indicates TSG approved document under change control.\ny\tthe second digit is incremented for all changes of substance, i.e. technical enhancements, corrections, updates, etc.\nz\tthe third digit is incremented when editorial only changes have been incorporated in the document.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "1\tScope",
            "description": "This document specifies the functional architecture, procedures and information flows needed to support the Mission Critical Data (MCData) services. MCData is a suite of services which utilizes the common functional architecture defined in 3GPP TS 23.280 [5] to support MC services over LTE including the common services core.\nMCData services suite consists of the following sub-services:\n-\tshort data service (SDS);\n-\tfile distribution (FD);\n-\tdata streaming (DS); and\nNOTE:\tProcedures for DS are not covered in the current specification.\n-\tIP connectivity.\nMCData features include:\n-\tconversation management;\n-\ttransmission and reception control;\n-\tcommunication release; and\n-\tenhanced status.\nThe corresponding service requirements are defined in 3GPP TS 22.282 [3] and 3GPP TS 22.280 [2].\nThe present document is applicable primarily to MCData service using E-UTRAN access based on the EPC architecture defined in 3GPP TS 23.401 [4]. Certain application functions of the MCData service could also be supported via non-3GPP access networks but no additional functionality is specified to support non-3GPP access.\nThe MCData service can be used for public safety applications and also for general commercial applications e.g. utility companies and railways.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "2\tReferences",
            "description": "The following documents contain provisions which, through reference in this text, constitute provisions of the present document.\n-\tReferences are either specific (identified by date of publication, edition number, version number, etc.) or non-specific.\n-\tFor a specific reference, subsequent revisions do not apply.\n-\tFor a non-specific reference, the latest version applies. In the case of a reference to a 3GPP document (including a GSM document), a non-specific reference implicitly refers to the latest version of that document in the same Release as the present document.\n[1]\t3GPP TR 21.905: \"Vocabulary for 3GPP Specifications\".\n[2]\t3GPP TS 22.280: \"Mission Critical Common Requirements (MCCoRe); Stage 1\".\n[3]\t3GPP TS 22.282: \"Mission Critical Data services\".\n[4]\t3GPP TS 23.401: \"General Packet Radio Service (GPRS) enhancements for Evolved Universal Terrestrial Radio Access Network (E-UTRAN) access\".\n[5]\t3GPP TS 23.280: \"Common functional architecture and information flows to support mission critical communication services; Stage 2\".\n[6]\t3GPP TS 23.228: \"IP Multimedia Subsystem (IMS); Stage 2\".\n[7]\t3GPP TS 23.303: \"Proximity-based services (ProSe); Stage 2\".\n[8]\t3GPP TS 23.468: \"Group Communication System Enablers for LTE (GCSE_LTE); Stage 2\".\n[9]\t3GPP TS 23.237: \"IP Multimedia Subsystem (IMS) Service Continuity; Stage 2\".\n[10]\t3GPP TS 23.002: \"Network Architecture\".\n[11]\t3GPP TS 23.379: \"Functional architecture and information flows to support Mission Critical Push To Talk (MCPTT); stage 2\".\n[12]\t3GPP TS 29.283: \"Diameter data management applications\".\n[13]\t3GPP TS 33.180: \"Security of the Mission Critical Service\".\n[14]\t3GPP TS 23.203: \"Policy and charging control architecture\".\n[15]\t3GPP TS 36.331: \"Evolved Universal Terrestrial Radio Access (E-UTRA); Radio Resource Control (RRC); Protocol specification\".\n[16]\t3GPP TS 29.468: \"Group Communication System Enablers for LTE (GCSE_LTE); MB2 reference point; Stage 3\".\n[17]\t3GPP TS 29.214: \"Policy and charging control over Rx reference point\".\n[18]\t3GPP TS 23.283: \"Mission Critical Communication Interworking with Land Mobile Radio Systems; Stage 2\".\n[19]\t3GPP TS 26.348: \"Northbound Application Programming Interface (API) for Multimedia Broadcast/Multicast Service (MBMS) at the xMB reference point\".\n[20]\t3GPP TS 29.116: \"Representational state transfer over xMB reference point between content provider and BM-SC\".\n[21]\t3GPP TS 26.346: \"Multimedia Broadcast/Multicast Service (MBMS); Protocols and codecs\".\n[22]\t3GPP TS 22.179: \"Mission Critical Push to Talk (MCPTT); Stage 1\".\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "3\tDefinitions, symbols and abbreviations",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "3.1\tDefinitions",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the terms and definitions given in 3GPP TR 21.905 [1] and the following apply. A term defined in the present document takes precedence over the definition of the same term, if any, in 3GPP TR 21.905 [1].\nAuto-receive: A mechanism where data smaller than a configured size threshold are delivered to the receiving MCData client(s) from the MCData server i.e. without waiting for the receiving user to indicate a present need for the data.\nConversation identifier: A universally unique identifier that identifies a series of related MCData transactions.\nData stream: A sequence of data that is agnostic to any underlying media (e.g. audio, video, telemetry data), on which processing of data (e.g. semantic, syntactic, save or filter operation) can begin before all the content is received.\nFD disposition: is one of \"not downloaded\" and \"download completed\".\nFolder Identifier: A unique identifier that identifies a folder in the MCData message store\nIP Data: Structured or unstructured payload that is transparent to the MCData transport service.\nMCData client: An instance of an MC service client that provides the client application function for the MCData service.\nMCData emergency communication: An MC service emergency group communication or MC service emergency private communication within the MCData service.\nMCData group: An MC service group configured for MCData service.\nMCData group affiliation: An MC service group affiliation for MCData.\nMCData group communication: A one-to-many communication using an MCData service.\nMCData group de-affiliation: An MC service group de-affiliation for MCData.\nMCData ID: An instance of an MC service ID within the MCData service.\nMCData imminent peril communication: An MC service imminent peril group communication within the MCData service.\nMCData server: An instance of an MC service server that provides the server application function for the MCData service.\nMCData service: A data communication service comprising at least one underlying generic capability (e.g. SDS, file distribution, data streaming) with strong security, high availability, reliability and priority handling to support applications for mission critical organizations and mission critical applications for other businesses and organizations (e.g. utilities, railways).\nMCData UE: An MC service UE that can be used to participate in MCData services.\nMCData user: An MC service user who is authorized for MCData services suite via an MCData UE.\nMetadata: data associated with a transmitted or stored SDS, file or data stream, consisting of information from messages (e.g. MCData IDs, conversation ID) and other related information (e.g. size, type).\nObject: An MCData communication information (such as a message or a file) that is stored in the MCData message store with its associated metadata.\nObject identifier: A unique identifier that identifies an object stored in the MCData message store.\nReception control: A mechanism that allows the MCData service to regulate data reception to the receiving MCData clients.\nReply identifier: A reference to the original MCData transaction to which the current transaction is a reply.\nSDS data: A payload with limited size and variable content type used in SDS transactions.\nSDS disposition: is one of \"undelivered\", \"delivered\" and \"read\".\nStandalone communication: A unidirectional one-to-one or group data communication completed after one transaction.\nTransaction identifier: A unique identifier that identifies a MCData transaction within a conversation.\nTransmission control: A mechanism that allows the MCData service to regulate data transmission requests from the sending MCData users, either prior to or after active sending from the MCData UE.\nFor the purposes of the present document, the following terms and definitions given in 3GPP TS 22.280 [2] apply:\nMission Critical\nMission Critical Applications\nMission Critical Service\nMission Critical Organization\n\nFor the purposes of the present document, the following terms given in 3GPP TS 22.179 [22] apply:\nGroup-broadcast group\nUser-broadcast group\n\nFor the purposes of the present document, the following terms and definitions given in 3GPP TS 22.282 [3] apply:\nMCData system\n\nFor the purposes of the present document, the following terms and definitions given in 3GPP TS 23.280 [5] apply:\nAd hoc Group Communication\nMC service client\nMC service group\nMC service group affiliation\nMC service group de-affiliation\nMC service ID\nMC service server\n\nFor the purposes of the present document, the following terms and definitions given in 3GPP TS 23.203 [14] apply:\nDynamic PCC rule\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "3.2\tAbbreviations",
                    "description": "",
                    "summary": "",
                    "text_content": "For the purposes of the present document, the abbreviations given in 3GPP TR 21.905 [1] and the following apply. An abbreviation defined in the present document takes precedence over the definition of the same abbreviation, if any, in 3GPP TR 21.905 [1].\nDS\tData Streaming\nE2EE\tEnd to End Encryption\nFD\tFile Distribution\nITSI\tIndividual TETRA Subscriber Identity\nLMR\tLand Mobile Radio\nMC\tMission Critical\nMCData ID\tMCData user identity\nPCC\tPolicy and Charging Control\nPCRF\tPolicy and Charging Rules Function\nQCI\tQoS Class Identifier\nRSI\tRadio Set Identity\nSDS\tShort Data Service\nUM\tUnacknowledged Mode\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "4\tIntroduction",
            "description": "The MCData service suite provides a set of generic capabilities and specific services to enable one-to-one and group data communications between MCData users.\nThe MCData architecture utilises the common functional architecture to support mission critical services over LTE defined in 3GPP TS 23.280 [5] and aspects of the IMS architecture defined in 3GPP TS 23.228 [6], the Proximity-based Services (ProSe) architecture defined in 3GPP TS 23.303 [7], the Group Communication System Enablers for LTE (GCSE_LTE) architecture defined in 3GPP TS 23.468 [8] defining MBMS support via the MB2 interface, the MBMS User Service architecture defined in 3GPP TS 26.348 [19], the Security of the Mission Critical Service in 3GPP TS 33.180 [13] and the PS-PS access transfer procedures defined in 3GPP TS 23.237 [9] to enable support of the MCData service.\nThe MCData UE primarily obtains access to the MCData service via E-UTRAN, using the EPS architecture defined in 3GPP TS 23.401 [4]. Certain application functions of MCData service can be accessed using MCData UEs via non-3GPP access networks.\nThe MCData system provides the function to support interworking with LMR systems defined in 3GPP TS 23.283 [18].\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "5\tArchitectural requirements",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "5.1\tTransmission control",
                    "description": "",
                    "summary": "",
                    "text_content": "The MCData service supports the ability to transmit SDS messages automatically towards the selected recipient user (private communication) or members of the selected MCData group. The MCData server may still reject the sent message (e.g. if there is no authority to send).\nFor MCData types other than SDS using signalling control plane, the MCData service invokes a transmission request grant approach before data is permitted to be transmitted. The MCData service provides configurable limits for the maximum amount of data for and/or maximum amount of time that an MCData user can transmit in a single request, which may be configured by the MCData administrator.\nFor congestion control, related to transmission requests, the MCData service may perform the following:\n-\treject the data transmission requests and then shall notify the MCData user of the rejection;\n-\tqueue the data transmission requests; or\n-\tat any time, withhold the permission to transmit data automatically.\nThe MCData service shall notify the transmitting MCData group member if there are no other MCData group members affiliated to the MCData group.\nThe MCData service supports the lossless communication, and it can be configured by the MCData administrator for the private communication and group communication. The lossless communication can be supported only if the user has a valid and active MCData message store account. If the lossless communication is configured for private communication and if the MCData communication cannot be delivered to the MCData user (e.g. if the recipient is not available at the time of data delivery or network congestion), it shall be made available to the MCData user by storing it in the MCData user's personal account in the MCData message store. If a MCData group is configured for lossless communication, all members of the selected MCData group shall receive the MCData communication, at a time dependent on affiliation status. An affiliated group member of this MCData group shall receive the MCData communication when they are sent. A group member that is not affiliated during MCData communication, the MCData communication shall be made available by storing it in the group member's personal account in the MCData message store. If a MCData group is not configured for lossless communication, only the affiliated members of the selected MCData group shall receive the MCData communication.\nIn order to support lossless communication, below are the conditions that needs to be satisfied:\n-\tLossless communication is provisioned\n-\tMCData user has the valid MCData message store account\n-\tStore communication into message store configuration parameter is enabled\n-\tMCData user has requested to store the MCData communication into MCData message store\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.2\tReception control",
                    "description": "",
                    "summary": "",
                    "text_content": "The MCData service shall support the ability to receive small amounts of data automatically. The MCData service may store data waiting for delivery in a temporary store, and notify availability to the receiving MCData users, i.e. deferred delivery. The data which is temporarily stored may be configured with \"time to live\" value, and subsequently, the data may be purged from the temporary store upon expiry of \"time to live\".\nWhen a MCData user has an active MCData message store account and has activated lossless communication, the MCData service deferred delivery shall not be used when the user is offline.\nThe recipient individual user (private communication) or affiliated members of the MCData group(s) shall be notified of the list of available data either on request or periodically.\nThe MCData service shall provide a mechanism for the MCData user to select data to be downloaded from the list corresponding to the temporary store, subject to limitations such as expiry time and size.\nThe MCData service shall support the ability to automatically deliver files with a size less than a configured threshold value (i.e. auto-receive). The data size for auto-receive shall be configured by the MCData administrator.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.3\tShort Data Service capability",
                    "description": "",
                    "summary": "",
                    "text_content": "The MCData service shall support SDS capability for one-to-one and group communications.\nThe SDS capability shall support messages with a maximum payload of at least 1000 bytes. The supported message types shall include text, binary, or hyperlinks. Multiple message types may be interleaved within in a single message payload. The payload shall support inclusion of location information of the sending MCData user, with or without user or application provided data.\nThe MCData service shall support messages to be sent over the signalling plane or the media plane.\nThe SDS capability shall allow for multiple related messages to be correlated and sequenced within the MCData service.\nThe MCData user shall be able to selectively request read and delivery receipt indication for the sent messages. The message delivery history information should be made available to an authorized MCData user.\nThe MCData service may support aggregation of disposition notifications when SDS messages are sent to multiple recipients.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.4\tFile distribution capability",
                    "description": "",
                    "summary": "",
                    "text_content": "The MCData service shall support distribution of files for one-to-one and group communications.\nThe MCData service shall allow the MCData user to send a file or a URL of a file to another MCData user. The source of the file can originate either from an MCData client or from a network functional entity. The generated URL shall be a reference to a stored file to allow for subsequent retrieval. The file storage policy may determine the availability of the file to be retrieved, and is subject to expiry time and size limitations.\nWhen the file delivery request is set by the sending user to mandatory download, the MCData service shall proceed to deliver the file to the recipient when possible. The file distribution mechanisms shall support both unicast and broadcast delivery methods.\nThe MCData service shall support aggregation of download completed reports when files are distributed to multiple recipients.\nThe MCData service shall support mechanisms for detection and recovery of lost data. A receiving MCData client should be able to:\n-\tdetect and report when a transfer did not complete properly and request retransmission;\n-\tidentify and re-request the missing parts of an incompletely received file; and\n-\taccept partial retransmissions and use them to reconstitute the original file.\nWhen employing MBMS delivery:\n-\tMCData may use the MB2 interface specified in 3GPP TS 23.468 [8]. See also Group Communication Delivery Method in 3GPP TS 26.346 [21]; or\n-\tif MBMS user services and Download Delivery Method (see 3GPP TS 26.346 [21]) are utilized, MCData shall use the xMB interface specified in 3GPP TS 26.348 [19].\nFor the MBMS path, figure 5.4-1 shows both the MB2 and the xMB interfaces.\nThe figure depicts the on-network architecture of MCData, a multicast data delivery protocol, with unicast and MBMS (Multiplexed Broadcast Multicast) paths. The architecture includes key components such as the sender, receiver, and network infrastructure. The figure illustrates the use of multicast routing to ensure efficient delivery of data across the network.\nFigure 5.4-1 MCData on-network architecture showing the unicast and MBMS delivery paths\n\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.5\tData streaming capability",
                    "description": "",
                    "summary": "",
                    "text_content": "The MCData service may support data streaming capability for one-to-one and group communications.\nThe MCData service may allow the MCData user to send a data stream or a URL of a data stream to another MCData user. The source of the data stream can originate either from an MCData client or from a network functional entity. For a data stream originating at a network functional entity, the data stream may be provided by an MCData user. The data streaming mechanisms shall support both unicast and broadcast delivery methods.\nWhen the data streaming request is set to automatic reception, the MCData service may not require consent from the receiving MCData user.\nThe MCData user may be able to apply controls (i.e. start, stop, cancel) to the streams, and on a per recipient basis.\nThe stream may be terminated through an explicit user control (i.e. stop, cancel operation) or by reaching the end of the streamed content.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.6\tMCData group affiliation and MCData group de-affiliation",
                    "description": "",
                    "summary": "",
                    "text_content": "MCData groups may be configured with one or more MCData sub-services (e.g. SDS, FD, DS) as specified within the MCData service. When an MCData user affiliates to an MCData group, the MCData user is affiliated to each of those MCData sub-services configured in the MCData group. The list of MCData sub-services configured for an MCData group shall be included in the MCData group configuration data.\nMCData group affiliation shall be as specified in clause 5.2.5 of 3GPP TS 23.280 [5]. In addition, the following requirements shall be fulfilled by the MCData service for MCData users affiliated to MCData groups:\n-\tMCData users receive notifications for participating in MCData sub-services and invitations for their affiliated MCData group(s).\n-\tMCData users select an affiliated MCData group to initiate a new message, file distribution, data stream, etc.\n-\tMCData users receive messages, files, data streams, enhanced status updates, etc, from their affiliated MCData group(s).\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.7\tConversation management",
                    "description": "",
                    "summary": "",
                    "text_content": "The conversation management:\n1.\tshall include a service indication for conversation management in each SDS and FD transaction.\n2.\tmay be comprised of SDS transactions or FD transactions or a combination of both.\n3.\tshall include a conversation identifier in each SDS and FD transaction.\n4.\tshall treat conversation between different set of users (either in one-to-one or group) as a separate conversation.\n5.\tshall treat conversation between the same set of users (either in one-to-one or group), but with a different conversation identifier as a separate conversation.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.8\tBearer management",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "5.8.1\tGeneral",
                            "text_content": "The MCData UE shall use the APNs as defined in subclause 5.2.7.0 and table A.6-1 of 3GPP TS 23.280 [5]. The MCData UE shall use the MC services APN as defined in subclause 5.2.7.0 and table A.6-1 of 3GPP TS 23.280 [5] for the SIP-1 reference point.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.8.2\tEPS bearer considerations",
                            "text_content": "The EPS bearer considerations specified in subclause 5.2.7.2 of 3GPP TS 23.280 [5] shall apply.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.8.3\tEPS unicast bearer considerations for MCData",
                            "text_content": "For an MCData session request, resources shall be requested utilising interaction with dynamic PCC. The MCData system shall request resources over Rx to a PCRF. The dedicated bearer for MCData media shall utilise the QCI value of 70 (as specified in 3GPP TS 23.203 [14]). The request of resources over Rx shall include an application identifier for MCData in order for the PCRF to evaluate the correct QCI.\nThe UE is required to support at minimum one bearer, which is used for MCData (see annex A in 3GPP TS 36.331 [15]).\nDepending on operator policy, for media plane:\n-\tthe MCData system may be able to request modification of the priority (ARP) of an existing bearer without the need to initiate a new dedicated GBR bearer; or\n-\tthe allocation of EPS bearers of desired priority for MCData communications may cause the pre-emption of lower priority pre-emptible EPS bearers (for MCData or for other applications), if the maximum number of bearers or maximum traffic capacity has been reached, in favour of the newly initiated MCData EPS bearer. In this case, if the new EPS bearer to be used for MCData communication has higher priority level (ARP) than other bearer(s), is allocated with a capability to pre-empt other bearers and the other bearer(s) are pre-emptible, then the EPS bearer for MCData communication pre-empts one (or more) of the existing EPS bearer(s).\nNOTE:\tOperator policy takes into account regional/national requirements.\nThe EPS bearer(s) for MCData emergency communications shall have highest priority level among MCData communication types. The EPS bearer(s) for MCData imminent peril communications shall have higher priority level than for normal MCData communications but lower than the priority level for MCData emergency communications.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "5.8.4\tMBMS bearer management",
                            "text_content": "The MBMS bearer management for MC services is specified in subclause 5.2.7.1 of 3GPP TS 23.280 [5].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "5.9\tDisposition",
                    "description": "",
                    "summary": "",
                    "text_content": "Disposition requests and notifications can be sent \"in-band\" using the same mechanism used for transport of the data, or can be sent \"out-of-band\" when the mechanism used for transport of the data is no longer available.\nFor standalone SDS and FD, the MCData UE shall use the signalling plane for disposition request and disposition notifications. For session SDS, the MCData UE shall use:\n-\tthe media plane for disposition request and disposition notifications; and\n-\tthe signalling plane for disposition notifications when the media plane is no longer available.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.10\tMCData message store",
                    "description": "",
                    "summary": "",
                    "text_content": "MCData message store is used by MCData users to store their MCData communications permanently; it shall provide secured storage area for each authorized MCData user having a user account. The storage area is identified by the MCData user's MCData ID. The MCData message store shall allow an MCData user to access only the storage area that he is authorized to access. A user (i.e. a dispatcher) other than the user account holder shall be able to access the account holder's storage area if authorized.\nDuring an active MCData communication, the participating function on the MCData server of a MCData user participant shall, if the configuration to store the MCData communication is enabled for and if requested by the MCData user, deposit messages and files exchanged in the conversation to the MCData user's storage area in the MCData message store. When depositing the MCData communication into the MCData message store, if no such MCData user account is available on the MCData message store the MCData server shall create the user's account first and then deposit the MCData communications. The MCData message store shall support user account creation and deposit MCData communications operations from the MCData server after successful authentication and authorization. The MCData message store shall support the message store client to retrieve, update, delete, search and synchronize MCData communications stored in the MCData message store, after successful authentication and authorization.\nThe MCData user shall have an option if he wants to store the MCData communications in the MCData message store or not. Based on the request from MCData user, messages and files exchanged in an active MCData communication shall be stored as objects in the MCData message store. A stored object shall contain the following information:\n1.\tThe message or file itself; and\n2.\tAssociated metadata, consisting of:\na.\tinformation retrieved from the information elements of the message or file, such as MCData IDs, Conversation identifier etc.; and\nb.\tother information, such as content type (message or file), status (\"seen\", \"received by\", \"read by \", \"downloaded by \" etc).\nIf a file is distributed indirectly with a URL in a message, when this message is stored in the MCData user's account in the MCData message store, it could be stored as:\n1.\tan object as the original message with the URL; or\n2.\tan object as the message with a revised URL that the URL indicates where the file, retrieved from the MCData content server, is stored separately in the MCData user's storage account. With proper security and authorization, this URL can be accessible by other network entities such as the MCData content server.\nNOTE:\tIt is the decision of SA3 on the mechanism to store an encrypted message or file in the MCData message store.\nWhen a MCData user logs onto a UE with successful authentication and authorization and obtains the user service profile, the message store client on the UE shall synchronize with the user's account on the MCData message store, either automatically or manually (i.e. interacts with the user on which option to synchronize or no synchronization at all), before any MCData service starts.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.11\tIP connectivity (IPcon) capability",
                    "description": "",
                    "summary": "",
                    "text_content": "IP connectivity service enables the exchange of IP Data using MCData transport service and provides the transport of IP Data for e.g. data hosts, servers, etc. that do not have mission critical communication capabilities. The exchange of IP Data is not limited in a transaction.\nThe figure depicts the IP connectivity model, illustrating the various layers and components involved in the network, such as the IP layer, the data link layer, the network layer, and the transport layer. The figure also highlights the use of routing protocols like OSPF and EIGRP to ensure efficient data transmission.\nFigure 5.11-1: IP connectivity model\nThe corresponding MCData client enables bidirectional IP Data communication with the support of the IP connectivity service and thus forms the gateway to data hosts or servers. Therefore, the IP connectivity MCData client requests the MCData transport service with the associated QoS requirement and communication priority.\nAn authorised MCData client supporting IP connectivity capabilities is able to bar incoming IP connectivity requests either on demand or by providing a list of excluded origins identified by the MCData ID and, if available, by the functional alias.\nFor IP connectivity, the MCData server may support following limitation to exchange IP Data:\n-\tlimit the total data volume between the authorized MCData clients, divided by transmission and reception;\n-\tmax time limit, e.g. total minutes or allow exchange between predefined start and end time.\nIP connectivity MCData service supports MCData transport services for one-to-one and group communication.\nThe IP address allocation necessary for user-IP connectivity MCData transport service is independent to the IP address allocation of the individual data hosts attached with the MCData client supporting IP connectivity capabilities. The required IP address pools for the user-IP connectivity MCData service are managed by the IP connectivity MCData transport service.\nNOTE:\tIP connectivity service on interworking is not covered in the current specification.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.12\tMBMS user service architecture requirements",
                    "description": "",
                    "summary": "",
                    "text_content": "The MBMS user service architecture offers a set of delivery methods to applications, specified in 3GPP TS 26.346 [21]. The MBMS download delivery method is used for the delivery of files over MBMS and provides reliability control by means of forward-error-correction.\nThe MCData File Distribution capability can use the MBMS download delivery method by including, in the MC service-on network architecture (subclause 5.2.6 from 3GPP TS 23.280 [5]), the MBMS user service architecture (3GPP TS 26.346 [21]), with the MCData server assuming the role of the content provider.\nThe MCData server may determine the MBMS broadcast area based on the cell identities of the affiliated group members received over GC1.\nWhen the xMB interface is used, the MCData server uses the xMB mission critical extension, specified in 3GPP TS 26.348 [19] to control the QoS and the MBMS broadcast area of the MBMS user services. The MCData server also provides a file delivery manifest over xMB-C (see subclause 5.6.2 from 3GPP TS 26.348 [19]) describing the list of files to be broadcasted, and, for each file, the target completion date and the number of repetitions.\nThe MBMS user service metadata, which provides the delivery and schedule parameters, are returned to the MCData server after the MBMS session creation or update, under the form of a SA file (annex L.3A from 3GPP TS 26.346 [21]). The MCData server signals this SA file, together with the service id and the uri of the file to be received to the targeted MCData clients.\nNOTE:\tUse of service announcement channel to deliver MBMS user service metadata is not covered in the current specification.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.13\tMBMS delivery via MB2 interface",
                    "description": "",
                    "summary": "",
                    "text_content": "MBMS delivery via MB2 applies to MCData services that use media plane for user traffic delivery.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "5.14\tDelivery Notification",
                    "description": "",
                    "summary": "",
                    "text_content": "A MCData user may request a delivery report (such as delivered, message read, or file downloaded etc.) when sending a MCData data (i.e. a message or a file). The recipient((s) shall respond with the proper delivery status response(s) (such as delivered, message read, or file downloaded etc.) according to what is requested in the delivery report. The sender of the MCData data may include multiple delivery status (such as delivered, message read, or file downloaded etc.) in the delivery report and the recipient(s) shall respond accordingly.\nWhen the recipient is offline and receives a MCData data with request for delivery report, the delivery status response(s) shall follow one of the two principles below:\n1.\tIf the deferred delivery is used to deliver the MCData data, the delivery status response(s) shall be determined and responded by the recipient when the data is delivered. The MCData server may send a provisional delivery status report (such as the recipient is offline and the data will be delivered when the recipient is online or discarded due to timeout etc.) to inform the sender about the data delivery progress.\n2.\tIf the data is delivered with lossless communication, the MCData server shall respond with a delivered status report to the sender once the data is deposited into the recipient's MCData message store account. If the message read or file downloaded status is requested, the recipient shall respond it when the data is synced on the user device and processed by the recipient.\n5A\tInvolved business relationships\nThe description of the involved business relationships for the MCData service is contained in clause 6 of 3GPP TS 23.280 [5].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                }
            ]
        },
        {
            "title": "6\tFunctional model",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "6.1\tGeneral",
                    "description": "",
                    "summary": "",
                    "text_content": "This clause defines the functional model for MCData service.\nThe security solution for the MCData service, including end-to-end encryption, is specified in 3GPP TS 33.180 [13].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.2\tDescription of the planes",
                    "description": "",
                    "summary": "",
                    "text_content": "The functional model for the support of MCData is defined as a series of planes to allow for the breakdown of the architectural description.\nThe description of the planes and the relationship between the planes are contained in the common functional architecture to support MC services in 3GPP TS 23.280 [5].\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "6.3\tTransmission and reception control aspects",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.3.1\tGeneral",
                            "text_content": "The transmission and reception control are functions of the MCData server.\nFor small data transmissions there is no need for prior grant of request to transmit. The procedures in the present document describe when data is automatically sent.\nFor large data transmissions, i.e. large files, the data is transmitted only after request to transmit is granted. The data to be transmitted and/or received may be stored in a data repository associated with the transmission and reception control functions.\nNOTE:\tAn overview of transmission control process and possible arbitration mechanisms is provided in the Annex B.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.4\tGeneric functional model",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.4.1\tOn-network functional model",
                            "text_content": "Figure 6.4.1-1 shows the generic application plane functional model.\nThe figure depicts a generic application plane functional model, illustrating the various components and their interactions within a 4G network. The model includes the core network functions, such as the core network controller (CNC), core network service provider (CNSP), and core network service provider (CNSP), as well as the core network service provider (CNSP), and the core network service provider (CNSP). The figure also includes the core network service provider (CNSP), and the core network service provider (CNSP), and the core network service provider (CNSP), and the core network service provider (CNSP), and the core network service provider (CNSP), and the core network service provider (CNSP), and the core network service provider (CNSP), and the core network service provider (CNSP), and the core network service provider (CNSP), and the core network service provider (CNSP), and the core network service provider (CNSP), and the core network service provider (CNSP), and the core network service provider (CNSP), and the core network service provider (CNSP), and the core network service provider (CNSP), and the core\nFigure 6.4.1-1: Generic application plane functional model\nIn the model shown in figure 6.4.1-1, capability functions (SDS, FD, DS, IPcon) of the MCData client and the MCData server along with their reference points (MCData-cap-1 to MCData-cap-n) are described in the respective functional models for each capability.\nNOTE 1:\tThe security aspects of new network components (MCData message store, Message store client and MCData notification server) and the associated new reference points are the responsibility of SA3 and thus outside the scope of the present document.\nAn MCData server controls the signaling reference points and the corresponding media allowing different paths for media and signalling.The MCData server determines if it needs to stay in the media path based on the feature(s) involved in the MCData communication, e.g., if the MCData message store is required in the MCData communication, the MCData server shall remain in the media path.\nNOTE 2:\tIf the MCData server is not in the MCData communication media path, any implications regarding MC user data logging are left to implementation.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.4.2\tOff-network functional model",
                            "text_content": "",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.4.3\tFunctional entities description",
                            "text_content": "Editor's note: Combining functional models describing each capability into one functional model is FFS.\nThe MCData client functional entity acts as the user agent for all MCData application transactions. The client supports SDS, file distribution, data streaming and IP connectivity MCData capabilities utilized by MCData services like conversation management, robots control, enhanced status, database enquiries and secured internet.\nThe MCData server functional entity provides centralised support for MCData services suite. Conversation management, robots, enhanced status, database enquiries and secured internet MCData services requiring one-to-one or group data communication are realized using SDS, file distribution, data streaming and IP connectivity MCData communication capabilities.\nAll the MCData clients supporting users belonging to a single group are required to use the same MCData server for that group. An MCData client supporting a user involved in multiple groups can have relationships with multiple MCData servers.\nFor MBMS delivery, the MCData server functional entity represents a specific instantiation of the GCS AS described in 3GPP TS 23.468 [8] to control multicast and unicast operations for group communications.\nIf the MBMS user service architecture is utilized, the MCData server functional entity represents a specific instantiation of the content provider as described in 3GPP TS 26.346 [21] to control multicast operations for file distribution.\nThe MCData server functional entity is supported by the SIP AS functional entity of the signalling control plane.\nThe MCData server shall support the controlling role and the participating role. The MCData server may perform the controlling role for one-to-one and group data communication. The MCData server performing the controlling role for a one-to-one or group data communication may also perform a participating role for the same one-to-one or group data communication. For each one-to-one and group data communication, there shall be only one MCData server assuming the controlling role, while one or more MCData servers in participating role may be involved.\nThe MCData server performing the controlling role is responsible for:\n-\thandling transmission and reception control (e.g. policy enforcement for participation in the MCData group communication) towards all the MCData users of the one-to-one and group data communication;\n-\tinterfacing with the group management server for group policy and affiliation status information of this MCData server's served affiliated users;\n-\tmanaging SDS and FD data distribution during MCData group communication; and\n-\tmanaging the MCData transport service for IP connectivity.\nThe MCData server performing the participating role is responsible for:\n-\thandling transmission control (e.g. authorization for participation in the MCData group communication) to MCData users of the one-to-one and group data communication;\n-\tgroup affiliation support for MCData user, including enforcement of maximum Nc2 number of simultaneous group affiliations by a user;\n-\tinterfacing with the group management server for group policy and affiliation status information of this MCData server's served affiliated users;\n-\trelaying the MCData communication messages between the MCData client and the MCData server performing the controlling role; and\n-\thandling reception control (e.g. temporarily storing the data to present to the MCData user as required) to its MCData users of the one-to-one and group data communication.\nNOTE:\tThe MCData server in the controlling role and the MCData server in the participating role can belong to the same MCData system.\nThis functional entity contains information of the MCData user profile associated with an MCData ID that is held by the MCData service provider at the application plane. The MCData user profile is determined by the mission critical organization, the MCData service provider, and potentially the MCData user.\nThe functional entity is specified in 3GPP TS 23.283 [18].\nThe MC gateway server provides support for MCData interconnection services with a partner MCData system in a different trust domain whilst providing topology hiding. It acts as a proxy for one or more MCData servers in the partner MCData system without needing to expose the MCData servers in the primary MCData system outside the trusted domain of the primary MCData system. It may be a role of the MCData server described in subclause 6.4.3.1.2 of the present document.\nThe MC gateway server is responsible for relaying call control and transmission control signalling messages, and media between MCData servers within the MCData system and the interconnected MCData system.\nThe description of the signalling control plane is contained in the common functional architecture to support MC services as specified in 3GPP TS 23.280 [5].\nThe MCData message store is a network base persistent store that allows Mission Critical Organization to configure their MCData users to permanently store their MCData communications. Once configured a MCData user will be allocated a secured storage area (i.e. size) in the MCData message store that is only accessible by that configured MCData user and any authorized users. The MCData user can manage how and what will be stored in his personal message store with the support of management operations such as creating, deleting and merging folders, moving stored messages and files around and synchronization all used devices to provide the same contxt view etc.\nNOTE: The security aspects of access and management (such as read/write/update/sync etc.) of personal message store are the responsibility of SA3 and thus outside the scope of the present document.\nThe Message store client is used to support MCData client to manage the MCData communication history stored in MCData message store for a particular MCData user, It supports the secure access to a MCData user's configured MCData message store area and operations relevant to the stored communication history such as folders management and synchronization to the device local message store.\nThe MCData notification server provides the centralized notification function in the network. The MCData notification server allows an application (e.g. resident in the UE) to create a communication channel to receive real-time notifications from the network in either Pull or Push mode. Depending on the channel type created, the MCData notification server provides the application a callback endpoint (i.e. URL) and may also provide a channel endpoint (i.e. URL). The application communicates the callback endpoint information to the application server (i.e. network enabler) for it to use in sending to the MCData notification server the events for delivery to the application. Depending on the type of channel created by the application the delivery of the notifications from the MCData notification server to the application may be via a Pull or Push method. If Pull method is used, then the application shall use the provided channel endpoint to pull the notifications from the MCData notification server. However, if a Push notification delivery is used, then the MCData notification server asynchronously delivers the events received from the application server to the application through a PUSH Enabler server. The MCData notification server provides a consistent way to deliver notifications by all services to reduce the complexity of service logic on the application server.\nIt depends on deployment, if multiple MCData notification servers aredeployed.\nThe Message notification client is used to request the notification service from the MCData notification server. Once the notification service request is authorized by the MCData notification server, the Message notification client will communicate the callback endpoint, received from the MCData notification server, to the MCData message store to be used for notification message delivery.\nWhen multiple MCData notification servers are deployed, the Message notification client shall select one for notification service at any given time. How the Message notification client selects the appropriate MCData notification server from multiple available MCData notification servers for service is implementation specific.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.4.4\tReference points",
                            "text_content": "The reference points for the application plane of MCData service are described in the following subclauses.\nThe MCData-2 reference point, which exists between the MCData server and the MCData user database, is used by the MCData server to obtain information about a specific user. The MCData-2 reference point utilises a diameter management application protocol as defined in 3GPP TS 29.283 [12] and shall be intra-network.\nThe MCData-3 reference point, which exists between the MCData server and the MCData server for MCData application signalling for establishing MCData sessions, shall use the SIP-2 reference point for transport and routing of signalling. If each MCData server is served by a different SIP core then the MCData-3 reference point shall also use the SIP-3 reference point for transport and routing of signalling. Media is also transferred using the MCData-3 reference point.\nThe MCData-5 reference point, which exists between the MCData server and the EPS, is used, subject to the conditions below, by the MCData server to obtain unicast bearers with appropriate QoS from the EPS. It utilises the Rx interface of the EPS according to 3GPP TS 23.203 [14].\nMCData-5 is not used when the MCData service provider and the PLMN operator do not have an operational agreement for QoS control to be provided directly from the MCData service provider domain.\nMCData-5 may be used when the MCData service provider and the PLMN operator have an operational agreement where QoS control is provided directly from the MCData service provider domain.\nNOTE:\tAny coordination between the P-CSCF use of Rx and the MCData server use of Rx (via MCData-5) from the MCData service provider domain is not specified in this release of this specification.\nThe MCData-6 reference point, which exists between the MCData server and the EPS, is used to request the allocation and activation of multicast transport resources for MCData application usage. The MCData-6 reference point uses the MB2-C interface as defined in 3GPP TS 29.468 [16]. The MCData-6 reference point also uses the xMB-C interface as defined in 3GPP TS 29.116 [20] for file distribution.\nThe IWF-2 reference point is specified in 3GPP TS 23.283 [18].\nThe MCData-7 reference point, which exists between the Message store client and the MCData message store, is used by the Message store client to manage the information stored in the MCData message store, to subscribe to changes in the MCData message store and to synchronize between the MCData client and the MCData message store.\nThe MCData-8 reference point, which exists between the MCData server and the MCData message store, is used by the MCData server to access and manage the MCData message store such as creating MCData user folders and depositing the communications history.\nThe MCData-9 reference point, which exists between the MC gateway server and the MC gateway server in an interconnected MCData system for MCData application signalling for establishing MCData sessions, shall use the SIP-3 reference point for transport and routing of signalling. The MCData-9 reference point also carries application data where the data size is too great to be transferred on the signalling plane.\nThe MCData-10 reference point, which exists between the Message notification client and the MCData notification server, is used by the Message notification client to create an appropriate notification channel(s) at the MCData notification server in order to direct events from MCData message store to the MCData notification server for subsequent delivery to the Message notification client on the UE.\nThe MCData-11 reference point, which exists between the MCData message store and the MCData notification server, is used by the MCData message store to send notification message to the subscribed Message notification client.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.5\tFunctional model for short data service",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.5.1\tOn-network functional model",
                            "text_content": "Figure 6.5.1-1 shows the application plane functional model for SDS.\nThe figure depicts a simplified model of the application plane functional model for 5G Service Delivery System (SDS). It illustrates the various components and their interactions, including the application layer, network layer, transport layer, and data plane. The figure highlights the importance of network slicing and network slicing functions (NSF) in enabling efficient and flexible service delivery.\nFigure 6.5.1-1: Application plane functional model for SDS\nIn the model shown in figure 6.5.1-1, the following apply:\n-\tMCData-SDS-1 reference point is primarily used for MCData application signalling during session establishment in support of SDS data transfer. Secondarily, MCData-SDS-1 reference point is used for uplink and downlink unicast SDS data transaction over signalling control plane by the SDS distribution function of the MCData server and SDS function of the MCData client.\n-\tMCData-SDS-2 reference point carries uplink and downlink unicast SDS data over media plane between the SDS distribution function of the MCData server and the SDS function of the MCData client.\n-\tMCData-SDS-3 reference point carries downlink multicast SDS data over media plane from the SDS distribution function of the MCData server to the SDS function of the MCData client.\nExamples of SDS data (in the form of text, binary, application data, URL or combinations of these) are:\n-\tinformation pertaining to applications e.g. health parameters of MCData user for situational awareness application;\n-\tinformation pertaining to enhanced status service;\n-\ttext or URL data between MCData users;\n-\tapplication data (e.g. health parameters) to the MCData user;\n-\tlocation information (independent or along with user or application provided data);\n-\tcommand instructions to invoke certain operations on the MCData UE e.g. invoking UE specific applications; and\n-\tapplication plane identities for the MCData user and MCData application.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.5.2\tOff-network functional model",
                            "text_content": "Figure 6.5.2-1 shows the off-network application plane functional model for SDS.\nThe figure depicts a functional model for the Application Plane in Software Defined Networking (SDN), illustrating the various components and their interactions. The model includes the Controller, the Application, and the Data Plane, with the Controller managing the network functions and the Application executing the application-specific tasks. The Data Plane, on the other hand, is responsible for data transmission and processing. The figure also includes a diagram of the network topology, showing the interconnection of the different components.\nFigure 6.5.2-1: Application plane functional model for SDS\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.5.3\tFunctional entities description",
                            "text_content": "SDS function of the MCData client is responsible to handle SDS capability related requests and responses.\nThe SDS distribution function of the MCData server is responsible for the SDS data transaction to MCData communication participants. The SDS distribution function of the MCData server provides the following functionality:\n-\treception of uplink SDS data transaction by means of the MCData-SDS-1 and MCData-SDS-2 reference points;\n-\treplicate the SDS data as needed for distribution to those MCData communication participants using unicast transport;\n-\tdistribute downlink data by IP unicast transmission to those MCData communication participants utilizing unicast transport by means of the MCData-SDS-1 and MCData-SDS-2 reference points; and\n-\tdistribute downlink SDS data using multicast downlink transport by means of the MCData-SDS-3 reference point.\nThis functional entity is responsible for transmission and reception control of MCData SDS data transaction between the sending MCData UE, the MCData server, and the receiving MCData UE. For SDS capability, due to small data size, the SDS messages can be automatically sent.\nThe description of the signalling control plane is contained in the common functional architecture to support MC services as specified in 3GPP TS 23.280 [5].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.5.4\tReference points",
                            "text_content": "MCData-SDS-1 reference point is used for uplink and downlink unicast SDS data transaction over signalling control plane by the SDS distribution function of the MCData server and SDS function of the MCData client. This reference point is also used for MCData application signalling during session establishment in support of SDS data transfer.\nThe MCData-SDS-1 reference point shall use the SIP-1 and SIP-2 reference points for transport and routing of SIP signalling. MCData-SDS-1 reference point can be used when the SDS payload data size does not exceed the configured maximum payload data size for SDS over signalling control plane, otherwise MCData-SDS-2 and MCData-SDS-3 may be used appropriately.\nReference point MCData-SDS-1 also provides support to delivered and read requests and notifications as appropriate.\nThe MCData-SDS-2 reference point, which exists between the SDS distribution function and the SDS function of the MCData client, is used unicast SDS data transaction (when the SDS payload data size exceeds the configured maximum payload data size for SDS over signalling control plane) between the MCData server and the MCData client. The MCData-SDS-2 reference point uses the SGi reference point defined in 3GPP TS 23.002 [10].\nReference point MCData-SDS-2 also provides support to message thread indication using conversation identifier, delivered and read notifications as appropriate.\nThe MCData-SDS-3 reference point, which exists between the SDS distribution function of the MCData server and the SDS function of the MCData client, is used by the SDS distribution function of the MCData server to send downlink multicast SDS data to the SDS function of the MCData client. The MCData-SDS-3 reference point uses the MB2-U interface defined in 3GPP TS 23.468 [8].\nThe description of the signalling control plane reference points is contained in the common functional architecture to support MC services as specified in 3GPP TS 23.280 [5].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.6\tFunctional model for file distribution",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.6.1\tOn-network functional model",
                            "text_content": "Figure 6.6.1-1 shows the application plane functional model for file distribution.\nThe figure depicts a simplified model of the application plane functional model for file distribution in a 6G network. It illustrates the various components involved in the file distribution process, including the file server, file storage, and file transfer. The model highlights the importance of efficient file distribution in ensuring high-speed and reliable data transmission.\nFigure 6.6.1-1: Application plane functional model for file distribution\nIn the model shown in figure 6.6.1-1, the following apply:\n-\tMCData-FD-1 reference point is primarily used for MCData application signalling for establishing a session in support of MCData file distribution. Secondarily, MCData-FD-1 reference point is also used for both uplink and downlink unicast data (e.g., URL associated to file, file download completed report).\n-\tMCData-FD-2 reference point carries uplink and downlink unicast file data between the FD functions of the MCData server and the MCData UE.\n-\tMCData-FD-3 reference point carries downlink multicast file data from the FD function of the MCData server to the FD function of the MCData UE.\n-\tMCData-FD-4 reference point carries uplink and downlink unicast file data between the media storage function of the MCData Content server and the media storage client of the MCData UE.\n-\tMCData-FD-5 reference point supports the MCData server to access the stored files in the MCData content server for certain file distribution functions, such as retrieval a file to be distributed through multicast etc. This reference points also supports any necessary operational requirements.\n-\tMCData-FD-7 reference point supports the upload and download of file data between MCData content server and MCData message store.\nNOTE:\tThe security aspects of MCData-FD-5 and MCData-FD-7 reference points are the responsibility of SA3 and thus outside the scope of the present document.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.6.1a\tOn-network functional model for interconnection",
                            "text_content": "Figure 6.6.1a-1 shows the application plane functional model for file distribution with interconnection.\nThe figure depicts a simplified model of the application plane functional model for file distribution in a 6.1a network. It illustrates the various components and their interactions, including the file server, file storage, and file distribution. The model is based on the principles of SDN, which emphasizes the use of network functions virtualization to improve network efficiency and flexibility.\nFigure 6.6.1a-1: Application plane functional model for file distribution\nIn the model shown in figure 6.6.1a-1, the following apply:\n-\tMCData-FD-1, MCData-FD-2, MCData-FD-3, MCData-FD-4, MCData-FD-5 reference points are described in subclause 6.6.1.\n-\tMCData-7 and MCData-8 reference points are described in subclause 6.4.4.1.\n-\tThe MC gateway server is described in subclause 6.4.3.1.5.\n-\tMCData-3 and MCData-9 allow the MCData server in the primary MCData system to share URLs related to files for upload and download with the MCData server in the partner MCData system.\n-\tMCData-FD-6 allows file contents and metadata to be shared between the MCData content server in the primary MCData system and the MCData content server in the partner MCData system. MCData-FD-6 is based on HTTP.\n-\tThe HTTP proxies are contained in the signalling plane. They provide topology and IP address hiding between MCData systems.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.6.2\tOff-network functional model",
                            "text_content": "Figure 6.6.2-1 shows the off-network application plane functional model for FD.\nThe figure depicts a functional model for 6G applications, illustrating the application plane's interaction with the physical layer. It highlights the role of the application layer in managing the physical layer, ensuring efficient communication and data processing. The figure also illustrates the use of advanced technologies such as Software-Defined Networking (SDN) and Network Function Virtualization (NFV) to enhance network performance and manage resources.\nFigure 6.6.2-1: Application plane functional model for FD\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.6.3\tFunctional entities description",
                            "text_content": "FD function of the MCData client and the MCData server is responsible to handle file distribution capability related requests and responses.\nThe FD function of the MCData server is responsible for the distribution of file to the MCData communication participants. The FD function of the MCData server provides the following functionality:\n-\treception of uplink file data by means of the MCData-FD-2 reference point;\n-\treplicate the file data as needed for distribution to those MCData communication participants using unicast transport;\n-\tdistribute downlink file data by IP unicast transmission to those MCData communication participants utilizing unicast transport by means of the MCData-FD-2 reference point; and\n-\tdistribute downlink file data using multicast downlink transport by means of the MCData-FD-3 reference point.\nThe media storage client is used to support FD function of the MCData client for file distribution capability. FD function of the MCData client interacts with media storage client for uploading and downloading file to or from the media storage function of the MCData content server.\nThis functional entity is responsible for transmission and reception control of MCData file data between the sending MCData UE, the MCData server, and the receiving MCData UE. Transmission and reception control function is used to provide arbitration between multiple data requests and apply the necessary policy to ensure that appropriate data is transmitted between the MCData UE. However, when the file distribution requests are exceeding a certain size, it may be necessary to control the data that is transmitted or received by the MCData UEs. The control is subject to criteria like application level priorities (e.g. user priority, group priority), service type, emergency nature of the communication, etc.\nThe media storage function is responsible for the storing of media uploaded by the media storage client of the MCData UE in case of MCData file distribution. It also supports download of stored media by the MCData UE in case of file distribution via media storage client.\nThe media storage function supports partial download requests of stored media by the MCData UE via media storage client.\nThe MCData content server functional entity provides a repository area in the MCData trust domain allowing authorized MCData users to temporarily store files that are intended to share to other MCData users. It provides common pool of storage area (i.e. size) to all authorized MCData users to use, no personal space is allocated. An authorized MCData user can use the supported operations on the defined reference point to upload shared files and download the files that are shared to him. The MCData server will use the defined reference point to access the files stored in the MCData content server and support the necessary operational functionalities. As part of the file life cycle management the temporarily stored files will be removed periodically based on the Mission Critical service provider policy. An MCData content server may share files with another MCData content server in another MCData system to support interconnection.\nIf the MBMS user service architecture described in 3GPP TS 26.346 [21] is utilized for file distribution, the MCData content server provides the stored file associated to the established MBMS session.\nNOTE:\tThe security aspects of the MCData content server and its operational supports are the responsibility of SA3 and thus outside the scope of the present document.\nThe description of the signalling control plane is contained in the common functional architecture to support MC services as specified in 3GPP TS 23.280 [5].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.6.4\tReference points",
                            "text_content": "MCData-FD-1 reference point is used for MCData application signalling for establishing a session in support of MCData file distribution. The bearer is also used for both uplink and downlink unicast data (e.g., URL associated to file, file download completed report). The MCData-FD-1 reference point shall use the SIP-1 and SIP-2 reference points for transport and routing of SIP signalling. MCData-FD-1 reference point can be used as long as the file size does not exceed the capabilities (e.g. payload or transmission limits) provided by MCData-FD-1.\nMessages supported on this interface include the uplink and the downlink unicast file transaction between the MCData clients in MCData communication via the MCData server for:\n-\tmetadata (file size, type etc.) of the file being distributed;\n-\tURL of the file being distributed;\n-\tsending download completed report;\n-\tsmall size file;\n-\tconversation identifier for message thread indication; and\n-\tapplication plane identities for the MCData user and MCData application.\nMessages supported on this interface may also include the MCData client providing the MCData server with\n-\tMCData application signalling for establishing a file distribution session in support of MCData communication.\nThe MCData-FD-2 reference point, which exists between the FD functions of the MCData client and the MCData server, is used for unicast file transaction between MCData server and MCData client. The MCData-FD-2 reference point uses the SGi reference point defined in 3GPP TS 23.002 [10].\nReference point MCData-FD-2 supports the following functions:\n-\tfile being distributed from and to the MCData client;\n-\tconversation identifier for message thread indication; and\n-\tapplication plane identities for the MCData user and MCData application.\nThe MCData-FD-3 reference point, which exists between the FD functions of the MCData client and the MCData server, is used by the FD function of the MCData server to send downlink multicast file data to the FD function of the MCData client. The MCData-FD-3 reference point uses the MB2-U interface defined in 3GPP TS 23.468 [8] or the xMB-U interface as defined in 3GPP TS 26.348 [19].\nThe MCData-FD-4 reference point, which exists between the media storage function and the media storage client, is used by the media storage client of MCData UE to upload and download file to the media storage function of the MCData content server. The MCData-FD-4 reference point uses the HTTP reference point.\nThe MCData-FD-5 reference point, which exists between FD function and the media storage function, is used by the FD function of MCData server to fetch the file in the MCData content server that was uploaded by the media storage client of a MCData UE for multicast delivery using MBMS. It also supports necessary operational functions such as size check for transmission control etc. The MCData-FD-5 reference point uses the HTTP reference point.\nThe MCData-FD-7 reference point, which exists between media storage function and the MCData message store, is used by the media storage function to fetch the file residing in the MCData message store and store in its repository for distribution. It is also used by the MCData message store to download the file contents from the media storage function.\nThe description of the signalling control plane reference points is contained in the common functional architecture to support MC services as specified in 3GPP TS 23.280 [5].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.7\tFunctional model for data streaming",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.7.1\tOn-network functional model",
                            "text_content": "NOTE:\tAs no detailed procedures are specified in the current specification the DS functional model is for information only.\nFigure 6.7.1-1 shows the application plane functional model for data streaming.\nThe figure depicts a simplified model of the application plane functional model for data streaming in a 5G network. It illustrates the various components involved in data transmission, including the application layer, transport layer, and network layer. The figure highlights the importance of network slicing and network slicing functions in managing network resources and ensuring efficient data transmission.\nFigure 6.7.1-1: Application plane functional model for data streaming\nIn the model shown in figure 6.7.1-1, the following apply:\n-\tMCData-DS-1 reference point is used for MCData application signalling for establishing a session in support of MCData data streaming. The bearer is also used for both uplink and downlink unicast stream download reports (e.g. stream start and stop records).\n-\tMCData-DS-2 reference point carries unicast data stream between the data streaming and distribution function of the MCData server and the DS function of the MCData UE. The bearer is used for both uplink and downlink unicast data streaming.\n-\tMCData-DS-3 reference point carries multicast data stream from the data streaming and distribution function of the MCData server to the DS function of the MCData UE. The bearer is used for downlink multicast data streaming.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.7.2\tOff-network functional model",
                            "text_content": "",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.7.3\tFunctional entities description",
                            "text_content": "DS function of the MCData client is responsible to handle DS capability related requests and responses for data streaming. FD function may interact with storage entity for retrieving the locally stored data for data streaming.\nThe data streaming and distribution function is responsible for the distribution of data stream to MCData communication participants. The data streaming and distribution function provides the following functionality:\n-\treception of uplink data stream transmission by means of the MCData-DS-2 reference point;\n-\treplicate the data stream as needed for distribution to those MCData communication participants using unicast transport;\n-\tdistribute downlink data stream by IP unicast transmission to those MCData communication participants utilizing unicast transport by means of MCData-DS-2 reference point; and\n-\tdistribute downlink data stream using multicast downlink transport by means of the MCData-DS-3 reference point.\nThis functional entity is responsible for transmission and reception control of data stream between the sending MCData UE, the MCData server, and the receiving MCData UE. Transmission and reception control function is used to provide arbitration between multiple data requests and apply the necessary policy to ensure that appropriate data is transmitted between the MCData UEs.\nThe description of the signalling control plane is contained in the common functional architecture to support MC services as specified in 3GPP TS 23.280 [5].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.7.4\tReference points",
                            "text_content": "MCData-DS-1 reference point is used for MCData application signalling for establishing a session in support of MCData data streaming. The bearer is also used for both uplink and downlink unicast stream download reports (e.g., stream start and stop records). The MCData-DS-1 reference point shall use the SIP-1 and SIP-2 reference points for transport and routing of SIP signalling.\nMessages supported on this interface includes the uplink and the downlink unicast data stream between the MCData clients MCData communication via the MCData server for\n-\tmetadata of the data being streamed;\n-\tURL of the data being streamed;\n-\tsending stream download report;\n-\tconversation identifier for message thread indication; and\n-\tapplication plane identities for the MCData user and MCData application.\nMessages supported on this interface may also include the MCData client providing the MCData server with\n-\tMCData application signalling for establishing a UE data streaming session in support of MCData communication.\nThe MCData-DS-2 reference point, which exists between the data streaming and distribution function and the DS function, is used to unicast data stream between the data streaming and distribution function of the MCData server and the DS function of the MCData client. The MCData-DS-2 reference point uses the SGi reference point defined in 3GPP TS 23.002 [10].\nMCData-DS-2 supports the following functions:\n-\tstream data from MCData UE;\n-\tstream data from network;\n-\tdata stream controls from the authorized MCData UE;\n-\tstream data stream controls from the MCData UE over uplink;\n-\tstart and stop data stream from MCData UE over downlink;\n-\tconversation identifier for message thread indication; and\n-\tapplication plane identities for the MCData user and MCData application.\nThe MCData-DS-3 reference point, which exists between the data streaming and distribution function and the DS function, is used by the data streaming and distribution function of the MCData server to send multicast data stream to the DS function of the MCData client. The MCData-DS-3 reference point uses the MB2-U interface defined in 3GPP TS 23.468 [8].\nThe description of the signalling control plane reference points is contained in the common functional architecture to support MC services as specified in 3GPP TS 23.280 [5].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "6.8\tFunctional model for IP connectivity",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "6.8.1\tOn-network functional model",
                            "text_content": "Figure 6.8.1-1 shows the application plane functional model for User-IP connectivity.\nThe figure depicts the application plane functional model for IP connectivity, illustrating the various components and their interactions. It includes the IP network, IP routing, IP switching, and IP routing, all of which are essential for the efficient and reliable transmission of data over IP networks.\nFigure 6.8.1-1: Application plane functional model for IP connectivity\nIn the model shown in figure 6.8.1-1, the following apply:\n-\tMCData-IPcon-1 reference point is used for MCData application signalling for establishing a session in support of MCData IP connectivity.\n-\tMCData-IPcon-2 reference point carries bidirectional IP Data for point-to-point MCData IP connectivity over the media plane between the U-IPcon distribution function of the MCData server and the IPcon function of the MCData client(s).\n-\tMCData-IPcon-3 reference point is used by the IP-con distribution function of the MCData server to send unidirectional downlink IP Data to the IP-con function of the MCData clients.\n-\tIPcon-host reference point is used for a data host, e.g. server, to use IP connectivity service capabilities. This reference point is outside the scope of the present document.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.8.2\tOff-network functional model",
                            "text_content": "",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.8.3\tFunctional entities description",
                            "text_content": "IP connectivity function of the MCData client is responsible to handle IPcon capability related requests and responses.\nThe IPcon distribution function of the MCData server is responsible for the distribution of IP Data to MCData communication participants. The IPcon distribution function of the MCData server provides the following functionality:\n-\treception of uplink IP Data transmission by means of the MCData-IPcon-2 reference points;\n-\treplicate the IP Data as needed for distribution to those MCData communication participants using unicast transport;\n-\tdistribute downlink data by IP unicast transmission to those MCData communication participants utilizing unicast transport by means of the MCData-IPcon-2 reference points; and\n-\tdistribute downlink IP Data using multicast downlink transport by means of the MCData-IPcon-3 reference point.\nThis functional entity is responsible for transmission and reception control of IP Data transaction between the sending MCData client, the MCData server, and the receiving MCData client. Transmission and reception control function is used to provide arbitration between multiple data requests and apply the necessary policy to ensure that appropriate IP Data are transmitted between the MCData clients.\nThe description of the signalling control plane is contained in the common functional architecture to support MC services as specified in 3GPP TS 23.280 [5].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "6.8.4\tReference points",
                            "text_content": "MCData-IPcon-1 reference point is used for MCData application signalling for establishing a session in support of MCData IP connectivity.\nMCData-IPcon-2 reference point carries bidirectional IP Data for point-to-point MCData IP connectivity over the media plane between the IPcon distribution function of the MCData server and the IPcon function of the MCData client(s).\nMCData-IPcon-3 reference point carries downlink unidirectional IP Data over the media plane between the IPcon distribution function of the MCData server and the IPcon function of the MCData client(s).\nThe description of the signalling control plane reference points is contained in the common functional architecture to support MC services as specified in 3GPP TS 23.280 [5].\n6A\tIdentities\nThe MCData service specific identities (e.g. MCData ID, MCData group ID) are described in clause 8 of 3GPP TS 23.280 [5].\n6B\tApplication of functional model to deployments\nThe application of the functional model to deployments, and description of various deployment scenarios for the MCData service, can be found in clause 9 of 3GPP TS 23.280 [5].\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "7\tProcedures and information flows",
            "description": "",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": [
                {
                    "title": "7.1\tMCData service configuration",
                    "description": "",
                    "summary": "",
                    "text_content": "The MCData service shall support the procedures and related information flows as specified in subclause 10.1 and Annex A of 3GPP TS 23.280 [5] with the following clarifications:\n-\tThe MC service client is the MCData client;\n-\tThe MC service server is the MCData server;\n-\tThe MC service ID is the MCData ID; and\n-\tThe MC service user profile index is the MCData user profile index.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.2\tAffiliation and de-affiliation to/from MCData group(s)",
                    "description": "",
                    "summary": "",
                    "text_content": "The MCData service shall support the procedures and related information flows as specified in subclause 10.8 of 3GPP TS 23.280 [5] with the following clarifications:\n-\tThe MC service client is the MCData client;\n-\tThe MC service server is the MCData server;\n-\tThe MC service group is the MCData group;\n-\tThe MC service ID is the MCData ID; and\n-\tThe MC service group ID is the MCData group ID.\nWhen an MCData user has affiliated to an MCData group then the MCData user can send and receive MCData related media for that MCData group. When an MCData user has de affiliated from an MCData group then the MCData user cannot send and receive MCData related media to and from that MCData group.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.3\tUse of MBMS transmission (on-network)",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.3.1\tInformation flows for MBMS Transmission",
                            "text_content": "Information flows for generic MBMS procedures are defined in 3GPP TS 23.280 [5].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.2\tUse of pre-established MBMS bearers",
                            "text_content": "The MCData service shall support the procedure for using pre-established MBMS bearers as specified in 3GPP TS 23.280 [5] with the following clarifications:\n-\tThe MC service client is the MCData client;\n-\tThe MC service server is the MCData server; and\n-\tThe MC service ID is the MCData ID.\nThe MCData service shall use the MCData-6, MCData-SDS-1, MCData-SDS-2, MCData-SDS-3, MCData-FD-1, MCData-FD-3, MCData-DS-1 and MCData-DS-3 reference points for this procedure.\nMCData may use pre-established MBMS bearer for the MCData features short data service, file distribution and data streaming. The MBMS bearer can be used by any group. Depending on the capacity of the MBMS bearer, the bearer can be used to broadcast one or more services in parallel.\nBoth the media packets as well as application level control signalling (e.g. transmission control) to the receiving users may be sent on the MBMS bearer. Optionally, a separate MBMS bearer could be used for the application level control signalling (e.g. transmission control), due to different bearer characteristic requirements.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.3\tUse of dynamic MBMS bearer establishment",
                            "text_content": "The MCData service shall support the procedure for using dynamic MBMS bearers as specified 3GPP TS 23.280 [5] with the following clarifications:\n-\tThe MC service client is the MCData client;\n-\tThe MC service server is the MCData server; and\n-\tThe MC service ID is the MCData ID.\nThe MCData service shall use the MCData-6, MCData-SDS-1, MCData-SDS-3, MCData-FD-1, MCData-FD-3, MCData-DS-1 and MCData-DS-3 reference points for this procedure.\nMCData may use dynamic MBMS bearer for the MCData features short data service, file distribution and data streaming. The MBMS bearer can be used by any group. Depending on the capacity of the MBMS bearer, the bearer can be used to broadcast one or more services in parallel.\nBoth the media packets as well as application level control signalling (e.g. transmission control) to the receiving users may be sent on the MBMS bearer. Optionally, a separate MBMS bearer could be used for the application level control signalling (e.g. transmission control), due to different bearer characteristic requirements.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.4\tSwitching from MBMS bearer to unicast bearer",
                            "text_content": "The MCData service shall support the procedure for switching from MBMS bearer to unicast bearer as specified 3GPP TS 23.280 [5] with the following clarifications:\n-\tThe MC service client is the MCData client;\n-\tThe MC service server is the MCData server; and\n-\tThe MC service ID is the MCData ID.\nThe MCData service shall use the MCData-SDS-1, MCData-SDS-2, MCData-FD-1, MCData-FD-3, MCData-DS-1 and MCData-DS-3 reference points for this procedure.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.3.5\tUse of MBMS user services for file distribution",
                            "text_content": "This subclause defines information flows and procedures for usage of MBMS user services that applies to MCData file distribution. MBMS user services can be used for any MC service group.\nThe MBMS user service architecture is described in 3GPP TS 26.346 [21].\nNOTE:\tThe current specification does not cover MCData end-to-end encryption file distribution using MBMS when the BM-SC is in the MCData system trust domain.\nTable 7.3.5.2.1-1 describes the information flow MBMS bearer announcement from the MCData server to the MCData client.\nTable 7.3.5.2.1-1: MBMS user service announcement\n\nIn this scenario, the MCData server pre-establishes MBMS user service(s) in certain pre-configured areas before the initiation of a group file distribution. When a user originates a request for a file distribution in one of these areas, the MCData server can use the pre-established MBMS user service(s) for the DL media transmission.\nThe MBMS user service can be announced prior to the file distribution or within the signalling message for the file distribution.\nThe MBMS user service does not transmit application level control signalling. An MBMS bearer could be used for the application level control messages according to the generic MBMS procedures defined in 3GPP TS 23.280 [5].\nEditor's note: The procedure in this clause needs to be revised considering that MBMS user services, as specified in 3GPP TS 26.346 [21], cannot be supported over the MB2 interface.\nThe procedure figure 7.3.5.3.1.2-1 shows only one of the receiving MCData clients using an MBMS user service.\nPre-conditions:\n-\tThe participating users are already affiliated.\nThe figure depicts a user service setup in a mobile broadband system, specifically highlighting the use of a p re-established MBMS user service. This service is crucial for maintaining connectivity in areas with weak or no coverage, ensuring that users can continue to access their desired services. The figure illustrates the various components involved in the service setup, including the MBMS base station, the p re-established MBMS user service, and the p re-established MBMS user service controller. The p re-established MBMS user service is designed to provide a reliable and consistent service, even in areas with poor signal quality.\nFigure 7.3.5.3.1.2-1: Use of pre-established MBMS user service\n1.\tThe MCData server determines to create an MBMS user service with a given MBMS user service id. If the MCData server makes use of the xMB interface, the MCData server creates an MBMS user service over xMB-C (subclause 5.3 from 3GPP TS 26.348 [19]).\nNOTE 1:\tThe procedure to determine the creation of MBMS user services is implementation specific.\n2.\tIf the MCData server makes use of the xMB interface, the MCData server creates an MBMS session over xMB-C for the MBMS user service (subclause 5.4 from 3GPP TS 26.348 [19]), with the type set to \"Files\" to use the MBMS download delivery method. Additionally, the MCData server defines the ingest mode, pull or push, to provide the file into the BM-SC via xMB-U. This MBMS session will be used for file distribution. In response, the MCData server gets the TMGI of the MBMS bearer used for the MBMS session, and the SA file containing the metadata of the MBMS user service. When the push ingest mode is used, as part of the response from the BM-SC the MCData server also obtains the URL to be used to push the file.\n3a.\tElse, the MCData server activates an MBMS bearer over MB2-C for the MBMS user service.\n3b.\tThe MCData server, if not already in the possession of the SA file, generates the SA file containing the metadata of the MBMS user service.\n4.\tThe MCData server passes using control plane signalling the MBMS user service info for the service description associated with the pre-established MBMS user service to the MCData client. The MCData client obtains the TMGI, identifying the MBMS bearer, from the SA file included in the MBMS user service description.\n5.\tThe MCData client stores the information associated with the MBMS user service. The MCData client uses the TMGI and other MBMS user service related information to activate the monitoring of the MBMS bearer.\n6.\tThe MCData client that enters or is in the service area of at least one announced TMGI indicates to the MCData server that the MCData client is able to receive file distributed over MBMS, whereby the MCData server may decide to use this MBMS user service instead of unicast bearer for MC communication sessions.\nNOTE 2:\tStep 4 is optional for the MCData UE on subsequent MBMS user service announcements.\nNOTE 3:\tThe information flow is specified in subclause 10.7.2.2 from 3GPP TS 23.280 [5].\n7.\tIf the MCData server makes use of the xMB interface and wants to deliver a file to a group, the MCData server updates the MBMS session to provide the file list when the pull ingest mode is defined. As described in 3GPP TS 26.348 [19], the file list includes, among other information, the file URL to be used by the BM-SC to fetch the file and the earliest fetch time.\n8.\tThe MCData server signals the file transmission over the MBMS user service to the targeted MCData clients.\nNOTE 4:\tAfter step 8, the file can be provided for distribution over the MBMS session. If the pull ingest mode is defined, the BM-SC fetches the file from the indicated file URL. If the push ingest mode is defined, the MCData server can start pushing the file to the corresponding URL.\n9.\tThe file, transmitted with the MBMS download delivery method, is received by the MCData clients. If the MCData server does not make use of the xMB interface, the MCData server fragments the file to be sent, applies error correction according to the MBMS download delivery method (3GPP TS 26.346 [21]) and sent the FLUTE packets over MB2-U.\nEditor's note: The procedure in this clause needs to be revised considering that MBMS user services, as specified in 3GPP TS 26.346 [21], cannot be supported over the MB2 interface.\nIn this scenario depicted in figure 7.3.5.3.2-1, the MCData server decides to establish an MBMS user service for the distribution of a given file. The MBMS user service is announced to the MCData client, together with the file information to be received.\nNOTE 1:\tThe MCData server logic for determining when to establish the new MBMS user service is implementation specific. For example, the MCData server could decide to establish the MBMS delivery based on the location of the UE's that are a part of the targeted group.\nThe figure depicts a dynamic MBMS user service establishment, illustrating the process of establishing a user service in a mobile broadband Massive MIMO (MB-MBMS) network. The figure shows the various steps involved in the user service establishment, including the selection of the user equipment (UE), the selection of the base station (BS), and the establishment of the user service. The figure also highlights the use of dynamic MBMS, which allows for more efficient and flexible user service establishment in a MB-MBMS network.\nFigure 7.3.5.3.2-1: Use of dynamic MBMS user service establishment\n1.\tThe MCData server determines to create a MBMS user service with a given an MBMS user service id for the group communication session. If the MCData server makes use of the xMB interface, the MCData server creates an MBMS user service over xMB-C (subclause 5.3 from 3GPP TS 26.348 [19]).\n2.\tIf the MCData server makes use of the xMB interface, the MCData server creates a MBMS session for the MBMS user service (subclause 5.4 from 3GPP TS 26.348 [19]), with the type set to \"Files\" to use the MBMS download delivery method. Additionally, the MCData server defines the ingest mode, pull or push, to provide the file into the BM-SC via xMB-U. When the pull ingest mode is defined, the MCData server provides the file list. The file list includes, among other information, the file URL to be used by the BM-SC to fetch the file and the earliest fetch time. In response, the MCData server gets the TMGI of the MBMS bearer used for the MBMS session and the SA file containing the metadata of the MBMS user service. When the pull ingest mode is defined, the MCData server also obtains the scheduling parameter for the file delivery. When the push ingest mode is used, as part of the response from the BM-SC the MCData server obtains the URL to be used to push the file.\n3a.\tElse, the MCData server activates an MBMS bearer over MB2-C for the MBMS user service.\n3b.\tThe MCData server, if not already in the possession of the SA file, generates the SA file containing the metadata of the MBMS user service.\n4.\tThe MCData server passes using control plane signalling the SA file to the MCData client. The MCData client obtains the TMGI, identifying the MBMS bearer, from the SA file included in the MBMS user service description.\n5.\tThe MCData client stores the information associated with the MBMS user service. The MCData client uses the TMGI and other MBMS user service related information to activate the monitoring of the MBMS bearer.\n6.\tThe MCData client that enters or is in the service area of at least one announced TMGI indicates to the MCData server that the MCData client is able to receive file distributed over MBMS, whereby the MCData server may decide to use this MBMS user service instead of unicast bearer for MC communication sessions.\n7.\tThe MCData server signals the file transmission over the MBMS user service to the targeted MCData clients.\nNOTE 2:\tAfter step 7, the file can be provided for distribution over the MBMS session. If the pull ingest mode is defined, the BM-SC fetches the file from the indicated file URL. If the push ingest mode is defined, the MCData server can start pushing the file to the corresponding URL.\n8.\tThe file, transmitted with the MBMS download delivery method, is received by the MCData clients. If the MCData server does not make use of the xMB interface, the MCData server fragments the file to be sent, applies error correction according to the MBMS download delivery method (3GPP TS 26.346 [21]) and sent the FLUTE packets over MB2-U.\nAs described in clause 6.6.3.1.5, the MCData content server provides a repository area where authorized MCData users temporarily store files that are intended to be shared with other MCData users. The distribution of such files targeting a group of MCData users can be performed over MBMS.\nFor the case that the MBMS user service architecture is used over the xMB interface (specified in 3GPP TS 26.348 [19]), two ingest modes, push and pull, can be defined by the MCData server to ingest the file into the BM-SC for distribution over the MBMS sessions.\nNOTE:\tIt is implementation specific if the MCData server uses pull or push ingest mode to ingest the file into the BM-SC over the xMB interface.\nA file can be fetched by the MCData server from the MCData content server over the MCData-FD-5 reference point using the file URL provided by MCData users. The MCData server, thus, enables via the xMB-U interface that the file is ingested, either by pull or push, into the BM-SC for distribution over MBMS.\nNOTE 1:\tThe file also becomes available for the case that the MCData server decides to distribute the file over the MB2 interface to MCData users from the target MCData group.\nWhen the MCData server defines a pull ingest mode, the MCData server provides via the xMB-C interface the resource location from which the BM-SC will fetch the file as well as other session properties (e.g. file earliest fetch time), as described in 3GPP TS 26.348 [19].\nWhen the MCData server defines a push ingest mode, the MCData server directly ingests into the BM-SC via the xMB-U interface the file obtained from the MCData content server. The BM-SC provides to the MCData server the URL to be used to push the file(s).\nNOTE 2:\tFor the push ingest mode, the MCData server is always the functional entity ingesting the file content into the BM-SC via the xMB-U interface.\nThe procedure in figure 7.3.5.3.3.2-1 describes the case where the file to be distributed over MBMS is fetched by the MCData server from the MCData content server.\nPre-conditions:\n-\tThe MCData users on the MCData client 1 to n belong to the same MCData group and are already registered and affiliated for receiving MCData service.\n-\tThe file to be distributed is uploaded to the MCData content server.\n-\tThe BM-SC has the necessary permissions to fetch a file from the MCData system.\nThe figure depicts a file fetching process by the MCData server for file distribution over MBMS. The file is fetched from the file server and distributed to the MBMS server for further processing.\nFigure 7.3.5.3.3.2-1: File fetching by the MCData server for file distribution over MBMS\n1.\tThe MCData server receives a request from the MCData client 1 to distribute a file to a target MCData group. The MCData file distribution request contains the resource location (i.e. the file URL) in the MCData content server.\n2.\tThe MCData server decides to fetch the file from the MCData content server via the MCData-FD-5 reference point.\n3.\tThe MCData server creates an MBMS service and session for file delivery using xMB procedures via the xMB-C interface, as described in 3GPP TS 26.348 [19]. The MCData server indicates, among other session properties, the ingest mode. For the case of pull ingest mode, the MCData server provides the file URL from which the BM-SC will fetch the file. For the case of push ingest mode, the BM-SC provides to the MCData server the URL to be used to push the file into the MBMS session.\nNOTE 3:\tStep 3 may also occur before step 2.\n4.\tThe MCData server provides to the MCData users from the target MCData group the application signalling related to the MBMS session and the file distribution.\n5a.\tFor the case that the file is ingested into the BM-SC based on the push ingest mode, the MCData server pushes the file to the URL indicated by the BM-SC.\n5b.\tFor the case that the file is ingested into the BM-SC based on the pull ingest mode, the BM-SC pulls the file from the provided file URL.\n6.\tThe BM-SC distributes the file over the established MBMS session. When the target MCData clients have activated the reception for that service and are located within the MBMS area coverage, the MCData clients receive the file.\nWhen the MCData server defines a pull ingest mode, the MCData server can alternatively provide to the BM-SC the resource location in the MCData content server (i.e. the file URL contained within the received file distribution request). The BM-SC, thus, will directly fetch the file from the MCData content server.\nNOTE 1:\tIn order to the enable that the BM-SC fetches the file from the MCData content server, the MCData content server supports the xMB-U interface to the BM-SC.\nNOTE 2:\tFor the case that the file is ingested into the BM-SC from the MCData content server, only the pull ingest mode is supported. When push ingest mode is required, the procedure is described in clause 7.3.5.3.3.2.\nThe procedure in figure 7.3.5.3.3.3-1 describes the case where the file to be distributed over MBMS is fetched by the BM-SC from the MCData content server.\nPre-conditions:\n-\tThe MCData users on the MCData client 1 to n belong to the same MCData group and are already registered and affiliated for receiving MCData service.\n-\tThe file to be distributed is uploaded to the MCData content server.\n-\tThe BM-SC has the necessary permissions to fetch a file from the MCData system.\nThe figure depicts a file fetching process by the BM (Base Management) and SC (Service Control) for file distribution over MBMS. The BM is responsible for fetching the file from the MBMS, while the SC ensures the file is successfully distributed to the appropriate MBMS. The figure illustrates the file fetching process in a network, highlighting the role of the BM and SC in managing file distribution.\nFigure 7.3.5.3.3.3-1: File fetching by the BM-SC for file distribution over MBMS\n1.\tThe MCData server receives a request from the MCData client 1 to distribute a file to a target MCData group. The MCData file distribution request contains the resource location (i.e. the file URL) in the MCData content server.\n2.\tThe MCData server creates an MBMS service and session for file delivery using xMB procedures via the xMB-C interface, as described in 3GPP TS 26.348 [19]. The MCData server defines, among other session properties, the ingest mode to pull. The MCData server provides the file URL from which the BM-SC will fetch the file from the MCData content server.\n3.\tThe MCData server provides to the MCData users from the target MCData group the application signalling related to the MBMS session and the file distribution.\n4.\tThe BM-SC fetches the file from the MCData content server via the xMB-U interface.\n5.\tThe BM-SC distributes the file over the established MBMS session. When the target MCData clients have activated the reception for that service and are located within the MBMS area coverage, the MCData clients receive the file.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.3.5.2.1-1: MBMS user service announcement",
                                    "table number": 3,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.3.6\tGroup communication connect and disconnect over MBMS bearer procedures",
                            "text_content": "MBMS bearer can be used for MCData group communication. One MBMS bearer is not permanently associated to one specific group or group communication. Before sending data packets of a group communication over MBMS bearer, the MCData server shall send the association information between group communication and the MBMS bearer. The group session setup procedure indicates the media stream within one MBMS bearer that is used for the specific group communication. When the group communication over the MBMS bearer is finished, this temporary association information of an MCPTT group communication to specific resources on a MBMS bearer is undone.The procedure in clause 7.3.6 requires that the group session is setup before the data transmission starts. This eliminates the need for the receiving clients to continuously use a unicast bearer. Prior to group session setup, the MBMS bearer is activated and announced to the MCData clients.\nNOTE:\tIt is implementation-specific that one MBMS bearer can be re-assigned to different groups, or is associated to only one group.\nThe procedure in this clause uses an establishment of group communication as described in clause 7.4.2.7. Similary, the procedure defined in this clause is also applicable for the group communication established as described in clause 7.4.2.6.\nPre-conditions:\n-\tThe MCData clients 1 to n are registered and affiliated to the same MCData group X.\n-\tThe MCData server has decided to use an MBMS bearer for the MCData service group communication associated with to the MCData group X.\nThe figure depicts a group communication scenario on MBMS bearer, illustrating the connection of multiple groups on a single bearer.\nFigure 7.3.6.2.1-1: Group communication connect on MBMS bearer.\n1.\tActivation and announcement of MBMS bearer availability.\nNOTE 1:\tThe procedure does not include the steps for MCData client location reporting, or for MBMS capability information exchange.\n2.\tThe MCData client 1 initiates a group communication by sending a MCData group data request over a unicast PDN connection towards the MCData server.\n3.\tMCData server initiates the MCData group data request towards each MCData clients 2 to n.\n4.\tThe receiving MCData clients 2 to n optionally notify the user about the incoming MCData session data request.\n5.\tThe receiving MCData client 2 to n accept or reject the MCData group data request and the corresponding result is in the MCData group data response towards MCData server.\n6.\tThe MCData server will send a MapGroupToBearer message over a previously activated MBMS bearer to all users that will receive the communication over an MBMS bearer. The MapGroupToBearer message includes association information between the group communication and MBMS bearer. The MapGroupToBearer message includes MCData group ID and information about the media stream identifier of the activated MBMS bearer and may include the identifier (i.e. the TMGI) of the MBMS bearer broadcasting the communication.\n7.\tThe MCData clients 2 to n process the MapGroupToBearer information and may send a MapGroupToBearer Ack back to the MCData server if required.\n8.\tMCData server forwards the MCData group data response received from MCData client 2 to n to the MCData user initiating the MCData session data request.\nNOTE 2:\tThe steps 3 to 5 and steps 6 to 7 can occur in any order, and prior to step 9 depending on the conditions to proceed with the data transmission.\n9.\tMCData client 1 sends the MC data over uplink unicast PDN connection towards the MCData server.\n10.\tThe MCData server sends the MC data over the indicated stream within the associated MBMS bearer to the MCData clients 2 to n.\nFigure 7.3.6.2.2-1 shows the high level procedure where an UnmapGroupFromBearer message is sent by the MCData server to the MCData clients to indicate that the MCData group communication is being dissociated from the MBMS bearer.\nThe figure depicts a group communication disconnect on MBMS bearer, highlighting the importance of network reliability and the need for proper communication protocols.\nFigure 7.3.6.2.2-1: Group communication disconnect on MBMS bearer.\n1.\tThe MC group communication is taking place over MBMS bearer. MCData client 1 is sending the MC data over a unicast PDN connection to the MCData server.\n2.\tThe MCData server sends the MC data over the MBMS bearer to MCData clients 2 to n.\n3.\tAfter the MC data transmission is over, i.e., no further data to be sent over the group communication, the MCData server sends an UnMapGroupFromBearer to de-associate the group communication from the MBMS bearer.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.4\tShort data service",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.4.1\tGeneral",
                            "text_content": "There are several procedures how an SDS message can be transported from the sender to the recipient. All of the following factors are used by MCData client for selecting appropriate SDS procedures:\n-\tWhether the data to transfer is within or outside the SDS data size limit to transport over signalling control plane;\n-\tWhether the MCData user has only one SDS transaction or multiple SDS transactions;\n-\tWhether MCData user, optionally using its associated and activated functional alias, is targeting SDS transaction to another MCData user or MCData group;\n-\tWhether MCData UE is on-network or off-network; and\n-\tSecurity reasons.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.4.2\tShort data service for on-network",
                            "text_content": "The procedures described in the following subclauses are limited to single MCData system only.\nTable 7.4.2.1.1-1 describes the information flow for the MCData standalone data request sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.4.2.1.1-1: MCData standalone data request (MCData client to MCData server)\n\nTable 7.4.2.1.1-2: MCData standalone data request (MCData server to MCData client)\n\nTable 7.4.2.1.2-1 describes the information flow for the MCData data disposition notification sent from the MCData client to the MCData server.\nTable 7.4.2.1.2-1: MCData data disposition notification\n\nTable 7.4.2.1.3-1 describes the information flow for the MCData standalone session data request sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.4.2.1.3-1: MCData standalone session data request (MCData client to MCData server)\n\nTable 7.4.2.1.3-2: MCData standalone session data request (MCData server to MCData client)\n\nTable 7.4.2.1.4-1 describes the information flow for the MCData standalone session data response sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.4.2.1.4-1: MCData standalone session data response\n\nTable 7.4.2.1.5-1 describes the information flow for the MCData session data request sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.4.2.1.5-1: MCData session data request (MCData client to MCData server)\n\nTable 7.4.2.1.5-2: MCData session data request (MCData server to MCData client)\n\nTable 7.4.2.1.6-1 describes the information flow for the MCData session data response sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.4.2.1.6-1: MCData session data response\n\nTable 7.4.2.1.7-1 describes the information flow for the MCData group standalone data request (in subclause 7.4.2.5.2) sent from the MCData client to the MCData server.\nTable 7.4.2.1.7-1: MCData group standalone data request (MCData client – MCData server)\n\nTable 7.4.2.1.8-1 describes the information flow for the MCData group standalone data request (in subclause 7.4.2.5.2) sent from the MCData server to the MCData client.\nTable 7.4.2.1.8-1: MCData group standalone data request (MCData server – MCData client)\n\nTable 7.4.2.1.9-1 describes the information flow for the MCData data disposition notification(s) sent from the MCData server to the MCData client.\nTable 7.4.2.1.9-1: MCData data disposition notification(s) (MCData server – MCData client)\n\nTable 7.4.2.1.9A-1 describes the information flow for the MCData aggregated data disposition notification sent from the MCData server to the MCData client, indicating the result of a request for an SDS delivery to an MCData group.\nTable 7.4.2.1.9A-1: MCData aggregated data disposition notification\n\nTable 7.4.2.1.10-1 describes the information flow for the MCData group session standalone data request (in subclause 7.4.2.6.2) sent from the MCData client to the MCData server.\nTable 7.4.2.1.10-1: MCData group session standalone data request (MCData client – MCData server)\n\nTable 7.4.2.1.11-1 describes the information flow for the MCData group session standalone data request (in subclause 7.4.2.6.2) sent from the MCData server to the MCData client.\nTable 7.4.2.1.11-1: MCData group session standalone data request (MCData server – MCData client)\n\nTable 7.4.2.1.12-1 describes the information flow for the MCData group standalone data response (in subclause 7.4.2.6.2) sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.4.2.1.12-1: MCData group session standalone data response\n\nTable 7.4.2.1.13-1 describes the information flow for the MCData group data request sent from the MCData client to the MCData server.\nTable 7.4.2.1.13-1: MCData group data request (MCData client – MCData server)\n\nTable 7.4.2.1.14-1 describes the information flow for the MCData group data request sent from the MCData server to the MCData client.\nTable 7.4.2.1.14-1: MCData group data request (MCData server – MCData client)\n\nTable 7.4.2.1.15-1 describes the information flow for the MCData group data response sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.4.2.1.15-1: MCData group data response\n\nTable 7.4.2.1.16-1 describes the information flow for the MCData one-to-one SDS communication upgrade request sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.4.2.1.16-1: MCData one-to-one SDS communication upgrade request\n\nTable 7.4.2.1.17-1 describes the information flow for the MCData one-to-one SDS communication upgrade response sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.4.2.1.17-1: MCData one-to-one SDS communication upgrade response\n\nTable 7.4.2.1.18-1 describes the information flow for the MCData group SDS communication upgrade request sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.4.2.1.18-1: MCData group SDS communication upgrade request (MCData client to MCData server)\n\nTable 7.4.2.1.18-2: MCData group SDS communication upgrade request (MCData server to MCData client)\n\nTable 7.4.2.1.19-1 describes the information flow for the MCData group SDS communication upgrade response sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.4.2.1.19-1: MCData group SDS communication upgrade response\n\nTable 7.4.2.1.20-1 describes the information for the MCData group SDS communication in-progress priority state cancel request sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.4.2.1.20-1: MCData group SDS communication in-progress priority state cancel request (MCData client to MCData server)\n\nTable 7.4.2.1.20-2 MCData group SDS communication in-progress priority state cancel request (MCData server to MCData client)\n\nTable 7.4.2.1.21-1 describes the information flow for the MCData group SDS communication in-progress priority state cancel response sent from the MCData server to the MCData client.\nTable 7.4.2.1.21-1: MCData group SDS communication in-progress priority state cancel response\n\nTable 7.4.2.1.22-1 describes the information flow MCData functional alias resolution response from the MCData server to the MCData client.\nTable 7.4.2.1.22-1: MCData functional alias resolution response information elements\n\nA MCData user initiates a standalone SDS data transfer with another MCData user. For the SDS data transfer signalling plane is used. The target MCData user may be addressed using the functional alias that can be shared with other MCData users.\nThe procedure in figure 7.4.2.2.2-1 describes the case where an MCData user is initiating one-to-one MCData data communication for sending standalone SDS data to other MCData user, with or without disposition request. Standalone refers to sending unidirectional data in one transaction.\nPre-conditions:\n1.\tThe SDS payload data size is below the configured maximum payload data size for SDS over signalling control plane.\n2.\tMCData users on MCData client 1 and MCData client 2 are already registered for receiving MCData service.\n3.\tMCData client 1 and MCData client 2 belong to the same MCData system.\n4.\tOptionally, the MCData client may have activated functional alias to be used.\n5.\tThe MCData server may have subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\n\nThe figure depicts a one-to-one standalone short data service using a signalling control plane, illustrating the use of a single control plane to manage multiple data services.\nFigure 7.4.2.2.2-1: One-to-one standalone short data service using signalling control plane\n1.\tThe user at MCData client 1 initiates an SDS data transfer for the chosen MCData user.\n2.\tMCData client 1 sends a MCData standalone data request towards the MCData server. The MCData standalone data request contains conversation identifier for message thread indication. The MCData standalone data request may include additional implementation specific information in the application metadata container. The MCData standalone data request may contain disposition request if indicated by the user at MCData client 1. MCData user at MCData client 1 may include a functional alias within the SDS data transfer and addresses the target MCData client 2 using a functional alias.\na)\tIf the MCData user at the MCData client 1 initiates an MCData emergency short data service communication or MCData emergency state is already set for the MCData client 1 (due to previously triggered MCData emergency alert):\ni)\tThe MCData standalone data request shall contain emergency indicator; and\nii)\tIf MCData emergency state is not set already, MCData client 1 sets its MCData emergency state. The MCData emergency state of MCData client 1 is retained until explicitly cancelled by the user of MCData client 1.\nNOTE 1:\tWhile MCData client 1 is in the emergency state, all types of MCData one-to-one and group communications initiated by MCData client 1 are initiated as MCData emergency communications.\n3.\tMCData server checks whether the MCData user at MCData client 1 is authorized to send MCData standalone data request. MCData server verifies whether the provided functional alias of MCData client 1, if present, can be used and has been activated for the user. The MCData server also checks whether any policy is to be asserted to limit certain types of message or content to certain members due, for example, to location or user privilege or affiliation. If functional alias is used to address that target MCData user, the MCData server resolves the functional alias to the corresponding MCData ID(s) for which the functional alias is active and proceed with step 4 otherwise proceed with step 6. The MCData server allows only two participating MCData clients for a standalone short data service.\nNOTE 2:\tThe MCData server prioritizes the MCData emergency communication over the other MCData communication. How the MCData server prioritizes MCData emergency communication is not in the scope of the present document.\nNOTE 3:\tIf the MCData server detects that the functional alias used as the target of the SDS data transfer request is simultaneously active for multiple MCData users, then the MCData server can proceed by selecting an appropriate MCData ID based on some selection criteria. The selection of an appropriate MCData ID is left to implementation. These selection criteria can include rejection of the SDS data transfer request, if no suitable MCData ID is selected.\n4. The MCData server responds back to MCData client 1 with a functional alias resolution response message that contains the resolved MCData ID.\n5.\tIf the MCData server replies with a MCData functional alias resolution response message, the MCData client 1 assumes the MCData standalone data request in step 2 is rejected and sends a new MCData standalone data request towards the resolved MCData ID.\n6.\tMCData server initiates the MCData standalone data request towards the MCData user that is determined based on step 3. The MCData standalone data request towards the MCData user contains the emergency indicator if it is present in the received MCData standalone data request from MCData client 1.\nNOTE 4:\tMCData client 2 does not set its emergency state as a result of receiving the MCData standalone data request containing the emergency indicator.\n7.\tIf the payload is for MCData user consumption (e.g. is not application data, is not command instructions, etc.) then the MCData user of MCData client 2 may be notified. Otherwise if the payload is not for MCData user consumption, then the MCData user of MCData client 2 shall not be notified. The action taken when the payload contains application data or command instructions are specific based on the contents of the payload. Payload content received by MCData client 2 which is addressed to a known local non-MCData application that is not yet running shall cause the MCData client 2 to start the local non-MCData application (i.e., remote start application) and shall pass the payload content to the just started application.\n8.\tIf the MCData data disposition for delivery was requested by the user at MCData client 1, then the receiving MCData client initiates a MCData data disposition notification for delivery report. The MCData data disposition notification from MCData client may be stored by the MCData server for disposition history interrogation from authorized MCData users.\n9.\tMCData data disposition notification is sent to the disposition requesting user at MCData client 1.\n10.\tIf the MCData data disposition for read was requested by the user at MCData client 1, then once the receiving user reads the data, the receiving MCData client 2 initiates a MCData data disposition notification for read report. The MCData data disposition notification from MCData client 2 may be stored by the MCData server for disposition history interrogation from authorized MCData users.\n11.\tMCData data disposition notification is sent to the disposition requesting user at MCData client 1.\nA MCData user initiates a standalone SDS data transfer with another MCData user. For the SDS data transfer media plane is used. The target MCData user may be addressed using the functional alias that can be shared with other MCData users.\nThe procedure in figure 7.4.2.3.2-1 describes the case where an MCData user is initiating one-to-one MCData data communication for sending standalone SDS data to other MCData user, with or without disposition request. Standalone refers to sending unidirectional data in one transaction. The SDS payload data size is assumed to be above the configured maximum payload data size for SDS over signalling control plane.\nPre-conditions:\n1.\tMCData users on MCData client 1 and MCData client 2 are already registered for receiving MCData service.\n2.\tMCData client 1 and MCData client 2 belong to the same MCData system.\n3.\tOptionally, the MCData client may have an activated functional alias to be used.\n4.\tThe MCData server may have subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\nThe figure depicts a one-to-one standalone short data service using a media plane, illustrating the concept of a media plane in a 5G network.\nFigure 7.4.2.3.2-1: One-to-one standalone short data service using media plane\n1.\tUser at MCData client 1 would like to initiate an SDS data transfer request for the chosen MCData user.\n2.\tMCData client 1 sends a MCData standalone session data request towards the MCData server. The MCData standalone session data request contains one MCData user for one-to-one data communication as selected by the user at MCData client 1. The MCData standalone session data request contains conversation identifier for message thread indication. The MCData standalone session data request may include additional implementation specific information in the application metadata container. The MCData data request may contain disposition request if indicated by the user at MCData client 1. MCData user at MCData client 1 may include a functional alias within the SDS data transfer and addresses the target MCData client 2 using a functional alias.\na)\tIf the MCData user at the MCData client 1 initiates an MCData emergency short data service communication or MCData emergency state is already set for the MCData client 1 (due to previously triggered MCData emergency alert):\ni)\tThe MCData standalone session data request shall contain emergency indicator; and\nii)\tIf MCData emergency state is not set already, MCData client 1 sets its MCData emergency state. The MCData emergency state of MCData client 1 is retained until explicitly cancelled by the user of MCData client 1.\nNOTE 1:\tWhile MCData client 1 is in the emergency state, all types of MCData one-to-one and group communications initiated by MCData client 1 are initiated as MCData emergency communications.\n3.\tMCData server checks whether the MCData user at MCData client 1 is authorized to send MCData standalone session data request. MCData server verifies whether the provided functional alias of MCData client 1, if present, can be used and has been activated for the user. The MCData server also checks whether any policy is to be asserted to limit certain types of message or content to certain members due, for example, to location or user privilege. MCData server determines the eligible MCData user(s) after policy assertion for sending the MCData standalone session data request. If functional alias is used to address that target MCData user, the MCData server resolves the functional alias to the corresponding MCData ID(s) for which the functional alias is active and proceed with step 4 otherwise proceed with step 6. The resulting list contains all associated MCData IDs/MCData users that share this functional alias. The MCData server allows only two participating MCData clients for a standalone short data service.\nNOTE 2:\tThe MCData server prioritizes the MCData emergency communication over the other MCData communication. How the MCData server prioritizes MCData emergency communication is not in the scope of the present document.\n4.\tThe MCData server responds back to MCData client 1 with a functional alias resolution response message that contains the resolved MCData ID.\nNOTE 3:\tIf the MCData server detects that the functional alias used as the target of the MCData standalone session data request is simultaneously active for multiple MCData users, then the MCData server can proceed by selecting an appropriate MCData ID based on some selection criteria. The selection of an appropriate MCData ID is left to implementation. These selection criteria can include rejection of the MCData standalone session data request, if no suitable MCData ID is selected.\n5.\tIf the MCData server replies with a MCData functional alias resolution response message, the MCData client 1 abandons the MCData standalone session data request in step 2 and sends a new MCData standalone session data request towards the resolved MCData ID.\n6.\tMCData server initiates the MCData standalone session data request towards the MCData users determined. The MCData standalone session data request towards the MCData user contains an emergency indicator if it is present in the received MCData standalone session data request from MCData client 1.\nNOTE 4:\tMCData client 2 corresponds to the MCData user(s) after resolution of the functional alias.\nNOTE 5:\tMCData client 2 does not set its emergency state as a result of receiving the MCData standalone session data request containing the emergency indicator.\n7.\tThe receiving MCData client 2 automatically accepts the MCData standalone session data request and responds with MCData standalone session data response towards MCData server.\n8.\tMCData server forwards the MCData client 2 accepted response to the MCData Client 1 initiating the MCData standalone session data request.\n9.\tMCData client 1 and MCData client 2 have successfully established media plane for data communication and the MCData client 1 transmits the SDS data.\n10.\tIf the payload is for MCData user consumption (e.g. is not application data, is not command instructions, etc.) then the MCData user of MCData client 2 may be notified. Otherwise if the payload is not for MCData user consumption, then the MCData user of MCData client 2 shall not be notified. The action taken when the payload contains application data or command instructions are specific based on the contents of the payload. Payload content received by MCData client 2 which is addressed to a known local non-MCData application that is not yet running shall cause the MCData client 2 to start the local non-MCData application (i.e., remote start application) and shall pass the payload content to the just started application.\n11.\tIf the MCData data disposition for delivery was requested by the user at MCData client 1, then the receiving MCData client initiates a MCData data disposition notification for delivery report. The MCData data disposition notification from MCData client 2 may be stored by the MCData server for disposition history interrogation from authorized MCData users.\n12.\tMCData data disposition notification is sent to the disposition requesting user at MCData client 1.\n13. If the MCData disposition for read was requested by the user at MCData client 1, then once the receiving user reads the data, the receiving MCData client 2 initiates a MCData disposition notification for read report. The MCData data disposition notification from MCData client 2 may be stored by the MCData server for disposition history interrogation from authorized MCData users.\n14.\tMCData data disposition notification is sent to the disposition requesting user at MCData client 1.\nA MCData user triggers an establishment of a MCData session with another MCData user for the exchange of SDS data. The target MCData user may be addressed using the functional alias that can be shared with other MCData users.\nThe procedure in figure 7.4.2.4.2-1 describes the case where an MCData user is initiating data communication session with another MCData user for exchanging at least one SDS data transaction between them, with or without disposition request using MCData-SDS-1 and MCData-SDS-2 or MCData-SDS-3 reference points.\nPre-conditions:\n1.\tMCData users on MCData client 1 and MCData client 2 are already registered for receiving MCData service.\n2.\tOptionally, the MCData client may have activated functional alias to be used.\n3.\tThe MCData server may have subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\nThe figure depicts a one-to-one short data service session, illustrating the flow of data between two devices. The session is represented by a series of data packets, each carrying a unique identifier and a payload. The figure shows the data packets being transmitted over a network, with the sender and receiver devices being identified by their unique identifiers. The figure also includes a visual representation of the network topology, showing the paths taken by the data packets.\nFigure 7.4.2.4.2-1: One-to-one short data service session\n1.\tUser at MCData client 1 would like to initiate an SDS data communication session request for the chosen MCData user.\n2.\tMCData client 1 sends a MCData session data request towards the MCData server. The MCData session data request contains one MCData user for one-to-one data communication as selected by the user at MCData client 1. The MCData session data request contains conversation identifier for message thread indication. The MCData session data request may include additional implementation specific information in the application metadata container. MCData user at MCData client 1 may include a functional alias within the SDS data transfer and addresses the target MCData client 2 using a functional alias.\na)\tIf the MCData user at the MCData client 1 initiates an MCData emergency short data service communication or MCData emergency state is already set for the MCData client 1 (due to previously triggered MCData emergency alert):\ni)\tThe MCData session data request shall contain emergency indicator; and\nii)\tIf MCData emergency state is not set already, MCData client 1 sets its MCData emergency state. The MCData emergency state of MCData client is retained until explicitly cancelled by the user of MCData client 1.\nNOTE 1:\tWhile MCData client 1 is in the emergency state, all types of MCData one-to-one and group communications initiated by MCData client 1 are initiated as MCData emergency communications.\n3.\tMCData server checks whether the MCData user at MCData client 1 is authorized to send MCData session data request. The MCData server also checks whether any policy is to be asserted to limit certain types of message or content to certain members due, for example, to location or user privilege. MCData server determines the eligible MCData user(s) after policy assertion for sending the MCData session data request. MCData server also verifies whether the provided functional alias of MCData client 1, if present, can be used and has been activated for the user. If functional alias is used to address that target MCData user, the MCData server resolves the functional alias to the corresponding MCData ID(s) for which the functional alias is active and proceed with step 4 otherwise proceed with step 6. The MCData server allows only two participating MCData clients for a standalone short data service.\nNOTE 2:\tThe MCData server prioritizes the MCData emergency communication over the other MCData communication. How the MCData server prioritizes MCData emergency communication is not in the scope of the present document.\nNOTE 3:\tIf the MCData server detects that the functional alias used as the target of the MCData session data request is simultaneously active for multiple MCData users, then the MCData server can proceed by selecting an appropriate MCData ID based on some selection criteria. The selection of an appropriate MCData ID is left to implementation. These selection criteria can include rejection of the SDS data transfer request, if no suitable MCData ID is selected.\n4.\tThe MCData server responds back to MCData client 1 with a functional alias resolution response message that contains the resolved MCData ID.\n5.\tIf the MCData server replies with a MCData functional alias resolution response message, the MCData client 1 abandons the MCData session data request in step 2 and sends a new MCData session data request towards the resolved MCData ID.\n6.\tMCData server initiates the MCData session data request towards the MCData users determined. The MCData session data request towards the MCData user contains the emergency indicator if it is present in the received MCData session data request from MCData client 1.\nNOTE 4:\tMCData client 2 corresponds to the MCData user(s) after resolution of the functional alias.\nNOTE 5:\tMCData client 2 does not set its emergency state as a result of receiving the MCData session data request containing the emergency indicator.\n7.\tIf the emergency indicator is present, the receiving MCData client 2 notifies the user about the incoming MCData session data request.\n8.\tThe receiving MCData client 2 accepts the MCData session data request and responds with MCData session data response towards MCData server.\n9.\tMCData server forwards the MCData client 2 accepted response to the MCData user initiating the MCData session data request.\n10. and 11.\tMCData client 1 and MCData client 2 have successfully established media plane for data communication and either MCData client can transmit SDS data. The MCData data request may contain disposition request if indicated by the client sending data. If MCData data disposition was requested by the user, then the receiving MCData client initiates a MCData data disposition notification for delivery, read reports to the disposition requesting user. The MCData data disposition notification from MCData user may be stored by the MCData server for disposition history interrogation from authorized users.\n12. and 13.\tIf the payload is for MCData user consumption (e.g. is not application data, is not command instructions, etc.) then the MCData user of MCData client 2 may be notified, otherwise the MCData user of MCData client 2 shall not be notified.\n14. After SDS data transaction is complete, the established media plane is released.\nThe initiation of a group standalone SDS to a selected group results in affiliated group members receiving the SDS data. The SDS payload data size is assumed to be below the configured maximum payload data size for SDS over signalling control plane.\nThe procedure in figure 7.4.2.5.2-1 describes the case where an MCData user is initiating group standalone MCData data communication with or without disposition request, to a group.\nPre-conditions:\n1.\tMCData users on MCData clients 1 to n belong to the same group and are already registered for receiving MCData service and affiliated.\n2.\tOptionally, the MCData client may have activated functional alias to be used.\n3.\tThe MCData server may have subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\nThe figure depicts a group of standalone SDS (Single Domain Service) using a signalling control plane, illustrating the communication between the SDS and the control plane.\nFigure 7.4.2.5.2-1: Group standalone SDS using signalling control plane\n1.\tThe user at MCData client 1 initiates an SDS data transfer to multiple MCData users selecting a pre-configured group (identified by MCData group ID) and optionally particular members from that group.\n2.\tMCData client 1 sends a MCData group standalone data request towards the MCData server. The MCData group data request contains MCData group ID as selected by the user at MCData client 1. The MCData group standalone data request contains conversation identifier for message thread indication. The MCData session data request may include additional implementation specific information in the application metadata container. The MCData group standalone data request may contain disposition request if indicated by the user at MCData client 1. MCData user at MCData client 1 may include a functional alias within the SDS data transfer.\nIf the MCData user at MCData client 1 initiates an MCData emergency short data service communication or the MCData emergency state is already set for the MCData client 1 (due to a previously triggered MCData emergency alert):\ni)\tthe MCData group standalone data request shall contain an emergency indicator;\nii)\tthe MCData group standalone data request shall set an alert indicator if configured to send an MCData emergency alert while initiating an MCData standalone data request for the emergency short data service communication;\niii)\tif the MCData emergency state is not set already, MCData client 1 sets its MCData emergency state. The MCPTT emergency state is retained until explicitly cancelled; and\niv)\tonce an MCData emergency communication has been initiated, the MCData group is considered to be in an in-progress emergency state until cancelled.\nIf the MCData user at MCData client 1 initiates an MCData imminent peril short data service communication:\ni)\tthe MCData group standalone data request shall contain imminent peril indicator; and\nii)\tonce an MCData imminent peril communication has been initiated, the MCData group is considered to be in an in-progress imminent peril state until cancelled.\n2a.\tIf either emergency indicator or imminent peril indicator is present in the received MCData group standalone data request, the MCData server implicitly affiliates MCData client 1 to the MCData group if the client is not already affiliated.\n3.\tMCData server checks whether the MCData user at MCData client 1 is authorized to send MCData group standalone data request. The MCData server resolves the MCData group ID to determine the members of that group and their affiliation status, based on the information from the group management server. The MCData server also checks whether any policy is to be asserted to limit certain types of message or content to certain members due, for example, to location or user privilege or affiliation. MCData server also verifies whether the provided functional alias, if present, can be used and has been activated for the user.\ni)\tIf an emergency indicator is present in the received MCData group standalone data request and if the MCData group is not in the in-progress emergency state, the MCData group is considered to be in the in-progress emergency state until cancelled; and\nii)\tIf an imminent peril indicator is present in the received MCData group standalone data request and if the MCData group is not in the in-progress imminent peril state, the MCData group is considered to be in the in-progress imminent peril state until cancelled.\n4.\tMCData server initiates the MCData group standalone data request towards each MCData client determined in Step 3. The MCData ID list shall not be included in a unicast downlink delivery to an individual MCData client. The Disposition Type IE shall not be included in a unicast downlink delivery to MCData clients who are not in the MCData ID list in step 2. The MCData group standalone data request towards each MCData client contains:\ni)\tan emergency indicator, if it is present in the received MCData group standalone data request from the MCData client 1;\nii)\tan imminent peril indicator, if it is present in the received MCData group standalone data request from the MCData client 1; and\niii)\tan alert indicator, if requested to initiate an emergency alert in the received MCData group standalone data request from the MCData client 1.\n5.\tIf the payload is for MCData user consumption (e.g. is not application data, is not command instructions, etc.) then the MCData user of MCData clients 2 to n may be notified. Otherwise if the payload is not for MCData user consumption, then the MCData user of MCData clients 2 to n shall not be notified. The action taken when the payload contains application data or command instructions are specific based on the contents of the payload. Payload content received by MCData client 2 which is addressed to a known local non-MCData application that is not yet running shall cause the MCData client 2 to start the local non-MCData application (i.e., remote start application) and shall pass the payload content to the just started application.\n6.\tIf the MCData data disposition for delivery was requested by the user at MCData client 1, then the receiving MCData client(s) initiates a MCData data disposition notification for delivery report.\n7.\tIf the MCData data disposition for read was requested by the user at MCData client 1, then once the receiving user reads the data, the receiving MCData client 2 initiates a MCData data disposition notification for read report.\nNOTE 1:\tOn receiving MCData group standalone data request over MBMS, the receiving MCData client(s) shall check if the MCData ID list IE is included the receiving MCData client shall check if its own MCData ID is in the list. If not, step 6 and 7 are not required.\n8.\tThe MCData data disposition notification(s) from MCData client may be stored by the MCData server for disposition history interrogation from authorized MCData users. The MCData data disposition notification(s) from each MCData user may be aggregated.\n9.\tAggregated or individual MCData data disposition notification(s) is sent to the disposition requesting user at MCData client 1.\nThe initiation of a group standalone SDS to a selected group results in affiliated group members receiving the SDS data. The SDS payload data size is assumed to be above the configured maximum payload data size for SDS over signalling control plane.\nThe procedure in figure 7.4.2.6.2-1 describes the case where an MCData user is initiating group standalone MCData data communication with or without disposition request to a group.\nPre-conditions:\n1.\tMCData users on MCData client 1 to n belong to the same group and are already registered for receiving MCData service and affiliated.\n2.\tOptionally, the MCData client may have activated functional alias to be used.\n3.\tThe MCData server may have subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\nThe figure depicts a G-band standalone SD-WAN (Software-Defined Wide Area Network) system using a media plane. The system includes a media plane, which is a dedicated hardware component for data transmission, and a media gateway, which is a software-based component for network management and traffic routing. The media plane is responsible for transmitting data packets over the network, while the media gateway manages the network traffic and ensures the smooth operation of the system. The figure also includes a media plane controller, which is a software component that manages the media plane and ensures the efficient transmission of data packets. Overall, the figure provides a detailed overview of the G-band standalone SD-WAN system, highlighting its key components and their roles in the network's operation.\nFigure 7.4.2.6.2-1: Group standalone SDS using media plane\n1.\tUser at MCData client 1 would like to initiate a SDS data transfer request to multiple MCData users selecting a pre-configured group (identified by MCData group ID) and optionally particular members from that group.\n2.\tMCData client 1 sends a MCData group session standalone data request towards the MCData server. The MCData group session standalone data request contains target recipient(s) as selected by the user at MCData client 1. The MCData session group standalone data request contains conversation identifier for message thread indication. The MCData session group standalone data request may include additional implementation specific information in the application metadata container. The MCData session group standalone data request may contain disposition request if indicated by the user at MCData client 1. MCData user at MCData client 1 may include a functional alias within the SDS data transfer.\nIf the MCData user at MCData client 1 initiates an MCData emergency short data service communication or the MCData emergency state is already set for MCData client 1 (due to a previously triggered MCData emergency alert):\ni)\tthe MCData group session standalone data request shall contain an emergency indicator;\nii)\tthe MCData group session standalone data request shall set the alert indicator if configured to send an MCData emergency alert while initiating an MCData standalone data request for the emergency short data service communication;\niii)\tif the MCData emergency state is not set already, MCData client 1 sets its MCData emergency state. The MCPTT emergency state is retained until explicitly cancelled; and\niv)\tonce an MCData emergency communication has been initiated, the MCData group is considered to be in an in-progress emergency state until cancelled.\nIf the MCData user at MCData client 1 initiates an MCData imminent peril short data service communication:\ni)\tthe MCData group session standalone data request shall contain an imminent peril indicator; and\nii)\tonce an MCData imminent peril communication has been initiated, the MCData group is considered to be in an in-progress imminent peril state until cancelled.\n2a.\tIf either an emergency indicator or an imminent peril indicator is present in received MCData group session standalone data request, the MCData server implicitly affiliates MCData client 1 to the MCData group if the client is not already affiliated.\n3.\tMCData server checks whether the MCData user at MCData client 1 is authorized to send MCData session group standalone data request. The MCData server resolves the MCData group ID to determine the members of that group and their affiliation status, based on the information from the group management server. The MCData server also checks whether any policy is to be asserted to limit certain types of message or content to certain members due, for example, to location or user privilege. MCData server also verifies whether the provided functional alias, if present, can be used and has been activated for the user.\ni)\tif an emergency indicator is present in the received MCData group session standalone data request and if the MCData group is not in the in-progress emergency state, the MCData group is considered to be in the in-progress emergency state until cancelled; and\nii)\tif an imminent peril indicator is present in the received MCData group session standalone data request and if the MCData group is not in the in-progress imminent peril state, the MCData group is considered to be in the in-progress imminent peril state until cancelled.\n3a.\tThe MCData server configures the priority of the underlying bearers for all participants in the MCData group.\n4.\tMCData server initiates the MCData group session standalone data request towards each MCData user determined in Step 3. The MCData ID list shall not be included in a unicast downlink delivery to an individual MCData client. The Disposition Type IE shall not be included in a unicast downlink delivery to MCData clients who are not in the MCData ID list in step 2. The MCData group session standalone data request towards each MCData client contains:\ni)\tan emergency indicator, if it is present in the received MCData group session standalone data request from the MCData client 1;\nii)\tan imminent peril indicator, if it is present in the received MCData group session standalone data request from the MCData client 1; and\niii)\tan alert indicator, if requested to initiate an emergency alert in the received MCData group session standalone data request from MCData client 1.\n5.\tThe receiving MCData clients 2 to n automatically accepts the MCData group session standalone data request and responds with MCData group standalone data response towards MCData server.\n6.\tMCData server forwards the MCData clients 2 to n accepted response to the MCData user initiating the MCData group session standalone data request.\nNOTE 1:\tStep 6 can occur at any time following step 4, and prior to step 7 depending on the conditions to proceed with the data transmission.\n7.\tMCData client 1 and MCData server have successfully established media plane for data communication and the MCData client 1 transmits the SDS data.\n8.\tMCData server distributes the data received from MCData client 1 to MCData clients 2 to n over the established media plane. After completion of the MCData transfer from MCData client 1, media plane resources associated to the data communication are released.\nNOTE 2:\tMCData server is not required to wait for the complete reception of SDS data from MCData client 1 prior to initiating transmission to MCData client 2 to n.\n9.\tIf the payload is for MCData user consumption (e.g. is not application data, is not command instructions, etc.) then the MCData user of MCData client 2 to n may be notified. Otherwise if the payload is not for MCData user consumption, then the MCData user of MCData client 2 to n shall not be notified. The action taken when the payload contains application data or command instructions are specific based on the contents of the payload. Payload content received by MCData client 2 which is addressed to a known local non-MCData application that is not yet running shall cause the MCData client 2 to start the local non-MCData application (i.e., remote start application) and shall pass the payload content to the just started application.\n10.\tIf the MCData data disposition for delivery was requested by the user at MCData client 1, then the receiving MCData client(s) initiates a MCData data disposition notification for delivery report.\n11.\tIf the MCData data disposition for read was requested by the user at MCData client 1, then once the receiving user reads the data, the receiving MCData client 2 initiates a MCData data disposition notification for read report.\nNOTE 3:\tOn receiving MCData group standalone data request over MBMS, the receiving MCData client(s) shall check if the MCData ID list IE is included the receiving MCData client shall check if its own MCData ID is in the list. If not, step 6 and 7 are not required.\n12.\tThe MCData data disposition notification(s) from MCData client may be stored by the MCData server for disposition history interrogation from authorized MCData users. The MCData data disposition notification(s) from each MCData user may be aggregated.\n13.\tAggregated or individual MCData data disposition notification(s) is sent to the disposition requesting user at MCData client 1.\nThe initiation of a group SDS to a selected group results in affiliated group members exchanging SDS data.\nThe procedure in figure 7.4.2.7.2-1 describes the case where an MCData user is initiating SDS data communication session with an MCData group for exchanging SDS data transactions between the group participants, with or without disposition request, using MCData-SDS-1 and MCData-SDS-2 reference points.\nPre-conditions:\n1.\tMCData users on MCData client 1 to n belong to the same group and are already registered for receiving MCData service and affiliated.\n2.\tOptionally, the MCData client may have activated functional alias to be used.\n3.\tThe MCData server may have subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\n\nThe figure depicts a 4-layer session in a SD-WAN network, with each layer representing a different layer of the network. The first layer, labeled as \"Group SDS,\" is responsible for managing the session and routing traffic. The second layer, labeled as \"Group SDC,\" is responsible for managing the session and routing traffic. The third layer, labeled as \"Group SDU,\" is responsible for managing the session and routing traffic. The fourth layer, labeled as \"Group SDU,\" is responsible for managing the session and routing traffic.\nFigure 7.4.2.7.2-1: Group SDS session\n1.\tUser at MCData client 1 would like to initiate a SDS group data transfer request to multiple MCData users selecting a pre-configured group (identified by MCData group ID) and optionally particular members from that group.\n2.\tMCData client 1 sends a MCData group data request towards the MCData server. The MCData group data request contains MCData group ID as selected by the user at MCData client 1. The MCData session data request contains conversation identifier for message thread indication. The MCData group data request may include additional implementation specific information in the application metadata container. MCData user at MCData client 1 may include a functional alias within the SDS data transfer.\nIf the MCData user at MCData client 1 initiates an MCData emergency short data service communication or the MCData emergency state is already set for the MCData client 1 (due to a previously triggered MCData emergency alert):\ni)\tthe MCData group data request shall contain an emergency indicator;\nii)\tthe MCData group data request shall set an alert indicator if configured to send an MCData emergency alert while initiating an MCData standalone data request for the emergency short data service communication; and\niii)\tif MCData emergency state is not set already, MCData client 1 sets its MCData emergency state. The MCPTT emergency state of MCData client 1 is retained until explicitly cancelled by the user of MCData client 1.\nNOTE 1:\tWhile MCData client 1 is in the emergency state, all types of MCData one-to-one and group communications initiated by MCData client 1 are initiated as MCData emergency communications.\nIf the MCData user at MCData client 1 initiates an MCData imminent peril short data service communication:\ni)\tthe MCData group data request shall contain an imminent peril indicator.\n2a.\tIf either emergency indicator or imminent peril indicator is present in received MCData group data request, the MCData server implicitly affiliates MCData client 1 to the MCData group if the client is not already affiliated.\n3.\tMCData server checks whether the MCData user at MCData client 1 is authorized to send MCData group data request. The MCData server resolves the MCData group ID to determine the members of that group and their affiliation status, based on the information from the group management server. The MCData server also checks whether any policy is to be asserted to limit certain types of message or content to certain members due, for example, to location or user privilege. MCData server also verifies whether the provided functional alias, if present, can be used and has been activated for the user.\ni)\tif an emergency indicator is present in the received MCData group data request and if MCData group is not in in-progress emergency state, the MCData group is considered to be in the in-progress emergency state until cancelled;\nNOTE 2:\tWhile the MCData group is in the in-progress emergency state, all types of MCData communications within the group are processed as emergency group communications by the MCData server. MCData group members that are not in the emergency state do not indicate emergency in group communication requests.\nii)\tif an imminent peril indicator is present in the received MCData group data request and if the MCData group is not in the in-progress imminent peril, the MCData group is considered to be in the in-progress imminent peril state until cancelled;\n3a.\tThe MCData server configures the priority of the underlying bearers for all participants in the MCData group.\n4.\tMCData server initiates the MCData group data request towards each MCData user determined in Step 3. The MCData group data request towards each MCData client contains:\ni)\tan emergency indicator if it is present in the received MCData group data request from the MCData client 1;\nii)\tan imminent peril indicator if it is present in the received MCData group data request from the MCData client 1; and\niii)\tan alert indicator if requested to initiate an emergency alert in the received MCData group data request from MCData client 1;\n5.\tThe receiving MCData clients 2 to n optionally notify the user about the incoming MCData session data request.\n6.\tThe receiving MCData client 2 to n accept or reject the MCData group data request and the corresponding result is in the MCData group data response towards MCData server.\n7.\tMCData server forwards the MCData group data response received from MCData client 2 to n to the MCData user initiating the MCData session data request.\nNOTE 3:\tStep 7 can occur at any time following step 4, and prior to step 8 depending on the conditions to proceed with the data transmission.\n8.\tMCData client 1 and the MCData group data request accepted clients have successfully established media plane for data communication and either MCData client can transmit SDS data. The MCData data request may contain disposition request if indicated by the client sending data. If the payload is for MCData user consumption (e.g. is not application data, is not command instructions, etc.) then the SDS data receiving MCData users may be notified, otherwise those MCData users shall not be notified.\n9.\tIf MCData data disposition was requested by the user, then the SDS data receiving MCData client initiates a MCData data disposition notification for delivery, read reports to the disposition requesting user. The MCData data disposition notification from the receiving MCData clients may be stored by the MCData server for disposition history interrogation from authorized users.\n10.\tBased on the MCData user action or conditions to release, the established media plane for SDS data exchange is released.\nThis clause is for adding procedures related to upgrading an existing MCData one-to-one SDS communication to an MCData emergency one-to-one SDS communication.\nThe procedure in figure 7.4.2.8.2-1 describes the case where an authorized MCData user is upgrading an ongoing MCData one-to-one SDS communication to an MCData emergency one-to-one SDS communication. This procedure is applicable only when MCData one-to-one SDS communication is established as described in subclause 7.4.2.3 \"One-to-one standalone short data service using media plane\" or as described in subclause 7.4.2.4 \"One-to-one short data service session\".\nPre-conditions:\n1.\tBoth members of the MCData one-to-one SDS communication belong to the same MCData system.\n2.\tMCdata one-to-one SDS communication is already in progress.\nThe figure depicts a communication system with two types of data streams: one-to-one SDS (Single Data Stream) and emergency one-to-one SDS (Emergency One-to-One SDS). The system upgrades to a more efficient communication method, one-to-one SDS, which is more reliable and efficient.\nFigure 7.4.2.8.2-1 MCData one-to-one SDS communication upgraded to MCData emergency one-to-one SDS communication\n1.\tThe MCData user at MCData client 1 initiates an emergency. MCData client 1 sets its MCData emergency state. The MCData emergency state of MCData client 1 is retained until explicitly cancelled by the user of MCData client 1.\nNOTE 1:\tWhile MCData client 1 is in the emergency state, all types of MCData one-to-one and group communications initiated by MCData client 1 are initiated as MCData emergency communications.\n2.\tMCData client 1 requests the MCData server to upgrade the one-to-one MCData SDS communication to in-progress emergency by sending a MCData one-to-one SDS communication upgrade request.\n3.\tThe MCData server sends the MCData one-to-one SDS communication upgrade request towards MCData client 2, the MCData client of the other participant.\nNOTE 2:\tMCData client 2 does not set its emergency state as a result of receiving the MCData one-to-one SDS communication upgrade request containing the emergency indicator.\n4.\tThe MCData user is notified of the in-progress emergency of the MCData emergency one-to-one SDS communication.\n5.\tThe receiving MCData client acknowledges the MCData one-to-one SDS communication upgrade request and sends MCData one-to-one SDS communication upgrade response to the MCData server.\n6.\tThe MCData server adjusts the priority of the underlying bearer for both participants of the MCData one-to-one SDS communication. The priority is retained until the communication session ends.\n7.\tThe MCData server sends MCData one-to-one SDS communication upgrade response to MCData client 1.\n8.\tMCData client 1 and MCData client 2 continue with the MCData one-to-one SDS communication, which has been transformed into an MCData emergency one-to-one SDS communication.\nThis clause is for adding procedures related to upgrading an existing MCData group SDS communication to an MCData emergency group SDS communication.\nThe procedure in figure 7.4.2.9.2-1 describes the case where an authorized MCData user is upgrading an ongoing MCData group SDS communication to an MCData emergency group SDS communication. This procedure is applicable only when group MCData communication is established as described in subclause 7.4.2.6 \"Group standalone short data service using media plane\" or as described in subclause 7.4.2.7 \"Group short data service session\".\nNOTE 1:\tFor simplicity, a single MCData server is shown in place of a user home MCData server and a group hosting MCData server.\nPre-conditions:\n1.\tThe MCData group is previously defined on the group management server with MCData client 1, MCData client 2 and MCData client 3 affiliated to that MCData group.\n2.\tAll members of the MCData group belong to the same MCData system.\n3.\tMCData group SDS communication is already in progress.\n4.\tThe initiating MCData client 1 has been configured to send an MCData emergency alert when upgrading an MCData emergency group communication.\nThe figure depicts a communication system upgrade, specifically from MCData to MCData emergency group SDS communication, with a focus on the upgraded communication group SDS. The upgrade includes the use of MCData, which is a data communication protocol, and emergency group SDS, which is a communication group designed for emergency situations. The figure illustrates the communication system's upgrade process, highlighting the changes made to the communication group and the associated protocols.\nFigure 7.4.2.9.2-1: MCData group SDS communication upgraded to MCData emergency group SDS communication\n1.\tThe MCData user at MCData client 1 initiates a group emergency. MCData client 1 sets its MCData emergency state. The MCData emergency state of MCData client 1 is retained until explicitly cancelled by the user of MCData client 1.\nNOTE 2:\tWhile MCData client 1 is in the emergency state, all types of MCData one-to-one and group communications initiated by MCData client 1 are initiated as MCData emergency communications.\n2.\tMCData client 1 requests the MCData server to upgrade the MCData group to an in-progress emergency state by sending a MCData group SDS communication upgrade request. The MCData client 1 sets the emergency indicator in the request. If configured to send an MCData alert when initiating an MCData emergency group SDS upgrade, the request also contains an indication that an MCData alert is to be initiated.\n3.\tThe MCData server sets the emergency state of the MCData group and adjusts the priority of the underlying bearer for all or selected participants in the MCData group SDS communication that receive the communication over unicast.\nNOTE 3:\tThe determination of the selected participants whose bearers have to be upgraded is left to implementation.\nNOTE 4:\tWhile the MCData group is in the in-progress emergency state, all types of MCData communications within the group are processed as emergency group communications by the MCData server. MCData group members that are not in the emergency state do not indicate emergency in group communication requests.\n4.\tMCData server sends the MCData group SDS communication upgrade request towards the MCData clients of each of those affiliated MCData group members. The request contains an indication of an MCData emergency alert if the request from the originator indicated MCData emergency alert.\n5.\tMCData users are notified of the in-progress emergency state of the MCData group.\n6.\tThe receiving MCData clients send the MCData group SDS communication upgrade response to the MCData server to acknowledge the MCData group emergency request. For a multicast call, these acknowledgements are not sent.\n7.\tThe MCData server sends the MCData group SDS communication upgrade response to the MCData user 1 to confirm the upgrade request.\nNOTE 5:\tStep 7 can occur at any time following step 3, depending on the conditions to proceed with the call.\nMCData client 1, MCData client 2 and MCData client 3 continue with the MCData group SDS communication, which has been transformed into an MCData emergency group SDS communication.\nThis clause describes procedures related to MCData in-progress emergency group state cancel. The emergency state of the group can also be cancelled by the group FD in-progress emergency state cancellation procedure in subclause 7.5.2.13.2, or by the emergency alert cancellation procedure specified in 3GPP TS 23.280 [16], subclause 10.10.1.2.2.2.\nThe procedure in figure 7.4.2.10.2-1 describes the case where an authorized MCData user cancels MCData group's in-progress emergency.\nPre-conditions:\n1.\tThe MCData group is previously defined on the group management server with MCData client 1, MCData client 2 and MCData client 3 affiliated to that MCData group.\n2.\tAll members of the MCData group belong to the same MCData system.\n3.\tMCData group members have been notified about the in-progress emergency.\n4.\tThe MCData group is in the in-progress emergency state and has prioritized bearer support.\n5.\tMCData client 1 previously initiated the in-progress emergency for the group.\nThe given telecommunication figure depicts a 10 Gbps MCData group SDS in-progress emergency group state, indicating that the group is currently in the cancel state. The figure shows the status of the group, including the current state and the reason for the cancelation.\nFigure 7.4.2.10.2-1: MCData group SDS in-progress emergency group state cancel\n1.\tThe user at the MCData client 1 initiates an MCData group SDS in-progress emergency group state cancel.\nNOTE 1:\tAn MCData user authorized to cancel in-progress emergencies on the MCData group can also be authorised to cancel the MCData emergency alert in addition to the initiator. However, only the initiator can cancel the initiator's local MCData emergency state.\n2.\tThe MCData client 1 sends an MCData group SDS communication in-progress priority state cancel request to the MCData server. The MCData client 1 also resets the emergency indicator in the request to inform MCData server about cancellation of in-progress emergency group state.\nNOTE 2:\tIf an MCData emergency alert relating to MCData client 1 is in effect together with an MCData in-progress emergency group state on the MCData group, the MCData emergency alert of MCData client 1 can be cancelled at the same time. In that case, the MCData group SDS in-progress priority group state cancel request carries an indication that the emergency alert of MCData client 1 is also being cancelled.\nNOTE 3:\tIf an MCData group SDS communication in-progress priority state cancel request is received by the MCData server while a group member that is in the emergency state is transmitting, the MCData group SDS communication in-progress priority state cancel request is rejected by the MCData server.\n3.\tThe MCData server adjusts the priority of the underlying bearer; priority treatment is no longer required. The MCData server cancels/resets the emergency in-progress state of the MCData group.\n4.\tThe MCData server sends an MCData group SDS in-progress priority state cancel request to the MCData group members.\n5.\tMCData group members are notified of the MCData group SDS in-progress emergency state cancel.\n6.\tThe receiving MCData clients send the MCData group SDS in-progress priority state cancel response to the MCData server to acknowledge the MCData in-progress emergency group state cancel. For a multicast call scenario, these acknowledgements are not sent.\n7.\tThe MCData server sends the MCData group SDS in-progress priority state cancel response to the MCData user 1 to confirm the MCData in-progress emergency group state cancel. If the MCData in-progress emergency group state cancel request (in step 2) contained the \"Alert indicator\" IE, the MCData client 1 resets its local emergency status.\nNOTE 4:\tStep 7 can occur at any time following step 3, depending on the conditions to proceed with the call.\nThis clause is for adding procedures related to upgrade to an imminent peril group SDS communication.\nThis procedure is applicable only when group MCData SDS communication is established as described in subclause 7.4.2.6 \"Group standalone short data service using media plane\" or as described in subclause 7.4.2.7 \"Group short data service session\". The MCData service shall support the procedures and related information flows as specified in subclause 7.4.2.9 \"Group SDS communication upgrade to a group SDS emergency communication\" with the following clarifications:\n-\tIn step 2), the MCData client 1 sets the imminent peril indicator;\n-\tIn step 3), the bearers' priority is adjusted as necessary, to correspond to an imminent peril priority which could be different than the setting used in the procedure in subclause 7.4.2.9; and\n-\tIn step 5), MCData users are notified of the in-progress imminent peril state of the MCData group.\nThis clause is for adding procedures related to group SDS communication in-progress imminent peril group state cancel.\nThe MCData service shall support the procedures and related information flows as specified in subclause 7.4.2.10 \"Group SDS communication in-progress emergency group state cancel\" with the following clarifications:\n-\tIn step 2), the MCData client 1 sets imminent peril indicator; and\n-\tIn step 5), MCData users are notified of the group SDS communication in-progress imminent peril state cancel.\nThe MCData service shall support mechanisms that allow a MCData user be presented with the whole content of a group conversation in a group that he is a member of. This includes the content (messages) exchanged before the MCData user joins the group conversation.\nFigure 7.4.2.13.2-1 describes procedures for a MCData user joining late a group conversation.\nPre-conditions:\n1.\tThe MCData group is provisioned for lossless communication.\n2.\tAll members of the MCData group have an account created in the MCData message store.\n3.\tMCData client 1, MCData client 2 and MCData client 3 are members of the same MCData group,\n4.\tMCData client 1 and 2 are served by MCData server 1 and have registered and affiliated to the MCData group.\n5.\tMCData client 3 is served by MCData server 2 and has not affiliated to the MCData group yet.\nNOTE 1:\tThe interactions of MCData client 1 and MCData client 2 to MCData message store are not shown in the figure.\nThe figure depicts a user interface for a communication system, specifically a MCData group conversation. It shows a user entering a conversation, with a list of ongoing MCData groups and their respective data. The interface includes a visual representation of the data, such as text messages and attachments, and a user interface for managing the conversation. The figure is labeled with the figure name \"Figure 7.4.2.13 .2-1:  Providing data for a user entering an ongoing MCData group conversation.\"\nFigure 7.4.2.13.2-1: Providing data for a user entering an ongoing MCData group conversation\n1.\tA group conversation is initiated according to procedures in subclause 7.4.2.6, and all members of the group are invited into the communication whether affiliated or not. As MCData user 3 is not affiliated at this time, MCData server 2 accepts the invitation to the group conversation on behalf of MCData user 3.\n2.\tThe media plane is established for the group conversation. MCData server 2 is in the media plane to receive the conversation on behalf of MCData user 3.\n3.\tMCData server 2 stores the received conversation to MCData user 3 account in the MCData message store.\nNOTE 2:\tIf the received conversation requests delivery notification the MCData server 2 will send message delivered to the message sender. If the received conversation requests read notification the MCData client 3 will send message read to the message sender once it has presented the message to the user.\n4.\tMCData user 3 is online and using MCData client 3 to affiliate to the MCData group.\n5.\tMCData client 3, through the message store client, synchronizes with the MCData user 3 account in the MCData message store.\n6.\tMCData server 2 invites MCData client 3 to the MCData group conversation.\n7.\tMCData user 3 joins the MCData group conversation.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.4.2.1.1-1: MCData standalone data request (MCData client to MCData server)",
                                    "table number": 4,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.1-2: MCData standalone data request (MCData server to MCData client)",
                                    "table number": 5,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.2-1: MCData data disposition notification",
                                    "table number": 6,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.3-1: MCData standalone session data request (MCData client to MCData server)",
                                    "table number": 7,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.3-2: MCData standalone session data request (MCData server to MCData client)",
                                    "table number": 8,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.4-1: MCData standalone session data response",
                                    "table number": 9,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.5-1: MCData session data request (MCData client to MCData server)",
                                    "table number": 10,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.5-2: MCData session data request (MCData server to MCData client)",
                                    "table number": 11,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.6-1: MCData session data response",
                                    "table number": 12,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.7-1: MCData group standalone data request (MCData client – MCData server)",
                                    "table number": 13,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.8-1: MCData group standalone data request (MCData server – MCData client)",
                                    "table number": 14,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.9-1: MCData data disposition notification(s) (MCData server – MCData client)",
                                    "table number": 15,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.9A-1: MCData aggregated data disposition notification",
                                    "table number": 16,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.10-1: MCData group session standalone data request (MCData client – MCData server)",
                                    "table number": 17,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.11-1: MCData group session standalone data request (MCData server – MCData client)",
                                    "table number": 18,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.12-1: MCData group session standalone data response",
                                    "table number": 19,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.13-1: MCData group data request (MCData client – MCData server)",
                                    "table number": 20,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.14-1: MCData group data request (MCData server – MCData client)",
                                    "table number": 21,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.15-1: MCData group data response",
                                    "table number": 22,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.16-1: MCData one-to-one SDS communication upgrade request",
                                    "table number": 23,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.17-1: MCData one-to-one SDS communication upgrade response",
                                    "table number": 24,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.18-1: MCData group SDS communication upgrade request (MCData client to MCData server)",
                                    "table number": 25,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.18-2: MCData group SDS communication upgrade request (MCData server to MCData client)",
                                    "table number": 26,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.19-1: MCData group SDS communication upgrade response",
                                    "table number": 27,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.20-1: MCData group SDS communication in-progress priority state cancel request (MCData client to MCData server)",
                                    "table number": 28,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.20-2 MCData group SDS communication in-progress priority state cancel request (MCData server to MCData client)",
                                    "table number": 29,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.21-1: MCData group SDS communication in-progress priority state cancel response",
                                    "table number": 30,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.2.1.22-1: MCData functional alias resolution response information elements",
                                    "table number": 31,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.4.3\tShort data service for off-network",
                            "text_content": "Off-network SDS communications are based on ProSe capabilities as described in clause 7.16.\nTable 7.4.3.2.1-1 describes the information flow for the MCData standalone data request sent from the MCData client to another MCData client.\nTable 7.4.3.2.1-1: MCData standalone data request\n\nTable 7.4.3.2.2-1 describes the information flow for the MCData data disposition notification sent from the MCData client to another MCData client.\nTable 7.4.3.2.2-1: MCData data disposition notification\n\nTable 7.4.3.2.3-1 describes the information flow for the MCData group standalone data request sent from the MCData client to another MCData client.\nTable 7.4.3.2.3-1: MCData group standalone data request\n\nThis subclause describes the detailed procedures for the scenario where SDS data is to be sent to MCData user in off-network.\nFigure 7.4.3.3.2-1 describes procedures for an off-network MCData client 1 initiating one-to-one MCData data communication for sending standalone SDS data to other MCData client, with or without disposition request. Standalone refers to sending unidirectional data in one transaction. The SDS data size is assumed to be pre-configured.\nPre-conditions:\n1.\tMCData user 1 has initiated communication for sending standalone SDS data to other MCData user 2.\n2.\tMCData client 1 and MCData client 2 are members of the same ProSe Discovery group and are ProSe 1:1 direct communication capable.\n3.\tMCData client 1 has discovered MCData client 2 in proximity, associated with MCData user B, using ProSe Discovery procedures.\nThe figure depicts a one-to-one standalone short data service using signalling control plane, illustrating the use of signalling control plane for efficient data transmission.\nFigure 7.4.3.3.2-1: One-to-one standalone short data service using signalling control plane\n1.\tMCData client 1 checks whether the MCData user 1 is authorized to send MCData standalone data request.\n2.\tIf MCData user 1 is authorised MCData client 1 sends a MCData standalone data request towards the MCData client 2. The MCData standalone data request contains conversation identifier for message thread indication. The MCData standalone data request may include additional implementation specific information in the application metadata container. The MCData standalone data request may contain disposition request if indicated by the user at MCData client 1. If MCData user at the MCData client 1 initiates an MCData emergency communication, then emergency indicator is included in the MCData standalone data request. If an MCData emergency state is not set already when MCData emergency communication is initiated, the MCData client 1 sets its MCData emergency state and is retained until explicitly cancelled. The value of ProSe Per Packet Priority is upgraded according to the state of the MCData communication.\n3.\tOn receiving a MCData standalone data request, the MCData client 2 checks whether any policy is to be asserted to limit certain types of message or content to certain members due, for example, to location or user privilege.\n4.\tIf the policy assertion is positive and the payload is for MCData user consumption (e.g. is not application data, is not command instructions, etc.) then the MCData user of MCData client 2 may be notified. Otherwise if the payload is not for MCData user consumption, then the MCData user of MCData client 2 shall not be notified. The action taken when the payload contains application data or command instructions are specific based on the contents of the payload. Payload content received by MCData client 2 which is addressed to a known local non-MCData application that is not yet running shall cause the MCData client 2 to start the local non-MCData application (i.e., remote start application) and shall pass the payload content to the just started application.\nNOTE:\tIf the policy assertion was negative, the MCData client 2 sends an appropriate notification to MCData client 1.\n5.\tIf the MCData data disposition for delivery was requested by the user at MCData client 1, then the receiving MCData client 2 initiates a MCData data disposition notification for delivery report.\n6.\tIf the MCData data disposition for read was requested by the user at MCData client 1, then once the receiving user reads the data, the receiving MCData client 2 initiates a MCData data disposition notification for read report.\nThe initiation of a group standalone SDS to a selected group results in off-network MCData group members receiving the SDS data.\nFigure 7.4.3.4.2-1 describes procedures for an off-network MCData client 1 initiating group MCData data communication for sending SDS data to a MCData group, with or without disposition request. The SDS data size limit is pre-configured.\nPre-conditions:\n1.\tMCData user 1 has initiated group communication for sending SDS data to the MCData group.\n2.\tInformation for ProSe direct communications corresponding to the MCData group and its mapping to ProSe Layer-2 Group ID are pre-configured in MCData client 1.\n3.\tMCData client 1 to MCData client N are members of the same MCData group.\nThe figure depicts a group of standalone short data service (SDS) using a signalling control plane, illustrating the use of signalling control planes for efficient and reliable communication.\nFigure 7.4.3.4.2-1: Group standalone short data service using signalling control plane\n1.\tMCData client 1 checks whether the MCData user 1 is authorized to send MCData group standalone data request.\n2.\tIf MCData user 1 is authorised MCData client 1 sends a MCData group standalone data request towards the MCData group. The MCData group standalone data request contains conversation identifier for message thread indication. The MCData group standalone data request may include additional implementation specific information in the application metadata container. The MCData group standalone data request may contain disposition request if indicated by the user at MCData client 1. If MCData group standalone data request contains disposition request, MCData group standalone data request shall also contain the IP address of the MCData client 1. If MCData user at the MCData client 1 initiates an MCData emergency communication, then the emergency indicator or the imminent peril indicator is included in the MCData standalone data request. If an MCData emergency state is not set already when MCData emergency communication is initiated, the MCData client 1 sets its MCData emergency state and is retained until explicitly cancelled. The value of ProSe Per Packet Priority is upgraded according to the state of the MCData communication.\n3.\tOn receiving a MCData group standalone data request, the MCData clients check whether any policy is to be asserted to limit certain types of message or content to certain members due, for example, to location or user privilege.\n4.\tIf the policy assertion is positive and the payload is for MCData user consumption (e.g. is not application data, is not command instructions, etc.) then the MCData user may be notified. Otherwise if the payload is not for MCData user consumption, then the MCData user shall not be notified. The action taken when the payload contains application data or command instructions are specific based on the contents of the payload. Payload content received by MCData clients 2 to N which is addressed to a known local non-MCData application that is not yet running shall cause the MCData clients 2 to N to start the local non-MCData application (i.e., remote start application) and shall pass the payload content to the just started application.\nNOTE:\tIf the policy assertion was negative, the MCData clients sends an appropriate notification to MCData client 1.\n5.\tIf the MCData data disposition for delivery was requested by the user at MCData client 1, then the receiving MCData clients initiate a MCData data disposition notification for delivery report.\n6.\tIf the MCData data disposition for read was requested by the user at MCData client 1, then once the receiving user reads the data, the receiving MCData clients 2 to N initiate a MCData data disposition notification for read report.\nA MCData user's off-network communication needs to be part of his communication history when the MCData user has an account in the MCData message store.\nFigure 7.4.3.6.2-1 describes procedures of a MCData user, MCData user 2, that has an account in MCData message store and how his off-network SDS group communication is stored in his account in the MCData message store. All other MCData clients in the figure follow the procedures described in subclause 7.4.3.4.\nPre-conditions:\n1.\tMCData user 1 to N are in an off-network group communication.\n2.\tInformation for ProSe direct communications corresponding to the MCData group and its mapping to ProSe Layer-2 Group ID are pre-configured to MCData client 1 to N.\n3.\tMCData client 1 to N are members of the same MCData group.\n4.\tMCData user 2 has an account in the MCData message store.\nThe figure depicts a group of standalone short data service (SDS) with MCData message store, illustrating the communication between the group and the MCData message store.\nFigure 7.4.3.6.2-1: Group standalone short data service with MCData message store\n1.\tMCData client 1 to MCData client N are in an off-network group communication according to the procedures in subclause 7.4.3.4, SDS are exchanged among all MCData clients.\n2.\tIf the SDS is for MCData user consumption, the SDS is stored in the local message store on the MCData UE of MCData user 2.\nNOTE:\tA pre-configured folder for off-network communication objects can be provisioned both on the UE and the user account on the MCData message store to be used for synchronization.\n3.\tThe off-network group communication comes to an end.\n4.\tThe MCData user 2 connects back to the network.\n5.\tThe MCData user 2 decides to keep the off-network communication in his account on the MCData message store. The message store client 2 uploads the off-network communication objects from the local message store to the MCData message store.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.4.3.2.1-1: MCData standalone data request",
                                    "table number": 32,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.3.2.2-1: MCData data disposition notification",
                                    "table number": 33,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.4.3.2.3-1: MCData group standalone data request",
                                    "table number": 34,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "7.5\tFile distribution",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.5.1\tGeneral",
                            "text_content": "File distribution (mandatory and non-mandatory download) is enabled for both one-to-one and group.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.5.2\tFile distribution for on-network",
                            "text_content": "Table 7.5.2.1.1-1 describes the information flow for the MCData upload data request sent from the media storage client to the MCData content server.\nTable 7.5.2.1.1-1: MCData upload data request\n\nTable 7.5.2.1.2-1 describes the information flow for the MCData upload data response sent from the MCData content server to the media storage client.\nTable 7.5.2.1.2-1: MCData upload data response\n\nTable 7.5.2.1.3-1 describes the information flow for the MCData download data request sent from the MCData media storage client to the MCData content server.\nTable 7.5.2.1.3-1: MCData download data request\n\nTable 7.5.2.1.4-1 describes the information flow for the MCData download data response sent from the MCData content server to the media storage client.\nTable 7.5.2.1.4-1: MCData download data response\n\nTable 7.5.2.1.5-1 describes the information flow for the MCData FD request (in subclause 7.5.2.4.2) sent from the MCData client to the MCData server.\nTable 7.5.2.1.5-1: MCData FD request (using HTTP) from MCData client to MCData server\n\nTable 7.5.2.1.5-2 describes the information flow for the MCData FD request (in clause 7.5.2.4.2) sent from an MCData server to a partner MCData server.\nTable 7.5.2.1.5-2: MCData FD request (using HTTP) from an MCData server to MCData server\n\nTable 7.5.2.1.5-3 describes the information flow for the MCData FD request (in clause 7.5.2.4.2) sent from the MCData server to the MCData client.\nTable 7.5.2.1.5-3: MCData FD request (using HTTP) from MCData server to MCData client\n\nTable 7.5.2.1.6-1 describes the information flow for the MCData FD response (in subclause 7.5.2.4.2) sent from the MCData client to the MCData server, from the MCData server to another MCData client and from an MCData server to a partner MCData server.\nTable 7.5.2.1.6-1: MCData FD response (using HTTP)\n\nTable 7.5.2.1.7-1 describes the information flow for the MCData download completed report sent from the MCData client to the MCData server, from the MCData server to another MCData client and from an MCData server to a partner MCData server.\nTable 7.5.2.1.7-1: MCData download completed report\n\nTable 7.5.2.1.7A-1 describes the information flow for the MCData aggregated download completed report sent from the MCData server to the MCData client, indicating the result of a request for a file delivery to an MCData group.\nTable 7.5.2.1.7A-1: MCData aggregated download completed report\n\nTable 7.5.2.1.8-1 describes the information flow for the MCData FD request (in subclause 7.5.2.5.2) sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.5.2.1.8-1: MCData FD request (using media plane/MCData client to MCData server)\n\nTable 7.5.2.1.8-2: MCData FD request (using media plane/MCData server to MCData server)\n\nTable 7.5.2.1.8-3: MCData FD request (using media plane/MCData server to MCData client)\n\nTable 7.5.2.1.9-1 describes the information flow for the MCData FD response (in subclause 7.5.2.5.2) sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.5.2.1.9-1: MCData FD response (using media plane)\n\nTable 7.5.2.1.10-1 describes the information flow for the MCData group standalone FD request (in subclause 7.5.2.6.2) sent from the MCData client to the MCData server.\nTable 7.5.2.1.10-1: MCData group standalone FD request (using HTTP) from MCData client to MCData server\n\nTable 7.5.2.1.10-2 describes the information flow for the MCData group standalone FD request (in subclause 7.5.2.6.2) sent from the MCData server to the MCData client.\nTable 7.5.2.1.10-2: MCData group standalone FD request (using HTTP) from MCData server to MCData client\n\nTable 7.5.2.1.11-1 describes the information flow for the MCData group standalone FD response (in subclause 7.5.2.6.2) sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.5.2.1.11-1: MCData group standalone FD response (using HTTP)\n\nTable 7.5.2.1.12-1 describes the information flow for the MCData group standalone FD request (in subclause 7.5.2.7.2) sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.5.2.1.12-1: MCData group standalone FD request (using media plane/MCData client to MCData server)\n\nTable 7.5.2.1.12-2: MCData group standalone FD request (using media plane/MCData server to MCData client)\n\nTable 7.5.2.1.13-1 describes the information flow for the MCData group standalone FD response (in subclause 7.5.2.7.2) sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.5.2.1.13-1: MCData group standalone FD response (using media plane)\n\nTable 7.5.2.1.14-1 describes the information flow for the MCData remove file request by user sent from the media storage client to the media storage function of the MCData content server, and from the MCData content server to another MCData content server in a partner MCData system.\nTable 7.5.2.1.14-1: MCData remove file request by user\n\nTable 7.5.2.1.15-1 describes the information flow for the MCData remove file response by user sent from the media storage function of the MCData content server to the media storage client, and from the MCData content server to another MCData content server in a partner MCData system.\nTable 7.5.2.1.15-1: MCData remove file response by user\n\nTable 7.5.2.1.18-1 describes the information flow for the MCData remove file notify sent from the MCData server to the MCData client that the shared file has been removed.\nTable 7.5.2.1.18-1: MCData remove file notify\n\nTable 7.5.2.1.19-1 describes the information flow for the MCData file retrieve request sent from an MCData content server in a partner MCData system to an MCData content server in the primary MCData system of the source of the content.\nTable 7.5.2.1.19-1: MCData file retrieve request\n\nTable 7.5.2.1.20-1 describes the information flow for the MCData file retrieve response sent from the MCData content server in the primary MCData system of the source of the content to an MCData content server in a partner MCData system.\nTable 7.5.2.1.20-1: MCData file retrieve response\n\nTable 7.5.2.1.21-1 describes the information flow for the MCData group standalone FD request (in subclause 7.5.2.6.2) sent from the MCData server to another MCData client.\nTable 7.5.2.1.21-1: MCData group standalone FD over MBMS request\n\nTable 7.5.2.1.22-1 describes the information flow for the MCData one-to-one FD upgrade request sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.5.2.1.22-1: MCData one-to-one FD upgrade request\n\nTable 7.5.2.1.23-1 describes the information flow for the MCData one-to-one FD upgrade response sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.5.2.1.23-1: MCData one-to-one FD upgrade response\n\nTable 7.5.2.1.24-1 describes the information flow for the MCData group FD upgrade request sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.5.2.1.24-1: MCData group FD upgrade request (MCData client to MCData server)\n\nTable 7.5.2.1.24-2: MCData group FD upgrade request (MCData server to MCData client)\n\n\nTable 7.5.2.1.25-1 describes the information flow for the MCData group FD upgrade response sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.5.2.1.25-1: MCData group FD upgrade response\n\nTable 7.5.2.1.26-1 describes the information for the MCData group FD in-progress priority state cancel request sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.5.2.1.26-1: MCData group FD in-progress priority state cancel request (MCData client to MCData server)\n\nTable 7.5.2.1.26-2: MCData group FD in-progress priority state cancel request (MCData server to MCData client)\n\nTable 7.5.2.1.27-1 describes the information flow for the MCData group FD in-progress priority state cancel response sent from the MCData server to the MCData client.\nTable 7.5.2.1.27-1: MCData group FD in-progress priority state cancel response information elements\n\nTable 7.5.2.1.28-1 describes the information flow for the MCData file upload request sent from the MCData client to the MCData server.\nTable 7.5.2.1.28-1: MCData file upload request\n\nTable 7.5.2.1.29-1 describes the information flow for the MCData file upload response sent from the MCData server to the MCData client.\nTable 7.5.2.1.29-1: MCData file upload response\n\nTable 7.5.2.1.30-1 describes the information flow for the MCData file upload completion status sent from the MCData client to the MCData server.\nTable 7.5.2.1.30-1: MCData file upload completion status\n\nTable 7.5.2.1.31-1 describes the information flow for the MCData file download request sent from the MCData client to the MCData server.\nTable 7.5.2.1.31-1: MCData file download request\n\nTable 7.5.2.1.32-1 describes the information flow for the MCData file download response sent from the MCData server to the MCData client.\nTable 7.5.2.1.32-1: MCData file download response\n\nTable 7.5.2.1.33-1 describes the information flow for the MCData file availability request sent from the MCData server to the MCData content server.\nTable 7.5.2.1.33-1: MCData file availability request\n\nTable 7.5.2.1.34-1 describes the information flow for the MCData file availability response sent from the MCData content server to the MCData server.\nTable 7.5.2.1.34-1: MCData file availability response\n\nThe media storage client uses HTTP for a standalone data file upload towards the MCData content server.\nThe procedure in figure 7.5.2.2.2-1 describes the case where an MCData user is uploading a file to media storage function on the MCData content server.\nPre-conditions:\n1.\tThe MCData user on the media storage client is registered for receiving MCData service.\n2.\tThe MCData content server has the ability to verify if the requesting MCData user is authorised to upload.\nThe figure depicts a network scenario where a file residing in a Media Content Unit (MCData UE) is being uploaded using HTTP. The network consists of a Media Content Unit (MCData UE), a Media Content Server (MCServer), and a Media Content Client (MCClient). The MCData UE is connected to the MCServer via a Media Content Link (MCLink), and the MCClient is connected to the MCServer via a Media Content Link (MCLink). The MCLink is a point-to-point link that allows the MCData UE to upload the file to the MCServer. The figure illustrates the network architecture and the communication between the MCData UE, MCServer, and MCClient.\nFigure 7.5.2.2.2-1: Uploading of the file residing in MCData UE using HTTP\n1.\tThe user at the media storage client initiates a file upload request of the chosen file. If MCData emergency state is already set for the media storage client (due to previously triggered MCData emergency alert), the media storage client sets emergency indicator in the request. The media storage client verifies that the size of the file is within the maximum data size for FD for the intended MCData FD request (by checking the group configuration for a group FD request and by checking the service configuration for a one-to-one FD request).\n2.\tThe file to be uploaded is received by the media storage client and sent to the media storage function on the MCData content server for storing using the MCData upload data request.\n3.\tThe MCData content server stores the file and provides a MCData upload data response indicating success (along with file URL to the media storage client) or failure.\nThe procedure in figure 7.5.2.2.3-1 describes the case where an MCData user is uploading a file to media storage function on the MCData content server from his or her MCData message store account.\nPre-conditions:\n1.\tThe Media storage client knows the URL of the file residing in the MCData message store account of the user.\n\nThe figure depicts a network architecture with a message store (MCData) and a file residing in it. The message store is connected to a file server, which is connected to a file storage system. The file is being uploaded using HTTP.\nFigure 7.5.2.2.3-1: Uploading of the file residing in MCData message store using HTTP\n1.\tThe user at the media storage client initiates a file upload request of the file residing in his MCData message store account.\n2.\tThe URL of the file which needs to be retrieved from the MCData message store account of the user is sent to the media storage function on the MCData content server using the MCData upload data request.\n3.\tThe MCData content server fetches the file from the MCData message store account of the user using the URL provided in the MCData upload data request.\n4.\tThe MCData content server stores the retrieved file content into its repository.\n5.\tThe MCData content provides a MCData upload data response indicating success (along with file URL to the media storage client) or failure.\nThe procedure in figure 7.5.2.2.4-1 describes the case where an MCData client sends a request to the MCData server for the upload of a file from the media storage client on the MCData client to the media storage function on the MCData content server. The MCData server can, therefore, request network resources with the required QoS for the corresponding file upload.\nPre-conditions:\n1.\tThe MCData user on the MCData client is registered on the MCData server for receiving MCData service.\n2.\tThe MCData client is required to upload a file to the MCData content server over network resources with required QoS.\n3.\tThe MCData client knows its IP address/port to be used for the file upload as well as the URI or IP address/port of the target MCData content server.\nNOTE:\tHow the MCData client knows the IP addresses and ports to be used for the file upload is implementation specific and out of the scope of this specification.\nThe figure depicts a file upload process over a network resource with required QoS, illustrating the use of HTTP over network resources.\nFigure 7.5.2.2.4-1: File upload using HTTP over network resources with required QoS\n1.\tThe MC user on the MCData client intends to upload a file to the MCData content server for file distribution. The MCData client verifies that the size of the file is within the maximum data size for FD for the intended MCData FD request (e.g., by checking the group configuration for a group FD request or the service configuration for a one-to-one FD request). If the MCData emergency state is already set for the MCData client, the MCData client sets the emergency indicator in the request.\n2.\tThe MCData client sends the MCData file upload request to the MCData server. This request contains information about the MCData client (including IP address and port to be used for the file upload), and the target MCData content server (including associated URI or IP address, and port).\n3.\tThe MCData server verifies that the corresponding MCData client is authorized to upload files to the corresponding MCData content server.\n4.\tIf the MCData client is authorized for the file upload, the MCData server sends a request to the 3GPP system for the allocation of network resources with the required QoS for the corresponding file upload communication between the MCData client and the MCData content server. For that, the MCData server performs policy and charging control (PCC) procedures, e.g., over the Rx reference point as described in 3GPP TS 23.203 [14] for the case of an EPS system.\n5.\tThe MCData server sends a MCData file upload response to the MCData client indicating if it can proceed with the file upload to the MCData content server.\n6.\tThe media storage client on the MCData client sends an MCData upload data request to the media storage function on the MCData content server to upload the file.\n7.\tThe MCData content server provides an MCData upload data response to the MCData client indicating if the file was successfully stored (along with file URL) or failure.\n8.\tThe MCData client provides to the MCData server an MCData file upload completion status indicating that the file upload is completed.\n9.\tBased on the MCData file upload completion status, the MCData server requests to the 3GPP system to release the network resources allocated for the corresponding file upload.\nThe media storage client uses HTTP for a standalone data file download from the MCData content server.\nThe procedure in figure 7.5.2.3.2-1 describes the case where an MCData user is downloading a file from the media storage function of the MCData content server.\nPre-conditions:\n1.\tThe MCData user on the media storage client is registered for receiving MCData service.\nThe figure depicts a network scenario where a user is downloading a file using HTTP. The network consists of a base station (BTS), a user equipment (UE), and a network element (NE). The BTS is responsible for transmitting the file to the UE, which then downloads it. The NE is responsible for providing the necessary network infrastructure and services to the UE. The figure also shows the network's architecture, including the core switches, optical line terminals (OLTs), and distributed nodes. The layered design of the network ensures redundancy and failover reliability.\nFigure 7.5.2.3.2-1: File download using HTTP\n1.\tThe user at the media storage client initiates a file download request available at the indicated URL.\n2.\tThe file available at the URL (received in MCData FD request or MCData group standalone FD request) is requested to be downloaded by the media storage client from the media storage function on the MCData content server using a MCData download data request. If emergency indicator is set in received in MCData FD request or MCData group standalone FD request, the media storage client sets emergency indicator in MCData download data request.\nNOTE:\tThe media storage client can perform partial download requests to complete the missing parts after an incomplete file transfer.\n3.\tThe media storage function on the MCData content server may apply reception control policy and provides a MCData download data response including the file to the media storage client.\nThe procedure in figure 7.5.2.3.3-1 describes the case where an MCData client sends a request to the MCData server for the download of a file from the media storage client on the MCData client to the media storage function on the MCData content server. The MCData server can, therefore, request network resources with the required QoS for the corresponding file download.\nPre-conditions:\n1.\tThe MCData user on the MCData client is registered on the MCData server for receiving MCData service.\n2.\tThe MCData client has been requested to download a file using HTTP and has received the corresponding file URL (via an MCData FD request or MCData group standalone FD request).\n3.\tThe MCData client is required to download a file from the MCData content server over network resources with required QoS.\nNOTE 1:\tIt is implementation specific whether an MCData system enables that network resources with required QoS are required for file downloads.\n4.\tThe MCData client knows its IP address/port to be used for the file download as well as the URI or IP address/port of the target MCData content server.\nNOTE 2:\tHow the MCData client knows the IP addresses and ports to be used for the file download is implementation specific and out of the scope of this specification.\nThe figure depicts a file download scenario over a network, with HTTP protocol and required QoS.\nFigure 7.5.2.3.3-1: File download using HTTP over network resources with required QoS\n1.\tThe MC user on the MCData client intends to download a file from the MCData content server based on a received MCData FD request or MCData group standalone FD request. If the MCData emergency state is already set for the MCData client, the MCData client sets the emergency indicator in the request.\n2.\tThe MCData client sends the MCData file download request to the MCData server. This request contains information about the MCData client (including IP address and port to be used for the file download), and the target MCData content server (including associated URI or IP address, and port). The request also contains the corresponding file URL on the MCData content server.\n3.\tThe MCData server may verify, based on the received file URL, whether the file is available in the MCData content server via the MCData-FD-5 reference point. For that, the MCData server sends an MCData file availability request to the MCData content server. Upon the receipt of the request, the MCData content server provides an MCData file availability response to the MCData server. If the MCData server identifies that the corresponding file is not available in the MCData content server, the MCData server provides a response to the MCData client indicating that the file download request cannot proceed due to the unavailability of the file in the MCData content server.\n4.\tThe MCData server verifies that the corresponding MCData client is authorized to download the file from the corresponding MCData content server.\n5.\tIf the MCData client is authorized for the file download, the MCData server sends a request to the 3GPP system for the allocation of network resources with the required QoS for the corresponding file download communication between the MCData client and the MCData content server. For that, the MCData server performs policy and charging control (PCC) procedures, e.g., over the Rx reference point as described in 3GPP TS 23.203 [14] for the case of an EPS system.\n6.\tThe MCData server sends a MCData file download response to the MCData client indicating whether it can proceed with the file download from the MCData content server.\n7.\tThe media storage client on the MCData client sends an MCData download data request to the media storage function on the MCData content server to download the corresponding file.\n8.\tThe MCData content server provides an MCData download data response to the MCData client including the file for the case of a successful response.\n9.\tThe MCData client provides to the MCData server an MCData download completed report indicating that the file download is completed.\n10.\tBased on the MCData download completed report, the MCData server requests to the 3GPP system to release the network resources allocated for the corresponding file download.\nThe MCData client uses HTTP file distribution to download a file that is uploaded by another MCData client. The procedure is appropriate for both mandatory and non-mandatory download cases. The target MCData user may be addressed using the functional alias that can be shared with other MCData users.\nThe procedure in figure 7.5.2.4.2-1 describes the case where a MCData user is initiating one-to-one data communication for sending file to the other MCData user, with or without download completed report request.\nPre-conditions:\n1.\tThe MCData users on the MCData client 1 and the MCData client 2 are already registered for receiving MCData service.\n2.\tThe file to be distributed is uploaded to media storage function on MCData content server using the procedures defined in subclause 7.5.2.2.\n3.\tThe MCData client may have activated functional alias to be used.\n4.\tThe MCData server has subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\nThe figure depicts a file distribution system using HTTP, illustrating the one-to-one file distribution method. The system uses a single HTTP server to handle multiple files, ensuring efficient and reliable file distribution.\nFigure 7.5.2.4.2-1: One-to-one file distribution using HTTP\n1.\tThe user at the MCData client 1 initiates a file distribution request to the chosen MCData user.\n2.\tThe MCData client 1 sends a MCData FD request towards the MCData server. The MCData FD request contains content payload in the form of file URL and may contain the file metadata information. The MCData FD request contains one MCData user for one-to-one data communication as selected by the user at MCData client 1. The MCData FD request contains conversation identifier for message thread indication. The MCData FD request may include additional implementation specific information in the application metadata container. If MCData user at MCData client 1 has requested to mandatory download at the recipient side, then MCData FD request contains mandatory download indication. If the MCData user at MCData client has requested to deposit the file content into his/her MCData message store account, then MCData FD request contains deposit file indication set. The MCData FD request may contain download completed report indication if selected by the user at MCData client 1. The MCData user at MCData client 1 may include a functional alias within the FD data transfer and may address the target MCData client 2 using a functional alias.\na)\tIf the MCData user at the MCData client 1 initiates an MCData emergency file distribution using HTTP or MCData emergency state is already set for the MCData client 1 (due to previously triggered MCData emergency alert):\ni)\tThe MCData FD request shall contain emergency indicator; and\nii)\tIf MCData emergency state is not set already, MCData client 1 sets its MCData emergency state. The MCData emergency state of MCData client 1 is retained until explicitly cancelled by the user of MCData client 1.\nNOTE 1:\tWhile MCData client 1 is in the emergency state, all types of MCData one-to-one and group communications initiated by MCData client 1 are initiated as MCData emergency communications.\n3.\tMCData server checks whether the MCData user at MCData client 1 is authorized to send MCData FD request and that the size of the file is below maximum data size for FD from the service configuration. MCData server verifies whether the provided functional alias of MCData client 1, if present, can be used and has been activated for the user. If functional alias is used to address that target MCData user, the MCData server resolves the functional alias to the corresponding MCData IDs for which the functional alias is active and proceed with step 4 otherwise proceed with step 6.\nNOTE 2:\tIf the MCData server detects that the functional alias used as the target of the MCData FD request is simultaneously active for multiple MCData users, then the MCData server can proceed by selecting an appropriate MCData ID based on some selection criteria. The selection of an appropriate MCData ID is left to implementation. These selection criteria can include rejection of the MCData FD request, if no suitable MCData ID is selected.\n4.\tThe MCData server may verify whether the corresponding file is available in the MCData content server (not shown in the figure) via the MCData-FD-5 reference point using the received file URL in the MCData FD request. For that, the MCData server sends an MCData file availability request to the MCData content server. Upon the receipt of the request, the MCData content server provides an MCData file availability response to the MCData server. If the MCData server identifies that the corresponding file is not available in the MCData content server, the MCData server provides a response to the MCData client 1 indicating that the file distribution request cannot proceed due to the unavailability of the file in the MCData content server.\n5.\tThe MCData server responds back to MCData client 1 with a functional alias resolution response message that contains the resolved MCData ID.\n6.\tIf the MCData server replies with a MCData functional alias resolution response message, the MCData client 1 assumes the MCData FD request in step 2 is rejected and sends a new MCData FD request towards the resolved MCData ID.\n7.\tMCData server initiates the MCData FD request towards MCData client 2. The MCData FD request towards the MCData user contains an emergency indicator if it is present in the received MCData FD request from MCData client 1. If the deposit file indication information element is set to true in the received MCData FD request, MCData server shall follow the procedure as defined in the subclause 7.13.3.8 with the retrieve file indication element set to true while depositing this MCData communication to the MCData message store account of the user at MCData client 1.\nNOTE 3:\tMCData client 2 does not set its emergency state as a result of receiving the MCData FD request containing the emergency indicator.\n8.\tThe receiving MCData client 2 notifies the user about the incoming MCData FD request (including file metadata, if present) which may be either accepted or rejected or ignored.\n9.\tThe MCData user 2 may provide a response (accept or reject) or not (ignore) to the notification, then MCData client 2 sends the MCData FD response to the MCData server. The MCData client 2 automatically sends an accepted MCData FD response when the received request includes a mandatory download indication.\n10.\tThe MCData server forwards the MCData FD response to the MCData client 1.\n11.\tThe Media storage client on the MCData client 2 downloads the file from the MCData content server using the procedures defined in subclause 7.5.2.3, either automatically (for mandatory download) or based upon the MCData user 2 subsequent action. The MCData client 2 records file download completed and notifies the MCData user 2.\n12.\tThe MCData client 2 provides an MCData download completed report for reporting file download completed, if requested by the user at MCData client 1.\n13.\tThe received MCData file download completed report from the MCData client 2 may be stored by the MCData server for download history interrogation from authorized MCData users. The MCData download completed report is sent by the MCData server to the MCData user at MCData client 1, if requested by the MCData client 1.\nThe procedure in figure 7.5.2.4.3-1 describes the case where a MCData user initiates a one-to-one data communication for sending a file to another MCData user where that other MCData user is receiving MCData service on a partner MCData system, and where interconnection is in use between the two MCData systems. In this procedure, the file has not previously been downloaded in the partner MC system.\nPre-conditions:\n1.\tThe MCData users on the MCData client 1 and the MCData client 2 are already service authorized and receiving MCData service. MCData client 1 is receiving service on its primary MCData system, and MCData client 2 is receiving MCData service in the partner MCData system of MCData client 1.\n2.\tThe file to be distributed has been uploaded to the media storage function on the MCData content server in the primary MCData system of MCData client 1 using the procedures defined in subclause 7.5.2.2.\n3.\tThere is a service agreement between the primary and partner MCData systems to allow files to be shared between MCData content servers in the two systems.\n4.\tThe MCData client may have an activated functional alias to be used.\n5.\tThe MCData server may have subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\nThe figure depicts a file distribution system using HTTP with interconnection, illustrating the one-to-one file distribution method.\nFigure 7.5.2.4.3-1: One-to-one file distribution using HTTP with interconnection\n1.\tThe user at the MCData client 1 initiates a file distribution request to the MCData user at MCData client 2.\n2.\tMCData client 1 sends an MCData FD request towards the primary MCData server. The MCData FD request contains content payload in the form of a file URL with the necessary access authorization information and may contain the file metadata information. The MCData FD request indicates the target MCData user for the one-to-one data communication. The MCData FD request contains a conversation identifier for message thread indication. If the MCData user at MCData client 1 has requested to mandatory download at the recipient side, then the MCData FD request contains the mandatory download indication. The MCData FD request may contain a request for a download completed report indication if selected by the user at MCData client 1. The MCData user at MCData client 1 may include a functional alias within the FD data transfer and may address the target MCData client 2 using a functional alias.\n3.\tMCData server checks whether the MCData user at MCData client 1 is authorized to send the MCData FD request and that the size of the file is below maximum data size for FD from the service configuration. MCData server verifies whether the provided functional alias of MCData client 1, if present, can be used and has been activated for the user.\n4.\tThe MCData server may verify whether the corresponding file is available in the MCData content server via the MCData-FD-5 reference point using the received file URL in the MCData FD request. For that, the MCData server sends an MCData file availability request to the MCData content server. Upon the receipt of the request, the MCData content server provides an MCData file availability response to the MCData server. If the MCData server identifies that the corresponding file is not available in the MCData content server, the MCData server provides a response to the MCData client 1 indicating that the file distribution request cannot proceed due to the unavailability of the file in the MCData content server.\n5.\tThe MCData server in the primary MCData system initiates the MCData FD request towards the MCData server in the partner MCData system, which contains the URL of the file which is stored in the primary MCData content server. The request includes the necessary access authorization information as MCData client 2 will retrieve the file while receiving service in the partner MCData system.\nNOTE 1:\tThe contents of and mechanisms to use the authorization information are outside the scope of the present document.\nNOTE 2:\tWith the use of the functional alias for addressing the target MCData clients, the partner MCData system is to be determined by the primary MCData system.\n6.\tIf functional alias is used to address that target MCData user, the MCData server in the partner MCData system resolves the MCData IDs of the functional alias. The resulting list contains all associated MCData IDs/MCData users that may share this functional alias. The MCData server in the partner MCData system now checks which MCData users have FD capabilities and which are authorized to receive a file. The partner MCData server sends the MCData FD request to the MCData users determined. The file URL being provided in MCData FD request to the MCData users determined is prepended with server URI of the partner MCData content server, such that the URL identifies a file location in the partner MCData content server.\nNOTE 3:\tDetermination of the target MCData client is based on the associated MCData IDs that share a functional alias and other criteria.\n7.\tThe receiving MCData client 2 may notify the user about the incoming MCData FD request (including file metadata, if present) which may be either accepted, rejected or ignored.\n8.\tThe MCData user 2 may provide a response (accept or reject) or not (ignore) to the notification, then the MCData client 2 sends the MCData FD response to the partner MCData server. The MCData client 2 automatically sends an accepted MCData FD response when the received request includes a mandatory download indication.\n9.\tThe partner MCData server forwards the MCData FD response to the MCData server in the primary MCData system.\n10.\tThe primary MCData server forwards the MCData FD response to MCData client 1.\n11.\tMCData client 2 requests the file from the partner MCData content server.\nNOTE 4:\tStep 11 may occur any time after step 8, before or after steps 9 and 10.\n12.\tThe partner MCData content server checks whether the file is stored locally, and if this is not the case, sends an MCData file retrieve request to the primary MCData content server. The MCData file retrieve request contains the URL of the file location in the primary MCData system, generated by removing the prepended local path from the requested URL.\nNOTE 5:\tThe means of proving authorization for the request is outside the scope of the present document.\n13.\tThe primary MCData content server responds to the partner MCData content server with an MCData file retrieve response which contains the content of the file to be retrieved. File metadata may include the lifetime of the file. The primary MCData content server records that the file has been sent to the indicated partner MCData system.\nNOTE 6:\tThe partner MCData content server may store the local copy of the file in case future requests arise until the expiry time sent from primary MCData system for the file is reached or until a request is received to delete the file.\n14.\tThe partner MCData content server sends the file to MCData client 2 in the MCData download data response. MCData client 2 records file download completed and notifies MCData user 2.\n15.\tThe MCData client 2 provides an MCData download completed report for reporting file download completed, if this was requested by the user at MCData client 1 in the initial MCData FD request.\n16.\tThe MCData download completed report is sent to the primary MCData server. The partner MCData server may store the download completed report for download history interrogation from authorized MCData users in the partner MCData system.\n17.\tThe received MCData download completed report is sent by the primary MCData server to the MCData user at MCData client 1, if requested by the MCData client 1. The MCData file download completed report from the MCData client 2 may be stored by the primary MCData server for download history interrogation from authorized MCData users in the primary MCData system.\nThe MCData client uses the media plane for a standalone data file download from another MCData client. The procedure is appropriate for both mandatory and non-mandatory download cases. The target MCData user may be addressed using the functional alias that can be shared with other MCData users.\nThe procedure in figure 7.5.2.5.2-1 describes the case where an MCData user is initiating one-to-one data communication for sending file to the other MCData user, with or without download completed report request.\nPre-conditions:\n1.\tThe MCData users on the MCData client 1 and the MCData client 2 are already registered for receiving MCData service.\n2.\tOptionally, the MCData client may have an activated functional alias to be used.\n3.\tThe MCData server has subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\nThe figure depicts a one-to-one file distribution using a media plane, illustrating the process of distributing files between two devices. The media plane is a crucial component in this scenario, facilitating the efficient transfer of data between the two devices.\nFigure 7.5.2.5.2-1: One-to-one file distribution using media plane\n1.\tThe user at the MCData client 1 initiates a file distribution request to the chosen MCData user.\n2.\tMCData client 1 sends a MCData FD request towards the MCData server. File metadata information is included in the SDP. The MCData FD request contains one MCData user for one-to-one data communication as selected by the user at MCData client 1. The MCData FD request contains conversation identifier for message thread indication. The MCData FD request may include additional implementation specific information in the application metadata container. MCData FD request may contain mandatory download indication. The MCData FD request may contain download completed report indication if selected by the user at MCData client 1. MCData user at MCData client 1 may include a functional alias within the FD data transfer and may address the target MCData client 2 using a functional alias.\na)\tIf the MCData user at the MCData client 1 initiates an MCData emergency file distribution communication or MCData emergency state is already set for the MCData client 1 (due to previously triggered MCData emergency alert):\ni)\tThe MCData FD request shall contain emergency indicator; and\nii)\tIf MCData emergency state is not set already, MCData client 1 sets its MCData emergency state. The MCData emergency state of MCData client 1 is retained until explicitly cancelled by the user of MCData client 1.\nNOTE 1:\tWhile MCData client 1 is in the emergency state, all types of MCData one-to-one and group communications initiated by MCData client 1 are initiated as MCData emergency communications.\n3.\tMCData server checks whether the MCData user at MCData client 1 is authorized to send MCData FD request. MCData server verifies whether the provided functional alias of MCData client 1, if present, can be used and has been activated for the user. If functional alias is used to address that target MCData user, the MCData server resolves the functional alias to the corresponding MCData ID(s) for which the functional alias is active and proceed with step 4 otherwise proceed with step 6.\nNOTE 2:\tIf the MCData server detects that the functional alias used as the target of the MCData FD request is simultaneously active for multiple MCData users, then the MCData server can proceed by selecting an appropriate MCData ID based on some selection criteria. The selection of an appropriate MCData ID is left to implementation. These selection criteria can include rejection of the MCData FD request, if no suitable MCData ID is selected.\n4.\tThe MCData server responds back to MCData client 1 with a functional alias resolution response message that contains the resolved MCData ID.\n5.\tIf the MCData server replies with a MCData functional alias resolution response message, the MCData client 1 assumes the MCData FD request in step 2 is rejected and sends a new MCData FD request towards the resolved MCData ID.\n6.\tThe MCData server also applies transmission and reception control and the necessary policy to ensure that appropriate data is transmitted between the MCData UEs.\n7.\tMCData server initiates the MCData FD request towards the MCData users determined. The MCData FD request towards the MCData user contains the emergency indicator if it is present in the received MCData FD request from MCData client 1.\nNOTE 3:\tMCData client 2 does not set its emergency state as a result of receiving the MCData FD request containing the emergency indicator.\n8.\tThe receiving MCData client 2 notifies the user about the incoming MCData FD request which may be either accepted or rejected or ignored. If the request includes mandatory download indication in the MCData FD request an accepted response is assumed.\n9.\tIf the target MCData user 2 provides a response (accept or reject) to the notification, then MCData client 2 sends the MCData FD response to the MCData server. MCData client 2 automatically sends accepted MCData FD response when the incoming request included mandatory download indication.\n10.\tMCData server forwards the MCData FD response from MCData client 2 back to MCData client 1.\n11.\tMCData client 1 distributes the file over the established media plane to MCData server.\n12.\tMCData server distributes the file received from MCData client 1 to MCData client 2 over the established media plane. File download report is shared by the MCData client 2, if requested by the user at MCData client 1. After file transaction is completed, the media plane is released. The MCData client 2 records file download completed and notifies MCData user 2.\nNOTE 4:\tMCData server is not required to wait for the complete download of file from MCData client 1 prior to initiating file distribution to MCData client 2.\n13.\tMCData client 2 initiates a MCData download completed report for reporting file download completed, if requested by the user at MCData client 1.\n14.\tThe MCData file download completed report from MCData client may be stored by the MCData server for download history interrogation from the authorized MCData users. MCData download completed report is sent by the MCData server to the user at MCData client 1.\nThe initiation of a group standalone FD using HTTP to a selected group, results in affiliated group members receiving the file data.\nThe procedure in figure 7.5.2.6.2-1 describes the case where a MCData user is initiating group standalone data communication for sending a file to multiple MCData users, with or without download completed report request from the MCData user.\nPre-conditions:\n1.\tThe MCData users on the MCData clients 1 to n belong to the same MCData group and are already registered for receiving MCData service and affiliated to the group.\n2.\tThe file to be distributed is uploaded to the media storage function on the MCData content server using the procedures defined in subclause 7.5.2.2.\n3.\tThe MCData client may have an activated functional alias to be used.\n4.\tThe MCData server has subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\nThe figure depicts a group of standalone 5G femtocells (F-fem) using HTTP for group management and data aggregation.\nFigure 7.5.2.6.2-1: Group standalone FD using HTTP\n1.\tThe user at the MCData client 1 initiates a file distribution request to multiple MCData users selecting a pre-configured group (identified by MCData group ID) and optionally particular members from that group.\n2.\tThe MCData client 1 sends a MCData group standalone FD request towards the MCData server. The MCData FD request contains content payload in the form of file URL and may contain the file metadata information. The MCData group standalone data request contains either the selected MCData group ID or the target recipients as selected by the user at MCData client 1. The MCData group standalone FD request contains conversation identifier for message thread indication. The MCData group standalone FD request may include additional implementation specific information in the application metadata container. If MCData user at MCData client 1 has requested to mandatory download at the recipient side, then MCData group standalone FD request contains mandatory download indication. The MCData group standalone FD request may contain a download completed report indication if selected by the user at MCData client 1. The MCData user at MCData client 1 may include a functional alias within the FD data transfer. If the MCData user at MCData client has requested to deposit the file content into his/her MCData message store account, then MCData FD request contains deposit file indication set.\nIf the MCData user at MCData client 1 initiates an MCData emergency FD communication or the MCData emergency state is already set for the MCData client 1 (due to a previously triggered MCData emergency alert):\ni)\tthe MCData group standalone FD request shall contain an emergency indicator;\nii)\tthe MCData group standalone FD request shall set an alert indicator if configured to send an MCData emergency alert while initiating an MCData group standalone FD request for the emergency FD communication; and\niii)\tif the MCData emergency state is not set already, MCData client 1 sets its MCData emergency state. The MCData emergency state of MCData client 1 is retained until explicitly cancelled by the user of MCData client 1.\nNOTE 1:\tWhile MCData client 1 is in the emergency state, all types of MCData one-to-one and group communications initiated by MCData client 1 are initiated as MCData emergency communications.\nIf the MCData user at MCData client 1 initiates an MCData imminent peril FD communication:\ni)\tthe MCData group standalone FD request shall contain an imminent peril indicator.\n2a.\tIf either emergency indicator or imminent peril indicator is present in the received MCData group standalone FD request, the MCData server implicitly affiliates MCData client 1 to the MCData group if the client is not already affiliated.\n3.\tMCData server checks whether the MCData user at MCData client 1 is authorized to send an MCData group standalone FD request and that the size of the file is below maximum data size for FD from the group configuration. MCData server verifies whether the provided functional alias, if present, can be used and has been activated for the user. If the MCData group ID is used, the MCData server resolves the MCData group ID to determine the members of that group and their affiliation status, based on the information from the group management server.\ni)\tIf an emergency indicator is present in the received MCData group standalone FD request and if the MCData group is not in the in-progress emergency state, the MCData group is considered to be in the in-progress emergency state until cancelled; and\nNOTE 2:\tWhile the MCData group is in the in-progress emergency state, all types of MCData communications within the group are processed as emergency group communications by the MCData server. MCData group members that are not in the emergency state do not indicate emergency in group communication requests.\nii)\tIf an imminent peril indicator is present in the received MCData group standalone FD request and if the MCData group is not in the in-progress imminent peril state, the MCData group is considered to be in the in-progress imminent peril state until cancelled.\n4.\tThe MCData server may verify whether the corresponding file is available in the MCData content server (not shown in the figure) via the MCData-FD-5 reference point using the received file URL in the MCData group standalone FD request. For that, the MCData server sends an MCData file availability request to the MCData content server. Upon the receipt of the request, the MCData content server provides an MCData file availability response to the MCData server. If the MCData server identifies that the file is not available in the MCData content server, the MCData server provides a response to the MCData client 1 indicating that the file distribution request cannot proceed due to the unavailability of the file in the MCData content server and skip rest of the steps. If the deposit file indication information element is set to true in the received MCData FD request, MCData server shall follow the procedure as defined in the subclause 7.13.3.8 with the retrieve file indication element set to true while depositing this MCData communication to the MCData message store account of the user at MCData client 1.\n5.\tMCData server initiates the MCData group standalone FD request towards each MCData user determined in step 3. The MCData group standalone FD request towards each MCData client contains:\ni)\tan emergency indicator if it is present in the received MCData group standalone FD request from the MCData client 1;\nii)\tan imminent peril indicator if it is present in the received MCData group standalone FD request from the MCData client 1; and\niii)\tan alert indicator if requested to initiate an emergency alert in the received MCData group standalone FD request from the MCData client 1.\n6.\tThe receiving MCData clients 2 to n notify the user about the incoming MCData group standalone FD request (including file metadata, if present) which may be either accepted or rejected or ignored.\n7.\tIf the target MCData user on MCData clients 2 to n provides a response (accept or reject) to the notification, then respective MCData client sends the MCData group standalone FD response to the MCData server. MCData client 2 to n automatically sends accepted MCData group standalone FD response when the incoming request included mandatory download indication.\n8.\tThe MCData server forwards the MCData group standalone FD responses to the MCData client 1.\nNOTE 3:\tStep 8 can occur at any time following step 5, and prior to step 9 depending on the conditions to proceed with the file transmission.\n9.\tThe media storage client on the MCData client(s) accepting the request downloads the file from the MCData content server (not shown in the figure) using the procedures defined in subclause 7.5.2.3, either automatically (for mandatory download) or based upon the MCData user subsequent action. The MCData clients successfully receiving the file through the media storage clients, record file download completed and notify the MCData users.\n10.\tThe MCData clients, receiving the file through the media storage client, provide MCData download completed reports for reporting file download completed, if requested by the user at MCData client 1.\n11.\tThe MCData file download completed reports from MCData clients may be stored by the MCData server for download history interrogation from the authorized MCData users. The MCData file download completed report from each MCData user may be aggregated.\n12.\tAggregated or individual MCData download completed reports are sent by the MCData server to the MCData user at MCData client 1, if requested by the MCData client 1.\nThe initiation of a group standalone FD using media plane to a selected group, results in affiliated group members receiving the file data.\nThe procedure in figure 7.5.2.7.2-1 describes the case where an MCData user is initiating group standalone data communication for sending file to multiple MCData users, with or without download completed report request.\nPre-conditions:\n1.\tThe MCData users on the MCData client 1 to n belong to the same group and are already registered for receiving MCData service and affiliated.\n2.\tOptionally, the MCData client may have an activated functional alias to be used.\n3.\tThe MCData server has subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\nThe figure depicts a 5G standalone network using a media plane, illustrating the use of femtocells and small cells to provide coverage in dense urban environments.\nFigure 7.5.2.7.2-1: Group standalone FD using media plane\n1.\tThe user at the MCData client 1 initiates a file distribution request to multiple MCData users selecting a pre-configured group (identified by MCData group ID) and optionally particular members from that group.\n2.\tMCData client 1 sends a MCData group standalone FD request towards the MCData server. File metadata information is included in the SDP. The MCData group standalone data request contains target recipient(s) as selected by the user at MCData client 1. The MCData group standalone FD request contains conversation identifier for message thread indication. The MCData group standalone FD request may include additional implementation specific information in the application metadata container. MCData group standalone FD request may contain mandatory download indication. The MCData group standalone FD request may contain download completed report indication if selected by the user at MCData client 1. MCData user at MCData client 1 may include a functional alias within the FD data transfer.\nIf the MCData user at MCData client 1 initiates an MCData emergency file distribution communication or the MCData emergency state is already set for the MCData client 1 (due to a previously triggered MCData emergency alert):\ni)\tthe MCData group standalone FD request shall contain an emergency indicator;\nii)\tthe MCData group standalone FD request shall set an alert indicator if configured to send an MCData emergency alert while initiating an MCData group standalone FD request for the emergency file distribution service communication; and\niii)\tif the MCData emergency state is not set already, MCData client 1 sets its MCData emergency state. The MCData emergency state is retained until explicitly cancelled.\nNOTE 1:\tWhile MCData client 1 is in the emergency state, all types of MCData one-to-one and group communications initiated by MCData client 1 are initiated as MCData emergency communications.\nIf the MCData user at MCData client 1 initiates an MCData imminent peril file distribution communication:\ni)\tthe MCData group standalone FD request shall contain an imminent peril indicator.\n2a.\tIf either emergency indicator or imminent peril indicator is present in the received MCData group standalone data request, the MCData server implicitly affiliates MCData client 1 to the MCData group if the client is not already affiliated.\n3.\tMCData server checks whether the MCData user at MCData client 1 is authorized to send MCData group standalone FD request. MCData server verifies whether the provided functional alias, if present, can be used and has been activated for the user. The MCData server resolves the MCData group ID to determine the members of that group and their affiliation status, based on the information from the group management server.\ni)\tIf an emergency indicator is present in the received MCData group standalone FD request and if the MCData group is not in the in-progress emergency state, the MCData group is considered to be in the in-progress emergency state until cancelled; and\nNOTE 2:\tWhile the MCData group is in the in-progress emergency state, all types of MCData communications within the group are processed as emergency group communications by the MCData server. MCData group members that are not in the emergency state do not indicate emergency in group communication requests.\nii)\tIf an imminent peril indicator is present in the received MCData group standalone FD request and if the MCData group is not in the in-progress imminent peril state, the MCData group is considered to be in the in-progress imminent peril state until cancelled.\n4.\tThe MCData server also applies transmission and reception control and the necessary policy to ensure that appropriate data is transmitted between the MCData UEs.\n5.\tMCData server initiates the MCData group standalone FD request towards each MCData user determined in step 3. The MCData group standalone data request towards each MCData client contains:\ni)\tan emergency indicator if it is present in the received MCData group standalone FD request from the MCData client 1;\nii)\tan imminent peril indicator if it is present in the received MCData group standalone FD request from the MCData client 1; and\niii)\tan alert indicator if requested to initiate an emergency alert in the received MCData group standalone FD request from the MCData client 1.\n6.\tThe receiving MCData clients 2 to n notifies the user about the incoming MCData group standalone FD request which may be either accepted or rejected or ignored. If the request includes mandatory download indication in the MCData group standalone FD request an accepted response is assumed.\n7.\tIf the target MCData user on MCData clients 2 to n provides a response (accept or reject) to the notification, then the respective MCData client sends the MCData group standalone FD response to the MCData server. MCData client 2 to n automatically sends accepted MCData group standalone FD response when the incoming request included mandatory download indication.\n8.\tMCData server forwards the MCData group standalone FD response to the MCData client 1.\nNOTE 3:\tStep 8 can occur at any time following step 5, and prior to step 9 depending on the conditions to proceed with the file transmission.\n9.\tMCData client 1 and MCData server have successfully established media plane for file transmission and the MCData client 1 transmits the file data.\n10.\tMCData server distributes the file received from MCData client 1 to MCData clients 2 to n over the established media plane. Distribution of file can be via unicast or via MBMS bearer(s). For distribution via MBMS bearer(s), the procedure described in subclause 7.3\tUse of MBMS transmission (on-network) is executed. File download report is shared by the receiving MCData clients, if requested by the user at MCData client 1. After file transaction is completed, the media plane is released.\nNOTE 4:\tMCData server is not required to wait for the complete download of file from MCData client 1 prior to initiating file distribution to MCData client 2.\n11.\tThe MCData clients successfully receiving the file, records file download completed and notifies MCData user.\n12.\tMCData client 2 initiates a MCData download completed report for reporting file download completed, if requested by the user at MCData client 1.\n13.\tThe MCData file download completed report(s) from MCData client(s) may be stored by the MCData server for download history interrogation from the authorized MCData users. The MCData file download completed report from each MCData user may be aggregated.\n14.\tAggregated or individual MCData file download completed report is sent to the disposition requesting user at MCData client 1.\nThe media storage client uses HTTP to remove a file that was previously uploaded to the MCData content server.\nThe procedure in figure 7.5.2.8.2-1 describes the case where a MCData user is removing the file that was previously uploaded to the MCData content server.\nPre-conditions:\n1.\tThe MCData user on the media storage client is registered for receiving MCData service.\n2.\tThe file has been successfully uploaded by the MCData user using the procedures defined in subclause 7.5.2.2.\n3.\tThe MCData content server has the ability to verify if the requesting MCData user is authorised to remove.\nThe figure depicts a network diagram with various components, including a base station (BTS), a user equipment (UE), and a network element (NE). The diagram illustrates the process of fiber-optic removal using HTTP, with an authorized user performing the removal. The figure is labeled as \"Figure 7.5.2.8.2-1: Fiber removal using HTTP by authorized user.\"\nFigure 7.5.2.8.2-1: File removal using HTTP by authorised user\n1.\tThe user on the media storage client decides to remove a file that was previously uploaded.\n2.\tThe URL of the file to be removed is included in the request sent to the media storage function on the MCData content server.\n3.\tThe MCData content server remove the file indicated by the URL.\n4.\tThe MCData content server informs the media storage client if the file is successfully removed.\nEditor's note: It is FFS if and how the recipients of the file URL need to be notified if the file is no longer available to be downloaded.\nThe procedure in figure 7.5.2.8.3-1 describes the case where an MCData user removes the file that was previously uploaded to the primary MCData system MCData content server, and where the file has been made available in the partner MCData system MCData content server.\nPre-conditions:\n1.\tThe MCData user on the media storage client is registered for receiving MCData service.\n2.\tThe file has previously been uploaded to the MCData content server in the primary MCData system of MCData client 1.\n3.\tThe file has been successfully transferred to the MCData content server in the partner MCData system.\nThe figure depicts a process for removing fiber optic cables using HTTP by an authorized user.\nFigure 7.5.2.8.3-1: File removal using HTTP by authorized user\n1.\tThe user on the media storage client decides to remove a file that was previously uploaded.\n2.\tThe URL of the file to be removed is included in the request sent to the media storage function on the primary MCData content server.\n3.\tThe primary MCData content server removes the file indicated by the URL.\nNOTE:\tStep 3 may occur at any time following step 2 and before step 6.\n4.\tAs the primary MCData content server has recorded that the file has previously been sent to the partner MCData system, the primary MCData content server sends the MCData remove file request by user to the partner MCData content server, containing the URL of the file which was stored on the primary MCData content server.\n5.\tThe partner MCData content server removes the file indicated by the URL.\n6.\tThe partner MCData content server informs the primary MCData content server that the file has been successfully removed.\n7.\tThe primary MCData content server informs the media storage client if the file is successfully removed.\nEditor's note: It is FFS if and how the recipients of the file URL need to be notified if the file is no longer available to be downloaded\nThe initiation of a group standalone FD to a selected group results in affiliated group members receiving the file data over MBMS.\nThe first steps of the procedure are identical to the procedure Group standalone file distribution using HTTP (7.5.2.6). Based on the density and distribution of target group members, the MCData server may decide to deliver the file over MBMS.\nThe MBMS download delivery method is described in clause 7 of 3GPP TS 26.346 [21].\nThe procedure in figure 7.5.2.10.2-1 describes the case where a MCData user is initiating group standalone data communication for sending a file to multiple MCData users, with or without download completed report request.\nPre-conditions:\n1.\tThe MCData users on the MCData client 1 to n belong to the same group and are already registered for receiving MCData service and affiliated.\n2.\tThe file to be distributed is uploaded to the media storage function on the MCData content server using the procedure defined in subclause 7.5.2.2.\nThe figure depicts a group of standalone 5G femtocells using the MBMS download delivery method, illustrating the use of multiple antennas to improve signal quality and reliability.\nFigure 7.5.2.10.2-1: Group standalone FD using the MBMS download delivery method\n1-3.\tSteps 1-3 are the same as in the procedure for Group standalone FD using HTTP (7.5.2.6).\n4.\tThe MCData server executes the procedure described in subclause 7.3.5. The MCData server defines, in the MBMS session properties (subclause 5.4 of 3GPP TS 26.348 [19]), the ingest mode to provide the file into the BM-SC via xMB-U. As described in clause 7.3.5.3.3, the MCData server decides how the file stored in the MCData content server is provided for distribution over the MBMS session.\nIf the pull ingest mode is defined, the MCData server may provide in this step the file list. As described in 3GPP TS 26.348 [19], the file list includes, among other information, the file URL to be used by the BM-SC to fetch the file and the earliest fetch time. The earliest fetch time may be configured with a long enough delay so that the MBMS session is established and steps 6 to 8 are executed before the delivery over MBMS. The MCData server can also update the MBMS session with the file list in a later step.\nIf the push ingest mode is defined, the MCData server obtains the URL from the BM-SC to be used to push the file via xMB-U. The MCData server ingests the content into the BM-SC after the MBMS session is established and steps 6 to 8 are performed.\n5.\tThe MCData server initiates the MCData group standalone FD over MBMS request towards each MCData user determined in step 3. The request is sent over unicast or within an MBMS bearer for application level control signalling.\n6.\tThe receiving MCData clients 2 to n notify the users about the incoming MCData group standalone FD request (including file metadata, if present).\n7.\tThe MCData clients 2 to n automatically send accepted MCData group standalone FD response when the incoming request included mandatory download indication.\nNOTE 1:\tWhen the UE is in idle mode, MCData clients may skip step 8.\nNOTE 2:\tIf the pull ingest mode was defined in step 5 and the file list has not been provided yet, the MCData server updates the MBMS session with the file list. If the push ingest mode was defined, the MCData server can start pushing the file for distribution over MBMS.\n8.\tThe MCData server forwards the MCData group standalone FD responses to the MCData client 1.\nNOTE 3:\tStep 8 can occur at any time following step 6, and prior to step 10 depending on the conditions to proceed with the file transmission.\n9.\tThe MCData clients receive the file delivered over MBMS.\n10.\tIf losses occurred during the file delivery over MBMS, the MCData clients may download the missing parts using the procedures defined in subclause 7.5.2.3.\nNOTE 4:\tIf the file is not successfully received over MBMS, e.g. due to a poor MBMS reception quality, the media storage client of the MCData client(s) can download the file using the procedure defined in subclause 7.5.2.3.\n11.\tThe MCData clients, after reception, initiate MCData download completed reports for reporting file download completed, if requested by the user at MCData client 1.\n12.\tThe MCData file download completed reports from the MCData clients may be stored by the MCData server for download history interrogation from authorized MCData users. The MCData file download completed report from each MCData user may be aggregated.\n13.\tAggregated or individual MCData download completed reports are sent by the MCData server to the MCData user at MCData client 1.\nThis clause is for adding procedures related to upgrading an existing one-to-one FD communication to an emergency one-to-one FD communication.\nThe procedure in figure 7.5.2.11.2-1 describes the case where an authorized MCData user is upgrading a MCData one-to-one FD communication to a MCData emergency one-to-one FD communication. This procedure is applicable only when MCData one-to-one file distribution communication is established as described in subclause 7.5.2.5 \"One-to-one file distribution using media plane\".\nPre-conditions:\n1.\tBoth members of the one-to-one FD communication belong to the same MCData system.\n2.\tOne-to-one FD communication is already in progress.\n\nThe figure depicts a one-to-one FD communication upgrade to an emergency one-to-one FD communication system, illustrating the process of upgrading from a traditional one-to-one communication system to an emergency one-to-one system. The upgrade includes the use of fiber-optic cables and optical line terminals (OLTs) to ensure reliable communication in the event of an emergency.\nFigure 7.5.2.11.2-1 One-to-one FD communication upgrade to an emergency one-to-one FD communication\n1.\tThe MCData user at MCData client 1 initiates an emergency. MCData client 1 sets its MCData emergency state. The MCData emergency state of MCData client is retained until explicitly cancelled by the user of MCData client 1.\nNOTE 1:\tWhile MCData client 1 is in the emergency state, all types of MCData one-to-one and group communications initiated by MCData client 1 are initiated as MCData emergency communications.\n2.\tMCData client 1 requests the MCData server to upgrade the MCData one-to-one FD communication to in-progress emergency by sending a MCData one-to-one FD upgrade request.\n3.\tThe MCData server sends the MCData one-to-one FD upgrade request towards MCData client 2.\nNOTE 2:\tMCData client 2 does not set its emergency state as a result of receiving the MCData one-to-one FD upgrade request containing the emergency indicator.\n4.\tThe MCData user of MCData client 2 is notified of the in-progress emergency of the MCData emergency one-to-one FD communication.\n5.\tThe MCData client 2 acknowledges the MCData one-to-one FD upgrade request and sends MCData one-to-one FD upgrade response to the MCData server.\n6.\tThe MCData server adjusts the priority of the underlying bearer for both participants of the MCData one-to-one FD communication. The priority is retained until the communication ends.\n7.\tThe MCData server sends MCData one-to-one FD upgrade response to MCData client 1.\n8.\tMCData client 1 and MCData client 2 continue with the MCData one-to-one FD communication, which has been transformed into an MCData emergency one-to-one FD communication.\nThis clause is for adding procedures related to upgrading an existing MCData group FD communication to an MCData emergency group FD communication.\nThe procedure in figure 7.5.2.12.2-1 describes the case where an authorized MCData user is upgrading an onging MCData group FD communication to an MCData emergency group FD communication. This procedure is applicable only when group MCData FD communication is established as described in subclause 7.5.2.7 \"Group standalone file distribution using media plane\".\nNOTE 1:\tFor simplicity, a single MCData server is shown in place of a user home MCData server and a group hosting MCData server.\nPre-conditions:\n1.\tThe MCData group is previously defined on the group management server with MCData client 1, MCData client 2 and MCData client 3 are affiliated to that MCData group.\n2.\tAll members of the MCData group belong to the same MCData system.\n3.\tAn MCData group FD communication is already in progress.\n4.\tThe initiating MCData client 1 has been configured to send an MCData emergency alert when upgrading an MCData emergency group communication.\nThe figure depicts a 5G network scenario with MCData group 12.2-1 FD communication upgraded to an MCData emergency group 12.2-1 FD communication, illustrating the upgrade process and the benefits of using MCData for emergency communication.\nFigure 7.5.2.12.2-1: MCData group FD communication upgraded to an MCData emergency group FD communcation\n1.\tThe MCData user at MCData client 1 initiates a group emergency. MCData client 1 sets its MCData emergency state. The MCData emergency state of MCData client 1 is retained until explicitly cancelled by the user of MCData client 1.\nNOTE 2:\tWhile MCData client 1 is in the emergency state, all types of MCData one-to-one and group communications initiated by MCData client 1 are initiated as MCData emergency communications.\n2.\tMCData client 1 requests the MCData server to upgrade the MCData group to an in-progress emergency state by sending a MCData group FD upgrade request. The MCData client 1 sets the emergency indicator in the request. If configured to send an MCData alert when initiating an MCData emergency upgrade, the request also contains an indication that an MCData alert is to be initiated.\n3.\tThe MCData server sets the emergency state of the MCData group and adjusts the priority of the underlying bearer for all or selected participants in the MCData group FD communication that receive the communication over unicast.\nNOTE 3:\tThe determination of the selected participants whose bearers have to be upgraded is left to implementation.\nNOTE 4:\tWhile the MCData group is in the in-progress emergency state, all types of MCData communications within the group are processed as emergency group communications by the MCData server. MCData group members that are not in the emergency state do not indicate emergency in group communication requests.\n4.\tMCData server sends the MCData group FD upgrade request towards the MCData clients of each of those affiliated MCData group members. The request contains an indication of an MCData emergency alert if the request from the originator indicated MCData emergency alert.\n5.\tMCData users are notified of the in-progress emergency state of the MCData group.\n6.\tThe receiving MCData clients send the MCData group FD upgrade response to the MCData server to acknowledge the MCData group emergency request. For a multicast call, these acknowledgements are not sent.\n7.\tThe MCData server sends the MCData group FD upgrade response to the MCData user 1 to confirm the upgrade request.\nNOTE 5:\tStep 7 can occur at any time following step 3, depending on the conditions to proceed with the call.\nMCData client 1, MCData client 2 and MCData client 3 continue with the MCData group FD communication, which has been transformed into an MCData emergency group FD communication.\nThis clause describes procedures related to an MCData in-progress emergency group state cancel. The emergency state of the group can also be cancelled by the group SDS in-progress emergency state cancellation procedure in subclause 7.4.2.10.2, or by the emergency alert cancellation procedure specified in 3GPP TS 23.280 [16], subclause 10.10.1.2.2.2.\nThe procedure in figure 7.5.2.13.2-1 describes the case where an authorized MCData user cancels MCData group's in-progress emergency.\nPre-conditions:\n1.\tThe MCData group is previously defined on the group management server with MCData client 1, MCData client 2 and MCData client 3 affiliated to that MCData group.\n2.\tAll members of the MCData group belong to the same MCData system.\n3.\tMCData group members have been notified about the in-progress emergency.\n4.\tThe MCData group is in the in-progress emergency state and has prioritized bearer support.\n5.\tMCData client 1 previously initiated the in-progress emergency for the group.\nThe figure depicts a 5G network scenario with MCData group FD in-progress, emergency group state, and cancel status. The MCData group is a key component in 5G networks, responsible for managing data traffic and ensuring efficient communication. The emergency group is a critical part of the network, allowing for rapid response to emergencies and ensuring the network's resilience. The cancel status indicates that the group is currently in a state where it can be canceled, allowing for the group to be removed from the network if necessary.\nFigure 7.5.2.13.2-1: MCData group FD in-progress emergency group state cancel\n1.\tThe user at the MCData client 1 initiates an MCData group FD in-progress emergency group state cancel.\nNOTE 1:\tAn MCData user authorized to cancel in-progress emergencies on the MCData group can also be authorised to cancel the MCData emergency alert in addition to the initiator. However, only the initiator can cancel the initiator's local MCData emergency state.\n2.\tThe MCData client 1 sends an MCData group FD in-progress priority state cancel request to the MCData server. The MCData client 1 also resets emergency indicator in the request to inform MCData server about cancellation of in-progress emergency group state.\nNOTE 2:\tIf an MCData emergency alert relating to MCData client 1 is in effect together with an MCData in-progress emergency group state on the MCData group, the MCData emergency alert of MCData client 1 can be cancelled at the same time. In that case, the MCData group FD in-progress priority group state cancel request carries an indication that the emergency alert of MCData client 1 is also being cancelled.\nNOTE 3:\tIf an MCData group FD in-progress priority state cancel request is received by the MCData server while a group member that is in the emergency state is transmitting, the MCData group FD in-progress priority state cancel request is rejected by the MCData server.\n3.\tThe MCData server adjusts the priority of the underlying bearer; priority treatment is no longer required. The MCData server cancels/resets the emergency in-progress state of the MCData group.\n4.\tThe MCData server sends an MCData group FD in-progress priority state cancel request to the MCData group members.\n5.\tMCData group members are notified of the MCData group FD in-progress emergency state cancel.\n6.\tThe receiving MCData clients send the MCData group FD in-progress priority state cancel response to the MCData server to acknowledge the MCData in-progress emergency group state cancel. For a multicast call scenario, these acknowledgements are not sent.\n7.\tThe MCData server sends the MCData group FD in-progress priority state cancel response to the MCData user 1 to confirm the MCData in-progress emergency group state cancel. If the MCData in-progress emergency group state cancel request (in step 2) contained the \"Alert indicator\" IE, the MCData client 1 resets its local emergency status.\nNOTE 4:\tStep 7 can occur at any time following step 3, depending on the conditions to proceed with the call.\nThis clause is for adding procedures related to an imminent peril group FD communication.\nThis procedure is applicable only when group MCData communication is established as described in subclause 7.5.2.7 \"Group standalone file distribution using media plane\". The MCData service shall support the procedures and related information flows as specified in subclause 7.5.2.12 \"Group FD communication upgrade to an emergency group FD communication\" with the following clarifications:\n-\tIn step 2), the MCData client 1 sets the imminent peril indicator;\n-\tIn step 3), the bearers' priority is adjusted as necessary, to correspond to an imminent peril priority which could be different than the setting used in the procedure in subclause 7.5.2.12; and\n-\tIn step 5), MCData users are notified of the in-progress imminent peril state of the MCData group.\nThis clause is for adding procedures related to an imminent peril group state cancel.\nThe MCData service shall support the procedures and related information flows as specified in subclause 7.5.2.13 \"Group FD communication in-progress emergency group state cancel\" with the following clarifications:\n-\tIn step 2), the MCData client 1 sets the imminent peril indicator; and\n-\tIn step 5), MCData users are notified of the in-progress imminent peril state cancel.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.5.2.1.1-1: MCData upload data request",
                                    "table number": 35,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.2-1: MCData upload data response",
                                    "table number": 36,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.3-1: MCData download data request",
                                    "table number": 37,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.4-1: MCData download data response",
                                    "table number": 38,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.5-1: MCData FD request (using HTTP) from MCData client to MCData server",
                                    "table number": 39,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.5-2: MCData FD request (using HTTP) from an MCData server to MCData server",
                                    "table number": 40,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.5-3: MCData FD request (using HTTP) from MCData server to MCData client",
                                    "table number": 41,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.6-1: MCData FD response (using HTTP)",
                                    "table number": 42,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.7-1: MCData download completed report",
                                    "table number": 43,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.7A-1: MCData aggregated download completed report",
                                    "table number": 44,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.8-1: MCData FD request (using media plane/MCData client to MCData server)",
                                    "table number": 45,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.8-2: MCData FD request (using media plane/MCData server to MCData server)",
                                    "table number": 46,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.8-3: MCData FD request (using media plane/MCData server to MCData client)",
                                    "table number": 47,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.9-1: MCData FD response (using media plane)",
                                    "table number": 48,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.10-1: MCData group standalone FD request (using HTTP) from MCData client to MCData server",
                                    "table number": 49,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.10-2: MCData group standalone FD request (using HTTP) from MCData server to MCData client",
                                    "table number": 50,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.11-1: MCData group standalone FD response (using HTTP)",
                                    "table number": 51,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.12-1: MCData group standalone FD request (using media plane/MCData client to MCData server)",
                                    "table number": 52,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.12-2: MCData group standalone FD request (using media plane/MCData server to MCData client)",
                                    "table number": 53,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.13-1: MCData group standalone FD response (using media plane)",
                                    "table number": 54,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.14-1: MCData remove file request by user",
                                    "table number": 55,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.15-1: MCData remove file response by user",
                                    "table number": 56,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.18-1: MCData remove file notify",
                                    "table number": 57,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.19-1: MCData file retrieve request",
                                    "table number": 58,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.20-1: MCData file retrieve response",
                                    "table number": 59,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.21-1: MCData group standalone FD over MBMS request",
                                    "table number": 60,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.22-1: MCData one-to-one FD upgrade request",
                                    "table number": 61,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.23-1: MCData one-to-one FD upgrade response",
                                    "table number": 62,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.24-1: MCData group FD upgrade request (MCData client to MCData server)",
                                    "table number": 63,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.24-2: MCData group FD upgrade request (MCData server to MCData client)",
                                    "table number": 64,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.25-1: MCData group FD upgrade response",
                                    "table number": 65,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.26-1: MCData group FD in-progress priority state cancel request (MCData client to MCData server)",
                                    "table number": 66,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.26-2: MCData group FD in-progress priority state cancel request (MCData server to MCData client)",
                                    "table number": 67,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.27-1: MCData group FD in-progress priority state cancel response information elements",
                                    "table number": 68,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.28-1: MCData file upload request",
                                    "table number": 69,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.29-1: MCData file upload response",
                                    "table number": 70,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.30-1: MCData file upload completion status",
                                    "table number": 71,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.31-1: MCData file download request",
                                    "table number": 72,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.32-1: MCData file download response",
                                    "table number": 73,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.33-1: MCData file availability request",
                                    "table number": 74,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.2.1.34-1: MCData file availability response",
                                    "table number": 75,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.5.3\tFile distribution for off-network",
                            "text_content": "Off-network file distribution communications are based on ProSe capabilities as described in clause 7.16.\nTable 7.5.3.2.1-1 describes the information flow for the MCData FD request sent from the MCData client to another MCData client.\nTable 7.5.3.2.1-1: MCData FD request (using media plane)\n\nTable 7.5.3.2.2-1 describes the information flow for the MCData FD response sent from the MCData client to another MCData client.\nTable 7.5.3.2.2-1: MCData FD response (using media plane)\n\nTable 7.5.3.2.3-1 describes the information flow for the MCData download completed report sent from the MCData client to another MCData client.\nTable 7.5.3.2.3-1: MCData download completed report\n\nTable 7.5.3.2.4-1 describes the information flow for the MCData group standalone FD request sent from the MCData client to another MCData client.\nTable 7.5.3.2.4-1: MCData group standalone FD request (using media plane)\n\nTable 7.5.3.2.5-1 describes the information flow for the MCData group standalone FD response sent from the MCData client to another MCData client.\nTable 7.5.3.2.5-1: MCData group standalone FD response (using media plane)\n\nThe MCData client uses media plane for a standalone FD download from another MCData client in off-network.\nFigure 7.5.3.3.2-1 describes procedures for an off-network MCData client 1 initiating one-to-one MCData data communication for sending standalone FD data to other MCData client, with or without download completed report request.\nPre-conditions:\n1.\tMCData user 1 has initiated communication for sending standalone FD data to other MCData user 2.\n2.\tMCData client 1 and MCData client 2 are members of the same ProSe Discovery group and are ProSe 1:1 direct communication capable.\n3.\tMCData client 1 has discovered MCData client 2 in proximity, associated with MCData user 2, using ProSe Discovery procedures.\n\nThe figure depicts a one-to-one standalone file distribution using a media plane, illustrating the process of distributing files between two devices. The media plane is a crucial component in this scenario, facilitating the transfer of data between the two devices.\nFigure 7.5.3.3.2-1: One-to-one standalone file distribution using media plane\n1.\tMCData client 1 sends a MCData FD request towards the MCData client 2. File metadata information is included in the SDP. The MCData FD request contains one MCData user for one-to-one data communication as selected by the user at MCData client 1. The MCData FD request contains conversation identifier for message thread indication. The MCData FD request may include additional implementation specific information in the application metadata container. MCData FD request may contain mandatory download indication. The MCData FD request may contain download completed report indication if selected by the user at MCData client 1.\n2.\tOn receiving a MCData FD request, the MCData client 2 checks whether any policy is to be asserted to limit certain types of message or content to certain members, for example, due to location or user privilege.\n3.\tThe receiving MCData client 2 notifies the user about the incoming MCData FD request which may be either accepted or rejected or ignored. MCData user may not be sought consent if the request includes mandatory download indication in the MCData FD request and instead only notify the MCData user about file downloading.\n4.\tIf the target MCData user 2 provides a response (accept or reject) to the notification, then the MCData client 2 sends the MCData FD response to the MCData client 1. MCData client 2 automatically sends accepted MCData FD response when the incoming request included mandatory download indication.\n5.\tMCData client 1 distributes the file over the established media plane to MCData client 2.\n6. The MCData client 2 records file download completed and notifies MCData user 2. MCData client 2 initiates a MCData download completed report for reporting file download completed, if requested by the user at MCData client 1.\nThe initiation of a group standalone FD to a selected group results in off-network MCData group members receiving the file data.\nFigure 7.5.3.4.2-1 describes procedures for an off-network MCData client 1 initiating group MCData data communication for sending FD data to a MCData group, with or without download completed report request.\nPre-conditions:\n1.\tMCData user 1 has initiated group communication for sending FD data to the MCData group.\n2.\tInformation for ProSe direct communications corresponding to the MCData group and its mapping to ProSe Layer-2 Group ID are pre-configured in MCData client 1.\n3.\tMCData client 1 to MCData client N are members of the same MCData group.\n\nThe figure depicts a group of standalone file distribution using a media plane, illustrating the process of distributing files over a network.\nFigure 7.5.3.4.2-1: Group standalone file distribution using media plane\n\n1.\tMCData client 1 sends a MCData FD request towards the MCData group. File metadata information is included in the SDP. The MCData group standalone data request contains MCData group ID as selected by the user at MCData client 1. The MCData group standalone FD request contains conversation identifier for message thread indication. The MCData group standalone FD request may include additional implementation specific information in the application metadata container. MCData group standalone FD request may contain mandatory download indication. The MCData group standalone FD request may contain download completed report indication if selected by the user at MCData client 1.\n2.\tOn receiving a MCData FD request, the MCData clients check whether any policy is to be asserted to limit certain types of message or content to certain members, for example, due to location or user privilege.\n3.\tIf the policy assertion is positive, the receiving MCData clients 2 to n notifies the user about the incoming MCData group standalone FD request which may be either accepted or rejected or ignored. MCData user may not be sought consent if the request includes mandatory download indication in the MCData group standalone FD request and instead only notify the MCData user about file downloading.\n4.\tIf the target MCData user on MCData clients 2 to n provides a response (accept or reject) to the notification, then the respective MCData client sends the MCData group standalone FD response to the MCData client 1. MCData client 2 to n automatically sends accepted MCData group standalone FD response when the incoming request included mandatory download indication.\n5.\tMCData client 1 and MCData client 2 to n have successfully established media plane for file transmission and the MCData client 1 transmits the file data.\n6. The MCData client 2 to n successfully receiving the file, records file download completed and notifies MCData users.\n7. MCData client 2 to n initiate a MCData download completed report for reporting file download completed, if requested by the user at MCData client 1.\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.5.3.2.1-1: MCData FD request (using media plane)",
                                    "table number": 76,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.3.2.2-1: MCData FD response (using media plane)",
                                    "table number": 77,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.3.2.3-1: MCData download completed report",
                                    "table number": 78,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.3.2.4-1: MCData group standalone FD request (using media plane)",
                                    "table number": 79,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.5.3.2.5-1: MCData group standalone FD response (using media plane)",
                                    "table number": 80,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "7.6\tTransmission and reception control",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.6.1\tGeneral",
                            "text_content": "Based on the configurations (available in MCData user profile, group configuration and service configuration), the MCData transmission and reception control provides a necessary capability for an authorized user of the MCData service to transmit, receive notification messages due to various trigger conditions, advocates reception mode and terminate transmission when there is no longer a need to transmit. The subclauses below describe the transmission and reception control procedures using signalling control plane.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.6.2\tTransmission and reception control for on-network",
                            "text_content": "Table 7.6.2.1.1-1 describes the information flow for the MCData control indication sent from the MCData server to the MCData client.\nTable 7.6.2.1.1-1: MCData control indication\n\nTable 7.6.2.1.2-1 describes the information flow for the MCData indication sent from the MCData server to the MCData client.\nTable 7.6.2.1.2-1: MCData indication\n\nTable 7.6.2.1.3-1 describes the information flow for the MCData get deferred list request sent from the MCData client to the MCData server.\nTable 7.6.2.1.3-1: MCData get deferred list request\n\nTable 7.6.2.1.4-1 describes the information flow for the MCData get deferred list response sent from the MCData server to the MCData client.\nTable 7.6.2.1.4-1: MCData get deferred list response\n\nWhen SDS message is sent, the data is transferred from the sending MCData client to the receiving MCData client without any request/grant procedure or any explicit actions on the part of the receiving MCData client.\nThe procedure in figure 7.6.2.2.2-1 describes the case where MCData SDS is automatically transmitted to the selected recipient user or affiliated members of the selected MCData group.\nPre-conditions:\n1.\tMCData user is configured with permission to transmit data.\n2.\tOptionally, MCData client may have an activated functional alias to be used.\n3.\tThe MCData server may have subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\nThe figure depicts a schematic representation of an automatic transmission system for SDS (Smart Distribution System), illustrating the various components and their interconnections.\nFigure 7.6.2.2.2-1: Automatic transmission for SDS\n1.\tMCData user selects the data to transmit and the recipient MCData user or MCData group. The MCData user at MCData client 1 may include a functional alias used within the SDS data transmission.\n2.\tMCData client checks for MCData user's permission to transmit data and checks if the data size is less than the maximum data size for SDS. MCData client calculates the total transmission request size and determines to select one of the appropriate procedures described in subclause 7.4.2.2, 7.4.2.3, 7.4.2.5 or 7.4.2.6.\n3.\tTransmission control on the MCData server verifies if the MCData user is authorized to transmit and the data size in the received transmission request does not exceed the maximum data size for SDS. MCData server verifies whether the provided functional alias, if present, can be used and has been activated for the MCData user.\n4.\tMCData server may send one of the following MCData control indications:\na)\tIf the MCData user does not have permission to transmit data to another MCData user or MCData group then the \"No permission to transmit data\" control indication is sent.\nb)\tIf the selected transmission is for a MCData group and there are no affiliated group members, then the transmission control on MCData server sends the \"No affiliated members found to the selected MCData group\" control indication.\nc)\tMCData server may queue the data transmit request for later transmission with control indication \"Request to transmit is queued\".\nOtherwise continue with step 5.\n5.\tMCData server automatically transmits the data and, if available, the functional alias of the originating MCData client 1 to the selected MCData user or the affiliated members or all group members (in the case of lossless communication) of the selected MCData group according to the procedures selected in step 2.\n6.\tThe MCData server may store the data in temporary storage (e.g. if the recipient is not available at the time of data delivery or network congestion or data deferred by the user) and may send MCData indication to notify the recipient of available data for retrieval:\na)\tIf the timer expired for periodic announcement with the list of available recently invited data communications, the recipient MCData client waiting to receive the temporarily stored data receives MCData indication with the list of available temporarily stored data waiting to download in the Deferred data list .\nb)\tIf the temporarily stored data is expired, the data may be purged from the temporary store and the recipient MCData user may be informed in MCData indication with \"Data expired and not available to download anymore\" in the Deferred data list.\nThe mandatory download procedure allows a sending MCData client to send data to a receiving MCData client, where the receiving MCData client is compelled to download the data.\nThe procedure in figure 7.6.2.3.2-1 describes the case where MCData user is using FD. The FD is subjected to transmission control prior to transmitting data to the selected recipient user or affiliated members of the selected MCData group for mandatory download.\nPre-conditions:\n1.\tMCData user is configured with permission to transmit data.\n2.\tMCData administrator has configured maximum data size for FD.\n3.\tMaximum amount of data that a MCData user can transmit in a single request is configured.\n4.\tMaximum amount of time that a MCData user can transmit in a single request is configured.\n5.\tOptionally, MCData client may have an activated functional alias to be used.\n6.\tThe MCData server may have subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\nThe figure depicts a communication system with a 6-layer architecture, illustrating the transmission of data with mandatory download. The system includes mandatory download, which ensures that the data is sent to the destination without any delay. The figure also shows the use of redundant paths to ensure reliability and failover.\nFigure 7.6.2.3.2-1: Send data with mandatory download\n1.\tMCData user selects the data to transmit, the recipient MCData user or MCData group and the indication for mandatory download. The MCData user at MCData client 1 may include a functional alias used within the FD data transfer.\n2.\tMCData client has checked for MCData user's permission to transmit data. MCData client calculates the total transmission request size and determines to select one of the appropriate procedures described in subclause 7.5.2.4, 7.5.2.5, 7.5.2.6 or 7.5.2.7 and including the mandatory download indication.\n3.\tTransmission control on the MCData server verifies if the MCData user is authorized to transmit, the data size in the received transmission request is within the maximum size allowed for FD transmission and is within the maximum amount of time that a MCData user can transmit in a single request. MCData server verifies whether the provided functional alias, if present, can be used and has been activated for the MCData user.\n4.\tMCData server may send one of the following MCData control indications:\na)\tIf the MCData user does not have permission to transmit data to another MCData user or MCData group then the \"No permission to transmit data\" control indication is sent.\nb)\tIf the data size requested to be transmitted is more than the maximum amount of data that an MCData user can transmit in a single request, the transmission control on MCData server rejects the data transmission request and sends the rejection control indication \"Rejected due to exceeding data transmit size\".\nc)\tIf the data transmission time exceeds the maximum amount of time that an MCData user can transmit in a single request, the transmission control on MCData server rejects the data transmission request and sends the rejection control indication \"Rejected due to exceeding data transmit time\".\nd)\tIf the selected transmission is for a MCData group and there are no affiliated group members, then the transmission control on MCData server sends the \"No affiliated members found to the selected MCData group\" control indication.\ne)\tMCData server may queue the data transmit request for later transmission with control indication \"Request to transmit is queued\".\nOtherwise continue with step 5.\n5.\tMCData server transmits the data and, if available, the functional alias of the originating MCData client 1 to the selected MCData user or the affiliated members or all group members (in the case of lossless communication) of the selected MCData group according to the procedures selected in step 2 (where the recipient MCData client receives the data automatically).\n6.\tThe MCData server may store the data in temporary storage (e.g. if the recipient is not available at the time of data delivery or network congestion or data deferred by the user) and may send MCData indication to notify the recipient of available data for retrieval:\na)\tIf the timer expired for periodic announcement with the list of available recently invited data communications, the recipient MCData client waiting to receive the temporarily stored data receives MCData indication with the list of available temporarily stored data waiting to download in the Deferred data list .\nb)\tIf the temporarily stored data is expired, the data may be purged from the temporary store and the recipient MCData user may be informed in MCData indication with \"Data expired and not available to download anymore\" in the Deferred data list.\nThe send data without mandatory download procedure allows the receiving MCData client to accept download, defer download (i.e. no response) or refuse (e.g. by the user deleting the notification item) the data sent from the sending MCData client.\nThe procedure in figure 7.6.2.4.2-1 describes the case where MCData user selected data is subjected to transmission control prior to transmitting data to the selected recipient user or affiliated members of the selected MCData group for downloading with recipient MCData user consent.\nPre-conditions:\n1.\tMCData user is configured with permission to transmit data.\n2.\tMaximum amount of data or time that an MCData user can transmit in a single request is configured.\n3.\tTime limit for the temporarily stored data waiting to be delivered to a receiving user is configured.\n4.\tOptionally, MCData client may have an activated functional alias to be used.\n5.\tThe MCData server may have subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\nThe figure depicts a simplified representation of a wireless communication system, specifically focusing on the transmission of data without the need for mandatory download. It illustrates the concept of \"Send data without mandatory download\" by showing how data can be transmitted without the need for a download, which is a key concept in the field of wireless communication. The figure shows a simplified representation of a wireless communication system, with the transmitter (Tx) and receiver (Rx) depicted as separate entities. The Tx sends data to the Rx, which then decodes the data and sends it back to the Tx. The figure also includes a layer of redundancy, represented by dashed lines, to ensure that the data can be transmitted even if one of the layers fails. The figure is a simplified representation of a wireless communication system, emphasizing the concept of \"Send data without mandatory download\" and the importance of redundancy in ensuring reliable communication.\nFigure 7.6.2.4.2-1: Send data without mandatory download\n1.\tMCData user selects the data to transmit and the recipient MCData user or MCData group and does not select the mandatory download indication. The MCData user at MCData client 1 may include a functional alias used within the data transmission.\n2.\tMCData client has checked for MCData user's permission to transmit data and the data size is within the maximum data size allowed. The MCData client calculates the total transmission request size and determines to select procedure described in subclause 7.5.2.4, 7.5.2.5, 7.5.2.6 or 7.5.2.7 and without including the mandatory download indication.\n3.\tTransmission control on the MCData server verifies if the MCData user is authorized to transmit, the data size in the received transmission request is within the maximum data size allowed and is within the maximum amount of time that a MCData user can transmit in a single request. MCData server verifies whether the provided functional alias, if present, can be used and has been activated for the MCData user.\n4.\tMCData server may send one of the following control indications:\na)\tIf the MCData user does not have permission to transmit data to another MCData user or MCData group then the \"No permission to transmit data\" control indication is sent.\nb)\tIf the selected transmission is for a MCData group and there are no affiliated group members, then the transmission control on MCData server sends the \"No affiliated members found to the selected MCData group\" control indication.\nc)\tIf the data size requested to be transmitted is more than the maximum amount of data that an MCData user can transmit in a single request, the transmission control on MCData server rejects the data transmission requests and sends the rejection control indication \"Rejected due to exceeding data transmit size\".\nd)\tIf the data transmission time exceeds the maximum amount of time that an MCData user can transmit in a single request (applies to DS only), the transmission control on MCData server rejects the data transmission request and sends the rejection control indication \"Rejected due to exceeding data transmit time\".\ne)\tMCData server may queue the data transmit request for later transmission with a control indication \"Request to transmit is queued\".\nOtherwise, continue with step 5.\n5.\tMCData server transmits the data and, if available, the functional alias of the originating MCData client 1 to the selected MCData user or the affiliated members or all group members (in the case of lossless communication) of the selected MCData group according to the procedures selected in step 2 (where the recipient MCData client may receive the data automatically).\n6.\tThe MCData server may store the data in temporary storage (e.g. if the recipient is not available at the time of data delivery or network congestion or data deferred by the user) and may send MCData indication to notify the recipient of available data for retrieval:\na)\tIf the timer expired for periodic announcement with the list of available recently invited data communications, the recipient MCData client waiting to receive the temporarily stored data receives MCData indication with the list of available temporarily stored data waiting to download in the Deferred data list .\nb)\tIf the temporarily stored data is expired, the data may be purged from the temporary store and the recipient MCData user may be informed in MCData indication with \"Data expired and not available to download anymore\" in the Deferred data list.\nThis procedure allows an MCData client to obtain a list of deferred data communications.\nThe procedure in figure 7.6.2.5.2-1 describes the case where the recipient MCData client receives the list of available temporarily stored data waiting to download for the deferred data group communications.\nPre-conditions:\n1.\tMCData server has temporarily stored data for the deferred data group communications e.g. due to recipient MCData client deferred to download.\nThe figure depicts a list of deferred data group communications, which are essential for managing and prioritizing data in a network.\nFigure 7.6.2.5.2-1: Accessing list of deferred data group communications\n1.\tMCData user initiates the request to get the list of temporarily stored data for the deferred data group communications on the MCData server e.g. due to recipient MCData client deferred to download.\n2.\tMCData client sends a MCData get deferred list request to the MCData server.\n3.\tMCData server generates the list of temporarily stored data for the affiliated group(s), available to download for the requesting MCData client and sends the list in the MCData get deferred list response.\n4.\tMCData client notifies the list of temporarily stored data for the deferred data group communications, upon which the MCData user may decide to retrieve the corresponding data.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.6.2.1.1-1: MCData control indication",
                                    "table number": 81,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.6.2.1.2-1: MCData indication",
                                    "table number": 82,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.6.2.1.3-1: MCData get deferred list request",
                                    "table number": 83,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.6.2.1.4-1: MCData get deferred list response",
                                    "table number": 84,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "7.7\tCommunication release",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.7.1\tGeneral",
                            "text_content": "The subclauses below describe the MCData communication release procedures, which may be initiated either by the sender or the MCData server or the authorized MCData user.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.7.2\tCommunication release for on-network",
                            "text_content": "Table 7.7.2.1.1-1 describes the information flow for the MCData communication release request (in subclause 7.7.2.2.2.2) sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.7.2.1.1-1: MCData communication release request (one-to-one communication using media plane)\n\nTable 7.7.2.1.2-1 describes the information flow for the MCData communication release response (in subclause 7.7.2.2.2.2) sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.7.2.1.2-1: MCData communication release response (one-to-one communication using media plane)\n\nTable 7.7.2.1.3-1 describes the information flow for the MCData communication release request (in subclause 7.7.2.2.2.2) sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.7.2.1.3-1: MCData communication release request (group communication using media plane)\n\nTable 7.7.2.1.4-1 describes the information flow for the MCData communication release response (in subclause 7.7.2.2.2.2) sent from the MCData client to the MCData server and from the MCData server to another MCData client.\nTable 7.7.2.1.4-1: MCData communication release response (group communication using media plane)\n\nTable 7.7.2.1.8-1 describes the information flow for MCData server communication release request (in subclause 7.7.2.3.2.2) sent from the MCData server to the MCData clients involved in one-to-one communication.\nTable 7.7.2.1.8-1: MCData server communication release request (one-to-one communication using media plane)\n\nTable 7.7.2.1.9-1 describes the information flow for the MCData server communication release response (in subclause 7.7.2.3.2.2) sent from the MCData client to the MCData server.\nTable 7.7.2.1.9-1: MCData server communication release response (one-to-one communication using media plane)\n\nTable 7.7.2.1.10-1 describes the information flow for MCData server communication release request (in subclause 7.7.2.3.2.2) sent from the MCData server to the MCData clients involved in group communication.\nTable 7.7.2.1.10-1: MCData server communication release request (group communication using media plane)\n\nTable 7.7.2.1.11-1 describes the information flow for the MCData server communication release response (in subclause 7.7.2.3.2.2) sent from the MCData client to the MCData server.\nTable 7.7.2.1.11-1: MCData server communication release response (group communication using media plane)\n\nTable 7.7.2.1.13-1 describes the information flow for MCData release intent request (in subclause 7.7.2.4.2, 7.7.2.6.2) sent from the MCData server to the MCData client.\nTable 7.7.2.1.13-1: MCData release intent request (one-to-one communication using media plane)\n\nTable 7.7.2.1.14-1 describes the information flow for MCData more information response (in subclause 7.7.2.4.2, 7.7.2.6.2) sent from the MCData client to the MCData server and from MCData server to authorized MCData user.\nTable 7.7.2.1.14-1: MCData more information response (one-to-one communication using media plane)\n\nTable 7.7.2.1.15-1 describes the information flow for MCData release intent request (in subclause 7.7.2.4.2, 7.7.2.6.2) sent from the MCData server to the MCData client.\nTable 7.7.2.1.15-1: MCData release intent request (group communication using media plane)\n\nTable 7.7.2.1.16-1 describes the information flow for MCData more information response (in subclause 7.7.2.4.2, 7.7.2.6.2) sent from the MCData client to the MCData server and from MCData server to authorized MCData user.\nTable 7.7.2.1.16-1: MCData more information response (group communication using media plane)\n\nTable 7.7.2.1.17-1 describes the information flow for MCData auth user communication release request (in subclause 7.7.2.5.2, 7.7.2.6.2) sent from the authorized MCData user to the MCData server.\nTable 7.7.2.1.17-1: MCData auth user communication release request (one-to-one communication using media plane)\n\nTable 7.7.2.1.18-1 describes the information flow for the MCData server communication release response (in subclause 7.7.2.5.2, 7.7.2.6.2) sent from the MCData server to the authorized MCData user.\nTable 7.7.2.1.18-1: MCData auth user communication release response (one-to-one communication using media plane)\n\nTable 7.7.2.1.19-1 describes the information flow for MCData auth user communication release request (in subclause 7.7.2.5.2, 7.7.2.6.2) sent from the authorized MCData user to the MCData server.\nTable 7.7.2.1.19-1: MCData auth user communication release request (group communication using media plane)\n\nTable 7.7.2.1.20-1 describes the information flow for the MCData server communication release response (in subclause 7.7.2.5.2, 7.7.2.6.2) sent from the MCData server to the authorized MCData user.\nTable 7.7.2.1.20-1: MCData auth user communication release response (group communication using media plane)\n\nTable 7.7.2.1.21-1 describes the information flow for the MCData request for extension (in subclause 7.7.2.4.2, 7.7.2.6.2) sent from the MCData client to the MCData server and from MCData server to authorized MCData user.\nTable 7.7.2.1.21-1: MCData request for extension\n\nTable 7.7.2.1.22-1 describes the information flow for the MCData response for extension (in subclause 7.7.2.4.2, 7.7.2.6.2) sent from the authorized MCData user to the MCData server and MCData client to the MCData server and from MCData server to MCData client.\nTable 7.7.2.1.22-1: MCData response for extension\n\nDuring MCData communication, a transmitting participant can at any time indicate to stop transmission to the MCData server.\nThe subclause describes the procedure for MCData user initiated MCData communication release where MCData communication is established as SDS using media plane or SDS session or file distribution using media plane.\nNOTE:\tThe release of MCData communication over MBMS is out of scope of the current specification.\nThe procedure in figure 7.7.2.2.2.2-1 describes signalling control plane procedure for the case where MCData communication is ongoing and transmitting participant initiates MCData communication release. The procedure is applicable for one-to-one and group MCData communications.\nPre-conditions:\n1.\tMCData users on MCData client 1 and client 2 are already registered for receiving MCData service.\n2.\tMCData communication is established between MCData client 1 and MCData client 2 and MCData client1 is the initiator of the MCData communication.\nThe figure depicts a communication system using a media plane, with MCData communication being the focus. The system includes a media plane, a control plane, and a data plane, all interconnected through a network. The media plane is responsible for transmitting data, while the control plane manages the flow of data and ensures security. The data plane is responsible for processing and forwarding data packets. The figure also includes a release of MCData communication, which is a key component of the system.\nFigure 7.7.2.2.2.2-1: Release of MCData communication using media plane\n1.\tMCData user at MCData client 1 requests to release ongoing MCData communication.\n2.\tMCData client 1 sends MCData communication release request towards MCData server, for tearing down the communication with the other MCData client(s).\n3.\tMCData server sends MCData communication release request to all the participants of the MCData communication.\n4.\tRecipient MCData clients notifies respective MCData user about the release of MCData communication.\n5.\tMCData clients receiving the MCData communication release request provide communication release response back towards MCData server.\n6.\tMCData server sends MCData communication release response back to MCData client 1.\n7.\tAll participants of the MCData communication have successfully released the media plane resources associated with the MCData communication that is released.\n8.\tMCData client 1 notifies the MCData user about the communication release.\nNOTE:\tThe backward compatibility handling of this procedure is outside the scope of the present document.\nMCData server initiates the release of an ongoing MCData communication, since at least one of the communication release conditions are met e.g. lack of bearer capacity, limit for the maximum amount of data or time that a participant transmits from a single request to transmit exceeded. Based on the configuration, MCData server either pre-empts the MCData communication without giving prior indication to MCData client or notifies the intent of release to the MCData client initiating communication. Latter scenario allows the MCData user to request for extension of MCData communication and defer the communication release.\nThe subclause describes the procedure for MCData server initiated MCData communication release without prior indication, where MCData communication is established as SDS using media plane or file distribution using media plane.\nNOTE:\tThe release of MCData communication over MBMS is out of scope of the current specification.\nThe procedure in figure 7.7.2.3.2.2-1 describes signalling control plane procedure for the case where during an ongoing MCData communication, based on communication release conditions, MCData server initiates the communication release. The procedure is applicable for one-to-one and group communication.\nPre-conditions:\n1.\tMCData users on MCData client 1, client 2 and client 3 are already registered for receiving MCData service.\n2.\tA MCData administrator has configured the limits for the maximum amount of data and time that a participant transmits from a single request to transmit.\n3.\tA MCData communication is ongoing between MCData client 1, client 2 and client 3.\nThe given telecommunication figure depicts a media plane communication system, specifically a MCData server initiated release of MCData communication using a media plane. The figure illustrates the communication process, including the initiation of the MCData server, the release of MCData communication, and the use of a media plane.\nFigure 7.7.2.3.2.2-1: MCData server initiated release of MCData communication using media plane\n1.\tMCData server would like to release the ongoing MCData communication, identified by conversation identifier, since at least one of the release conditions are met e.g. lack of capacity, limit for the maximum amount of data or time that a participant transmits from a single request to transmit exceeded. Based on configuration, MCData server decides to pre-empt the MCData communication without giving prior indication to MCData client 1.\n2.\tMCData server identifies the participants of the ongoing MCData communication and generates communication release request to release ongoing MCData communication.\n3.\tMCData server sends server MCData communication release request towards each participant of the MCData communication.\n4.\tMCData users are notified about the release of the MCData communication.\n5.\tMCData client at each MCData communication participant sends server MCData communication release response towards the MCData server.\n6.\tAll participants of the MCData communication have successfully released the media plane resources associated with the MCData communication that is released.\nThe subclause describes the procedure for MCData server initiated MCData communication release with prior indication, where MCData communication is established as SDS using media plane or file distribution using media plane or file distribution using HTTP.\nThe procedure in figure 7.7.2.4.2-1 describes signalling control plane procedure for the case where during an ongoing MCData communication, based on communication release conditions, MCData server initiates communication release. As a result of configuration check, MCData server notifies the intent to release MCData communication, optionally requesting for more information (e.g. to know the remaining data volume to transmit) from the MCData client initiating MCData communication.\nPre-conditions:\n1.\tMCData user on MCData client 1 is already registered for receiving MCData service.\n2.\tMCData administrator has configured the limits for the maximum amount of data and time that a participant transmits from a single request to transmit.\n3.\tMCData communication may be ongoing between MCData participants and MCData client 1 is the initiator of the communication.\n4.\tMCData administrator has configured the time for which MCData server needs to wait for extension request from the MCData user.\nThe figure depicts a communication release process initiated by a MCData server, with a prior indication.\nFigure 7.7.2.4.2-1: MCData server initiates communication release with prior indication\n1.\tMCData server releases the ongoing MCData communication, identified by the conversation identifier, since at least one of the release conditions are met e.g. lack of capacity, limit for the maximum amount of data or time that a participant transmits from a single request to transmit exceeded. Based on the configuration, MCData server notifies the intent to release MCData communication.\n2.\tMCData server sends the MCData release intent request towards the communication initiating MCData client 1. MCData server may include request for more information (e.g. to know the remaining data volume to transmit).\n3.\tMCData client 1 informs MCData user about the intent to release communication.\n4.\tIf request for more information is included in the received MCData release intent request, MCData client 1 sends MCData more information response including the remaining amount of data to transmit. Upon receiving more information response from MCData client 1, MCData server may wait for the request for extension until the time configured by the MCData administrator. If MCData server does not receive MCData request for extension within the configured timeout, the MCData server releases MCData communication as described in subclause 7.7.2.3. Otherwise, continue with remaining steps.\n5.\tMCData user at MCData client 1 requests for extension of the ongoing MCData communication.\n6.\tMCData client 1 sends MCData request for extension of the MCData communication.\n7.\tUpon receiving the MCData request for extension of MCData communication from the MCData client 1, MCData server asserts policies to accept or reject the request for extension.\n8.\tMCData server sends MCData response for extension with success or failure result to MCData client 1. MCData communication will continue if MCData server accepted the request for extension from MCData client 1. Otherwise, MCData communication is released according to procedures described in subclause 7.7.2.3.\nAn authorized MCData user at any time during an ongoing MCData communication decides to release communication. The authorized user may decide to release MCData communication without prior indication to the initiator MCData client.\nThe procedure in figure 7.7.2.5.2-1 describes signalling control plane procedure for the case where during an ongoing MCData communication, authorized MCData user initiates MCData communication release without prior indication to the initiator MCData client. An authorized MCData user is part of the ongoing MCData communication.\nPre-conditions:\n1.\tAn authorized MCData user on MCData client is already registered for receiving MCData service.\n2.\tA MCData communication is ongoing between MCData participants and authorized MCData user is keeping track of which participants are receiving communication e.g. through \"message delivered\" and/or \"message read\" indications for the MCData communication.\nThe figure depicts a user initiating a communication release without any prior indication, illustrating the authorization process in a 5G network.\nFigure 7.7.2.5.2-1: An authorized MCData user initiates communication release without prior indication\n1.\tAn authorized MCData user requests to release the ongoing MCData communication, without providing prior indication to the initiator of the MCData communication, MCData client 1.\n2.\tAn authorized MCData client sends MCData auth user communication release request towards MCData server identifying the MCData communication to release. The request also includes indication to the MCData server to release MCData communication without prior indication to the initiator of the MCData communication, MCData client 1.\n3.\tMCData server validates the user from whom the MCData communication release request is received and checks whether the requesting MCData user is authorized to release communication or not.\n4.\tIf the user is authorized to release communication, then MCData server releases the ongoing MCData communication according to procedures described in subclause 7.7.2.3.\n5.\tMCData server sends MCData auth user communication release response containing the result of MCData communication release back to authorized MCData client 1.\nAn authorized MCData user at any time during an ongoing MCData communication decides to release communication. The authorized user may decide to release MCData communication with prior indication to the initiator MCData client. A prior indication allows initiator MCData client to request for extension for the MCData communication.\nThe procedure in figure 7.7.2.6.2-1 describes signalling control plane procedure for the case where during an ongoing MCData communication, authorized MCData user initiates MCData communication release with prior indication to the initiator MCData client. An authorized MCData user is part of the ongoing MCData communication. An initiator MCData user optionally decides to request for the extension of the ongoing communication.\nPre-conditions:\n1.\tAn authorized MCData user on MCData client is already registered for receiving MCData service.\n2.\tA MCData communication is ongoing between MCData participants and authorized MCData user is keeping track of which participants are receiving communication e.g. through \"message delivered\" and/or \"message read\" indications for the MCData communication\n3.\tMCData client 1 is the initiator of the MCData communication.\nThe figure depicts an authorization process for MCData users, with an authorized user initiating communication release, followed by a prior indication.\nFigure 7.7.2.6.2-1: An authorized MCData user initiates communication release with prior indication\n1.\tAn authorized MCData user requests to release the ongoing MCData communication by providing prior indication to the initiator of MCData communication, MCData client 1.\n2.\tAn authorized MCData client sends MCData auth user communication release request towards MCData server including the communication identifier identifying the MCData communication to release. Authorized MCData client may include request for more information (e.g. to know the remaining data volume to transmit). The request also includes indication to MCData server to release MCData communication with prior indication to the initiator MCData client.\n3.\tMCData server validates the user from whom the communication release request is received and checks whether the requesting user is authorized to release communication or not.\n4.\tIf the user is authorized to release communication, then the MCData server sends MCData release intent request, may be including the reason for the release. MCData server may include request for more information as received in the request from the authorized MCData client.\n5.\tMCData client informs MCData user about the intent to release communication by the authorized MCData user.\n6.\tIf request for more information is included in the received MCData release intent request, MCData client 1 sends MCData more information response including the remaining amount of data to transmit.\n7.\tMCData server forwards the MCData more information response to the authorized MCData client.\nNOTE:\tUpon receiving more information response from MCData client 1, MCData server may wait for the request for extension until the time configured by the MCData administrator. If MCData server does not receive request for extension within the configured timeout, the MCData server releases MCData communication as described in subclause 7.7.2.3. Otherwise, continue with remaining steps.\n8.\tMCData user at MCData client 1 decides to request for extension of the ongoing MCData communication.\n9 and 10.\tMCData client sends MCData request for extension towards MCData server. And MCData server forwards the MCData request for extension towards the authorized MCData client.\n11.\tAuthorized MCData client notifies the authorized user about the incoming request for extension. An authorized MCData user decides to accept or reject the request for extension.\n12 and 13. Authorized MCData user decision is sent in MCData response for extension request towards the MCData server. MCData server forwards the MCData response for extension request to MCData client 1.\n14.\tMCData communication will continue if the authorized user accepted the request for extension from MCData client 1. Otherwise, MCData communication will be released according to procedures described in subclause 7.7.2.3.\n15.\tAfter MCData communication is released, MCData server sends the MCData auth user communication release response back to the authorized MCData client.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.7.2.1.1-1: MCData communication release request (one-to-one communication using media plane)",
                                    "table number": 85,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.2-1: MCData communication release response (one-to-one communication using media plane)",
                                    "table number": 86,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.3-1: MCData communication release request (group communication using media plane)",
                                    "table number": 87,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.4-1: MCData communication release response (group communication using media plane)",
                                    "table number": 88,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.8-1: MCData server communication release request (one-to-one communication using media plane)",
                                    "table number": 89,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.9-1: MCData server communication release response (one-to-one communication using media plane)",
                                    "table number": 90,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.10-1: MCData server communication release request (group communication using media plane)",
                                    "table number": 91,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.11-1: MCData server communication release response (group communication using media plane)",
                                    "table number": 92,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.13-1: MCData release intent request (one-to-one communication using media plane)",
                                    "table number": 93,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.14-1: MCData more information response (one-to-one communication using media plane)",
                                    "table number": 94,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.15-1: MCData release intent request (group communication using media plane)",
                                    "table number": 95,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.16-1: MCData more information response (group communication using media plane)",
                                    "table number": 96,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.17-1: MCData auth user communication release request (one-to-one communication using media plane)",
                                    "table number": 97,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.18-1: MCData auth user communication release response (one-to-one communication using media plane)",
                                    "table number": 98,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.19-1: MCData auth user communication release request (group communication using media plane)",
                                    "table number": 99,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.20-1: MCData auth user communication release response (group communication using media plane)",
                                    "table number": 100,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.21-1: MCData request for extension",
                                    "table number": 101,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.7.2.1.22-1: MCData response for extension",
                                    "table number": 102,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "7.8\tConversation management",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.8.1\tGeneral",
                            "text_content": "Conversation management is a collection of related MCData transmissions for a given activity. Conversation management associates SDS and FD communication transmission and present them as a single thread to the user.\nConversation management for on-network is described in clause 7.8.2 and for off-network in clause 7.8.3. Off-network conversation management is based on ProSe capabilities as described in clause 7.16.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.8.2\tConversation management for on-network",
                            "text_content": "The information flow parameters related to conversation management are as described in the subclauses 7.4.2.1 and subclauses 7.5.2.1.5, 7.5.2.1.6, 7.5.2.1.7, 7.5.2.1.8, 7.5.2.1.9, 7.5.2.1.10, 7.5.2.1.11, 7.5.2.1.12, and 7.5.2.1.13.\nThe procedure for an MCData user to associate multiple MCData transmissions between a pair of users for a given activity is illustrated in figure 7.8.2.2.1-1.\nPre-conditions:\n1.\tMCData user(s) on MCData client 1 and 2 are registered for receiving MCData service.\nThe figure depicts a one-to-one conversation management system, illustrating the flow of messages between two parties. It shows the sender, receiver, and the conversation history, with the sender initiating the conversation and the receiver responding. The system uses a one-to-one conversation model, where each conversation is one-to-one, meaning that each conversation is only between two parties. This model is used to manage one-to-one conversations, ensuring that each conversation is handled individually and that the sender and receiver are aware of the conversation history. The figure also shows the flow of messages, with the sender sending a message and the receiver responding. The system uses a one-to-one conversation model to manage one-to-one conversations, ensuring that each conversation is handled individually and that the sender and receiver are aware of the conversation history.\nFigure 7.8.2.2.1-1: One-to-one conversation management\n1.\tThe user at MCData client 1 initiates conversation. A universally unique conversation identifier is generated to identify new conversation. Conversation identifier is used in procedures mentioned in step 2. If the intent of the user at MCData client 1 is to transmit within an existing conversation, then corresponding conversation identifier is used in procedures mentioned in step 2. To allow multiple parallel conversations for the same pair of users, different conversation identifier is used for each conversation. The MCData users can view the MCData conversation at any time after the first MCData transaction is initiated within the conversation.\n2.\tThe procedure of one-to-one SDS or one-to-one FD or combination of both these procedures can be executed.\nThe procedure for an MCData user to associate multiple MCData transmissions between users of a group for a given activity is illustrated in figure 7.8.2.3.1-1.\nPre-conditions:\n1.\tMCData user(s) on MCData client 1, 2, and n are registered for receiving MCData service.\n2.\tThe MCData users 1, 2 and n are members of the same MCData group and affiliated to the MCData service.\nThe figure depicts a group conversation management system, showing various components such as group members, conversation topics, and status updates. The system is designed to facilitate efficient communication within a group, ensuring that all members are aware of the ongoing conversation and can contribute to it.\nFigure 7.8.2.3.1-1: Group conversation management\n1.\tThe user at MCData client 1 initiates conversation. A unique conversation identifier is generated to identify new conversation. Conversation identifier is used in procedures mentioned in step 2. If the intent of the user at MCData client 1 is to transmit within an existing conversation, then corresponding conversation identifier is used in procedures mentioned in step 2. To allow multiple parallel conversations for the same group of users, different conversation identifier is used for each conversation. The MCData users can view the MCData conversation at any time after the first MCData transaction is initiated within the conversation.\n2.\tThe procedure of group SDS or group FD or combination of both these procedures can be executed.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.8.3\tConversation management for off-network",
                            "text_content": "The procedure for an MCData user to associate multiple off-network MCData transmissions between a pair of users is illustrated in figure 7.8.3.1.1-1.\nPre-conditions:\n1.\tMCData client 1 and MCData client 2 are members of the same ProSe Discovery group and are ProSe 1:1 direct communication capable.\n2.\tMCData client 1 has discovered MCData client 2 in proximity, associated with MCData user B, using ProSe Discovery procedures.\n\nThe figure depicts a one-to-one conversation management system, illustrating the flow of messages between two parties. It shows the sender, receiver, and the conversation history, with the sender initiating a conversation and the receiver responding. The system uses a one-to-one conversation model, where each conversation is managed by a single party. The figure also includes a visual representation of the conversation history, showing the sequence of messages exchanged between the parties.\nFigure 7.8.3.1.1-1: One-to-one conversation management\n1.\tThe user at MCData client 1 initiates conversation. A universally unique conversation identifier is generated to identify the new conversation. Conversation identifier is used in the procedures mentioned in step 2. If the intent of the user at MCData client 1 is to transmit within an existing conversation, then corresponding conversation identifier from the existing conversation is used in the procedures mentioned in step 2. To allow multiple parallel conversations for the same pair of users, different conversation identifier is used for each conversation. The MCData users can view the MCData conversation at any time after the first MCData transaction is initiated within the conversation.\n2.\tThe procedure of one-to-one SDS or one-to-one FD or a combination of these can be executed.\nThe procedure for an MCData user to associate multiple off-network MCData transmissions between users of a group is illustrated in figure 7.8.3.2.1-1.\nPre-conditions:\n1.\tInformation for ProSe direct communications corresponding to the MCData group and its mapping to ProSe Layer-2 Group ID are pre-configured in MCData client 1.\n2.\tMCData client 1 to MCData client N are members of the same MCData group.\nThe figure depicts a group conversation management system, showing a hierarchical structure with various groups and their respective roles. The system includes a central server, which handles group creation, management, and communication. The system also includes a group leader, who can initiate group creation, manage group members, and manage group communication. The system also includes a group member, who can initiate group creation, manage their own role, and manage their own communication. The system also includes a group member, who can initiate group creation, manage their own role, and manage their own communication. The system also includes a group member, who can initiate group creation, manage their own role, and manage their own communication. The system also includes a group member, who can initiate group creation, manage their own role, and manage their own communication. The system also includes a group member, who can initiate group creation, manage their own role, and manage their own communication. The system also includes a group member, who can initiate group creation, manage their own role, and manage their own communication. The system also includes a group member, who can initiate group creation, manage their own role, and manage their own communication. The system also includes a group member, who can initiate group creation, manage their own role, and\nFigure 7.8.3.2.1-1: Group conversation management\n1.\tThe user at MCData client 1 initiates conversation. A universally unique conversation identifier is generated to identify the new conversation. Conversation identifier is used in the procedures mentioned in step 2. If the intent of the user at MCData client 1 is to transmit within an existing conversation, then corresponding conversation identifier from the existing conversation is used in the procedures mentioned in step 2. To allow multiple parallel conversations for the same group of users, different conversation identifier is used for each conversation. The MCData users can view the MCData conversation at any time after the first MCData transaction is initiated within the conversation.\n2.\tThe procedure of group SDS or group FD or combination of both can be executed.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.9\tEnhanced status",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.9.1\tGeneral",
                            "text_content": "Enhanced status corresponds to information specific to the activities performed by the mission critical service users during their operation(s) e.g. available, in operation on site, going to the operation site, or just arrived.\nEnhanced status for on-network is described in clause 7.9.3 and for off-network in clause 7.9.4. Off-network enhanced status is based on ProSe capabilities as described in clause 7.16.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.9.2\tPreset values for enhanced status",
                            "text_content": "The enhanced status information i.e. the set of possible values corresponding to the activities of the MCData user, shall be configured by the MCData administrator. The configuration of status values is applicable on a per-group basis, and therefore shall be part of the MCData group configuration data as described in Annex A.4.\nThe configuration mechanism shall allow the MCData administrator to configure a minimum of 32 possible values and allow up to 65536 separate values. The set of values may be divided into a fixed set of values defined by 3GPP standards which are common across all MCData systems, and a set which may be freely configured for any purpose.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.9.3\tEnhanced status for on-network",
                            "text_content": "The procedure for an MCData user to share the enhanced status information to the members of the selected group is illustrated in figure 7.9.3.1.1-1.\nPre-conditions:\n1.\tMCData user(s) on MCData client 1, 2, and n are registered for receiving MCData service.\n2.\tThe MCData users 1, 2 and n are members of the same MCData group and affiliated to the MCData service.\n3.\tThe MCData group is pre-configured with the possible values for enhanced status information.\nThe figure depicts a network diagram with various components, including a base station (BTS), a user equipment (UE), and a network element (NE). The diagram illustrates the sharing of enhanced status information between the BTS and the UE, highlighting the importance of this communication in ensuring network reliability and efficiency.\nFigure 7.9.3.1.1-1: Sharing enhanced status information\n1.\tThe user at MCData client 1 selects the MCData group to share the enhanced status information. The user also selects the value of the status information to be shared from the list of pre-configured status values available for the MCData group.\n2.\tThe procedure of group standalone SDS using signalling control plane as described in subclause 7.4.2.5, is used to deliver the enhanced status information.\n3.\tThe MCData users at MCData client 2 and n are notified of the enhanced status information.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.9.4\tEnhanced status for off-network",
                            "text_content": "The procedure for an MCData user to share the enhanced status information to the members of the selected group is illustrated in figure 7.9.4.1.1-1.\nPre-conditions:\n1.\tInformation for ProSe direct communications corresponding to the MCData group and its mapping to ProSe Layer-2 Group ID are pre-configured in MCData client 1.\n2.\tMCData client 1, 2 and n are members of the same MCData group.\n3.\tThe MCData group is pre-configured with the possible values for enhanced status information.\nThe figure depicts a network diagram with various components, including a base station (BTS), a user equipment (UE), and a network element (NE). The diagram illustrates the sharing of enhanced status information between the BTS and the UE, highlighting the importance of this communication in ensuring network reliability and efficiency.\nFigure 7.9.4.1.1-1: Sharing enhanced status information\n1.\tThe user at MCData client 1 selects the MCData group to share the enhanced status information. The user also selects the value of the status information to be shared from the list of pre-configured status values available for the MCData group.\n2.\tThe procedure of off-network group standalone SDS using signalling control plane as described in subclause 7.4.3.4, is used to deliver the enhanced status information.\n3.\tThe MCData users at MCData client 2 and n are notified of the enhanced status information.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.10\tMCData emergency alert (on-network and off-network)",
                    "description": "",
                    "summary": "",
                    "text_content": "The MCData service shall support the procedures and related information flows as specified in subclause 10.10 of 3GPP TS 23.280 [5] with the following clarifications:\n-\tThe MC service client is the MCData client;\n-\tThe MC service server is the MCData server;\n-\tThe MC service group ID is the MCData Group ID; and\n-\tThe MC service user profile index is the MCData user profile index.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.10a\tMCData ad hoc group emergency alert (on-network)",
                    "description": "",
                    "summary": "",
                    "text_content": "The MCData service shall support the procedures and related information flows as specified in subclause 10.10.3 of 3GPP TS 23.280 [5] with the following clarifications:\n-\tThe MC service client is the MCData client;\n-\tThe MC service server is the MCData server;\n-\tThe MC service group ID is the MCData Group ID; and\n-\tThe MC service user profile index is the MCData user profile index.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.11\tUser authentication and authorization for MCData service",
                    "description": "",
                    "summary": "",
                    "text_content": "NOTE:\tFlow 7.11-1 is a high level user authentication and authorization flow. 3GPP TS 33.180 [13] defines the specific user authentication and authorization architecture required by the MCData service in order to realize the MCData user authentication and authorization requirements as defined in 3GPP TS 22.280 [2].\nA procedure for user authentication is illustrated in figure 7.11-1. The user authentication is performed based on the procedure specified in subclause 10.6 of 3GPP TS 23.280 [5].\nThe figure depicts a user authentication and registration process in a single domain, with MC data being the primary focus. It illustrates the user's interaction with the system, including the user's input, authentication, and registration process. The figure shows the user's interaction with the system through various screens and buttons, highlighting the user's experience and the system's functionality.\nFigure 7.11-1: MCData user authentication and registration, single domain\n1.\tThe user authentication is performed as per the general user authentication procedure specified in subclause 10.6 of 3GPP TS 23.280 [5].\n2.\tMCData client performs the MCData service authorization for the user. Step 2 utilizes the results of step 1.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.12\tMCData resource management (on-network)",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.12.1\tGeneral",
                            "text_content": "Procedures for resource management are defined in subclause 10.11 of 3GPP TS 23.280 [5].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.12.2\tVoid",
                            "text_content": "",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.13\tOperations on MCData message store",
                    "description": "",
                    "summary": "",
                    "text_content": "The MCData message store allows an MCData user to deposit his MCData communication information (i.e. messages or files) securely and permanently for later retrieval. During an active MCData communication, a message or a file with its associated metadata is deposited as an object in the MCData message store with an object identifier; this object identifier enabling a direct access to that object. The objects in the MCData message store are managed from both the MCData server and the message store client.\nEach MCData user is allocated a dedicated and secured storage area (i.e. with a user account) in the MCData message store. All MCData communications of a MCData user can be stored in his dedicated storage area. The access to this secured storage area is possible only after successful authentication and authorization procedures. A message store client can create a local copy of the stored objects into the device by synchronizing with the MCData message store for the MCData user using the device.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.13.1\tMCData message store structure",
                            "text_content": "MCData message store supports a tree like architecture to securely store MCData communications for the MCData users. Figure 7.13.1 below illustrates the high-level structure of a MCData message store:\n\nThe figure depicts a message store structure in a 5G network, illustrating the hierarchical organization of data. The message store is composed of a central message store and a distributed message store, with the central message store being the primary storage for all messages. The distributed message store is responsible for storing and distributing messages to the appropriate nodes in the network. The figure also includes a message store manager, which is responsible for managing the message store and ensuring its reliability and performance.\nFigure 7.13.1 Message store structure\nAs illustrated in Figure 7.13.1 all MCData user storage areas are accessed only through the common root. The authorized MCData user shall only have the access to the MCData user's storage area after the successful authentication and authorization procedures. A MCData user shall not be able to access objects stored for other MCData users.\nThe MCData user shall manage his stored objects using message store client through the MCData-7 reference point. The MCData server shall use the MCData-8 reference point to deposit MCData communication information, during an active MCData communication, into the designated MCData user's storage area in the MCData message store.\nOne way to manage user stored objects is using folder hierarchy structure like the popular email system today. Annex D provides a simple example of how it will look like in deployment. When the user account is created in the MCData message store, a default folder (such as Inbox) is also created to capture all the objects during an active communication. To group relevant stored objects together and provide easier navigation interactively, a MCData user can create folders in his user account. Each folder is identified by its unique folder identifier that is composed with the location of the folder and the name of the folder. A folder may have child folders to further group the stored objects in more meaningful ways. For example, the folder identifier of the default Inbox folder is /MCDatamessagestore /MCDatauser1/Inbox. The folder identifier /MCDatamessagestore/MCDatauser1/Squad1/20190225 points to a folder named 20190225 which is a child folder of Squad1 folder in the MCData user1 user account.\nNOTE:\tThe details of how the objects are stored in the MCData message store is out of scope of the present document.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.13.2\tAuthentication and authorization",
                            "text_content": "The MCData message store shall authenticate the credential of MCData server or the authorized MCData user before authorizing access to the MCData user's storage area. The success of authentication and authorization shall allow access to that MCData user's storage area only.\nNOTE:\tThe authentication and authorization aspects of MCData message store access and its operational supports are the responsibility of SA3 and thus outside the scope of the present document.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.13.3\tManage MCData message store",
                            "text_content": "Table 7.13.3.1.1-1 describes the information flow for the MCData retrieve a stored object request sent from the message store client to the MCData message store.\nTable 7.13.3.1.1-1: MCData retrieve a stored object request\n\nTable 7.13.3.1.2-1 describes the information flow for the MCData retrieve a stored object response sent from the MCData message store to the message store client.\nTable 7.13.3.1.2-1: MCData retrieve a stored object response\n\nTable 7.13.3.1.3-1 describes the information flow for the MCData search stored objects request sent from the message store client to the MCData message store.\nTable 7.13.3.1.3-1: MCData search stored objects request\n\n\nTable 7.13.3.1.4-1 describes the information flow for the MCData search stored objects response sent from the MCData message store to the message store client.\nTable 7.13.3.1.4-1: MCData search stored objects response\n\nTable 7.13.3.1.5-1 describes the information flow for the MCData update a stored object request sent from the message store client to the MCData message store.\nTable 7.13.3.1.5-1: MCData update a stored object request\n\nTable 7.13.3.1.6-1 describes the information flow for the MCData update a stored object response sent from the MCData message store to the message store client.\nTable 7.13.3.1.6-1: MCData update a stored object response\n\nTable 7.13.3.1.7-1 describes the information flow for the MCData delete a stored object request sent from the message store client to the MCData message store.\nTable 7.13.3.1.7-1: MCData delete a stored object request\n\nTable 7.13.3.1.8-1 describes the information flow for the MCData delete a stored object response sent from the MCData message store to the message store client.\nTable 7.13.3.1.8-1: MCData delete a stored object response\n\nTable 7.13.3.1.9-1 describes the information flow for the MCData synchronization request sent from the message store client to the MCData message store.\nTable 7.13.3.1.9-1: MCData synchronization request\n\nTable 7.13.3.1.10-1 describes the information flow for the MCData synchronization response sent from the MCData message store to the message store client.\nTable 7.13.3.1.10-1: MCData synchronization response\n\nTable 7.13.3.1.11-1 describes the information flow for the MCData create a user account request sent from the MCData server to the MCData message store.\nTable 7.13.3.1.11-1: MCData create a user account request\n\nTable 7.13.3.1.12-1 describes the information flow for the MCData create a user account response sent from the MCData message store to the MCData server.\nTable 7.13.3.1.12-1: MCData create a user account response\n\nTable 7.13.3.1.13-1 describes the information flow for the MCData deposit an object request sent from the MCData server to the MCData message store.\nTable 7.13.3.1.13-1: MCData deposit an object request\n\nTable 7.13.3.1.14-1 describes the information flow for the MCData deposit an object response sent from the MCData message store to the MCData server.\nTable 7.13.3.1.14-1: MCData deposit an object response\n\nTable 7.13.3.1.15-1 describes the information flow for the MCData copy a stored object request sent from the message store client to the MCData message store.\nTable 7.13.3.1.15-1: MCData copy a stored object request\n\nTable 7.13.3.1.16-1 describes the information flow for the MCData copy a stored object response sent from the MCData message store to the message store client.\nTable 7.13.3.1.16-1: MCData copy a stored object response\n\nTable 7.13.3.1.17-1 describes the information flow for the MCData move a stored object request sent from the message store client to the MCData message store.\nTable 7.13.3.1.17-1: MCData move a stored object request\n\nTable 7.13.3.1.18-1 describes the information flow for the MCData move a stored object response sent from the MCData message store to the message store client.\nTable 7.13.3.1.18-1: MCData move a stored object response\n\nTable 7.13.3.1.19-1 describes the information flow for the MCData create folder request sent from the message store client to the MCData message store.\nTable 7.13.3.1.19-1: MCData create folder request\n\nTable 7.13.3.1.20-1 describes the information flow for the MCData create folder response sent from the MCData message store to the message store client.\nTable 7.13.3.1.20-1: MCData create folder response\n\nTable 7.13.3.1.21-1 describes the information flow for the MCData delete folder request sent from the message store client to the MCData message store.\nTable 7.13.3.1.21-1: MCData delete folder request\n\nTable 7.13.3.1.22-1 describes the information flow for the MCData delete folder response sent from the MCData message store to the message store client.\nTable 7.13.3.1.22-1: MCData delete folder response\n\nTable 7.13.3.1.23-1 describes the information flow for the MCData copy folder request sent from the message store client to the MCData message store.\nTable 7.13.3.1.23-1: MCData copy folder request\n\nTable 7.13.3.1.24-1 describes the information flow for the MCData copy folder response sent from the MCData message store to the message store client.\nTable 7.13.3.1.24-1: MCData copy folder response\n\nTable 7.13.3.1.25-1 describes the information flow for the MCData move folder request sent from the message store client to the MCData message store.\nTable 7.13.3.1.25-1: MCData move folder request\n\nTable 7.13.3.1.26-1 describes the information flow for the MCData move folder response sent from the MCData message store to the message store client.\nTable 7.13.3.1.26-1: MCData move folder response\n\nTable 7.13.3.1.27-1 describes the information flow for the MCData list folder request sent from the message store client to the MCData message store.\nTable 7.13.3.1.27-1: MCData list folder request\n\nTable 7.13.3.1.28-1 describes the information flow for the MCData list folder response sent from the MCData message store to the message store client.\nTable 7.13.3.1.28-1: MCData list folder response\n\nTable 7.13.3.1.29-1 describes the information flow for the MCData upload objects request sent from the message store client to the MCData message store.\nTable 7.13.3.1.29-1: MCData upload objects request\n\nTable 7.13.3.1.30-1 describes the information flow for the MCData upload objects response sent from the MCData message store to the message store client.\nTable 7.13.3.1.30-1: MCData upload objects response\n\nTable 7.13.3.1.31-1 describes the information flow for the MCData synchronization notification sent from the MCData message store to the message store client.\nTable 7.13.3.1.31-1: MCData synchronization notification\n\nTable 7.13.3.1.32-1 describes the information flow for the create notification channel request sent from the message notification client to the MCData notification server.\nTable 7.13.3.1.32-1: Create notification channel request\n\nTable 7.13.3.1.33-1 describes the information flow for the create notification channel response sent from the MCData notification server to the message notification client.\nTable 7.13.3.1.33-1: Create notification channel response\n\nTable 7.13.3.1.34-1 describes the information flow for the open notification channel sent from the message notification client to the MCData notification server.\nTable 7.13.3.1.34-1: Open notification channel request\n\nTable 7.13.3.1.35-1 describes the information flow for the subscribe for notification request sent from the message store client to the MCData message store.\nTable 7.13.3.1.35-1: Subscribe for notification request\n\nTable 7.13.3.1.36-1 describes the information flow for the subscribe for notification response sent from the MCData message store to the message store client.\nTable 7.13.3.1.36-1: Subscribe for notification response\n\nTable 7.13.3.1.37-1 describes the information flow for the MCData search folder request sent from the message store client to the MCData message store.\nTable 7.13.3.1.37-1: MCData search folder request\n\nTable 7.13.3.1.38-1 describes the information flow for the MCData search folder response sent from the MCData message store to the message store client.\nTable 7.13.3.1.38-1: MCData search folder response\n\nTable 7.13.3.1.39-1 describes the information flow for the MCData retrieve folder content request sent from the message store client to the MCData message store.\nTable 7.13.3.1.39-1: MCData retrieve folder content request\n\nTable 7.13.3.1.40-1 describes the information flow for the MCData retrieve folder content response sent from the MCData message store to the message store client.\nTable 7.13.3.1.40-1: MCData retrieve folder content response\n\nTable 7.13.3.1.41-1 describes the information flow for the MCData retrieve file to store locally request sent from the message store client to the MCData message store and from the MCData server to the MCData message store.\nTable 7.13.3.1.41-1: MCData retrieve file to store locally request\n\nTable 7.13.3.1.42-1 describes the information flow for the MCData retrieve file to store locally response sent from the MCData message store to the message store client and the MCData server.\nTable 7.13.3.1.42-1: MCData retrieve file to store locally response\n\nTable 7.13.3.1.43 describes the information flow for the update notification channel request sent from the message notification client to the MCData notification server.\nTable 7.13.3.1.43: Update notification channel request\n\nTable 7.13.3.1.44 describes the information flow for the update notification channel response sent from the MCData notification server to the message notification client.\nTable 7.13.3.1.44: Update notification channel response\n\nTable 7.13.3.1.45 describes the information flow for the update notification subscription request sent from the message store client to the MCData message store.\nTable 7.13.3.1.45: Update notification subscription request\n\nTable 7.13.3.1.46 describes the information flow for the update notification subscription response sent from the MCData message store to the message store client.\nTable 7.13.3.1.46: Update notification subscription response\n\nTable 7.13.3.1.47 describes the information flow for the delete notification channel request sent from the message notification client to the MCData notification server.\nTable 7.13.3.1.47: Delete notification channel request\n\nTable 7.13.3.1.48 describes the information flow for the delete notification channel response sent from the MCData notification server to the message notification client.\nTable 7.13.3.1.48: Delete notification channel response\n\nTable 7.13.3.1.49 describes the information flow for the delete notification subscription request sent from the message store client to the MCData message store.\nTable 7.13.3.1.49: Delete notification subscription request\n\nTable 7.13.3.1.50 describes the information flow for the delete notification subscription response sent from the MCData message store to the message store client.\nTable 7.13.3.1.50: Delete notification subscription response\n\nTable 7.13.3.1.51-1 describes the information flow for the notification message sent from the MCData message store to the MCData notification server and from the MCData notification server to the MCData notification client.\nTable 7.13.3.1.51-1: Notification message\n\nA stored object can be retrieved from the MCData message store with the known object identifier that is generated by the MCData message store when the object was deposited.\nThe procedure in figure 7.13.3.2.2-1 describes the case when a message store client retrieves a stored object from the MCData message store using the known object identifier.\nPre-conditions:\n1.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\n2.\tThe message store client knows the object identifier of the stored object.\n\nThe figure depicts a user interface for retrieving a stored object, with various buttons and labels for different actions such as \"Select\", \"Delete\", \"Save\", and \"Cancel\". The interface is designed to be user-friendly and intuitive, with clear labels and icons to guide the user through the process. The figure is a part of a larger system, likely a database or a file system, and is used to manage and organize stored data.\nFigure 7.13.3.2.2-1: Retrieve a stored object\n1.\tThe message store client would like to retrieve a stored object from the MCData message store and initiates a MCData retrieve a stored object request toward the MCData message store. The unique object identifier of the stored object is included in the request.\n2.\tThe MCData message store returns the stored object that is identified by the object identifier in the MCData retrieve a stored object response.\nThe message store client can search stored objects in the MCData message store with certain criteria. This procedure allows the message store client to look for stored object(s) without knowing the object identifier(s) of the object. This procedure also allows the message store client to retrieve stored objects that are related to each other; such as all messages and files exchanged in a conversation.\nThe procedure in figure 7.13.3.3.2-1 describes the case when a message store client searches and retrieves relevant stored objects from the MCData message store.\nPre-conditions:\n1.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\nThe figure depicts a search interface for storing objects in a database, with various search criteria and results displayed.\nFigure 7.13.3.3.2-1: Search stored objects\n1.\tThe message store client would like to retrieve stored objects that meet certain criteria (such as with the same Conversation identifier) and initiates a MCData search objects request toward the MCData message store. The search criteria are included in the request.\n2.\tThe MCData message store looks up all stored objects that meet the search criteria and returns them in the MCData search objects response.\nThe message store client can update the metadata of a stored object (such as mark a stored object as \"flagged\").\nThe procedure in figure 7.13.3.4.2-1 describes the case when a message store client updates metadata of a stored object in the MCData message store.\nPre-conditions:\n1.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\n2.\tThe message store client knows the object identifier of the stored object.\n\nThe figure depicts a user interface for updating a stored object in a database. The user can select the object to be updated, specify the new value, and click \"Update\" to save the changes. The figure includes a list of available options for the object, a search bar for filtering the selection, and a button for deleting the selected object. The figure also shows the database structure, with tables for storing the object, its attributes, and the relationships between them.\nFigure 7.13.3.4.2-1: Update a stored object\n1.\tThe message store client would like to update the metadata of a stored object (such as \"flagged\") and initiates a MCData update a stored object request toward the MCData message store. The stored object's object identifier and the updated meta data are included in the request.\n2.\tThe MCData message store locates the stored object with the object identifier and updates its metadata as carried in the MCData update a stored object request and communicates the result in the MCData update a stored object response.\nThe message store client of an authorized user can delete a stored object in the MCData message store.\nThe procedure in figure 7.13.3.5.2-1 describes the case when a stored object in the MCData message store is deleted by the message store client of an authorized MCData user.\nPre-conditions:\n1.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\n2.\tThe message store client knows the object identifierof the stored object.\n3.\tThe MCData user is authorized to delete the stored object.\n\nThe figure depicts a user interface for deleting a stored object in a database. The interface includes a list of stored objects, a delete button, and a confirmation message. The figure illustrates the user's interaction with the interface, showing the steps to delete an object and the confirmation message.\nFigure 7.13.3.5.2-1: Delete a stored object\n1.\tThe message store client would like to delete a stored object in the MCData message store and initiates a MCData delete a stored object request toward the MCData message store. The stored object's object identifier is included in the request.\n2.\tThe MCData message store locates the stored object with the object identifier and permanently removes it from the MCData message store. It then communicates the result in the MCData delete a stored object response.\nThe message store client can synchronize its local message store with the MCData message store. Different level of synchronization shall be supported with a filter in the request.\nThe procedure in figure 7.13.3.6.2-1 describes the case when a message store client synchronizes its local message store with the MCData message store for a MCData user.\nPre-conditions:\n1.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\nThe figure depicts a synchronization mechanism in a network, illustrating the process of ensuring that all devices are synchronized to maintain network stability and efficiency.\nFigure 7.13.3.6.2-1: Synchronization\n1.\tThe message store client would like to synchronize its local message store with the MCData message store. It initiates the MCData synchronization request toward the MCData message store. The synchronization type and optional filter criteria are included in the request to indicate the type of synchronization (such as full synchronization, partial synchronization etc.) is requested.\n2.\tThe MCData message store returns all the stored objects, based on the synchronization filter criteria, to the message store client in the MCData synchronization response.\n\nWhen the MCData server is ready to deposit an object into the MCData user's storage area in the MCData message store the MCData user's storage area (i.e. user account) needs to be created already. If the user account is not created, the MCData server shall create the user account (i.e. allocate the MCData user's storage area in the MCData message store) first and then deposit the subsequent MCData communications.\nNOTE:\tAnother possible way to create a user account on the MCData message store is through service provisioning which is out of the scope of the present document.\nThe procedure in figure 7.13.3.7.2-1 describes how the MCData server creates a user account (allocate MCData user storage area) in the MCData message store.\nPre-conditions:\n1.\tA successful authentication and authorization has been performed between the MCData server and the MCData message store.\n2.\tNo storage area in the MCData message store has been allocated for the MCData user; i.e. no user account has been created.\n3.\tThe MCData server is authorized to create user accounts on the MCData message store.\n\nThe figure depicts a user account creation process, illustrating the steps involved in creating a new user account. It includes a form with fields for user name, password, and other personal information. The figure also shows the user account creation process, with a step-by-step guide on how to input the required information.\nFigure 7.13.3.7.2-1: Create a user account\n1.\tThe MCData server would like to create a MCData user account in the MCData message store to store the MCData communication for that MCData user and initiates a MCData create a user account request toward the MCData message store. The MCData ID of the MCData user is included in the request.\n2.\tThe MCData message store creates a user account (i.e. allocate dedicated and secured storage area) for the MCData user as specified in the request and communicates the result back to the MCData server in the MCData create a user account response.\nMCData server needs to store the communication information (i.e. an object) for a MCData user during an active MCData communication. If there is a file URL in the object for file distribution in the communication, the MCData server may instruct the MCData message store to retrieve a copy of the file to store locally in the MCData user's account.\nThe procedure in figure 7.13.3.8.2-1 describes how the MCData server deposit an object into the MCData message store during an active MCData communication.\nPre-conditions:\n1.\tA successful authentication and authorization has been performed between the MCData server and the MCData message store.\n2.\tThe MCData user has been allocated a secured storage area in the MCData message store.\n3.\tThe configuration to store the MCData communication in MCData message store is enabled for the MCData user.\n4.\tMCData user has requested to store his MCData communication and also store the distributed file content into his MCData message store account if the MCData communication is for file distribution through URL.\nThe figure depicts a simplified representation of a deposit object, illustrating its structure and components. It includes a deposit container, a deposit label, and a deposit tag, all of which are essential for managing and tracking the object's status. The figure provides a clear visual representation of the object's components and their relationships, making it easy to understand and use.\nFigure 7.13.3.8.2-1: Deposit an object\n1.\tThe MCData server would like to deposit a MCData communication information (i.e. object) to the MCData user's storage area in the MCData message store and initiates a MCData deposit an object request toward the MCData message store. The object is constructed by the MCData server and is included in the request. If the object is a message that carries a URL for file distribution, the MCData server may instruct the MCData message store to retrieve a copy of the file and store locally in the MCData user's account by setting the retrieve file indication information element to true.\n2.\tThe MCData message store deposits the object into the MCData user's storage area. If the retrieve file indication is set in the MCData deposit an object request the MCData message store retrieves the file URL from the stored object and fetches the file content from the MCData content server.\n3.\tThe MCData message store stores the file content into the MCData user's storage area and update the object with the URL referencing the file content stored in the MCData user's storage area.\n4.\tThe MCData message store communicates the result back to the MCData server in the MCData deposit an object response. The object identifier of the stored object is returned.\nA stored object in the MCData message store can be copied to another location (i.e. folder) in the same MCData user account where there is no such object stored. After the successful object copy operation, the object will exist in both the original and destination locations. This operation is only meaningful when the user account in the MCData message store is structured in the folder hierarchy.\nThe procedure in figure 7.13.3.9.2-1 describes the case when a stored object is copied to a different location in the same MCData user account.\nPre-conditions:\n1.\tThe MCData user has an account in the MCData message store.\n2.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\n3.\tThe message store client knows the object identifier of the stored object and the destination folder identifier.\nThe figure depicts a 3D representation of a storage system, specifically a block storage system. It shows a hierarchy of blocks, with each block containing a set of data. The system is designed to be scalable and fault-tolerant, with redundant blocks and a high-speed interconnect. The figure is used to illustrate the concept of block storage systems and their role in data storage and management.\nFigure 7.13.3.9.2-1: Copy a stored object\n1.\tThe message store client would like to copy a stored object in the MCData message store to a destination folder and initiates a MCData copy a stored object request toward the MCData message store. The uniqe identifier of the stored object and the destination folder are included in the request.\n2.\tThe MCData message store copies the object to the target location.\n3.\tThe MCData message store returns the result of the request in the MCData copy a stored object response.\nA stored object in the MCData message store can be moved to a different location (i.e. folder) in the same MCData user account. After the successful object move operation the object will only exist in the new location. This operation is only meaningful when the user account in the MCData message store is structured in the folder hierarchy.\nThe procedure in figure 7.13.3.10.2-1 describes the case when a stored object is moved to a different location in the same MCData user account.\nPre-conditions:\n1.\tThe MCData user has an account in the MCData message store.\n2.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\n3.\tThe message store client knows the object identifier of the stored object and the destination folder identifier.\nThe figure depicts a user interface for moving a stored object in a 3D environment. The user can drag and drop the object to its desired location, and the figure shows the path taken by the object as it moves through the environment. The figure is designed to be intuitive and easy to use, with clear labels and icons to guide the user through the process.\nFigure 7.13.3.10.2-1: Move a stored object\n1.\tThe message store client would like to move a stored object in the MCData message store to a destination folder and initiates a MCData move a stored object request toward the MCData message store. The uniqe object identifier of the stored object and the destination folder are included in the request.\n2.\tThe MCData message store moves the object to the target location.\n3.\tThe MCData message store returns the result of the request in the MCData move a stored object response.\nA user can create a new folder in his user account n the MCData message store. This operation is only meaningful when the user account in the MCData message store is structured in the folder hierarchy.\nThe procedure in figure 7.13.3.11.2-1 describes the case when a MCData user creates a new folder in the MCData message store.\nPre-conditions:\n1.\tThe MCData user has an account in the MCData message store.\n2.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\n\nThe figure depicts a user folder, which is a crucial component of a user interface in a computer system. It is used to organize and manage user data, files, and applications. The figure shows a user folder with various folders and files, such as \"Documents,\" \"Pictures,\" and \"Music,\" which are organized in a hierarchical manner. The user can create, delete, or rename folders and files, and the figure also includes a \"New Folder\" button, allowing users to create new folders. The figure is essential for maintaining a clean and organized user interface, making it easier for users to navigate and find the files they need.\nFigure 7.13.3.11.2-1: Create a new user folder\n1.\tThe MCData user would like to create a new folder in his user account in the MCData message store, the message store client initiates a MCData create folder request toward the MCData message store. The parent folder identifier and the folder name are included in the request to indicate where the new folder will be created.\n2.\tThe MCData message store creates the user folder in the location specified in the request. If the folder name is provided in the request, the MCData message store creates the folder with the provided folder name. If the provided folder name has a conflict or no folder name is provided in the request, the MCData message store assigns a name for the new user folder.\n3.\tThe MCData message store returns the result in the MCData create folder response. The identifier of the new folder is returned in the response.\nA user can delete an existing folder in his user account in the MCData message store. All the child folders and objects stored in that folder will be deleted. This operation is only meaningful when the user account in the MCData message store is structured in the folder hierarchy.\nThe procedure in figure 7.13.3.12.2-1 describes the case when a MCData user deletes an existing folder in the MCData message store.\nPre-conditions:\n1.\tThe MCData user has an account in the MCData message store.\n2.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\nThe figure depicts a user folder with multiple files and folders, and a delete button. The user can select a file or folder to delete, and the figure shows the deletion process, including the deletion of the selected file or folder.\nFigure 7.13.3.12.2-1: Delete a user folder\n1.\tThe MCData user would like to delete an existing folder in his user account in the MCData message store, the message store client initiates a MCData delete folder request toward the MCData message store. The folder identifier of the folder to be deleted is included in the request.\n2.\tThe MCData message store identifies the target folder and deletes it from the user account. All the child folders and objects stored in this folder are also deleted.\n3.\tThe MCData message store returns the result in the MCData delete folder response.\nA user can copy an existing folder in his user account to a different location. All the child folders and objects stored in that folder will be copied to the new folder. The name of the new folder will be the same as the folder it copies from or the name provided in the request. This operation is only meaningful when the user account in the MCData message store is structured in the folder hierarchy.\nThe procedure in figure 7.13.3.13.2-1 describes the case when a MCData user copies an existing folder in the MCData message store.\nPre-conditions:\n1.\tThe MCData user has an account in the MCData message store.\n2.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\n\nThe figure depicts a user folder, which is a crucial component of a user's data storage system. It is designed to store and organize user files, ensuring efficient data management and easy access. The figure includes various folders, such as \"Desktop,\" \"Pictures,\" and \"Documents,\" each with its own subfolders. The user can copy files from one folder to another, making it easy to transfer data between different locations or devices. The figure also includes a \"Trash\" folder, which is used to delete files that are no longer needed. Overall, the figure provides a comprehensive overview of a user's data storage system, making it easy for users to manage and organize their files.\nFigure 7.13.3.13.2-1: Copy a user folder\n1.\tThe MCData user would like to copy an existing folder in his user account in the MCData message store, the message store client initiates a MCData copy folder request toward the MCData message store. The folder identifiers of the source and destination folders and the new folder name are included in the request.\n2.\tThe MCData message store copy the source folder to the destination with the new folder name. If no new folder name is provided in the request, the source folder name will be used. All the child folders and objects stored in this folder are also copied to the new folder.\n3.\tThe MCData message store returns the result in the MCData copy folder response. The identifier of the new folder is returned in the response.\nA user can move an existing folder in his user account to a different location. All the child folders and objects stored in that folder will be moved to the new folder. The name of the new folder will be the same as the folder it moves from or the name provided in the request. This operation is only meaningful when the user account in the MCData message store is structured in the folder hierarchy.\nThe procedure in figure 7.13.3.14.2-1 describes the case when a MCData user moves an existing folder in the MCData message store.\nPre-conditions:\n1.\tThe MCData user has an account in the MCData message store.\n2.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\n\nThe figure depicts a user folder being moved, illustrating the process of file transfer between different locations within a network. The diagram shows the user folder as the source, the destination, and the network interface card (NIC) as the transport medium. The figure also includes a label indicating the network interface, which is essential for understanding the network topology.\nFigure 7.13.3.14.2-1: Move a user folder\n1.\tThe MCData user would like to move an existing folder in his user account in the MCData message store to a new location, the message store client initiates a MCData move folder request toward the MCData message store. The folder identifiers of the source and destination folders and the new folder name are included in the request.\n2.\tThe MCData message store move the source folder to the destination with the new folder name. If no new folder name is provided in the request, the source folder name will be used. All the child folders and objects stored in this folder are also moved to the new folder.\n3.\tThe MCData message store returns the result in the MCData move folder response. The identifier of the new folder is returned in the response.\nA user can view the folder structure in his user account in the MCData message store. The target folder hierarchy structure will be presented to the user; i.e. the folder and all its child folders. This operation is only meaningful when the user account in the MCData message store is structured in the folder hierarchy.\nThe procedure in figure 7.13.3.15.2-1 describes the case when a MCData user lists an existing folder's hierarchy structure in the MCData message store.\nPre-conditions:\n1.\tThe MCData user has an account in the MCData message store.\n2.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\n\nThe figure depicts a folder list operation in a file system, showing the various folders and their contents. The operation involves selecting a folder, navigating through its contents, and deleting or renaming files. The figure provides a visual representation of the file system's structure and functionality.\nFigure 7.13.3.15.2-1: Folder list operation\n1.\tThe MCData user would like to view the folder strcture of a targeted folder in his user account in the MCData message store, the message store client initiates a MCData list folder request toward the MCData message store. The folder identifier of the target folder is included in the request.\n2.\tThe MCData message store retrieves the target folder and all its child folders. If no target folder name is provided in the request, the MCData message store will use the root folder as the target folder.\n3.\tThe MCData message store returns the result in the MCData list folder response.\nA MCData user, with an account in the MCData message store, involved in an off-network communication will store the communication as objects in a specific folder in the local message store on his UE. These objects can be uploaded to his user account in the MCData message store once he is connected to the network with MC data service again.\nThe procedure in figure 7.13.3.16.2-1 describes the case when a message store client uploads new objects in its local message store to the MCData message store for a MCData user.\nPre-conditions:\n1.\tThe MCData user has an account with the MCData message store.\n2.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\n\nThe figure depicts a network diagram with various upload objects, including upload points, upload lines, and upload cables. The diagram illustrates the various upload paths and their corresponding upload points, ensuring efficient data transmission.\nFigure 7.13.3.16.2-1: Upload objects\n1.\tThe message store client would like to upload new objecs in its local message store to the MCData message store. It initiates the MCData upload objects request toward the MCData message store. The uploaded objects and the target folder identifier where the objects will be stored are included in the request.\n2.\tThe MCData message store stores the uploaded objects to the target folder. If the target folder doesn't exist, the MCData message store will create it.\n3.\tThe MCData message store returns the result in the MCData upload objects response.\nMCData message store will send a notification to the MCData user when there are new objects in the MCData message store that need to be synchronized with his local message store.\nThe procedure in figure 7.13.3.17.2-1 describes how the MCData message store notifies the message store client that there are new objects in the MCData message store need to be synchronized.\nPre-conditions:\n1.\tThe MCData user has an account with the MCData message store.\n2.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\n3.\tThe Message store client is in an ongoing session with the MCData message store.\n\nThe figure depicts a communication system where a client is notified to synchronize its connection using an in-band connection. The system includes a base station (gNB), a user equipment (UE), and a network interface controller (NIC). The figure illustrates the communication path, including the base station, UE, and the network interface controller, which are interconnected to form a network. The figure also shows the in-band connection, which is used to synchronize the client's connection.\nFigure 7.13.3.17.2-1: Notify client to synchronize using in-band connection\n1.\tThe MCData message store receives new objects for the MCData user and decides to send a notification to inform the MCData user.\nNOTE:\tHow MCData message store determines if a notification needs to be sent to the message store client is out of scope of the present specification.\n2.\tThe MCData message store sends the MCData synchronization notification to the message store client.\nThe procedure in figure 7.13.3.17.3-1 describes how the MCData message store notifies the message notification client, using a MCData notification server, that there are new objects in the MCData message store needing to be synchronized. This procedure uses a web base notification mechanism in wide deployment today. The Message notification client requests the notification service from the MCData notification server and the MCData notification server returns with two URLs; one used by the service client to inform the service server where to send notification messages and the other one to use by the service client to PULL notification messages from the MCData notification server.\nPre-conditions:\n1.\tThe MCData user has an account with the MCData message store.\n2.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\n3.\tThe Message store client doesn't have an ongoing session with the MCData message store.\n4.\tThe trust relationship between the MCData notification server and the MCData message store has been established.\n5.\tThe MCData notification server has a trust relationship and connection with the PUSH Enabler server.\nThe figure depicts a communication system with a MCData notification server, which is used to synchronize the client's data with the server. The server sends a notification to the client, instructing it to synchronize its data with the server. This system ensures data synchronization and reliability in a distributed network.\nFigure 7.13.3.17.3-1: Notify client to synchronize through MCData notification server\n1.\tThe Message notification client wants to create notification channels (i.e. endpoint URLs) to be used by the MCData message store to send notification messages and sends a Create notification channel request to the MCData notification server. The desired validity duration for the channels to be used and the notification channel type (PUSH or PULL) are included in the request.\n2.\tThe MCData notification server authenticates the Message notification client and authorizes its request.\n3.\tThe MCData notification server sends the Message notification client the Create notification channel response with the endpoint URLs that will be used by the MCData message store to send the notification messages and the Message notification client to receive the notification messages. The MCData notification server also includes what is the valid duration for these endpoint URLs to be used in the response.\n4.\tIf the notification type is PULL method, the message notification client sends the Open notification channel to the MCData notification server to start receiving the notification message. For certain PUSH method notification type (such as WebSockets) the message notification client requests the MCData notification server to start the PUSH notification service with its specific protocol that is outside the scope of this specification.\n5.\tThe message store client sends the Subscribe for notification request to the MCData message store asking to be notified if there are changes to its message store account. The callback URL returned from the MCData notification server in step 3 is included in the request for the MCData message store to use to send notification messages.\n6.\tThe MCData message store sends the Subscribe for notification response to the message store client to acknowledge the request.\n7.\tThe MCData user's message store account has changed and the MCData message store generates a notification message.\n8.\tUsing the callback URL, the MCData message store sends the notification message to the MCData notification server.\n9.\tIf the delivery method is PULL, the MCData notification server sends the notification message to the message notification client over the opened notification channel. If the delivery method is PUSH, the MCData notification server sends the notification message to the PUSH Enabler server (not shown in the figure) to deliver to the message notification client.\nNOTE:\tThe PUSH Enabler server is implementation specific and outside the scope of this specification.\nThe procedure in figure 7.13.3.17.3-2 describes how the message notification client updates the validity duration of a notification channel and subscription to avoid its expiration, i.e. to extend its lifetime.\nPre-conditions:\n1.\tA notification channel has already been requested and established between the message notification client and MCData notification server.\n2.\tThe message store client has a successful notification subscription with the MCData message store.\n3.\tThe validity duration of the notification channel is about to expire.\nThe figure depicts an update notification channel in a network, illustrating the process of updating a channel status. The channel is represented as a series of numbered boxes, each representing a step in the update process. The boxes are connected by lines, indicating the flow of information from one step to the next. The figure also includes a legend to help users understand the different statuses and their corresponding actions.\nFigure 7.13.3.17.3-2: Update a notification channel\n1.\tThe message notification client sends the Update notification channel request, including the desired new validity duration, to the MCData notification server.\n2.\tThe MCData notification server grants the request and sends the Update notification channel response to the message notification client. The new validity duration is included in the response.\n3.\tThe message store client sends the Update notification subscription request to the MCData message store with the new validity duration received from the MCData notification server in step 2.\n4.\tThe MCData message store  sends the Update notification subscription response to the message store client and confirms the new validity duration.\nThe procedure in figure 7.13.3.17.3-3 describes how the message notification client delete a notification channel and subscription that is no longer needed.\nPre-conditions:\n1.\tA notification channel has already been requested and established between the message notification client and MCData notification server.\n2.\tThe message store client has a successful notification subscription with the MCData message store.\n3.\tThe MCData user no longer wants to receive notifications from the MCData message store.\n\nThe figure depicts a user interface for deleting a notification channel in a messaging application. The interface includes a list of notification channels, a delete button, and a confirmation prompt. The figure illustrates the user's ability to select a notification channel, confirm the deletion, and view the deleted notification.\nFigure 7.13.3.17.3-3: Delete a notification channel\n1.\tThe message store client decides to stop receiving notifications from the MCData message store and sends the Delete notification subscription request to the MCData message store.\n2.\tThe MCData message store acknowledges the request and sends the Delete notification subscription response to the message store client.\n3.\tThe message notification client sends the Delete notification channel request to the MCData notification server.\n4.\tThe MCData notification server acknowledges the request and sends the Delete notification channel response to the message notification client.\nThe message store client can search stored folder(s) with certain criteria. This procedure allows the message store client to look for folder(s) that meet certain criteria such as when the folder is created. This procedure provides the message store client the ability to locate a specific folder(s) matching the search criteria to perform further operations.\nThe procedure in figure 7.13.3.18.2-1 describes the case when a message store client searches and retrieves relevant stored objects from the MCData message store.\nPre-conditions:\n1.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\nThe figure depicts a search folder, with various folders and files listed, allowing users to navigate and locate specific files or folders within a system.\nFigure 7.13.3.18.2-1: Search folder\n1.\tThe message store client wants to retrieve message store folder(s) that meet certain criteria (such as when the folder(s) was created, certain keywords etc.) and initiates a MCData search folder request toward the MCData message store. The search criteria are included in the request.\n2.\tThe MCData message store identifies all folders that match the search criteria and returns them in the MCData search folder response.\nAn MCData user can retrieve the content of a folder in the user's message store account. This procedure allows the message store client to retrieve the specific folder's content from the MCData message store.\nThe procedure in figure 7.13.3.19.2-1 describes the case when a message store client retrieves the content of a specific folder in the MCData message store.\nPre-conditions:\n1.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\nThe figure depicts a user interface for retrieving folder content, with various icons and labels indicating different actions such as \"Open\", \"Save\", \"Delete\", and \"Close\". The interface is designed to be user-friendly and intuitive, with clear labels and icons for each action, making it easy for users to navigate and perform their desired tasks.\nFigure 7.13.3.19.2-1: retrieve folder content\n1.\tThe message store client wants to retrieve the content of a specific folder and initiates a MCData retrieve folder content request toward the MCData message store. The requested folder identifier is included in the request.\n2.\tThe MCData message store locates the requested folder and returns the content of the folder (e.g. objects and subfolders) in the MCData retrieve folder content response.\nAn MCData user can store the received file content in his message store account. This procedure allows the message store client to request the MCData message store to retrieve the file from the media storage function of MCData content server and store into MCData message store account of the user.\nThe procedure in figure 7.13.3.20.3-1 describes the case when a message store client requests the MCData message store to retrieve the file from media storage function of MCData content server and store into MCData message store account of the user.\nPre-conditions:\n1.\tA successful authentication and authorization have been performed between the message store client and the MCData message store.\n2.\tThe configuration to store the MCData communication in MCData message store is enabled for the MCData user.\n3.\tMCData user has requested to store his MCData communication.\n4.\tThe message store client knows the object identifier of the stored object.\nThe figure depicts a network architecture with a receiver side, where HTTP is used to distribute the file contents. The receiver side includes a file server, a file client, and a network interface controller (NIC). The figure illustrates the communication between the file server and the file client, as well as the communication between the file server and the NIC.\nFigure 7.13.3.20.3-1: store file contents distributed using HTTP – receiver side\n1.\tThe Message store client initiates MCData retrieve file to store locally request towards the MCData message store. The object identifier corresponding to the stored MCData FD communication is included in the request.\n2.\tThe MCData message store retrieves the file URL from the stored object and fetches the file content from the MCData content server.\n3.\tThe MCData message store stores the file content into the MCData user's storage area and update the object with the URL referencing the file content stored in the MCData user's storage area.\n4.\tThe MCData message store provides the MCData retrieve file to store locally response to the message store client. This response includes the URL of the file being stored in the MCData user's storage area.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.13.3.1.1-1: MCData retrieve a stored object request",
                                    "table number": 103,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.2-1: MCData retrieve a stored object response",
                                    "table number": 104,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.3-1: MCData search stored objects request",
                                    "table number": 105,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.4-1: MCData search stored objects response",
                                    "table number": 106,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.5-1: MCData update a stored object request",
                                    "table number": 107,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.6-1: MCData update a stored object response",
                                    "table number": 108,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.7-1: MCData delete a stored object request",
                                    "table number": 109,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.8-1: MCData delete a stored object response",
                                    "table number": 110,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.9-1: MCData synchronization request",
                                    "table number": 111,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.10-1: MCData synchronization response",
                                    "table number": 112,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.11-1: MCData create a user account request",
                                    "table number": 113,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.12-1: MCData create a user account response",
                                    "table number": 114,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.13-1: MCData deposit an object request",
                                    "table number": 115,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.14-1: MCData deposit an object response",
                                    "table number": 116,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.15-1: MCData copy a stored object request",
                                    "table number": 117,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.16-1: MCData copy a stored object response",
                                    "table number": 118,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.17-1: MCData move a stored object request",
                                    "table number": 119,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.18-1: MCData move a stored object response",
                                    "table number": 120,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.19-1: MCData create folder request",
                                    "table number": 121,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.20-1: MCData create folder response",
                                    "table number": 122,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.21-1: MCData delete folder request",
                                    "table number": 123,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.22-1: MCData delete folder response",
                                    "table number": 124,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.23-1: MCData copy folder request",
                                    "table number": 125,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.24-1: MCData copy folder response",
                                    "table number": 126,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.25-1: MCData move folder request",
                                    "table number": 127,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.26-1: MCData move folder response",
                                    "table number": 128,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.27-1: MCData list folder request",
                                    "table number": 129,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.28-1: MCData list folder response",
                                    "table number": 130,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.29-1: MCData upload objects request",
                                    "table number": 131,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.30-1: MCData upload objects response",
                                    "table number": 132,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.31-1: MCData synchronization notification",
                                    "table number": 133,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.32-1: Create notification channel request",
                                    "table number": 134,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.33-1: Create notification channel response",
                                    "table number": 135,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.34-1: Open notification channel request",
                                    "table number": 136,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.35-1: Subscribe for notification request",
                                    "table number": 137,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.36-1: Subscribe for notification response",
                                    "table number": 138,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.37-1: MCData search folder request",
                                    "table number": 139,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.38-1: MCData search folder response",
                                    "table number": 140,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.39-1: MCData retrieve folder content request",
                                    "table number": 141,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.40-1: MCData retrieve folder content response",
                                    "table number": 142,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.41-1: MCData retrieve file to store locally request",
                                    "table number": 143,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.42-1: MCData retrieve file to store locally response",
                                    "table number": 144,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.43: Update notification channel request",
                                    "table number": 145,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.44: Update notification channel response",
                                    "table number": 146,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.45: Update notification subscription request",
                                    "table number": 147,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.46: Update notification subscription response",
                                    "table number": 148,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.47: Delete notification channel request",
                                    "table number": 149,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.48: Delete notification channel response",
                                    "table number": 150,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.49: Delete notification subscription request",
                                    "table number": 151,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.50: Delete notification subscription response",
                                    "table number": 152,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.13.3.1.51-1: Notification message",
                                    "table number": 153,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.13.4\tGeneric outgoing SDS procedure with MCData message store",
                            "text_content": "When a MCData user is supported with MCData message store all his outgoing communications shall be stored in his account in the MCData message store when he has requested. This generic SDS procedure applies to all procedures in subclause 7.4.2 when the MCData user requests to store the MCData communication.\nThe procedure in figure 7.13.4.2-1 describes the generic SDS service where MCData message store is supported.\nPre-conditions:\n1.\tMCData user has an account created with MCData message store.\n2.\tThe configuration to store the MCData communication in MCData message store is enabled for the MCData user.\n3.\tMCData user has requested to store his MCData communication.\n\nThe figure depicts a generic SDS procedure with MCData message store, illustrating the steps involved in the outgoing SDS process. MCData is a message store that stores data for the SDS process, ensuring that the data is stored and managed efficiently. The figure shows the flow of data from the source to the destination, with the MCData message store playing a crucial role in managing the data and ensuring its integrity.\nFigure 7.13.4.2-1 Generic outgoing SDS procedure with MCData message store\n1.\tMCData client initiates an MCData SDS service request; this service request can be a private or group communication.\n2.\tMCData server stores the communication as an object to the MCData user account in the MCData message store.\n3.\tMCData server checks and authorizes the service request and continue the service request toward the targeted recipient(s) as described in subclause 7.4.2.\n\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.13.5\tGeneric incoming SDS procedure with MCData message store",
                            "text_content": "When a MCData user is supported with MCData message store all his incoming communications shall be stored in his account in the MCData message store when he has requested. This generic SDS procedure applies to all prcedures in subclause 7.4.2 when the MCData user requests to store the MCData communication.\nThe procedure in figure 7.13.5.2-1 describes the generic SDS service where MCData message store is supported.\nPre-conditions:\n1.\tMCData user has an account created with MCData message store.\n3.\tThe configuration to store the MCData communication in MCData message store is enabled for the MCData user.\n3.\tMCData user has requested to store his MCData communication.\n\nThe figure depicts a generic 5G SDS procedure with MCData message store, illustrating the steps involved in managing and storing data in a message-centric data plane.\nFigure 7.13.5.2-1 Generic incoming SDS procedure with MCData message store\n1.\tThe MCData server receives an incoming MCData SDS service request for the MCData user. This service request can be a response to an earlier service request sent by the MCData user or a new service request coming from any sender.\n2.\tMCData server stores the communication as an object to the MCData user account in the MCData message store.\n3.\tMCData server delivers the service request to MCData user as described in subclause 7.4.2.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.13.6\tInterconnection and migration with MCData message store",
                            "text_content": "There is no interconnection of MCData message stores, as there are no defined reference points providing connection between message stores in different MCData systems.\nA migrated MCData user may be provided with access to a local message store by the partner MCData system of the migrated MCData user. The MCData user is identified by the MCData ID used in the partner MCData system by that migrated MCData user in order to access the message store. There is no connection between this message store in the partner MCData system of the migrated MCData user and any message store that the MCData user has access to in the primary MCData system of that MCData user, and therefore access to a message store in the partner MCData system does not provide a means of accessing stored content in the primary MCData system of the migrated MCData user.\nA migrated MCData user may be provided with a means of access to the message store in the primary MCData system of that MCData user, e.g. by providing the MCData user with a suitable APN and appropriate IP routing, or by use of the MCData IP connectivity service. Such access is outside the scope of the present document.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.14\tIP connectivity",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.14.1\tGeneral",
                            "text_content": "IP data shall be exchanged between two or more data hosts. The MCData client as the link between data host and MC system enables the exchange of IP Data. For addressing the corresponding MCData users either MCData ID or the functional alias can be used independently of each other. The MCData server provides the mechanisms to establish the association between MCData ID and corresponding functional alias.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.14.2\tIP connectivity for on-network",
                            "text_content": "Table 7.14.2.1.1-1 describes the information flow of the MCData IPcon point-to-point request sent from the MCData client to the MCData server.\nTable 7.14.2.1.1-1: MCData IPcon point-to-point request (MCData client to MCData server)\n\nTable 7.14.2.1.1-2: MCData IPcon point-to-point request (MCData server to MCData client)\n\nTable 7.14.2.1.2-1 describes the information content of the MCData IPcon point-to-point response as answer to MCData IPcon point-to-point request.\nTable 7.14.2.1.2-1: MCData IPcon point-to-point response\n\nTable 7.14.2.1.3-1 describes the information flow of the MCData remote IPcon point-to-point request sent from the remote MCData client to the MCData server and from the MCData server to the asked MCData client.\nTable 7.14.2.1.3-1: MCData remote IPcon point-to-point request\n\nTable 7.14.2.1.4-1 describes the information content of the MCData remote IPcon point-to-point response as answer to MCData remote IPcon point-to-point request.\nTable 7.14.2.1.4-1: MCData remote IPcon point-to-point response\n\nTable 7.14.2.1.5-1 describes the information flow of the MCData remote IPcon point-to-point tear down request sent from the remote MCData client to the MCData server and from the MCData server to the asked MCData client.\nTable 7.14.2.1.5-1: MCData remote IPcon point-to-point tear down request\n\nTable 7.14.2.1.6-1 describes the information content of the MCData remote IPcon point-to-point tear down response as answer to MCData remote IPcon point-to-point tear down request.\nTable 7.14.2.1.6-1: MCData remote IPcon point-to-point tear down response\n\nTable 7.14.2.1.7-1 describes the information flow of the MCData remote IPcon point-to-point application priority change request sent from the remote MCData client to the MCData server and from the MCData server to the asked MCData client.\nTable 7.14.2.1.7-1: MCData remote IPcon point-to-point application priority change request\n\nTable 7.14.2.1.8-1 describes the information content of the MCData remote IPcon point-to-point application priority change response as answer to MCData remote IPcon point-to-point application priority change request.\nTable 7.14.2.1.8-1: MCData remote IPcon point-to-point application priority change response\n\nIP connectivity service capabilities enables MCData unaware data hosts to use usual MCData service capabilities, e.g. data communication between them. This subclause describes the establishment of a point-to-point connection between two IP connectivity clients using the media plane for IP Data transmission. The target MCData user may be addressed using the functional alias that can be shared by multiple MCData users.\nIn order not to violate the point-to-point principle when a functional alias is shared, only two MCData user can participate to a point-to-point IP connectivity session. If the MCData server detects that the functional alias used as the target of the MCData FD request is simultaneously active for multiple MCData users, then the MCData server can proceed by selecting an appropriate MCData ID based on some selection criteria. The selection of an appropriate MCData ID is left to implementation. These selection criteria can include rejection of the IP connectivity request, if no suitable MCData ID is selected.\nThe procedure in figure 7.14.2.2.2-1 describes the case where an IP connectivity capable MCData client is initiating a point-to-point IP connectivity with another IP connectivity capable MCData client.\nPre-conditions:\n-\tThe total data volume limit, e.g. daily time limit or total data volume per day does not restrict the establishment of an IP connectivity IP data exchange.\n-\tMCData clients are linked with individual data hosts.\n-\tMCData clients belong to the same MCData system.\n-\tThe data hosts linked with the MCData clients already have an IP address allocated.\n-\tMCData clients have IP connectivity capabilities.\n-\tThe linked data hosts are authorized to use the MCData clients to establish an IP connectivity.\nNOTE:\tHow the data host is authorized to use the MCData client is out of the scope of the present document.\n-\tThe MCData server has subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\n-\tMCData client 1 understands the correspondence between the IP addresses of target data hosts and MCData client 2. How this relationship is determined is out of scope of the present document.\n-\tOptionally, the MCData clients may have activated a functional alias to be used.\n\nThe figure depicts a point-to-point IP connectivity setup, illustrating the establishment of a network connection between two endpoints. The diagram shows the network infrastructure, including routers, switches, and cables, with the IP addresses of the two endpoints clearly labeled. This setup is crucial for establishing a reliable and efficient network connection, as it allows for the transmission of data between the two devices.\nFigure 7.14.2.2.2-1: Establishment of a point-to-point IP connectivity\n1.\tMCData client 1 has IP Data to send to MCData client 2 and initiates an IP connectivity point-to-point request.\n2.\tMCData client 1 sends a MCData IPcon point-to-point request towards the MCData server. The MCData IPcon point-to-point request contains either the MCData ID of MCData client 2 or its associated functional alias. MCData user at MCData client 1 may include its associated functional alias\n3.\tMCData server checks whether MCData user at MCData client 1 is authorized to send an MCData IPcon point-to-point request and checks if MCData client 2 is authorised to receive the IP connectivity service. If a functional alias is used to address the target MCData user, the MCData server resolves the functional alias to the corresponding MCData ID(s) for which the functional alias is active and proceed with step 4 otherwise proceed with step 6.\n4.\tThe MCData server responds back to MCData client 1 with a functional alias resolution response message that contains the resolved MCData ID.\n5.\tIf the MCData server replies with a MCData functional alias resolution response message, the MCData client 1 assumes the MCData IPcon point-to-point request in step 2 is rejected and sends a new MCData IPcon point-to-point request towards the resolved MCData ID.\n6.\tMCData server initiates the MCData IPcon point-to-point request towards the determined MCData client 2.\nNOTE:\tMCData client 2 corresponds to the MCData user(s) after resolution of the functional alias.\n7.\tMCData client 2 sends a MCData IPcon point-to-point response to the MCData server that contains the information if the request is accepted or the reason of rejection. If accepted, the MCData client 2 may include the data transmission time limit.\n8.\tMCData server forwards the MCData IPcon point-to-point response of MCData client 2 to MCData client 1.\n9.\tThe MCData server applies transmission and reception control and the necessary policy to ensure that appropriate data is transmitted between the MCData clients.\n10.\tMCData client 1 and MCData Client 2 have successfully established media plane for data communication and MCData client 1 and MCData client 2 exchange IP Data.\nThe MCData service shall support mechanisms that allow an authorized MCData user to trigger remotely the establishment of a point-to-point IP connectivity service. This encompasses the procedure of a remote MCData user that addresses the establishment of an IP connectivity between the requested MCData client and the destination MCData client.\nThe procedure in figure 7.14.2.3.2-1 describes the case where an authorised MCData user triggers remotely the establishment of a point-to-point IP connectivity connection between two other MCData users, required MCData user that establish IP connectivity session to the targeted MCData user.\nPre-conditions:\n-\tThe MCData clients are linked with individual data hosts.\n-\tMCData clients belong to the same MCData system.\n-\tThe data hosts linked with the MCData clients already have an IP address allocated.\n-\tMCData clients have IP connectivity capabilities.\n-\tThe linked data hosts are authorized to use the MCData clients to establish an IP connectivity.\nNOTE:\tHow the data host is authorized to use the MCData client is out of the scope of the present document.\n-\tThe MCData server has subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\n-\tMCData clients understands the correspondence between the IP addresses of target data hosts and MCData client 3. How this relationship is determined is out of scope of the present document.\n-\tOptionally, the MCData clients may have activated a functional alias to be used.\n-\tMCData client 1 is authorized to establish remote initiated point-to-point IP connectivity sessions.\nThe figure depicts a remote point-to-point IP connectivity setup, illustrating the establishment of a network connection between two remote locations. The diagram shows the various components involved, such as the remote access point (RAP), the remote access server (RAS), and the remote access client (RAC). The figure also includes a visual representation of the network topology, with the RAP and RAS connected to the RAC, and the RAC connected to the remote access server (RAS). The figure is essential for understanding the network setup and its components, as well as for troubleshooting and configuration purposes.\nFigure 7.14.2.3.2-1: Establishment of a remote point-to-point IP connectivity\n1.\tMCData client 1 would like to establish a remote point-to-point IP connectivity to allow IP Data exchange between two other MCData clients, the asked MCData client 2 and the targeted MCData client 3.\n2.\tThe MCData client 1 sends an MCData remote IPcon point-to-point request towards the MCData server. The MCData IPcon point-to-point request contains the MCData ID and optionally the corresponding functional aliases of MCData client 2 and either the MCData ID or the functional alias of MCData client 3. MCData user at MCData client 1 may include its associated functional alias.\n3.\tMCData server checks whether MCData user at MCData client 1 is authorized to send a remote MCData IPcon point-to-point request and if MCData client 2 and 3 are authorized to receive the IP connectivity service.\n4.\tMCData server sends the MCData remote IPcon point-to-point request towards the MCData client 2.\n5.\tMCData client 2 considers the provided targeted MCData ID or targeted functional alias to establish the point-to-point IP connectivity to MCData client 3 according to clause 7.14.2.2. The IP connectivity status shall be forwarded by MCData client 2 to MCData client 1.\n6.\tMCData client 2 send an MCData remote IPcon point-to-point response to the MCData server encompassing the IP connectivity status of the point-to-point IP connectivity session between MCData client 2 and MCData client 3.\n7.\tThe MCData server forwards the MCData remote IPcon point-to-point response to the remote MCData client 1.\nThe MCData service shall support mechanisms that allow an authorized MCData user to tear down remotely an established point-to-point IP connectivity. This encompasses the procedure of a remote MCData user that addresses the tear down of an IP connectivity between the requested MCData client and the destination MCData client.\nThe procedure in figure 7.14.2.4.2-1 describes the case where an authorised MCData user triggers remotely the tear down of a point-to-point IP connectivity connection between two other MCData users, the asked MCData user that tear down IP connectivity session to the targeted MCData user.\nPre-conditions:\n-\tThe point-to-point IP connectivity has been established between MCData client 2 and MCData client 3.\n-\tOptionally, the MCData client 1 may have activated a functional alias to be used.\n-\tMCData client 1 is authorized to tear down point-to-point IP connectivity sessions.\nThe figure depicts a remote initiated tear down of a point-to-point IP connectivity, illustrating the process of disconnecting the network from the central server. The diagram shows the various components involved, such as the network interface card (NIC), the router, and the server, which are connected to the network. The figure also highlights the importance of network security and the need for proper network management to ensure the integrity of the network.\nFigure 7.14.2.4.2-1: Remote initiated tear down of a point-to-point IP connectivity\n1.\tMCData client 1 would like to tear down a point-to-point IP connectivity between two other MCData clients, the asked MCData client 2 and the targeted MCData client 3.\n2.\tThe MCData client 1 sends an MCData remote IPcon point-to-point tear down request towards the MCData server. The MCData remote IPcon point-to-point tear down request contains the MCData IDs of MCData client 2 and MCData client 3. MCData user at MCData client 1 may include its associated functional alias.\n3.\tMCData server checks whether MCData user at MCData client 1 is authorized to send MCData remote IPcon point-to-point tear down request and checks if the asked MCData client 2 is allowed to tear down an IP connectivity point-to-point session.\n4.\tMCData server sends the MCData remote IPcon point-to-point tear down request towards the MCData client 2.\n5.\tMCData client 2 considers the provided targeted MCData ID to tear down the point-to-point IP connectivity to MCData client 3. The status of the IP connectivity tear down request shall be forwarded by MCData client 2 to remote MCData client 1.\n6.\tMCData client 2 sends MCData remote IPcon point-to-point tear down response to the MCData server encompassing the tear down IP connectivity status between MCData client 2 and MCData client 3.\n7.\tThe MCData server forwards the MCData remote IPcon point-to-point tear down response to the remote MCData client 1.\nThe MCData service shall support mechanisms that allow an authorized MCData user to trigger remotely the adaptation of a point-to-point IP connectivity data bearer service priority. This encompasses the procedure of a remote MCData user that addresses the priority change of a point-to-point IP connectivity between the requested MCData clients.\nThe procedure in figure 7.14.2.5.2-1 describes the case where an authorised MCData user triggers remotely the priority change of a point-to-point IP connectivity connection between two other MCData users.\nPre-conditions:\n-\tOptionally, the MCData client 1 may have activated a functional alias to be used.\n-\tA point-to-point IP connectivity is established between MCData client 2 and MCData client 3.\n-\tMCData client 1 is authorized to change remotely communication priority of a point-to-point IP connectivity session.\nThe figure depicts a point-to-point IP connectivity application priority change request by a remote MCData client. It illustrates the process of changing the priority of a connection request, with the client initiating the change and the MCData server processing and responding to the request. The figure shows the client's IP address, the server's IP address, and the priority change request details.\nFigure 7.14.2.5.2-1: Point-to-point IP connectivity application priority change request by a remote MCData client\n1.\tMCData client 1 would like to change the priority that corresponds to an established point-to-point IP connectivity between MCData client 2 and MCData client 3.\n2.\tThe MCData client 1 sends a remote MCData IPcon point-to-point application priority change request towards the MCData server. The MCData IPcon point-to-point application priority change request contains the MCData IDs of MCData client 2 and MCData client 3. MCData user at MCData client 1 may include its associated functional alias.\n3.\tMCData server checks whether MCData user at MCData client 1 is authorized to send a remote MCData IPcon point-to-point application priority change request.\n4.\tMCData server applies the requested priority to the point-to-point IP connectivity between MCData client 2 and MCData client 3.\nNOTE:\tNecessary adjustments in the relevant transport system can be included.\n5.\tMCData server sends the remote MCData IPcon point-to-point application priority change response to MCData client 1 encompassing the priority status of the point-to-point IP connectivity between MCData client 2 and MCData client 3.\nIP connectivity service capabilities enables authorized MCData unaware data host to use usual MCData service capabilities, e.g. data communication among them. This subclause describes the establishment of a group standalone IP connectivity to a selected MCData group results in affiliated group members exchanging IP data.\nThe procedure in figure 7.14.2.6.2-1 describes the case where an IP connectivity capable MCData client is initiating group standalone MCData IP connectivity communication session with an MCData group for exchanging IP Data between group participants using MCData IPcon-2 reference point.\nPre-conditions:\n-\tMCData client 1 to MCData client n belong to the same MCData group, are registered for receiving MCData service and are affiliated to the corresponding MCData group.\n-\tThe total data volume limit, e.g. daily time limit or total data volume per day, does not restrict the establishment of an IP connectivity MCData transmission.\n-\tMCData client 1 to MCData client n are linked with individual data hosts.\n-\tMCData client 1 to MCData client n belong to the same MCData system.\n-\tThe data hosts linked with the MCData clients already have an IP address allocated.\n-\tMCData clients have IP connectivity capabilities.\n-\tThe linked data hosts are authorized to use the MCData clients to establish an IP connectivity.\nNOTE 1:\tHow the data host is authorized to use the MCData client is out of the scope of the present document.\n-\tThe MCData server has subscribed to the MCData functional alias controlling server within the MC system for functional alias activation/de-activation updates.\n-\tMCData clients understand the correspondence between the IP addresses of target data hosts and MCData clients. How this relationship is determined is out of scope of the present document.\n-\tMCData clients understand the relationship between the addressing of IP packets which are intended to be sent to the group and the MCData group address.\nNOTE 2:\tThe allocation of IP addresses for group addressed communication is outside the scope of the present document.\nThe figure depicts the establishment of an IPcon group standalone communication session, with the IPcon group being the central element. The IPcon group is a network protocol that enables communication between devices, and the standalone session is a specific type of communication session within the IPcon group. The figure shows the IPcon group's configuration, including the IP address, subnet mask, and gateway address. The standalone session is established by configuring the IPcon group's IP address and subnet mask, and then configuring the gateway address to connect to the IPcon group. The figure also includes a diagram of the IPcon group's network topology, showing the connections between the IPcon group and other network devices.\nFigure 7.14.2.6.2-1: Establishment of IPcon group standalone communication session\n1.\tMCData client 1 receives an IP packet from the IP data host which is addressed to an IP address that signifies an MCData group destination.\n2.\tMCData client 1 uses the MCData group standalone short data service using media plane procedure in accordance with clause 7.4.2.6 to establish IPcon group standalone communication session to the MCData user that are members of the corresponding MCData group with the following scope:\n-\tIP Data exchange\n-\tThe application identifier is used to indicate about the use of a group communication in the IP connectivity context\n-\tPayload destination indicates the consumption by the linked data host\n-\tThe use of disposition shall be discarded for the use of IP connectivity\n3.\tMCData clients 2-n recognize that the payload is for IP connectivity service and forward the received IP data to the linked data hosts.\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.14.2.1.1-1: MCData IPcon point-to-point request (MCData client to MCData server)",
                                    "table number": 154,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.14.2.1.1-2: MCData IPcon point-to-point request (MCData server to MCData client)",
                                    "table number": 155,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.14.2.1.2-1: MCData IPcon point-to-point response",
                                    "table number": 156,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.14.2.1.3-1: MCData remote IPcon point-to-point request",
                                    "table number": 157,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.14.2.1.4-1: MCData remote IPcon point-to-point response",
                                    "table number": 158,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.14.2.1.5-1: MCData remote IPcon point-to-point tear down request",
                                    "table number": 159,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.14.2.1.6-1: MCData remote IPcon point-to-point tear down response",
                                    "table number": 160,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.14.2.1.7-1: MCData remote IPcon point-to-point application priority change request",
                                    "table number": 161,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.14.2.1.8-1: MCData remote IPcon point-to-point application priority change response",
                                    "table number": 162,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "title": "7.15\tLocation information (on-network)",
                    "description": "",
                    "summary": "",
                    "text_content": "The MCData system makes use of all of the procedures for location management as specified in 3GPP TS 23.280 [5], utilising the CSC-14 reference point between the location management client and location management server and the CSC-15 reference point between the MCData server and location management server.\n-\tThe MC service client is the MCData client;\n-\tThe MC service server is the MCData server;\n-\tThe MC service group is the MCData group;\n-\tThe MC service ID is the MCData ID; and\n-\tThe MC service group ID is the MCData group ID.\n",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": []
                },
                {
                    "title": "7.16\tUse of ProSe capabilities in off-network MCData communications",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.16.1\tGeneral",
                            "text_content": "When an MCData user using a ProSe-enabled UE wants to communicate with a specific MCData group or MCData user using ProSe capabilities, the MCData client enables the use of the ProSe layer procedures for public safety, as specified in 3GPP TS 23.303 [7].\nFor an off-network MCData group communication, the MCData client obtains configuration data such as the user info ID of the MCData user sending data and the ProSe Group IP multicast address and ProSe Layer-2 Group ID associated to the target MCData group (as described in clause 8.1.3.2 in 3GPP TS 23.280 [5]), and provides it to the ProSe layer. The ProSe Layer-2 Group ID of the target MCData group may be used by the ProSe layer as the target group info and the discovery group ID (defined in 3GPP TS 23.303 [7]).\nPrior to initiating an off-network MCData group communication, a group member discovery procedure may be initiated to identify whether other members of the target MCData group are in the proximity of the MCData user sending data, as described in the ProSe direct discovery for public safety use procedure in 3GPP TS 23.303 [7]. The off-network MCData group communication using the ProSe capability is based on the one-to-many ProSe direct communication procedure for public safety use described in 3GPP TS 23.303 [7].\nFor an off-network one-to-one MCData communication, the MCData client obtains configuration data such as the ProSe discovery group ID and user info ID of the target MCData user from the \"List of MCData users this MCData user is authorized to initiate a one to-one communication\" in the MCData user profile and requests the IP address of the MCData UE associated with the target MCData user from the ProSe layer.\nThe MCData client enables the ProSe layer to determine the IP address for the communication with the target MCData UE by providing the ProSe discovery group ID and user info ID (as defined in 3GPP TS 23.303 [7]) associated to the target MCData user. This may trigger the ProSe direct discovery for public safety use procedure to identify whether the target MCData user is in the proximity of the MCData user sending data. The user info ID of the target MCData user is used by the ProSe layer as the target info (as defined in 3GPP TS 23.303 [7]).\nThe ProSe layer can then provide the IP address related to the target MCData user to the MCData client to initiate the off-network one-to-one MCData communication based on the one-to-one ProSe direct communication procedure described in 3GPP TS 23.303 [7].\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.16.2\tProcedures",
                            "text_content": "The off-network MCData communication procedures using the ProSe capabilities are described within the corresponding clauses of each MCData capability, e.g. SDS procedures for off-network are described in clause 7.4.3 and file distribution procedures for off-network are described in clause 7.5.3.\n",
                            "figures_meta_data": [],
                            "tables": []
                        }
                    ]
                },
                {
                    "title": "7.17\tAd hoc group data communication",
                    "description": "",
                    "summary": "",
                    "text_content": "",
                    "tables": [],
                    "figures_meta_data": [],
                    "subsubsections": [
                        {
                            "title": "7.17.1\tGeneral",
                            "text_content": "This subclause contains procedures for ad hoc group data communication across a single MCData system for both SDS and FD services, and associated functions such as emergency data communication, Imminent peril data communication and others.\nThe ad hoc group data communications can use the participants list provided by either an initiator of the data communication or MCData server. The MCData server can use the criteria provided by the initiator of the data communication to determine the participants list along with its own criteria or local policies. The resulting ad hoc group uses the configuration of a separate preconfigured MCData group.\nNOTE 1:\tA preconfigured group which is intended only to provide configuration for the ad hoc group is identified by a parameter in the group configuration described in 3GPP TS 23.280 [5].\nThe preconfigured MCData group that provides the configuration is not used for the MCData group communication, it only provides configuration for one or more adhoc group data communications. The MCData group ID of the ad hoc group data communication is provided by the MCData server when the ad hoc group data communication is originated. In order to establish security context for the end-to-end secured ad hoc group data communication, the security related information is used from this preconfigured group.\nNOTE 2:\tThe configurations defined for the adhoc group data communication in user profile and service configuration document as described in the Annex A.3 and A.5 is applicable only for single MCData system.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.17.2\tCommon Information flows",
                            "text_content": "Table 7.17.2.1-1 describes the information flow ad hoc group data session request from the MCData client to the MCData server.\nTable 7.17.2.1-1 Ad hoc group data session request information elements\n\nTable 7.17.2.2-1 describes the information flow ad hoc group data session request return from the MCData server to the MCData client. This response could be intermediate response to provide the server assigned MCData ad hoc group ID.\nTable 7.17.2.2-1 Ad hoc group data session request return information elements\n\nTable 7.17.2.3-1 describes the information flow ad hoc group data session request between the MCData servers.\nTable 7.17.2.3-1 Ad hoc group data session request information elements\n\nEditor's Note: It is FFS if the server to server message is needed in a call request or response message.\nTable 7.17.2.4-1 describes the information flow ad hoc group data session request from the MCData server to the MCData client.\nTable 7.17.2.4-1 Ad hoc group data session request information elements\n\nTable 7.17.2.5-1 describes the information flow ad hoc group data session response from the MCData server to the MCData client.\nTable 7.17.2.5-1 Ad hoc group data session response information elements\n\nTable 7.17.2.6-1 describes the information flow ad hoc group data session response between the MCData servers.\nTable 7.17.2.6-1: Ad hoc group data session response information elements\n\nEditor's Note: It is FFS if the server to server message is needed in a call request or response message.\nTable 7.17.2.7-1 describes the information flow ad hoc group data session response from the MCData client to the MCData server.\nTable 7.17.2.7-1 Ad hoc group data session response information elements\n\nTable 7.17.2.8-1 describes the information flow ad hoc group data session release request from the MCData server to the MCData client.\nTable 7.17.2.8-1 Ad hoc group data session release request information elements\n\nTable 7.17.2.9-1 describes the information flow ad hoc group data session release response from the MCData server to the MCData client.\nTable 7.17.2.9-1 Ad hoc group data session release response information elements\n\nTable 7.17.2.10-1 describes the information flow ad hoc group data session notify from MCData server to MCData client.\nTable 7.17.2.10-1: Ad hoc group data session notify\n\nTable 7.17.2.11-1 describes the information flow Modify ad hoc group data session participants request from the MCData client to the MCData server.\nTable 7.17.2.11-1: Modify ad hoc group data session participants request\n\nTable 7.17.2.12-1 describes the information flow Modify ad hoc group data session participants response from the MCData server to the MCData client.\nTable 7.17.2.12-1: Modify Ad hoc group data session participants response information elements\n\nTable 7.17.2.13-1 describes the information flow ad hoc group data session leave request from the MCData server to the MCData client.\nTable 7.17.2.13-1 Ad hoc group data session leave request information elements\n\nTable 7.17.2.14-1 describes the information flow Ad hoc group data session leave response from the MCData client to the MCData server.\nTable 7.17.2.14-1 Ad hoc group data session leave response information elements\n\nTable 7.17.2.15-1 describes the information flow ad hoc group data session get userlist from one MCData server to another MCData server.\nTable 7.17.2.15-1: Ad hoc group data session get userlist\n\nTable 7.17.2.16-1 describes the information flow ad hoc group data session get userlist response from one MCData server to another MCData server.\nTable 7.17.2.16-1: Ad hoc group data session get userlist response\n\nTable 7.17.2.17-1 describes the information flow Ad hoc group data session add user notification from one MCData server to another MCData server. This notification is to provide the list of MCData IDs meeting the criteria specified in the ad hoc group data session get userlist request from one MCData server to another MCData server.\nTable 7.17.2.17-1: Ad hoc group data session add user notification information elements\n\nTable 7.17.2.18-1 describes the information flow Ad hoc group data session remove user notification from one MCData server to another MCData server. This notification is to provide the list of MCData IDs no longer meeting the criteria specified in the ad hoc group data session get userlist request from one MCData server to another MCData server.\nTable 7.17.2.18-1: Ad hoc group data session remove user notification information elements\n\nTable 7.17.2.19 -1 describes the information flow Ad hoc group data session release notification from one MCData server to another MCData server. This notification is to indicate to stop evaluating the criteria to determine the participants list if another MCData server is having the criteria specified in the ad hoc group data session get userlist request.\nTable 7.17.2.19-1: Ad hoc group data session release notification information elements\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.17.2.1-1 Ad hoc group data session request information elements",
                                    "table number": 163,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.2-1 Ad hoc group data session request return information elements",
                                    "table number": 164,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.3-1 Ad hoc group data session request information elements",
                                    "table number": 165,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.4-1 Ad hoc group data session request information elements",
                                    "table number": 166,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.5-1 Ad hoc group data session response information elements",
                                    "table number": 167,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.6-1: Ad hoc group data session response information elements",
                                    "table number": 168,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.7-1 Ad hoc group data session response information elements",
                                    "table number": 169,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.8-1 Ad hoc group data session release request information elements",
                                    "table number": 170,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.9-1 Ad hoc group data session release response information elements",
                                    "table number": 171,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.10-1: Ad hoc group data session notify",
                                    "table number": 172,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.11-1: Modify ad hoc group data session participants request",
                                    "table number": 173,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.12-1: Modify Ad hoc group data session participants response information elements",
                                    "table number": 174,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.13-1 Ad hoc group data session leave request information elements",
                                    "table number": 175,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.14-1 Ad hoc group data session leave response information elements",
                                    "table number": 176,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.15-1: Ad hoc group data session get userlist",
                                    "table number": 177,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.16-1: Ad hoc group data session get userlist response",
                                    "table number": 178,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.17-1: Ad hoc group data session add user notification information elements",
                                    "table number": 179,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.18-1: Ad hoc group data session remove user notification information elements",
                                    "table number": 180,
                                    "summary": "",
                                    "name": ""
                                },
                                {
                                    "description": "Table 7.17.2.19-1: Ad hoc group data session release notification information elements",
                                    "table number": 181,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.17.3\tCommon Ad hoc group data communication procedures",
                            "text_content": "Figure 7.17.3.1.1-1 below illustrates the ad hoc group data communication setup procedure initiated by an authorized user.\nPre-conditions:\n1.\tThe authorized user at MCData client 1 wants to invite MCData users at MCData client 2, MCData client 3 and MCData client 4 for the ad hoc group data communication or to invite the ad hoc group member if the ad hoc group call follows an ad hoc group emergency alert, the MCData client 1 is aware of the ad hoc group ID.\n2.\tNumber of participants being invited for the ad hoc group data communication is within the limit.\n3.\tEnd-to-End encryption is supported for this ad hoc group data communication.\n4.\tMCData client 1 is aware of the MCData IDs of the participants.\nNOTE 1:\tSelection of MCData IDs of the participants can be manual or from the user profile configuration data or by any other means. This is left for the implementation.\n5.\tThe pre-configured group identity and pre-configured group configuration to be used for an ad hoc group have been preconfigured in MCData client and other participants of ad hoc group have also received the relevant security related information to allow them to communicate in an ad hoc group communication.\nThe figure depicts a setup for ad hoc group data communication, showing a 1-1 connection between two nodes. The setup includes a base station (BS) and a mobile node (MN), with a wireless link between them. The figure illustrates the use of a wireless link, such as Wi-Fi, to establish a connection between the two nodes. The setup is designed to allow for efficient communication in ad hoc networks, where nodes are not connected to a central network.\nFigure 7.17.3.1.1-1: Ad hoc group data communication setup\n1.\tUser at MCData client 1 would like to initiate an ad hoc group data communication. The MCData client 1 initiates the ad hoc group data communication by sending the ad hoc group data session request containing the list of participants or an ad hoc group ID from an ad hoc group emergency alert to the MCData server. Encryption supported information element shall be set to true since end-to-end encryption is supported. An SDP offer containing the MCData client media parameters is included. If the MCData user of MCData client 1 has selected a functional alias, then the ad hoc group data session request contains that functional alias.\nIf the MCData user at MCData client 1 initiates an MCData emergency ad hoc group data communication or the MCData emergency state is already set for the MCData client 1 (due to a previously triggered MCData emergency alert):\ni.\tthe MCData ad hoc group data session request shall contain an emergency indicator;\nii.\tif the MCData emergency state is not set already, MCData client 1 sets its MCData emergency state. The MCData emergency state of MCData client 1 is retained until explicitly cancelled by the user of MCData client 1.\n2.\tIf the ad hoc group communication is supported, the MCData server verifies whether the user at MCData client 1 is authorized to initiate an ad hoc group data session request. If not authorized, the MCData server rejects the ad hoc group data session request as specified in the step 3. The MCData server accepts the ad hoc group data session request if the ad hoc group data communication is supported and authorized. If authorised, it validates whether the number of invited participants is within the configured limit before proceeding with the data communication setup.\nIf functional alias is present, the MCData server checks whether the provided functional alias allowed to be used and has been activated for the user.\nIf location information was included in the ad hoc group data session request, the MCData server checks the privacy policy of the MCData user to decide if the location information of MCData client 1 can be provided to other users on the ad hoc group data communication (refer to Annex A.3 \"Authorisation to provide location information to other MCData users on a data communication when talking\").\nIf an emergency indicator is present in the received MCData ad hoc group data session request, the MCData ad hoc group is considered to be in the in-progress emergency state until this ad hoc group data communication is terminated; and\nIf an imminent peril indicator is present in the received MCData ad hoc group data session request, the MCData ad hoc group is considered to be in the in-progress imminent peril state until this ad hoc group data communication is terminated.\nIf the information received in the request in step 1 does not contain an ad hoc group ID from an ad hoc group emergency alert, the MCData server forms the ad hoc group by using received information, and determines the preconfigured group to be used for the configuration of the ad hoc group. The MCData server assigns a MCData group ID for the newly formed ad hoc group.\nThe MCData server considers the ad hoc group data communication participants as implicitly affiliated to the ad hoc group.\n3.\tThe MCData server shall send the ad hoc group data session request return message to MCData client 1 containing the below:\ni.\tThe MCData ad hoc group ID, either generated by the MCData server, if not included in the ad hoc group call request of step 1, or if the provided MCData ad hoc group ID is not accepted by the MCData server; or provided by the MCData client 1 if the ad hoc group ID is from an ad hoc group emergency alert;\nii.\tThe group ID of the pre-configured group to be used for the ad hoc group communication (only included when the ad hoc group data session is authorized); and\niii.\tResult of whether the ad hoc group data session request is authorized or not\nIf the ad hoc group data session request is not authorized, the MCData server and MCData client 1 shall not proceed with the rest of the steps.\n4a-4c.\tThe MCData server sends the ad hoc group data session requests towards the MCData clients of the invited users based on step 1. While sending the ad hoc group data session requests, the MCData server shall remove the information elements that are not required to be conveyed to the target MCData clients (e.g. MCData ID list of the users who are required to acknowledge)\n5a-5c.\tThe receiving MCData clients notify their corresponding MCData user about the incoming ad hoc group data session request with the information of the MCData group ID for the ad hoc group.\n6a-6c.\tThe receiving MCData clients may accept or reject the ad hoc group data session requests and send ad hoc group data session responses to the MCData server. The response may also contain a functional alias of the responding MCData user, which is verified (valid and activated for the user) by the MCData server.\n7.\tThe MCData server sends the ad hoc group data session response to MCData client 1 through the signalling path to inform about successful data communication establishment.\nNOTE 2:\tSteps 5 to step 7 can start to occur before all of step 4 is completed since the MCData server do not require to wait for the previous ad hoc group data session request to complete before sending the ad hoc group data session request to another participant.\n8.\tIf the initiating MCData user requires the acknowledgement from the invited MCData users, and the required MCData users do not acknowledge the data session setup within a configured time (the \"acknowledged data communication setup timeout\"), then the MCData server may proceed with or abandon the data session and then notify the initiating MCData user that the acknowledgements did not include all required members according to ad hoc group data communication policy from the user profile configuration. The MCData server may notify the initiating MCData user of all MCData users who did not acknowledge the ad hoc group data session request within the configured time. This notification may be sent to the initiating MCData user by the MCData server more than once during the data communication when MCData users join or leave the MCData ad hoc group data communication.\n9.\tMCData client 1, MCData client 2, MCData client 3 and MCData client 4 establish media plane for data communication.\nNOTE 3:\tStep 9 can occur any time following step 7 if the conditions to proceed with the data communication are met.\nThe procedure focuses on the case where the MCData server releases an ongoing MCData ad hoc group data communication for all the participants of that ad hoc group data communication, since at least one of the release conditions are met e.g., due to hang time expiry, last participant leaving, second last participant leaving, initiator leaving.\nFigure 7.17.3.1.2-1 below illustrates the signalling control plane procedure for the MCData server initiating termination of an ongoing ad hoc group data communication.\nThe figure depicts a release 1 ad hoc group data communication scenario, showing a network topology with nodes, routers, and a central controller. The diagram illustrates the communication paths, including the use of wireless links, and the network's security measures.\nFigure 7.17.3.1.2-1: Release ad hoc group data communication\n1.\tIt is assumed that MCData users on MCData client 1, client 2 and client 3 are already part of the ongoing ad hoc group data communication.\n2.\tMCData server would like to release the MCData ad hoc group data communication which is ongoing e.g., due to hang time expiry, last participant leaving, second last participant leaving, initiator leaving.\n3.\tMCData server identifies the participants of the ongoing ad hoc group data communication and generates ad hoc group data session release request to release ongoing data communication. The MCData server cancels the in-progress emergency state or in-progress imminent peril state of the ad hoc group if the ad hoc group data communication is an emergency or imminent peril data communication respectively.\n4.\tMCData server sends ad hoc group data session release request via SIP core towards each participant of the ongoing ad hoc group data communication.\n5.\tMCData users are notified about the release of the ad hoc group data communication.\n6.\tMCData client(s) receiving ad hoc group data session release request, acknowledge towards the MCData server by sending an ad hoc group data session release response.\nNOTE:\tIf the initiator of the ad hoc group data communication does not supply the participants list, the MCData client(s) may choose to store the list of participants for easy re-initiation of another ad hoc group data communication with the same participants.\n7.\tMCData client 1, client 2 and client 3 have successfully released the media plane resources associated with the ad hoc group data communication that is terminated and the ad hoc group ceases to exist (i.e., further data communication is not possible over the same ad hoc group), otherwise if the ad hoc group data communication follows an ad hoc group emergency alert the ad hoc group continues to exist (i.e., further data communication is possible over the same ad hoc group).\nFigure 7.17.3.1.3-1 below illustrates the ad hoc group data communication setup procedure initiated by the MCData user and MCData client 1 wherein the list of participants is determined by the MCData server based on the citeria received from the MCData client.\nPre-conditions:\n1.\tThe MCData user at MCData client 1 is authorized to initate ad hoc group data communication.\n2.\tThe MCData user at MCData client 1 wants to invite MCData users who are satisying certain criteria for the ad hoc group data communication.\nThe figure depicts a network setup where Ad Hoc group data communication participants are determined by the MCData server. The network consists of multiple nodes, each equipped with a MCData server, which communicates with the MCData server to determine the participants in the Ad Hoc group. This setup is crucial for efficient data communication in ad hoc networks.\nFigure 7.17.3.1.3-1: Ad hoc group data communication participants determined by MCData server\n1.\tUser at MCData client 1 would like to initiate an ad hoc group data communication in-order to invite the participants satisfying specific criteria. The MCData client 1 initiates the ad hoc group data communication by sending the ad hoc group data session request containing the details of the criteria to be applied by the MCData server for determining the participants list. If end-to-end encryption is supported, the Encryption supported information element shall be set to true and pre-configured MCData group whose configuration is to be applied is included. An SDP offer containing the MCData client media parameters is included. If the MCData user of MCData client 1 has selected a functional alias, then the ad hoc group data session request contains that functional alias.\nIf the MCData user at MCData client 1 initiates an MCData emergency ad hoc group data communication or the MCData emergency state is already set for the MCData client 1 (due to a previously triggered MCData emergency alert):\ni.\tthe MCData ad hoc group data session request shall contain an emergency indicator;\nii.\tif the MCData emergency state is not set already, MCData client 1 sets its MCData emergency state. The MCData emergency state of MCData client 1 is retained until explicitly cancelled by the user of MCData client 1.\n2.\tIf the ad hoc group data communication is supported, the MCData server verifies whether the user at MCData client 1 is authorized to initiate an ad hoc group data communication. If not authorized, the MCData server rejects the ad hoc group data session request as specified in the step 3. The MCData server accepts the ad hoc group data session request if the ad hoc group data communication is supported and authorized.\nIf functional alias is present, the MCData server checks whether the provided functional alias is allowed to be used and has been activated for the user.\nIf location information was included in the ad hoc group data session request, the MCData server checks the privacy policy of the MCData user to decide if the location information of MCData client 1 can be provided to other users on the data communication (refer to Annex A.3 \"Authorisation to provide location information to other MCData users on a data communication when talking\").\nIf an emergency indicator is present in the received MCData ad hoc group data session request, the MCData ad hoc group is considered to be in the in-progress emergency state until this ad hoc group data communication is terminated;\nIf an imminent peril indicator is present in the received MCData ad hoc group data session request, the MCData ad hoc group is considered to be in the in-progress imminent peril state until this ad hoc group data communication is terminated. and\nIf the information received in the request in step 1 does not contain an ad hoc group ID from an ad hoc group emergency alert, the MCData server forms the ad hoc group by using received information, and determines the preconfigured group to be used for the configuration of the ad hoc group. The MCData server assigns a MCData group ID for the newly formed ad hoc group. Further, the ad hoc group participants are included to ad hoc group once determined as specified in the step 4.\n3.\tThe MCData server shall send the ad hoc group data session request return message to MCData client 1 containing the below:\ni.\tThe MCData ad hoc group ID, either generated by the MCData server, if not included in the ad hoc group call request of step 1, or if the provided MCData ad hoc group ID is not accepted by the MCData server, or provided by the MCData client 1 if the ad hoc group ID is from an ad hoc group emergency alert;\nii.\tThe group ID of the pre-configured group to be used for the ad hoc group communication (only included when the ad hoc group data session is authorized); and\niii.\tResult of whether the ad hoc group data session request is authorized or not\nIf the ad hoc group data session request is not authorized, the MCData server and MCData client 1 shall not proceed with the rest of the steps.\n4.\tThe MCData server determines the list of participants to be invited for the ad hoc group data communication based on the information present in the information element Criteria for determining the participants. This information element could carry either criteria or indicator identifying pre-defined criteria or a combination of both.\nNOTE 1:\tThe content of the Criteria information element, the details of the pre-defined criteria, and the way how their MCData server determines the list of participants are left to implementation.\n5.\tThe MCData server sends the ad hoc group data session requests towards the MCData clients 2 and 3. While sending the ad hoc group data session requests, the MCData server shall remove the information elements that are not required to be conveyed to the target MCData clients. This request carries the pre-configured group ID whose configuration is to be applied for this ad hoc group data communication if end-to-end encryption is requested. The MCData server considers the ad hoc group data communication participants as implicitly affiliated to the ad hoc group.\n6.\tThe receiving MCData clients notify their corresponding MCData user about the incoming ad hoc group data communication.\n7.\tThe receiving MCData clients may accept or reject the ad hoc group data session requests and send ad hoc group data session responses to the MCData server. The response may also contain a functional alias of the responding MCData user, which is verified (valid and activated for the user) by the MCData server.\n8.\tThe MCData server sends the ad hoc group data session response to MCData client 1 through the signalling path to inform about successful data communication establishment.\n9.\tThe MCData server may notify the initiating MCData user of all MCData users who acknowledged the ad hoc group data session request and joined the ad hoc group data communication. This notification may be sent to the initiating MCData user by the MCData server more than once during the data communication when MCData users join or leave the MCData ad hoc group data communication. If the authorized users (not shown in figure) are configured to receive the participants information of ad hoc group data communication, the MCData server provides ad hoc group data session notify about all MCData users who acknowledged the ad hoc group data session request and joined the ad hoc group data communication, and when MCData users joins or leaves the MCData ad hoc group data communication.\nNOTE 2:\tThe authorized user can learn who is currently affiliated to the current adhoc group data communication.\n10.\tMCData client 1, MCData client 2 and MCData client 3 establish media plane resources.\nFigure 7.17.3.1.4-1 below illustrates the modification of ad hoc group data communication participants procedure by an authorized user.\nPre-conditions:\n1.\tAn MCData ad hoc group data communication is already in progress the participants list is provided by the originating MCData user while initiating the MCData ad hoc group data communication.\n2.\tThe participants of the MCData ad hoc group call belong to the single MCData system.\n3.\tThe MCData users on MCData client 1, MCData client 3 to MCData client n are on an ongoing ad hoc group data communication.\n4.\tThe MCData user at MCData client 1 determines to remove the user of MCData client 3 from the ad hoc group data communication and add user of MCData client 2 into the on-going ad hoc group data communication.\n\nThe figure depicts a modification of ad hoc group data communication by an authorized user, showing how the communication protocol is modified to ensure secure and efficient data transmission.\nFigure 7.17.3.1.4-1: Modification of ad hoc group data communication participants by an authorized user\n1.\tThe MCData user at the MCData client 1 is authorized and requests to modify ad hoc group data communication participants. The MCData client 1 sends the modify ad hoc group data session participants request to the MCData server in order to remove MCData client 3 from the ongoing ad hoc group data communication and add MCData client 2 into it.\n2.\tThe MCData server verifies whether the MCData client 1 is authorized to add or remove (modify) the participants of the on-going ad hoc group data communication.\n3.\tThe MCData server sends modify ad hoc group data session participants response to the MCData client 1.\n4.\tThe MCData server sends the ad hoc group data session leave request to the MCData client 3 in order to remove it from the on-going ad hoc group data communication.\n5.\tThe MCData client 3 notifies the user of the ad hoc group data session leave request.\n6.\tThe MCData client 3 sends the ad hoc group data session leave response to the MCData server.\n7.\tThe MCData server sends the ad hoc group data session request towards MCData client 2.\nNOTE:\tSteps 7 to 9 can occur at any time following step 3.\n99.\tThe receiving MCData client 2 notifies the user about the incoming ad hoc group data communication.\n9.\tThe MCData client 2 accepts the ad hoc group data session request and send ad hoc group data session responses to the MCData server. The response may also contain a functional alias of the responding MCData user, which is verified (valid and activated for the user) by the MCData server. The MCData server considers the MCData user as implicitly affiliated to the ad hoc group.\n10.\tThe MCData server may notify the initiating MCData user of all the users who are added to the on-going ad hoc group data communication. This notification may be sent to the initiating MCData user by the MCData server more than once during the data communication when MCData users join or leave the ad hoc group data communication.\n11.\tThe MCData server may notify the participants about the change in the participants of on-going ad hoc group data communication.\nFigure 7.17.3.1.5-1 below illustrates the modification of ad hoc group data communication participants procedure by the MCData server.\nPre-conditions:\n1.\tThe MCData client 1 is the initiator of the ad hoc group data communication.\n2.\tMCData server determined the participants for the ad hoc group data communication based on the criteria specified by the MCData client 1 while initiating the ad hoc group data communication.\n3.\tMCData server continuously evaluates the criteria to monitor the list of users who meets or not meets the criteria for participating in the on-going ad hoc group data communication.\n4.\tThe MCData server detects that the MCData client 5 satisfies the criteria and MCData client 4 stops to meet the criteria specified by the MCData client 1.\n\nThe figure depicts a modification of ad hoc group data communication participants by the MCData server, illustrating the process of adding or removing participants from a group. The figure shows the MCData server's interface, allowing users to modify the group's data communication participants.\nFigure 7.17.3.1.5-1: Modification of ad hoc group data communication participants by the MCData server\n1.\tThe ad hoc group data communication is established and on-going with the participants MCData client 1, MCData client 2, MCData client 3 and MCData client 4. The participants list is determined by the MCData server based on the criteria specified by the MCData client 1 while initiating the data communication.\n2.\tThe MCData server detects that the MCData client 5 satisfies the criteria specified by the MCData client.\n3.\tThe MCData server sends the ad hoc group data session request to the MCData client 5.\n4.\tThe MCData client 5 notifies the user about the incoming ad hoc group data communication.\n5.\tThe MCData client 5 accepts the ad hoc group data session request and sends the ad hoc group data session response to the MCData server.\n6.\tThe on-going ad hoc group data communication is updated by adding MCData client 5 which satisfies the criteria specified by the MCData client 1.\n7.\tThe MCData server detects that the MCData client 4 is no more satisfying the criteria to be the participant of the ad hoc group data communication.\n8.\tThe MCData server sends the ad hoc group data communication leave request to the MCData client 4 and removes it from the on-going ad hoc group data communication.\n9.\tThe MCData client 4 notifies the user of the ad hoc group data session leave request.\n10.\tThe MCData client 4 sends the ad hoc group data session leave response to the MCData server.\n11.\tThe on-going ad hoc group data communication is updated by removing MCData client 4, which no more satisfies the criteria specified by the MCData client 1.\nFigure 7.17.3.2.1-1 illustrates the procedure for ad hoc group data communication setup procedure initiated by an authorized user wherein either a list of participants or an ad hoc group ID from an ad hoc group emergency alert is provided by the authorised user and the determined MCData users are from multiple MCData systems.\nPre-conditions:\n1.\tThe security aspects of sharing the user information between primary and partner MC systems shall be governed as per the service provider agreement between them. In this case, it is considered that the partner MC system shares their users' information to the primary MC system.\n2.\tThe authorized MCData user/dispatcher belongs to the primary MC system.\n3.\tThe MCData server of the primary MC system is where the authorized MCData user/dispatcher creates the ad hoc group.\n4.\tSome users of the ad hoc group belong to partner MC systems.\n5.\tThe preconfigured group identity and preconfigured group configuration (e.g. security related information) to be used for an ad hoc group have been preconfigured in the MCData client and other participants of ad hoc group have also received the relevant security related information to allow them to communicate in an ad hoc group communication.\n6.\tIf an ad hoc group ID from an ad hoc group emergency alert is used to invite the ad hoc group members, MCData client is aware of the ad hoc group ID.\nThe figure depicts an ad hoc group data communication setup, showing a network of nodes connected by a wireless link. The nodes are equipped with antennas and a base station (BS) for communication. The setup is designed to support ad hoc communication, allowing for flexible and dynamic network configurations.\nFigure 7.17.3.2.1-1: Ad hoc group data communication setup\n1.\tThe MCData client of the authorized user initiates an ad hoc group data communication with multiple users from primary and partner MC systems. An ad hoc group data session request message with the information of the participants MCData IDs or an ad hoc group ID if the ad hoc group call follows an ad hoc group emergency alert is routed to the MCData server of the primary MC system.\n2.\tIf the ad hoc group call is supported, the MCData server of the primary MC system verifies whether the user at MCData client is authorized to initiate an ad hoc group communication. If not authorized, the MCData server of the primary MC system rejects the ad hoc group data session request as specified in the step 3.\nIf the information received in the request in step 1 does not contain an ad hoc group ID from an ad hoc group emergency alert, the MCData server of the primary MC system forms the ad hoc group by using information received in step 1 and further determines the preconfigured group to be used for the configuration (e.g. security related information). The MCData server assigns an MCData ad hoc group ID for the newly formed ad hoc group.\nIf no MCData ad hoc group ID was included in the ad hoc group data session request of step 1, or if the provided MCData ad hoc group ID is not accepted by the MCData server, the MCData server assigns a MCData group ID for the newly formed ad hoc group. The MCData server considers the ad hoc group communication participants as implicitly affiliated to the ad hoc group.\nNOTE 1:\tThe newly formed ad hoc group information including the MCData group ID and the list of users is held in dynamic data in the MCData server.\n3.\tThe MCData server shall send the ad hoc group data session request return message to MCData client containing the below:\ni.\tThe MCData ad hoc group ID either generated by the MCData server or provided by the MCData client if the ad hoc group ID is from an ad hoc group emergency alert (only included when the ad hoc group data session request is authorized);\nii.\tThe group ID of the pre-configured group to be used for the ad hoc group data communication (only included when the ad hoc group data session request is authorized); and\niii.\tResult of whether the ad hoc group data session request is authorized or not.\nIf the ad hoc group data session request is not authorized, MCData client 1 shall not proceed with the rest of the steps.\n4.\tThe MCData server of the primary MC system sends the ad hoc group data session request to the group members of the ad hoc group belonging to the primary MC system. While sending the ad hoc group data session requests, the MCData server shall remove the information elements that are not required to be conveyed to the target MCData clients (e.g. MCData ID list of the users who are required to acknowledge).\n5a-5b.\tThe MCData clients receive in the ad hoc group data session request with the information of the MCData group ID for the ad hoc group and further notify their corresponding MCData user. The group members of the ad hoc group of the primary MC system may accept or reject the ad hoc group data session requests and respond with the ad hoc group data session responses.\n6.\tThe primary MCData server further initiates an ad hoc group data session request message to the MCData users of the partner MC system. The ad hoc group data session request message is routed to the MCData users via the MCData server of the partner MC system.\n7a-7b.\tThe MCData clients receive in the ad hoc group data session request the information of the MCData group ID for the ad hoc group and further notify their corresponding MCData user. The MCData users upon receipt of the invitation may accept or reject the ad hoc group data session requests, and respond with the ad hoc group data session responses. The ad hoc group data session response message is routed to the MCData server of the primary MC system via the MCData server of the partner MC system.\n8.\tThe MCData server of the primary MC system provides an ad hoc group data session response message to the MCData client of the authorized MCData user upon receiving response to the corresponding ad hoc group data session request in step 1. The ad hoc group data session response will consist of the success or failure result and/or detailed reason information in case of failure.\nNOTE 2:\tThe ad hoc group data session response messages may be used by The MCData client of the authorized user to determine if the ad hoc group communication will proceed.\n9.\tUpon successful ad hoc group data session setup, a group data communication is established amongst the group members from primary and partner MC systems. The media plane resources for data communication are established.\nThis procedure focuses on the case where an MCData server initiates the termination of an ongoing MCData ad hoc group data communication for all the participants of that group data communication, since at least one of the termination conditions are met e.g., due to hang time expiry, last participant leaving, second last participant leaving, initiator leaving, or minimum number of affiliated MCData group members are not present.\nProcedures in figure 7.17.3.2.2-1 are the signalling control plane procedures for the MCData server initiating termination of an ongoing MCData ad hoc group data communication.\nPre-condition:\n-\tThe MCData client 1 and MCData client 2 belong to primary MC system. The MCData client 3 belongs to partner MC system.\n-\tThe MCData users on MCData client 1, client 2 and client 3 are already part of the ongoing ad hoc group data communication (e.g. as a result of ad hoc group data communication setup as specified in clause 7.17.3.2.1).\nThe figure depicts a 17.3.2.2 -1 Ad Hoc group data communication release, illustrating the release process for this specific group. The release includes the necessary steps and details for the group to communicate with each other.\nFigure 7.17.3.2.2-1: Ad hoc group data communication release\n1.\tThe MCData server determines to release the ongoing ad hoc group data communication e.g., due to a hang timer expiry, last participant leaving, second last participant leaving, initiator leaving, or a minimum number of affiliated MCData group members not present.\n2.\tThe MCData server identifies the participants of the ongoing ad hoc group data communication and generates ad hoc group data session release request to release ongoing data communication.\n3.\tThe MCData server sends an ad hoc group data session release request to each participant of the ongoing group data communication. If the participants belong to the partner MC system, then the ad hoc group data session release request is routed to the MCData clients of the partner MC system via the partner MCData server.\n4.\tThe MCData users are notified about the release of the ad hoc group data communication.\n5.\tThe MCData client(s), send an acknowledgment to the MCData server by sending an ad hoc group data session release response.\n6.\tThe MCData client 1, client 2 and client 3 have successfully released media plane resources associated with the ad hoc group data communication that is terminated. The primary MCData server removes the ad hoc group information from the dynamic data and thus the ad hoc group ceases to exist.\nFigure 7.17.3.2.3-1 below illustrates the ad hoc group data communication setup procedure initiated by an authorized user wherein the list of participants is determined by the MCData server based on the citeria received from the MCData client and determined MCData users are from multiple MCData systems.\nPre-conditions:\n1.\tThe security aspects of sharing the user information between primary and partner MC systems shall be governed as per the service provider agreement between them. In this case, it is considered that the partner MC system share their users' information to the primary MC system.\n2.\tThe authorized MCData user/dispatcher belongs to the primary MC system.\n3.\tThe MCData server 1 of the primary MC system is where the authorized MCData user/dispatcher creates the ad hoc group.\n4.\tSome users of the ad hoc group may belong to MCData server 2 of the partner MC systems.\n5.\tThe pre-configured group identity and pre-configured group configuration to be used for an ad hoc group have been preconfigured in MCData client and other participants of ad hoc group have also received the relevant security related information to allow them to communicate in an ad hoc group communication.\nThe figure depicts a setup for ad hoc group data communication, showing multiple MCData systems connected to a central MCData server. The setup includes a router, a switch, and a network interface controller (NIC). The figure illustrates the use of multicast routing to ensure efficient data transmission over the network.\nFigure 7.17.3.2.3-1: Ad hoc group data communication setup involving multiple MCData systems\n1-3.\tSame as described in subclause 7.17.3.1.1.\n4.\tThe MCData server 1 determines the list of participants from the primary MC system and determines the partner MC system to be involved in the ad hoc group data communication based on the information present in the information element Criteria for determining the participants. This information element carries the criteria, indicator identifying pre-defined criteria, or a combination of both.\nNOTE 1:\tThe content of the Criteria information element, the details of the pre-defined criteria, and the way how their MCData server determines the list of participants are left to implementation.\n5.\tThe MCData server 1 needs to involve the partner MC system based on the agreement and based on the criteria for determining the participants list, it sends the ad hoc group data session get userlist request to the MCData server 2. This request carries the criteria specified in the step 1.\n6.\tMCData server 2 evaluates the criteria and determines the participants satisfying the criteria (i.e. MCData client 3 and MCData client 4) and sends the response containing the list of MCData users satisfying the criteria. The MCData server 2 may apply local policies if any while determining the participants satisfying the criteria.\n7.\tThe MCData server 1 compiles the list of participants to be invited for the ad hoc group data communication including the participants from both primary and partner MC system.\n8a-8b.\tThe MCData server 1 sends the ad hoc group data session request towards the MCData client 3 and MCData client 4. While sending the ad hoc group data session request, the MCData server shall remove the information elements that are not required to be conveyed to the target MCData clients. This request carries the pre-configured group ID whose configuration is to be applied for this ad hoc group data communication if end-to-end encryption is requested. The MCData server 1 considers the ad hoc group communication participants as implicitly affiliated to the ad hoc group.\n9.\tThe MCData server 1 sends the ad hoc group data session request towards the MCData client 2. While sending the ad hoc group data session request, the MCData server shall remove the information elements that are not required to be conveyed to the target MCData clients. This request carries the pre-configured group ID whose configuration is to be applied for this ad hoc group data communication if end-to-end encryption is requested.\n10a-10c.\tThe MCData clients receive incoming ad hoc group data communication and further notify their corresponding MCData users.\n11.\tThe MCData client 2 accepts the ad hoc group data session request, and sends ad hoc group data session response to the MCData server 1.\n12.\tThe MCData client 3 accepts the ad hoc group data session request, and sends ad hoc group data session response to the MCData server 1.\n13.\tThe MCData client 4 accepts the ad hoc group data session request, and sends ad hoc group data session response to the MCData server 1.\n14.\tThe MCData server 1 sends the ad hoc group data session response to MCData client 1 through the signalling path to inform about result of the participants responses.\n15.\tThe MCData server 1 may notify the initiating MCData user of all MCData users who acknowledged the ad hoc group data session request and joined the ad hoc group data communication. The MCData server 1 more than once during the data communication may send this notification to the initiating MCData user whenever an MCData user joins or leaves the MCData ad hoc group data communication. If the authorized users (not shown in figure) are configured to receive the participants information of ad hoc group data communication, the MCData server provides ad hoc group data session notify about all MCData users who acknowledged the ad hoc group data session request and joined the ad hoc group data communication, and when MCData users joins or leaves the MCData ad hoc group data communication.\n16.\tThe MCData client 1, MCData client 2, MCData client 3 and MCData client 4 establish media plane resources for data communication.\nNOTE 2:\tThe ad hoc group data session request and response exchanged between MCData server 1 of primary MC system and MCData client 3/MCData client 4 will always traversal through the MCData server 2.\nFigure 7.17.3.2.4-1 below illustrates the MCData server modifying the ad hoc group data communication participants procedure involving multiple MCData systems.\nPre-conditions:\n1.\tThe MCData user at MCData client 1 is authorized to initiate ad hoc group data communication.\n2.\tThe MCData server 1 of the primary and MCData server 2 of the partner MCData systems determined the participants for the ad hoc group data communication based on the criteria specified by the MCData client 1 while initiating the ad hoc group data communication.\n3.\tThe ad hoc group data communication is established and on-going with the participants MCData client 1, MCData client 2, and MCData client 4. The participants list is determined by both primary and partner MC systems.\n4.\tThe MCData server 1 of the primary and MCData server 2 of the partner MCData systems continuously evaluates the criteria to monitor the list of users who meets or not meets the criteria for participating in the on-going ad hoc group data communication.\n5.\tThe MCData server 1 of the primary MCData system detects that the MCData client 3 meets the criteria and MCData client 2 stops to meet the criteria specified by the MCData client 1.\n6.\tThe MCData server 2 of the partner MCData system detects that the MCData client 5 meets the criteria and MCData client 4 stops to meet the criteria specified by the MCData client 1.\n\n\nThe figure depicts a modification of ad hoc group data communication participants by the MCData server, illustrating the process of adding or removing participants from the network. The figure shows the network topology, including the nodes, links, and the MCData server, which is responsible for managing the ad hoc group data communication. The modification process involves adding or removing participants, which can be done through the MCData server, ensuring that the network remains stable and efficient.\nFigure 7.17.3.2.4-1: Modification of ad hoc group data communication participants by the MCData server\n1.\tThe MCData server 1 detects that MCData client 3 now meets criteria and successfully added to group data communication.\n2.\tThe MCData server 1 detects that MCData client 2 does not meet criteria any more and successfully removed from a group data communication.\n3.\tThe MCData server 2 detects that the MCData client 5 meets the criteria specified by the MCData client 1.\n4.\tThe MCData server 2 sends the notification to MCData server 1 of the primary MCData system to add the MCData user at MCData client 5 to on-going ad hoc group data communication.\n5.\tThe MCData server 1 sends the ad hoc group data session request to the MCData client 5.\n6.\tThe MCData client 5 notifies the user about the incoming ad hoc group data communication.\n7.\tThe MCData client 5 accepts the ad hoc group data session request and sends the ad hoc group data session response to the MCData server 1.\n8.\tThe on-going ad hoc group data communication is updated by adding MCData client 5 which meets the criteria specified by the MCData client 1.\n9.\tThe MCData server 2 detects that the MCData client 4 is no longer satisfying the criteria to be the participant of the ad hoc group data communication.\n10.\tThe MCData server 2 sends the notification to MCData server 1 of the primary MCData system to remove the MCData user at MCData client 4 from on-going ad hoc group data communication.\n11.\tThe MCData server 1 sends the ad hoc group data session leave request to the MCData client 4 and removes it from the on-going ad hoc group data communication.\n12.\tThe MCData client 4 notifies the user of the ad hoc group data session leave request.\n13.\tThe MCData client 4 sends the ad hoc group data session leave response to the MCData server 1.\n14.\tThe on-going ad hoc group data communication is updated by removing MCData client 4, which no longer meets the criteria specified by the MCData client 1.\nNOTE:\tThe ad hoc group data session request and response exchanged between MCData server 1 of primary MC system and MCData client 4/MCData client 5 will always traversal through the MCData server 2.\nFigure 7.17.3.2.5-1 below illustrates the release of ad hoc group data communication and stopping of MCData server at the partner MC system from determining the ad hoc group data communication participants’ procedure once involving multiple MCData systems. This procedure, in particular describes about how the partner MC system is notified about ad hoc group data communication release to cease the determining of the participants by the partner MC system.\nPre-conditions:\n1.\tThe MCData user at MCData client 1 is authorized to initate ad hoc group data communication.\n2.\tThe ad hoc group data communication is established and on-going with the participants MCData client 1, MCData client 2, MCData client 3, and MCData client 4.\n3.\tThe MCData server 1 of the primary and MCData server 2 of the partner MCData systems determined the participants for the ad hoc group data communication based on the criteria specified by the MCData client 1 while initiating the ad hoc group data communication.\n4.\tThe MCData server 1 of the primary and MCData server 2 of the partner MCData systems continuously evaluates the criteria to monitor the list of users who meets or not meets the criteria for participating in the on-going ad hoc group data communication.\nThe given telecommunication figure depicts a 17.3.2 scenario where MCData server releases an ad hoc group data communication and stops the determination of ad hoc group data communication participants involving multiple MCData systems.\nFigure 7.17.3.2.5-1: MCData server releases an ad hoc group data communication and stops the determination of ad hoc group data communication participants involving multiple MCData systems\n1.\tThe MCData server 1 detects that the ad hoc group data communication which is ongoing is to be released e.g., due to hang time expiry, last participant leaving, second last participant leaving, initiator leaving, or minimum number of affiliated MCData group members are not present.\n2.\tThe MCData server 1 sends the ad hoc group data session release notification to MCData server 2 of the partner MCData system about the ad hoc group data communication release to stop determining the participants list by MCData server 2 of the partner MCData system.\n3a-3d.\tThe MCData server 1 sends ad hoc group data session release request to all the participants of the ad hoc group data communication.\n4a-4d.\tThe MCData clients notifies the user about the release of the ad hoc group data communication.\n5a-5d.\tAll the participants of the ad hoc group data communication receives the ad hoc group data session release request and sends the ad hoc group data session release response to the MCData server 1 of the primary MCData server.\nNOTE:\tThe ad hoc group data session request and response exchanged between MCData server 1 of primary MC system and MCData client 3/MCData client 4 will always traversal through the MCData server 2.\nFigure 7.17.3.2.6-1 below illustrates the MCData user modifying the ad hoc group data communication participants procedure involving multiple MCData systems.\nPre-conditions:\n1.\tAn MCData ad hoc group data communication is already in progress and the participants list provided by the originating MCData user while initiating the MCData ad hoc group data communication.\n2.\tThe participants of the MCData ad hoc group data communication belongs to the multiple MCData system.\n3.\tThe MCData user at MCData client 1 determines that the MCData client 3 needs to be invited to on-going ad hoc group data communication and MCData client 2 needs to be removed from the on-going ad hoc group data communication from the primary MCData system.\n4.\tThe MCData user at MCData client 1 determines that the MCData client 5 needs to be invited to on-going ad hoc group data communication and MCData client 4 needs to be removed from the on-going ad hoc group data communication from the partner MCData system.\n\n\nThe figure depicts a modified ad hoc group data communication scenario, where an authorized user modifies the group's communication participants. The modified group includes a base station (gNB), a user equipment (UE), and a network layer (NL). The figure illustrates the communication process, including the use of a network protocol (e.g., IP, TCP, or UDP) and the modification of the group's participants.\nFigure 7.17.3.2.6-1: Modification of ad hoc group data communication participants by an authorized user\n1.\tThe MCData client 1 sends the modify ad hoc group data session participants request to the MCData server 1 to remove both MCData client 2 and MCData client 4 from the on-going ad hoc group data communication and to add both MCData client 3 and MCData client 5 into on-going ad hoc group data communication.\n2.\tThe MCData server 1 verifies whether the MCData client 1 is authorized to add or remove (modify) the participants of the on-going ad hoc group data communication.\n3.\tThe MCData server 1 sends modify ad hoc group data session participants response to the MCData client 1.\n4.\tThe MCData server 1 determines that MCData client 1 has requested that MCData client 3 from the primary MC system be invited to an on-going ad hoc group data communication and successfully added to the data communication according to the procedure defined in clause 7.17.3.1.4.\n5.\tThe MCData server 1 determines that MCData client 1 has requested that MCData client 2 from the primary MC system be removed from the on-going ad hoc group data communication and successfully removed from data communication according to the procedure defined in clause 7.17.3.1.4.\n6.\tThe MCData server 1 determines that MCData client 1 has requested that MCData client 5 from the partner MC system be invited to an on-going ad hoc group data communication. The MCData server 1 sends the ad hoc group data session request to the MCData client 5.\n7.\tThe MCData client 5 notifies the user about the incoming ad hoc group data communication.\n8.\tThe MCData client 5 accepts the ad hoc group data session request and sends the ad hoc group data session response to the MCData server 1.\n9.\tThe on-going ad hoc group data communication is updated by adding MCData client 5 which is based on the modify participant list provided by the MCData client 1.\n10.\tThe MCData server 1 determines that MCData client 1 has requested that MCData client 4 from the partner MC system be removed from the on-going ad hoc group data communication. The MCData server 1 sends the ad hoc group data session leave request to the MCData client 4.\n11.\tThe MCData client 4 notifies the user of the ad hoc group data session leave request.\n12.\tThe MCData client 4 sends the ad hoc group data session leave response to the MCData server 1.\n13.\tThe on-going ad hoc group data communication is updated by removing MCData client 4, which is based on the modify participant list provided by the MCData client 1.\nNOTE:\tThe ad hoc group data communication request and response exchanged between MCData server 1 of primary MC system and MCData client 4/MCData client 5 will always traversal through the MCData server 2.\n14.\tThe MCData server 1 may notify the initiating MCData user of all the users who are added to the on-going ad hoc group data communication. This notification may be sent to the initiating MCData user by the MCData server more than once during the data communication when MCData users join or leave the ad hoc group data communication.\n15.\tThe MCData server 1 may notify the authorized participants about the change in the participants list of on-going ad hoc group data communication.\n",
                            "figures_meta_data": [],
                            "tables": []
                        },
                        {
                            "title": "7.17.4\tAd hoc group short data service data communication procedures",
                            "text_content": "This subclause contains procedures for ad hoc group short data service data communication across a single MCData system, and uses the common procedures defined in the subclause 7.17.3 in conjuction with the procedures defined in this subclause. Other common procedures specified in the 7.17.3 are used at any time after Ad hoc group short data service data communication establishment based on the need of it. These procedures are applicable for Group standalone short data service using media plane and Group short data service session as specified in the subclause 7.4.2.6 and subclause 7.4.2.7 respectively.\nTable 7.17.4.2-1 describes the information elements that are specific to short data service and are used along with the common information flows defined in the subclause 7.17.2 for the Ad hoc group short data service data communication. These information elements are included when an Ad hoc group data session request sent from the MCData client to the MCData server, between the MCData servers, and from the MCData server to the MCData client.\nTable 7.17.4.2-1: short data service specific\n\nThe initiation of Ad hoc group SDS session results in ad hoc group participants exchanging SDS data.\nThe procedure in figure 7.17.4.3.2-1 describes the case where an MCData user is initiating SDS data communication session with an MCData ad hoc group for exchanging SDS data transactions between the ad hoc group participants, with or without disposition request.\nPre-conditions:\n1.\tAs defined in the subclause 7.17.3.1.1.\n\nThe figure depicts a 5G ad hoc group session, illustrating the data communication session between the base station (gNB) and the user equipment (UE). The session is depicted with a 5G network, showing the signal propagation and the use of beamforming techniques to mitigate interference.\nFigure 7.17.4.3.2-1: Ad hoc group SDS data communication session\n1.\tUser at MCData client 1 initiate an ad hoc group data communication as specified in the subclause 7.17.3.1.1.\n2.\tMCData client 1 and the ad hoc group data session request accepted clients have successfully established media plane for data communication and either MCData client can transmit SDS data. The MCData data request may contain disposition request if indicated by the client sending data. If the payload is for MCData user consumption (e.g. is not application data, is not command instructions, etc.) then the SDS data receiving MCData users may be notified, otherwise those MCData users shall not be notified.\n3.\tIf MCData data disposition was requested by the user, then the SDS data receiving MCData client initiates a MCData data disposition notification for delivery, read reports to the disposition requesting user. The MCData data disposition notification from the receiving MCData clients may be stored by the MCData server for disposition history interrogation from authorized users.\n4.\tBased on the MCData user action or conditions to release, the established media plane for SDS data exchange is released as specified in the subclause 7.17.3.1.2.\nThe initiation of Ad hoc group SDS session results in ad hoc group participants exchanging SDS data.\nThe procedure in figure 7.17.4.4.2-1 describes the case where an MCData user is initiating SDS data communication session with an MCData ad hoc group for exchanging SDS data transactions between the ad hoc group participants, with or without disposition request.\nPre-conditions:\n1.\tAs defined in the Common Ad hoc group data communication procedures of subclause 7.17.3.2.1 or subclause 7.17.3.2.3.\nThe figure depicts a 17.4.4.2-1 Ad Hoc Group (AHCG) session in a data communication session, illustrating the various components and their interactions.\nFigure 7.17.4.4.2-1: Ad hoc group SDS data communication session\n1.\tUser at MCData client 1 initiate an ad hoc group data communication as specified in the subclause 7.17.3.2.1 or subclause 7.17.3.2.3.\n2.\tMCData client 1 and the ad hoc group data session request accepted clients have successfully established media plane for data communication and either MCData client can transmit SDS data. The MCData data request may contain disposition request if indicated by the client sending data. If the payload is for MCData user consumption (e.g. is not application data, is not command instructions, etc.) then the SDS data receiving MCData users may be notified, otherwise those MCData users shall not be notified.\n3.\tIf MCData data disposition was requested by the user, then the SDS data receiving MCData client initiates a MCData data disposition notification for delivery, read reports to the disposition requesting user. The MCData data disposition notification from the receiving MCData clients may be stored by the MCData server for disposition history interrogation from authorized users.\n4.\tBased on the MCData user action or conditions to release, the established media plane for SDS data exchange is released as specified in the subclause 7.17.3.2.2 or subclause 7.17.3.2.5.\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.17.4.2-1: short data service specific",
                                    "table number": 182,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        },
                        {
                            "title": "7.17.5\tAd hoc group file distribution communication procedures",
                            "text_content": "This subclause contains procedures for ad hoc group file distribution communication across a single MCData system, and uses the common procedures defined in the subclause 7.17.3 in conjuction with the procedures defined in this subclause. Other common procedures specified in the 7.17.3 are used at any time after Ad hoc group file distribution communication establishment based on the need of it.\nTable 7.17.5.2-1 describes the information elements that are specific to file distribution and are used along with the common information flows defined in the subclause 7.17.2 for the Ad hoc group short data service data communication. These information elements are included when an Ad hoc group data session request sent from the MCData client to the MCData server, between the MCData servers, and from the MCData server to the MCData client.\nTable 7.17.5.2-1: file distribution specific\n\nThe initiation of Ad hoc group standalone FD using media plane results in ad hoc group participants exchanging SDS data.\nThe procedure in figure 7.17.5.3.2-1 describes the case where an MCData user is initiating ad hoc group standalone data communication for sending file to multiple MCData users, with or without download completed report request.\nPre-conditions:\n1.\tAs defined in the Common Ad hoc group data communication procedures of subclause 7.17.3.1.1.\n\nThe figure depicts a 5G ad hoc group session, illustrating the data communication session between the base station (gNB) and the user equipment (UE). The session is characterized by the use of SDN principles, with the base station acting as a controller and the UE as a subscriber. The session includes various data communication sessions, such as the session ID, the session type, and the session duration.\nFigure 7.17.5.3.2-1: Ad hoc group SDS data communication session\n1.\tUser at MCData client 1 initiate an ad hoc group data communication as specified in the subclause 7.17.3.1.1.\n2.\tMCData client 1 and MCData server have successfully established media plane for file transmission and the MCData client 1 transmits the file data. MCData server distributes the file received from MCData client 1 to MCData clients 2 to n over the established media plane. Distribution of file can be via unicast or via MBMS bearer(s).\n3.\tThe dispositions notifications are handled as specified in the subclause 7.5.2.7.\n4.\tBased on the MCData user action or conditions to release, the established media plane for FD communication is released as specified in the subclause 7.17.3.1.2.\nThe initiation of Ad hoc group standalone FD using media plane results in ad hoc group participants exchanging FD data.\nThe procedure in figure 7.17.5.4.2-1 describes the case where an MCData user is initiating ad hoc group standalone data communication for sending file to multiple MCData users, with or without download completed report request.\nPre-conditions:\n1.\tAs defined in the Common Ad hoc group data communication procedures of subclause 7.17.3.2.1 or subclause 7.17.3.2.3.\nThe figure depicts an ad hoc group session in a 5G network, illustrating the data communication session between nodes. The session is represented by a series of nodes connected by a wireless link, with the nodes labeled as A, B, C, D, and E. The nodes are connected to a base station (gNB) through a wireless link, and the session is managed by a control point (CP) that coordinates the communication between the nodes. The session is characterized by the use of frequency division multiple access (FDMA) and frequency hopping (FH) techniques, which allow for efficient data transmission.\nFigure 7.17.5.4.2-1: Ad hoc group FD data communication session\n1.\tUser at MCData client 1 initiate an ad hoc group data communication as specified in the subclause 7.17.3.2.1 or subclause 7.17.3.2.3.\n2.\tMCData client 1 and MCData server have successfully established media plane for file transmission and the MCData client 1 transmits the file data. MCData server distributes the file received from MCData client 1 to MCData clients 2 to n over the established media plane. Distribution of file can be via unicast or via MBMS bearer(s).\n3.\tThe dispositions notifications are handled as specified in the subclause 7.5.2.7.\n4.\tBased on the MCData user action or conditions to release, the established media plane for FD communication is released as specified in the subclause 7.17.3.2.2 or subclause 7.17.3.2.5.\n\n",
                            "figures_meta_data": [],
                            "tables": [
                                {
                                    "description": "Table 7.17.5.2-1: file distribution specific",
                                    "table number": 183,
                                    "summary": "",
                                    "name": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "title": "A.1\tGeneral",
            "description": "This Annex provides information about the static data needed for configuration for the MCData service, which belongs to one of the following categories:\n-\tMCData UE configuration data (see subclause A.2);\n-\tMCData user profile configuration data (see subclause A.3);\n-\tMCData related group configuration data (see subclause A.4); and\n-\tMCData service configuration data (see subclause A.5).\nFor each configuration category, data is split between configuration data that is applicable to both on network and off network, configuration data that is applicable to on-network only, and configuration data that is applicable to off-network only. The configuration data in each configuration category corresponds to a single instance of the category type i.e. the MCData UE, MCData group, MCData user and MCData service configuration data refers to the information that will be stored against each MCData UE, MCData group, MCData user and MCData service. This means that the three separate tables (on-network and off-network, on-network only, off-network only) for each configuration category represent the complete set of data for each configuration data category element.\nThe columns in the tables have the following meanings:\n-\tReference: the reference of the corresponding requirement in 3GPP TS 22.282 [3] or 3GPP TS 22.280 [2] or the corresponding subclause from either the present document or the referenced document.\n-\tParameter description: A short definition of the semantics of the corresponding item of data, including denotation of the level of the parameter in the configuration hierarchy.\n-\tWhen it is not clear to which functional entities the parameter is configured, then one or more columns indicating this are provided where the following nomenclature is used:\n-\t\"Y\" to denote \"Yes\" i.e. the parameter denoted for the row needs to be configured to the functional entity denoted for the column.\n-\t\"N\" to denote \"No\" i.e. the parameter denoted for the row does not need to be configured to the functional entity denoted for the column.\nParameters within a set of configuration data have a level within a hierarchy that pertains only to that configuration data. The hierarchy of the configuration data is common across all three tables of on-network and off-network, on network only and off network only. The level of a parameter within the hierarchy of the configuration data is denoted by use of the character \">\" in the parameter description field within each table, one per level. Parameters that are at the top most level within the hierarchy have no \">\" character. Parameters that have one or more \">\" characters are child parameters of the first parameter above them that has one less \">\" character. Parent parameters are parameters that have one or more child parameters. Parent parameters act solely as a \"grouping\" of their child parameters and therefore do not contain an actual value themselves i.e. they are just containers for their child parameters.\nEach parameter that can be configured online shall only be configured through one online reference point. Each parameter that can be configured offline shall only be configured through one offline reference point. The most recent configuration data made available to the MCData UE shall always overwrite previous configuration data, irrespective of whether the configuration data was provided via the online or offline mechanism.\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.2\tMCData UE configuration data",
            "description": "The general aspects of UE configuration are specified in 3GPP TS 23.280 [5]. Data in tables A.2-1 and A.2-2 have to be known by the MCData UE after MCData authorization.\nData in table A.2-1 can be configured offline using the CSC-11 reference point. Table A.2-1 contains the UE configuration required to support the use of off-network MCData service.\nTable A.2-1: UE configuration data (on and off network)\n\nTable A.2-2: UE configuration data (on network)\n\n",
            "summary": "",
            "tables": [
                {
                    "description": "Table A.2-1: UE configuration data (on and off network)",
                    "table number": 184,
                    "summary": "",
                    "name": ""
                },
                {
                    "description": "Table A.2-2: UE configuration data (on network)",
                    "table number": 185,
                    "summary": "",
                    "name": ""
                }
            ],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.3\tMCData user profile configuration data",
            "description": "The general aspects of MC service user profile configuration data are specified in 3GPP TS 23.280 [5]. The MCData user profile configuration data is stored in the MCData user database. The MCData server obtains the MCData user profile configuration data from the MCData user database (MCData-2).\nTables A.3-1 and A.3-2 contain the MCData user profile configuration required to support the use of on-network MCData service. Tables A.3-1 and A.3-3 contain the MCData user profile configuration required to support the use of off-network MCData service. Data in table A.3-1 and A.3-3 can be configured offline using the CSC-11 reference point.\nTable A.3-1: MCData user profile configuration data (on and off network)\n\nTable A.3-2: MCData user profile configuration data (on network)\n\nTable A.3-3: MCData user profile configuration data (off network)\n\n",
            "summary": "",
            "tables": [
                {
                    "description": "Table A.3-1: MCData user profile configuration data (on and off network)",
                    "table number": 186,
                    "summary": "",
                    "name": ""
                },
                {
                    "description": "Table A.3-2: MCData user profile configuration data (on network)",
                    "table number": 187,
                    "summary": "",
                    "name": ""
                },
                {
                    "description": "Table A.3-3: MCData user profile configuration data (off network)",
                    "table number": 188,
                    "summary": "",
                    "name": ""
                }
            ],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.4\tMCData related Group configuration data",
            "description": "The general aspects of group configuration are specified in 3GPP TS 23.280 [5].\nParameters specified in table A.4-1 are child parameters of the \"MCData configuration\" parameter specified in table A.4-1 in 3GPP TS 23.280 [5]. Parameters specified in table A.4-2 are child parameters of the \"MCData configuration\" parameter specified in table A.4-2 in 3GPP TS 23.280 [5]. Parameters specified in table A.4-3 are child parameters of the \"MCData configuration\" parameter specified in table A.4-3 in 3GPP TS 23.280 [5].\nTable A.4-1: Group configuration data (on and off network)\n\nTable A.4-2: Group configuration data (on network)\n\nTable A.4-3: Group configuration data (off network)\n\n",
            "summary": "",
            "tables": [
                {
                    "description": "Table A.4-1: Group configuration data (on and off network)",
                    "table number": 189,
                    "summary": "",
                    "name": ""
                },
                {
                    "description": "Table A.4-2: Group configuration data (on network)",
                    "table number": 190,
                    "summary": "",
                    "name": ""
                },
                {
                    "description": "Table A.4-3: Group configuration data (off network)",
                    "table number": 191,
                    "summary": "",
                    "name": ""
                }
            ],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "A.5\tMCData service configuration data",
            "description": "The general aspects of MC service configuration are specified in 3GPP TS 23.280 [5]. The MCData service configuration data is stored in the MCData server.\nTables A.5-1 and A.5-2 describe the configuration data required to support the use of on-network MCData service. Tables A.5-1 and A.5-3 describe the configuration data required to support the use of off-network MCData service. Data in tables A.5-1 and A.5-3 can be configured offline using the CSC-11 reference point.\n\nTable A.5-1: MCData service configuration data (on and off network)\n\nTable A.5-2: MCData service configuration data (on network)\n\nTable A.5-3: MCData service configuration data (off network)\n\n",
            "summary": "",
            "tables": [
                {
                    "description": "Table A.5-1: MCData service configuration data (on and off network)",
                    "table number": 192,
                    "summary": "",
                    "name": ""
                },
                {
                    "description": "Table A.5-2: MCData service configuration data (on network)",
                    "table number": 193,
                    "summary": "",
                    "name": ""
                },
                {
                    "description": "Table A.5-3: MCData service configuration data (off network)",
                    "table number": 194,
                    "summary": "",
                    "name": ""
                }
            ],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "B.1\tOverview of transmission control process",
            "description": "The MCData server may receive several simultaneous requests for data transmission, which may be associated with different types of communication e.g. group, private, 1-to-many. For each communication, how the requests are processed may be different. The requests that are not authorized shall be rejected by the transmission control function. For message requests over the signalling control plane, the processing should be immediate and is delivered to the recipients either via unicast or broadcast. However, for message requests over the media plane, transmission control arbitration (see Annex B.2) will be necessary. Subsequent to transmission control arbitration, and subject to the policy e.g. store and forward, the data is either delivered directly to the recipient MCData user or stored in the network repository and a corresponding URL is delivered. The end-to-end transmission control process is illustrated in figure B.1-1.\nThe figure depicts a transmission control process, illustrating the steps taken by the network to ensure efficient and reliable communication. The process includes the establishment of a control plane, the establishment of a control data plane, and the establishment of a control information plane. The figure also shows the use of control signals to manage the network's state and ensure smooth operation.\nFigure B.1-1: Transmission control process\n",
            "summary": "",
            "tables": [],
            "figures_meta_data": [],
            "subsections": []
        },
        {
            "title": "B.2\tTransmission control arbitration",
            "description": "The transmission control arbitration is a central function of the transmission control process and is implementation specific. In a typical deployment, multiple or simultaneous requests can be received at the transmission control arbitration function. Each of these requests may be categorized into different request types with different queuing priorities, and therefore each request type will be maintained with separate queues. Each request shall not be present in more than one queue at any given time. The queue types and the order of queues may be configured by the MCData administrator, as described below.\n-\tTransmission control queue: It is the primary queue from which the request is processed for transmission e.g. emergency communication requests may result in this queue and processed at the highest priority.\n-\tCommunication type queue: This queue may be sorted in the order of the communication type associated with the request. For example, the group communication requests may always take precedence over one-to-many or private communication requests.\n-\tStatic attribute queue: This queue may be formed based on the static attributes associated with the request e.g. group priority, user priority, which may be pre-configured by the MCData administrator.\n-\tDynamic attribute queue: This queue may be formed based on the dynamic attributes associated with the request e.g. location of the sending user, content size, etc.\nThe figure in subclause 7.13.1 illustrates the high-level structure of the MCData message store where objects are stored in a flat structure in the user storage area. This flat data structure provides maximum flexibility for UI implementation to present stored objects to the user. However, a folder hierarchy structure provides a better visual presentation of the stored objects to the MCData user.\nThe figure depicts a user message storage area, which is a crucial component of a 5G network. It illustrates the various layers of the network, including the user equipment (UE), base station (gNB), and the user message storage area. The figure highlights the importance of redundancy and failover mechanisms to ensure reliable communication.\nFigure D-1: User message storage area example\nIn figure D-1 the MCData user 1 message storage area in the MCData message store is constructed in folder hierarchical way. A system default folder, Inbox, is configured to receive all new objects coming from active communications. The MCData user 1 creates Group 1, Group 2 and Group N folders to store communication history for different group communications that he is a member of. Once the Group 1 folder is created the MCData user 1 can then move all the objects related to Group 1 communication from the Inbox to the Group 1 folder. The MCData user 1 can also create child folders in Group 1 folder to further divide the stored objects into different groupings such as with different subjects, Subject 1 and Subject 2. Similarly, the MCData user 1 creates child folders, Date 1 and Date 2, in Group N folder to store communication history in group N occurred in different dates. With this hierarchical folder structure, the MCData user 1 can browse his user account in the MCData message store interactively and navigate to the information he would like to see. For example, the MCData user 1 can start with the top-level root folder and traverse down the folder hierarchy to reach to Date 2 folder and see the communication history of group N in that particular date.\n\n",
            "summary": "",
            "tables": [
                {
                    "description": "",
                    "table number": 195,
                    "summary": "",
                    "name": ""
                }
            ],
            "figures_meta_data": [],
            "subsections": []
        }
    ]
}